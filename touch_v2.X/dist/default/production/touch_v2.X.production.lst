

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb  7 00:47:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=4,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=4,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=4,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=4,class=CODE,delta=1
   191                           	psect	text169,global,reloc=4,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=4,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	text184,global,reloc=4,class=CODE,delta=1
   207                           	psect	text185,global,reloc=4,class=CODE,delta=1
   208                           	psect	text186,global,reloc=4,class=CODE,delta=1
   209                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   210                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   213                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   214  0000                     
   215                           ; Version 2.10
   216                           ; Generated 31/07/2019 GMT
   217                           ; 
   218                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   219                           ; All rights reserved.
   220                           ; 
   221                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   222                           ; 
   223                           ; Redistribution and use in source and binary forms, with or without modification, are
   224                           ; permitted provided that the following conditions are met:
   225                           ; 
   226                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   227                           ;        conditions and the following disclaimer.
   228                           ; 
   229                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   230                           ;        of conditions and the following disclaimer in the documentation and/or other
   231                           ;        materials provided with the distribution.
   232                           ; 
   233                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   234                           ;        software without specific prior written permission.
   235                           ; 
   236                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   237                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   238                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   239                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   240                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   241                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   242                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   243                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   244                           ; 
   245                           ; 
   246                           ; Code-generator required, PIC18F57K42 Definitions
   247                           ; 
   248                           ; SFR Addresses
   249  0000                     
   250 ;;_main$3790	offset	0
   251 ;;_main$3786	offset	2
   252 ;;_esr_temp	offset	4
   253 ;;_i_esr	offset	8
   254 ;;_shape	offset	10
   255 ;;_inp_index	offset	11
   256 ;;_k	offset	12
   257 ;;_j	offset	13
   258 ;;_i	offset	14
   259 ;;_mode	offset	15
   260 ;;_i_ror	offset	16
   261 ;;_s	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_fsm	offset=-1 (param)
   277 ;;_channel	offset=-1 (param)
   278 ;;_mode	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_cmd	offset=-1 (param)
   281 ;;_x	offset	0
   282 ;;_c	offset	0
   283 ;;_shape	offset=-1 (param)
   284 ;;_reset	offset=-2 (param)
   285 ;;_i	offset=-1 (param)
   286 ;;_a200	offset	0
   287 ;;_a100	offset	2
   288 ;;_mode	offset=-1 (param)
   289 ;;_value	offset=-2 (param)
   290 ;;_window	offset=-4 (param)
   291 ;;_standard	offset=-6 (param)
   292 ;;_i	offset	0
   293 ;;_h	offset=-2 (param)
   294 ;;_flipper	offset=-1 (param)
   295 ;;_f	offset	0
   296 ;;_ap	offset	6
   297 ;;_s	offset=-3 (param)
   298 ;;_fmt	offset=-5 (param)
   299 ;;_line	offset=-1 (param)
   300 ;;_vterm	offset=-2 (param)
   301 ;;_numMilliseconds	offset=-2 (param)
   302 ;;_vterm	offset=-1 (param)
   303 ;;_row	offset	0
   304 ;;_r	offset=-1 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_strPtr	offset=-4 (param)
   307 ;;_strPtr	offset=-1 (param)
   308 ;;_delay	offset=-4 (param)
   309 ;;_strPtr	offset=-1 (param)
   310 ;;_strPtr	offset=-2 (param)
   311 ;;__this	offset=-2 (param)
   312 ;;_clearBuffer	offset=-3 (param)
   313 ;;_s	offset	0
   314 ;;_k	offset	2
   315 ;;_dest	offset=-2 (param)
   316 ;;_c	offset=-4 (param)
   317 ;;_n	offset=-6 (param)
   318 ;;_ap	offset	0
   319 ;;_fmt	offset=-3 (param)
   320 ;;_cfmt	offset	0
   321 ;;_fp	offset=-2 (param)
   322 ;;_fmt	offset=-4 (param)
   323 ;;_ap	offset=-6 (param)
   324 ;;_vfpfcnvrt$5908	offset	0
   325 ;;_vfpfcnvrt$5919	offset	2
   326 ;;_vfpfcnvrt$5907	offset	4
   327 ;;_llu	offset	6
   328 ;;_ll	offset	14
   329 ;;_f	offset	22
   330 ;;_ct	offset	26
   331 ;;_cp	offset	29
   332 ;;_c	offset	31
   333 ;;_fp	offset=-2 (param)
   334 ;;_fmt	offset=-4 (param)
   335 ;;_ap	offset=-6 (param)
   336 ;;_xtoa$5893	offset	0
   337 ;;_xtoa$5892	offset	2
   338 ;;_n	offset	4
   339 ;;_c	offset	12
   340 ;;_i	offset	14
   341 ;;_w	offset	16
   342 ;;_p	offset	18
   343 ;;_fp	offset=-2 (param)
   344 ;;_d	offset=-10 (param)
   345 ;;_x	offset=-11 (param)
   346 ;;_toupper$6699	offset	0
   347 ;;_c	offset=-2 (param)
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_n	offset	0
   351 ;;_i	offset	8
   352 ;;_w	offset	10
   353 ;;_p	offset	12
   354 ;;_fp	offset=-2 (param)
   355 ;;_d	offset=-10 (param)
   356 ;;_counter	offset	0
   357 ;;_dividend	offset=-8 (param)
   358 ;;_divisor	offset=-16 (param)
   359 ;;_quotient	offset	0
   360 ;;_counter	offset	8
   361 ;;_dividend	offset=-8 (param)
   362 ;;_divisor	offset=-16 (param)
   363 ;;_r	offset	0
   364 ;;_l	offset	2
   365 ;;__l	offset=-2 (param)
   366 ;;__r	offset=-4 (param)
   367 ;;_n	offset=-6 (param)
   368 ;;_nuls	offset	0
   369 ;;_l	offset	7
   370 ;;_p	offset	9
   371 ;;_cp	offset	11
   372 ;;_w	offset	13
   373 ;;_i	offset	15
   374 ;;_fp	offset=-2 (param)
   375 ;;_s	offset=-4 (param)
   376 ;;_efgtoa$5865	offset	0
   377 ;;_efgtoa$5864	offset	2
   378 ;;_efgtoa$5863	offset	4
   379 ;;_efgtoa$5859	offset	6
   380 ;;_efgtoa$5855	offset	8
   381 ;;_efgtoa$5854	offset	10
   382 ;;_u	offset	12
   383 ;;_g	offset	16
   384 ;;_l	offset	20
   385 ;;_h	offset	24
   386 ;;_ou	offset	28
   387 ;;_n	offset	32
   388 ;;_e	offset	34
   389 ;;_i	offset	36
   390 ;;_w	offset	38
   391 ;;_p	offset	40
   392 ;;_sign	offset	42
   393 ;;_d	offset	44
   394 ;;_ne	offset	46
   395 ;;_m	offset	48
   396 ;;_pp	offset	50
   397 ;;_t	offset	52
   398 ;;_mode	offset	54
   399 ;;_nmode	offset	55
   400 ;;_fp	offset=-2 (param)
   401 ;;_f	offset=-6 (param)
   402 ;;_c	offset=-7 (param)
   403 ;;_tolower$6684	offset	0
   404 ;;_c	offset=-2 (param)
   405 ;;_c	offset=-2 (param)
   406 ;;_d	offset	0
   407 ;;_s	offset	2
   408 ;;_dest	offset=-2 (param)
   409 ;;_src	offset=-4 (param)
   410 ;;_u	offset	0
   411 ;;_m	offset	4
   412 ;;_e	offset	8
   413 ;;_x	offset=-4 (param)
   414 ;;_u	offset	0
   415 ;;_e	offset	4
   416 ;;_x	offset=-4 (param)
   417 ;;_exp1	offset	0
   418 ;;_sign1	offset	1
   419 ;;_f1	offset=-4 (param)
   420 ;;_f1	offset=-4 (param)
   421 ;;_ff1	offset=-4 (param)
   422 ;;_ff2	offset=-8 (param)
   423 ;;_sign	offset	0
   424 ;;_counter	offset	1
   425 ;;_dividend	offset=-2 (param)
   426 ;;_divisor	offset=-4 (param)
   427 ;;_quotient	offset	0
   428 ;;_sign	offset	2
   429 ;;_counter	offset	3
   430 ;;_dividend	offset=-2 (param)
   431 ;;_divisor	offset=-4 (param)
   432 ;;_dtoa$5831	offset	0
   433 ;;_n	offset	2
   434 ;;_i	offset	10
   435 ;;_s	offset	12
   436 ;;_w	offset	14
   437 ;;_p	offset	16
   438 ;;_fp	offset=-2 (param)
   439 ;;_d	offset=-10 (param)
   440 ;;_a	offset=-2 (param)
   441 ;;_sign	offset	0
   442 ;;_counter	offset	1
   443 ;;_dividend	offset=-8 (param)
   444 ;;_divisor	offset=-16 (param)
   445 ;;_quotient	offset	0
   446 ;;_sign	offset	8
   447 ;;_counter	offset	9
   448 ;;_dividend	offset=-8 (param)
   449 ;;_divisor	offset=-16 (param)
   450 ;;_w	offset	0
   451 ;;_fp	offset=-2 (param)
   452 ;;_c	offset=-3 (param)
   453 ;;_w	offset	0
   454 ;;_i	offset	2
   455 ;;_fp	offset=-2 (param)
   456 ;;_buf	offset=-4 (param)
   457 ;;_p	offset=-6 (param)
   458 ;;_a	offset	0
   459 ;;_s	offset=-2 (param)
   460 ;;_i	offset	0
   461 ;;_c	offset	2
   462 ;;_s	offset=-2 (param)
   463 ;;_fp	offset=-4 (param)
   464 ;;_c	offset=-2 (param)
   465 ;;_fp	offset=-4 (param)
   466 ;;_c	offset=-1 (param)
   467 ;;__this	offset=-2 (param)
   468 ;;_c	offset=-3 (param)
   469 ;;_atoi$6415	offset	0
   470 ;;_atoi$6413	offset	2
   471 ;;_atoi$6414	offset	4
   472 ;;_n	offset	5
   473 ;;_neg	offset	7
   474 ;;_s	offset=-2 (param)
   475 ;;_isspace$6464	offset	0
   476 ;;_c	offset=-2 (param)
   477 ;;_c	offset=-2 (param)
   478 ;;_vterm	offset=-1 (param)
   479 ;;_new_response_info	offset=-1 (param)
   480 ;;_new_response_info	offset=-1 (param)
   481 ;;_level	offset=-2 (param)
   482 ;;_dutyValue	offset=-2 (param)
   483 ;;_timer	offset=-1 (param)
   484 ;;_timer	offset=-1 (param)
   485 ;;_count	offset=-3 (param)
   486 ;;_h	offset=-2 (param)
   487 ;;_u	offset	0
   488 ;;_x	offset=-4 (param)
   489 ;;_chan	offset=-1 (param)
   490 ;;_to_what	offset=-2 (param)
   491 ;;_u	offset	0
   492 ;;_s	offset=-2 (param)
   493 ;;_index	offset=-1 (param)
   494 ;;_arg	offset	0
   495 ;;_exp	offset	4
   496 ;;_sign	offset=-1 (param)
   497 ;;_val	offset=-5 (param)
   498 ;;_grs	offset	0
   499 ;;_rem	offset	4
   500 ;;_new_exp	offset	8
   501 ;;_aexp	offset	10
   502 ;;_bexp	offset	11
   503 ;;_sign	offset	12
   504 ;;_b	offset=-4 (param)
   505 ;;_a	offset=-8 (param)
   506 ;;_ff1	offset=-4 (param)
   507 ;;_ff2	offset=-8 (param)
   508 ;;_lp_speed	offset	0
   509 ;;_new	offset=-4 (param)
   510 ;;_bn	offset=-5 (param)
   511 ;;_slow	offset=-6 (param)
   512 ;;_b	offset=-4 (param)
   513 ;;_a	offset=-8 (param)
   514 ;;_grs	offset	0
   515 ;;_bexp	offset	1
   516 ;;_aexp	offset	2
   517 ;;_signs	offset	3
   518 ;;_b	offset=-4 (param)
   519 ;;_a	offset=-8 (param)
   520 ;;_prod	offset	0
   521 ;;_grs	offset	4
   522 ;;_temp	offset	8
   523 ;;_bexp	offset	10
   524 ;;_aexp	offset	11
   525 ;;_sign	offset	12
   526 ;;_b	offset=-4 (param)
   527 ;;_a	offset=-8 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_InterruptHandler	offset=-3 (param)
   530 ;;_InterruptHandler	offset=-3 (param)
   531 ;;_InterruptHandler	offset=-3 (param)
   532 ;;_InterruptHandler	offset=-3 (param)
   533 ;;_InterruptHandler	offset=-3 (param)
   534 ;;_state	offset	0
   535 ;;_InterruptHandler	offset=-3 (param)
   536 ;;_InterruptHandler	offset=-3 (param)
   537 ;;_InterruptHandler	offset=-3 (param)
   538 ;;_InterruptHandler	offset=-3 (param)
   539 ;;_i	offset	0
   540 ;;_sw_value	offset	1
   541 ;;_timerVal	offset=-2 (param)
   542 ;;_light	offset	0
   543 ;;_mode	offset=-1 (param)
   544 ;;_chan	offset=-1 (param)
   545 ;;_to_what	offset=-2 (param)
   546 ;;_u	offset	0
   547 ;;_s	offset=-2 (param)
   548 ;;_index	offset=-1 (param)
   549 ;;_arg	offset	0
   550 ;;_exp	offset	4
   551 ;;_sign	offset=-1 (param)
   552 ;;_val	offset=-5 (param)
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_grs	offset	0
   556 ;;_bexp	offset	1
   557 ;;_aexp	offset	2
   558 ;;_signs	offset	3
   559 ;;_b	offset=-4 (param)
   560 ;;_a	offset=-8 (param)
   561 ;;_prod	offset	0
   562 ;;_grs	offset	4
   563 ;;_temp	offset	8
   564 ;;_bexp	offset	10
   565 ;;_aexp	offset	11
   566 ;;_sign	offset	12
   567 ;;_b	offset=-4 (param)
   568 ;;_a	offset=-8 (param)
   569 ;;_grs	offset	0
   570 ;;_rem	offset	4
   571 ;;_new_exp	offset	8
   572 ;;_aexp	offset	10
   573 ;;_bexp	offset	11
   574 ;;_sign	offset	12
   575 ;;_b	offset=-4 (param)
   576 ;;_a	offset=-8 (param)
   577 ;;_ff1	offset=-4 (param)
   578 ;;_ff2	offset=-8 (param)
   579 ;;_timerVal	offset=-2 (param)
   580 ;;_adj	offset	0
   581 ;;_log_ptr	offset	4
   582 ;;_f	offset	0
   583 ;;_ap	offset	6
   584 ;;_s	offset=-3 (param)
   585 ;;_fmt	offset=-5 (param)
   586 ;;_cfmt	offset	0
   587 ;;_fp	offset=-2 (param)
   588 ;;_fmt	offset=-4 (param)
   589 ;;_ap	offset=-6 (param)
   590 ;;_vfpfcnvrt$5908	offset	0
   591 ;;_vfpfcnvrt$5919	offset	2
   592 ;;_vfpfcnvrt$5907	offset	4
   593 ;;_llu	offset	6
   594 ;;_ll	offset	14
   595 ;;_f	offset	22
   596 ;;_ct	offset	26
   597 ;;_cp	offset	29
   598 ;;_c	offset	31
   599 ;;_fp	offset=-2 (param)
   600 ;;_fmt	offset=-4 (param)
   601 ;;_ap	offset=-6 (param)
   602 ;;_xtoa$5893	offset	0
   603 ;;_xtoa$5892	offset	2
   604 ;;_n	offset	4
   605 ;;_c	offset	12
   606 ;;_i	offset	14
   607 ;;_w	offset	16
   608 ;;_p	offset	18
   609 ;;_fp	offset=-2 (param)
   610 ;;_d	offset=-10 (param)
   611 ;;_x	offset=-11 (param)
   612 ;;_toupper$6699	offset	0
   613 ;;_c	offset=-2 (param)
   614 ;;_c	offset=-2 (param)
   615 ;;_c	offset=-2 (param)
   616 ;;_n	offset	0
   617 ;;_i	offset	8
   618 ;;_w	offset	10
   619 ;;_p	offset	12
   620 ;;_fp	offset=-2 (param)
   621 ;;_d	offset=-10 (param)
   622 ;;_counter	offset	0
   623 ;;_dividend	offset=-8 (param)
   624 ;;_divisor	offset=-16 (param)
   625 ;;_quotient	offset	0
   626 ;;_counter	offset	8
   627 ;;_dividend	offset=-8 (param)
   628 ;;_divisor	offset=-16 (param)
   629 ;;_r	offset	0
   630 ;;_l	offset	2
   631 ;;__l	offset=-2 (param)
   632 ;;__r	offset=-4 (param)
   633 ;;_n	offset=-6 (param)
   634 ;;_nuls	offset	0
   635 ;;_l	offset	7
   636 ;;_p	offset	9
   637 ;;_cp	offset	11
   638 ;;_w	offset	13
   639 ;;_i	offset	15
   640 ;;_fp	offset=-2 (param)
   641 ;;_s	offset=-4 (param)
   642 ;;_efgtoa$5865	offset	0
   643 ;;_efgtoa$5864	offset	2
   644 ;;_efgtoa$5863	offset	4
   645 ;;_efgtoa$5859	offset	6
   646 ;;_efgtoa$5855	offset	8
   647 ;;_efgtoa$5854	offset	10
   648 ;;_u	offset	12
   649 ;;_g	offset	16
   650 ;;_l	offset	20
   651 ;;_h	offset	24
   652 ;;_ou	offset	28
   653 ;;_n	offset	32
   654 ;;_e	offset	34
   655 ;;_i	offset	36
   656 ;;_w	offset	38
   657 ;;_p	offset	40
   658 ;;_sign	offset	42
   659 ;;_d	offset	44
   660 ;;_ne	offset	46
   661 ;;_m	offset	48
   662 ;;_pp	offset	50
   663 ;;_t	offset	52
   664 ;;_mode	offset	54
   665 ;;_nmode	offset	55
   666 ;;_fp	offset=-2 (param)
   667 ;;_f	offset=-6 (param)
   668 ;;_c	offset=-7 (param)
   669 ;;_tolower$6684	offset	0
   670 ;;_c	offset=-2 (param)
   671 ;;_c	offset=-2 (param)
   672 ;;_d	offset	0
   673 ;;_s	offset	2
   674 ;;_dest	offset=-2 (param)
   675 ;;_src	offset=-4 (param)
   676 ;;_u	offset	0
   677 ;;_m	offset	4
   678 ;;_e	offset	8
   679 ;;_x	offset=-4 (param)
   680 ;;_u	offset	0
   681 ;;_e	offset	4
   682 ;;_x	offset=-4 (param)
   683 ;;_exp1	offset	0
   684 ;;_sign1	offset	1
   685 ;;_f1	offset=-4 (param)
   686 ;;_f1	offset=-4 (param)
   687 ;;_ff1	offset=-4 (param)
   688 ;;_ff2	offset=-8 (param)
   689 ;;_sign	offset	0
   690 ;;_counter	offset	1
   691 ;;_dividend	offset=-2 (param)
   692 ;;_divisor	offset=-4 (param)
   693 ;;_quotient	offset	0
   694 ;;_sign	offset	2
   695 ;;_counter	offset	3
   696 ;;_dividend	offset=-2 (param)
   697 ;;_divisor	offset=-4 (param)
   698 ;;_dtoa$5831	offset	0
   699 ;;_n	offset	2
   700 ;;_i	offset	10
   701 ;;_s	offset	12
   702 ;;_w	offset	14
   703 ;;_p	offset	16
   704 ;;_fp	offset=-2 (param)
   705 ;;_d	offset=-10 (param)
   706 ;;_a	offset=-2 (param)
   707 ;;_sign	offset	0
   708 ;;_counter	offset	1
   709 ;;_dividend	offset=-8 (param)
   710 ;;_divisor	offset=-16 (param)
   711 ;;_quotient	offset	0
   712 ;;_sign	offset	8
   713 ;;_counter	offset	9
   714 ;;_dividend	offset=-8 (param)
   715 ;;_divisor	offset=-16 (param)
   716 ;;_w	offset	0
   717 ;;_fp	offset=-2 (param)
   718 ;;_c	offset=-3 (param)
   719 ;;_w	offset	0
   720 ;;_i	offset	2
   721 ;;_fp	offset=-2 (param)
   722 ;;_buf	offset=-4 (param)
   723 ;;_p	offset=-6 (param)
   724 ;;_a	offset	0
   725 ;;_s	offset=-2 (param)
   726 ;;_i	offset	0
   727 ;;_c	offset	2
   728 ;;_s	offset=-2 (param)
   729 ;;_fp	offset=-4 (param)
   730 ;;_c	offset=-2 (param)
   731 ;;_fp	offset=-4 (param)
   732 ;;_c	offset=-1 (param)
   733 ;;__this	offset=-2 (param)
   734 ;;_c	offset=-3 (param)
   735 ;;_atoi$6415	offset	0
   736 ;;_atoi$6413	offset	2
   737 ;;_atoi$6414	offset	4
   738 ;;_n	offset	5
   739 ;;_neg	offset	7
   740 ;;_s	offset=-2 (param)
   741 ;;_isspace$6464	offset	0
   742 ;;_c	offset=-2 (param)
   743 ;;_c	offset=-2 (param)
   744 ;;_dsize	offset=-2 (param)
   745 ;;_u	offset	0
   746 ;;_x	offset=-4 (param)
   747 ;;_f1p	offset=-2 (param)
   748 ;;_f2	offset=-6 (param)
   749 ;;_timer	offset=-1 (param)
   750 ;;_count	offset=-3 (param)
   751 ;;_channel	offset=-1 (param)
   752 ;;_i	offset	0
   753                           
   754                           	psect	idataBIGRAM
   755  016B8E                     __pidataBIGRAM:
   756                           	opt callstack 0
   757                           
   758                           ;initializer for _port_data
   759  016B8E  FF                 	db	255
   760  016B8F  00                 	db	0
   761  016B90  FF                 	db	255
   762  016B91  00                 	db	0
   763  016B92  FF                 	db	255
   764  016B93  00                 	db	0
   765  016B94  FF                 	db	255
   766  016B95  00                 	db	0
   767  016B96  FF                 	db	255
   768  016B97  00                 	db	0
   769  016B98  FF                 	db	255
   770  016B99  00                 	db	0
   771  016B9A  FF                 	db	255
   772  016B9B  00                 	db	0
   773  016B9C  FF                 	db	255
   774  016B9D  00                 	db	0
   775  016B9E  00                 	db	0
   776  016B9F  00                 	db	0
   777  016BA0  00                 	db	0
   778  016BA1  00                 	db	0
   779  016BA2  00                 	db	0
   780  016BA3  00                 	db	0
   781  016BA4  00                 	db	0
   782  016BA5  00                 	db	0
   783  016BA6  00                 	db	0
   784  016BA7  00                 	db	0
   785  016BA8  00                 	db	0
   786  016BA9  00                 	db	0
   787  016BAA  00                 	db	0
   788  016BAB  00                 	db	0
   789  016BAC  00                 	db	0
   790  016BAD  00                 	db	0
   791  016BAE  00                 	db	0
   792  016BAF  00                 	db	0
   793  016BB0  00                 	db	0
   794  016BB1  00                 	db	0
   795  016BB2  00                 	db	0
   796  016BB3  00                 	db	0
   797  016BB4  00                 	db	0
   798  016BB5  00                 	db	0
   799  016BB6  00                 	db	0
   800  016BB7  00                 	db	0
   801  016BB8  00                 	db	0
   802  016BB9  00                 	db	0
   803  016BBA  00                 	db	0
   804  016BBB  00                 	db	0
   805  016BBC  00                 	db	0
   806  016BBD  00                 	db	0
   807  016BBE  00                 	db	0
   808  016BBF  00                 	db	0
   809  016BC0  00                 	db	0
   810  016BC1  00                 	db	0
   811  016BC2  00                 	db	0
   812  016BC3  00                 	db	0
   813  016BC4  00                 	db	0
   814  016BC5  00                 	db	0
   815  016BC6  00                 	db	0
   816  016BC7  00                 	db	0
   817  016BC8  00                 	db	0
   818  016BC9  00                 	db	0
   819  016BCA  00                 	db	0
   820  016BCB  00                 	db	0
   821  016BCC  00                 	db	0
   822  016BCD  00                 	db	0
   823  016BCE  00                 	db	0
   824  016BCF  00                 	db	0
   825  016BD0  00                 	db	0
   826  016BD1  00                 	db	0
   827  016BD2  00                 	db	0
   828  016BD3  00                 	db	0
   829  016BD4  00                 	db	0
   830  016BD5  00                 	db	0
   831  016BD6  00                 	db	0
   832  016BD7  00                 	db	0
   833  016BD8  00                 	db	0
   834  016BD9  00                 	db	0
   835  016BDA  00                 	db	0
   836  016BDB  00                 	db	0
   837  016BDC  00                 	db	0
   838  016BDD  00                 	db	0
   839  016BDE  00                 	db	0
   840  016BDF  00                 	db	0
   841  016BE0  00                 	db	0
   842  016BE1  00                 	db	0
   843  016BE2  00                 	db	0
   844  016BE3  00                 	db	0
   845  016BE4  00                 	db	0
   846  016BE5  00                 	db	0
   847  016BE6  00                 	db	0
   848  016BE7  00                 	db	0
   849  016BE8  00                 	db	0
   850  016BE9  00                 	db	0
   851  016BEA  00                 	db	0
   852  016BEB  00                 	db	0
   853  016BEC  00                 	db	0
   854  016BED  00                 	db	0
   855  016BEE  00                 	db	0
   856  016BEF  00                 	db	0
   857  016BF0  00                 	db	0
   858  016BF1  00                 	db	0
   859  016BF2  00                 	db	0
   860  016BF3  00                 	db	0
   861  016BF4  00                 	db	0
   862  016BF5  00                 	db	0
   863  016BF6  00                 	db	0
   864  016BF7  00                 	db	0
   865  016BF8  00                 	db	0
   866  016BF9  00                 	db	0
   867  016BFA  00                 	db	0
   868  016BFB  00                 	db	0
   869  016BFC  00                 	db	0
   870  016BFD  00                 	db	0
   871  016BFE  00                 	db	0
   872  016BFF  00                 	db	0
   873  016C00  00                 	db	0
   874  016C01  00                 	db	0
   875  016C02  00                 	db	0
   876  016C03  00                 	db	0
   877  016C04  00                 	db	0
   878  016C05  00                 	db	0
   879  016C06  00                 	db	0
   880  016C07  00                 	db	0
   881  016C08  00                 	db	0
   882  016C09  00                 	db	0
   883  016C0A  00                 	db	0
   884  016C0B  00                 	db	0
   885  016C0C  00                 	db	0
   886  016C0D  00                 	db	0
   887  016C0E  00                 	db	0
   888  016C0F  00                 	db	0
   889  016C10  00                 	db	0
   890  016C11  00                 	db	0
   891  016C12  00                 	db	0
   892  016C13  00                 	db	0
   893  016C14  00                 	db	0
   894  016C15  00                 	db	0
   895  016C16  00                 	db	0
   896  016C17  00                 	db	0
   897  016C18  00                 	db	0
   898  016C19  00                 	db	0
   899  016C1A  00                 	db	0
   900  016C1B  00                 	db	0
   901  016C1C  00                 	db	0
   902  016C1D  00                 	db	0
   903  016C1E  00                 	db	0
   904  016C1F  00                 	db	0
   905  016C20  00                 	db	0
   906  016C21  00                 	db	0
   907  016C22  00                 	db	0
   908  016C23  00                 	db	0
   909  016C24  00                 	db	0
   910  016C25  00                 	db	0
   911  016C26  00                 	db	0
   912  016C27  00                 	db	0
   913  016C28  00                 	db	0
   914  016C29  00                 	db	0
   915  016C2A  00                 	db	0
   916  016C2B  00                 	db	0
   917  016C2C  00                 	db	0
   918  016C2D  00                 	db	0
   919  016C2E  00                 	db	0
   920  016C2F  00                 	db	0
   921  016C30  00                 	db	0
   922  016C31  00                 	db	0
   923  016C32  00                 	db	0
   924  016C33  00                 	db	0
   925  016C34  00                 	db	0
   926  016C35  00                 	db	0
   927  016C36  00                 	db	0
   928  016C37  00                 	db	0
   929  016C38  00                 	db	0
   930  016C39  00                 	db	0
   931  016C3A  00                 	db	0
   932  016C3B  00                 	db	0
   933  016C3C  00                 	db	0
   934  016C3D  00                 	db	0
   935  016C3E  00                 	db	0
   936  016C3F  00                 	db	0
   937  016C40  00                 	db	0
   938  016C41  00                 	db	0
   939  016C42  00                 	db	0
   940  016C43  00                 	db	0
   941  016C44  00                 	db	0
   942  016C45  00                 	db	0
   943  016C46  00                 	db	0
   944  016C47  00                 	db	0
   945  016C48  00                 	db	0
   946  016C49  00                 	db	0
   947  016C4A  00                 	db	0
   948  016C4B  00                 	db	0
   949  016C4C  00                 	db	0
   950  016C4D  00                 	db	0
   951  016C4E  00                 	db	0
   952  016C4F  00                 	db	0
   953  016C50  00                 	db	0
   954  016C51  00                 	db	0
   955  016C52  00                 	db	0
   956  016C53  00                 	db	0
   957  016C54  00                 	db	0
   958  016C55  00                 	db	0
   959  016C56  00                 	db	0
   960  016C57  00                 	db	0
   961  016C58  00                 	db	0
   962  016C59  00                 	db	0
   963  016C5A  00                 	db	0
   964  016C5B  00                 	db	0
   965  016C5C  00                 	db	0
   966  016C5D  00                 	db	0
   967  016C5E  00                 	db	0
   968  016C5F  00                 	db	0
   969  016C60  00                 	db	0
   970  016C61  00                 	db	0
   971  016C62  00                 	db	0
   972  016C63  00                 	db	0
   973  016C64  00                 	db	0
   974  016C65  00                 	db	0
   975  016C66  00                 	db	0
   976  016C67  00                 	db	0
   977  016C68  00                 	db	0
   978  016C69  00                 	db	0
   979  016C6A  00                 	db	0
   980  016C6B  00                 	db	0
   981  016C6C  00                 	db	0
   982  016C6D  00                 	db	0
   983  016C6E  00                 	db	0
   984  016C6F  00                 	db	0
   985  016C70  00                 	db	0
   986  016C71  00                 	db	0
   987  016C72  00                 	db	0
   988  016C73  00                 	db	0
   989  016C74  00                 	db	0
   990  016C75  00                 	db	0
   991  016C76  00                 	db	0
   992  016C77  00                 	db	0
   993  016C78  00                 	db	0
   994  016C79  00                 	db	0
   995  016C7A  00                 	db	0
   996  016C7B  00                 	db	0
   997  016C7C  00                 	db	0
   998  016C7D  00                 	db	0
   999  016C7E  00                 	db	0
  1000  016C7F  00                 	db	0
  1001  016C80  00                 	db	0
  1002  016C81  00                 	db	0
  1003  016C82  00                 	db	0
  1004  016C83  00                 	db	0
  1005  016C84  00                 	db	0
  1006  016C85  00                 	db	0
  1007  016C86  00                 	db	0
  1008  016C87  00                 	db	0
  1009  016C88  00                 	db	0
  1010  016C89  00                 	db	0
  1011  016C8A  00                 	db	0
  1012  016C8B  00                 	db	0
  1013  016C8C  00                 	db	0
  1014  016C8D  00                 	db	0
  1015  016C8E  00                 	db	0
  1016  016C8F  00                 	db	0
  1017  016C90  00                 	db	0
  1018  016C91  00                 	db	0
  1019  016C92  00                 	db	0
  1020  016C93  00                 	db	0
  1021  016C94  00                 	db	0
  1022  016C95  00                 	db	0
  1023  016C96  00                 	db	0
  1024  016C97  00                 	db	0
  1025  016C98  00                 	db	0
  1026  016C99  00                 	db	0
  1027  016C9A  00                 	db	0
  1028  016C9B  00                 	db	0
  1029  016C9C  00                 	db	0
  1030  016C9D  00                 	db	0
  1031  016C9E  00                 	db	0
  1032  016C9F  00                 	db	0
  1033  016CA0  00                 	db	0
  1034  016CA1  00                 	db	0
  1035  016CA2  00                 	db	0
  1036  016CA3  00                 	db	0
  1037  016CA4  00                 	db	0
  1038  016CA5  00                 	db	0
  1039  016CA6  00                 	db	0
  1040  016CA7  00                 	db	0
  1041  016CA8  00                 	db	0
  1042  016CA9  00                 	db	0
  1043  016CAA  00                 	db	0
  1044  016CAB  00                 	db	0
  1045  016CAC  00                 	db	0
  1046  016CAD  00                 	db	0
  1047  016CAE  00                 	db	0
  1048  016CAF  00                 	db	0
  1049  016CB0  00                 	db	0
  1050  016CB1  00                 	db	0
  1051  016CB2  00                 	db	0
  1052  016CB3  00                 	db	0
  1053  016CB4  00                 	db	0
  1054  016CB5  00                 	db	0
  1055  016CB6  00                 	db	0
  1056  016CB7  00                 	db	0
  1057  016CB8  00                 	db	0
  1058  016CB9  00                 	db	0
  1059  016CBA  00                 	db	0
  1060  016CBB  00                 	db	0
  1061  016CBC  00                 	db	0
  1062  016CBD  00                 	db	0
  1063  016CBE  00                 	db	0
  1064  016CBF  00                 	db	0
  1065  016CC0  00                 	db	0
  1066  016CC1  00                 	db	0
  1067  016CC2  00                 	db	0
  1068  016CC3  00                 	db	0
  1069  016CC4  00                 	db	0
  1070  016CC5  00                 	db	0
  1071  016CC6  00                 	db	0
  1072  016CC7  00                 	db	0
  1073  016CC8  00                 	db	0
  1074  016CC9  00                 	db	0
  1075  016CCA  00                 	db	0
  1076  016CCB  00                 	db	0
  1077  016CCC  00                 	db	0
  1078  016CCD  00                 	db	0
  1079  016CCE  00                 	db	0
  1080  016CCF  00                 	db	0
  1081  016CD0  00                 	db	0
  1082  016CD1  00                 	db	0
  1083  016CD2  00                 	db	0
  1084  016CD3  00                 	db	0
  1085  016CD4  00                 	db	0
  1086  016CD5  00                 	db	0
  1087  016CD6  00                 	db	0
  1088  016CD7  00                 	db	0
  1089  016CD8  00                 	db	0
  1090  016CD9  00                 	db	0
  1091  016CDA  00                 	db	0
  1092  016CDB  00                 	db	0
  1093  016CDC  00                 	db	0
  1094  016CDD  00                 	db	0
  1095  016CDE  00                 	db	0
  1096  016CDF  00                 	db	0
  1097  016CE0  00                 	db	0
  1098  016CE1  00                 	db	0
  1099  016CE2  00                 	db	0
  1100  016CE3  00                 	db	0
  1101  016CE4  00                 	db	0
  1102  016CE5  00                 	db	0
  1103  016CE6  00                 	db	0
  1104  016CE7  00                 	db	0
  1105  016CE8  00                 	db	0
  1106  016CE9  00                 	db	0
  1107  016CEA  00                 	db	0
  1108  016CEB  00                 	db	0
  1109  016CEC  00                 	db	0
  1110  016CED  00                 	db	0
  1111  016CEE  00                 	db	0
  1112  016CEF  00                 	db	0
  1113  016CF0  00                 	db	0
  1114  016CF1  00                 	db	0
  1115  016CF2  00                 	db	0
  1116  016CF3  00                 	db	0
  1117  016CF4  00                 	db	0
  1118  016CF5  00                 	db	0
  1119  016CF6  00                 	db	0
  1120  016CF7  00                 	db	0
  1121  016CF8  00                 	db	0
  1122  016CF9  00                 	db	0
  1123  016CFA  00                 	db	0
  1124  016CFB  00                 	db	0
  1125  016CFC  00                 	db	0
  1126  016CFD  00                 	db	0
  1127  016CFE  00                 	db	0
  1128  016CFF  00                 	db	0
  1129  016D00  00                 	db	0
  1130  016D01  00                 	db	0
  1131  016D02  00                 	db	0
  1132  016D03  00                 	db	0
  1133  016D04  00                 	db	0
  1134  016D05  00                 	db	0
  1135  016D06  00                 	db	0
  1136  016D07  00                 	db	0
  1137  016D08  00                 	db	0
  1138  016D09  00                 	db	0
  1139  016D0A  00                 	db	0
  1140  016D0B  00                 	db	0
  1141  016D0C  00                 	db	0
  1142  016D0D  00                 	db	0
  1143  016D0E  00                 	db	0
  1144  016D0F  00                 	db	0
  1145  016D10  00                 	db	0
  1146  016D11  00                 	db	0
  1147  016D12  00                 	db	0
  1148  016D13  00                 	db	0
  1149  016D14  00                 	db	0
  1150  016D15  00                 	db	0
  1151  016D16  00                 	db	0
  1152  016D17  00                 	db	0
  1153  016D18  00                 	db	0
  1154  016D19  00                 	db	0
  1155  016D1A  00                 	db	0
  1156  016D1B  00                 	db	0
  1157  016D1C  00                 	db	0
  1158  016D1D  00                 	db	0
  1159  016D1E  00                 	db	0
  1160  016D1F  00                 	db	0
  1161  016D20  00                 	db	0
  1162  016D21  00                 	db	0
  1163  016D22  00                 	db	0
  1164  016D23  00                 	db	0
  1165  016D24  00                 	db	0
  1166  016D25  00                 	db	0
  1167  016D26  00                 	db	0
  1168  016D27  00                 	db	0
  1169  016D28  00                 	db	0
  1170  016D29  00                 	db	0
  1171  016D2A  00                 	db	0
  1172  016D2B  00                 	db	0
  1173  016D2C  00                 	db	0
  1174  016D2D  00                 	db	0
  1175  016D2E  00                 	db	0
  1176  016D2F  00                 	db	0
  1177  016D30  00                 	db	0
  1178  016D31  00                 	db	0
  1179  016D32  00                 	db	0
  1180  016D33  00                 	db	0
  1181  016D34  00                 	db	0
  1182  016D35  00                 	db	0
  1183  016D36  00                 	db	0
  1184  016D37  00                 	db	0
  1185  016D38  00                 	db	0
  1186  016D39  00                 	db	0
  1187  016D3A  00                 	db	0
  1188  016D3B  00                 	db	0
  1189  016D3C  00                 	db	0
  1190  016D3D  00                 	db	0
  1191  016D3E  00                 	db	0
  1192  016D3F  00                 	db	0
  1193  016D40  00                 	db	0
  1194  016D41  00                 	db	0
  1195  016D42  00                 	db	0
  1196  016D43  00                 	db	0
  1197  016D44  00                 	db	0
  1198  016D45  00                 	db	0
  1199  016D46  00                 	db	0
  1200  016D47  00                 	db	0
  1201  016D48  00                 	db	0
  1202  016D49  00                 	db	0
  1203  016D4A  00                 	db	0
  1204  016D4B  00                 	db	0
  1205  016D4C  00                 	db	0
  1206  016D4D  00                 	db	0
  1207  016D4E  00                 	db	0
  1208  016D4F  00                 	db	0
  1209  016D50  00                 	db	0
  1210  016D51  00                 	db	0
  1211  016D52  00                 	db	0
  1212  016D53  00                 	db	0
  1213  016D54  00                 	db	0
  1214  016D55  00                 	db	0
  1215  016D56  00                 	db	0
  1216  016D57  00                 	db	0
  1217  016D58  00                 	db	0
  1218  016D59  00                 	db	0
  1219  016D5A  00                 	db	0
  1220  016D5B  00                 	db	0
  1221  016D5C  00                 	db	0
  1222  016D5D  00                 	db	0
  1223  016D5E  00                 	db	0
  1224  016D5F  00                 	db	0
  1225  016D60  00                 	db	0
  1226  016D61  00                 	db	0
  1227  016D62  00                 	db	0
  1228  016D63  00                 	db	0
  1229  016D64  00                 	db	0
  1230  016D65  00                 	db	0
  1231  016D66  00                 	db	0
  1232  016D67  00                 	db	0
  1233  016D68  00                 	db	0
  1234  016D69  00                 	db	0
  1235  016D6A  00                 	db	0
  1236  016D6B  00                 	db	0
  1237  016D6C  00                 	db	0
  1238  016D6D  00                 	db	0
  1239  016D6E  00                 	db	0
  1240  016D6F  00                 	db	0
  1241  016D70  00                 	db	0
  1242  016D71  00                 	db	0
  1243  016D72  00                 	db	0
  1244  016D73  00                 	db	0
  1245  016D74  00                 	db	0
  1246  016D75  00                 	db	0
  1247  016D76  00                 	db	0
  1248  016D77  00                 	db	0
  1249  016D78  00                 	db	0
  1250  016D79  00                 	db	0
  1251  016D7A  00                 	db	0
  1252  016D7B  00                 	db	0
  1253  016D7C  00                 	db	0
  1254  016D7D  00                 	db	0
  1255  016D7E  00                 	db	0
  1256  016D7F  00                 	db	0
  1257  016D80  00                 	db	0
  1258  016D81  00                 	db	0
  1259  016D82  00                 	db	0
  1260  016D83  00                 	db	0
  1261  016D84  00                 	db	0
  1262  016D85  00                 	db	0
  1263  016D86  00                 	db	0
  1264  016D87  00                 	db	0
  1265  016D88  00                 	db	0
  1266  016D89  00                 	db	0
  1267  016D8A  00                 	db	0
  1268  016D8B  00                 	db	0
  1269  016D8C  00                 	db	0
  1270  016D8D  00                 	db	0
  1271                           
  1272                           ;initializer for _C
  1273  016D8E  0000               	dw	0
  1274  016D90  0000               	dw	0
  1275  016D92  0000               	dw	0
  1276  016D94  0000               	dw	0
  1277  016D96  0000               	dw	0
  1278  016D98  0000               	dw	0
  1279  016D9A  0000               	dw	0
  1280  016D9C  0000               	dw	0
  1281  016D9E  0000               	dw	0
  1282  016DA0  0000               	dw	0
  1283  016DA2  0000               	dw	0
  1284  016DA4  0000               	dw	0
  1285  016DA6  0000               	dw	0
  1286  016DA8  0000               	dw	0
  1287  016DAA  0000               	dw	0
  1288  016DAC  0000               	dw	0
  1289  016DAE  0000               	dw	0
  1290  016DB0  0000               	dw	0
  1291  016DB2  0000               	dw	0
  1292  016DB4  0000               	dw	0
  1293  016DB6  0000               	dw	0
  1294  016DB8  0000               	dw	0
  1295  016DBA  0000               	dw	0
  1296  016DBC  0000               	dw	0
  1297  016DBE  0000               	dw	0
  1298  016DC0  0000               	dw	0
  1299  016DC2  0000               	dw	0
  1300  016DC4  0000               	dw	0
  1301  016DC6  0000               	dw	0
  1302  016DC8  0000               	dw	0
  1303  016DCA  0000               	dw	0
  1304  016DCC  0000               	dw	0
  1305  016DCE  0000               	dw	0
  1306  016DD0  0000               	dw	0
  1307  016DD2  0000               	dw	0
  1308  016DD4  0000               	dw	0
  1309  016DD6  0000               	dw	0
  1310  016DD8  0000               	dw	0
  1311  016DDA  0000               	dw	0
  1312  016DDC  0000               	dw	0
  1313  016DDE  0000               	dw	0
  1314  016DE0  0000               	dw	0
  1315  016DE2  0000               	dw	0
  1316  016DE4  0000               	dw	0
  1317  016DE6  0000               	dw	0
  1318  016DE8  0000               	dw	0
  1319  016DEA  0000               	dw	0
  1320  016DEC  0000               	dw	0
  1321  016DEE  0000               	dw	0
  1322  016DF0  0000               	dw	0
  1323  016DF2  0000               	dw	0
  1324  016DF4  0000               	dw	0
  1325  016DF6  0000               	dw	0
  1326  016DF8  0000               	dw	0
  1327  016DFA  0000               	dw	0
  1328  016DFC  0000               	dw	0
  1329  016DFE  0000               	dw	0
  1330  016E00  0000               	dw	0
  1331  016E02  0000               	dw	0
  1332  016E04  0000               	dw	0
  1333  016E06  0000               	dw	0
  1334  016E08  0000               	dw	0
  1335  016E0A  0000               	dw	0
  1336  016E0C  0000               	dw	0
  1337  016E0E  0000               	dw	0
  1338  016E10  0000               	dw	0
  1339  016E12  0000               	dw	0
  1340  016E14  0000               	dw	0
  1341  016E16  0000               	dw	0
  1342  016E18  0000               	dw	0
  1343  016E1A  0000               	dw	0
  1344  016E1C  42FA               	dw	17146
  1345  016E1E  0000               	dw	0
  1346  016E20  0000               	dw	0
  1347  016E22  0000               	dw	0
  1348  016E24  0000               	dw	0
  1349  016E26  0000               	dw	0
  1350  016E28  0000               	dw	0
  1351  016E2A  0000               	dw	0
  1352  016E2C  0000               	dw	0
  1353  016E2E  0000               	dw	0
  1354  016E30  0000               	dw	0
  1355  016E32  0000               	dw	0
  1356  016E34  0000               	dw	0
  1357  016E36  0000               	dw	0
  1358  016E38  0000               	dw	0
  1359  016E3A  0000               	dw	0
  1360  016E3C  0000               	dw	0
  1361  016E3E  0000               	dw	0
  1362  016E40  0000               	dw	0
  1363  016E42  0000               	dw	0
  1364  016E44  0000               	dw	0
  1365  016E46  00                 	db	0
  1366  016E47  01                 	db	1
  1367  016E48  0000               	dw	0
  1368  016E4A  3F80               	dw	16256
  1369  016E4C  0000               	dw	0
  1370  016E4E  3F80               	dw	16256
  1371  016E50  00                 	db	0
  1372  016E51  00                 	db	0
  1373  016E52  00                 	db	0
  1374  016E53  00                 	db	0
  1375  016E54  00                 	db	0
  1376  016E55  00                 	db	0
  1377  016E56  00                 	db	0
  1378  016E57  00                 	db	0
  1379  016E58  00                 	db	0
  1380  016E59  00                 	db	0
  1381  016E5A  00                 	db	0
  1382  016E5B  00                 	db	0
  1383  016E5C  00                 	db	0
  1384  016E5D  00                 	db	0
  1385  016E5E  00                 	db	0
  1386  016E5F  00                 	db	0
  1387  016E60  00                 	db	0
  1388  016E61  00                 	db	0
  1389  016E62  00                 	db	0
  1390  016E63  00                 	db	0
  1391  016E64  00                 	db	0
  1392  016E65  00                 	db	0
  1393  016E66  00                 	db	0
  1394  016E67  00                 	db	0
  1395  016E68  00                 	db	0
  1396  016E69  00                 	db	0
  1397  016E6A  00                 	db	0
  1398  016E6B  00                 	db	0
  1399  016E6C  00                 	db	0
  1400  016E6D  00                 	db	0
  1401  016E6E  00                 	db	0
  1402  016E6F  00                 	db	0
  1403  016E70  00                 	db	0
  1404  016E71  00                 	db	0
  1405  016E72  00                 	db	0
  1406  016E73  00                 	db	0
  1407  016E74  00                 	db	0
  1408  016E75  00                 	db	0
  1409  016E76  00                 	db	0
  1410  016E77  00                 	db	0
  1411  016E78  00                 	db	0
  1412  016E79  00                 	db	0
  1413  016E7A  00                 	db	0
  1414  016E7B  00                 	db	0
  1415  016E7C  00                 	db	0
  1416  016E7D  00                 	db	0
  1417  016E7E  00                 	db	0
  1418  016E7F  00                 	db	0
  1419  016E80  00                 	db	0
  1420  016E81  00                 	db	0
  1421  016E82  00                 	db	0
  1422  016E83  00                 	db	0
  1423  016E84  00                 	db	0
  1424  016E85  00                 	db	0
  1425  016E86  00                 	db	0
  1426  016E87  00                 	db	0
  1427  016E88  00                 	db	0
  1428  016E89  00                 	db	0
  1429  016E8A  00                 	db	0
  1430  016E8B  00                 	db	0
  1431  016E8C  00                 	db	0
  1432  016E8D  00                 	db	0
  1433  016E8E  00                 	db	0
  1434  016E8F  00                 	db	0
  1435  016E90  00                 	db	0
  1436  016E91  00                 	db	0
  1437  016E92  00                 	db	0
  1438  016E93  00                 	db	0
  1439  016E94  00                 	db	0
  1440  016E95  00                 	db	0
  1441  016E96  00                 	db	0
  1442  016E97  00                 	db	0
  1443  016E98  00                 	db	0
  1444  016E99  00                 	db	0
  1445  016E9A  00                 	db	0
  1446  016E9B  00                 	db	0
  1447  016E9C  0000               	dw	0
  1448  016E9E  0000               	dw	0
  1449  016EA0  0000               	dw	0
  1450  016EA2  0000               	dw	0
  1451  016EA4  0000               	dw	0
  1452  016EA6  0000               	dw	0
  1453  016EA8  0000               	dw	0
  1454  016EAA  0000               	dw	0
  1455  016EAC  0000               	dw	0
  1456  016EAE  0000               	dw	0
  1457  016EB0  01                 	db	1
  1458  016EB1  00                 	db	0
  1459  016EB2  00                 	db	0
  1460  016EB3  00                 	db	0
  1461  016EB4  00                 	db	0
  1462  016EB5  00                 	db	0
  1463  016EB6  00                 	db	0
  1464  016EB7  00                 	db	0
  1465  016EB8  00                 	db	0
  1466                           
  1467                           	psect	idataBANK0
  1468  01C180                     __pidataBANK0:
  1469                           	opt callstack 0
  1470                           
  1471                           ;initializer for _R
  1472  01C180  0000               	dw	0
  1473  01C182  0000               	dw	0
  1474  01C184  0000               	dw	0
  1475  01C186  0000               	dw	0
  1476  01C188  0000               	dw	0
  1477  01C18A  0000               	dw	0
  1478  01C18C  0000               	dw	0
  1479  01C18E  0000               	dw	0
  1480  01C190  0000               	dw	0
  1481  01C192  0000               	dw	0
  1482  01C194  0000               	dw	0
  1483  01C196  0000               	dw	0
  1484  01C198  0000               	dw	0
  1485  01C19A  0000               	dw	0
  1486  01C19C  0000               	dw	0
  1487  01C19E  0000               	dw	0
  1488  01C1A0  0000               	dw	0
  1489  01C1A2  0000               	dw	0
  1490  01C1A4  0000               	dw	0
  1491  01C1A6  0F62               	dw	3938
  1492  01C1A8  0FA4               	dw	4004
  1493  01C1AA  2D0E               	dw	11534
  1494  01C1AC  3DB2               	dw	15794
  1495  01C1AE  DD98               	dw	56728
  1496  01C1B0  3D13               	dw	15635
  1497  01C1B2  00                 	db	0
  1498  01C1B3  0000               	dw	0
  1499  01C1B5  00                 	db	0
  1500                           
  1501                           	psect	idataBANK1
  1502  01A8DA                     __pidataBANK1:
  1503                           	opt callstack 0
  1504                           
  1505                           ;initializer for stoa@F1166
  1506  01A8DA  28                 	db	40
  1507  01A8DB  6E                 	db	110
  1508  01A8DC  75                 	db	117
  1509  01A8DD  6C                 	db	108
  1510  01A8DE  6C                 	db	108
  1511  01A8DF  29                 	db	41
  1512  01A8E0  00                 	db	0
  1513                           
  1514                           ;initializer for _V
  1515  01A8E1  00                 	db	0
  1516  01A8E2  00                 	db	0
  1517  01A8E3  00                 	db	0
  1518  01A8E4  00                 	db	0
  1519  01A8E5  00                 	db	0
  1520  01A8E6  00                 	db	0
  1521  01A8E7  00                 	db	0
  1522  01A8E8  00                 	db	0
  1523  01A8E9  00                 	db	0
  1524  01A8EA  00                 	db	0
  1525  01A8EB  00                 	db	0
  1526  01A8EC  00                 	db	0
  1527  01A8ED  00                 	db	0
  1528  01A8EE  00                 	db	0
  1529  01A8EF  00                 	db	0
  1530  01A8F0  00                 	db	0
  1531  01A8F1  00                 	db	0
  1532  01A8F2  00                 	db	0
  1533  01A8F3  00                 	db	0
  1534  01A8F4  00                 	db	0
  1535  01A8F5  00                 	db	0
  1536  01A8F6  00                 	db	0
  1537  01A8F7  00                 	db	0
  1538  01A8F8  00                 	db	0
  1539  01A8F9  00                 	db	0
  1540  01A8FA  00                 	db	0
  1541  01A8FB  00                 	db	0
  1542  01A8FC  00                 	db	0
  1543  01A8FD  00                 	db	0
  1544  01A8FE  00                 	db	0
  1545  01A8FF  00                 	db	0
  1546  01A900  00                 	db	0
  1547  01A901  00                 	db	0
  1548  01A902  00                 	db	0
  1549  01A903  00                 	db	0
  1550  01A904  00                 	db	0
  1551  01A905  00                 	db	0
  1552  01A906  00                 	db	0
  1553  01A907  00                 	db	0
  1554  01A908  00                 	db	0
  1555  01A909  00                 	db	0
  1556  01A90A  00                 	db	0
  1557  01A90B  00                 	db	0
  1558  01A90C  00                 	db	0
  1559  01A90D  00                 	db	0
  1560  01A90E  00                 	db	0
  1561  01A90F  00                 	db	0
  1562  01A910  00                 	db	0
  1563  01A911  00                 	db	0
  1564  01A912  00                 	db	0
  1565  01A913  00                 	db	0
  1566  01A914  00                 	db	0
  1567  01A915  00                 	db	0
  1568  01A916  00                 	db	0
  1569  01A917  00                 	db	0
  1570  01A918  00                 	db	0
  1571  01A919  00                 	db	0
  1572  01A91A  00                 	db	0
  1573  01A91B  00                 	db	0
  1574  01A91C  00                 	db	0
  1575  01A91D  00                 	db	0
  1576  01A91E  00                 	db	0
  1577  01A91F  00                 	db	0
  1578  01A920  00                 	db	0
  1579  01A921  00                 	db	0
  1580  01A922  00                 	db	0
  1581  01A923  00                 	db	0
  1582  01A924  00                 	db	0
  1583  01A925  00                 	db	0
  1584  01A926  00                 	db	0
  1585  01A927  00                 	db	0
  1586  01A928  00                 	db	0
  1587  01A929  00                 	db	0
  1588  01A92A  00                 	db	0
  1589  01A92B  00                 	db	0
  1590  01A92C  00                 	db	0
  1591  01A92D  00                 	db	0
  1592  01A92E  00                 	db	0
  1593  01A92F  00                 	db	0
  1594  01A930  00                 	db	0
  1595  01A931  00                 	db	0
  1596  01A932  00                 	db	0
  1597  01A933  00                 	db	0
  1598  01A934  00                 	db	0
  1599  01A935  00                 	db	0
  1600  01A936  00                 	db	0
  1601  01A937  00                 	db	0
  1602  01A938  00                 	db	0
  1603  01A939  00                 	db	0
  1604  01A93A  00                 	db	0
  1605  01A93B  00                 	db	0
  1606  01A93C  00                 	db	0
  1607  01A93D  00                 	db	0
  1608  01A93E  00                 	db	0
  1609  01A93F  00                 	db	0
  1610  01A940  00                 	db	0
  1611  01A941  00                 	db	0
  1612  01A942  00                 	db	0
  1613  01A943  00                 	db	0
  1614  01A944  00                 	db	0
  1615  01A945  00                 	db	0
  1616  01A946  00                 	db	0
  1617  01A947  00                 	db	0
  1618  01A948  00                 	db	0
  1619  01A949  00                 	db	0
  1620  01A94A  00                 	db	0
  1621  01A94B  00                 	db	0
  1622  01A94C  00                 	db	0
  1623  01A94D  00                 	db	0
  1624  01A94E  00                 	db	0
  1625  01A94F  00                 	db	0
  1626  01A950  00                 	db	0
  1627  01A951  00                 	db	0
  1628  01A952  00                 	db	0
  1629  01A953  00                 	db	0
  1630  01A954  00                 	db	0
  1631  01A955  00                 	db	0
  1632  01A956  00                 	db	0
  1633  01A957  00                 	db	0
  1634  01A958  00                 	db	0
  1635  01A959  00                 	db	0
  1636  01A95A  00                 	db	0
  1637  01A95B  00                 	db	0
  1638  01A95C  00                 	db	0
  1639  01A95D  00                 	db	0
  1640  01A95E  00                 	db	0
  1641  01A95F  00                 	db	0
  1642  01A960  00                 	db	0
  1643  01A961  00                 	db	0
  1644  01A962  0000               	dw	0
  1645  01A964  0000               	dw	0
  1646  01A966  0000               	dw	0
  1647  01A968  0000               	dw	0
  1648  01A96A  00                 	db	0
  1649  01A96B  00                 	db	0
  1650  01A96C  00                 	db	0
  1651  01A96D  00                 	db	0
  1652  01A96E  00                 	db	0
  1653  01A96F  00                 	db	0
  1654  01A970  0000               	dw	0
  1655  01A972  0000               	dw	0
  1656  01A974  0000               	dw	0
  1657  01A976  0000               	dw	0
  1658  01A978  0000               	dw	0
  1659  01A97A  0000               	dw	0
  1660  01A97C  00                 	db	0
  1661  01A97D  00                 	db	0
  1662  01A97E  00                 	db	0
  1663  01A97F  00                 	db	0
  1664  01A980  00                 	db	0
  1665  01A981  00                 	db	0
  1666  01A982  00                 	db	0
  1667  01A983  00                 	db	0
  1668  01A984  00                 	db	0
  1669  01A985  00                 	db	0
  1670  01A986  00                 	db	0
  1671  01A987  0000               	dw	0
  1672  01A989  0000               	dw	0
  1673  01A98B  2D                 	db	45
  1674  01A98C  00                 	db	0
  1675  01A98D  00                 	db	0
  1676  01A98E  00                 	db	0
  1677  01A98F  00                 	db	0
  1678  01A990  00                 	db	0
  1679  01A991  0000               	dw	0
  1680  01A993  0000               	dw	0
  1681  01A995  0000               	dw	0
  1682  01A997  0000               	dw	0
  1683  01A999  0000               	dw	0
  1684  01A99B  0000               	dw	0
  1685  01A99D  0000               	dw	0
  1686  01A99F  0000               	dw	0
  1687                           
  1688                           ;initializer for _H
  1689  01A9A1  00                 	db	0
  1690  01A9A2  00                 	db	0
  1691  01A9A3  01                 	db	1
  1692  01A9A4  00                 	db	0
  1693  01A9A5  01                 	db	1
  1694  01A9A6  00                 	db	0
  1695  01A9A7  01                 	db	1
  1696  01A9A8  00                 	db	0
  1697  01A9A9  00                 	db	0
  1698                           
  1699                           	psect	mediumconst
  1700  00F94C                     __pmediumconst:
  1701                           	opt callstack 0
  1702  00F94C  00                 	db	0
  1703  00F94D                     _BVSOC_TABLE:
  1704                           	opt callstack 0
  1705  00F94D  59D8               	dw	23000
  1706  00F94F  0000               	dw	0
  1707  00F951  0005               	dw	5
  1708  00F953  0000               	dw	0
  1709  00F955  5B68               	dw	23400
  1710  00F957  0000               	dw	0
  1711  00F959  000A               	dw	10
  1712  00F95B  0000               	dw	0
  1713  00F95D  5C30               	dw	23600
  1714  00F95F  0000               	dw	0
  1715  00F961  0014               	dw	20
  1716  00F963  0000               	dw	0
  1717  00F965  5E38               	dw	24120
  1718  00F967  0000               	dw	0
  1719  00F969  0019               	dw	25
  1720  00F96B  0000               	dw	0
  1721  00F96D  5E88               	dw	24200
  1722  00F96F  0000               	dw	0
  1723  00F971  001E               	dw	30
  1724  00F973  0000               	dw	0
  1725  00F975  5F78               	dw	24440
  1726  00F977  0000               	dw	0
  1727  00F979  0028               	dw	40
  1728  00F97B  0000               	dw	0
  1729  00F97D  5FDC               	dw	24540
  1730  00F97F  0000               	dw	0
  1731  00F981  002D               	dw	45
  1732  00F983  0000               	dw	0
  1733  00F985  6018               	dw	24600
  1734  00F987  0000               	dw	0
  1735  00F989  0032               	dw	50
  1736  00F98B  0000               	dw	0
  1737  00F98D  6046               	dw	24646
  1738  00F98F  0000               	dw	0
  1739  00F991  0035               	dw	53
  1740  00F993  0000               	dw	0
  1741  00F995  607C               	dw	24700
  1742  00F997  0000               	dw	0
  1743  00F999  0037               	dw	55
  1744  00F99B  0000               	dw	0
  1745  00F99D  60AE               	dw	24750
  1746  00F99F  0000               	dw	0
  1747  00F9A1  0039               	dw	57
  1748  00F9A3  0000               	dw	0
  1749  00F9A5  60E0               	dw	24800
  1750  00F9A7  0000               	dw	0
  1751  00F9A9  003C               	dw	60
  1752  00F9AB  0000               	dw	0
  1753  00F9AD  6112               	dw	24850
  1754  00F9AF  0000               	dw	0
  1755  00F9B1  003F               	dw	63
  1756  00F9B3  0000               	dw	0
  1757  00F9B5  615D               	dw	24925
  1758  00F9B7  0000               	dw	0
  1759  00F9B9  0043               	dw	67
  1760  00F9BB  0000               	dw	0
  1761  00F9BD  61A8               	dw	25000
  1762  00F9BF  0000               	dw	0
  1763  00F9C1  0046               	dw	70
  1764  00F9C3  0000               	dw	0
  1765  00F9C5  61BC               	dw	25020
  1766  00F9C7  0000               	dw	0
  1767  00F9C9  0048               	dw	72
  1768  00F9CB  0000               	dw	0
  1769  00F9CD  61D0               	dw	25040
  1770  00F9CF  0000               	dw	0
  1771  00F9D1  004B               	dw	75
  1772  00F9D3  0000               	dw	0
  1773  00F9D5  61DA               	dw	25050
  1774  00F9D7  0000               	dw	0
  1775  00F9D9  0050               	dw	80
  1776  00F9DB  0000               	dw	0
  1777  00F9DD  61E4               	dw	25060
  1778  00F9DF  0000               	dw	0
  1779  00F9E1  0055               	dw	85
  1780  00F9E3  0000               	dw	0
  1781  00F9E5  61F8               	dw	25080
  1782  00F9E7  0000               	dw	0
  1783  00F9E9  005A               	dw	90
  1784  00F9EB  0000               	dw	0
  1785  00F9ED  6208               	dw	25096
  1786  00F9EF  0000               	dw	0
  1787  00F9F1  005C               	dw	92
  1788  00F9F3  0000               	dw	0
  1789  00F9F5  6222               	dw	25122
  1790  00F9F7  0000               	dw	0
  1791  00F9F9  005D               	dw	93
  1792  00F9FB  0000               	dw	0
  1793  00F9FD  6234               	dw	25140
  1794  00F9FF  0000               	dw	0
  1795  00FA01  005F               	dw	95
  1796  00FA03  0000               	dw	0
  1797  00FA05  6248               	dw	25160
  1798  00FA07  0000               	dw	0
  1799  00FA09  0061               	dw	97
  1800  00FA0B  0000               	dw	0
  1801  00FA0D  625C               	dw	25180
  1802  00FA0F  0000               	dw	0
  1803  00FA11  0064               	dw	100
  1804  00FA13  0000               	dw	0
  1805  00FA15  6784               	dw	26500
  1806  00FA17  0000               	dw	0
  1807  00FA19  0062               	dw	98
  1808  00FA1B  0000               	dw	0
  1809  00FA1D                     __end_of_BVSOC_TABLE:
  1810                           	opt callstack 0
  1811  00FA1D                     _T:
  1812                           	opt callstack 0
  1813  00FA1D  63                 	db	99
  1814  00FA1E  6F                 	db	111
  1815  00FA1F  6D                 	db	109
  1816  00FA20  6D                 	db	109
  1817  00FA21  61                 	db	97
  1818  00FA22  6E                 	db	110
  1819  00FA23  64                 	db	100
  1820  00FA24  73                 	db	115
  1821  00FA25  20                 	db	32
  1822  00FA26  31                 	db	49
  1823  00FA27  00                 	db	0
  1824  00FA28  00                 	db	0
  1825  00FA29  00                 	db	0
  1826  00FA2A  00                 	db	0
  1827  00FA2B  00                 	db	0
  1828  00FA2C  00                 	db	0
  1829  00FA2D  00                 	db	0
  1830  00FA2E  00                 	db	0
  1831  00FA2F  64                 	db	100
  1832  00FA30  69                 	db	105
  1833  00FA31  73                 	db	115
  1834  00FA32  70                 	db	112
  1835  00FA33  6C                 	db	108
  1836  00FA34  61                 	db	97
  1837  00FA35  79                 	db	121
  1838  00FA36  73                 	db	115
  1839  00FA37  20                 	db	32
  1840  00FA38  31                 	db	49
  1841  00FA39  00                 	db	0
  1842  00FA3A  00                 	db	0
  1843  00FA3B  00                 	db	0
  1844  00FA3C  00                 	db	0
  1845  00FA3D  00                 	db	0
  1846  00FA3E  00                 	db	0
  1847  00FA3F  00                 	db	0
  1848  00FA40  00                 	db	0
  1849  00FA41  63                 	db	99
  1850  00FA42  6F                 	db	111
  1851  00FA43  6D                 	db	109
  1852  00FA44  6D                 	db	109
  1853  00FA45  61                 	db	97
  1854  00FA46  6E                 	db	110
  1855  00FA47  64                 	db	100
  1856  00FA48  73                 	db	115
  1857  00FA49  20                 	db	32
  1858  00FA4A  32                 	db	50
  1859  00FA4B  00                 	db	0
  1860  00FA4C  00                 	db	0
  1861  00FA4D  00                 	db	0
  1862  00FA4E  00                 	db	0
  1863  00FA4F  00                 	db	0
  1864  00FA50  00                 	db	0
  1865  00FA51  00                 	db	0
  1866  00FA52  00                 	db	0
  1867  00FA53  64                 	db	100
  1868  00FA54  69                 	db	105
  1869  00FA55  73                 	db	115
  1870  00FA56  70                 	db	112
  1871  00FA57  6C                 	db	108
  1872  00FA58  61                 	db	97
  1873  00FA59  79                 	db	121
  1874  00FA5A  73                 	db	115
  1875  00FA5B  20                 	db	32
  1876  00FA5C  32                 	db	50
  1877  00FA5D  00                 	db	0
  1878  00FA5E  00                 	db	0
  1879  00FA5F  00                 	db	0
  1880  00FA60  00                 	db	0
  1881  00FA61  00                 	db	0
  1882  00FA62  00                 	db	0
  1883  00FA63  00                 	db	0
  1884  00FA64  00                 	db	0
  1885  00FA65  63                 	db	99
  1886  00FA66  6F                 	db	111
  1887  00FA67  6D                 	db	109
  1888  00FA68  6D                 	db	109
  1889  00FA69  61                 	db	97
  1890  00FA6A  6E                 	db	110
  1891  00FA6B  64                 	db	100
  1892  00FA6C  73                 	db	115
  1893  00FA6D  20                 	db	32
  1894  00FA6E  33                 	db	51
  1895  00FA6F  00                 	db	0
  1896  00FA70  00                 	db	0
  1897  00FA71  00                 	db	0
  1898  00FA72  00                 	db	0
  1899  00FA73  00                 	db	0
  1900  00FA74  00                 	db	0
  1901  00FA75  00                 	db	0
  1902  00FA76  00                 	db	0
  1903  00FA77  64                 	db	100
  1904  00FA78  69                 	db	105
  1905  00FA79  73                 	db	115
  1906  00FA7A  70                 	db	112
  1907  00FA7B  6C                 	db	108
  1908  00FA7C  61                 	db	97
  1909  00FA7D  79                 	db	121
  1910  00FA7E  73                 	db	115
  1911  00FA7F  20                 	db	32
  1912  00FA80  33                 	db	51
  1913  00FA81  00                 	db	0
  1914  00FA82  00                 	db	0
  1915  00FA83  00                 	db	0
  1916  00FA84  00                 	db	0
  1917  00FA85  00                 	db	0
  1918  00FA86  00                 	db	0
  1919  00FA87  00                 	db	0
  1920  00FA88  00                 	db	0
  1921  00FA89  63                 	db	99
  1922  00FA8A  6F                 	db	111
  1923  00FA8B  6D                 	db	109
  1924  00FA8C  6D                 	db	109
  1925  00FA8D  61                 	db	97
  1926  00FA8E  6E                 	db	110
  1927  00FA8F  64                 	db	100
  1928  00FA90  73                 	db	115
  1929  00FA91  20                 	db	32
  1930  00FA92  34                 	db	52
  1931  00FA93  00                 	db	0
  1932  00FA94  00                 	db	0
  1933  00FA95  00                 	db	0
  1934  00FA96  00                 	db	0
  1935  00FA97  00                 	db	0
  1936  00FA98  00                 	db	0
  1937  00FA99  00                 	db	0
  1938  00FA9A  00                 	db	0
  1939  00FA9B  64                 	db	100
  1940  00FA9C  69                 	db	105
  1941  00FA9D  73                 	db	115
  1942  00FA9E  70                 	db	112
  1943  00FA9F  6C                 	db	108
  1944  00FAA0  61                 	db	97
  1945  00FAA1  79                 	db	121
  1946  00FAA2  73                 	db	115
  1947  00FAA3  20                 	db	32
  1948  00FAA4  34                 	db	52
  1949  00FAA5  00                 	db	0
  1950  00FAA6  00                 	db	0
  1951  00FAA7  00                 	db	0
  1952  00FAA8  00                 	db	0
  1953  00FAA9  00                 	db	0
  1954  00FAAA  00                 	db	0
  1955  00FAAB  00                 	db	0
  1956  00FAAC  00                 	db	0
  1957  00FAAD                     __end_of_T:
  1958                           	opt callstack 0
  1959  00FAAD                     _spin:
  1960                           	opt callstack 0
  1961  00FAAD  7C                 	db	124
  1962  00FAAE  7C                 	db	124
  1963  00FAAF  2F                 	db	47
  1964  00FAB0  2F                 	db	47
  1965  00FAB1  2D                 	db	45
  1966  00FAB2  2D                 	db	45
  1967  00FAB3  00                 	db	0
  1968  00FAB4  00                 	db	0
  1969  00FAB5  00                 	db	0
  1970  00FAB6  00                 	db	0
  1971  00FAB7  00                 	db	0
  1972  00FAB8  00                 	db	0
  1973  00FAB9  00                 	db	0
  1974  00FABA  00                 	db	0
  1975  00FABB  00                 	db	0
  1976  00FABC  00                 	db	0
  1977  00FABD  00                 	db	0
  1978  00FABE  00                 	db	0
  1979  00FABF  00                 	db	0
  1980  00FAC0  00                 	db	0
  1981  00FAC1  7C                 	db	124
  1982  00FAC2  7C                 	db	124
  1983  00FAC3  2F                 	db	47
  1984  00FAC4  2F                 	db	47
  1985  00FAC5  2D                 	db	45
  1986  00FAC6  2D                 	db	45
  1987  00FAC7  5C                 	db	92
  1988  00FAC8  5C                 	db	92
  1989  00FAC9  00                 	db	0
  1990  00FACA  00                 	db	0
  1991  00FACB  00                 	db	0
  1992  00FACC  00                 	db	0
  1993  00FACD  00                 	db	0
  1994  00FACE  00                 	db	0
  1995  00FACF  00                 	db	0
  1996  00FAD0  00                 	db	0
  1997  00FAD1  00                 	db	0
  1998  00FAD2  00                 	db	0
  1999  00FAD3  00                 	db	0
  2000  00FAD4  00                 	db	0
  2001  00FAD5  4F                 	db	79
  2002  00FAD6  4F                 	db	79
  2003  00FAD7  4F                 	db	79
  2004  00FAD8  4F                 	db	79
  2005  00FAD9  4F                 	db	79
  2006  00FADA  4F                 	db	79
  2007  00FADB  2D                 	db	45
  2008  00FADC  2D                 	db	45
  2009  00FADD  5F                 	db	95
  2010  00FADE  5F                 	db	95
  2011  00FADF  2D                 	db	45
  2012  00FAE0  00                 	db	0
  2013  00FAE1  00                 	db	0
  2014  00FAE2  00                 	db	0
  2015  00FAE3  00                 	db	0
  2016  00FAE4  00                 	db	0
  2017  00FAE5  00                 	db	0
  2018  00FAE6  00                 	db	0
  2019  00FAE7  00                 	db	0
  2020  00FAE8  00                 	db	0
  2021  00FAE9  76                 	db	118
  2022  00FAEA  76                 	db	118
  2023  00FAEB  3C                 	db	60
  2024  00FAEC  3C                 	db	60
  2025  00FAED  5E                 	db	94
  2026  00FAEE  5E                 	db	94
  2027  00FAEF  3E                 	db	62
  2028  00FAF0  3E                 	db	62
  2029  00FAF1  00                 	db	0
  2030  00FAF2  00                 	db	0
  2031  00FAF3  00                 	db	0
  2032  00FAF4  00                 	db	0
  2033  00FAF5  00                 	db	0
  2034  00FAF6  00                 	db	0
  2035  00FAF7  00                 	db	0
  2036  00FAF8  00                 	db	0
  2037  00FAF9  00                 	db	0
  2038  00FAFA  00                 	db	0
  2039  00FAFB  00                 	db	0
  2040  00FAFC  00                 	db	0
  2041  00FAFD  2E                 	db	46
  2042  00FAFE  2E                 	db	46
  2043  00FAFF  2A                 	db	42
  2044  00FB00  2A                 	db	42
  2045  00FB01  78                 	db	120
  2046  00FB02  23                 	db	35
  2047  00FB03  78                 	db	120
  2048  00FB04  23                 	db	35
  2049  00FB05  58                 	db	88
  2050  00FB06  58                 	db	88
  2051  00FB07  7C                 	db	124
  2052  00FB08  7C                 	db	124
  2053  00FB09  2D                 	db	45
  2054  00FB0A  2D                 	db	45
  2055  00FB0B  00                 	db	0
  2056  00FB0C  00                 	db	0
  2057  00FB0D  00                 	db	0
  2058  00FB0E  00                 	db	0
  2059  00FB0F  00                 	db	0
  2060  00FB10  00                 	db	0
  2061  00FB11  2E                 	db	46
  2062  00FB12  2E                 	db	46
  2063  00FB13  6F                 	db	111
  2064  00FB14  6F                 	db	111
  2065  00FB15  4F                 	db	79
  2066  00FB16  4F                 	db	79
  2067  00FB17  6F                 	db	111
  2068  00FB18  6F                 	db	111
  2069  00FB19  00                 	db	0
  2070  00FB1A  00                 	db	0
  2071  00FB1B  00                 	db	0
  2072  00FB1C  00                 	db	0
  2073  00FB1D  00                 	db	0
  2074  00FB1E  00                 	db	0
  2075  00FB1F  00                 	db	0
  2076  00FB20  00                 	db	0
  2077  00FB21  00                 	db	0
  2078  00FB22  00                 	db	0
  2079  00FB23  00                 	db	0
  2080  00FB24  00                 	db	0
  2081  00FB25                     __end_of_spin:
  2082                           	opt callstack 0
  2083  00FB25  0000               	dw	0
  2084  00FB27  3F80               	dw	16256
  2085  00FB29  0000               	dw	0
  2086  00FB2B  3FC0               	dw	16320
  2087  00FB2D                     __end_of_bp:
  2088                           	opt callstack 0
  2089  00FB2D  AA00               	dw	43520
  2090  00FB2F  3FB8               	dw	16312
  2091  00FB31                     __end_of_ivln2_h:
  2092                           	opt callstack 0
  2093  00FB31  23C6               	dw	9158
  2094  00FB33  B8F6               	dw	47350
  2095  00FB35                     __end_of_cp_l:
  2096                           	opt callstack 0
  2097  00FB35  4000               	dw	16384
  2098  00FB37  3F76               	dw	16246
  2099  00FB39                     __end_of_cp_h:
  2100                           	opt callstack 0
  2101  0000                     _IVTADL	set	14493
  2102  0000                     _IVTADH	set	14494
  2103  0000                     _IVTADU	set	14495
  2104  0000                     _PIR6bits	set	14758
  2105  0000                     _PIR4bits	set	14756
  2106  0000                     _PIE8bits	set	14744
  2107  0000                     _PIR8bits	set	14760
  2108  0000                     _SCANPR	set	14839
  2109  0000                     _DMA2PR	set	14836
  2110  0000                     _DMA1PR	set	14835
  2111  0000                     _MAINPR	set	14834
  2112  0000                     _ISRPR	set	14833
  2113  0000                     _PIE2bits	set	14738
  2114  0000                     _PIR2bits	set	14754
  2115  0000                     _PIE9bits	set	14745
  2116  0000                     _PIR9bits	set	14761
  2117  0000                     _PIE6bits	set	14742
  2118  0000                     _PIE3bits	set	14739
  2119  0000                     _PMD7	set	14791
  2120  0000                     _PMD6	set	14790
  2121  0000                     _PMD5	set	14789
  2122  0000                     _PMD4	set	14788
  2123  0000                     _PMD3	set	14787
  2124  0000                     _PMD2	set	14786
  2125  0000                     _PMD1	set	14785
  2126  0000                     _PMD0	set	14784
  2127  0000                     _OSCTUNE	set	14814
  2128  0000                     _OSCFRQ	set	14815
  2129  0000                     _OSCEN	set	14813
  2130  0000                     _OSCCON3	set	14811
  2131  0000                     _OSCCON1	set	14809
  2132  0000                     _IPR8bits	set	14728
  2133  0000                     _IPR9bits	set	14729
  2134  0000                     _IPR5bits	set	14725
  2135  0000                     _IPR1bits	set	14721
  2136  0000                     _IPR3bits	set	14723
  2137  0000                     _IPR6bits	set	14726
  2138  0000                     _IPR2bits	set	14722
  2139  0000                     _PIE5bits	set	14741
  2140  0000                     _PIE1bits	set	14737
  2141  0000                     _PIR5bits	set	14757
  2142  0000                     _PIR1bits	set	14753
  2143  0000                     _PLLR	set	118496
  2144  0000                     _SPI1SDIPPS	set	15071
  2145  0000                     _U1RXPPS	set	15077
  2146  0000                     _RC6PPS	set	14870
  2147  0000                     _RC5PPS	set	14869
  2148  0000                     _INT1PPS	set	15041
  2149  0000                     _RD1PPS	set	14873
  2150  0000                     _INT0PPS	set	15040
  2151  0000                     _RC3PPS	set	14867
  2152  0000                     _RB6PPS	set	14862
  2153  0000                     _SPI1SCKPPS	set	15070
  2154  0000                     _U2RXPPS	set	15080
  2155  0000                     _SLRCONF	set	14995
  2156  0000                     _SLRCONE	set	14979
  2157  0000                     _SLRCOND	set	14963
  2158  0000                     _SLRCONC	set	14947
  2159  0000                     _SLRCONB	set	14931
  2160  0000                     _SLRCONA	set	14915
  2161  0000                     _ODCOND	set	14962
  2162  0000                     _ODCONC	set	14946
  2163  0000                     _ODCONB	set	14930
  2164  0000                     _ODCONA	set	14914
  2165  0000                     _ODCONF	set	14994
  2166  0000                     _ODCONE	set	14978
  2167  0000                     _WPUC	set	14945
  2168  0000                     _WPUA	set	14913
  2169  0000                     _WPUB	set	14929
  2170  0000                     _WPUE	set	14977
  2171  0000                     _WPUF	set	14993
  2172  0000                     _WPUD	set	14961
  2173  0000                     _ANSELA	set	14912
  2174  0000                     _ANSELF	set	14992
  2175  0000                     _ANSELE	set	14976
  2176  0000                     _ANSELB	set	14928
  2177  0000                     _ANSELC	set	14944
  2178  0000                     _ANSELD	set	14960
  2179  0000                     _DMA2SSA	set	15321
  2180  0000                     _DMA1SSA	set	15353
  2181  0000                     _DMA2DSZ	set	15310
  2182  0000                     _DMA2SSZ	set	15319
  2183  0000                     _DMA2DSA	set	15312
  2184  0000                     _DMA1DSZ	set	15342
  2185  0000                     _DMA1SSZ	set	15351
  2186  0000                     _DMA1DSA	set	15344
  2187  0000                     _DMA2CON0bits	set	15324
  2188  0000                     _DMA2CON1bits	set	15325
  2189  0000                     _DMA1CON0bits	set	15356
  2190  0000                     _DMA1CON1bits	set	15357
  2191  0000                     _DMA2CON0	set	15324
  2192  0000                     _DMA2AIRQ	set	15326
  2193  0000                     _DMA2SIRQ	set	15327
  2194  0000                     _DMA2CON1	set	15325
  2195  0000                     _DMA1CON0	set	15356
  2196  0000                     _DMA1AIRQ	set	15358
  2197  0000                     _DMA1SIRQ	set	15359
  2198  0000                     _DMA1CON1	set	15357
  2199  0000                     _CLKRCON	set	15589
  2200  0000                     _CLKRCLK	set	15590
  2201  0000                     _SPI1CON1bits	set	15637
  2202  0000                     _SPI1STATUSbits	set	15639
  2203  0000                     _SPI1INTFbits	set	15642
  2204  0000                     _SPI1CON0bits	set	15636
  2205  0000                     _SPI1RXB	set	15632
  2206  0000                     _SPI1TXB	set	15633
  2207  0000                     _SPI1TCNTL	set	15634
  2208  0000                     _SPI1CON0	set	15636
  2209  0000                     _SPI1CLK	set	15644
  2210  0000                     _SPI1BAUD	set	15641
  2211  0000                     _SPI1CON2	set	15638
  2212  0000                     _SPI1CON1	set	15637
  2213  0000                     _U2RXB	set	15824
  2214  0000                     _U2TXB	set	15826
  2215  0000                     _U2ERRIE	set	15842
  2216  0000                     _U2ERRIR	set	15841
  2217  0000                     _U2UIR	set	15840
  2218  0000                     _U2FIFO	set	15839
  2219  0000                     _U2BRGH	set	15838
  2220  0000                     _U2BRGL	set	15837
  2221  0000                     _U2CON2	set	15836
  2222  0000                     _U2CON1	set	15835
  2223  0000                     _U2CON0	set	15834
  2224  0000                     _U2P3L	set	15832
  2225  0000                     _U2P2L	set	15830
  2226  0000                     _U2P1L	set	15828
  2227  0000                     _U1RXB	set	15848
  2228  0000                     _U1ERRIE	set	15866
  2229  0000                     _U1ERRIR	set	15865
  2230  0000                     _U1UIR	set	15864
  2231  0000                     _U1FIFO	set	15863
  2232  0000                     _U1BRGH	set	15862
  2233  0000                     _U1BRGL	set	15861
  2234  0000                     _U1CON2	set	15860
  2235  0000                     _U1CON1	set	15859
  2236  0000                     _U1CON0	set	15858
  2237  0000                     _U1P3H	set	15857
  2238  0000                     _U1P3L	set	15856
  2239  0000                     _U1P2H	set	15855
  2240  0000                     _U1P2L	set	15854
  2241  0000                     _U1P1H	set	15853
  2242  0000                     _U1P1L	set	15852
  2243  0000                     _FVRCON	set	16065
  2244  0000                     _ADFLTRL	set	16102
  2245  0000                     _ADFLTRH	set	16103
  2246  0000                     _ADCON0bits	set	16120
  2247  0000                     _ADCON0	set	16120
  2248  0000                     _ADCLK	set	16127
  2249  0000                     _ADACT	set	16126
  2250  0000                     _ADREF	set	16125
  2251  0000                     _ADSTAT	set	16124
  2252  0000                     _ADCON3	set	16123
  2253  0000                     _ADCON2	set	16122
  2254  0000                     _ADCON1	set	16121
  2255  0000                     _ADPREH	set	16119
  2256  0000                     _ADPREL	set	16118
  2257  0000                     _ADCAP	set	16117
  2258  0000                     _ADACQH	set	16116
  2259  0000                     _ADACQL	set	16115
  2260  0000                     _ADPCH	set	16113
  2261  0000                     _ADRPT	set	16108
  2262  0000                     _ADACCU	set	16106
  2263  0000                     _ADSTPTH	set	16101
  2264  0000                     _ADSTPTL	set	16100
  2265  0000                     _ADUTHH	set	16097
  2266  0000                     _ADUTHL	set	16096
  2267  0000                     _ADLTHH	set	16095
  2268  0000                     _ADLTHL	set	16094
  2269  0000                     _CCPTMRS1bits	set	16223
  2270  0000                     _PORTDbits	set	16333
  2271  0000                     _PORTFbits	set	16335
  2272  0000                     _LATFbits	set	16319
  2273  0000                     _LATCbits	set	16316
  2274  0000                     _LATDbits	set	16317
  2275  0000                     _PORTBbits	set	16331
  2276  0000                     _T3CONbits	set	16294
  2277  0000                     _T3CON	set	16294
  2278  0000                     _TMR3L	set	16292
  2279  0000                     _TMR3H	set	16293
  2280  0000                     _T3CLK	set	16297
  2281  0000                     _T3GATE	set	16296
  2282  0000                     _T3GCON	set	16295
  2283  0000                     _T2CON	set	16300
  2284  0000                     _T2TMR	set	16298
  2285  0000                     _T2PR	set	16299
  2286  0000                     _T2RST	set	16303
  2287  0000                     _T2HLT	set	16301
  2288  0000                     _T2CLKCON	set	16302
  2289  0000                     _PWM8DCL	set	16224
  2290  0000                     _PWM8DCH	set	16225
  2291  0000                     _PWM8CON	set	16226
  2292  0000                     _LATEbits	set	16318
  2293  0000                     _T5CONbits	set	16282
  2294  0000                     _T5CON	set	16282
  2295  0000                     _TMR5L	set	16280
  2296  0000                     _TMR5H	set	16281
  2297  0000                     _T5CLK	set	16285
  2298  0000                     _T5GATE	set	16284
  2299  0000                     _T5GCON	set	16283
  2300  0000                     _T6CON	set	16276
  2301  0000                     _T6TMR	set	16274
  2302  0000                     _T6PR	set	16275
  2303  0000                     _T6RST	set	16279
  2304  0000                     _T6HLT	set	16277
  2305  0000                     _T6CLKCON	set	16278
  2306  0000                     _TRISD	set	16325
  2307  0000                     _TRISC	set	16324
  2308  0000                     _TRISB	set	16323
  2309  0000                     _TRISA	set	16322
  2310  0000                     _TRISF	set	16327
  2311  0000                     _TRISE	set	16326
  2312  0000                     _LATC	set	16316
  2313  0000                     _LATB	set	16315
  2314  0000                     _LATF	set	16319
  2315  0000                     _LATA	set	16314
  2316  0000                     _LATD	set	16317
  2317  0000                     _LATE	set	16318
  2318  0000                     _IVTLOCKbits	set	16340
  2319  0000                     _IVTLOCK	set	16340
  2320  0000                     _INTCON0bits	set	16338
  2321  0000                     _GIE	set	130711
  2322  00FB39                     STR_75:
  2323                           
  2324                           ; BSR set to: 57
  2325  00FB39  20                 	db	32
  2326  00FB3A  25                 	db	37
  2327  00FB3B  63                 	db	99	;'c'
  2328  00FB3C  20                 	db	32
  2329  00FB3D  2C                 	db	44
  2330  00FB3E  25                 	db	37
  2331  00FB3F  6C                 	db	108	;'l'
  2332  00FB40  75                 	db	117	;'u'
  2333  00FB41  2C                 	db	44
  2334  00FB42  25                 	db	37
  2335  00FB43  34                 	db	52	;'4'
  2336  00FB44  2E                 	db	46
  2337  00FB45  34                 	db	52	;'4'
  2338  00FB46  66                 	db	102	;'f'
  2339  00FB47  2C                 	db	44
  2340  00FB48  25                 	db	37
  2341  00FB49  34                 	db	52	;'4'
  2342  00FB4A  2E                 	db	46
  2343  00FB4B  34                 	db	52	;'4'
  2344  00FB4C  66                 	db	102	;'f'
  2345  00FB4D  2C                 	db	44
  2346  00FB4E  25                 	db	37
  2347  00FB4F  34                 	db	52	;'4'
  2348  00FB50  2E                 	db	46
  2349  00FB51  34                 	db	52	;'4'
  2350  00FB52  66                 	db	102	;'f'
  2351  00FB53  2C                 	db	44
  2352  00FB54  25                 	db	37
  2353  00FB55  34                 	db	52	;'4'
  2354  00FB56  2E                 	db	46
  2355  00FB57  34                 	db	52	;'4'
  2356  00FB58  66                 	db	102	;'f'
  2357  00FB59  2C                 	db	44
  2358  00FB5A  25                 	db	37
  2359  00FB5B  34                 	db	52	;'4'
  2360  00FB5C  2E                 	db	46
  2361  00FB5D  34                 	db	52	;'4'
  2362  00FB5E  66                 	db	102	;'f'
  2363  00FB5F  2C                 	db	44
  2364  00FB60  25                 	db	37
  2365  00FB61  34                 	db	52	;'4'
  2366  00FB62  2E                 	db	46
  2367  00FB63  33                 	db	51	;'3'
  2368  00FB64  66                 	db	102	;'f'
  2369  00FB65  2C                 	db	44
  2370  00FB66  25                 	db	37
  2371  00FB67  34                 	db	52	;'4'
  2372  00FB68  2E                 	db	46
  2373  00FB69  33                 	db	51	;'3'
  2374  00FB6A  66                 	db	102	;'f'
  2375  00FB6B  2C                 	db	44
  2376  00FB6C  25                 	db	37
  2377  00FB6D  34                 	db	52	;'4'
  2378  00FB6E  2E                 	db	46
  2379  00FB6F  33                 	db	51	;'3'
  2380  00FB70  66                 	db	102	;'f'
  2381  00FB71  2C                 	db	44
  2382  00FB72  25                 	db	37
  2383  00FB73  34                 	db	52	;'4'
  2384  00FB74  2E                 	db	46
  2385  00FB75  33                 	db	51	;'3'
  2386  00FB76  66                 	db	102	;'f'
  2387  00FB77  2C                 	db	44
  2388  00FB78  25                 	db	37
  2389  00FB79  34                 	db	52	;'4'
  2390  00FB7A  2E                 	db	46
  2391  00FB7B  33                 	db	51	;'3'
  2392  00FB7C  66                 	db	102	;'f'
  2393  00FB7D  2C                 	db	44
  2394  00FB7E  25                 	db	37
  2395  00FB7F  34                 	db	52	;'4'
  2396  00FB80  2E                 	db	46
  2397  00FB81  33                 	db	51	;'3'
  2398  00FB82  66                 	db	102	;'f'
  2399  00FB83  2C                 	db	44
  2400  00FB84  25                 	db	37
  2401  00FB85  64                 	db	100	;'d'
  2402  00FB86  2C                 	db	44
  2403  00FB87  25                 	db	37
  2404  00FB88  64                 	db	100	;'d'
  2405  00FB89  2C                 	db	44
  2406  00FB8A  25                 	db	37
  2407  00FB8B  32                 	db	50	;'2'
  2408  00FB8C  2E                 	db	46
  2409  00FB8D  36                 	db	54	;'6'
  2410  00FB8E  66                 	db	102	;'f'
  2411  00FB8F  2C                 	db	44
  2412  00FB90  25                 	db	37
  2413  00FB91  34                 	db	52	;'4'
  2414  00FB92  2E                 	db	46
  2415  00FB93  33                 	db	51	;'3'
  2416  00FB94  66                 	db	102	;'f'
  2417  00FB95  2C                 	db	44
  2418  00FB96  25                 	db	37
  2419  00FB97  64                 	db	100	;'d'
  2420  00FB98  2C                 	db	44
  2421  00FB99  25                 	db	37
  2422  00FB9A  64                 	db	100	;'d'
  2423  00FB9B  2C                 	db	44
  2424  00FB9C  25                 	db	37
  2425  00FB9D  6C                 	db	108	;'l'
  2426  00FB9E  75                 	db	117	;'u'
  2427  00FB9F  2C                 	db	44
  2428  00FBA0  25                 	db	37
  2429  00FBA1  6C                 	db	108	;'l'
  2430  00FBA2  75                 	db	117	;'u'
  2431  00FBA3  2C                 	db	44
  2432  00FBA4  25                 	db	37
  2433  00FBA5  34                 	db	52	;'4'
  2434  00FBA6  2E                 	db	46
  2435  00FBA7  33                 	db	51	;'3'
  2436  00FBA8  66                 	db	102	;'f'
  2437  00FBA9  2C                 	db	44
  2438  00FBAA  25                 	db	37
  2439  00FBAB  34                 	db	52	;'4'
  2440  00FBAC  2E                 	db	46
  2441  00FBAD  33                 	db	51	;'3'
  2442  00FBAE  66                 	db	102	;'f'
  2443  00FBAF  2C                 	db	44
  2444  00FBB0  25                 	db	37
  2445  00FBB1  34                 	db	52	;'4'
  2446  00FBB2  2E                 	db	46
  2447  00FBB3  33                 	db	51	;'3'
  2448  00FBB4  66                 	db	102	;'f'
  2449  00FBB5  0D                 	db	13
  2450  00FBB6  0A                 	db	10
  2451  00FBB7  00                 	db	0
  2452  00FBB8                     STR_36:
  2453                           
  2454                           ; BSR set to: 57
  2455  00FBB8  53                 	db	83	;'S'
  2456  00FBB9  25                 	db	37
  2457  00FBBA  63                 	db	99	;'c'
  2458  00FBBB  43                 	db	67	;'C'
  2459  00FBBC  20                 	db	32
  2460  00FBBD  25                 	db	37
  2461  00FBBE  64                 	db	100	;'d'
  2462  00FBBF  20                 	db	32
  2463  00FBC0  52                 	db	82	;'R'
  2464  00FBC1  55                 	db	85	;'U'
  2465  00FBC2  4E                 	db	78	;'N'
  2466  00FBC3  20                 	db	32
  2467  00FBC4  25                 	db	37
  2468  00FBC5  64                 	db	100	;'d'
  2469  00FBC6  20                 	db	32
  2470  00FBC7  56                 	db	86	;'V'
  2471  00FBC8  25                 	db	37
  2472  00FBC9  32                 	db	50	;'2'
  2473  00FBCA  2E                 	db	46
  2474  00FBCB  32                 	db	50	;'2'
  2475  00FBCC  66                 	db	102	;'f'
  2476  00FBCD  20                 	db	32
  2477  00FBCE  20                 	db	32
  2478  00FBCF  20                 	db	32
  2479  00FBD0  20                 	db	32
  2480  00FBD1  20                 	db	32
  2481  00FBD2  20                 	db	32
  2482  00FBD3  20                 	db	32
  2483  00FBD4  00                 	db	0
  2484  00FBD5                     STR_17:
  2485                           
  2486                           ; BSR set to: 57
  2487  00FBD5  52                 	db	82	;'R'
  2488  00FBD6  31                 	db	49	;'1'
  2489  00FBD7  20                 	db	32
  2490  00FBD8  25                 	db	37
  2491  00FBD9  32                 	db	50	;'2'
  2492  00FBDA  2E                 	db	46
  2493  00FBDB  33                 	db	51	;'3'
  2494  00FBDC  66                 	db	102	;'f'
  2495  00FBDD  20                 	db	32
  2496  00FBDE  25                 	db	37
  2497  00FBDF  33                 	db	51	;'3'
  2498  00FBE0  2E                 	db	46
  2499  00FBE1  34                 	db	52	;'4'
  2500  00FBE2  66                 	db	102	;'f'
  2501  00FBE3  20                 	db	32
  2502  00FBE4  20                 	db	32
  2503  00FBE5  20                 	db	32
  2504  00FBE6  20                 	db	32
  2505  00FBE7  20                 	db	32
  2506  00FBE8  20                 	db	32
  2507  00FBE9  20                 	db	32
  2508  00FBEA  20                 	db	32
  2509  00FBEB  20                 	db	32
  2510  00FBEC  20                 	db	32
  2511  00FBED  20                 	db	32
  2512  00FBEE  00                 	db	0
  2513  00FBEF                     STR_18:
  2514                           
  2515                           ; BSR set to: 57
  2516  00FBEF  52                 	db	82	;'R'
  2517  00FBF0  32                 	db	50	;'2'
  2518  00FBF1  20                 	db	32
  2519  00FBF2  25                 	db	37
  2520  00FBF3  32                 	db	50	;'2'
  2521  00FBF4  2E                 	db	46
  2522  00FBF5  33                 	db	51	;'3'
  2523  00FBF6  66                 	db	102	;'f'
  2524  00FBF7  20                 	db	32
  2525  00FBF8  25                 	db	37
  2526  00FBF9  33                 	db	51	;'3'
  2527  00FBFA  2E                 	db	46
  2528  00FBFB  34                 	db	52	;'4'
  2529  00FBFC  66                 	db	102	;'f'
  2530  00FBFD  20                 	db	32
  2531  00FBFE  20                 	db	32
  2532  00FBFF  20                 	db	32
  2533  00FC00  20                 	db	32
  2534  00FC01  20                 	db	32
  2535  00FC02  20                 	db	32
  2536  00FC03  20                 	db	32
  2537  00FC04  20                 	db	32
  2538  00FC05  20                 	db	32
  2539  00FC06  20                 	db	32
  2540  00FC07  20                 	db	32
  2541  00FC08  00                 	db	0
  2542  00FC09                     STR_9:
  2543                           
  2544                           ; BSR set to: 57
  2545  00FC09  53                 	db	83	;'S'
  2546  00FC0A  20                 	db	32
  2547  00FC0B  53                 	db	83	;'S'
  2548  00FC0C  25                 	db	37
  2549  00FC0D  63                 	db	99	;'c'
  2550  00FC0E  43                 	db	67	;'C'
  2551  00FC0F  20                 	db	32
  2552  00FC10  25                 	db	37
  2553  00FC11  64                 	db	100	;'d'
  2554  00FC12  20                 	db	32
  2555  00FC13  25                 	db	37
  2556  00FC14  32                 	db	50	;'2'
  2557  00FC15  2E                 	db	46
  2558  00FC16  34                 	db	52	;'4'
  2559  00FC17  66                 	db	102	;'f'
  2560  00FC18  20                 	db	32
  2561  00FC19  20                 	db	32
  2562  00FC1A  20                 	db	32
  2563  00FC1B  20                 	db	32
  2564  00FC1C  20                 	db	32
  2565  00FC1D  20                 	db	32
  2566  00FC1E  20                 	db	32
  2567  00FC1F  20                 	db	32
  2568  00FC20  20                 	db	32
  2569  00FC21  20                 	db	32
  2570  00FC22  00                 	db	0
  2571  00FC23                     
  2572                           ; BSR set to: 57
  2573  00FC23  20                 	db	32
  2574  00FC24  4D                 	db	77	;'M'
  2575  00FC25  65                 	db	101	;'e'
  2576  00FC26  73                 	db	115	;'s'
  2577  00FC27  67                 	db	103	;'g'
  2578  00FC28  20                 	db	32
  2579  00FC29  25                 	db	37
  2580  00FC2A  64                 	db	100	;'d'
  2581  00FC2B  20                 	db	32
  2582  00FC2C  53                 	db	83	;'S'
  2583  00FC2D  74                 	db	116	;'t'
  2584  00FC2E  61                 	db	97	;'a'
  2585  00FC2F  63                 	db	99	;'c'
  2586  00FC30  6B                 	db	107	;'k'
  2587  00FC31  20                 	db	32
  2588  00FC32  25                 	db	37
  2589  00FC33  64                 	db	100	;'d'
  2590  00FC34  20                 	db	32
  2591  00FC35  20                 	db	32
  2592  00FC36  20                 	db	32
  2593  00FC37  20                 	db	32
  2594  00FC38  20                 	db	32
  2595  00FC39  20                 	db	32
  2596  00FC3A  00                 	db	0
  2597  00FC3B                     STR_37:
  2598                           
  2599                           ; BSR set to: 57
  2600  00FC3B  45                 	db	69	;'E'
  2601  00FC3C  53                 	db	83	;'S'
  2602  00FC3D  52                 	db	82	;'R'
  2603  00FC3E  20                 	db	32
  2604  00FC3F  20                 	db	32
  2605  00FC40  25                 	db	37
  2606  00FC41  32                 	db	50	;'2'
  2607  00FC42  2E                 	db	46
  2608  00FC43  36                 	db	54	;'6'
  2609  00FC44  66                 	db	102	;'f'
  2610  00FC45  20                 	db	32
  2611  00FC46  20                 	db	32
  2612  00FC47  20                 	db	32
  2613  00FC48  20                 	db	32
  2614  00FC49  20                 	db	32
  2615  00FC4A  20                 	db	32
  2616  00FC4B  20                 	db	32
  2617  00FC4C  20                 	db	32
  2618  00FC4D  20                 	db	32
  2619  00FC4E  20                 	db	32
  2620  00FC4F  20                 	db	32
  2621  00FC50  20                 	db	32
  2622  00FC51  00                 	db	0
  2623  00FC52                     STR_34:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FC52  42                 	db	66	;'B'
  2627  00FC53  41                 	db	65	;'A'
  2628  00FC54  54                 	db	84	;'T'
  2629  00FC55  54                 	db	84	;'T'
  2630  00FC56  20                 	db	32
  2631  00FC57  50                 	db	80	;'P'
  2632  00FC58  57                 	db	87	;'W'
  2633  00FC59  52                 	db	82	;'R'
  2634  00FC5A  20                 	db	32
  2635  00FC5B  25                 	db	37
  2636  00FC5C  33                 	db	51	;'3'
  2637  00FC5D  2E                 	db	46
  2638  00FC5E  32                 	db	50	;'2'
  2639  00FC5F  66                 	db	102	;'f'
  2640  00FC60  20                 	db	32
  2641  00FC61  20                 	db	32
  2642  00FC62  20                 	db	32
  2643  00FC63  20                 	db	32
  2644  00FC64  20                 	db	32
  2645  00FC65  20                 	db	32
  2646  00FC66  20                 	db	32
  2647  00FC67  20                 	db	32
  2648  00FC68  00                 	db	0
  2649  00FC69                     STR_38:
  2650                           
  2651                           ; BSR set to: 57
  2652  00FC69  52                 	db	82	;'R'
  2653  00FC6A  31                 	db	49	;'1'
  2654  00FC6B  20                 	db	32
  2655  00FC6C  25                 	db	37
  2656  00FC6D  32                 	db	50	;'2'
  2657  00FC6E  2E                 	db	46
  2658  00FC6F  33                 	db	51	;'3'
  2659  00FC70  66                 	db	102	;'f'
  2660  00FC71  20                 	db	32
  2661  00FC72  25                 	db	37
  2662  00FC73  33                 	db	51	;'3'
  2663  00FC74  2E                 	db	46
  2664  00FC75  34                 	db	52	;'4'
  2665  00FC76  66                 	db	102	;'f'
  2666  00FC77  20                 	db	32
  2667  00FC78  20                 	db	32
  2668  00FC79  20                 	db	32
  2669  00FC7A  20                 	db	32
  2670  00FC7B  20                 	db	32
  2671  00FC7C  20                 	db	32
  2672  00FC7D  20                 	db	32
  2673  00FC7E  20                 	db	32
  2674  00FC7F  00                 	db	0
  2675  00FC80                     STR_39:
  2676                           
  2677                           ; BSR set to: 57
  2678  00FC80  52                 	db	82	;'R'
  2679  00FC81  32                 	db	50	;'2'
  2680  00FC82  20                 	db	32
  2681  00FC83  25                 	db	37
  2682  00FC84  32                 	db	50	;'2'
  2683  00FC85  2E                 	db	46
  2684  00FC86  33                 	db	51	;'3'
  2685  00FC87  66                 	db	102	;'f'
  2686  00FC88  20                 	db	32
  2687  00FC89  25                 	db	37
  2688  00FC8A  33                 	db	51	;'3'
  2689  00FC8B  2E                 	db	46
  2690  00FC8C  34                 	db	52	;'4'
  2691  00FC8D  66                 	db	102	;'f'
  2692  00FC8E  20                 	db	32
  2693  00FC8F  20                 	db	32
  2694  00FC90  20                 	db	32
  2695  00FC91  20                 	db	32
  2696  00FC92  20                 	db	32
  2697  00FC93  20                 	db	32
  2698  00FC94  20                 	db	32
  2699  00FC95  20                 	db	32
  2700  00FC96  00                 	db	0
  2701  00FC97                     STR_35:
  2702                           
  2703                           ; BSR set to: 57
  2704  00FC97  42                 	db	66	;'B'
  2705  00FC98  41                 	db	65	;'A'
  2706  00FC99  48                 	db	72	;'H'
  2707  00FC9A  20                 	db	32
  2708  00FC9B  25                 	db	37
  2709  00FC9C  33                 	db	51	;'3'
  2710  00FC9D  2E                 	db	46
  2711  00FC9E  32                 	db	50	;'2'
  2712  00FC9F  66                 	db	102	;'f'
  2713  00FCA0  20                 	db	32
  2714  00FCA1  50                 	db	80	;'P'
  2715  00FCA2  25                 	db	37
  2716  00FCA3  33                 	db	51	;'3'
  2717  00FCA4  2E                 	db	46
  2718  00FCA5  32                 	db	50	;'2'
  2719  00FCA6  66                 	db	102	;'f'
  2720  00FCA7  20                 	db	32
  2721  00FCA8  20                 	db	32
  2722  00FCA9  20                 	db	32
  2723  00FCAA  20                 	db	32
  2724  00FCAB  20                 	db	32
  2725  00FCAC  20                 	db	32
  2726  00FCAD  00                 	db	0
  2727  00FCAE                     STR_16:
  2728                           
  2729                           ; BSR set to: 57
  2730  00FCAE  45                 	db	69	;'E'
  2731  00FCAF  53                 	db	83	;'S'
  2732  00FCB0  52                 	db	82	;'R'
  2733  00FCB1  20                 	db	32
  2734  00FCB2  20                 	db	32
  2735  00FCB3  25                 	db	37
  2736  00FCB4  32                 	db	50	;'2'
  2737  00FCB5  2E                 	db	46
  2738  00FCB6  36                 	db	54	;'6'
  2739  00FCB7  66                 	db	102	;'f'
  2740  00FCB8  20                 	db	32
  2741  00FCB9  20                 	db	32
  2742  00FCBA  20                 	db	32
  2743  00FCBB  20                 	db	32
  2744  00FCBC  20                 	db	32
  2745  00FCBD  20                 	db	32
  2746  00FCBE  20                 	db	32
  2747  00FCBF  20                 	db	32
  2748  00FCC0  20                 	db	32
  2749  00FCC1  20                 	db	32
  2750  00FCC2  20                 	db	32
  2751  00FCC3  00                 	db	0
  2752  00FCC4                     STR_10:
  2753                           
  2754                           ; BSR set to: 57
  2755  00FCC4  53                 	db	83	;'S'
  2756  00FCC5  74                 	db	116	;'t'
  2757  00FCC6  61                 	db	97	;'a'
  2758  00FCC7  74                 	db	116	;'t'
  2759  00FCC8  69                 	db	105	;'i'
  2760  00FCC9  63                 	db	99	;'c'
  2761  00FCCA  20                 	db	32
  2762  00FCCB  53                 	db	83	;'S'
  2763  00FCCC  4F                 	db	79	;'O'
  2764  00FCCD  43                 	db	67	;'C'
  2765  00FCCE  20                 	db	32
  2766  00FCCF  25                 	db	37
  2767  00FCD0  64                 	db	100	;'d'
  2768  00FCD1  20                 	db	32
  2769  00FCD2  20                 	db	32
  2770  00FCD3  20                 	db	32
  2771  00FCD4  20                 	db	32
  2772  00FCD5  20                 	db	32
  2773  00FCD6  20                 	db	32
  2774  00FCD7  20                 	db	32
  2775  00FCD8  20                 	db	32
  2776  00FCD9  00                 	db	0
  2777  00FCDA                     STR_31:
  2778                           
  2779                           ; BSR set to: 57
  2780  00FCDA  42                 	db	66	;'B'
  2781  00FCDB  41                 	db	65	;'A'
  2782  00FCDC  54                 	db	84	;'T'
  2783  00FCDD  20                 	db	32
  2784  00FCDE  49                 	db	73	;'I'
  2785  00FCDF  57                 	db	87	;'W'
  2786  00FCE0  48                 	db	72	;'H'
  2787  00FCE1  20                 	db	32
  2788  00FCE2  25                 	db	37
  2789  00FCE3  34                 	db	52	;'4'
  2790  00FCE4  2E                 	db	46
  2791  00FCE5  31                 	db	49	;'1'
  2792  00FCE6  66                 	db	102	;'f'
  2793  00FCE7  20                 	db	32
  2794  00FCE8  20                 	db	32
  2795  00FCE9  20                 	db	32
  2796  00FCEA  20                 	db	32
  2797  00FCEB  20                 	db	32
  2798  00FCEC  20                 	db	32
  2799  00FCED  20                 	db	32
  2800  00FCEE  20                 	db	32
  2801  00FCEF  00                 	db	0
  2802  00FCF0                     STR_32:
  2803                           
  2804                           ; BSR set to: 57
  2805  00FCF0  42                 	db	66	;'B'
  2806  00FCF1  41                 	db	65	;'A'
  2807  00FCF2  54                 	db	84	;'T'
  2808  00FCF3  20                 	db	32
  2809  00FCF4  4F                 	db	79	;'O'
  2810  00FCF5  57                 	db	87	;'W'
  2811  00FCF6  48                 	db	72	;'H'
  2812  00FCF7  20                 	db	32
  2813  00FCF8  25                 	db	37
  2814  00FCF9  34                 	db	52	;'4'
  2815  00FCFA  2E                 	db	46
  2816  00FCFB  31                 	db	49	;'1'
  2817  00FCFC  66                 	db	102	;'f'
  2818  00FCFD  20                 	db	32
  2819  00FCFE  20                 	db	32
  2820  00FCFF  20                 	db	32
  2821  00FD00  20                 	db	32
  2822  00FD01  20                 	db	32
  2823  00FD02  20                 	db	32
  2824  00FD03  20                 	db	32
  2825  00FD04  20                 	db	32
  2826  00FD05  00                 	db	0
  2827  00FD06                     STR_33:
  2828                           
  2829                           ; BSR set to: 57
  2830  00FD06  42                 	db	66	;'B'
  2831  00FD07  41                 	db	65	;'A'
  2832  00FD08  54                 	db	84	;'T'
  2833  00FD09  20                 	db	32
  2834  00FD0A  54                 	db	84	;'T'
  2835  00FD0B  57                 	db	87	;'W'
  2836  00FD0C  48                 	db	72	;'H'
  2837  00FD0D  20                 	db	32
  2838  00FD0E  25                 	db	37
  2839  00FD0F  34                 	db	52	;'4'
  2840  00FD10  2E                 	db	46
  2841  00FD11  31                 	db	49	;'1'
  2842  00FD12  66                 	db	102	;'f'
  2843  00FD13  20                 	db	32
  2844  00FD14  20                 	db	32
  2845  00FD15  20                 	db	32
  2846  00FD16  20                 	db	32
  2847  00FD17  20                 	db	32
  2848  00FD18  20                 	db	32
  2849  00FD19  20                 	db	32
  2850  00FD1A  20                 	db	32
  2851  00FD1B  00                 	db	0
  2852  00FD1C                     STR_27:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FD1C  49                 	db	73	;'I'
  2856  00FD1D  4E                 	db	78	;'N'
  2857  00FD1E  56                 	db	86	;'V'
  2858  00FD1F  20                 	db	32
  2859  00FD20  20                 	db	32
  2860  00FD21  57                 	db	87	;'W'
  2861  00FD22  48                 	db	72	;'H'
  2862  00FD23  20                 	db	32
  2863  00FD24  25                 	db	37
  2864  00FD25  33                 	db	51	;'3'
  2865  00FD26  2E                 	db	46
  2866  00FD27  32                 	db	50	;'2'
  2867  00FD28  66                 	db	102	;'f'
  2868  00FD29  20                 	db	32
  2869  00FD2A  20                 	db	32
  2870  00FD2B  20                 	db	32
  2871  00FD2C  20                 	db	32
  2872  00FD2D  20                 	db	32
  2873  00FD2E  20                 	db	32
  2874  00FD2F  20                 	db	32
  2875  00FD30  20                 	db	32
  2876  00FD31  00                 	db	0
  2877  00FD32                     STR_26:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FD32  4C                 	db	76	;'L'
  2881  00FD33  4F                 	db	79	;'O'
  2882  00FD34  41                 	db	65	;'A'
  2883  00FD35  44                 	db	68	;'D'
  2884  00FD36  20                 	db	32
  2885  00FD37  57                 	db	87	;'W'
  2886  00FD38  48                 	db	72	;'H'
  2887  00FD39  20                 	db	32
  2888  00FD3A  25                 	db	37
  2889  00FD3B  33                 	db	51	;'3'
  2890  00FD3C  2E                 	db	46
  2891  00FD3D  32                 	db	50	;'2'
  2892  00FD3E  66                 	db	102	;'f'
  2893  00FD3F  20                 	db	32
  2894  00FD40  20                 	db	32
  2895  00FD41  20                 	db	32
  2896  00FD42  20                 	db	32
  2897  00FD43  20                 	db	32
  2898  00FD44  20                 	db	32
  2899  00FD45  20                 	db	32
  2900  00FD46  20                 	db	32
  2901  00FD47  00                 	db	0
  2902  00FD48                     STR_25:
  2903                           
  2904                           ; BSR set to: 57
  2905  00FD48  50                 	db	80	;'P'
  2906  00FD49  56                 	db	86	;'V'
  2907  00FD4A  20                 	db	32
  2908  00FD4B  25                 	db	37
  2909  00FD4C  63                 	db	99	;'c'
  2910  00FD4D  20                 	db	32
  2911  00FD4E  57                 	db	87	;'W'
  2912  00FD4F  48                 	db	72	;'H'
  2913  00FD50  20                 	db	32
  2914  00FD51  25                 	db	37
  2915  00FD52  33                 	db	51	;'3'
  2916  00FD53  2E                 	db	46
  2917  00FD54  32                 	db	50	;'2'
  2918  00FD55  66                 	db	102	;'f'
  2919  00FD56  20                 	db	32
  2920  00FD57  20                 	db	32
  2921  00FD58  20                 	db	32
  2922  00FD59  20                 	db	32
  2923  00FD5A  20                 	db	32
  2924  00FD5B  20                 	db	32
  2925  00FD5C  20                 	db	32
  2926  00FD5D  00                 	db	0
  2927  00FD5E                     STR_24:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FD5E  49                 	db	73	;'I'
  2931  00FD5F  4E                 	db	78	;'N'
  2932  00FD60  56                 	db	86	;'V'
  2933  00FD61  20                 	db	32
  2934  00FD62  20                 	db	32
  2935  00FD63  50                 	db	80	;'P'
  2936  00FD64  57                 	db	87	;'W'
  2937  00FD65  52                 	db	82	;'R'
  2938  00FD66  20                 	db	32
  2939  00FD67  25                 	db	37
  2940  00FD68  33                 	db	51	;'3'
  2941  00FD69  2E                 	db	46
  2942  00FD6A  32                 	db	50	;'2'
  2943  00FD6B  66                 	db	102	;'f'
  2944  00FD6C  20                 	db	32
  2945  00FD6D  20                 	db	32
  2946  00FD6E  20                 	db	32
  2947  00FD6F  20                 	db	32
  2948  00FD70  20                 	db	32
  2949  00FD71  20                 	db	32
  2950  00FD72  20                 	db	32
  2951  00FD73  00                 	db	0
  2952  00FD74                     STR_23:
  2953                           
  2954                           ; BSR set to: 57
  2955  00FD74  4C                 	db	76	;'L'
  2956  00FD75  4F                 	db	79	;'O'
  2957  00FD76  41                 	db	65	;'A'
  2958  00FD77  44                 	db	68	;'D'
  2959  00FD78  20                 	db	32
  2960  00FD79  50                 	db	80	;'P'
  2961  00FD7A  57                 	db	87	;'W'
  2962  00FD7B  52                 	db	82	;'R'
  2963  00FD7C  20                 	db	32
  2964  00FD7D  25                 	db	37
  2965  00FD7E  33                 	db	51	;'3'
  2966  00FD7F  2E                 	db	46
  2967  00FD80  32                 	db	50	;'2'
  2968  00FD81  66                 	db	102	;'f'
  2969  00FD82  20                 	db	32
  2970  00FD83  20                 	db	32
  2971  00FD84  20                 	db	32
  2972  00FD85  20                 	db	32
  2973  00FD86  20                 	db	32
  2974  00FD87  20                 	db	32
  2975  00FD88  20                 	db	32
  2976  00FD89  00                 	db	0
  2977  00FD8A                     STR_22:
  2978                           
  2979                           ; BSR set to: 57
  2980  00FD8A  50                 	db	80	;'P'
  2981  00FD8B  56                 	db	86	;'V'
  2982  00FD8C  20                 	db	32
  2983  00FD8D  25                 	db	37
  2984  00FD8E  63                 	db	99	;'c'
  2985  00FD8F  20                 	db	32
  2986  00FD90  50                 	db	80	;'P'
  2987  00FD91  57                 	db	87	;'W'
  2988  00FD92  52                 	db	82	;'R'
  2989  00FD93  20                 	db	32
  2990  00FD94  25                 	db	37
  2991  00FD95  33                 	db	51	;'3'
  2992  00FD96  2E                 	db	46
  2993  00FD97  32                 	db	50	;'2'
  2994  00FD98  66                 	db	102	;'f'
  2995  00FD99  20                 	db	32
  2996  00FD9A  20                 	db	32
  2997  00FD9B  20                 	db	32
  2998  00FD9C  20                 	db	32
  2999  00FD9D  20                 	db	32
  3000  00FD9E  20                 	db	32
  3001  00FD9F  00                 	db	0
  3002  00FDA0                     STR_11:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FDA0  42                 	db	66	;'B'
  3006  00FDA1  61                 	db	97	;'a'
  3007  00FDA2  74                 	db	116	;'t'
  3008  00FDA3  74                 	db	116	;'t'
  3009  00FDA4  65                 	db	101	;'e'
  3010  00FDA5  72                 	db	114	;'r'
  3011  00FDA6  79                 	db	121	;'y'
  3012  00FDA7  20                 	db	32
  3013  00FDA8  41                 	db	65	;'A'
  3014  00FDA9  68                 	db	104	;'h'
  3015  00FDAA  20                 	db	32
  3016  00FDAB  25                 	db	37
  3017  00FDAC  33                 	db	51	;'3'
  3018  00FDAD  2E                 	db	46
  3019  00FDAE  32                 	db	50	;'2'
  3020  00FDAF  66                 	db	102	;'f'
  3021  00FDB0  20                 	db	32
  3022  00FDB1  20                 	db	32
  3023  00FDB2  20                 	db	32
  3024  00FDB3  20                 	db	32
  3025  00FDB4  20                 	db	32
  3026  00FDB5  00                 	db	0
  3027  00FDB6                     STR_29:
  3028                           
  3029                           ; BSR set to: 57
  3030  00FDB6  42                 	db	66	;'B'
  3031  00FDB7  56                 	db	86	;'V'
  3032  00FDB8  20                 	db	32
  3033  00FDB9  25                 	db	37
  3034  00FDBA  32                 	db	50	;'2'
  3035  00FDBB  2E                 	db	46
  3036  00FDBC  32                 	db	50	;'2'
  3037  00FDBD  66                 	db	102	;'f'
  3038  00FDBE  20                 	db	32
  3039  00FDBF  42                 	db	66	;'B'
  3040  00FDC0  41                 	db	65	;'A'
  3041  00FDC1  20                 	db	32
  3042  00FDC2  25                 	db	37
  3043  00FDC3  32                 	db	50	;'2'
  3044  00FDC4  2E                 	db	46
  3045  00FDC5  32                 	db	50	;'2'
  3046  00FDC6  66                 	db	102	;'f'
  3047  00FDC7  20                 	db	32
  3048  00FDC8  20                 	db	32
  3049  00FDC9  20                 	db	32
  3050  00FDCA  20                 	db	32
  3051  00FDCB  00                 	db	0
  3052  00FDCC                     STR_30:
  3053                           
  3054                           ; BSR set to: 57
  3055  00FDCC  43                 	db	67	;'C'
  3056  00FDCD  56                 	db	86	;'V'
  3057  00FDCE  20                 	db	32
  3058  00FDCF  25                 	db	37
  3059  00FDD0  32                 	db	50	;'2'
  3060  00FDD1  2E                 	db	46
  3061  00FDD2  32                 	db	50	;'2'
  3062  00FDD3  66                 	db	102	;'f'
  3063  00FDD4  20                 	db	32
  3064  00FDD5  4C                 	db	76	;'L'
  3065  00FDD6  41                 	db	65	;'A'
  3066  00FDD7  20                 	db	32
  3067  00FDD8  25                 	db	37
  3068  00FDD9  32                 	db	50	;'2'
  3069  00FDDA  2E                 	db	46
  3070  00FDDB  32                 	db	50	;'2'
  3071  00FDDC  66                 	db	102	;'f'
  3072  00FDDD  20                 	db	32
  3073  00FDDE  20                 	db	32
  3074  00FDDF  20                 	db	32
  3075  00FDE0  20                 	db	32
  3076  00FDE1  00                 	db	0
  3077  00FDE2                     STR_28:
  3078                           
  3079                           ; BSR set to: 57
  3080  00FDE2  50                 	db	80	;'P'
  3081  00FDE3  56                 	db	86	;'V'
  3082  00FDE4  20                 	db	32
  3083  00FDE5  25                 	db	37
  3084  00FDE6  32                 	db	50	;'2'
  3085  00FDE7  2E                 	db	46
  3086  00FDE8  32                 	db	50	;'2'
  3087  00FDE9  66                 	db	102	;'f'
  3088  00FDEA  20                 	db	32
  3089  00FDEB  50                 	db	80	;'P'
  3090  00FDEC  41                 	db	65	;'A'
  3091  00FDED  20                 	db	32
  3092  00FDEE  25                 	db	37
  3093  00FDEF  32                 	db	50	;'2'
  3094  00FDF0  2E                 	db	46
  3095  00FDF1  32                 	db	50	;'2'
  3096  00FDF2  66                 	db	102	;'f'
  3097  00FDF3  20                 	db	32
  3098  00FDF4  20                 	db	32
  3099  00FDF5  20                 	db	32
  3100  00FDF6  20                 	db	32
  3101  00FDF7  00                 	db	0
  3102  00FDF8                     STR_40:
  3103                           
  3104                           ; BSR set to: 57
  3105  00FDF8  25                 	db	37
  3106  00FDF9  64                 	db	100	;'d'
  3107  00FDFA  20                 	db	32
  3108  00FDFB  25                 	db	37
  3109  00FDFC  32                 	db	50	;'2'
  3110  00FDFD  2E                 	db	46
  3111  00FDFE  34                 	db	52	;'4'
  3112  00FDFF  66                 	db	102	;'f'
  3113  00FE00  2C                 	db	44
  3114  00FE01  20                 	db	32
  3115  00FE02  25                 	db	37
  3116  00FE03  64                 	db	100	;'d'
  3117  00FE04  20                 	db	32
  3118  00FE05  20                 	db	32
  3119  00FE06  54                 	db	84	;'T'
  3120  00FE07  52                 	db	82	;'R'
  3121  00FE08  49                 	db	73	;'I'
  3122  00FE09  4D                 	db	77	;'M'
  3123  00FE0A  20                 	db	32
  3124  00FE0B  20                 	db	32
  3125  00FE0C  20                 	db	32
  3126  00FE0D  00                 	db	0
  3127  00FE0E                     STR_5:
  3128                           
  3129                           ; BSR set to: 57
  3130  00FE0E  20                 	db	32
  3131  00FE0F  20                 	db	32
  3132  00FE10  20                 	db	32
  3133  00FE11  20                 	db	32
  3134  00FE12  20                 	db	32
  3135  00FE13  20                 	db	32
  3136  00FE14  20                 	db	32
  3137  00FE15  20                 	db	32
  3138  00FE16  20                 	db	32
  3139  00FE17  20                 	db	32
  3140  00FE18  20                 	db	32
  3141  00FE19  20                 	db	32
  3142  00FE1A  20                 	db	32
  3143  00FE1B  20                 	db	32
  3144  00FE1C  20                 	db	32
  3145  00FE1D  20                 	db	32
  3146  00FE1E  20                 	db	32
  3147  00FE1F  20                 	db	32
  3148  00FE20  20                 	db	32
  3149  00FE21  20                 	db	32
  3150  00FE22  00                 	db	0
  3151  00FE23                     STR_44:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FE23  53                 	db	83	;'S'
  3155  00FE24  65                 	db	101	;'e'
  3156  00FE25  6E                 	db	110	;'n'
  3157  00FE26  73                 	db	115	;'s'
  3158  00FE27  6F                 	db	111	;'o'
  3159  00FE28  72                 	db	114	;'r'
  3160  00FE29  20                 	db	32
  3161  00FE2A  20                 	db	32
  3162  00FE2B  20                 	db	32
  3163  00FE2C  20                 	db	32
  3164  00FE2D  20                 	db	32
  3165  00FE2E  20                 	db	32
  3166  00FE2F  20                 	db	32
  3167  00FE30  20                 	db	32
  3168  00FE31  20                 	db	32
  3169  00FE32  20                 	db	32
  3170  00FE33  20                 	db	32
  3171  00FE34  20                 	db	32
  3172  00FE35  20                 	db	32
  3173  00FE36  20                 	db	32
  3174  00FE37  00                 	db	0
  3175  00FE38                     STR_49:
  3176                           
  3177                           ; BSR set to: 57
  3178  00FE38  53                 	db	83	;'S'
  3179  00FE39  65                 	db	101	;'e'
  3180  00FE3A  6E                 	db	110	;'n'
  3181  00FE3B  73                 	db	115	;'s'
  3182  00FE3C  6F                 	db	111	;'o'
  3183  00FE3D  72                 	db	114	;'r'
  3184  00FE3E  73                 	db	115	;'s'
  3185  00FE3F  20                 	db	32
  3186  00FE40  20                 	db	32
  3187  00FE41  20                 	db	32
  3188  00FE42  20                 	db	32
  3189  00FE43  20                 	db	32
  3190  00FE44  20                 	db	32
  3191  00FE45  20                 	db	32
  3192  00FE46  20                 	db	32
  3193  00FE47  20                 	db	32
  3194  00FE48  20                 	db	32
  3195  00FE49  20                 	db	32
  3196  00FE4A  20                 	db	32
  3197  00FE4B  20                 	db	32
  3198  00FE4C  00                 	db	0
  3199  00FE4D                     STR_8:
  3200                           
  3201                           ; BSR set to: 57
  3202  00FE4D  42                 	db	66	;'B'
  3203  00FE4E  56                 	db	86	;'V'
  3204  00FE4F  20                 	db	32
  3205  00FE50  25                 	db	37
  3206  00FE51  32                 	db	50	;'2'
  3207  00FE52  2E                 	db	46
  3208  00FE53  34                 	db	52	;'4'
  3209  00FE54  66                 	db	102	;'f'
  3210  00FE55  20                 	db	32
  3211  00FE56  20                 	db	32
  3212  00FE57  20                 	db	32
  3213  00FE58  20                 	db	32
  3214  00FE59  20                 	db	32
  3215  00FE5A  20                 	db	32
  3216  00FE5B  20                 	db	32
  3217  00FE5C  20                 	db	32
  3218  00FE5D  20                 	db	32
  3219  00FE5E  20                 	db	32
  3220  00FE5F  20                 	db	32
  3221  00FE60  20                 	db	32
  3222  00FE61  00                 	db	0
  3223  00FE62                     STR_4:
  3224                           
  3225                           ; BSR set to: 57
  3226  00FE62  20                 	db	32
  3227  00FE63  4E                 	db	78	;'N'
  3228  00FE64  53                 	db	83	;'S'
  3229  00FE65  41                 	db	65	;'A'
  3230  00FE66  53                 	db	83	;'S'
  3231  00FE67  50                 	db	80	;'P'
  3232  00FE68  4F                 	db	79	;'O'
  3233  00FE69  4F                 	db	79	;'O'
  3234  00FE6A  4B                 	db	75	;'K'
  3235  00FE6B  20                 	db	32
  3236  00FE6C  20                 	db	32
  3237  00FE6D  20                 	db	32
  3238  00FE6E  20                 	db	32
  3239  00FE6F  20                 	db	32
  3240  00FE70  20                 	db	32
  3241  00FE71  20                 	db	32
  3242  00FE72  20                 	db	32
  3243  00FE73  20                 	db	32
  3244  00FE74  20                 	db	32
  3245  00FE75  20                 	db	32
  3246  00FE76  00                 	db	0
  3247  00FE77                     STR_12:
  3248                           
  3249                           ; BSR set to: 57
  3250  00FE77  42                 	db	66	;'B'
  3251  00FE78  61                 	db	97	;'a'
  3252  00FE79  74                 	db	116	;'t'
  3253  00FE7A  74                 	db	116	;'t'
  3254  00FE7B  65                 	db	101	;'e'
  3255  00FE7C  72                 	db	114	;'r'
  3256  00FE7D  79                 	db	121	;'y'
  3257  00FE7E  20                 	db	32
  3258  00FE7F  45                 	db	69	;'E'
  3259  00FE80  53                 	db	83	;'S'
  3260  00FE81  52                 	db	82	;'R'
  3261  00FE82  20                 	db	32
  3262  00FE83  20                 	db	32
  3263  00FE84  20                 	db	32
  3264  00FE85  20                 	db	32
  3265  00FE86  20                 	db	32
  3266  00FE87  20                 	db	32
  3267  00FE88  20                 	db	32
  3268  00FE89  20                 	db	32
  3269  00FE8A  20                 	db	32
  3270  00FE8B  00                 	db	0
  3271  00FE8C                     STR_13:
  3272                           
  3273                           ; BSR set to: 57
  3274  00FE8C  43                 	db	67	;'C'
  3275  00FE8D  61                 	db	97	;'a'
  3276  00FE8E  6C                 	db	108	;'l'
  3277  00FE8F  63                 	db	99	;'c'
  3278  00FE90  75                 	db	117	;'u'
  3279  00FE91  6C                 	db	108	;'l'
  3280  00FE92  61                 	db	97	;'a'
  3281  00FE93  74                 	db	116	;'t'
  3282  00FE94  69                 	db	105	;'i'
  3283  00FE95  6F                 	db	111	;'o'
  3284  00FE96  6E                 	db	110	;'n'
  3285  00FE97  20                 	db	32
  3286  00FE98  20                 	db	32
  3287  00FE99  20                 	db	32
  3288  00FE9A  20                 	db	32
  3289  00FE9B  20                 	db	32
  3290  00FE9C  20                 	db	32
  3291  00FE9D  20                 	db	32
  3292  00FE9E  20                 	db	32
  3293  00FE9F  20                 	db	32
  3294  00FEA0  00                 	db	0
  3295  00FEA1                     STR_45:
  3296                           
  3297                           ; BSR set to: 57
  3298  00FEA1  43                 	db	67	;'C'
  3299  00FEA2  61                 	db	97	;'a'
  3300  00FEA3  6C                 	db	108	;'l'
  3301  00FEA4  69                 	db	105	;'i'
  3302  00FEA5  62                 	db	98	;'b'
  3303  00FEA6  72                 	db	114	;'r'
  3304  00FEA7  61                 	db	97	;'a'
  3305  00FEA8  74                 	db	116	;'t'
  3306  00FEA9  69                 	db	105	;'i'
  3307  00FEAA  6F                 	db	111	;'o'
  3308  00FEAB  6E                 	db	110	;'n'
  3309  00FEAC  20                 	db	32
  3310  00FEAD  20                 	db	32
  3311  00FEAE  20                 	db	32
  3312  00FEAF  20                 	db	32
  3313  00FEB0  20                 	db	32
  3314  00FEB1  20                 	db	32
  3315  00FEB2  20                 	db	32
  3316  00FEB3  20                 	db	32
  3317  00FEB4  20                 	db	32
  3318  00FEB5  00                 	db	0
  3319  00FEB6                     STR_2:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FEB6  20                 	db	32
  3323  00FEB7  56                 	db	86	;'V'
  3324  00FEB8  65                 	db	101	;'e'
  3325  00FEB9  72                 	db	114	;'r'
  3326  00FEBA  73                 	db	115	;'s'
  3327  00FEBB  69                 	db	105	;'i'
  3328  00FEBC  6F                 	db	111	;'o'
  3329  00FEBD  6E                 	db	110	;'n'
  3330  00FEBE  20                 	db	32
  3331  00FEBF  25                 	db	37
  3332  00FEC0  73                 	db	115	;'s'
  3333  00FEC1  20                 	db	32
  3334  00FEC2  20                 	db	32
  3335  00FEC3  20                 	db	32
  3336  00FEC4  20                 	db	32
  3337  00FEC5  20                 	db	32
  3338  00FEC6  20                 	db	32
  3339  00FEC7  20                 	db	32
  3340  00FEC8  20                 	db	32
  3341  00FEC9  20                 	db	32
  3342  00FECA  00                 	db	0
  3343  00FECB                     STR_53:
  3344                           
  3345                           ; BSR set to: 57
  3346  00FECB  4F                 	db	79	;'O'
  3347  00FECC  75                 	db	117	;'u'
  3348  00FECD  74                 	db	116	;'t'
  3349  00FECE  20                 	db	32
  3350  00FECF  4F                 	db	79	;'O'
  3351  00FED0  66                 	db	102	;'f'
  3352  00FED1  20                 	db	32
  3353  00FED2  52                 	db	82	;'R'
  3354  00FED3  61                 	db	97	;'a'
  3355  00FED4  6E                 	db	110	;'n'
  3356  00FED5  67                 	db	103	;'g'
  3357  00FED6  65                 	db	101	;'e'
  3358  00FED7  20                 	db	32
  3359  00FED8  20                 	db	32
  3360  00FED9  20                 	db	32
  3361  00FEDA  20                 	db	32
  3362  00FEDB  20                 	db	32
  3363  00FEDC  20                 	db	32
  3364  00FEDD  20                 	db	32
  3365  00FEDE  20                 	db	32
  3366  00FEDF  00                 	db	0
  3367  00FEE0                     STR_50:
  3368                           
  3369                           ; BSR set to: 57
  3370  00FEE0  5A                 	db	90	;'Z'
  3371  00FEE1  65                 	db	101	;'e'
  3372  00FEE2  72                 	db	114	;'r'
  3373  00FEE3  6F                 	db	111	;'o'
  3374  00FEE4  20                 	db	32
  3375  00FEE5  43                 	db	67	;'C'
  3376  00FEE6  61                 	db	97	;'a'
  3377  00FEE7  6C                 	db	108	;'l'
  3378  00FEE8  20                 	db	32
  3379  00FEE9  53                 	db	83	;'S'
  3380  00FEEA  65                 	db	101	;'e'
  3381  00FEEB  74                 	db	116	;'t'
  3382  00FEEC  20                 	db	32
  3383  00FEED  20                 	db	32
  3384  00FEEE  20                 	db	32
  3385  00FEEF  20                 	db	32
  3386  00FEF0  20                 	db	32
  3387  00FEF1  20                 	db	32
  3388  00FEF2  20                 	db	32
  3389  00FEF3  20                 	db	32
  3390  00FEF4  00                 	db	0
  3391  00FEF5                     STR_1:
  3392                           
  3393                           ; BSR set to: 57
  3394  00FEF5  20                 	db	32
  3395  00FEF6  4D                 	db	77	;'M'
  3396  00FEF7  42                 	db	66	;'B'
  3397  00FEF8  4D                 	db	77	;'M'
  3398  00FEF9  43                 	db	67	;'C'
  3399  00FEFA  20                 	db	32
  3400  00FEFB  53                 	db	83	;'S'
  3401  00FEFC  4F                 	db	79	;'O'
  3402  00FEFD  4C                 	db	76	;'L'
  3403  00FEFE  41                 	db	65	;'A'
  3404  00FEFF  52                 	db	82	;'R'
  3405  00FF00  4D                 	db	77	;'M'
  3406  00FF01  4F                 	db	79	;'O'
  3407  00FF02  4E                 	db	78	;'N'
  3408  00FF03  20                 	db	32
  3409  00FF04  20                 	db	32
  3410  00FF05  20                 	db	32
  3411  00FF06  20                 	db	32
  3412  00FF07  20                 	db	32
  3413  00FF08  20                 	db	32
  3414  00FF09  00                 	db	0
  3415  00FF0A                     STR_43:
  3416                           
  3417                           ; BSR set to: 57
  3418  00FF0A  50                 	db	80	;'P'
  3419  00FF0B  56                 	db	86	;'V'
  3420  00FF0C  20                 	db	32
  3421  00FF0D  61                 	db	97	;'a'
  3422  00FF0E  6E                 	db	110	;'n'
  3423  00FF0F  64                 	db	100	;'d'
  3424  00FF10  20                 	db	32
  3425  00FF11  42                 	db	66	;'B'
  3426  00FF12  41                 	db	65	;'A'
  3427  00FF13  54                 	db	84	;'T'
  3428  00FF14  54                 	db	84	;'T'
  3429  00FF15  45                 	db	69	;'E'
  3430  00FF16  52                 	db	82	;'R'
  3431  00FF17  59                 	db	89	;'Y'
  3432  00FF18  20                 	db	32
  3433  00FF19  20                 	db	32
  3434  00FF1A  20                 	db	32
  3435  00FF1B  20                 	db	32
  3436  00FF1C  20                 	db	32
  3437  00FF1D  20                 	db	32
  3438  00FF1E  00                 	db	0
  3439  00FF1F                     STR_15:
  3440                           
  3441                           ; BSR set to: 57
  3442  00FF1F  43                 	db	67	;'C'
  3443  00FF20  68                 	db	104	;'h'
  3444  00FF21  65                 	db	101	;'e'
  3445  00FF22  63                 	db	99	;'c'
  3446  00FF23  6B                 	db	107	;'k'
  3447  00FF24  69                 	db	105	;'i'
  3448  00FF25  6E                 	db	110	;'n'
  3449  00FF26  67                 	db	103	;'g'
  3450  00FF27  20                 	db	32
  3451  00FF28  25                 	db	37
  3452  00FF29  63                 	db	99	;'c'
  3453  00FF2A  20                 	db	32
  3454  00FF2B  25                 	db	37
  3455  00FF2C  63                 	db	99	;'c'
  3456  00FF2D  20                 	db	32
  3457  00FF2E  20                 	db	32
  3458  00FF2F  20                 	db	32
  3459  00FF30  20                 	db	32
  3460  00FF31  20                 	db	32
  3461  00FF32  20                 	db	32
  3462  00FF33  00                 	db	0
  3463  00FF34                     STR_14:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FF34  43                 	db	67	;'C'
  3467  00FF35  68                 	db	104	;'h'
  3468  00FF36  65                 	db	101	;'e'
  3469  00FF37  63                 	db	99	;'c'
  3470  00FF38  6B                 	db	107	;'k'
  3471  00FF39  20                 	db	32
  3472  00FF3A  33                 	db	51	;'3'
  3473  00FF3B  30                 	db	48	;'0'
  3474  00FF3C  20                 	db	32
  3475  00FF3D  73                 	db	115	;'s'
  3476  00FF3E  65                 	db	101	;'e'
  3477  00FF3F  63                 	db	99	;'c'
  3478  00FF40  6F                 	db	111	;'o'
  3479  00FF41  6E                 	db	110	;'n'
  3480  00FF42  64                 	db	100	;'d'
  3481  00FF43  73                 	db	115	;'s'
  3482  00FF44  20                 	db	32
  3483  00FF45  20                 	db	32
  3484  00FF46  20                 	db	32
  3485  00FF47  20                 	db	32
  3486  00FF48  00                 	db	0
  3487  00FF49                     STR_46:
  3488                           
  3489                           ; BSR set to: 57
  3490  00FF49  52                 	db	82	;'R'
  3491  00FF4A  65                 	db	101	;'e'
  3492  00FF4B  6C                 	db	108	;'l'
  3493  00FF4C  65                 	db	101	;'e'
  3494  00FF4D  61                 	db	97	;'a'
  3495  00FF4E  73                 	db	115	;'s'
  3496  00FF4F  65                 	db	101	;'e'
  3497  00FF50  20                 	db	32
  3498  00FF51  62                 	db	98	;'b'
  3499  00FF52  75                 	db	117	;'u'
  3500  00FF53  74                 	db	116	;'t'
  3501  00FF54  74                 	db	116	;'t'
  3502  00FF55  6F                 	db	111	;'o'
  3503  00FF56  6E                 	db	110	;'n'
  3504  00FF57  20                 	db	32
  3505  00FF58  25                 	db	37
  3506  00FF59  63                 	db	99	;'c'
  3507  00FF5A  20                 	db	32
  3508  00FF5B  20                 	db	32
  3509  00FF5C  00                 	db	0
  3510  00FF5D                     STR_58:
  3511                           
  3512                           ; BSR set to: 57
  3513  00FF5D  48                 	db	72	;'H'
  3514  00FF5E  45                 	db	69	;'E'
  3515  00FF5F  4C                 	db	76	;'L'
  3516  00FF60  50                 	db	80	;'P'
  3517  00FF61  20                 	db	32
  3518  00FF62  25                 	db	37
  3519  00FF63  73                 	db	115	;'s'
  3520  00FF64  20                 	db	32
  3521  00FF65  20                 	db	32
  3522  00FF66  20                 	db	32
  3523  00FF67  20                 	db	32
  3524  00FF68  20                 	db	32
  3525  00FF69  20                 	db	32
  3526  00FF6A  20                 	db	32
  3527  00FF6B  20                 	db	32
  3528  00FF6C  20                 	db	32
  3529  00FF6D  20                 	db	32
  3530  00FF6E  20                 	db	32
  3531  00FF6F  00                 	db	0
  3532  00FF70                     
  3533                           ; BSR set to: 57
  3534  00FF70  44                 	db	68	;'D'
  3535  00FF71  49                 	db	73	;'I'
  3536  00FF72  53                 	db	83	;'S'
  3537  00FF73  50                 	db	80	;'P'
  3538  00FF74  4C                 	db	76	;'L'
  3539  00FF75  41                 	db	65	;'A'
  3540  00FF76  59                 	db	89	;'Y'
  3541  00FF77  20                 	db	32
  3542  00FF78  25                 	db	37
  3543  00FF79  73                 	db	115	;'s'
  3544  00FF7A  20                 	db	32
  3545  00FF7B  20                 	db	32
  3546  00FF7C  20                 	db	32
  3547  00FF7D  20                 	db	32
  3548  00FF7E  20                 	db	32
  3549  00FF7F  20                 	db	32
  3550  00FF80  20                 	db	32
  3551  00FF81  20                 	db	32
  3552  00FF82  00                 	db	0
  3553  00FF83                     
  3554                           ; BSR set to: 57
  3555  00FF83  25                 	db	37
  3556  00FF84  64                 	db	100	;'d'
  3557  00FF85  20                 	db	32
  3558  00FF86  25                 	db	37
  3559  00FF87  32                 	db	50	;'2'
  3560  00FF88  2E                 	db	46
  3561  00FF89  34                 	db	52	;'4'
  3562  00FF8A  66                 	db	102	;'f'
  3563  00FF8B  2C                 	db	44
  3564  00FF8C  20                 	db	32
  3565  00FF8D  25                 	db	37
  3566  00FF8E  64                 	db	100	;'d'
  3567  00FF8F  20                 	db	32
  3568  00FF90  20                 	db	32
  3569  00FF91  20                 	db	32
  3570  00FF92  23                 	db	35
  3571  00FF93  00                 	db	0
  3572  00FF94                     STR_19:
  3573                           
  3574                           ; BSR set to: 57
  3575  00FF94  25                 	db	37
  3576  00FF95  64                 	db	100	;'d'
  3577  00FF96  20                 	db	32
  3578  00FF97  25                 	db	37
  3579  00FF98  32                 	db	50	;'2'
  3580  00FF99  2E                 	db	46
  3581  00FF9A  34                 	db	52	;'4'
  3582  00FF9B  66                 	db	102	;'f'
  3583  00FF9C  20                 	db	32
  3584  00FF9D  20                 	db	32
  3585  00FF9E  20                 	db	32
  3586  00FF9F  25                 	db	37
  3587  00FFA0  64                 	db	100	;'d'
  3588  00FFA1  20                 	db	32
  3589  00FFA2  20                 	db	32
  3590  00FFA3  00                 	db	0
  3591  00FFA4                     STR_62:
  3592                           
  3593                           ; BSR set to: 57
  3594  00FFA4  76                 	db	118	;'v'
  3595  00FFA5  74                 	db	116	;'t'
  3596  00FFA6  65                 	db	101	;'e'
  3597  00FFA7  72                 	db	114	;'r'
  3598  00FFA8  6D                 	db	109	;'m'
  3599  00FFA9  20                 	db	32
  3600  00FFAA  25                 	db	37
  3601  00FFAB  78                 	db	120	;'x'
  3602  00FFAC  3A                 	db	58	;':'
  3603  00FFAD  25                 	db	37
  3604  00FFAE  78                 	db	120	;'x'
  3605  00FFAF  20                 	db	32
  3606  00FFB0  20                 	db	32
  3607  00FFB1  20                 	db	32
  3608  00FFB2  00                 	db	0
  3609  00FFB3                     STR_56:
  3610                           
  3611                           ; BSR set to: 57
  3612  00FFB3  46                 	db	70	;'F'
  3613  00FFB4  65                 	db	101	;'e'
  3614  00FFB5  62                 	db	98	;'b'
  3615  00FFB6  20                 	db	32
  3616  00FFB7  20                 	db	32
  3617  00FFB8  36                 	db	54	;'6'
  3618  00FFB9  20                 	db	32
  3619  00FFBA  32                 	db	50	;'2'
  3620  00FFBB  30                 	db	48	;'0'
  3621  00FFBC  32                 	db	50	;'2'
  3622  00FFBD  30                 	db	48	;'0'
  3623  00FFBE  00                 	db	0
  3624  00FFBF                     STR_60:
  3625                           
  3626                           ; BSR set to: 57
  3627  00FFBF  25                 	db	37
  3628  00FFC0  73                 	db	115	;'s'
  3629  00FFC1  20                 	db	32
  3630  00FFC2  20                 	db	32
  3631  00FFC3  20                 	db	32
  3632  00FFC4  20                 	db	32
  3633  00FFC5  20                 	db	32
  3634  00FFC6  20                 	db	32
  3635  00FFC7  20                 	db	32
  3636  00FFC8  00                 	db	0
  3637  00FFC9                     STR_57:
  3638                           
  3639                           ; BSR set to: 57
  3640  00FFC9  31                 	db	49	;'1'
  3641  00FFCA  36                 	db	54	;'6'
  3642  00FFCB  3A                 	db	58	;':'
  3643  00FFCC  34                 	db	52	;'4'
  3644  00FFCD  37                 	db	55	;'7'
  3645  00FFCE  3A                 	db	58	;':'
  3646  00FFCF  34                 	db	52	;'4'
  3647  00FFD0  33                 	db	51	;'3'
  3648  00FFD1  00                 	db	0
  3649  00FFD2                     STR_3:
  3650                           
  3651                           ; BSR set to: 57
  3652  00FFD2  31                 	db	49	;'1'
  3653  00FFD3  2E                 	db	46
  3654  00FFD4  31                 	db	49	;'1'
  3655  00FFD5  37                 	db	55	;'7'
  3656  00FFD6  00                 	db	0
  3657  00FFD7                     STR_76:
  3658                           
  3659                           ; BSR set to: 57
  3660  00FFD7  49                 	db	73	;'I'
  3661  00FFD8  4E                 	db	78	;'N'
  3662  00FFD9  46                 	db	70	;'F'
  3663  00FFDA  00                 	db	0
  3664  00FFDB                     STR_80:
  3665                           
  3666                           ; BSR set to: 57
  3667  00FFDB  4E                 	db	78	;'N'
  3668  00FFDC  41                 	db	65	;'A'
  3669  00FFDD  4E                 	db	78	;'N'
  3670  00FFDE  00                 	db	0
  3671  00FFDF                     STR_77:
  3672                           
  3673                           ; BSR set to: 57
  3674  00FFDF  69                 	db	105	;'i'
  3675  00FFE0  6E                 	db	110	;'n'
  3676  00FFE1  66                 	db	102	;'f'
  3677  00FFE2  00                 	db	0
  3678  00FFE3                     STR_81:
  3679                           
  3680                           ; BSR set to: 57
  3681  00FFE3  6E                 	db	110	;'n'
  3682  00FFE4  61                 	db	97	;'a'
  3683  00FFE5  6E                 	db	110	;'n'
  3684  00FFE6  00                 	db	0
  3685  00FFE7                     STR_107:
  3686                           
  3687                           ; BSR set to: 57
  3688  00FFE7  6C                 	db	108	;'l'
  3689  00FFE8  58                 	db	88	;'X'
  3690  00FFE9  00                 	db	0
  3691  00FFEA                     STR_84:
  3692                           
  3693                           ; BSR set to: 57
  3694  00FFEA  6C                 	db	108	;'l'
  3695  00FFEB  64                 	db	100	;'d'
  3696  00FFEC  00                 	db	0
  3697  00FFED                     STR_93:
  3698                           
  3699                           ; BSR set to: 57
  3700  00FFED  6C                 	db	108	;'l'
  3701  00FFEE  66                 	db	102	;'f'
  3702  00FFEF  00                 	db	0
  3703  00FFF0                     STR_88:
  3704                           
  3705                           ; BSR set to: 57
  3706  00FFF0  6C                 	db	108	;'l'
  3707  00FFF1  69                 	db	105	;'i'
  3708  00FFF2  00                 	db	0
  3709  00FFF3                     STR_98:
  3710                           
  3711                           ; BSR set to: 57
  3712  00FFF3  6C                 	db	108	;'l'
  3713  00FFF4  75                 	db	117	;'u'
  3714  00FFF5  00                 	db	0
  3715  00FFF6                     STR_103:
  3716                           
  3717                           ; BSR set to: 57
  3718  00FFF6  6C                 	db	108	;'l'
  3719  00FFF7  78                 	db	120	;'x'
  3720  00FFF8  00                 	db	0
  3721  00FFF9                     STR_55:
  3722                           
  3723                           ; BSR set to: 57
  3724  00FFF9  25                 	db	37
  3725  00FFFA  63                 	db	99	;'c'
  3726  00FFFB  00                 	db	0
  3727  00FFFC                     STR_54:
  3728                           
  3729                           ; BSR set to: 57
  3730  00FFFC  25                 	db	37
  3731  00FFFD  73                 	db	115	;'s'
  3732  00FFFE  00                 	db	0
  3733  0000                     
  3734                           ; #config settings
  3735  00FFFF  00                 	db	0	; dummy byte at the end
  3736  0000                     
  3737                           	psect	cinit
  3738  01A726                     __pcinit:
  3739                           	opt callstack 0
  3740  01A726                     start_initialization:
  3741                           	opt callstack 0
  3742  01A726                     __initialization:
  3743                           	opt callstack 0
  3744                           
  3745                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3746                           ; load TBLPTR registers with __pidataBIGRAM
  3747  01A726  0E8E               	movlw	low __pidataBIGRAM
  3748  01A728  6EF6               	movwf	tblptrl,c
  3749  01A72A  0E6B               	movlw	high __pidataBIGRAM
  3750  01A72C  6EF7               	movwf	tblptrh,c
  3751  01A72E  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3752  01A730  6EF8               	movwf	tblptru,c
  3753  01A732  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3754  01A736  EE20 F32B          	lfsr	2,811
  3755  01A73A                     copy_data0:
  3756  01A73A  0009               	tblrd		*+
  3757  01A73C  006F FFD7 FFEE     	movff	tablat,postinc0
  3758  01A742  50DD               	movf	postdec2,w,c
  3759  01A744  50D9               	movf	fsr2l,w,c
  3760  01A746  E1F9               	bnz	copy_data0
  3761  01A748  50DA               	movf	fsr2h,w,c
  3762  01A74A  E1F7               	bnz	copy_data0
  3763                           
  3764                           ; Initialize objects allocated to BANK1 (208 bytes)
  3765                           ; load TBLPTR registers with __pidataBANK1
  3766  01A74C  0EDA               	movlw	low __pidataBANK1
  3767  01A74E  6EF6               	movwf	tblptrl,c
  3768  01A750  0EA8               	movlw	high __pidataBANK1
  3769  01A752  6EF7               	movwf	tblptrh,c
  3770  01A754  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3771  01A756  6EF8               	movwf	tblptru,c
  3772  01A758  EE00  F100         	lfsr	0,__pdataBANK1
  3773  01A75C  EE20 F0D0          	lfsr	2,208
  3774  01A760                     copy_data1:
  3775  01A760  0009               	tblrd		*+
  3776  01A762  006F FFD7 FFEE     	movff	tablat,postinc0
  3777  01A768  50DD               	movf	postdec2,w,c
  3778  01A76A  50D9               	movf	fsr2l,w,c
  3779  01A76C  E1F9               	bnz	copy_data1
  3780                           
  3781                           ; Initialize objects allocated to BANK0 (54 bytes)
  3782                           ; load TBLPTR registers with __pidataBANK0
  3783  01A76E  0E80               	movlw	low __pidataBANK0
  3784  01A770  6EF6               	movwf	tblptrl,c
  3785  01A772  0EC1               	movlw	high __pidataBANK0
  3786  01A774  6EF7               	movwf	tblptrh,c
  3787  01A776  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3788  01A778  6EF8               	movwf	tblptru,c
  3789  01A77A  EE00  F0AF         	lfsr	0,__pdataBANK0
  3790  01A77E  EE20 F036          	lfsr	2,54
  3791  01A782                     copy_data2:
  3792  01A782  0009               	tblrd		*+
  3793  01A784  006F FFD7 FFEE     	movff	tablat,postinc0
  3794  01A78A  50DD               	movf	postdec2,w,c
  3795  01A78C  50D9               	movf	fsr2l,w,c
  3796  01A78E  E1F9               	bnz	copy_data2
  3797                           
  3798                           ; Clear objects allocated to BIGRAM (482 bytes)
  3799  01A790  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3800  01A794  EE20 F1E2          	lfsr	2,482
  3801  01A798                     clear_0:
  3802  01A798  6AEE               	clrf	postinc0,c
  3803  01A79A  50DD               	movf	postdec2,w,c
  3804  01A79C  50D9               	movf	fsr2l,w,c
  3805  01A79E  E1FC               	bnz	clear_0
  3806  01A7A0  50DA               	movf	fsr2h,w,c
  3807  01A7A2  E1FA               	bnz	clear_0
  3808                           
  3809                           ; Clear objects allocated to BANK4 (255 bytes)
  3810  01A7A4  EE01  F000         	lfsr	0,__pbssBANK4
  3811  01A7A8  EE20 F0FF          	lfsr	2,255
  3812  01A7AC                     clear_1:
  3813  01A7AC  6AEE               	clrf	postinc0,c
  3814  01A7AE  50DD               	movf	postdec2,w,c
  3815  01A7B0  50D9               	movf	fsr2l,w,c
  3816  01A7B2  E1FC               	bnz	clear_1
  3817  01A7B4  50DA               	movf	fsr2h,w,c
  3818  01A7B6  E1FA               	bnz	clear_1
  3819                           
  3820                           ; Clear objects allocated to BANK3 (198 bytes)
  3821  01A7B8  EE00  F300         	lfsr	0,__pbssBANK3
  3822  01A7BC  0EC6               	movlw	198
  3823  01A7BE                     clear_2:
  3824  01A7BE  6AEE               	clrf	postinc0,c
  3825  01A7C0  06E8               	decf	wreg,f,c
  3826  01A7C2  E1FD               	bnz	clear_2
  3827                           
  3828                           ; Clear objects allocated to BANK2 (231 bytes)
  3829  01A7C4  EE00  F200         	lfsr	0,__pbssBANK2
  3830  01A7C8  0EE7               	movlw	231
  3831  01A7CA                     clear_3:
  3832  01A7CA  6AEE               	clrf	postinc0,c
  3833  01A7CC  06E8               	decf	wreg,f,c
  3834  01A7CE  E1FD               	bnz	clear_3
  3835                           
  3836                           ; Clear objects allocated to BANK1 (46 bytes)
  3837  01A7D0  EE00  F1D0         	lfsr	0,__pbssBANK1
  3838  01A7D4  0E2E               	movlw	46
  3839  01A7D6                     clear_4:
  3840  01A7D6  6AEE               	clrf	postinc0,c
  3841  01A7D8  06E8               	decf	wreg,f,c
  3842  01A7DA  E1FD               	bnz	clear_4
  3843                           
  3844                           ; Clear objects allocated to BANK0 (79 bytes)
  3845  01A7DC  EE00  F060         	lfsr	0,__pbssBANK0
  3846  01A7E0  0E4F               	movlw	79
  3847  01A7E2                     clear_5:
  3848  01A7E2  6AEE               	clrf	postinc0,c
  3849  01A7E4  06E8               	decf	wreg,f,c
  3850  01A7E6  E1FD               	bnz	clear_5
  3851                           
  3852                           ; Clear objects allocated to COMRAM (14 bytes)
  3853  01A7E8  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3854  01A7EC  0E0E               	movlw	14
  3855  01A7EE                     clear_6:
  3856  01A7EE  6AEE               	clrf	postinc0,c
  3857  01A7F0  06E8               	decf	wreg,f,c
  3858  01A7F2  E1FD               	bnz	clear_6
  3859                           
  3860                           ;
  3861                           ; Setup IVTBASE
  3862                           ;
  3863  01A7F4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3864  01A7F6  6ED5               	movwf	213,c
  3865  01A7F8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3866  01A7FA  6ED6               	movwf	214,c
  3867  01A7FC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3868  01A7FE  6ED7               	movwf	215,c
  3869  01A800                     end_of_initialization:
  3870                           	opt callstack 0
  3871  01A800                     __end_of__initialization:
  3872                           	opt callstack 0
  3873  01A800  0100               	movlb	0
  3874  01A802  EF22  F089         	goto	_main	;jump to C main() function
  3875                           
  3876                           	psect	bssCOMRAM
  3877  00003A                     __pbssCOMRAM:
  3878                           	opt callstack 0
  3879  00003A                     _width:
  3880                           	opt callstack 0
  3881  00003A                     	ds	2
  3882  00003C                     _prec:
  3883                           	opt callstack 0
  3884  00003C                     	ds	2
  3885  00003E                     _flags:
  3886                           	opt callstack 0
  3887  00003E                     	ds	2
  3888  000040                     calc_bsoc@log_update_wait:
  3889                           	opt callstack 0
  3890  000040                     	ds	1
  3891  000041                     check_day_time@day_delay:
  3892                           	opt callstack 0
  3893  000041                     	ds	1
  3894  000042                     dac_spi_control@S0:
  3895                           	opt callstack 0
  3896  000042                     	ds	1
  3897  000043                     dac_spi_control@init:
  3898                           	opt callstack 0
  3899  000043                     	ds	1
  3900  000044                     _uart2RxHead:
  3901                           	opt callstack 0
  3902  000044                     	ds	1
  3903  000045                     _uart2TxBufferRemaining:
  3904                           	opt callstack 0
  3905  000045                     	ds	1
  3906  000046                     _uart2TxTail:
  3907                           	opt callstack 0
  3908  000046                     	ds	1
  3909  000047                     _uart1RxHead:
  3910                           	opt callstack 0
  3911  000047                     	ds	1
  3912                           
  3913                           	psect	bssBANK0
  3914  000060                     __pbssBANK0:
  3915                           	opt callstack 0
  3916  000060                     fabsf@F463:
  3917                           	opt callstack 0
  3918  000060                     	ds	4
  3919  000064                     ___fpclassifyf@F463:
  3920                           	opt callstack 0
  3921  000064                     	ds	4
  3922  000068                     calc_ror_data@bcror:
  3923                           	opt callstack 0
  3924  000068                     	ds	4
  3925  00006C                     calc_ror_data@bvror:
  3926                           	opt callstack 0
  3927  00006C                     	ds	4
  3928  000070                     calc_model_data@bcror:
  3929                           	opt callstack 0
  3930  000070                     	ds	4
  3931  000074                     calc_model_data@bvror:
  3932                           	opt callstack 0
  3933  000074                     	ds	4
  3934  000078                     wdtdelay@dcount:
  3935                           	opt callstack 0
  3936  000078                     	ds	4
  3937  00007C                     _TMR3_InterruptHandler:
  3938                           	opt callstack 0
  3939  00007C                     	ds	3
  3940  00007F                     _TMR5_InterruptHandler:
  3941                           	opt callstack 0
  3942  00007F                     	ds	3
  3943  000082                     _TMR6_InterruptHandler:
  3944                           	opt callstack 0
  3945  000082                     	ds	3
  3946  000085                     _ADCC_ADTI_InterruptHandler:
  3947                           	opt callstack 0
  3948  000085                     	ds	3
  3949  000088                     _ADCC_ADI_InterruptHandler:
  3950                           	opt callstack 0
  3951  000088                     	ds	3
  3952  00008B                     _UART1_RxInterruptHandler:
  3953                           	opt callstack 0
  3954  00008B                     	ds	3
  3955  00008E                     _UART2_TxInterruptHandler:
  3956                           	opt callstack 0
  3957  00008E                     	ds	3
  3958  000091                     _UART2_RxInterruptHandler:
  3959                           	opt callstack 0
  3960  000091                     	ds	3
  3961  000094                     _INT1_InterruptHandler:
  3962                           	opt callstack 0
  3963  000094                     	ds	3
  3964  000097                     _INT0_InterruptHandler:
  3965                           	opt callstack 0
  3966  000097                     	ds	3
  3967  00009A                     _nout:
  3968                           	opt callstack 0
  3969  00009A                     	ds	2
  3970  00009C                     TMR3_ISR@CountCallBack:
  3971                           	opt callstack 0
  3972  00009C                     	ds	2
  3973  00009E                     _timer3ReloadVal:
  3974                           	opt callstack 0
  3975  00009E                     	ds	2
  3976  0000A0                     TMR5_ISR@CountCallBack:
  3977                           	opt callstack 0
  3978  0000A0                     	ds	2
  3979  0000A2                     _timer5ReloadVal:
  3980                           	opt callstack 0
  3981  0000A2                     	ds	2
  3982  0000A4                     esr_check@esr_state:
  3983                           	opt callstack 0
  3984  0000A4                     	ds	1
  3985  0000A5                     dac_spi_control@SB:
  3986                           	opt callstack 0
  3987  0000A5                     	ds	1
  3988  0000A6                     dac_spi_control@SC:
  3989                           	opt callstack 0
  3990  0000A6                     	ds	1
  3991  0000A7                     dac_spi_control@S2:
  3992                           	opt callstack 0
  3993  0000A7                     	ds	1
  3994  0000A8                     dac_spi_control@S1:
  3995                           	opt callstack 0
  3996  0000A8                     	ds	1
  3997  0000A9                     _mode_sw:
  3998                           	opt callstack 0
  3999  0000A9                     	ds	1
  4000  0000AA                     _uart2RxCount:
  4001                           	opt callstack 0
  4002  0000AA                     	ds	1
  4003  0000AB                     _uart2RxTail:
  4004                           	opt callstack 0
  4005  0000AB                     	ds	1
  4006  0000AC                     _uart2TxHead:
  4007                           	opt callstack 0
  4008  0000AC                     	ds	1
  4009  0000AD                     _uart1RxCount:
  4010                           	opt callstack 0
  4011  0000AD                     	ds	1
  4012  0000AE                     _uart1RxTail:
  4013                           	opt callstack 0
  4014  0000AE                     	ds	1
  4015                           
  4016                           	psect	dataBANK0
  4017  0000AF                     __pdataBANK0:
  4018                           	opt callstack 0
  4019  0000AF                     _R:
  4020                           	opt callstack 0
  4021  0000AF                     	ds	54
  4022                           
  4023                           	psect	bssBANK1
  4024  0001D0                     __pbssBANK1:
  4025                           	opt callstack 0
  4026  0001D0                     _spi_link:
  4027                           	opt callstack 0
  4028  0001D0                     	ds	12
  4029  0001DC                     _uart1RxBuffer:
  4030                           	opt callstack 0
  4031  0001DC                     	ds	8
  4032  0001E4                     spinners@s:
  4033                           	opt callstack 0
  4034  0001E4                     	ds	6
  4035  0001EA                     floorf@F524:
  4036                           	opt callstack 0
  4037  0001EA                     	ds	4
  4038  0001EE                     _utctime:
  4039                           	opt callstack 0
  4040  0001EE                     	ds	4
  4041  0001F2                     _P:
  4042                           	opt callstack 0
  4043  0001F2                     	ds	4
  4044  0001F6                     _seed:
  4045                           	opt callstack 0
  4046  0001F6                     	ds	8
  4047                           
  4048                           	psect	dataBANK1
  4049  000100                     __pdataBANK1:
  4050                           	opt callstack 0
  4051  000100                     stoa@F1166:
  4052                           	opt callstack 0
  4053  000100                     	ds	7
  4054  000107                     _V:
  4055                           	opt callstack 0
  4056  000107                     	ds	192
  4057  0001C7                     _H:
  4058                           	opt callstack 0
  4059  0001C7                     	ds	9
  4060                           
  4061                           	psect	bssBANK2
  4062  000200                     __pbssBANK2:
  4063                           	opt callstack 0
  4064  000200                     lp_filter@smooth:
  4065                           	opt callstack 0
  4066  000200                     	ds	84
  4067  000254                     _S:
  4068                           	opt callstack 0
  4069  000254                     	ds	41
  4070  00027D                     _tickCount:
  4071                           	opt callstack 0
  4072  00027D                     	ds	26
  4073  000297                     _dbuf:
  4074                           	opt callstack 0
  4075  000297                     	ds	80
  4076                           
  4077                           	psect	bssBANK3
  4078  000300                     __pbssBANK3:
  4079                           	opt callstack 0
  4080  000300                     _uart2TxBuffer:
  4081                           	opt callstack 0
  4082  000300                     	ds	64
  4083  000340                     _ring_buf2:
  4084                           	opt callstack 0
  4085  000340                     	ds	67
  4086  000383                     _ring_buf1:
  4087                           	opt callstack 0
  4088  000383                     	ds	67
  4089                           
  4090                           	psect	bssBANK4
  4091  000400                     __pbssBANK4:
  4092                           	opt callstack 0
  4093  000400                     _uart2RxBuffer:
  4094                           	opt callstack 0
  4095  000400                     	ds	255
  4096                           
  4097                           	psect	bssBIGRAM
  4098  00082A                     __pbssBIGRAM:
  4099                           	opt callstack 0
  4100  00082A                     _D:
  4101                           	opt callstack 0
  4102  00082A                     	ds	482
  4103                           
  4104                           	psect	dataBIGRAM
  4105  0004FF                     __pdataBIGRAM:
  4106                           	opt callstack 0
  4107  0004FF                     _port_data:
  4108                           	opt callstack 0
  4109  0004FF                     	ds	512
  4110  0006FF                     _C:
  4111                           	opt callstack 0
  4112  0006FF                     	ds	299
  4113                           
  4114                           	psect	cstackBANK0
  4115  0000E5                     __pcstackBANK0:
  4116                           	opt callstack 0
  4117  0000E5                     ??_TMR3_ISR:
  4118                           
  4119                           ; 1 bytes @ 0x0
  4120  0000E5                     	ds	25
  4121                           
  4122                           	psect	cstackCOMRAM
  4123  000021                     __pcstackCOMRAM:
  4124                           	opt callstack 0
  4125  000021                     ??_ADCC_ThresholdISR:
  4126  000021                     
  4127                           ; 1 bytes @ 0x0
  4128  000021                     	ds	5
  4129  000026                     ??_TMR6_ISR:
  4130                           
  4131                           ; 1 bytes @ 0x5
  4132  000026                     	ds	1
  4133  000027                     ??_INT1_ISR:
  4134  000027                     
  4135                           ; 1 bytes @ 0x6
  4136  000027                     	ds	4
  4137  00002B                     ??_TMR5_ISR:
  4138                           
  4139                           ; 1 bytes @ 0xA
  4140  00002B                     	ds	15
  4141                           
  4142 ;;
  4143 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4144 ;;
  4145 ;; *************** function _main *****************
  4146 ;; Defined at:
  4147 ;;		line 189 in file "main.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  esr_temp        4  [STACK] float 
  4152 ;;  i_esr           2  [STACK] unsigned short 
  4153 ;;  shape           1  [STACK] unsigned char 
  4154 ;;  inp_index       1  [STACK] unsigned char 
  4155 ;;  k               1  [STACK] unsigned char 
  4156 ;;  j               1  [STACK] unsigned char 
  4157 ;;  i               1  [STACK] unsigned char 
  4158 ;;  mode            1  [STACK] enum E17013
  4159 ;;  i_ror           1  [STACK] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1  [STACK] void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels required when called:   29
  4175 ;; This function calls:
  4176 ;;		_SYSTEM_Initialize
  4177 ;;		_StartTimer
  4178 ;;		_TimerDone
  4179 ;;		_WaitMs
  4180 ;;		___fladd
  4181 ;;		___flge
  4182 ;;		___fltol
  4183 ;;		_calc_model_data
  4184 ;;		_calc_ror_data
  4185 ;;		_check_adc_scan
  4186 ;;		_check_enter_button
  4187 ;;		_check_help
  4188 ;;		_clear_adc_scan
  4189 ;;		_clear_hid_pflags
  4190 ;;		_conv_raw_result
  4191 ;;		_convert_adc_data
  4192 ;;		_current_sensor_cal
  4193 ;;		_eaDogM_WriteCommand
  4194 ;;		_esr_check
  4195 ;;		_fabsf
  4196 ;;		_get_raw_result
  4197 ;;		_get_switch
  4198 ;;		_get_vterm_ptr
  4199 ;;		_hid_display
  4200 ;;		_init_bsoc
  4201 ;;		_init_display
  4202 ;;		_init_port_dma
  4203 ;;		_lp_filter
  4204 ;;		_mode_lamp_dim
  4205 ;;		_set_dac
  4206 ;;		_set_dac_a
  4207 ;;		_set_dac_b
  4208 ;;		_set_display_info
  4209 ;;		_set_load_relay_one
  4210 ;;		_set_load_relay_two
  4211 ;;		_set_vterm
  4212 ;;		_spinners
  4213 ;;		_sprintf
  4214 ;;		_srand
  4215 ;;		_start_adc_scan
  4216 ;;		_start_switch_handler
  4217 ;;		_static_soc
  4218 ;;		_update_lcd
  4219 ;;		_wait_lcd_done
  4220 ;; This function is called by:
  4221 ;;		Startup code after reset
  4222 ;; This function uses a reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text0
  4226  011244                     __ptext0:
  4227                           	opt callstack 0
  4228  011244                     _main:
  4229                           	opt callstack 0
  4230                           
  4231                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4232  011244  0E11               	movlw	17
  4233  011246  26E1               	addwf	fsr1l,f,c
  4234  011248  0E00               	movlw	0
  4235  01124A  22E2               	addwfc	fsr1h,f,c
  4236                           
  4237                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4238                           ;stkvar	_inp_index @ sp[(-17)+11]
  4239                           
  4240                           ;incstack = 0
  4241  01124C  0EFA               	movlw	-6
  4242  01124E  6AE3               	clrf	plusw1,c
  4243                           
  4244                           ;stkvar	_i @ sp[(-17)+14]
  4245  011250  0EFD               	movlw	-3
  4246  011252  6AE3               	clrf	plusw1,c
  4247                           
  4248                           ;stkvar	_j @ sp[(-17)+13]
  4249  011254  0EFC               	movlw	-4
  4250  011256  6AE3               	clrf	plusw1,c
  4251  011258  2AE3               	incf	plusw1,f,c
  4252                           
  4253                           ;stkvar	_k @ sp[(-17)+12]
  4254  01125A  0EFB               	movlw	-5
  4255  01125C  6AE3               	clrf	plusw1,c
  4256  01125E  82E3               	bsf	plusw1,1,c
  4257                           
  4258                           ;main.c: 195:  SYSTEM_Initialize();
  4259  011260  EC6E  F0DE         	call	_SYSTEM_Initialize	;wreg free
  4260                           
  4261                           ; BSR set to: 60
  4262                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4263  011264  8ED2               	bsf	210,7,c	;volatile
  4264                           
  4265                           ; BSR set to: 60
  4266                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4267  011266  8CD2               	bsf	210,6,c	;volatile
  4268                           
  4269                           ; BSR set to: 60
  4270                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4271  011268  0101               	movlb	1	; () banked
  4272  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;main.c: 208:  WaitMs(300);
  4276  01126C  0E2C               	movlw	44
  4277  01126E  6EE6               	movwf	postinc1,c
  4278  011270  0E01               	movlw	1
  4279  011272  6EE6               	movwf	postinc1,c
  4280  011274  ECDB  F0E0         	call	_WaitMs	;wreg free
  4281                           
  4282                           ;main.c: 209:  if (PORTBbits.RB0) {
  4283  011278  A0CB               	btfss	203,0,c	;volatile
  4284  01127A  D004               	goto	l13715
  4285                           
  4286                           ;main.c: 210:   mode = UI_STATE_HOST;
  4287                           ;stkvar	_mode @ sp[(-17)+15]
  4288  01127C  0EFE               	movlw	-2
  4289  01127E  6AE3               	clrf	plusw1,c
  4290  011280  2AE3               	incf	plusw1,f,c
  4291                           
  4292                           ;main.c: 211:  } else {
  4293  011282  D004               	goto	l13717
  4294  011284                     l13715:
  4295                           
  4296                           ;main.c: 212:   mode = UI_STATE_LOG;
  4297                           ;stkvar	_mode @ sp[(-17)+15]
  4298  011284  0EFE               	movlw	-2
  4299  011286  6AE3               	clrf	plusw1,c
  4300  011288  80E3               	bsf	plusw1,0,c
  4301  01128A  82E3               	bsf	plusw1,1,c	;indir
  4302  01128C                     l13717:
  4303                           
  4304                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4305                           ;stkvar	_mode @ sp[(-17)+15]
  4306  01128C  0EFE               	movlw	-2
  4307  01128E  04E3               	decf	plusw1,w,c
  4308  011290  A4D8               	btfss	status,2,c
  4309  011292  D007               	goto	l1336
  4310                           
  4311                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4312  011294  80BD               	bsf	189,0,c	;volatile
  4313                           
  4314                           ;main.c: 217:   V.mode_pwm = 70;
  4315  011296  0E00               	movlw	0
  4316  011298  0101               	movlb	1	; () banked
  4317  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4318  01129C  0E46               	movlw	70
  4319  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4320                           
  4321                           ;main.c: 218:  } else {
  4322  0112A0  D004               	goto	l13721
  4323  0112A2                     l1336:
  4324  0112A2  90BD               	bcf	189,0,c	;volatile
  4325                           
  4326                           ;main.c: 220:   V.mode_pwm = 0;
  4327  0112A4  0101               	movlb	1	; () banked
  4328  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4329  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4330  0112AA                     l13721:
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4334  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4335  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4336  0112B6  EC7F  F0E4         	call	_mode_lamp_dim	;wreg free
  4337  0112BA  D34D               	goto	l13857
  4338  0112BC                     l13723:
  4339                           
  4340                           ; BSR set to: 1
  4341                           ;main.c: 230:    init_port_dma();
  4342  0112BC  EC5E  F0E1         	call	_init_port_dma	;wreg free
  4343                           
  4344                           ; BSR set to: 59
  4345                           ;main.c: 232:    init_display();
  4346  0112C0  ECAC  F0D2         	call	_init_display	;wreg free
  4347                           
  4348                           ; BSR set to: 61
  4349                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4350  0112C4  0E0C               	movlw	12
  4351  0112C6  6EE6               	movwf	postinc1,c
  4352  0112C8  ECEB  F0E4         	call	_eaDogM_WriteCommand	;wreg free
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;main.c: 234:    set_dac();
  4356  0112CC  EC53  F0D6         	call	_set_dac	;wreg free
  4357                           
  4358                           ;main.c: 238:    set_load_relay_one(1);
  4359  0112D0  0E01               	movlw	1
  4360  0112D2  6EE6               	movwf	postinc1,c
  4361  0112D4  ECD3  F0E4         	call	_set_load_relay_one	;wreg free
  4362                           
  4363                           ;main.c: 239:    set_load_relay_two(1);
  4364  0112D8  0E01               	movlw	1
  4365  0112DA  6EE6               	movwf	postinc1,c
  4366  0112DC  ECCB  F0E4         	call	_set_load_relay_two	;wreg free
  4367                           
  4368                           ;main.c: 241:    V.ui_state = mode;
  4369                           ;stkvar	_mode @ sp[(-17)+15]
  4370  0112E0  0EFE               	movlw	-2
  4371  0112E2  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4372                           
  4373                           ;main.c: 242:    srand(1957);
  4374  0112E8  0EA5               	movlw	165
  4375  0112EA  6EE6               	movwf	postinc1,c
  4376  0112EC  0E07               	movlw	7
  4377  0112EE  6EE6               	movwf	postinc1,c
  4378  0112F0  ECF6  F0E0         	call	_srand	;wreg free
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;main.c: 243:    set_vterm(0);
  4382  0112F4  0E00               	movlw	0
  4383  0112F6  6EE6               	movwf	postinc1,c
  4384  0112F8  EC37  F0E4         	call	_set_vterm	;wreg free
  4385                           
  4386                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4387  0112FC  0EF5               	movlw	low STR_1
  4388  0112FE  6EE6               	movwf	postinc1,c
  4389  011300  0EFE               	movlw	high STR_1
  4390  011302  6EE6               	movwf	postinc1,c
  4391  011304  0E00               	movlw	0
  4392  011306  6EE6               	movwf	postinc1,c
  4393  011308  0E00               	movlw	0
  4394  01130A  6EE6               	movwf	postinc1,c
  4395  01130C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4396  011310  0060  F007  FFE6   	movff	btemp,postinc1
  4397  011316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4398  01131C  0E04               	movlw	4
  4399  01131E  6EE6               	movwf	postinc1,c
  4400  011320  ECAC  F0D1         	call	_sprintf	;wreg free
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.17");
  4404  011324  0ED2               	movlw	low STR_3
  4405  011326  6EE6               	movwf	postinc1,c
  4406  011328  0EFF               	movlw	high STR_3
  4407  01132A  6EE6               	movwf	postinc1,c
  4408  01132C  0EB6               	movlw	low STR_2
  4409  01132E  6EE6               	movwf	postinc1,c
  4410  011330  0EFE               	movlw	high STR_2
  4411  011332  6EE6               	movwf	postinc1,c
  4412  011334  0E00               	movlw	0
  4413  011336  6EE6               	movwf	postinc1,c
  4414  011338  0E01               	movlw	1
  4415  01133A  6EE6               	movwf	postinc1,c
  4416  01133C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4417  011340  0060  F007  FFE6   	movff	btemp,postinc1
  4418  011346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4419  01134C  0E06               	movlw	6
  4420  01134E  6EE6               	movwf	postinc1,c
  4421  011350  ECAC  F0D1         	call	_sprintf	;wreg free
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4425  011354  0E62               	movlw	low STR_4
  4426  011356  6EE6               	movwf	postinc1,c
  4427  011358  0EFE               	movlw	high STR_4
  4428  01135A  6EE6               	movwf	postinc1,c
  4429  01135C  0E00               	movlw	0
  4430  01135E  6EE6               	movwf	postinc1,c
  4431  011360  0E02               	movlw	2
  4432  011362  6EE6               	movwf	postinc1,c
  4433  011364  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4434  011368  0060  F007  FFE6   	movff	btemp,postinc1
  4435  01136E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4436  011374  0E04               	movlw	4
  4437  011376  6EE6               	movwf	postinc1,c
  4438  011378  ECAC  F0D1         	call	_sprintf	;wreg free
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4442  01137C  0E0E               	movlw	low STR_5
  4443  01137E  6EE6               	movwf	postinc1,c
  4444  011380  0EFE               	movlw	high STR_5
  4445  011382  6EE6               	movwf	postinc1,c
  4446  011384  0E02               	movlw	2
  4447  011386  6EE6               	movwf	postinc1,c
  4448  011388  0E00               	movlw	0
  4449  01138A  6EE6               	movwf	postinc1,c
  4450  01138C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4451  011390  0060  F007  FFE6   	movff	btemp,postinc1
  4452  011396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4453  01139C  0E04               	movlw	4
  4454  01139E  6EE6               	movwf	postinc1,c
  4455  0113A0  ECAC  F0D1         	call	_sprintf	;wreg free
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4459  0113A4  0E0E               	movlw	low STR_5
  4460  0113A6  6EE6               	movwf	postinc1,c
  4461  0113A8  0EFE               	movlw	high STR_5
  4462  0113AA  6EE6               	movwf	postinc1,c
  4463  0113AC  0E02               	movlw	2
  4464  0113AE  6EE6               	movwf	postinc1,c
  4465  0113B0  0E01               	movlw	1
  4466  0113B2  6EE6               	movwf	postinc1,c
  4467  0113B4  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4468  0113B8  0060  F007  FFE6   	movff	btemp,postinc1
  4469  0113BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4470  0113C4  0E04               	movlw	4
  4471  0113C6  6EE6               	movwf	postinc1,c
  4472  0113C8  ECAC  F0D1         	call	_sprintf	;wreg free
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4476  0113CC  0E0E               	movlw	low STR_5
  4477  0113CE  6EE6               	movwf	postinc1,c
  4478  0113D0  0EFE               	movlw	high STR_5
  4479  0113D2  6EE6               	movwf	postinc1,c
  4480  0113D4  0E02               	movlw	2
  4481  0113D6  6EE6               	movwf	postinc1,c
  4482  0113D8  0E02               	movlw	2
  4483  0113DA  6EE6               	movwf	postinc1,c
  4484  0113DC  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4485  0113E0  0060  F007  FFE6   	movff	btemp,postinc1
  4486  0113E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4487  0113EC  0E04               	movlw	4
  4488  0113EE  6EE6               	movwf	postinc1,c
  4489  0113F0  ECAC  F0D1         	call	_sprintf	;wreg free
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;main.c: 250:    update_lcd(0);
  4493  0113F4  0E00               	movlw	0
  4494  0113F6  6EE6               	movwf	postinc1,c
  4495  0113F8  EC24  F0D1         	call	_update_lcd	;wreg free
  4496                           
  4497                           ;main.c: 251:    WaitMs(1000);
  4498  0113FC  0EE8               	movlw	232
  4499  0113FE  6EE6               	movwf	postinc1,c
  4500  011400  0E03               	movlw	3
  4501  011402  6EE6               	movwf	postinc1,c
  4502  011404  ECDB  F0E0         	call	_WaitMs	;wreg free
  4503                           
  4504                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4505  011408  0EFA               	movlw	250
  4506  01140A  6EE6               	movwf	postinc1,c
  4507  01140C  0E00               	movlw	0
  4508  01140E  6EE6               	movwf	postinc1,c
  4509  011410  0E0A               	movlw	10
  4510  011412  6EE6               	movwf	postinc1,c
  4511  011414  ECEC  F0DF         	call	_StartTimer	;wreg free
  4512                           
  4513                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4514  011418  0EC8               	movlw	200
  4515  01141A  6EE6               	movwf	postinc1,c
  4516  01141C  0E00               	movlw	0
  4517  01141E  6EE6               	movwf	postinc1,c
  4518  011420  0E01               	movlw	1
  4519  011422  6EE6               	movwf	postinc1,c
  4520  011424  ECEC  F0DF         	call	_StartTimer	;wreg free
  4521                           
  4522                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4523  011428  0EB8               	movlw	184
  4524  01142A  6EE6               	movwf	postinc1,c
  4525  01142C  0E0B               	movlw	11
  4526  01142E  6EE6               	movwf	postinc1,c
  4527  011430  0E07               	movlw	7
  4528  011432  6EE6               	movwf	postinc1,c
  4529  011434  ECEC  F0DF         	call	_StartTimer	;wreg free
  4530                           
  4531                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4532  011438  0EDC               	movlw	220
  4533  01143A  6EE6               	movwf	postinc1,c
  4534  01143C  0E05               	movlw	5
  4535  01143E  6EE6               	movwf	postinc1,c
  4536  011440  0E0B               	movlw	11
  4537  011442  6EE6               	movwf	postinc1,c
  4538  011444  ECEC  F0DF         	call	_StartTimer	;wreg free
  4539                           
  4540                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4541  011448  0EB8               	movlw	184
  4542  01144A  6EE6               	movwf	postinc1,c
  4543  01144C  0E0B               	movlw	11
  4544  01144E  6EE6               	movwf	postinc1,c
  4545  011450  0E09               	movlw	9
  4546  011452  6EE6               	movwf	postinc1,c
  4547  011454  ECEC  F0DF         	call	_StartTimer	;wreg free
  4548                           
  4549                           ;main.c: 258:    start_adc_scan();
  4550  011458  EC85  F0DC         	call	_start_adc_scan	;wreg free
  4551                           
  4552                           ;main.c: 259:    start_switch_handler();
  4553  01145C  ECF9  F0E3         	call	_start_switch_handler	;wreg free
  4554                           
  4555                           ; BSR set to: 57
  4556                           ;main.c: 260:    WaitMs(1000);
  4557  011460  0EE8               	movlw	232
  4558  011462  6EE6               	movwf	postinc1,c
  4559  011464  0E03               	movlw	3
  4560  011466  6EE6               	movwf	postinc1,c
  4561  011468  ECDB  F0E0         	call	_WaitMs	;wreg free
  4562                           
  4563                           ;main.c: 265:    i_ror = 1;
  4564                           ;stkvar	_i_ror @ sp[(-17)+16]
  4565  01146C  0EFF               	movlw	-1
  4566  01146E  6AE3               	clrf	plusw1,c
  4567  011470  2AE3               	incf	plusw1,f,c
  4568  011472                     l13775:
  4569                           
  4570                           ;main.c: 267:     calc_ror_data();
  4571  011472  EC36  F0C8         	call	_calc_ror_data	;wreg free
  4572                           
  4573                           ;main.c: 268:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4574  011476  0E00               	movlw	0
  4575  011478  6EE6               	movwf	postinc1,c
  4576  01147A  0E04               	movlw	4
  4577  01147C  6EE6               	movwf	postinc1,c
  4578  01147E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  4579  011482  0060  F007  FFE6   	movff	btemp,postinc1
  4580  011488  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4581  01148E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4582  011494  0060  F013  FFE6   	movff	btemp+3,postinc1
  4583  01149A  0E4D               	movlw	low STR_8
  4584  01149C  6EE6               	movwf	postinc1,c
  4585  01149E  0EFE               	movlw	high STR_8
  4586  0114A0  6EE6               	movwf	postinc1,c
  4587  0114A2  0E00               	movlw	0
  4588  0114A4  6EE6               	movwf	postinc1,c
  4589  0114A6  0E01               	movlw	1
  4590  0114A8  6EE6               	movwf	postinc1,c
  4591  0114AA  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4592  0114AE  0060  F007  FFE6   	movff	btemp,postinc1
  4593  0114B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4594  0114BA  0E08               	movlw	8
  4595  0114BC  6EE6               	movwf	postinc1,c
  4596  0114BE  ECAC  F0D1         	call	_sprintf	;wreg free
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4600  0114C2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4601  0114C6  006F FF7B FFE6     	movff	postinc2,postinc1
  4602  0114CC  006F FF7B FFE6     	movff	postinc2,postinc1
  4603  0114D2  006F FF7B FFE6     	movff	postinc2,postinc1
  4604  0114D8  006F FF7B FFE6     	movff	postinc2,postinc1
  4605                           
  4606                           ;stkvar	_i_ror @ sp[(-21)+16]
  4607  0114DE  0EFB               	movlw	-5
  4608  0114E0  50E3               	movf	plusw1,w,c
  4609  0114E2  6EE6               	movwf	postinc1,c
  4610  0114E4  0E00               	movlw	0
  4611  0114E6  6EE6               	movwf	postinc1,c
  4612  0114E8  0E00               	movlw	0
  4613  0114EA  6EE6               	movwf	postinc1,c
  4614  0114EC  0E05               	movlw	5
  4615  0114EE  6EE6               	movwf	postinc1,c
  4616  0114F0  EC31  F0D2         	call	_spinners	;wreg free
  4617  0114F4  5001               	movf	btemp^0,w,c
  4618  0114F6  6EE6               	movwf	postinc1,c
  4619  0114F8  0E00               	movlw	0
  4620  0114FA  6EE6               	movwf	postinc1,c
  4621  0114FC  0E09               	movlw	low STR_9
  4622  0114FE  6EE6               	movwf	postinc1,c
  4623  011500  0EFC               	movlw	high STR_9
  4624  011502  6EE6               	movwf	postinc1,c
  4625  011504  0E00               	movlw	0
  4626  011506  6EE6               	movwf	postinc1,c
  4627  011508  0E02               	movlw	2
  4628  01150A  6EE6               	movwf	postinc1,c
  4629  01150C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4630  011510  0060  F007  FFE6   	movff	btemp,postinc1
  4631  011516  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4632  01151C  0E0C               	movlw	12
  4633  01151E  6EE6               	movwf	postinc1,c
  4634  011520  ECAC  F0D1         	call	_sprintf	;wreg free
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;main.c: 270:     update_lcd(0);
  4638  011524  0E00               	movlw	0
  4639  011526  6EE6               	movwf	postinc1,c
  4640  011528  EC24  F0D1         	call	_update_lcd	;wreg free
  4641                           
  4642                           ;main.c: 271:     clear_adc_scan();
  4643  01152C  EC3F  F0E5         	call	_clear_adc_scan	;wreg free
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;main.c: 272:     start_adc_scan();
  4647  011530  EC85  F0DC         	call	_start_adc_scan	;wreg free
  4648                           
  4649                           ;main.c: 273:     WaitMs(2000);
  4650  011534  0ED0               	movlw	208
  4651  011536  6EE6               	movwf	postinc1,c
  4652  011538  0E07               	movlw	7
  4653  01153A  6EE6               	movwf	postinc1,c
  4654  01153C  ECDB  F0E0         	call	_WaitMs	;wreg free
  4655                           
  4656                           ;main.c: 276:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4657                           ;stkvar	_i_ror @ sp[(-17)+16]
  4658  011540  0EFF               	movlw	-1
  4659  011542  006F FF8C  F00C    	movff	plusw1,btemp+11
  4660  011548  2A0C               	incf	(btemp+11)^0,f,c
  4661  01154A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4662  011550  060C               	decf	(btemp+11)^0,f,c
  4663  011552  0E1E               	movlw	30
  4664  011554  600C               	cpfslt	(btemp+11)^0,c
  4665  011556  D01A               	goto	u13200
  4666  011558  EE21  F36B         	lfsr	2,_C+108	;volatile
  4667  01155C  006F FF7B FFE6     	movff	postinc2,postinc1
  4668  011562  006F FF7B FFE6     	movff	postinc2,postinc1
  4669  011568  006F FF7B FFE6     	movff	postinc2,postinc1
  4670  01156E  006F FF7B FFE6     	movff	postinc2,postinc1
  4671  011574  0E42               	movlw	66
  4672  011576  6EE6               	movwf	postinc1,c
  4673  011578  0E60               	movlw	96
  4674  01157A  6EE6               	movwf	postinc1,c
  4675  01157C  0E65               	movlw	101
  4676  01157E  6EE6               	movwf	postinc1,c
  4677  011580  0E3C               	movlw	60
  4678  011582  6EE6               	movwf	postinc1,c
  4679  011584  EC72  F0CA         	call	___flge	;wreg free
  4680  011588  A001               	btfss	btemp& (0+255),0,c
  4681  01158A  D773               	goto	l13775
  4682  01158C                     u13200:
  4683                           
  4684                           ;main.c: 278:    static_soc();
  4685  01158C  EC49  F0DD         	call	_static_soc	;wreg free
  4686                           
  4687                           ;main.c: 279:    init_bsoc();
  4688  011590  EC51  F0BF         	call	_init_bsoc	;wreg free
  4689                           
  4690                           ;main.c: 280:    set_load_relay_one(0);
  4691  011594  0E00               	movlw	0
  4692  011596  6EE6               	movwf	postinc1,c
  4693  011598  ECD3  F0E4         	call	_set_load_relay_one	;wreg free
  4694                           
  4695                           ;main.c: 281:    set_load_relay_two(0);
  4696  01159C  0E00               	movlw	0
  4697  01159E  6EE6               	movwf	postinc1,c
  4698  0115A0  ECCB  F0E4         	call	_set_load_relay_two	;wreg free
  4699                           
  4700                           ;main.c: 282:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4701  0115A4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4702  0115A8  006F FF78  F00B    	movff	postinc2,btemp+10
  4703  0115AE  006F FF74  F00C    	movff	postdec2,btemp+11
  4704  0115B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4705  0115BA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4706  0115C0  0EC4               	movlw	low STR_10
  4707  0115C2  6EE6               	movwf	postinc1,c
  4708  0115C4  0EFC               	movlw	high STR_10
  4709  0115C6  6EE6               	movwf	postinc1,c
  4710  0115C8  0E00               	movlw	0
  4711  0115CA  6EE6               	movwf	postinc1,c
  4712  0115CC  0E00               	movlw	0
  4713  0115CE  6EE6               	movwf	postinc1,c
  4714  0115D0  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4715  0115D4  0060  F007  FFE6   	movff	btemp,postinc1
  4716  0115DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4717  0115E0  0E06               	movlw	6
  4718  0115E2  6EE6               	movwf	postinc1,c
  4719  0115E4  ECAC  F0D1         	call	_sprintf	;wreg free
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;main.c: 283:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4723  0115E8  EE21  F38F         	lfsr	2,_C+144	;volatile
  4724  0115EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4725  0115F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4726  0115F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4727  0115FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4728  011604  0EA0               	movlw	low STR_11
  4729  011606  6EE6               	movwf	postinc1,c
  4730  011608  0EFD               	movlw	high STR_11
  4731  01160A  6EE6               	movwf	postinc1,c
  4732  01160C  0E00               	movlw	0
  4733  01160E  6EE6               	movwf	postinc1,c
  4734  011610  0E01               	movlw	1
  4735  011612  6EE6               	movwf	postinc1,c
  4736  011614  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4737  011618  0060  F007  FFE6   	movff	btemp,postinc1
  4738  01161E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4739  011624  0E08               	movlw	8
  4740  011626  6EE6               	movwf	postinc1,c
  4741  011628  ECAC  F0D1         	call	_sprintf	;wreg free
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;main.c: 284:    update_lcd(0);
  4745  01162C  0E00               	movlw	0
  4746  01162E  6EE6               	movwf	postinc1,c
  4747  011630  EC24  F0D1         	call	_update_lcd	;wreg free
  4748                           
  4749                           ;main.c: 285:    WaitMs(2000);
  4750  011634  0ED0               	movlw	208
  4751  011636  6EE6               	movwf	postinc1,c
  4752  011638  0E07               	movlw	7
  4753  01163A  6EE6               	movwf	postinc1,c
  4754  01163C  ECDB  F0E0         	call	_WaitMs	;wreg free
  4755                           
  4756                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4757  011640  0E77               	movlw	low STR_12
  4758  011642  6EE6               	movwf	postinc1,c
  4759  011644  0EFE               	movlw	high STR_12
  4760  011646  6EE6               	movwf	postinc1,c
  4761  011648  0E00               	movlw	0
  4762  01164A  6EE6               	movwf	postinc1,c
  4763  01164C  0E00               	movlw	0
  4764  01164E  6EE6               	movwf	postinc1,c
  4765  011650  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4766  011654  0060  F007  FFE6   	movff	btemp,postinc1
  4767  01165A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4768  011660  0E04               	movlw	4
  4769  011662  6EE6               	movwf	postinc1,c
  4770  011664  ECAC  F0D1         	call	_sprintf	;wreg free
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4774  011668  0E8C               	movlw	low STR_13
  4775  01166A  6EE6               	movwf	postinc1,c
  4776  01166C  0EFE               	movlw	high STR_13
  4777  01166E  6EE6               	movwf	postinc1,c
  4778  011670  0E00               	movlw	0
  4779  011672  6EE6               	movwf	postinc1,c
  4780  011674  0E01               	movlw	1
  4781  011676  6EE6               	movwf	postinc1,c
  4782  011678  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4783  01167C  0060  F007  FFE6   	movff	btemp,postinc1
  4784  011682  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4785  011688  0E04               	movlw	4
  4786  01168A  6EE6               	movwf	postinc1,c
  4787  01168C  ECAC  F0D1         	call	_sprintf	;wreg free
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4791  011690  0E34               	movlw	low STR_14
  4792  011692  6EE6               	movwf	postinc1,c
  4793  011694  0EFF               	movlw	high STR_14
  4794  011696  6EE6               	movwf	postinc1,c
  4795  011698  0E00               	movlw	0
  4796  01169A  6EE6               	movwf	postinc1,c
  4797  01169C  0E02               	movlw	2
  4798  01169E  6EE6               	movwf	postinc1,c
  4799  0116A0  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4800  0116A4  0060  F007  FFE6   	movff	btemp,postinc1
  4801  0116AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4802  0116B0  0E04               	movlw	4
  4803  0116B2  6EE6               	movwf	postinc1,c
  4804  0116B4  ECAC  F0D1         	call	_sprintf	;wreg free
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;main.c: 289:    update_lcd(0);
  4808  0116B8  0E00               	movlw	0
  4809  0116BA  6EE6               	movwf	postinc1,c
  4810  0116BC  EC24  F0D1         	call	_update_lcd	;wreg free
  4811                           
  4812                           ;main.c: 290:    uint16_t i_esr = 1;
  4813  0116C0  0E01               	movlw	1
  4814  0116C2  6E0B               	movwf	(btemp+10)^0,c
  4815  0116C4  0E00               	movlw	0
  4816  0116C6  6E0C               	movwf	(btemp+11)^0,c
  4817                           
  4818                           ;stkvar	_i_esr @ sp[(-17)+8]
  4819  0116C8  0EF7               	movlw	-9
  4820  0116CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4821  0116D0  0EF8               	movlw	-8
  4822  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4823                           
  4824                           ;main.c: 292:    float esr_temp;;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4825  0116D8  D06D               	goto	l13833
  4826  0116DA                     l13821:
  4827                           
  4828                           ;main.c: 294:     WaitMs(110);
  4829  0116DA  0E6E               	movlw	110
  4830  0116DC  6EE6               	movwf	postinc1,c
  4831  0116DE  0E00               	movlw	0
  4832  0116E0  6EE6               	movwf	postinc1,c
  4833  0116E2  ECDB  F0E0         	call	_WaitMs	;wreg free
  4834                           
  4835                           ;main.c: 295:     shape = (uint8_t) fabsf(esr_temp);
  4836                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4837  0116E6  0EF3               	movlw	-13
  4838  0116E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4839  0116EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4840  0116F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4841  0116FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4842  011700  ECAE  F0D6         	call	_fabsf	;wreg free
  4843  011704  0060  F007  FFE6   	movff	btemp,postinc1
  4844  01170A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4845  011710  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4846  011716  0060  F013  FFE6   	movff	btemp+3,postinc1
  4847  01171C  ECB9  F0C9         	call	___fltol	;wreg free
  4848  011720  0060  F004  F00C   	movff	btemp,btemp+11
  4849                           
  4850                           ;stkvar	_shape @ sp[(-17)+10]
  4851  011726  0EF9               	movlw	-7
  4852  011728  0060  F033  FFE3   	movff	btemp+11,plusw1
  4853                           
  4854                           ;main.c: 296:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4855  01172E  0E00               	movlw	0
  4856  011730  6EE6               	movwf	postinc1,c
  4857                           
  4858                           ;stkvar	_shape @ sp[(-18)+10]
  4859  011732  0EF8               	movlw	-8
  4860  011734  50E3               	movf	plusw1,w,c
  4861  011736  6EE6               	movwf	postinc1,c
  4862  011738  EC31  F0D2         	call	_spinners	;wreg free
  4863  01173C  5001               	movf	btemp^0,w,c
  4864  01173E  6EE6               	movwf	postinc1,c
  4865  011740  0E00               	movlw	0
  4866  011742  6EE6               	movwf	postinc1,c
  4867  011744  0E00               	movlw	0
  4868  011746  6EE6               	movwf	postinc1,c
  4869  011748  0E00               	movlw	0
  4870  01174A  6EE6               	movwf	postinc1,c
  4871  01174C  EC31  F0D2         	call	_spinners	;wreg free
  4872  011750  5001               	movf	btemp^0,w,c
  4873  011752  6EE6               	movwf	postinc1,c
  4874  011754  0E00               	movlw	0
  4875  011756  6EE6               	movwf	postinc1,c
  4876  011758  0E1F               	movlw	low STR_15
  4877  01175A  6EE6               	movwf	postinc1,c
  4878  01175C  0EFF               	movlw	high STR_15
  4879  01175E  6EE6               	movwf	postinc1,c
  4880  011760  0E00               	movlw	0
  4881  011762  6EE6               	movwf	postinc1,c
  4882  011764  0E02               	movlw	2
  4883  011766  6EE6               	movwf	postinc1,c
  4884  011768  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4885  01176C  0060  F007  FFE6   	movff	btemp,postinc1
  4886  011772  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4887  011778  0E08               	movlw	8
  4888  01177A  6EE6               	movwf	postinc1,c
  4889  01177C  ECAC  F0D1         	call	_sprintf	;wreg free
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;main.c: 297:     update_lcd(0);
  4893  011780  0E00               	movlw	0
  4894  011782  6EE6               	movwf	postinc1,c
  4895  011784  EC24  F0D1         	call	_update_lcd	;wreg free
  4896                           
  4897                           ;main.c: 299:     if (i_esr++ > 512)
  4898                           ;stkvar	_i_esr @ sp[(-17)+8]
  4899  011788  50E1               	movf	fsr1l,w,c
  4900  01178A  0FF7               	addlw	-9
  4901  01178C  6ED9               	movwf	fsr2l,c
  4902  01178E  50E2               	movf	fsr1h,w,c
  4903  011790  6EDA               	movwf	fsr2h,c
  4904  011792  0EFF               	movlw	255
  4905  011794  22DA               	addwfc	fsr2h,f,c
  4906  011796  006F FF7C  F00B    	movff	indf2,btemp+10
  4907  01179C  0E01               	movlw	1
  4908  01179E  26DE               	addwf	postinc2,f,c
  4909  0117A0  006F FF7C  F00C    	movff	indf2,btemp+11
  4910  0117A6  0E00               	movlw	0
  4911  0117A8  22DD               	addwfc	postdec2,f,c
  4912  0117AA  040B               	decf	(btemp+10)^0,w,c
  4913  0117AC  0E02               	movlw	2
  4914  0117AE  580C               	subwfb	(btemp+11)^0,w,c
  4915  0117B0  B0D8               	btfsc	status,0,c
  4916  0117B2  D017               	goto	u13220
  4917  0117B4                     l13833:
  4918                           
  4919                           ;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0) {
  4920  0117B4  0E00               	movlw	0
  4921  0117B6  6EE6               	movwf	postinc1,c
  4922  0117B8  ECD3  F0B8         	call	_esr_check	;wreg free
  4923                           
  4924                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4925  0117BC  0EF3               	movlw	-13
  4926  0117BE  0060  F007  FFE3   	movff	btemp,plusw1
  4927  0117C4  0EF4               	movlw	-12
  4928  0117C6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4929  0117CC  0EF5               	movlw	-11
  4930  0117CE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4931  0117D4  0EF6               	movlw	-10
  4932  0117D6  0060  F013  FFE3   	movff	btemp+3,plusw1
  4933  0117DC  0EF6               	movlw	-10
  4934  0117DE  BEE3               	btfsc	plusw1,7,c
  4935  0117E0  D77C               	goto	l13821
  4936  0117E2                     u13220:
  4937                           
  4938                           ;main.c: 302:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4939  0117E2  EE21  F387         	lfsr	2,_C+136	;volatile
  4940  0117E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4941  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4942  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4943  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4944  0117FE  0EAE               	movlw	low STR_16
  4945  011800  6EE6               	movwf	postinc1,c
  4946  011802  0EFC               	movlw	high STR_16
  4947  011804  6EE6               	movwf	postinc1,c
  4948  011806  0E00               	movlw	0
  4949  011808  6EE6               	movwf	postinc1,c
  4950  01180A  0E00               	movlw	0
  4951  01180C  6EE6               	movwf	postinc1,c
  4952  01180E  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4953  011812  0060  F007  FFE6   	movff	btemp,postinc1
  4954  011818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4955  01181E  0E08               	movlw	8
  4956  011820  6EE6               	movwf	postinc1,c
  4957  011822  ECAC  F0D1         	call	_sprintf	;wreg free
  4958                           
  4959                           ;main.c: 303:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4960  011826  EE22  F00D         	lfsr	2,_C+270	;volatile
  4961  01182A  006F FF7B FFE6     	movff	postinc2,postinc1
  4962  011830  006F FF7B FFE6     	movff	postinc2,postinc1
  4963  011836  006F FF7B FFE6     	movff	postinc2,postinc1
  4964  01183C  006F FF7B FFE6     	movff	postinc2,postinc1
  4965  011842  EE22  F019         	lfsr	2,_C+282	;volatile
  4966  011846  006F FF7B FFE6     	movff	postinc2,postinc1
  4967  01184C  006F FF7B FFE6     	movff	postinc2,postinc1
  4968  011852  006F FF7B FFE6     	movff	postinc2,postinc1
  4969  011858  006F FF7B FFE6     	movff	postinc2,postinc1
  4970  01185E  0ED5               	movlw	low STR_17
  4971  011860  6EE6               	movwf	postinc1,c
  4972  011862  0EFB               	movlw	high STR_17
  4973  011864  6EE6               	movwf	postinc1,c
  4974  011866  0E00               	movlw	0
  4975  011868  6EE6               	movwf	postinc1,c
  4976  01186A  0E01               	movlw	1
  4977  01186C  6EE6               	movwf	postinc1,c
  4978  01186E  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  4979  011872  0060  F007  FFE6   	movff	btemp,postinc1
  4980  011878  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4981  01187E  0E0C               	movlw	12
  4982  011880  6EE6               	movwf	postinc1,c
  4983  011882  ECAC  F0D1         	call	_sprintf	;wreg free
  4984                           
  4985                           ;main.c: 304:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4986  011886  EE22  F011         	lfsr	2,_C+274	;volatile
  4987  01188A  006F FF7B FFE6     	movff	postinc2,postinc1
  4988  011890  006F FF7B FFE6     	movff	postinc2,postinc1
  4989  011896  006F FF7B FFE6     	movff	postinc2,postinc1
  4990  01189C  006F FF7B FFE6     	movff	postinc2,postinc1
  4991  0118A2  EE22  F01D         	lfsr	2,_C+286	;volatile
  4992  0118A6  006F FF7B FFE6     	movff	postinc2,postinc1
  4993  0118AC  006F FF7B FFE6     	movff	postinc2,postinc1
  4994  0118B2  006F FF7B FFE6     	movff	postinc2,postinc1
  4995  0118B8  006F FF7B FFE6     	movff	postinc2,postinc1
  4996  0118BE  0EEF               	movlw	low STR_18
  4997  0118C0  6EE6               	movwf	postinc1,c
  4998  0118C2  0EFB               	movlw	high STR_18
  4999  0118C4  6EE6               	movwf	postinc1,c
  5000  0118C6  0E00               	movlw	0
  5001  0118C8  6EE6               	movwf	postinc1,c
  5002  0118CA  0E02               	movlw	2
  5003  0118CC  6EE6               	movwf	postinc1,c
  5004  0118CE  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5005  0118D2  0060  F007  FFE6   	movff	btemp,postinc1
  5006  0118D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5007  0118DE  0E0C               	movlw	12
  5008  0118E0  6EE6               	movwf	postinc1,c
  5009  0118E2  ECAC  F0D1         	call	_sprintf	;wreg free
  5010                           
  5011                           ;main.c: 305:    update_lcd(0);
  5012  0118E6  0E00               	movlw	0
  5013  0118E8  6EE6               	movwf	postinc1,c
  5014  0118EA  EC24  F0D1         	call	_update_lcd	;wreg free
  5015                           
  5016                           ;main.c: 306:    WaitMs(4000);
  5017  0118EE  0EA0               	movlw	160
  5018  0118F0  6EE6               	movwf	postinc1,c
  5019  0118F2  0E0F               	movlw	15
  5020  0118F4  6EE6               	movwf	postinc1,c
  5021  0118F6  ECDB  F0E0         	call	_WaitMs	;wreg free
  5022                           
  5023                           ;main.c: 307:    V.sensor_set = get_switch(SCALIB);
  5024  0118FA  0E04               	movlw	4
  5025  0118FC  6EE6               	movwf	postinc1,c
  5026  0118FE  ECD5  F0E1         	call	_get_switch	;wreg free
  5027  011902  5001               	movf	btemp^0,w,c
  5028  011904  B4D8               	btfsc	status,2,c
  5029  011906  D002               	goto	u13230
  5030  011908  0E01               	movlw	1
  5031  01190A  D001               	goto	u13240
  5032  01190C                     u13230:
  5033  01190C  0E00               	movlw	0
  5034  01190E                     u13240:
  5035  01190E  0101               	movlb	1	; () banked
  5036  011910  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5037                           
  5038                           ; BSR set to: 1
  5039                           ;main.c: 308:    WaitMs(1000);
  5040  011912  0EE8               	movlw	232
  5041  011914  6EE6               	movwf	postinc1,c
  5042  011916  0E03               	movlw	3
  5043  011918  6EE6               	movwf	postinc1,c
  5044  01191A  ECDB  F0E0         	call	_WaitMs	;wreg free
  5045                           
  5046                           ;main.c: 309:    if (V.sensor_set && get_switch(SCALIB)) {
  5047  01191E  0101               	movlb	1	; () banked
  5048  011920  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5049  011922  B4D8               	btfsc	status,2,c
  5050  011924  D00F               	goto	l13851
  5051                           
  5052                           ; BSR set to: 1
  5053  011926  0E04               	movlw	4
  5054  011928  6EE6               	movwf	postinc1,c
  5055  01192A  ECD5  F0E1         	call	_get_switch	;wreg free
  5056  01192E  5001               	movf	btemp^0,w,c
  5057  011930  B4D8               	btfsc	status,2,c
  5058  011932  D008               	goto	l13851
  5059                           
  5060                           ;main.c: 310:     current_sensor_cal();
  5061  011934  EC18  F0BE         	call	_current_sensor_cal	;wreg free
  5062                           
  5063                           ;main.c: 311:     WaitMs(4000);
  5064  011938  0EA0               	movlw	160
  5065  01193A  6EE6               	movwf	postinc1,c
  5066  01193C  0E0F               	movlw	15
  5067  01193E  6EE6               	movwf	postinc1,c
  5068  011940  ECDB  F0E0         	call	_WaitMs	;wreg free
  5069  011944                     l13851:
  5070                           
  5071                           ;main.c: 313:    V.sensor_set = 0;
  5072  011944  0101               	movlb	1	; () banked
  5073  011946  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5074                           
  5075                           ; BSR set to: 1
  5076                           ;main.c: 314:    V.system_stable = 1;
  5077  011948  0E01               	movlw	1
  5078  01194A  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5079                           
  5080                           ;main.c: 315:    break;
  5081  01194C  D01B               	goto	l13859
  5082  01194E                     l1353:
  5083                           
  5084                           ; BSR set to: 1
  5085                           ;main.c: 321:    P.SYSTEM_STABLE = 1;
  5086  01194E  81F3               	bsf	(_P+1)& (0+255),0,b	;volatile
  5087                           
  5088                           ;main.c: 322:    break;
  5089  011950  D019               	goto	l13859
  5090  011952                     l1355:
  5091                           
  5092                           ; BSR set to: 1
  5093                           ;main.c: 325:    V.ui_state = UI_STATE_INIT;
  5094  011952  6B07               	clrf	_V& (0+255),b	;volatile
  5095                           
  5096                           ;main.c: 326:    break;
  5097  011954  D017               	goto	l13859
  5098  011956                     l13857:
  5099  011956  0101               	movlb	1	; () banked
  5100  011958  5107               	movf	_V& (0+255),w,b	;volatile
  5101  01195A  6E0B               	movwf	(btemp+10)^0,c
  5102  01195C  6A0C               	clrf	(btemp+11)^0,c
  5103                           
  5104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5105                           ; Switch size 1, requested type "simple"
  5106                           ; Number of cases is 1, Range of values is 0 to 0
  5107                           ; switch strategies available:
  5108                           ; Name         Instructions Cycles
  5109                           ; simple_byte            4     3 (average)
  5110                           ;	Chosen strategy is simple_byte
  5111  01195E  500C               	movf	(btemp+11)^0,w,c
  5112  011960  0A00               	xorlw	0	; case 0
  5113  011962  A4D8               	btfss	status,2,c
  5114  011964  D7F6               	goto	l1355
  5115                           
  5116                           ; BSR set to: 1
  5117                           ; Switch size 1, requested type "simple"
  5118                           ; Number of cases is 5, Range of values is 0 to 5
  5119                           ; switch strategies available:
  5120                           ; Name         Instructions Cycles
  5121                           ; simple_byte           16     9 (average)
  5122                           ;	Chosen strategy is simple_byte
  5123  011966  500B               	movf	(btemp+10)^0,w,c
  5124  011968  0A00               	xorlw	0	; case 0
  5125  01196A  B4D8               	btfsc	status,2,c
  5126  01196C  D4A7               	goto	l13723
  5127  01196E  0A01               	xorlw	1	; case 1
  5128  011970  B4D8               	btfsc	status,2,c
  5129  011972  D008               	goto	l13859
  5130  011974  0A02               	xorlw	2	; case 3
  5131  011976  B4D8               	btfsc	status,2,c
  5132  011978  D005               	goto	l13859
  5133  01197A  0A07               	xorlw	7	; case 4
  5134  01197C  B4D8               	btfsc	status,2,c
  5135  01197E  D7E7               	goto	l1353
  5136  011980  0A01               	xorlw	1	; case 5
  5137  011982  D7E7               	goto	l1355
  5138  011984                     l13859:
  5139                           
  5140                           ; BSR set to: 1
  5141                           ;main.c: 329:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5142  011984  0E01               	movlw	1
  5143  011986  6EE6               	movwf	postinc1,c
  5144  011988  EC41  F0E2         	call	_TimerDone	;wreg free
  5145  01198C  5001               	movf	btemp^0,w,c
  5146  01198E  B4D8               	btfsc	status,2,c
  5147  011990  D013               	goto	l13871
  5148  011992  EC2F  F0E5         	call	_check_adc_scan	;wreg free
  5149  011996  5001               	movf	btemp^0,w,c
  5150  011998  B4D8               	btfsc	status,2,c
  5151  01199A  D00E               	goto	l13871
  5152                           
  5153                           ;main.c: 333:    convert_adc_data();
  5154  01199C  ECF7  F0D5         	call	_convert_adc_data	;wreg free
  5155                           
  5156                           ;main.c: 337:    clear_adc_scan();
  5157  0119A0  EC3F  F0E5         	call	_clear_adc_scan	;wreg free
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;main.c: 338:    start_adc_scan();
  5161  0119A4  EC85  F0DC         	call	_start_adc_scan	;wreg free
  5162                           
  5163                           ;main.c: 339:    StartTimer(TMR_ADC, 200);
  5164  0119A8  0EC8               	movlw	200
  5165  0119AA  6EE6               	movwf	postinc1,c
  5166  0119AC  0E00               	movlw	0
  5167  0119AE  6EE6               	movwf	postinc1,c
  5168  0119B0  0E01               	movlw	1
  5169  0119B2  6EE6               	movwf	postinc1,c
  5170  0119B4  ECEC  F0DF         	call	_StartTimer	;wreg free
  5171  0119B8                     l13871:
  5172                           
  5173                           ;main.c: 346:   if (TimerDone(TMR_DISPLAY)) {
  5174                           
  5175                           ;main.c: 342:   if (V.ticks) {
  5176  0119B8  0E0A               	movlw	10
  5177  0119BA  6EE6               	movwf	postinc1,c
  5178  0119BC  EC41  F0E2         	call	_TimerDone	;wreg free
  5179  0119C0  5001               	movf	btemp^0,w,c
  5180  0119C2  B4D8               	btfsc	status,2,c
  5181  0119C4  EF88  F091         	goto	l13955
  5182                           
  5183                           ;main.c: 347:    if (TimerDone(TMR_HELPDIS)) {
  5184  0119C8  0E09               	movlw	9
  5185  0119CA  6EE6               	movwf	postinc1,c
  5186  0119CC  EC41  F0E2         	call	_TimerDone	;wreg free
  5187  0119D0  5001               	movf	btemp^0,w,c
  5188  0119D2  B4D8               	btfsc	status,2,c
  5189  0119D4  D004               	goto	l13879
  5190                           
  5191                           ;main.c: 348:     set_display_info(DIS_STR);
  5192  0119D6  0E00               	movlw	0
  5193  0119D8  6EE6               	movwf	postinc1,c
  5194  0119DA  EC46  F0E4         	call	_set_display_info	;wreg free
  5195  0119DE                     l13879:
  5196                           
  5197                           ;main.c: 350:    calc_model_data();
  5198  0119DE  EC6E  F0AE         	call	_calc_model_data	;wreg free
  5199                           
  5200                           ; BSR set to: 57
  5201                           ;main.c: 357:     hid_display(&H);
  5202                           
  5203                           ;main.c: 352:    if (0) {
  5204  0119E2  0EC7               	movlw	low _H
  5205  0119E4  6EE6               	movwf	postinc1,c
  5206  0119E6  0E01               	movlw	high _H
  5207  0119E8  6EE6               	movwf	postinc1,c
  5208  0119EA  ECA4  F0C2         	call	_hid_display	;wreg free
  5209                           
  5210                           ;main.c: 358:     switch (H.hid_display) {
  5211  0119EE  EF1E  F091         	goto	l13927
  5212  0119F2                     l1363:
  5213                           
  5214                           ; BSR set to: 1
  5215                           ;main.c: 360:      V.calib = 0;
  5216  0119F2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5217                           
  5218                           ; BSR set to: 1
  5219                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5220  0119F4  EE22  F021         	lfsr	2,_C+290	;volatile
  5221  0119F8  50DF               	movf	indf2,w,c
  5222  0119FA  A4D8               	btfss	status,2,c
  5223  0119FC  D002               	goto	l13889
  5224                           
  5225                           ; BSR set to: 1
  5226  0119FE  0E20               	movlw	32
  5227  011A00  D001               	goto	L1
  5228  011A02                     l13889:
  5229                           
  5230                           ; BSR set to: 1
  5231  011A02  0E44               	movlw	68
  5232  011A04                     L1:
  5233  011A04  6E0B               	movwf	(btemp+10)^0,c
  5234  011A06  0E00               	movlw	0
  5235  011A08  6E0C               	movwf	(btemp+11)^0,c
  5236                           
  5237                           ;stkvar	_main$3786 @ sp[(-17)+2]
  5238  011A0A  0EF1               	movlw	-15
  5239  011A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5240  011A12  0EF2               	movlw	-14
  5241  011A14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5242                           
  5243                           ; BSR set to: 1
  5244  011A1A  EE21  F37B         	lfsr	2,_C+124	;volatile
  5245  011A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5246  011A24  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  011A2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  011A30  006F FF7B FFE6     	movff	postinc2,postinc1
  5249                           
  5250                           ;stkvar	_main$3786 @ sp[(-21)+2]
  5251  011A36  0EED               	movlw	-19
  5252  011A38  006F FF8F FFE6     	movff	plusw1,postinc1
  5253  011A3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5254  011A44  0E8A               	movlw	low STR_22
  5255  011A46  6EE6               	movwf	postinc1,c
  5256  011A48  0EFD               	movlw	high STR_22
  5257  011A4A  6EE6               	movwf	postinc1,c
  5258  011A4C  0E00               	movlw	0
  5259  011A4E  6EE6               	movwf	postinc1,c
  5260  011A50  0E00               	movlw	0
  5261  011A52  6EE6               	movwf	postinc1,c
  5262  011A54  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5263  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  5264  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5265  011A64  0E0A               	movlw	10
  5266  011A66  6EE6               	movwf	postinc1,c
  5267  011A68  ECAC  F0D1         	call	_sprintf	;wreg free
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5271  011A6C  EE21  F373         	lfsr	2,_C+116	;volatile
  5272  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5273  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5274  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011A88  0E74               	movlw	low STR_23
  5277  011A8A  6EE6               	movwf	postinc1,c
  5278  011A8C  0EFD               	movlw	high STR_23
  5279  011A8E  6EE6               	movwf	postinc1,c
  5280  011A90  0E00               	movlw	0
  5281  011A92  6EE6               	movwf	postinc1,c
  5282  011A94  0E01               	movlw	1
  5283  011A96  6EE6               	movwf	postinc1,c
  5284  011A98  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5285  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5286  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5287  011AA8  0E08               	movlw	8
  5288  011AAA  6EE6               	movwf	postinc1,c
  5289  011AAC  ECAC  F0D1         	call	_sprintf	;wreg free
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5293  011AB0  EE21  F377         	lfsr	2,_C+120	;volatile
  5294  011AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5295  011ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5296  011AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011ACC  0E5E               	movlw	low STR_24
  5299  011ACE  6EE6               	movwf	postinc1,c
  5300  011AD0  0EFD               	movlw	high STR_24
  5301  011AD2  6EE6               	movwf	postinc1,c
  5302  011AD4  0E00               	movlw	0
  5303  011AD6  6EE6               	movwf	postinc1,c
  5304  011AD8  0E02               	movlw	2
  5305  011ADA  6EE6               	movwf	postinc1,c
  5306  011ADC  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5307  011AE0  0060  F007  FFE6   	movff	btemp,postinc1
  5308  011AE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5309  011AEC  0E08               	movlw	8
  5310  011AEE  6EE6               	movwf	postinc1,c
  5311  011AF0  ECAC  F0D1         	call	_sprintf	;wreg free
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5315  011AF4  EE22  F021         	lfsr	2,_C+290	;volatile
  5316  011AF8  50DF               	movf	indf2,w,c
  5317  011AFA  A4D8               	btfss	status,2,c
  5318  011AFC  D002               	goto	l13901
  5319                           
  5320                           ; BSR set to: 0
  5321  011AFE  0E20               	movlw	32
  5322  011B00  D001               	goto	L2
  5323  011B02                     l13901:
  5324                           
  5325                           ; BSR set to: 0
  5326  011B02  0E44               	movlw	68
  5327  011B04                     L2:
  5328  011B04  6E0B               	movwf	(btemp+10)^0,c
  5329  011B06  0E00               	movlw	0
  5330  011B08  6E0C               	movwf	(btemp+11)^0,c
  5331                           
  5332                           ;stkvar	_main$3790 @ sp[(-17)+0]
  5333  011B0A  0EEF               	movlw	-17
  5334  011B0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5335  011B12  0EF0               	movlw	-16
  5336  011B14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5337                           
  5338                           ; BSR set to: 0
  5339  011B1A  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5340  011B1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5341  011B24  006F FF7B FFE6     	movff	postinc2,postinc1
  5342  011B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5343  011B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5344                           
  5345                           ;stkvar	_main$3790 @ sp[(-21)+0]
  5346  011B36  0EEB               	movlw	-21
  5347  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
  5348  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5349  011B44  0E48               	movlw	low STR_25
  5350  011B46  6EE6               	movwf	postinc1,c
  5351  011B48  0EFD               	movlw	high STR_25
  5352  011B4A  6EE6               	movwf	postinc1,c
  5353  011B4C  0E01               	movlw	1
  5354  011B4E  6EE6               	movwf	postinc1,c
  5355  011B50  0E00               	movlw	0
  5356  011B52  6EE6               	movwf	postinc1,c
  5357  011B54  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5358  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  5359  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5360  011B64  0E0A               	movlw	10
  5361  011B66  6EE6               	movwf	postinc1,c
  5362  011B68  ECAC  F0D1         	call	_sprintf	;wreg free
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5366  011B6C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5367  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5369  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  5371  011B88  0E32               	movlw	low STR_26
  5372  011B8A  6EE6               	movwf	postinc1,c
  5373  011B8C  0EFD               	movlw	high STR_26
  5374  011B8E  6EE6               	movwf	postinc1,c
  5375  011B90  0E01               	movlw	1
  5376  011B92  6EE6               	movwf	postinc1,c
  5377  011B94  0E01               	movlw	1
  5378  011B96  6EE6               	movwf	postinc1,c
  5379  011B98  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5380  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  5381  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5382  011BA8  0E08               	movlw	8
  5383  011BAA  6EE6               	movwf	postinc1,c
  5384  011BAC  ECAC  F0D1         	call	_sprintf	;wreg free
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5388  011BB0  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5389  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5390  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5391  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5392  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5393  011BCC  0E1C               	movlw	low STR_27
  5394  011BCE  6EE6               	movwf	postinc1,c
  5395  011BD0  0EFD               	movlw	high STR_27
  5396  011BD2  6EE6               	movwf	postinc1,c
  5397  011BD4  0E01               	movlw	1
  5398  011BD6  6EE6               	movwf	postinc1,c
  5399  011BD8  0E02               	movlw	2
  5400  011BDA  6EE6               	movwf	postinc1,c
  5401  011BDC  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5402  011BE0  0060  F007  FFE6   	movff	btemp,postinc1
  5403  011BE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5404  011BEC  0E08               	movlw	8
  5405  011BEE  6EE6               	movwf	postinc1,c
  5406  011BF0  ECAC  F0D1         	call	_sprintf	;wreg free
  5407                           
  5408                           ;main.c: 368:      break;
  5409  011BF4  D339               	goto	l13929
  5410  011BF6                     l1373:
  5411                           
  5412                           ; BSR set to: 1
  5413                           ;main.c: 370:      V.calib = 0;
  5414  011BF6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5415                           
  5416                           ; BSR set to: 1
  5417                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5418  011BF8  EE21  F303         	lfsr	2,_C+4	;volatile
  5419  011BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5420  011C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5421  011C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5422  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5423  011C14  EE21  F313         	lfsr	2,_C+20	;volatile
  5424  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5425  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5426  011C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5427  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5428  011C30  0EE2               	movlw	low STR_28
  5429  011C32  6EE6               	movwf	postinc1,c
  5430  011C34  0EFD               	movlw	high STR_28
  5431  011C36  6EE6               	movwf	postinc1,c
  5432  011C38  0E00               	movlw	0
  5433  011C3A  6EE6               	movwf	postinc1,c
  5434  011C3C  0E00               	movlw	0
  5435  011C3E  6EE6               	movwf	postinc1,c
  5436  011C40  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5437  011C44  0060  F007  FFE6   	movff	btemp,postinc1
  5438  011C4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5439  011C50  0E0C               	movlw	12
  5440  011C52  6EE6               	movwf	postinc1,c
  5441  011C54  ECAC  F0D1         	call	_sprintf	;wreg free
  5442                           
  5443                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5444  011C58  EE21  F2FF         	lfsr	2,_C
  5445  011C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5446  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  5447  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  5448  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5449  011C74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5450  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011C84  006F FF7B FFE6     	movff	postinc2,postinc1
  5453  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5454  011C90  0EB6               	movlw	low STR_29
  5455  011C92  6EE6               	movwf	postinc1,c
  5456  011C94  0EFD               	movlw	high STR_29
  5457  011C96  6EE6               	movwf	postinc1,c
  5458  011C98  0E00               	movlw	0
  5459  011C9A  6EE6               	movwf	postinc1,c
  5460  011C9C  0E01               	movlw	1
  5461  011C9E  6EE6               	movwf	postinc1,c
  5462  011CA0  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5463  011CA4  0060  F007  FFE6   	movff	btemp,postinc1
  5464  011CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5465  011CB0  0E0C               	movlw	12
  5466  011CB2  6EE6               	movwf	postinc1,c
  5467  011CB4  ECAC  F0D1         	call	_sprintf	;wreg free
  5468                           
  5469                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5470  011CB8  EE21  F33F         	lfsr	2,_C+64	;volatile
  5471  011CBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  011CC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  011CC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5474  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5475  011CD4  EE21  F307         	lfsr	2,_C+8	;volatile
  5476  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011CE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5479  011CEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5480  011CF0  0ECC               	movlw	low STR_30
  5481  011CF2  6EE6               	movwf	postinc1,c
  5482  011CF4  0EFD               	movlw	high STR_30
  5483  011CF6  6EE6               	movwf	postinc1,c
  5484  011CF8  0E00               	movlw	0
  5485  011CFA  6EE6               	movwf	postinc1,c
  5486  011CFC  0E02               	movlw	2
  5487  011CFE  6EE6               	movwf	postinc1,c
  5488  011D00  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5489  011D04  0060  F007  FFE6   	movff	btemp,postinc1
  5490  011D0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5491  011D10  0E0C               	movlw	12
  5492  011D12  6EE6               	movwf	postinc1,c
  5493  011D14  ECAC  F0D1         	call	_sprintf	;wreg free
  5494                           
  5495                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5496  011D18  EE21  F39F         	lfsr	2,_C+160	;volatile
  5497  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5498  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5499  011D28  006F FF7B FFE6     	movff	postinc2,postinc1
  5500  011D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5501  011D34  0EDA               	movlw	low STR_31
  5502  011D36  6EE6               	movwf	postinc1,c
  5503  011D38  0EFC               	movlw	high STR_31
  5504  011D3A  6EE6               	movwf	postinc1,c
  5505  011D3C  0E01               	movlw	1
  5506  011D3E  6EE6               	movwf	postinc1,c
  5507  011D40  0E00               	movlw	0
  5508  011D42  6EE6               	movwf	postinc1,c
  5509  011D44  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5510  011D48  0060  F007  FFE6   	movff	btemp,postinc1
  5511  011D4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5512  011D54  0E08               	movlw	8
  5513  011D56  6EE6               	movwf	postinc1,c
  5514  011D58  ECAC  F0D1         	call	_sprintf	;wreg free
  5515                           
  5516                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5517  011D5C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5518  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5519  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5520  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5521  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5522  011D78  0EF0               	movlw	low STR_32
  5523  011D7A  6EE6               	movwf	postinc1,c
  5524  011D7C  0EFC               	movlw	high STR_32
  5525  011D7E  6EE6               	movwf	postinc1,c
  5526  011D80  0E01               	movlw	1
  5527  011D82  6EE6               	movwf	postinc1,c
  5528  011D84  0E01               	movlw	1
  5529  011D86  6EE6               	movwf	postinc1,c
  5530  011D88  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5531  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5532  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5533  011D98  0E08               	movlw	8
  5534  011D9A  6EE6               	movwf	postinc1,c
  5535  011D9C  ECAC  F0D1         	call	_sprintf	;wreg free
  5536                           
  5537                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5538  011DA0  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5539  011DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5540  011DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5541  011DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5542  011DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5543  011DBC  EE21  F39F         	lfsr	2,_C+160	;volatile
  5544  011DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5545  011DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5546  011DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5547  011DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5548  011DD8  EC35  F0A3         	call	___fladd	;wreg free
  5549  011DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5550  011DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5551  011DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5552  011DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5553  011DF4  0E06               	movlw	low STR_33
  5554  011DF6  6EE6               	movwf	postinc1,c
  5555  011DF8  0EFD               	movlw	high STR_33
  5556  011DFA  6EE6               	movwf	postinc1,c
  5557  011DFC  0E01               	movlw	1
  5558  011DFE  6EE6               	movwf	postinc1,c
  5559  011E00  0E02               	movlw	2
  5560  011E02  6EE6               	movwf	postinc1,c
  5561  011E04  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5562  011E08  0060  F007  FFE6   	movff	btemp,postinc1
  5563  011E0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5564  011E14  0E08               	movlw	8
  5565  011E16  6EE6               	movwf	postinc1,c
  5566  011E18  ECAC  F0D1         	call	_sprintf	;wreg free
  5567                           
  5568                           ;main.c: 378:      break;
  5569  011E1C  D225               	goto	l13929
  5570  011E1E                     l1374:
  5571                           
  5572                           ; BSR set to: 1
  5573                           ;main.c: 380:      V.calib = 0;
  5574  011E1E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5575                           
  5576                           ; BSR set to: 1
  5577                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5578  011E20  EE21  F37F         	lfsr	2,_C+128	;volatile
  5579  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5580  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5581  011E30  006F FF7B FFE6     	movff	postinc2,postinc1
  5582  011E36  006F FF7B FFE6     	movff	postinc2,postinc1
  5583  011E3C  0E52               	movlw	low STR_34
  5584  011E3E  6EE6               	movwf	postinc1,c
  5585  011E40  0EFC               	movlw	high STR_34
  5586  011E42  6EE6               	movwf	postinc1,c
  5587  011E44  0E00               	movlw	0
  5588  011E46  6EE6               	movwf	postinc1,c
  5589  011E48  0E00               	movlw	0
  5590  011E4A  6EE6               	movwf	postinc1,c
  5591  011E4C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5592  011E50  0060  F007  FFE6   	movff	btemp,postinc1
  5593  011E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5594  011E5C  0E08               	movlw	8
  5595  011E5E  6EE6               	movwf	postinc1,c
  5596  011E60  ECAC  F0D1         	call	_sprintf	;wreg free
  5597                           
  5598                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5599  011E64  EE21  F393         	lfsr	2,_C+148	;volatile
  5600  011E68  006F FF7B FFE6     	movff	postinc2,postinc1
  5601  011E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5602  011E74  006F FF7B FFE6     	movff	postinc2,postinc1
  5603  011E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5604  011E80  EE21  F38F         	lfsr	2,_C+144	;volatile
  5605  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5606  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5607  011E90  006F FF7B FFE6     	movff	postinc2,postinc1
  5608  011E96  006F FF7B FFE6     	movff	postinc2,postinc1
  5609  011E9C  0E97               	movlw	low STR_35
  5610  011E9E  6EE6               	movwf	postinc1,c
  5611  011EA0  0EFC               	movlw	high STR_35
  5612  011EA2  6EE6               	movwf	postinc1,c
  5613  011EA4  0E00               	movlw	0
  5614  011EA6  6EE6               	movwf	postinc1,c
  5615  011EA8  0E01               	movlw	1
  5616  011EAA  6EE6               	movwf	postinc1,c
  5617  011EAC  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5618  011EB0  0060  F007  FFE6   	movff	btemp,postinc1
  5619  011EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5620  011EBC  0E0C               	movlw	12
  5621  011EBE  6EE6               	movwf	postinc1,c
  5622  011EC0  ECAC  F0D1         	call	_sprintf	;wreg free
  5623                           
  5624                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5625  011EC4  EE21  F30F         	lfsr	2,_C+16	;volatile
  5626  011EC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5627  011ECE  006F FF7B FFE6     	movff	postinc2,postinc1
  5628  011ED4  006F FF7B FFE6     	movff	postinc2,postinc1
  5629  011EDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5630  011EE0  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5631  011EE4  006F FF78  F00B    	movff	postinc2,btemp+10
  5632  011EEA  006F FF74  F00C    	movff	postdec2,btemp+11
  5633  011EF0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5634  011EF6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5635  011EFC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5636  011F00  006F FF78  F00B    	movff	postinc2,btemp+10
  5637  011F06  006F FF74  F00C    	movff	postdec2,btemp+11
  5638  011F0C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5639  011F12  0060  F033  FFE6   	movff	btemp+11,postinc1
  5640  011F18  0E00               	movlw	0
  5641  011F1A  6EE6               	movwf	postinc1,c
  5642  011F1C  0E05               	movlw	5
  5643  011F1E  6EE6               	movwf	postinc1,c
  5644  011F20  EC31  F0D2         	call	_spinners	;wreg free
  5645  011F24  5001               	movf	btemp^0,w,c
  5646  011F26  6EE6               	movwf	postinc1,c
  5647  011F28  0E00               	movlw	0
  5648  011F2A  6EE6               	movwf	postinc1,c
  5649  011F2C  0EB8               	movlw	low STR_36
  5650  011F2E  6EE6               	movwf	postinc1,c
  5651  011F30  0EFB               	movlw	high STR_36
  5652  011F32  6EE6               	movwf	postinc1,c
  5653  011F34  0E00               	movlw	0
  5654  011F36  6EE6               	movwf	postinc1,c
  5655  011F38  0E02               	movlw	2
  5656  011F3A  6EE6               	movwf	postinc1,c
  5657  011F3C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5658  011F40  0060  F007  FFE6   	movff	btemp,postinc1
  5659  011F46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5660  011F4C  0E0E               	movlw	14
  5661  011F4E  6EE6               	movwf	postinc1,c
  5662  011F50  ECAC  F0D1         	call	_sprintf	;wreg free
  5663                           
  5664                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5665  011F54  EE21  F387         	lfsr	2,_C+136	;volatile
  5666  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5667  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5668  011F64  006F FF7B FFE6     	movff	postinc2,postinc1
  5669  011F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5670  011F70  0E3B               	movlw	low STR_37
  5671  011F72  6EE6               	movwf	postinc1,c
  5672  011F74  0EFC               	movlw	high STR_37
  5673  011F76  6EE6               	movwf	postinc1,c
  5674  011F78  0E01               	movlw	1
  5675  011F7A  6EE6               	movwf	postinc1,c
  5676  011F7C  0E00               	movlw	0
  5677  011F7E  6EE6               	movwf	postinc1,c
  5678  011F80  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5679  011F84  0060  F007  FFE6   	movff	btemp,postinc1
  5680  011F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5681  011F90  0E08               	movlw	8
  5682  011F92  6EE6               	movwf	postinc1,c
  5683  011F94  ECAC  F0D1         	call	_sprintf	;wreg free
  5684                           
  5685                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5686  011F98  EE22  F00D         	lfsr	2,_C+270	;volatile
  5687  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5688  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5689  011FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5690  011FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  011FB4  EE22  F019         	lfsr	2,_C+282	;volatile
  5692  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5693  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5694  011FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5695  011FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5696  011FD0  0E69               	movlw	low STR_38
  5697  011FD2  6EE6               	movwf	postinc1,c
  5698  011FD4  0EFC               	movlw	high STR_38
  5699  011FD6  6EE6               	movwf	postinc1,c
  5700  011FD8  0E01               	movlw	1
  5701  011FDA  6EE6               	movwf	postinc1,c
  5702  011FDC  0E01               	movlw	1
  5703  011FDE  6EE6               	movwf	postinc1,c
  5704  011FE0  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5705  011FE4  0060  F007  FFE6   	movff	btemp,postinc1
  5706  011FEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5707  011FF0  0E0C               	movlw	12
  5708  011FF2  6EE6               	movwf	postinc1,c
  5709  011FF4  ECAC  F0D1         	call	_sprintf	;wreg free
  5710                           
  5711                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5712  011FF8  EE22  F011         	lfsr	2,_C+274	;volatile
  5713  011FFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5714  012002  006F FF7B FFE6     	movff	postinc2,postinc1
  5715  012008  006F FF7B FFE6     	movff	postinc2,postinc1
  5716  01200E  006F FF7B FFE6     	movff	postinc2,postinc1
  5717  012014  EE22  F01D         	lfsr	2,_C+286	;volatile
  5718  012018  006F FF7B FFE6     	movff	postinc2,postinc1
  5719  01201E  006F FF7B FFE6     	movff	postinc2,postinc1
  5720  012024  006F FF7B FFE6     	movff	postinc2,postinc1
  5721  01202A  006F FF7B FFE6     	movff	postinc2,postinc1
  5722  012030  0E80               	movlw	low STR_39
  5723  012032  6EE6               	movwf	postinc1,c
  5724  012034  0EFC               	movlw	high STR_39
  5725  012036  6EE6               	movwf	postinc1,c
  5726  012038  0E01               	movlw	1
  5727  01203A  6EE6               	movwf	postinc1,c
  5728  01203C  0E02               	movlw	2
  5729  01203E  6EE6               	movwf	postinc1,c
  5730  012040  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5731  012044  0060  F007  FFE6   	movff	btemp,postinc1
  5732  01204A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5733  012050  0E0C               	movlw	12
  5734  012052  6EE6               	movwf	postinc1,c
  5735  012054  ECAC  F0D1         	call	_sprintf	;wreg free
  5736                           
  5737                           ;main.c: 388:      break;
  5738  012058  D107               	goto	l13929
  5739  01205A                     l13913:
  5740                           
  5741                           ; BSR set to: 1
  5742                           ;main.c: 390:      if (!V.calib) {
  5743  01205A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5744  01205C  A4D8               	btfss	status,2,c
  5745  01205E  D02D               	goto	l13917
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;main.c: 391:       lp_filter(0.0, i, -1);
  5749  012060  0EFF               	movlw	255
  5750  012062  6EE6               	movwf	postinc1,c
  5751                           
  5752                           ;stkvar	_i @ sp[(-18)+14]
  5753  012064  0EFC               	movlw	-4
  5754  012066  50E3               	movf	plusw1,w,c
  5755  012068  6EE6               	movwf	postinc1,c
  5756  01206A  0E00               	movlw	0
  5757  01206C  6EE6               	movwf	postinc1,c
  5758  01206E  0E00               	movlw	0
  5759  012070  6EE6               	movwf	postinc1,c
  5760  012072  0E00               	movlw	0
  5761  012074  6EE6               	movwf	postinc1,c
  5762  012076  0E00               	movlw	0
  5763  012078  6EE6               	movwf	postinc1,c
  5764  01207A  ECBD  F0C5         	call	_lp_filter	;wreg free
  5765                           
  5766                           ;main.c: 392:       lp_filter(0.0, j, -1);
  5767  01207E  0EFF               	movlw	255
  5768  012080  6EE6               	movwf	postinc1,c
  5769                           
  5770                           ;stkvar	_j @ sp[(-18)+13]
  5771  012082  0EFB               	movlw	-5
  5772  012084  50E3               	movf	plusw1,w,c
  5773  012086  6EE6               	movwf	postinc1,c
  5774  012088  0E00               	movlw	0
  5775  01208A  6EE6               	movwf	postinc1,c
  5776  01208C  0E00               	movlw	0
  5777  01208E  6EE6               	movwf	postinc1,c
  5778  012090  0E00               	movlw	0
  5779  012092  6EE6               	movwf	postinc1,c
  5780  012094  0E00               	movlw	0
  5781  012096  6EE6               	movwf	postinc1,c
  5782  012098  ECBD  F0C5         	call	_lp_filter	;wreg free
  5783                           
  5784                           ;main.c: 393:       lp_filter(0.0, k, -1);
  5785  01209C  0EFF               	movlw	255
  5786  01209E  6EE6               	movwf	postinc1,c
  5787                           
  5788                           ;stkvar	_k @ sp[(-18)+12]
  5789  0120A0  0EFA               	movlw	-6
  5790  0120A2  50E3               	movf	plusw1,w,c
  5791  0120A4  6EE6               	movwf	postinc1,c
  5792  0120A6  0E00               	movlw	0
  5793  0120A8  6EE6               	movwf	postinc1,c
  5794  0120AA  0E00               	movlw	0
  5795  0120AC  6EE6               	movwf	postinc1,c
  5796  0120AE  0E00               	movlw	0
  5797  0120B0  6EE6               	movwf	postinc1,c
  5798  0120B2  0E00               	movlw	0
  5799  0120B4  6EE6               	movwf	postinc1,c
  5800  0120B6  ECBD  F0C5         	call	_lp_filter	;wreg free
  5801  0120BA                     l13917:
  5802                           
  5803                           ;main.c: 395:      V.calib = 1;
  5804  0120BA  0E01               	movlw	1
  5805  0120BC  0101               	movlb	1	; () banked
  5806  0120BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5807                           
  5808                           ; BSR set to: 1
  5809                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  5810                           ;stkvar	_inp_index @ sp[(-17)+11]
  5811  0120C0  0EFA               	movlw	-6
  5812  0120C2  50E3               	movf	plusw1,w,c
  5813  0120C4  6EE6               	movwf	postinc1,c
  5814  0120C6  0E00               	movlw	0
  5815  0120C8  6EE6               	movwf	postinc1,c
  5816                           
  5817                           ;stkvar	_i @ sp[(-19)+14]
  5818  0120CA  0EFB               	movlw	-5
  5819  0120CC  50E3               	movf	plusw1,w,c
  5820  0120CE  0D04               	mullw	4
  5821  0120D0  0EFF               	movlw	low _C
  5822  0120D2  24F3               	addwf	243,w,c
  5823  0120D4  6ED9               	movwf	fsr2l,c
  5824  0120D6  0E06               	movlw	high _C
  5825  0120D8  20F4               	addwfc	prodh,w,c
  5826  0120DA  6EDA               	movwf	fsr2h,c
  5827  0120DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5828  0120E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5829  0120E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5830  0120EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5831                           
  5832                           ;stkvar	_i @ sp[(-23)+14]
  5833  0120F4  0EF7               	movlw	-9
  5834  0120F6  50E3               	movf	plusw1,w,c
  5835  0120F8  6EE6               	movwf	postinc1,c
  5836  0120FA  EC55  F0E4         	call	_get_raw_result	;wreg free
  5837  0120FE  0060  F007  FFE6   	movff	btemp,postinc1
  5838  012104  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5839  01210A  0EF8               	movlw	low STR_40
  5840  01210C  6EE6               	movwf	postinc1,c
  5841  01210E  0EFD               	movlw	high STR_40
  5842  012110  6EE6               	movwf	postinc1,c
  5843  012112  0E00               	movlw	0
  5844  012114  6EE6               	movwf	postinc1,c
  5845  012116  0E00               	movlw	0
  5846  012118  6EE6               	movwf	postinc1,c
  5847  01211A  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5848  01211E  0060  F007  FFE6   	movff	btemp,postinc1
  5849  012124  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5850  01212A  0E0C               	movlw	12
  5851  01212C  6EE6               	movwf	postinc1,c
  5852  01212E  ECAC  F0D1         	call	_sprintf	;wreg free
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  5856                           ;stkvar	_inp_index @ sp[(-17)+11]
  5857  012132  0EFA               	movlw	-6
  5858  012134  50E3               	movf	plusw1,w,c
  5859  012136  6E0B               	movwf	(btemp+10)^0,c
  5860  012138  6A0C               	clrf	(btemp+11)^0,c
  5861  01213A  0E01               	movlw	1
  5862  01213C  260B               	addwf	(btemp+10)^0,f,c
  5863  01213E  0E00               	movlw	0
  5864  012140  220C               	addwfc	(btemp+11)^0,f,c
  5865  012142  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5866  012148  0060  F033  FFE6   	movff	btemp+11,postinc1
  5867                           
  5868                           ;stkvar	_j @ sp[(-19)+13]
  5869  01214E  0EFA               	movlw	-6
  5870  012150  50E3               	movf	plusw1,w,c
  5871  012152  0D04               	mullw	4
  5872  012154  0EFF               	movlw	low _C
  5873  012156  24F3               	addwf	243,w,c
  5874  012158  6ED9               	movwf	fsr2l,c
  5875  01215A  0E06               	movlw	high _C
  5876  01215C  20F4               	addwfc	prodh,w,c
  5877  01215E  6EDA               	movwf	fsr2h,c
  5878  012160  006F FF7B FFE6     	movff	postinc2,postinc1
  5879  012166  006F FF7B FFE6     	movff	postinc2,postinc1
  5880  01216C  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  012172  006F FF7B FFE6     	movff	postinc2,postinc1
  5882                           
  5883                           ;stkvar	_j @ sp[(-23)+13]
  5884  012178  0EF6               	movlw	-10
  5885  01217A  50E3               	movf	plusw1,w,c
  5886  01217C  6EE6               	movwf	postinc1,c
  5887  01217E  EC55  F0E4         	call	_get_raw_result	;wreg free
  5888  012182  0060  F007  FFE6   	movff	btemp,postinc1
  5889  012188  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5890  01218E  0EF8               	movlw	low STR_40
  5891  012190  6EE6               	movwf	postinc1,c
  5892  012192  0EFD               	movlw	high STR_40
  5893  012194  6EE6               	movwf	postinc1,c
  5894  012196  0E00               	movlw	0
  5895  012198  6EE6               	movwf	postinc1,c
  5896  01219A  0E01               	movlw	1
  5897  01219C  6EE6               	movwf	postinc1,c
  5898  01219E  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5899  0121A2  0060  F007  FFE6   	movff	btemp,postinc1
  5900  0121A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5901  0121AE  0E0C               	movlw	12
  5902  0121B0  6EE6               	movwf	postinc1,c
  5903  0121B2  ECAC  F0D1         	call	_sprintf	;wreg free
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  5907                           ;stkvar	_inp_index @ sp[(-17)+11]
  5908  0121B6  0EFA               	movlw	-6
  5909  0121B8  50E3               	movf	plusw1,w,c
  5910  0121BA  6E0B               	movwf	(btemp+10)^0,c
  5911  0121BC  6A0C               	clrf	(btemp+11)^0,c
  5912  0121BE  0E02               	movlw	2
  5913  0121C0  260B               	addwf	(btemp+10)^0,f,c
  5914  0121C2  0E00               	movlw	0
  5915  0121C4  220C               	addwfc	(btemp+11)^0,f,c
  5916  0121C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5917  0121CC  0060  F033  FFE6   	movff	btemp+11,postinc1
  5918                           
  5919                           ;stkvar	_k @ sp[(-19)+12]
  5920  0121D2  0EF9               	movlw	-7
  5921  0121D4  50E3               	movf	plusw1,w,c
  5922  0121D6  0D04               	mullw	4
  5923  0121D8  0EFF               	movlw	low _C
  5924  0121DA  24F3               	addwf	243,w,c
  5925  0121DC  6ED9               	movwf	fsr2l,c
  5926  0121DE  0E06               	movlw	high _C
  5927  0121E0  20F4               	addwfc	prodh,w,c
  5928  0121E2  6EDA               	movwf	fsr2h,c
  5929  0121E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5930  0121EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5931  0121F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5932  0121F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5933                           
  5934                           ;stkvar	_k @ sp[(-23)+12]
  5935  0121FC  0EF5               	movlw	-11
  5936  0121FE  50E3               	movf	plusw1,w,c
  5937  012200  6EE6               	movwf	postinc1,c
  5938  012202  EC55  F0E4         	call	_get_raw_result	;wreg free
  5939  012206  0060  F007  FFE6   	movff	btemp,postinc1
  5940  01220C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5941  012212  0EF8               	movlw	low STR_40
  5942  012214  6EE6               	movwf	postinc1,c
  5943  012216  0EFD               	movlw	high STR_40
  5944  012218  6EE6               	movwf	postinc1,c
  5945  01221A  0E00               	movlw	0
  5946  01221C  6EE6               	movwf	postinc1,c
  5947  01221E  0E02               	movlw	2
  5948  012220  6EE6               	movwf	postinc1,c
  5949  012222  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  5950  012226  0060  F007  FFE6   	movff	btemp,postinc1
  5951  01222C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5952  012232  0E0C               	movlw	12
  5953  012234  6EE6               	movwf	postinc1,c
  5954  012236  ECAC  F0D1         	call	_sprintf	;wreg free
  5955                           
  5956                           ;main.c: 399:      break;
  5957  01223A  D016               	goto	l13929
  5958  01223C                     l13927:
  5959  01223C  0101               	movlb	1	; () banked
  5960  01223E  51C7               	movf	_H& (0+255),w,b
  5961  012240  6E0B               	movwf	(btemp+10)^0,c
  5962  012242  6A0C               	clrf	(btemp+11)^0,c
  5963                           
  5964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5965                           ; Switch size 1, requested type "simple"
  5966                           ; Number of cases is 1, Range of values is 0 to 0
  5967                           ; switch strategies available:
  5968                           ; Name         Instructions Cycles
  5969                           ; simple_byte            4     3 (average)
  5970                           ;	Chosen strategy is simple_byte
  5971  012244  500C               	movf	(btemp+11)^0,w,c
  5972  012246  0A00               	xorlw	0	; case 0
  5973  012248  A4D8               	btfss	status,2,c
  5974  01224A  D00E               	goto	l13929
  5975                           
  5976                           ; BSR set to: 1
  5977                           ; Switch size 1, requested type "simple"
  5978                           ; Number of cases is 4, Range of values is 0 to 3
  5979                           ; switch strategies available:
  5980                           ; Name         Instructions Cycles
  5981                           ; simple_byte           13     7 (average)
  5982                           ;	Chosen strategy is simple_byte
  5983  01224C  500B               	movf	(btemp+10)^0,w,c
  5984  01224E  0A00               	xorlw	0	; case 0
  5985  012250  B4D8               	btfsc	status,2,c
  5986  012252  D4D1               	goto	l1373
  5987  012254  0A01               	xorlw	1	; case 1
  5988  012256  B4D8               	btfsc	status,2,c
  5989  012258  EFF9  F08C         	goto	l1363
  5990  01225C  0A03               	xorlw	3	; case 2
  5991  01225E  B4D8               	btfsc	status,2,c
  5992  012260  D5DE               	goto	l1374
  5993  012262  0A01               	xorlw	1	; case 3
  5994  012264  B4D8               	btfsc	status,2,c
  5995  012266  D6F9               	goto	l13913
  5996  012268                     l13929:
  5997                           
  5998                           ;main.c: 403:     clear_hid_pflags(&H);
  5999  012268  0EC7               	movlw	low _H
  6000  01226A  6EE6               	movwf	postinc1,c
  6001  01226C  0E01               	movlw	high _H
  6002  01226E  6EE6               	movwf	postinc1,c
  6003  012270  EC1F  F0DC         	call	_clear_hid_pflags	;wreg free
  6004                           
  6005                           ;main.c: 405:    StartTimer(TMR_DISPLAY, 250);
  6006  012274  0EFA               	movlw	250
  6007  012276  6EE6               	movwf	postinc1,c
  6008  012278  0E00               	movlw	0
  6009  01227A  6EE6               	movwf	postinc1,c
  6010  01227C  0E0A               	movlw	10
  6011  01227E  6EE6               	movwf	postinc1,c
  6012  012280  ECEC  F0DF         	call	_StartTimer	;wreg free
  6013                           
  6014                           ;main.c: 406:    V.enter = check_enter_button(&H);
  6015  012284  0EC7               	movlw	low _H
  6016  012286  6EE6               	movwf	postinc1,c
  6017  012288  0E01               	movlw	high _H
  6018  01228A  6EE6               	movwf	postinc1,c
  6019  01228C  EC46  F0DB         	call	_check_enter_button	;wreg free
  6020  012290  5001               	movf	btemp^0,w,c
  6021  012292  0101               	movlb	1	; () banked
  6022  012294  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6023                           
  6024                           ; BSR set to: 1
  6025                           ;main.c: 407:    if (V.enter && (H.hid_display != HID_AUX)) {
  6026  012296  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6027  012298  B4D8               	btfsc	status,2,c
  6028  01229A  D011               	goto	l13943
  6029                           
  6030                           ; BSR set to: 1
  6031  01229C  0E03               	movlw	3
  6032  01229E  19C7               	xorwf	_H& (0+255),w,b
  6033  0122A0  B4D8               	btfsc	status,2,c
  6034  0122A2  D00D               	goto	l13943
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;main.c: 408:     V.enter = 0;
  6038  0122A4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6039                           
  6040                           ; BSR set to: 1
  6041                           ;main.c: 409:     V.screen = ~V.screen;
  6042  0122A6  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6043  0122A8  D002               	goto	u13360
  6044  0122AA  0E01               	movlw	1
  6045  0122AC  D001               	goto	u13366
  6046  0122AE                     u13360:
  6047  0122AE  0E00               	movlw	0
  6048  0122B0                     u13366:
  6049  0122B0  0AFF               	xorlw	255
  6050  0122B2  6E0C               	movwf	(btemp+11)^0,c
  6051  0122B4  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6052  0122B6  180C               	xorwf	(btemp+11)^0,w,c
  6053  0122B8  0BFE               	andlw	-2
  6054  0122BA  180C               	xorwf	(btemp+11)^0,w,c
  6055  0122BC  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6056  0122BE                     l13943:
  6057                           
  6058                           ; BSR set to: 1
  6059                           ;main.c: 411:    set_vterm(V.screen);
  6060  0122BE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6061  0122C0  D002               	goto	u13370
  6062  0122C2  0E01               	movlw	1
  6063  0122C4  D001               	goto	u13376
  6064  0122C6                     u13370:
  6065  0122C6  0E00               	movlw	0
  6066  0122C8                     u13376:
  6067  0122C8  6EE6               	movwf	postinc1,c
  6068  0122CA  EC37  F0E4         	call	_set_vterm	;wreg free
  6069                           
  6070                           ;main.c: 412:    update_lcd(V.screen);
  6071  0122CE  0101               	movlb	1	; () banked
  6072  0122D0  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6073  0122D2  D002               	goto	u13380
  6074  0122D4  0E01               	movlw	1
  6075  0122D6  D001               	goto	u13386
  6076  0122D8                     u13380:
  6077  0122D8  0E00               	movlw	0
  6078  0122DA                     u13386:
  6079  0122DA  6EE6               	movwf	postinc1,c
  6080  0122DC  EC24  F0D1         	call	_update_lcd	;wreg free
  6081                           
  6082                           ;main.c: 414:    wait_lcd_done();
  6083  0122E0  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;main.c: 415:    set_dac_a(3.333);
  6087  0122E4  0EDF               	movlw	223
  6088  0122E6  6EE6               	movwf	postinc1,c
  6089  0122E8  0E4F               	movlw	79
  6090  0122EA  6EE6               	movwf	postinc1,c
  6091  0122EC  0E55               	movlw	85
  6092  0122EE  6EE6               	movwf	postinc1,c
  6093  0122F0  0E40               	movlw	64
  6094  0122F2  6EE6               	movwf	postinc1,c
  6095  0122F4  EC2A  F0E1         	call	_set_dac_a	;wreg free
  6096                           
  6097                           ;main.c: 416:    set_dac_b(6.666);
  6098  0122F8  0EDF               	movlw	223
  6099  0122FA  6EE6               	movwf	postinc1,c
  6100  0122FC  0E4F               	movlw	79
  6101  0122FE  6EE6               	movwf	postinc1,c
  6102  012300  0ED5               	movlw	213
  6103  012302  6EE6               	movwf	postinc1,c
  6104  012304  0E40               	movlw	64
  6105  012306  6EE6               	movwf	postinc1,c
  6106  012308  EC10  F0E1         	call	_set_dac_b	;wreg free
  6107                           
  6108                           ;main.c: 417:    set_dac();
  6109  01230C  EC53  F0D6         	call	_set_dac	;wreg free
  6110  012310                     l13955:
  6111                           
  6112                           ;main.c: 423:   check_help(V.flipper);
  6113  012310  0101               	movlb	1	; () banked
  6114  012312  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6115  012314  6EE6               	movwf	postinc1,c
  6116  012316  ECB2  F0C3         	call	_check_help	;wreg free
  6117                           
  6118                           ;main.c: 425:   if (V.enter) {
  6119  01231A  0101               	movlb	1	; () banked
  6120  01231C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6121  01231E  B4D8               	btfsc	status,2,c
  6122  012320  D062               	goto	l1379
  6123                           
  6124                           ; BSR set to: 1
  6125                           ;main.c: 426:    V.enter = 0;
  6126  012322  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6127                           
  6128                           ;main.c: 427:    V.calib = 0;
  6129  012324  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6130                           
  6131                           ; BSR set to: 1
  6132                           ;main.c: 428:    inp_index += 3;
  6133                           ;stkvar	_inp_index @ sp[(-17)+11]
  6134  012326  0EFA               	movlw	-6
  6135  012328  006F FF8C  F001    	movff	plusw1,btemp
  6136  01232E  0E03               	movlw	3
  6137  012330  2601               	addwf	btemp^0,f,c
  6138  012332  0EFA               	movlw	-6
  6139  012334  0060  F007  FFE3   	movff	btemp,plusw1
  6140                           
  6141                           ;main.c: 429:    if (inp_index > 9)
  6142                           ;stkvar	_inp_index @ sp[(-17)+11]
  6143  01233A  0EFA               	movlw	-6
  6144  01233C  006F FF8C  F001    	movff	plusw1,btemp
  6145  012342  0E09               	movlw	9
  6146  012344  6401               	cpfsgt	btemp^0,c
  6147  012346  D03A               	goto	l13983
  6148                           
  6149                           ; BSR set to: 1
  6150                           ;main.c: 430:     inp_index = 0;
  6151                           ;stkvar	_inp_index @ sp[(-17)+11]
  6152  012348  0EFA               	movlw	-6
  6153  01234A  6AE3               	clrf	plusw1,c
  6154  01234C  D037               	goto	l13983
  6155  01234E                     l13965:
  6156                           
  6157                           ; BSR set to: 1
  6158                           ;main.c: 433:     i = C_BATT;
  6159                           ;stkvar	_i @ sp[(-17)+14]
  6160  01234E  0EFD               	movlw	-3
  6161  012350  6AE3               	clrf	plusw1,c
  6162                           
  6163                           ; BSR set to: 1
  6164                           ;main.c: 434:     j = C_PV;
  6165                           ;stkvar	_j @ sp[(-17)+13]
  6166  012352  0EFC               	movlw	-4
  6167  012354  6AE3               	clrf	plusw1,c
  6168  012356  2AE3               	incf	plusw1,f,c
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;main.c: 435:     k = V_CC;
  6172                           ;stkvar	_k @ sp[(-17)+12]
  6173  012358  0EFB               	movlw	-5
  6174  01235A  6AE3               	clrf	plusw1,c
  6175  01235C  82E3               	bsf	plusw1,1,c
  6176                           
  6177                           ;main.c: 436:     break;
  6178  01235E  D043               	goto	l1379
  6179  012360                     l13971:
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;main.c: 438:     i = V_BAT;
  6183                           ;stkvar	_i @ sp[(-17)+14]
  6184  012360  0EFD               	movlw	-3
  6185  012362  6AE3               	clrf	plusw1,c
  6186  012364  84E3               	bsf	plusw1,2,c
  6187                           
  6188                           ;main.c: 439:     j = V_PV;
  6189                           ;stkvar	_j @ sp[(-17)+13]
  6190  012366  0EFC               	movlw	-4
  6191  012368  6AE3               	clrf	plusw1,c
  6192  01236A  80E3               	bsf	plusw1,0,c
  6193  01236C  84E3               	bsf	plusw1,2,c	;indir
  6194                           
  6195                           ;main.c: 440:     k = V_CBUS;
  6196                           ;stkvar	_k @ sp[(-17)+12]
  6197  01236E  0EFB               	movlw	-5
  6198  012370  6AE3               	clrf	plusw1,c
  6199  012372  82E3               	bsf	plusw1,1,c
  6200  012374  84E3               	bsf	plusw1,2,c	;indir
  6201                           
  6202                           ;main.c: 441:     break;
  6203  012376  D037               	goto	l1379
  6204  012378                     l13973:
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;main.c: 443:     i = V_BBAT;
  6208                           ;stkvar	_i @ sp[(-17)+14]
  6209  012378  0EFD               	movlw	-3
  6210  01237A  6AE3               	clrf	plusw1,c
  6211  01237C  82E3               	bsf	plusw1,1,c
  6212  01237E  86E3               	bsf	plusw1,3,c	;indir
  6213                           
  6214                           ; BSR set to: 1
  6215                           ;main.c: 444:     j = V_TEMP;
  6216  012380  0E0B               	movlw	11
  6217  012382  6E0C               	movwf	(btemp+11)^0,c
  6218                           
  6219                           ;stkvar	_j @ sp[(-17)+13]
  6220  012384  0EFC               	movlw	-4
  6221  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
  6222                           
  6223                           ; BSR set to: 1
  6224                           ;main.c: 445:     k = V_INVERTER;
  6225                           ;stkvar	_k @ sp[(-17)+12]
  6226  01238C  0EFB               	movlw	-5
  6227  01238E  6AE3               	clrf	plusw1,c
  6228  012390  84E3               	bsf	plusw1,2,c
  6229  012392  86E3               	bsf	plusw1,3,c	;indir
  6230                           
  6231                           ;main.c: 446:     break;
  6232  012394  D028               	goto	l1379
  6233  012396                     l13979:
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;main.c: 448:     i = V_LIGHT_SENSOR;
  6237  012396  0E0D               	movlw	13
  6238  012398  6E0C               	movwf	(btemp+11)^0,c
  6239                           
  6240                           ;stkvar	_i @ sp[(-17)+14]
  6241  01239A  0EFD               	movlw	-3
  6242  01239C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6243                           
  6244                           ;main.c: 449:     j = V_LIGHT_SENSOR;
  6245  0123A2  0E0D               	movlw	13
  6246  0123A4  6E0C               	movwf	(btemp+11)^0,c
  6247                           
  6248                           ;stkvar	_j @ sp[(-17)+13]
  6249  0123A6  0EFC               	movlw	-4
  6250  0123A8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6251                           
  6252                           ;main.c: 450:     k = V_LIGHT_SENSOR;
  6253  0123AE  0E0D               	movlw	13
  6254  0123B0  6E0C               	movwf	(btemp+11)^0,c
  6255                           
  6256                           ;stkvar	_k @ sp[(-17)+12]
  6257  0123B2  0EFB               	movlw	-5
  6258  0123B4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6259                           
  6260                           ;main.c: 451:     break;
  6261  0123BA  D015               	goto	l1379
  6262  0123BC                     l13983:
  6263                           
  6264                           ; BSR set to: 1
  6265                           ;stkvar	_inp_index @ sp[(-17)+11]
  6266  0123BC  0EFA               	movlw	-6
  6267  0123BE  50E3               	movf	plusw1,w,c
  6268  0123C0  6E0B               	movwf	(btemp+10)^0,c
  6269  0123C2  6A0C               	clrf	(btemp+11)^0,c
  6270                           
  6271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6272                           ; Switch size 1, requested type "simple"
  6273                           ; Number of cases is 1, Range of values is 0 to 0
  6274                           ; switch strategies available:
  6275                           ; Name         Instructions Cycles
  6276                           ; simple_byte            4     3 (average)
  6277                           ;	Chosen strategy is simple_byte
  6278  0123C4  500C               	movf	(btemp+11)^0,w,c
  6279  0123C6  0A00               	xorlw	0	; case 0
  6280  0123C8  A4D8               	btfss	status,2,c
  6281  0123CA  D00D               	goto	l1379
  6282                           
  6283                           ; BSR set to: 1
  6284                           ; Switch size 1, requested type "simple"
  6285                           ; Number of cases is 4, Range of values is 0 to 9
  6286                           ; switch strategies available:
  6287                           ; Name         Instructions Cycles
  6288                           ; simple_byte           13     7 (average)
  6289                           ;	Chosen strategy is simple_byte
  6290  0123CC  500B               	movf	(btemp+10)^0,w,c
  6291  0123CE  0A00               	xorlw	0	; case 0
  6292  0123D0  B4D8               	btfsc	status,2,c
  6293  0123D2  D7BD               	goto	l13965
  6294  0123D4  0A03               	xorlw	3	; case 3
  6295  0123D6  B4D8               	btfsc	status,2,c
  6296  0123D8  D7C3               	goto	l13971
  6297  0123DA  0A05               	xorlw	5	; case 6
  6298  0123DC  B4D8               	btfsc	status,2,c
  6299  0123DE  D7CC               	goto	l13973
  6300  0123E0  0A0F               	xorlw	15	; case 9
  6301  0123E2  B4D8               	btfsc	status,2,c
  6302  0123E4  D7D8               	goto	l13979
  6303  0123E6                     l1379:
  6304                           
  6305                           ; BSR set to: 1
  6306                           ;main.c: 460:   if (V.set_sequ) {
  6307  0123E6  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6308  0123E8  EFAB  F08C         	goto	l13857
  6309                           
  6310                           ; BSR set to: 1
  6311                           ;main.c: 461:    if (TimerDone(TMR_INFO)) {
  6312  0123EC  0E07               	movlw	7
  6313  0123EE  6EE6               	movwf	postinc1,c
  6314  0123F0  EC41  F0E2         	call	_TimerDone	;wreg free
  6315  0123F4  5001               	movf	btemp^0,w,c
  6316  0123F6  B4D8               	btfsc	status,2,c
  6317  0123F8  D00C               	goto	l13993
  6318                           
  6319                           ;main.c: 462:     V.set_sequ = 0;
  6320  0123FA  0101               	movlb	1	; () banked
  6321  0123FC  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;main.c: 463:     set_vterm(0);
  6325  0123FE  0E00               	movlw	0
  6326  012400  6EE6               	movwf	postinc1,c
  6327  012402  EC37  F0E4         	call	_set_vterm	;wreg free
  6328                           
  6329                           ;main.c: 464:     update_lcd(0);
  6330  012406  0E00               	movlw	0
  6331  012408  6EE6               	movwf	postinc1,c
  6332  01240A  EC24  F0D1         	call	_update_lcd	;wreg free
  6333                           
  6334                           ;main.c: 465:    } else {
  6335  01240E  EFAB  F08C         	goto	l13857
  6336  012412                     l13993:
  6337                           
  6338                           ;main.c: 466:     set_vterm(2);
  6339  012412  0E02               	movlw	2
  6340  012414  6EE6               	movwf	postinc1,c
  6341  012416  EC37  F0E4         	call	_set_vterm	;wreg free
  6342                           
  6343                           ;main.c: 467:     update_lcd(2);
  6344  01241A  0E02               	movlw	2
  6345  01241C  6EE6               	movwf	postinc1,c
  6346  01241E  EC24  F0D1         	call	_update_lcd	;wreg free
  6347  012422  EFAB  F08C         	goto	l13857
  6348  012426                     __end_of_main:
  6349                           	opt callstack 0
  6350                           
  6351 ;; *************** function _static_soc *****************
  6352 ;; Defined at:
  6353 ;;		line 117 in file "mbmc.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;		None
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1  [STACK] void 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr2l, fsr2h
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6371 ;;Total ram usage:        0 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:   15
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_main
  6378 ;; This function uses a reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text1
  6382  01BA92                     __ptext1:
  6383                           	opt callstack 0
  6384  01BA92                     _static_soc:
  6385                           	opt callstack 15
  6386                           
  6387                           ;mbmc.c: 119:  C.runtime = 120;
  6388                           
  6389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6390                           ;incstack = 0
  6391  01BA92  0E78               	movlw	120
  6392  01BA94  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6393  01BA9A  0E00               	movlw	0
  6394  01BA9C  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6395                           
  6396                           ;mbmc.c: 120:  C.soc = 100;
  6397  01BAA2  0E64               	movlw	100
  6398  01BAA4  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6399  01BAAA  0E00               	movlw	0
  6400  01BAAC  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6401                           
  6402                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6403  01BAB2  EE21  F38B         	lfsr	2,_C+140	;volatile
  6404  01BAB6  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6405  01BABC  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6406  01BAC2  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6407  01BAC8  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6408                           
  6409                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6410  01BACE  EE21  F38F         	lfsr	2,_C+144	;volatile
  6411  01BAD2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6412  01BAD8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6413  01BADE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6414  01BAE4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6415                           
  6416                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6417  01BAEA  0012               	return		;funcret
  6418  01BAEC                     __end_of_static_soc:
  6419                           	opt callstack 0
  6420                           
  6421 ;; *************** function _start_switch_handler *****************
  6422 ;; Defined at:
  6423 ;;		line 125 in file "dio.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1  [STACK] void 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6432 ;; Tracked objects:
  6433 ;;		On entry : 1/0
  6434 ;;		On exit  : 3F/39
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:   16
  6444 ;; This function calls:
  6445 ;;		_INT1_SetInterruptHandler
  6446 ;; This function is called by:
  6447 ;;		_main
  6448 ;; This function uses a reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text2
  6452  01C7F2                     __ptext2:
  6453                           	opt callstack 0
  6454  01C7F2                     _start_switch_handler:
  6455                           	opt callstack 14
  6456                           
  6457                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6458                           
  6459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6460                           ;incstack = 0
  6461  01C7F2  0139               	movlb	57	; () banked
  6462  01C7F4  9195               	bcf	149,0,b	;volatile
  6463                           
  6464                           ; BSR set to: 57
  6465                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6466  01C7F6  0EF8               	movlw	low _switch_handler
  6467  01C7F8  6EE6               	movwf	postinc1,c
  6468  01C7FA  0E98               	movlw	high _switch_handler
  6469  01C7FC  6EE6               	movwf	postinc1,c
  6470  01C7FE  0E01               	movlw	low (_switch_handler shr (0+16))
  6471  01C800  6EE6               	movwf	postinc1,c
  6472  01C802  ECCD  F0E2         	call	_INT1_SetInterruptHandler	;wreg free
  6473                           
  6474                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6475  01C806  0E02               	movlw	2
  6476  01C808  0102               	movlb	2	; () banked
  6477  01C80A  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6478                           
  6479                           ; BSR set to: 2
  6480                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6481  01C80C  0139               	movlb	57	; () banked
  6482  01C80E  8195               	bsf	149,0,b	;volatile
  6483                           
  6484                           ; BSR set to: 57
  6485                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6486  01C810  0012               	return		;funcret
  6487  01C812                     __end_of_start_switch_handler:
  6488                           	opt callstack 0
  6489                           
  6490 ;; *************** function _srand *****************
  6491 ;; Defined at:
  6492 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  s               2  [STACK] unsigned int 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1  [STACK] void 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 3F/1
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6510 ;;Total ram usage:        0 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:   15
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_main
  6517 ;; This function uses a reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text3
  6521  01C1EC                     __ptext3:
  6522                           	opt callstack 0
  6523  01C1EC                     _srand:
  6524                           	opt callstack 15
  6525                           
  6526                           ;stkvar	_s @ sp[(0)+-2]
  6527                           
  6528                           ; BSR set to: 57
  6529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6530                           ;incstack = 0
  6531  01C1EC  0EFE               	movlw	-2
  6532  01C1EE  50E3               	movf	plusw1,w,c
  6533  01C1F0  0FFF               	addlw	255
  6534  01C1F2  6E0B               	movwf	(btemp+10)^0,c
  6535  01C1F4  0EFF               	movlw	-1
  6536  01C1F6  006F FF8C  F00C    	movff	plusw1,btemp+11
  6537  01C1FC  0EFF               	movlw	255
  6538  01C1FE  220C               	addwfc	(btemp+11)^0,f,c
  6539  01C200  0060  F02C  F1F6   	movff	btemp+10,_seed
  6540  01C206  0060  F030  F1F7   	movff	btemp+11,_seed+1
  6541  01C20C  0101               	movlb	1	; () banked
  6542  01C20E  6BF8               	clrf	(_seed+2)& (0+255),b
  6543  01C210  6BF9               	clrf	(_seed+3)& (0+255),b
  6544  01C212  6BFA               	clrf	(_seed+4)& (0+255),b
  6545  01C214  6BFB               	clrf	(_seed+5)& (0+255),b
  6546  01C216  6BFC               	clrf	(_seed+6)& (0+255),b
  6547  01C218  6BFD               	clrf	(_seed+7)& (0+255),b
  6548                           
  6549                           ; BSR set to: 1
  6550                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6551  01C21A  52E5               	movf	postdec1,f,c
  6552  01C21C  52E5               	movf	postdec1,f,c
  6553  01C21E  0012               	return		;funcret
  6554  01C220                     __end_of_srand:
  6555                           	opt callstack 0
  6556                           
  6557 ;; *************** function _set_dac_b *****************
  6558 ;; Defined at:
  6559 ;;		line 296 in file "daq.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  voltage         4  [STACK] const float 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  2  [STACK] unsigned short 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6577 ;;Total ram usage:        0 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:   17
  6580 ;; This function calls:
  6581 ;;		_convert_dac_raw
  6582 ;; This function is called by:
  6583 ;;		_main
  6584 ;; This function uses a reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text4
  6588  01C220                     __ptext4:
  6589                           	opt callstack 0
  6590  01C220                     _set_dac_b:
  6591                           	opt callstack 13
  6592                           
  6593                           ;daq.c: 296: uint16_t set_dac_b(const float voltage);daq.c: 297: {;daq.c: 298:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6594                           ;stkvar	_voltage @ sp[(0)+-4]
  6595                           
  6596                           ; BSR set to: 1
  6597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6598                           ;incstack = 0
  6599  01C220  0EFC               	movlw	-4
  6600  01C222  006F FF8F FFE6     	movff	plusw1,postinc1
  6601  01C228  006F FF8F FFE6     	movff	plusw1,postinc1
  6602  01C22E  006F FF8F FFE6     	movff	plusw1,postinc1
  6603  01C234  006F FF8F FFE6     	movff	plusw1,postinc1
  6604  01C23A  EC82  F0CF         	call	_convert_dac_raw	;wreg free
  6605  01C23E  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6606  01C244  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6607                           
  6608                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6609                           
  6610                           ;daq.c: 299:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6611  01C24A  52E5               	movf	postdec1,f,c
  6612  01C24C  52E5               	movf	postdec1,f,c
  6613  01C24E  52E5               	movf	postdec1,f,c
  6614  01C250  52E5               	movf	postdec1,f,c
  6615  01C252  0012               	return		;funcret
  6616  01C254                     __end_of_set_dac_b:
  6617                           	opt callstack 0
  6618                           
  6619 ;; *************** function _set_dac_a *****************
  6620 ;; Defined at:
  6621 ;;		line 287 in file "daq.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  voltage         4  [STACK] const float 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  2  [STACK] unsigned short 
  6628 ;; Registers used:
  6629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6630 ;; Tracked objects:
  6631 ;;		On entry : 3F/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:   17
  6642 ;; This function calls:
  6643 ;;		_convert_dac_raw
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text5
  6650  01C254                     __ptext5:
  6651                           	opt callstack 0
  6652  01C254                     _set_dac_a:
  6653                           	opt callstack 13
  6654                           
  6655                           ;daq.c: 287: uint16_t set_dac_a(const float voltage);daq.c: 288: {;daq.c: 289:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6656                           ;stkvar	_voltage @ sp[(0)+-4]
  6657                           
  6658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6659                           ;incstack = 0
  6660  01C254  0EFC               	movlw	-4
  6661  01C256  006F FF8F FFE6     	movff	plusw1,postinc1
  6662  01C25C  006F FF8F FFE6     	movff	plusw1,postinc1
  6663  01C262  006F FF8F FFE6     	movff	plusw1,postinc1
  6664  01C268  006F FF8F FFE6     	movff	plusw1,postinc1
  6665  01C26E  EC82  F0CF         	call	_convert_dac_raw	;wreg free
  6666  01C272  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6667  01C278  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6668                           
  6669                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6670                           
  6671                           ;daq.c: 290:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6672  01C27E  52E5               	movf	postdec1,f,c
  6673  01C280  52E5               	movf	postdec1,f,c
  6674  01C282  52E5               	movf	postdec1,f,c
  6675  01C284  52E5               	movf	postdec1,f,c
  6676  01C286  0012               	return		;funcret
  6677  01C288                     __end_of_set_dac_a:
  6678                           	opt callstack 0
  6679                           
  6680 ;; *************** function _convert_dac_raw *****************
  6681 ;; Defined at:
  6682 ;;		line 269 in file "daq.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  voltage         4  [STACK] float 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  2  [STACK] unsigned short 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:   16
  6703 ;; This function calls:
  6704 ;;		___fldiv
  6705 ;;		___flge
  6706 ;;		___fltol
  6707 ;; This function is called by:
  6708 ;;		_set_dac_a
  6709 ;;		_set_dac_b
  6710 ;; This function uses a reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text6
  6714  019F04                     __ptext6:
  6715                           	opt callstack 0
  6716  019F04                     _convert_dac_raw:
  6717                           	opt callstack 13
  6718                           
  6719                           ;daq.c: 269: static uint16_t convert_dac_raw(float voltage);daq.c: 270: {;daq.c: 274:  i
      +                          f (voltage < 0.001)
  6720                           
  6721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6722                           ;incstack = 0
  6723  019F04  0E6F               	movlw	111
  6724  019F06  6EE6               	movwf	postinc1,c
  6725  019F08  0E12               	movlw	18
  6726  019F0A  6EE6               	movwf	postinc1,c
  6727  019F0C  0E83               	movlw	131
  6728  019F0E  6EE6               	movwf	postinc1,c
  6729  019F10  0E3A               	movlw	58
  6730  019F12  6EE6               	movwf	postinc1,c
  6731                           
  6732                           ;stkvar	_voltage @ sp[(-4)+-4]
  6733  019F14  0EF8               	movlw	-8
  6734  019F16  006F FF8F FFE6     	movff	plusw1,postinc1
  6735  019F1C  006F FF8F FFE6     	movff	plusw1,postinc1
  6736  019F22  006F FF8F FFE6     	movff	plusw1,postinc1
  6737  019F28  006F FF8F FFE6     	movff	plusw1,postinc1
  6738  019F2E  EC72  F0CA         	call	___flge	;wreg free
  6739  019F32  B001               	btfsc	btemp& (0+255),0,c
  6740  019F34  D018               	goto	l10947
  6741                           
  6742                           ;daq.c: 275:   voltage = 0.001;
  6743  019F36  0E6F               	movlw	111
  6744  019F38  6E09               	movwf	(btemp+8)^0,c
  6745  019F3A  0E12               	movlw	18
  6746  019F3C  6E0A               	movwf	(btemp+9)^0,c
  6747  019F3E  0E83               	movlw	131
  6748  019F40  6E0B               	movwf	(btemp+10)^0,c
  6749  019F42  0E3A               	movlw	58
  6750  019F44  6E0C               	movwf	(btemp+11)^0,c
  6751                           
  6752                           ;stkvar	_voltage @ sp[(0)+-4]
  6753  019F46  0EFC               	movlw	-4
  6754  019F48  0060  F027  FFE3   	movff	btemp+8,plusw1
  6755  019F4E  0EFD               	movlw	-3
  6756  019F50  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6757  019F56  0EFE               	movlw	-2
  6758  019F58  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6759  019F5E  0EFF               	movlw	-1
  6760  019F60  0060  F033  FFE3   	movff	btemp+11,plusw1
  6761  019F66                     l10947:
  6762                           
  6763                           ;daq.c: 276:  if (voltage > 10.0)
  6764                           ;stkvar	_voltage @ sp[(0)+-4]
  6765  019F66  0EFC               	movlw	-4
  6766  019F68  006F FF8F FFE6     	movff	plusw1,postinc1
  6767  019F6E  006F FF8F FFE6     	movff	plusw1,postinc1
  6768  019F74  006F FF8F FFE6     	movff	plusw1,postinc1
  6769  019F7A  006F FF8F FFE6     	movff	plusw1,postinc1
  6770  019F80  0E00               	movlw	0
  6771  019F82  6EE6               	movwf	postinc1,c
  6772  019F84  0E00               	movlw	0
  6773  019F86  6EE6               	movwf	postinc1,c
  6774  019F88  0E20               	movlw	32
  6775  019F8A  6EE6               	movwf	postinc1,c
  6776  019F8C  0E41               	movlw	65
  6777  019F8E  6EE6               	movwf	postinc1,c
  6778  019F90  EC72  F0CA         	call	___flge	;wreg free
  6779  019F94  B001               	btfsc	btemp& (0+255),0,c
  6780  019F96  D018               	goto	l10951
  6781                           
  6782                           ;daq.c: 277:   voltage = 10.0;
  6783  019F98  0E00               	movlw	0
  6784  019F9A  6E09               	movwf	(btemp+8)^0,c
  6785  019F9C  0E00               	movlw	0
  6786  019F9E  6E0A               	movwf	(btemp+9)^0,c
  6787  019FA0  0E20               	movlw	32
  6788  019FA2  6E0B               	movwf	(btemp+10)^0,c
  6789  019FA4  0E41               	movlw	65
  6790  019FA6  6E0C               	movwf	(btemp+11)^0,c
  6791                           
  6792                           ;stkvar	_voltage @ sp[(0)+-4]
  6793  019FA8  0EFC               	movlw	-4
  6794  019FAA  0060  F027  FFE3   	movff	btemp+8,plusw1
  6795  019FB0  0EFD               	movlw	-3
  6796  019FB2  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6797  019FB8  0EFE               	movlw	-2
  6798  019FBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6799  019FC0  0EFF               	movlw	-1
  6800  019FC2  0060  F033  FFE3   	movff	btemp+11,plusw1
  6801  019FC8                     l10951:
  6802                           
  6803                           ;daq.c: 281:  return(uint16_t) (voltage / 0.002442);
  6804  019FC8  0EF6               	movlw	246
  6805  019FCA  6EE6               	movwf	postinc1,c
  6806  019FCC  0E09               	movlw	9
  6807  019FCE  6EE6               	movwf	postinc1,c
  6808  019FD0  0E20               	movlw	32
  6809  019FD2  6EE6               	movwf	postinc1,c
  6810  019FD4  0E3B               	movlw	59
  6811  019FD6  6EE6               	movwf	postinc1,c
  6812                           
  6813                           ;stkvar	_voltage @ sp[(-4)+-4]
  6814  019FD8  0EF8               	movlw	-8
  6815  019FDA  006F FF8F FFE6     	movff	plusw1,postinc1
  6816  019FE0  006F FF8F FFE6     	movff	plusw1,postinc1
  6817  019FE6  006F FF8F FFE6     	movff	plusw1,postinc1
  6818  019FEC  006F FF8F FFE6     	movff	plusw1,postinc1
  6819  019FF2  EC13  F0A7         	call	___fldiv	;wreg free
  6820  019FF6  0060  F007  FFE6   	movff	btemp,postinc1
  6821  019FFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6822  01A002  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6823  01A008  0060  F013  FFE6   	movff	btemp+3,postinc1
  6824  01A00E  ECB9  F0C9         	call	___fltol	;wreg free
  6825                           
  6826                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6827  01A012  52E5               	movf	postdec1,f,c
  6828  01A014  52E5               	movf	postdec1,f,c
  6829  01A016  52E5               	movf	postdec1,f,c
  6830  01A018  52E5               	movf	postdec1,f,c
  6831  01A01A  0012               	return		;funcret
  6832  01A01C                     __end_of_convert_dac_raw:
  6833                           	opt callstack 0
  6834                           
  6835 ;; *************** function _set_dac *****************
  6836 ;; Defined at:
  6837 ;;		line 245 in file "daq.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;		None
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1  [STACK] void 
  6844 ;; Registers used:
  6845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6855 ;;Total ram usage:        0 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; Hardware stack levels required when called:   16
  6858 ;; This function calls:
  6859 ;;		_SPI1_Exchange8bit
  6860 ;;		_dac_spi_control
  6861 ;; This function is called by:
  6862 ;;		_main
  6863 ;; This function uses a reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text7
  6867  01ACA6                     __ptext7:
  6868                           	opt callstack 0
  6869  01ACA6                     _set_dac:
  6870                           	opt callstack 14
  6871                           
  6872                           ;daq.c: 247:  while (!SPI1STATUSbits.TXBE);
  6873                           
  6874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6875                           ;incstack = 0
  6876  01ACA6  013D               	movlb	61	; () banked
  6877  01ACA8  AB17               	btfss	23,5,b	;volatile
  6878  01ACAA  D7FD               	goto	_set_dac
  6879                           
  6880                           ; BSR set to: 61
  6881                           
  6882                           ;daq.c: 248:  do { LATCbits.LATC2 = 1; } while(0);
  6883  01ACAC  84BC               	bsf	188,2,c	;volatile
  6884                           
  6885                           ; BSR set to: 61
  6886                           
  6887                           ;daq.c: 249:  do { LATCbits.LATC0 = 1; } while(0);
  6888  01ACAE  80BC               	bsf	188,0,c	;volatile
  6889                           
  6890                           ; BSR set to: 61
  6891                           ;daq.c: 250:  dac_spi_control(1);
  6892  01ACB0  0E01               	movlw	1
  6893  01ACB2  6EE6               	movwf	postinc1,c
  6894  01ACB4  ECCD  F0DA         	call	_dac_spi_control	;wreg free
  6895                           
  6896                           ;daq.c: 251:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6897  01ACB8  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6898                           
  6899                           ;daq.c: 252:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6900  01ACBC  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6901  01ACC0  006F FF78  F00B    	movff	postinc2,btemp+10
  6902  01ACC6  006F FF74  F00C    	movff	postdec2,btemp+11
  6903  01ACCC  0060  F030  F00B   	movff	btemp+11,btemp+10
  6904  01ACD2  6A0C               	clrf	(btemp+11)^0,c
  6905  01ACD4  0E0F               	movlw	15
  6906  01ACD6  160B               	andwf	(btemp+10)^0,f,c
  6907  01ACD8  0100               	movlb	0	; () banked
  6908  01ACDA  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6909  01ACDC  180B               	xorwf	(btemp+10)^0,w,c
  6910  01ACDE  0BF0               	andlw	-16
  6911  01ACE0  180B               	xorwf	(btemp+10)^0,w,c
  6912  01ACE2  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;daq.c: 253:  R.max5322_cmd.map.cont = 0b0100;
  6916  01ACE4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6917  01ACE6  0B0F               	andlw	-241
  6918  01ACE8  0940               	iorlw	64
  6919  01ACEA  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6920                           
  6921                           ; BSR set to: 0
  6922  01ACEC  90BF               	bcf	191,0,c	;volatile
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6926  01ACEE  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6927  01ACF0  6EE6               	movwf	postinc1,c
  6928  01ACF2  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  6929                           
  6930                           ; BSR set to: 57
  6931                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6932  01ACF6  0100               	movlb	0	; () banked
  6933  01ACF8  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6934  01ACFA  6EE6               	movwf	postinc1,c
  6935  01ACFC  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  6936                           
  6937                           ; BSR set to: 57
  6938  01AD00  80BF               	bsf	191,0,c	;volatile
  6939                           
  6940                           ; BSR set to: 57
  6941                           ;daq.c: 258:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6942  01AD02  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6943                           
  6944                           ; BSR set to: 57
  6945                           ;daq.c: 259:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  6946  01AD06  EE20  F0D1         	lfsr	2,_R+34	;volatile
  6947  01AD0A  006F FF78  F00B    	movff	postinc2,btemp+10
  6948  01AD10  006F FF74  F00C    	movff	postdec2,btemp+11
  6949  01AD16  0060  F030  F00B   	movff	btemp+11,btemp+10
  6950  01AD1C  6A0C               	clrf	(btemp+11)^0,c
  6951  01AD1E  0E0F               	movlw	15
  6952  01AD20  160B               	andwf	(btemp+10)^0,f,c
  6953  01AD22  0100               	movlb	0	; () banked
  6954  01AD24  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6955  01AD26  180B               	xorwf	(btemp+10)^0,w,c
  6956  01AD28  0BF0               	andlw	-16
  6957  01AD2A  180B               	xorwf	(btemp+10)^0,w,c
  6958  01AD2C  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;daq.c: 260:  R.max5322_cmd.map.cont = 0b0101;
  6962  01AD2E  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6963  01AD30  0B0F               	andlw	-241
  6964  01AD32  0950               	iorlw	80
  6965  01AD34  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6966                           
  6967                           ; BSR set to: 0
  6968  01AD36  90BF               	bcf	191,0,c	;volatile
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6972  01AD38  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6973  01AD3A  6EE6               	movwf	postinc1,c
  6974  01AD3C  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  6975                           
  6976                           ; BSR set to: 57
  6977                           ;daq.c: 263:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6978  01AD40  0100               	movlb	0	; () banked
  6979  01AD42  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6980  01AD44  6EE6               	movwf	postinc1,c
  6981  01AD46  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  6982  01AD4A                     l1885:
  6983  01AD4A  013D               	movlb	61	; () banked
  6984  01AD4C  AB17               	btfss	23,5,b	;volatile
  6985  01AD4E  D7FD               	goto	l1885
  6986                           
  6987                           ; BSR set to: 61
  6988                           
  6989                           ;daq.c: 265:  do { LATFbits.LATF0 = 1; } while(0);
  6990  01AD50  80BF               	bsf	191,0,c	;volatile
  6991                           
  6992                           ; BSR set to: 61
  6993                           ;daq.c: 266:  dac_spi_control(0);
  6994  01AD52  0E00               	movlw	0
  6995  01AD54  6EE6               	movwf	postinc1,c
  6996  01AD56  ECCD  F0DA         	call	_dac_spi_control	;wreg free
  6997                           
  6998                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6999  01AD5A  0012               	return		;funcret
  7000  01AD5C                     __end_of_set_dac:
  7001                           	opt callstack 0
  7002                           
  7003 ;; *************** function _dac_spi_control *****************
  7004 ;; Defined at:
  7005 ;;		line 197 in file "daq.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  set             1  [STACK] _Bool 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1  [STACK] void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr1l, fsr1h, status,2
  7014 ;; Tracked objects:
  7015 ;;		On entry : 3F/3D
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:   15
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_set_dac
  7030 ;; This function uses a reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text8
  7034  01B59A                     __ptext8:
  7035                           	opt callstack 0
  7036  01B59A                     _dac_spi_control:
  7037                           	opt callstack 14
  7038                           
  7039                           ;daq.c: 197: void dac_spi_control(_Bool set);daq.c: 198: {;daq.c: 199:  static _Bool ini
      +                          t = 0;;daq.c: 200:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 202:  if (set) {
  7040                           ;stkvar	_set @ sp[(0)+-1]
  7041                           
  7042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7043                           ;incstack = 0
  7044  01B59A  0EFF               	movlw	-1
  7045  01B59C  50E3               	movf	plusw1,w,c
  7046  01B59E  B4D8               	btfsc	status,2,c
  7047  01B5A0  D022               	goto	l10939
  7048                           
  7049                           ;daq.c: 203:   SPI1CON0bits.EN = 0;
  7050  01B5A2  013D               	movlb	61	; () banked
  7051  01B5A4  9F14               	bcf	20,7,b	;volatile
  7052                           
  7053                           ; BSR set to: 61
  7054                           ;daq.c: 204:   if (!init) {
  7055  01B5A6  5043               	movf	dac_spi_control@init^0,w,c
  7056  01B5A8  A4D8               	btfss	status,2,c
  7057  01B5AA  D011               	goto	l10927
  7058                           
  7059                           ; BSR set to: 61
  7060                           ;daq.c: 205:    init = 1;
  7061  01B5AC  0E01               	movlw	1
  7062  01B5AE  6E43               	movwf	dac_spi_control@init^0,c
  7063                           
  7064                           ; BSR set to: 61
  7065                           ;daq.c: 206:    S0 = SPI1CON0;
  7066  01B5B0  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7067                           
  7068                           ; BSR set to: 61
  7069                           ;daq.c: 207:    S1 = SPI1CON1;
  7070  01B5B6  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7071                           
  7072                           ; BSR set to: 61
  7073                           ;daq.c: 208:    S2 = SPI1CON2;
  7074  01B5BC  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7075                           
  7076                           ; BSR set to: 61
  7077                           ;daq.c: 209:    SC = SPI1CLK;
  7078  01B5C2  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7079                           
  7080                           ; BSR set to: 61
  7081                           ;daq.c: 210:    SB = SPI1BAUD;
  7082  01B5C8  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7083  01B5CE                     l10927:
  7084                           
  7085                           ; BSR set to: 61
  7086                           ;daq.c: 216:   SPI1CON1 = 0x00;
  7087  01B5CE  6B15               	clrf	21,b	;volatile
  7088                           
  7089                           ; BSR set to: 61
  7090                           ;daq.c: 217:   SPI1CON1bits.CKE = 1;
  7091  01B5D0  8D15               	bsf	21,6,b	;volatile
  7092                           
  7093                           ; BSR set to: 61
  7094                           ;daq.c: 218:   SPI1CON1bits.CKP = 0;
  7095  01B5D2  9B15               	bcf	21,5,b	;volatile
  7096                           
  7097                           ; BSR set to: 61
  7098                           ;daq.c: 219:   SPI1CON1bits.SMP = 0;
  7099  01B5D4  9F15               	bcf	21,7,b	;volatile
  7100                           
  7101                           ;daq.c: 221:   SPI1CON2 = 0x03;
  7102  01B5D6  0E03               	movlw	3
  7103  01B5D8  6F16               	movwf	22,b	;volatile
  7104                           
  7105                           ;daq.c: 223:   SPI1BAUD = 0x0f;
  7106  01B5DA  0E0F               	movlw	15
  7107  01B5DC  6F19               	movwf	25,b	;volatile
  7108                           
  7109                           ; BSR set to: 61
  7110                           ;daq.c: 225:   SPI1CLK = 0x00;
  7111  01B5DE  6B1C               	clrf	28,b	;volatile
  7112                           
  7113                           ;daq.c: 227:   SPI1CON0 = 0x83;
  7114  01B5E0  0E83               	movlw	131
  7115  01B5E2  6F14               	movwf	20,b	;volatile
  7116  01B5E4  D014               	goto	L3
  7117  01B5E6                     l10939:
  7118                           
  7119                           ;daq.c: 230:   if (init) {
  7120  01B5E6  5043               	movf	dac_spi_control@init^0,w,c
  7121  01B5E8  B4D8               	btfsc	status,2,c
  7122  01B5EA  D012               	goto	l1869
  7123                           
  7124                           ;daq.c: 234:    SPI1CON0bits.EN = 0;
  7125  01B5EC  013D               	movlb	61	; () banked
  7126  01B5EE  9F14               	bcf	20,7,b	;volatile
  7127                           
  7128                           ;daq.c: 235:    SPI1CON1 = S1;
  7129  01B5F0  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7130                           
  7131                           ;daq.c: 236:    SPI1CON2 = S2;
  7132  01B5F6  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7133                           
  7134                           ;daq.c: 237:    SPI1CLK = SC;
  7135  01B5FC  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7136                           
  7137                           ;daq.c: 238:    SPI1BAUD = SB;
  7138  01B602  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7139                           
  7140                           ;daq.c: 239:    SPI1CON0 = S0;
  7141  01B608  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7142  01B60E                     L3:
  7143                           
  7144                           ;daq.c: 240:    SPI1CON0bits.EN = 1;
  7145  01B60E  8F14               	bsf	20,7,b	;volatile
  7146  01B610                     l1869:
  7147                           
  7148                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7149  01B610  52E5               	movf	postdec1,f,c
  7150  01B612  0012               	return		;funcret
  7151  01B614                     __end_of_dac_spi_control:
  7152                           	opt callstack 0
  7153                           
  7154 ;; *************** function _init_port_dma *****************
  7155 ;; Defined at:
  7156 ;;		line 104 in file "eadog.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1  [STACK] void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/1
  7167 ;;		On exit  : 3F/3B
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:   15
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_main
  7181 ;; This function uses a reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text9
  7185  01C2BC                     __ptext9:
  7186                           	opt callstack 0
  7187  01C2BC                     _init_port_dma:
  7188                           	opt callstack 15
  7189                           
  7190                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7191                           
  7192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7193                           ;incstack = 0
  7194  01C2BC  0E3F               	movlw	-193
  7195  01C2BE  013B               	movlb	59	; () banked
  7196  01C2C0  17DD               	andwf	221,f,b	;volatile
  7197                           
  7198                           ; BSR set to: 59
  7199                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7200  01C2C2  9BDD               	bcf	221,5,b	;volatile
  7201                           
  7202                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7203  01C2C4  51DD               	movf	221,w,b	;volatile
  7204  01C2C6  0BF9               	andlw	-7
  7205  01C2C8  0902               	iorlw	2
  7206  01C2CA  6FDD               	movwf	221,b	;volatile
  7207                           
  7208                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7209  01C2CC  0EE7               	movlw	-25
  7210  01C2CE  17DD               	andwf	221,f,b	;volatile
  7211                           
  7212                           ; BSR set to: 59
  7213                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7214  01C2D0  81DD               	bsf	221,0,b	;volatile
  7215                           
  7216                           ; BSR set to: 59
  7217                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7218  01C2D2  9DDC               	bcf	220,6,b	;volatile
  7219                           
  7220                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7221  01C2D4  0E3D               	movlw	61
  7222  01C2D6  6FD1               	movwf	209,b	;volatile
  7223  01C2D8  0EEA               	movlw	234
  7224  01C2DA  6FD0               	movwf	208,b	;volatile
  7225                           
  7226                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7227  01C2DC  0EFF               	movlw	low _port_data
  7228  01C2DE  6FD9               	movwf	217,b	;volatile
  7229  01C2E0  0E04               	movlw	high _port_data
  7230  01C2E2  6FDA               	movwf	218,b	;volatile
  7231  01C2E4  0E00               	movlw	low (_port_data shr (0+16))
  7232  01C2E6  6FDB               	movwf	219,b	;volatile
  7233                           
  7234                           ; BSR set to: 59
  7235                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7236  01C2E8  9BDC               	bcf	220,5,b	;volatile
  7237                           
  7238                           ; BSR set to: 59
  7239                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7240  01C2EA  0012               	return		;funcret
  7241  01C2EC                     __end_of_init_port_dma:
  7242                           	opt callstack 0
  7243                           
  7244 ;; *************** function _init_display *****************
  7245 ;; Defined at:
  7246 ;;		line 38 in file "eadog.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1  [STACK] void 
  7253 ;; Registers used:
  7254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7255 ;; Tracked objects:
  7256 ;;		On entry : 3F/3B
  7257 ;;		On exit  : 3F/3D
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7264 ;;Total ram usage:        0 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:   17
  7267 ;; This function calls:
  7268 ;;		_ringBufS_init
  7269 ;;		_send_lcd_cmd
  7270 ;;		_send_lcd_cmd_long
  7271 ;;		_send_lcd_data
  7272 ;;		_wdtdelay
  7273 ;; This function is called by:
  7274 ;;		_main
  7275 ;; This function uses a reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text10
  7279  01A558                     __ptext10:
  7280                           	opt callstack 0
  7281  01A558                     _init_display:
  7282                           	opt callstack 13
  7283                           
  7284                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7285                           
  7286                           ; BSR set to: 59
  7287                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7288                           ;incstack = 0
  7289  01A558  0E83               	movlw	low _ring_buf1
  7290  01A55A  0101               	movlb	1	; () banked
  7291  01A55C  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7292  01A55E  0E03               	movlw	high _ring_buf1
  7293  01A560  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7294                           
  7295                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7296  01A562  0E40               	movlw	low _ring_buf2
  7297  01A564  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7298  01A566  0E03               	movlw	high _ring_buf2
  7299  01A568  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7303  01A56A  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7304  01A570  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7305  01A576  EC2D  F0E2         	call	_ringBufS_init	;wreg free
  7306                           
  7307                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7308  01A57A  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7309  01A580  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7310  01A586  EC2D  F0E2         	call	_ringBufS_init	;wreg free
  7311                           
  7312                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7313  01A58A  84BE               	bsf	190,2,c	;volatile
  7314                           
  7315                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7316  01A58C  013D               	movlb	61	; () banked
  7317  01A58E  9F14               	bcf	20,7,b	;volatile
  7318                           
  7319                           ; BSR set to: 61
  7320                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7321  01A590  0E20               	movlw	32
  7322  01A592  6F15               	movwf	21,b	;volatile
  7323                           
  7324                           ; BSR set to: 61
  7325                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7326  01A594  0E03               	movlw	3
  7327  01A596  6F16               	movwf	22,b	;volatile
  7328                           
  7329                           ; BSR set to: 61
  7330                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7331  01A598  0E04               	movlw	4
  7332  01A59A  6F19               	movwf	25,b	;volatile
  7333                           
  7334                           ; BSR set to: 61
  7335                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7336  01A59C  0E02               	movlw	2
  7337  01A59E  6F1C               	movwf	28,b	;volatile
  7338                           
  7339                           ; BSR set to: 61
  7340                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7341  01A5A0  0E83               	movlw	131
  7342  01A5A2  6F14               	movwf	20,b	;volatile
  7343                           
  7344                           ; BSR set to: 61
  7345                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7346  01A5A4  8F14               	bsf	20,7,b	;volatile
  7347                           
  7348                           ; BSR set to: 61
  7349                           ;eadog.c: 60:  wdtdelay(350000);
  7350  01A5A6  0E30               	movlw	48
  7351  01A5A8  6EE6               	movwf	postinc1,c
  7352  01A5AA  0E57               	movlw	87
  7353  01A5AC  6EE6               	movwf	postinc1,c
  7354  01A5AE  0E05               	movlw	5
  7355  01A5B0  6EE6               	movwf	postinc1,c
  7356  01A5B2  0E00               	movlw	0
  7357  01A5B4  6EE6               	movwf	postinc1,c
  7358  01A5B6  EC76  F0DD         	call	_wdtdelay	;wreg free
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7362  01A5BA  0E46               	movlw	70
  7363  01A5BC  6EE6               	movwf	postinc1,c
  7364  01A5BE  ECAC  F0DF         	call	_send_lcd_cmd_long	;wreg free
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7368  01A5C2  0E41               	movlw	65
  7369  01A5C4  6EE6               	movwf	postinc1,c
  7370  01A5C6  ECCC  F0DF         	call	_send_lcd_cmd	;wreg free
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;eadog.c: 63:  wdtdelay(80);
  7374  01A5CA  0E50               	movlw	80
  7375  01A5CC  6EE6               	movwf	postinc1,c
  7376  01A5CE  0E00               	movlw	0
  7377  01A5D0  6EE6               	movwf	postinc1,c
  7378  01A5D2  0E00               	movlw	0
  7379  01A5D4  6EE6               	movwf	postinc1,c
  7380  01A5D6  0E00               	movlw	0
  7381  01A5D8  6EE6               	movwf	postinc1,c
  7382  01A5DA  EC76  F0DD         	call	_wdtdelay	;wreg free
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7386  01A5DE  0E53               	movlw	83
  7387  01A5E0  6EE6               	movwf	postinc1,c
  7388  01A5E2  ECCC  F0DF         	call	_send_lcd_cmd	;wreg free
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;eadog.c: 65:  send_lcd_data(2);
  7392  01A5E6  0E02               	movlw	2
  7393  01A5E8  6EE6               	movwf	postinc1,c
  7394  01A5EA  EC5A  F0E3         	call	_send_lcd_data	;wreg free
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;eadog.c: 66:  wdtdelay(80);
  7398  01A5EE  0E50               	movlw	80
  7399  01A5F0  6EE6               	movwf	postinc1,c
  7400  01A5F2  0E00               	movlw	0
  7401  01A5F4  6EE6               	movwf	postinc1,c
  7402  01A5F6  0E00               	movlw	0
  7403  01A5F8  6EE6               	movwf	postinc1,c
  7404  01A5FA  0E00               	movlw	0
  7405  01A5FC  6EE6               	movwf	postinc1,c
  7406  01A5FE  EC76  F0DD         	call	_wdtdelay	;wreg free
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7410  01A602  0E51               	movlw	81
  7411  01A604  6EE6               	movwf	postinc1,c
  7412  01A606  ECAC  F0DF         	call	_send_lcd_cmd_long	;wreg free
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7416  01A60A  013D               	movlb	61	; () banked
  7417  01A60C  9F14               	bcf	20,7,b	;volatile
  7418                           
  7419                           ; BSR set to: 61
  7420                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7421  01A60E  0E02               	movlw	2
  7422  01A610  6F16               	movwf	22,b	;volatile
  7423                           
  7424                           ; BSR set to: 61
  7425                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7426  01A612  8F14               	bsf	20,7,b	;volatile
  7427                           
  7428                           ; BSR set to: 61
  7429                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7430  01A614  931A               	bcf	26,1,b	;volatile
  7431                           
  7432                           ; BSR set to: 61
  7433                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7434  01A616  0E3F               	movlw	-193
  7435  01A618  013B               	movlb	59	; () banked
  7436  01A61A  17FD               	andwf	253,f,b	;volatile
  7437                           
  7438                           ; BSR set to: 59
  7439                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7440  01A61C  9BFD               	bcf	253,5,b	;volatile
  7441                           
  7442                           ; BSR set to: 59
  7443                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7444  01A61E  51FD               	movf	253,w,b	;volatile
  7445  01A620  0BF9               	andlw	-7
  7446  01A622  0902               	iorlw	2
  7447  01A624  6FFD               	movwf	253,b	;volatile
  7448                           
  7449                           ; BSR set to: 59
  7450                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7451  01A626  0EE7               	movlw	-25
  7452  01A628  17FD               	andwf	253,f,b	;volatile
  7453                           
  7454                           ; BSR set to: 59
  7455                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7456  01A62A  81FD               	bsf	253,0,b	;volatile
  7457                           
  7458                           ; BSR set to: 59
  7459                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7460  01A62C  0E83               	movlw	low _ring_buf1
  7461  01A62E  6FF9               	movwf	249,b	;volatile
  7462  01A630  0E03               	movlw	high _ring_buf1
  7463  01A632  6FFA               	movwf	250,b	;volatile
  7464  01A634  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7465  01A636  6FFB               	movwf	251,b	;volatile
  7466                           
  7467                           ; BSR set to: 59
  7468                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7469  01A638  9BFC               	bcf	252,5,b	;volatile
  7470                           
  7471                           ; BSR set to: 59
  7472                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7473  01A63A  013D               	movlb	61	; () banked
  7474  01A63C  831A               	bsf	26,1,b	;volatile
  7475                           
  7476                           ; BSR set to: 61
  7477                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7478  01A63E  94BE               	bcf	190,2,c	;volatile
  7479                           
  7480                           ; BSR set to: 61
  7481                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7482  01A640  0012               	return		;funcret
  7483  01A642                     __end_of_init_display:
  7484                           	opt callstack 0
  7485                           
  7486 ;; *************** function _send_lcd_data *****************
  7487 ;; Defined at:
  7488 ;;		line 123 in file "eadog.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  data            1  [STACK] const unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1  [STACK] void 
  7495 ;; Registers used:
  7496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7497 ;; Tracked objects:
  7498 ;;		On entry : 3F/0
  7499 ;;		On exit  : 3F/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7506 ;;Total ram usage:        0 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:   16
  7509 ;; This function calls:
  7510 ;;		_SPI1_Exchange8bit
  7511 ;;		_wdtdelay
  7512 ;; This function is called by:
  7513 ;;		_init_display
  7514 ;; This function uses a reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text11
  7518  01C6B4                     __ptext11:
  7519                           	opt callstack 0
  7520  01C6B4                     _send_lcd_data:
  7521                           	opt callstack 13
  7522                           
  7523                           ; BSR set to: 61
  7524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7525                           ;incstack = 0
  7526                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7527  01C6B4  94BC               	bcf	188,2,c	;volatile
  7528                           
  7529                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7530                           ;stkvar	_data @ sp[(0)+-1]
  7531  01C6B6  0EFF               	movlw	-1
  7532  01C6B8  50E3               	movf	plusw1,w,c
  7533  01C6BA  6EE6               	movwf	postinc1,c
  7534  01C6BC  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7535                           
  7536                           ; BSR set to: 57
  7537                           ;eadog.c: 127:  wdtdelay(8);
  7538  01C6C0  0E08               	movlw	8
  7539  01C6C2  6EE6               	movwf	postinc1,c
  7540  01C6C4  0E00               	movlw	0
  7541  01C6C6  6EE6               	movwf	postinc1,c
  7542  01C6C8  0E00               	movlw	0
  7543  01C6CA  6EE6               	movwf	postinc1,c
  7544  01C6CC  0E00               	movlw	0
  7545  01C6CE  6EE6               	movwf	postinc1,c
  7546  01C6D0  EC76  F0DD         	call	_wdtdelay	;wreg free
  7547                           
  7548                           ; BSR set to: 0
  7549                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7550  01C6D4  52E5               	movf	postdec1,f,c
  7551  01C6D6  0012               	return		;funcret
  7552  01C6D8                     __end_of_send_lcd_data:
  7553                           	opt callstack 0
  7554                           
  7555 ;; *************** function _send_lcd_cmd_long *****************
  7556 ;; Defined at:
  7557 ;;		line 139 in file "eadog.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  cmd             1  [STACK] const unsigned char 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1  [STACK] void 
  7564 ;; Registers used:
  7565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7566 ;; Tracked objects:
  7567 ;;		On entry : 3F/0
  7568 ;;		On exit  : 3F/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;Total ram usage:        0 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:   16
  7578 ;; This function calls:
  7579 ;;		_SPI1_Exchange8bit
  7580 ;;		_wdtdelay
  7581 ;; This function is called by:
  7582 ;;		_init_display
  7583 ;; This function uses a reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text12
  7587  01BF58                     __ptext12:
  7588                           	opt callstack 0
  7589  01BF58                     _send_lcd_cmd_long:
  7590                           	opt callstack 13
  7591                           
  7592                           ; BSR set to: 0
  7593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7594                           ;incstack = 0
  7595                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7596  01BF58  94BC               	bcf	188,2,c	;volatile
  7597                           
  7598                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7599  01BF5A  0EFE               	movlw	254
  7600  01BF5C  6EE6               	movwf	postinc1,c
  7601  01BF5E  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7602                           
  7603                           ; BSR set to: 57
  7604                           ;eadog.c: 143:  wdtdelay(8);
  7605  01BF62  0E08               	movlw	8
  7606  01BF64  6EE6               	movwf	postinc1,c
  7607  01BF66  0E00               	movlw	0
  7608  01BF68  6EE6               	movwf	postinc1,c
  7609  01BF6A  0E00               	movlw	0
  7610  01BF6C  6EE6               	movwf	postinc1,c
  7611  01BF6E  0E00               	movlw	0
  7612  01BF70  6EE6               	movwf	postinc1,c
  7613  01BF72  EC76  F0DD         	call	_wdtdelay	;wreg free
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7617                           ;stkvar	_cmd @ sp[(0)+-1]
  7618  01BF76  0EFF               	movlw	-1
  7619  01BF78  50E3               	movf	plusw1,w,c
  7620  01BF7A  6EE6               	movwf	postinc1,c
  7621  01BF7C  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7622                           
  7623                           ;eadog.c: 145:  wdtdelay(800);
  7624  01BF80  0E20               	movlw	32
  7625  01BF82  6EE6               	movwf	postinc1,c
  7626  01BF84  0E03               	movlw	3
  7627  01BF86  6EE6               	movwf	postinc1,c
  7628  01BF88  0E00               	movlw	0
  7629  01BF8A  6EE6               	movwf	postinc1,c
  7630  01BF8C  0E00               	movlw	0
  7631  01BF8E  6EE6               	movwf	postinc1,c
  7632  01BF90  EC76  F0DD         	call	_wdtdelay	;wreg free
  7633                           
  7634                           ; BSR set to: 0
  7635                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7636  01BF94  52E5               	movf	postdec1,f,c
  7637  01BF96  0012               	return		;funcret
  7638  01BF98                     __end_of_send_lcd_cmd_long:
  7639                           	opt callstack 0
  7640                           
  7641 ;; *************** function _send_lcd_cmd *****************
  7642 ;; Defined at:
  7643 ;;		line 130 in file "eadog.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  cmd             1  [STACK] const unsigned char 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1  [STACK] void 
  7650 ;; Registers used:
  7651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7652 ;; Tracked objects:
  7653 ;;		On entry : 3F/0
  7654 ;;		On exit  : 3F/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:   16
  7664 ;; This function calls:
  7665 ;;		_SPI1_Exchange8bit
  7666 ;;		_wdtdelay
  7667 ;; This function is called by:
  7668 ;;		_init_display
  7669 ;; This function uses a reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text13
  7673  01BF98                     __ptext13:
  7674                           	opt callstack 0
  7675  01BF98                     _send_lcd_cmd:
  7676                           	opt callstack 13
  7677                           
  7678                           ; BSR set to: 0
  7679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7680                           ;incstack = 0
  7681                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7682  01BF98  94BC               	bcf	188,2,c	;volatile
  7683                           
  7684                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7685  01BF9A  0EFE               	movlw	254
  7686  01BF9C  6EE6               	movwf	postinc1,c
  7687  01BF9E  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7688                           
  7689                           ; BSR set to: 57
  7690                           ;eadog.c: 134:  wdtdelay(8);
  7691  01BFA2  0E08               	movlw	8
  7692  01BFA4  6EE6               	movwf	postinc1,c
  7693  01BFA6  0E00               	movlw	0
  7694  01BFA8  6EE6               	movwf	postinc1,c
  7695  01BFAA  0E00               	movlw	0
  7696  01BFAC  6EE6               	movwf	postinc1,c
  7697  01BFAE  0E00               	movlw	0
  7698  01BFB0  6EE6               	movwf	postinc1,c
  7699  01BFB2  EC76  F0DD         	call	_wdtdelay	;wreg free
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7703                           ;stkvar	_cmd @ sp[(0)+-1]
  7704  01BFB6  0EFF               	movlw	-1
  7705  01BFB8  50E3               	movf	plusw1,w,c
  7706  01BFBA  6EE6               	movwf	postinc1,c
  7707  01BFBC  EC19  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7708                           
  7709                           ;eadog.c: 136:  wdtdelay(8);
  7710  01BFC0  0E08               	movlw	8
  7711  01BFC2  6EE6               	movwf	postinc1,c
  7712  01BFC4  0E00               	movlw	0
  7713  01BFC6  6EE6               	movwf	postinc1,c
  7714  01BFC8  0E00               	movlw	0
  7715  01BFCA  6EE6               	movwf	postinc1,c
  7716  01BFCC  0E00               	movlw	0
  7717  01BFCE  6EE6               	movwf	postinc1,c
  7718  01BFD0  EC76  F0DD         	call	_wdtdelay	;wreg free
  7719                           
  7720                           ; BSR set to: 0
  7721                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7722  01BFD4  52E5               	movf	postdec1,f,c
  7723  01BFD6  0012               	return		;funcret
  7724  01BFD8                     __end_of_send_lcd_cmd:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _SPI1_Exchange8bit *****************
  7728 ;; Defined at:
  7729 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  data            1  [STACK] unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1  [STACK] unsigned char 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 3F/39
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   15
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_send_lcd_data
  7754 ;;		_send_lcd_cmd
  7755 ;;		_send_lcd_cmd_long
  7756 ;;		_set_dac
  7757 ;; This function uses a reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text14
  7761  01C832                     __ptext14:
  7762                           	opt callstack 0
  7763  01C832                     _SPI1_Exchange8bit:
  7764                           	opt callstack 14
  7765                           
  7766                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7767                           
  7768                           ; BSR set to: 0
  7769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7770                           ;incstack = 0
  7771  01C832  0E01               	movlw	1
  7772  01C834  013D               	movlb	61	; () banked
  7773  01C836  6F12               	movwf	18,b	;volatile
  7774                           
  7775                           ; BSR set to: 61
  7776                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7777                           ;stkvar	_data @ sp[(0)+-1]
  7778  01C838  0EFF               	movlw	-1
  7779  01C83A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7780  01C840                     l807:
  7781                           
  7782                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7783  01C840  0139               	movlb	57	; () banked
  7784  01C842  A9A2               	btfss	162,4,b	;volatile
  7785  01C844  D7FD               	goto	l807
  7786                           
  7787                           ; BSR set to: 57
  7788                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7789  01C846  006F F440  F001    	movff	15632,btemp	;volatile
  7790                           
  7791                           ; BSR set to: 57
  7792                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7793  01C84C  52E5               	movf	postdec1,f,c
  7794  01C84E  0012               	return		;funcret
  7795  01C850                     __end_of_SPI1_Exchange8bit:
  7796                           	opt callstack 0
  7797                           
  7798 ;; *************** function _ringBufS_init *****************
  7799 ;; Defined at:
  7800 ;;		line 22 in file "ringbufs.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  _this           2  [STACK] PTR volatile struct ring
  7803 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1  [STACK] void 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/1
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:   16
  7822 ;; This function calls:
  7823 ;;		_memset
  7824 ;; This function is called by:
  7825 ;;		_init_display
  7826 ;; This function uses a reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text15
  7830  01C45A                     __ptext15:
  7831                           	opt callstack 0
  7832  01C45A                     _ringBufS_init:
  7833                           	opt callstack 13
  7834                           
  7835                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7836                           
  7837                           ; BSR set to: 57
  7838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7839                           ;incstack = 0
  7840  01C45A  0E43               	movlw	67
  7841  01C45C  6EE6               	movwf	postinc1,c
  7842  01C45E  0E00               	movlw	0
  7843  01C460  6EE6               	movwf	postinc1,c
  7844  01C462  0E00               	movlw	0
  7845  01C464  6EE6               	movwf	postinc1,c
  7846  01C466  0E00               	movlw	0
  7847  01C468  6EE6               	movwf	postinc1,c
  7848                           
  7849                           ;stkvar	__this @ sp[(-4)+-2]
  7850  01C46A  0EFA               	movlw	-6
  7851  01C46C  006F FF8F FFE6     	movff	plusw1,postinc1
  7852  01C472  006F FF8F FFE6     	movff	plusw1,postinc1
  7853  01C478  EC5D  F0B7         	call	_memset	;wreg free
  7854                           
  7855                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7856  01C47C  52E5               	movf	postdec1,f,c
  7857  01C47E  52E5               	movf	postdec1,f,c
  7858  01C480  0012               	return		;funcret
  7859  01C482                     __end_of_ringBufS_init:
  7860                           	opt callstack 0
  7861                           
  7862 ;; *************** function _init_bsoc *****************
  7863 ;; Defined at:
  7864 ;;		line 110 in file "bsoc.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1  [STACK] void 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:   18
  7885 ;; This function calls:
  7886 ;;		_TMR3_SetInterruptHandler
  7887 ;;		_Volts_to_SOC
  7888 ;;		___fldiv
  7889 ;;		___flmul
  7890 ;;		___fltol
  7891 ;;		___xxtofl
  7892 ;;		_conv_raw_result
  7893 ;; This function is called by:
  7894 ;;		_main
  7895 ;; This function uses a reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text16
  7899  017EA2                     __ptext16:
  7900                           	opt callstack 0
  7901  017EA2                     _init_bsoc:
  7902                           	opt callstack 12
  7903                           
  7904                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7905                           
  7906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7907                           ;incstack = 0
  7908  017EA2  0E00               	movlw	0
  7909  017EA4  6EE6               	movwf	postinc1,c
  7910  017EA6  0E00               	movlw	0
  7911  017EA8  6EE6               	movwf	postinc1,c
  7912  017EAA  0E7A               	movlw	122
  7913  017EAC  6EE6               	movwf	postinc1,c
  7914  017EAE  0E44               	movlw	68
  7915  017EB0  6EE6               	movwf	postinc1,c
  7916  017EB2  0E00               	movlw	0
  7917  017EB4  6EE6               	movwf	postinc1,c
  7918  017EB6  0E04               	movlw	4
  7919  017EB8  6EE6               	movwf	postinc1,c
  7920  017EBA  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  7921  017EBE  0060  F007  FFE6   	movff	btemp,postinc1
  7922  017EC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7923  017ECA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7924  017ED0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7925  017ED6  ECB9  F0C9         	call	___fltol	;wreg free
  7926  017EDA  0060  F007  FFE6   	movff	btemp,postinc1
  7927  017EE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7928  017EE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7929  017EEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7930  017EF2  0E00               	movlw	0
  7931  017EF4  6EE6               	movwf	postinc1,c
  7932  017EF6  ECBB  F0C4         	call	___xxtofl	;wreg free
  7933  017EFA  0060  F007  FFE6   	movff	btemp,postinc1
  7934  017F00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7935  017F06  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7936  017F0C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7937  017F12  EC20  F09F         	call	___flmul	;wreg free
  7938  017F16  0060  F007  FFE6   	movff	btemp,postinc1
  7939  017F1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7940  017F22  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7941  017F28  0060  F013  FFE6   	movff	btemp+3,postinc1
  7942  017F2E  ECB9  F0C9         	call	___fltol	;wreg free
  7943  017F32  0060  F007  FFE6   	movff	btemp,postinc1
  7944  017F38  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7945  017F3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7946  017F44  0060  F013  FFE6   	movff	btemp+3,postinc1
  7947  017F4A  EC9A  F0D5         	call	_Volts_to_SOC	;wreg free
  7948  017F4E  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7949  017F54  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7950                           
  7951                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7952  017F5A  EE21  F38B         	lfsr	2,_C+140	;volatile
  7953  017F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  7954  017F64  006F FF7B FFE6     	movff	postinc2,postinc1
  7955  017F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  7956  017F70  006F FF7B FFE6     	movff	postinc2,postinc1
  7957  017F76  0E00               	movlw	0
  7958  017F78  6EE6               	movwf	postinc1,c
  7959  017F7A  0E00               	movlw	0
  7960  017F7C  6EE6               	movwf	postinc1,c
  7961  017F7E  0EC8               	movlw	200
  7962  017F80  6EE6               	movwf	postinc1,c
  7963  017F82  0E42               	movlw	66
  7964  017F84  6EE6               	movwf	postinc1,c
  7965  017F86  0E00               	movlw	0
  7966  017F88  6EE6               	movwf	postinc1,c
  7967  017F8A  0E00               	movlw	0
  7968  017F8C  6EE6               	movwf	postinc1,c
  7969  017F8E  0E7A               	movlw	122
  7970  017F90  6EE6               	movwf	postinc1,c
  7971  017F92  0E44               	movlw	68
  7972  017F94  6EE6               	movwf	postinc1,c
  7973  017F96  0E00               	movlw	0
  7974  017F98  6EE6               	movwf	postinc1,c
  7975  017F9A  0E04               	movlw	4
  7976  017F9C  6EE6               	movwf	postinc1,c
  7977  017F9E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  7978  017FA2  0060  F007  FFE6   	movff	btemp,postinc1
  7979  017FA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7980  017FAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7981  017FB4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7982  017FBA  ECB9  F0C9         	call	___fltol	;wreg free
  7983  017FBE  0060  F007  FFE6   	movff	btemp,postinc1
  7984  017FC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7985  017FCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7986  017FD0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7987  017FD6  0E00               	movlw	0
  7988  017FD8  6EE6               	movwf	postinc1,c
  7989  017FDA  ECBB  F0C4         	call	___xxtofl	;wreg free
  7990  017FDE  0060  F007  FFE6   	movff	btemp,postinc1
  7991  017FE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7992  017FEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7993  017FF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7994  017FF6  EC20  F09F         	call	___flmul	;wreg free
  7995  017FFA  0060  F007  FFE6   	movff	btemp,postinc1
  7996  018000  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7997  018006  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7998  01800C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7999  018012  ECB9  F0C9         	call	___fltol	;wreg free
  8000  018016  0060  F007  FFE6   	movff	btemp,postinc1
  8001  01801C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8002  018022  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8003  018028  0060  F013  FFE6   	movff	btemp+3,postinc1
  8004  01802E  EC9A  F0D5         	call	_Volts_to_SOC	;wreg free
  8005  018032  0060  F004  F00B   	movff	btemp,btemp+10
  8006  018038  0060  F008  F00C   	movff	btemp+1,btemp+11
  8007  01803E  500B               	movf	(btemp+10)^0,w,c
  8008  018040  6E05               	movwf	(btemp+4)^0,c
  8009  018042  500C               	movf	(btemp+11)^0,w,c
  8010  018044  6E06               	movwf	(btemp+5)^0,c
  8011  018046  6A07               	clrf	(btemp+6)^0,c
  8012  018048  6A08               	clrf	(btemp+7)^0,c
  8013  01804A  0060  F017  FFE6   	movff	btemp+4,postinc1
  8014  018050  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8015  018056  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8016  01805C  0060  F023  FFE6   	movff	btemp+7,postinc1
  8017  018062  0E00               	movlw	0
  8018  018064  6EE6               	movwf	postinc1,c
  8019  018066  ECBB  F0C4         	call	___xxtofl	;wreg free
  8020  01806A  0060  F007  FFE6   	movff	btemp,postinc1
  8021  018070  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8022  018076  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8023  01807C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8024  018082  EC13  F0A7         	call	___fldiv	;wreg free
  8025  018086  0060  F007  FFE6   	movff	btemp,postinc1
  8026  01808C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8027  018092  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8028  018098  0060  F013  FFE6   	movff	btemp+3,postinc1
  8029  01809E  EC20  F09F         	call	___flmul	;wreg free
  8030  0180A2  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  8031  0180A8  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  8032  0180AE  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  8033  0180B4  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  8034                           
  8035                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8036  0180BA  EE21  F38F         	lfsr	2,_C+144	;volatile
  8037  0180BE  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8038  0180C4  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8039  0180CA  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8040  0180D0  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8041                           
  8042                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8043  0180D6  0ED2               	movlw	low _calc_bsoc
  8044  0180D8  6EE6               	movwf	postinc1,c
  8045  0180DA  0E33               	movlw	high _calc_bsoc
  8046  0180DC  6EE6               	movwf	postinc1,c
  8047  0180DE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8048  0180E0  6EE6               	movwf	postinc1,c
  8049  0180E2  ECB9  F0E2         	call	_TMR3_SetInterruptHandler	;wreg free
  8050                           
  8051                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8052  0180E6  0012               	return		;funcret
  8053  0180E8                     __end_of_init_bsoc:
  8054                           	opt callstack 0
  8055                           
  8056 ;; *************** function _Volts_to_SOC *****************
  8057 ;; Defined at:
  8058 ;;		line 175 in file "bsoc.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  cvoltage        4  [STACK] const unsigned long 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  soc             2  [STACK] unsigned short 
  8063 ;;  slot            1  [STACK] unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  2  [STACK] unsigned short 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8077 ;;Total ram usage:        0 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:   15
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_init_bsoc
  8084 ;; This function uses a reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text17
  8088  01AB34                     __ptext17:
  8089                           	opt callstack 0
  8090  01AB34                     _Volts_to_SOC:
  8091                           	opt callstack 0
  8092                           
  8093                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8094  01AB34  52E6               	movf	postinc1,f,c
  8095  01AB36  52E6               	movf	postinc1,f,c
  8096  01AB38  52E6               	movf	postinc1,f,c
  8097                           
  8098                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8099                           ;stkvar	_soc @ sp[(-3)+0]
  8100                           
  8101                           ;incstack = 0
  8102  01AB3A  0EFD               	movlw	-3
  8103  01AB3C  6AE3               	clrf	plusw1,c
  8104  01AB3E  0EFE               	movlw	-2
  8105  01AB40  6AE3               	clrf	plusw1,c
  8106                           
  8107                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8108                           ;stkvar	_slot @ sp[(-3)+2]
  8109  01AB42  0EFF               	movlw	-1
  8110  01AB44  6AE3               	clrf	plusw1,c
  8111  01AB46                     l11115:
  8112                           
  8113                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8114                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8115                           ;stkvar	_slot @ sp[(-3)+2]
  8116  01AB46  0EFF               	movlw	-1
  8117  01AB48  50E3               	movf	plusw1,w,c
  8118  01AB4A  0D08               	mullw	8
  8119  01AB4C  0E4D               	movlw	low _BVSOC_TABLE
  8120  01AB4E  24F3               	addwf	243,w,c
  8121  01AB50  6EF6               	movwf	tblptrl,c
  8122  01AB52  0EF9               	movlw	high _BVSOC_TABLE
  8123  01AB54  20F4               	addwfc	244,w,c
  8124  01AB56  6EF7               	movwf	tblptrh,c
  8125  01AB58                     	if	1	;There are 3 active tblptr bytes
  8126  01AB58  6AF8               	clrf	tblptru,c
  8127  01AB5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8128  01AB5C  22F8               	addwfc	tblptru,f,c
  8129  01AB5E                     	endif
  8130  01AB5E  0EF9               	movlw	-7
  8131  01AB60  50E3               	movf	plusw1,w,c
  8132  01AB62  0009               	tblrd		*+
  8133  01AB64  5CF5               	subwf	tablat,w,c
  8134  01AB66  0EFA               	movlw	-6
  8135  01AB68  50E3               	movf	plusw1,w,c
  8136  01AB6A  0009               	tblrd		*+
  8137  01AB6C  58F5               	subwfb	tablat,w,c
  8138  01AB6E  0EFB               	movlw	-5
  8139  01AB70  50E3               	movf	plusw1,w,c
  8140  01AB72  0009               	tblrd		*+
  8141  01AB74  58F5               	subwfb	tablat,w,c
  8142  01AB76  0EFC               	movlw	-4
  8143  01AB78  50E3               	movf	plusw1,w,c
  8144  01AB7A  0009               	tblrd		*+
  8145  01AB7C  58F5               	subwfb	tablat,w,c
  8146  01AB7E  B0D8               	btfsc	status,0,c
  8147  01AB80  D020               	goto	l11119
  8148                           
  8149                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8150                           ;stkvar	_slot @ sp[(-3)+2]
  8151  01AB82  0EFF               	movlw	-1
  8152  01AB84  50E3               	movf	plusw1,w,c
  8153  01AB86  0D08               	mullw	8
  8154  01AB88  0E04               	movlw	4
  8155  01AB8A  26F3               	addwf	243,f,c
  8156  01AB8C  0E00               	movlw	0
  8157  01AB8E  22F4               	addwfc	244,f,c
  8158  01AB90  0E4D               	movlw	low _BVSOC_TABLE
  8159  01AB92  24F3               	addwf	243,w,c
  8160  01AB94  6EF6               	movwf	tblptrl,c
  8161  01AB96  0EF9               	movlw	high _BVSOC_TABLE
  8162  01AB98  20F4               	addwfc	244,w,c
  8163  01AB9A  6EF7               	movwf	tblptrh,c
  8164  01AB9C                     	if	1	;There are 3 active tblptr bytes
  8165  01AB9C  6AF8               	clrf	tblptru,c
  8166  01AB9E  0E00               	movlw	low (__mediumconst shr (0+16))
  8167  01ABA0  22F8               	addwfc	tblptru,f,c
  8168  01ABA2                     	endif
  8169  01ABA2  0009               	tblrd		*+
  8170  01ABA4  006F FFD4  F00B    	movff	tablat,btemp+10
  8171  01ABAA  0009               	tblrd		*+
  8172  01ABAC  006F FFD4  F00C    	movff	tablat,btemp+11
  8173                           
  8174                           ;stkvar	_soc @ sp[(-3)+0]
  8175  01ABB2  0EFD               	movlw	-3
  8176  01ABB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8177  01ABBA  0EFE               	movlw	-2
  8178  01ABBC  0060  F033  FFE3   	movff	btemp+11,plusw1
  8179  01ABC2                     l11119:
  8180                           
  8181                           ;bsoc.c: 187:  }
  8182                           ;stkvar	_slot @ sp[(-3)+2]
  8183  01ABC2  0EFF               	movlw	-1
  8184  01ABC4  2AE3               	incf	plusw1,f,c
  8185                           
  8186                           ;stkvar	_slot @ sp[(-3)+2]
  8187  01ABC6  0EFF               	movlw	-1
  8188  01ABC8  006F FF8C  F001    	movff	plusw1,btemp
  8189  01ABCE  0E19               	movlw	25
  8190  01ABD0  6401               	cpfsgt	btemp^0,c
  8191  01ABD2  D7B9               	goto	l11115
  8192                           
  8193                           ;bsoc.c: 188:  return soc;
  8194                           ;stkvar	_soc @ sp[(-3)+0]
  8195  01ABD4  0EFD               	movlw	-3
  8196  01ABD6  006F FF8C  F001    	movff	plusw1,btemp
  8197  01ABDC  0EFE               	movlw	-2
  8198  01ABDE  006F FF8C  F002    	movff	plusw1,btemp+1
  8199                           
  8200                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8201  01ABE4  0EF9               	movlw	249
  8202  01ABE6  26E1               	addwf	fsr1l,f,c
  8203  01ABE8  0EFF               	movlw	255
  8204  01ABEA  22E2               	addwfc	fsr1h,f,c
  8205  01ABEC  0012               	return		;funcret
  8206  01ABEE                     __end_of_Volts_to_SOC:
  8207                           	opt callstack 0
  8208                           
  8209 ;; *************** function _hid_display *****************
  8210 ;; Defined at:
  8211 ;;		line 22 in file "hid.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  h               2  [STACK] PTR struct H_data
  8214 ;;		 -> H(9), 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2  [STACK] PTR struct H_data
  8219 ;; Registers used:
  8220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8221 ;; Tracked objects:
  8222 ;;		On entry : 3F/39
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:   17
  8233 ;; This function calls:
  8234 ;;		_hid_input
  8235 ;; This function is called by:
  8236 ;;		_main
  8237 ;; This function uses a reentrant model
  8238 ;;
  8239                           
  8240                           	psect	text18
  8241  018548                     __ptext18:
  8242                           	opt callstack 0
  8243  018548                     _hid_display:
  8244                           	opt callstack 13
  8245                           
  8246                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8247                           ;stkvar	_h @ sp[(0)+-2]
  8248                           
  8249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8250                           ;incstack = 0
  8251  018548  0EFE               	movlw	-2
  8252  01854A  006F FF8F FFE6     	movff	plusw1,postinc1
  8253  018550  006F FF8F FFE6     	movff	plusw1,postinc1
  8254  018556  ECBD  F0CD         	call	_hid_input	;wreg free
  8255                           
  8256                           ;hid.c: 26:  switch (h->h_state) {
  8257  01855A  D0E6               	goto	l13609
  8258  01855C                     l13583:
  8259                           
  8260                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8261                           ;stkvar	_h @ sp[(0)+-2]
  8262  01855C  0EFE               	movlw	-2
  8263  01855E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8264  018564  0EFF               	movlw	-1
  8265  018566  006F FF8C  F00C    	movff	plusw1,btemp+11
  8266  01856C  0E01               	movlw	1
  8267  01856E  240B               	addwf	(btemp+10)^0,w,c
  8268  018570  6ED9               	movwf	fsr2l,c
  8269  018572  0E00               	movlw	0
  8270  018574  200C               	addwfc	(btemp+11)^0,w,c
  8271  018576  6EDA               	movwf	fsr2h,c
  8272  018578  0E01               	movlw	1
  8273  01857A  6EDF               	movwf	indf2,c
  8274                           
  8275                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8276                           ;stkvar	_h @ sp[(0)+-2]
  8277  01857C  0EFE               	movlw	-2
  8278  01857E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8279  018584  0EFF               	movlw	-1
  8280  018586  006F FF8F FFDA     	movff	plusw1,fsr2h
  8281  01858C  0E00               	movlw	0
  8282  01858E  6EDF               	movwf	indf2,c
  8283                           
  8284                           ;hid.c: 30:   h->wait_enter = 1;
  8285                           ;stkvar	_h @ sp[(0)+-2]
  8286  018590  0EFE               	movlw	-2
  8287  018592  006F FF8C  F00B    	movff	plusw1,btemp+10
  8288  018598  0EFF               	movlw	-1
  8289  01859A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8290  0185A0  0E04               	movlw	4
  8291  0185A2  240B               	addwf	(btemp+10)^0,w,c
  8292  0185A4  6ED9               	movwf	fsr2l,c
  8293  0185A6  0E00               	movlw	0
  8294  0185A8  200C               	addwfc	(btemp+11)^0,w,c
  8295  0185AA  6EDA               	movwf	fsr2h,c
  8296  0185AC  0E01               	movlw	1
  8297  0185AE  6EDF               	movwf	indf2,c
  8298                           
  8299                           ;hid.c: 31:   h->wait_select = 1;
  8300                           ;stkvar	_h @ sp[(0)+-2]
  8301  0185B0  0EFE               	movlw	-2
  8302  0185B2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8303  0185B8  0EFF               	movlw	-1
  8304  0185BA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8305  0185C0  0E02               	movlw	2
  8306  0185C2  240B               	addwf	(btemp+10)^0,w,c
  8307  0185C4  6ED9               	movwf	fsr2l,c
  8308  0185C6  0E00               	movlw	0
  8309  0185C8  200C               	addwfc	(btemp+11)^0,w,c
  8310  0185CA  6EDA               	movwf	fsr2h,c
  8311  0185CC  0E01               	movlw	1
  8312  0185CE  6EDF               	movwf	indf2,c
  8313                           
  8314                           ;hid.c: 32:   h->wait_calib = 1;
  8315                           ;stkvar	_h @ sp[(0)+-2]
  8316  0185D0  0EFE               	movlw	-2
  8317  0185D2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8318  0185D8  0EFF               	movlw	-1
  8319  0185DA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8320  0185E0  0E06               	movlw	6
  8321  0185E2  240B               	addwf	(btemp+10)^0,w,c
  8322  0185E4  6ED9               	movwf	fsr2l,c
  8323  0185E6  0E00               	movlw	0
  8324  0185E8  200C               	addwfc	(btemp+11)^0,w,c
  8325  0185EA  6EDA               	movwf	fsr2h,c
  8326  0185EC  0E01               	movlw	1
  8327  0185EE  6EDF               	movwf	indf2,c
  8328                           
  8329                           ;hid.c: 33:   h->select_p = SW_OFF;
  8330                           ;stkvar	_h @ sp[(0)+-2]
  8331  0185F0  0EFE               	movlw	-2
  8332  0185F2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8333  0185F8  0EFF               	movlw	-1
  8334  0185FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8335  018600  0E03               	movlw	3
  8336  018602  240B               	addwf	(btemp+10)^0,w,c
  8337  018604  6ED9               	movwf	fsr2l,c
  8338  018606  0E00               	movlw	0
  8339  018608  200C               	addwfc	(btemp+11)^0,w,c
  8340  01860A  6EDA               	movwf	fsr2h,c
  8341  01860C  0E00               	movlw	0
  8342  01860E  6EDF               	movwf	indf2,c
  8343                           
  8344                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8345                           ;stkvar	_h @ sp[(0)+-2]
  8346  018610  0EFE               	movlw	-2
  8347  018612  006F FF8C  F00B    	movff	plusw1,btemp+10
  8348  018618  0EFF               	movlw	-1
  8349  01861A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8350  018620  0E05               	movlw	5
  8351  018622  240B               	addwf	(btemp+10)^0,w,c
  8352  018624  6ED9               	movwf	fsr2l,c
  8353  018626  0E00               	movlw	0
  8354  018628  200C               	addwfc	(btemp+11)^0,w,c
  8355  01862A  6EDA               	movwf	fsr2h,c
  8356  01862C  0E00               	movlw	0
  8357  01862E  6EDF               	movwf	indf2,c
  8358                           
  8359                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8360                           ;stkvar	_h @ sp[(0)+-2]
  8361  018630  0EFE               	movlw	-2
  8362  018632  006F FF8C  F00B    	movff	plusw1,btemp+10
  8363  018638  0EFF               	movlw	-1
  8364  01863A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8365  018640  0E07               	movlw	7
  8366  018642  240B               	addwf	(btemp+10)^0,w,c
  8367  018644  6ED9               	movwf	fsr2l,c
  8368  018646  0E00               	movlw	0
  8369  018648  200C               	addwfc	(btemp+11)^0,w,c
  8370  01864A  6EDA               	movwf	fsr2h,c
  8371  01864C  0E00               	movlw	0
  8372  01864E  D06A               	goto	L4
  8373  018650                     l13599:
  8374                           
  8375                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8376                           ;stkvar	_h @ sp[(0)+-2]
  8377  018650  0EFE               	movlw	-2
  8378  018652  006F FF8C  F00B    	movff	plusw1,btemp+10
  8379  018658  0EFF               	movlw	-1
  8380  01865A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8381  018660  0E02               	movlw	2
  8382  018662  240B               	addwf	(btemp+10)^0,w,c
  8383  018664  6ED9               	movwf	fsr2l,c
  8384  018666  0E00               	movlw	0
  8385  018668  200C               	addwfc	(btemp+11)^0,w,c
  8386  01866A  6EDA               	movwf	fsr2h,c
  8387  01866C  50DF               	movf	indf2,w,c
  8388  01866E  A4D8               	btfss	status,2,c
  8389  018670  D076               	goto	l2084
  8390                           
  8391                           ;stkvar	_h @ sp[(0)+-2]
  8392  018672  0EFE               	movlw	-2
  8393  018674  006F FF8C  F00B    	movff	plusw1,btemp+10
  8394  01867A  0EFF               	movlw	-1
  8395  01867C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8396  018682  0E03               	movlw	3
  8397  018684  240B               	addwf	(btemp+10)^0,w,c
  8398  018686  6ED9               	movwf	fsr2l,c
  8399  018688  0E00               	movlw	0
  8400  01868A  200C               	addwfc	(btemp+11)^0,w,c
  8401  01868C  6EDA               	movwf	fsr2h,c
  8402  01868E  50DF               	movf	indf2,w,c
  8403  018690  A4D8               	btfss	status,2,c
  8404  018692  D065               	goto	l2084
  8405                           
  8406                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8407                           ;stkvar	_h @ sp[(0)+-2]
  8408  018694  0EFE               	movlw	-2
  8409  018696  006F FF8C  F00B    	movff	plusw1,btemp+10
  8410  01869C  0EFF               	movlw	-1
  8411  01869E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8412  0186A4  0E08               	movlw	8
  8413  0186A6  240B               	addwf	(btemp+10)^0,w,c
  8414  0186A8  6ED9               	movwf	fsr2l,c
  8415  0186AA  0E00               	movlw	0
  8416  0186AC  200C               	addwfc	(btemp+11)^0,w,c
  8417  0186AE  6EDA               	movwf	fsr2h,c
  8418                           
  8419                           ;stkvar	_h @ sp[(0)+-2]
  8420  0186B0  0EFE               	movlw	-2
  8421  0186B2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8422  0186B8  0EFF               	movlw	-1
  8423  0186BA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8424  0186C0  0E08               	movlw	8
  8425  0186C2  240B               	addwf	(btemp+10)^0,w,c
  8426  0186C4  6EE9               	movwf	fsr0l,c
  8427  0186C6  0E00               	movlw	0
  8428  0186C8  200C               	addwfc	(btemp+11)^0,w,c
  8429  0186CA  6EEA               	movwf	fsr0h,c
  8430  0186CC  2AEF               	incf	indf0,f,c
  8431  0186CE  50EF               	movf	indf0,w,c
  8432  0186D0  0B03               	andlw	3
  8433  0186D2  6EDF               	movwf	indf2,c
  8434                           
  8435                           ;hid.c: 41:    h->hid_display = h->sequence;
  8436                           ;stkvar	_h @ sp[(0)+-2]
  8437  0186D4  0EFE               	movlw	-2
  8438  0186D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8439  0186DC  0EFF               	movlw	-1
  8440  0186DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8441  0186E4  0E08               	movlw	8
  8442  0186E6  240B               	addwf	(btemp+10)^0,w,c
  8443  0186E8  6ED9               	movwf	fsr2l,c
  8444  0186EA  0E00               	movlw	0
  8445  0186EC  200C               	addwfc	(btemp+11)^0,w,c
  8446  0186EE  6EDA               	movwf	fsr2h,c
  8447                           
  8448                           ;stkvar	_h @ sp[(0)+-2]
  8449  0186F0  0EFE               	movlw	-2
  8450  0186F2  006F FF8F FFE9     	movff	plusw1,fsr0l
  8451  0186F8  0EFF               	movlw	-1
  8452  0186FA  006F FF8F FFEA     	movff	plusw1,fsr0h
  8453  018700  006F FF7F FFEF     	movff	indf2,indf0
  8454                           
  8455                           ;hid.c: 42:    h->wait_select = 1;
  8456                           ;stkvar	_h @ sp[(0)+-2]
  8457  018706  0EFE               	movlw	-2
  8458  018708  006F FF8C  F00B    	movff	plusw1,btemp+10
  8459  01870E  0EFF               	movlw	-1
  8460  018710  006F FF8C  F00C    	movff	plusw1,btemp+11
  8461  018716  0E02               	movlw	2
  8462  018718  240B               	addwf	(btemp+10)^0,w,c
  8463  01871A  6ED9               	movwf	fsr2l,c
  8464  01871C  0E00               	movlw	0
  8465  01871E  200C               	addwfc	(btemp+11)^0,w,c
  8466  018720  6EDA               	movwf	fsr2h,c
  8467  018722  0E01               	movlw	1
  8468  018724                     L4:
  8469  018724  6EDF               	movwf	indf2,c
  8470  018726  D01B               	goto	l2084
  8471  018728                     l13609:
  8472                           
  8473                           ;stkvar	_h @ sp[(0)+-2]
  8474  018728  0EFE               	movlw	-2
  8475  01872A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8476  018730  0EFF               	movlw	-1
  8477  018732  006F FF8C  F00C    	movff	plusw1,btemp+11
  8478  018738  0E01               	movlw	1
  8479  01873A  240B               	addwf	(btemp+10)^0,w,c
  8480  01873C  6ED9               	movwf	fsr2l,c
  8481  01873E  0E00               	movlw	0
  8482  018740  200C               	addwfc	(btemp+11)^0,w,c
  8483  018742  6EDA               	movwf	fsr2h,c
  8484  018744  50DF               	movf	indf2,w,c
  8485  018746  6E0B               	movwf	(btemp+10)^0,c
  8486  018748  6A0C               	clrf	(btemp+11)^0,c
  8487                           
  8488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8489                           ; Switch size 1, requested type "simple"
  8490                           ; Number of cases is 1, Range of values is 0 to 0
  8491                           ; switch strategies available:
  8492                           ; Name         Instructions Cycles
  8493                           ; simple_byte            4     3 (average)
  8494                           ;	Chosen strategy is simple_byte
  8495  01874A  500C               	movf	(btemp+11)^0,w,c
  8496  01874C  0A00               	xorlw	0	; case 0
  8497  01874E  A4D8               	btfss	status,2,c
  8498  018750  D77F               	goto	l13599
  8499                           
  8500                           ; Switch size 1, requested type "simple"
  8501                           ; Number of cases is 2, Range of values is 0 to 1
  8502                           ; switch strategies available:
  8503                           ; Name         Instructions Cycles
  8504                           ; simple_byte            7     4 (average)
  8505                           ;	Chosen strategy is simple_byte
  8506  018752  500B               	movf	(btemp+10)^0,w,c
  8507  018754  0A00               	xorlw	0	; case 0
  8508  018756  B4D8               	btfsc	status,2,c
  8509  018758  D701               	goto	l13583
  8510  01875A  0A01               	xorlw	1	; case 1
  8511  01875C  D779               	goto	l13599
  8512  01875E                     l2084:
  8513                           
  8514                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8515  01875E  52E5               	movf	postdec1,f,c
  8516  018760  52E5               	movf	postdec1,f,c
  8517  018762  0012               	return		;funcret
  8518  018764                     __end_of_hid_display:
  8519                           	opt callstack 0
  8520                           
  8521 ;; *************** function _hid_input *****************
  8522 ;; Defined at:
  8523 ;;		line 3 in file "hid.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  h               2  [STACK] PTR struct H_data
  8526 ;;		 -> H(9), 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  2  [STACK] PTR struct H_data
  8531 ;; Registers used:
  8532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/39
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8542 ;;Total ram usage:        0 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:   16
  8545 ;; This function calls:
  8546 ;;		_get_switch
  8547 ;; This function is called by:
  8548 ;;		_hid_display
  8549 ;; This function uses a reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text19
  8553  019B7A                     __ptext19:
  8554                           	opt callstack 0
  8555  019B7A                     _hid_input:
  8556                           	opt callstack 13
  8557                           
  8558                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8559                           
  8560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8561                           ;incstack = 0
  8562  019B7A  0E02               	movlw	2
  8563  019B7C  6EE6               	movwf	postinc1,c
  8564  019B7E  ECD5  F0E1         	call	_get_switch	;wreg free
  8565  019B82  5001               	movf	btemp^0,w,c
  8566  019B84  B4D8               	btfsc	status,2,c
  8567  019B86  D02C               	goto	l13371
  8568                           
  8569                           ;hid.c: 6:   h->wait_select = 0;
  8570                           ;stkvar	_h @ sp[(0)+-2]
  8571  019B88  0EFE               	movlw	-2
  8572  019B8A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8573  019B90  0EFF               	movlw	-1
  8574  019B92  006F FF8C  F00C    	movff	plusw1,btemp+11
  8575  019B98  0E02               	movlw	2
  8576  019B9A  240B               	addwf	(btemp+10)^0,w,c
  8577  019B9C  6ED9               	movwf	fsr2l,c
  8578  019B9E  0E00               	movlw	0
  8579  019BA0  200C               	addwfc	(btemp+11)^0,w,c
  8580  019BA2  6EDA               	movwf	fsr2h,c
  8581  019BA4  0E00               	movlw	0
  8582  019BA6  6EDF               	movwf	indf2,c
  8583                           
  8584                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8585  019BA8  0E02               	movlw	2
  8586  019BAA  6EE6               	movwf	postinc1,c
  8587  019BAC  ECD5  F0E1         	call	_get_switch	;wreg free
  8588  019BB0  5001               	movf	btemp^0,w,c
  8589  019BB2  B4D8               	btfsc	status,2,c
  8590  019BB4  D003               	goto	u12770
  8591  019BB6  6A0C               	clrf	(btemp+11)^0,c
  8592  019BB8  2A0C               	incf	(btemp+11)^0,f,c
  8593  019BBA  D001               	goto	u12788
  8594  019BBC                     u12770:
  8595  019BBC  6A0C               	clrf	(btemp+11)^0,c
  8596  019BBE                     u12788:
  8597                           
  8598                           ;stkvar	_h @ sp[(0)+-2]
  8599  019BBE  0EFE               	movlw	-2
  8600  019BC0  006F FF8C  F009    	movff	plusw1,btemp+8
  8601  019BC6  0EFF               	movlw	-1
  8602  019BC8  006F FF8C  F00A    	movff	plusw1,btemp+9
  8603  019BCE  0E03               	movlw	3
  8604  019BD0  2409               	addwf	(btemp+8)^0,w,c
  8605  019BD2  6ED9               	movwf	fsr2l,c
  8606  019BD4  0E00               	movlw	0
  8607  019BD6  200A               	addwfc	(btemp+9)^0,w,c
  8608  019BD8  6EDA               	movwf	fsr2h,c
  8609  019BDA  0060  F033  FFDF   	movff	btemp+11,indf2
  8610  019BE0                     l13371:
  8611                           
  8612                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8613  019BE0  0E03               	movlw	3
  8614  019BE2  6EE6               	movwf	postinc1,c
  8615  019BE4  ECD5  F0E1         	call	_get_switch	;wreg free
  8616  019BE8  5001               	movf	btemp^0,w,c
  8617  019BEA  B4D8               	btfsc	status,2,c
  8618  019BEC  D02C               	goto	l13377
  8619                           
  8620                           ;hid.c: 11:   h->wait_enter = 0;
  8621                           ;stkvar	_h @ sp[(0)+-2]
  8622  019BEE  0EFE               	movlw	-2
  8623  019BF0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8624  019BF6  0EFF               	movlw	-1
  8625  019BF8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8626  019BFE  0E04               	movlw	4
  8627  019C00  240B               	addwf	(btemp+10)^0,w,c
  8628  019C02  6ED9               	movwf	fsr2l,c
  8629  019C04  0E00               	movlw	0
  8630  019C06  200C               	addwfc	(btemp+11)^0,w,c
  8631  019C08  6EDA               	movwf	fsr2h,c
  8632  019C0A  0E00               	movlw	0
  8633  019C0C  6EDF               	movwf	indf2,c
  8634                           
  8635                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8636  019C0E  0E03               	movlw	3
  8637  019C10  6EE6               	movwf	postinc1,c
  8638  019C12  ECD5  F0E1         	call	_get_switch	;wreg free
  8639  019C16  5001               	movf	btemp^0,w,c
  8640  019C18  B4D8               	btfsc	status,2,c
  8641  019C1A  D003               	goto	u12800
  8642  019C1C  6A0C               	clrf	(btemp+11)^0,c
  8643  019C1E  2A0C               	incf	(btemp+11)^0,f,c
  8644  019C20  D001               	goto	u12818
  8645  019C22                     u12800:
  8646  019C22  6A0C               	clrf	(btemp+11)^0,c
  8647  019C24                     u12818:
  8648                           
  8649                           ;stkvar	_h @ sp[(0)+-2]
  8650  019C24  0EFE               	movlw	-2
  8651  019C26  006F FF8C  F009    	movff	plusw1,btemp+8
  8652  019C2C  0EFF               	movlw	-1
  8653  019C2E  006F FF8C  F00A    	movff	plusw1,btemp+9
  8654  019C34  0E05               	movlw	5
  8655  019C36  2409               	addwf	(btemp+8)^0,w,c
  8656  019C38  6ED9               	movwf	fsr2l,c
  8657  019C3A  0E00               	movlw	0
  8658  019C3C  200A               	addwfc	(btemp+9)^0,w,c
  8659  019C3E  6EDA               	movwf	fsr2h,c
  8660  019C40  0060  F033  FFDF   	movff	btemp+11,indf2
  8661  019C46                     l13377:
  8662                           
  8663                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  8664  019C46  0E04               	movlw	4
  8665  019C48  6EE6               	movwf	postinc1,c
  8666  019C4A  ECD5  F0E1         	call	_get_switch	;wreg free
  8667  019C4E  5001               	movf	btemp^0,w,c
  8668  019C50  B4D8               	btfsc	status,2,c
  8669  019C52  D02C               	goto	l2075
  8670                           
  8671                           ;hid.c: 16:   h->wait_calib = 0;
  8672                           ;stkvar	_h @ sp[(0)+-2]
  8673  019C54  0EFE               	movlw	-2
  8674  019C56  006F FF8C  F00B    	movff	plusw1,btemp+10
  8675  019C5C  0EFF               	movlw	-1
  8676  019C5E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8677  019C64  0E06               	movlw	6
  8678  019C66  240B               	addwf	(btemp+10)^0,w,c
  8679  019C68  6ED9               	movwf	fsr2l,c
  8680  019C6A  0E00               	movlw	0
  8681  019C6C  200C               	addwfc	(btemp+11)^0,w,c
  8682  019C6E  6EDA               	movwf	fsr2h,c
  8683  019C70  0E00               	movlw	0
  8684  019C72  6EDF               	movwf	indf2,c
  8685                           
  8686                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  8687  019C74  0E04               	movlw	4
  8688  019C76  6EE6               	movwf	postinc1,c
  8689  019C78  ECD5  F0E1         	call	_get_switch	;wreg free
  8690  019C7C  5001               	movf	btemp^0,w,c
  8691  019C7E  B4D8               	btfsc	status,2,c
  8692  019C80  D003               	goto	u12830
  8693  019C82  6A0C               	clrf	(btemp+11)^0,c
  8694  019C84  2A0C               	incf	(btemp+11)^0,f,c
  8695  019C86  D001               	goto	u12848
  8696  019C88                     u12830:
  8697  019C88  6A0C               	clrf	(btemp+11)^0,c
  8698  019C8A                     u12848:
  8699                           
  8700                           ;stkvar	_h @ sp[(0)+-2]
  8701  019C8A  0EFE               	movlw	-2
  8702  019C8C  006F FF8C  F009    	movff	plusw1,btemp+8
  8703  019C92  0EFF               	movlw	-1
  8704  019C94  006F FF8C  F00A    	movff	plusw1,btemp+9
  8705  019C9A  0E07               	movlw	7
  8706  019C9C  2409               	addwf	(btemp+8)^0,w,c
  8707  019C9E  6ED9               	movwf	fsr2l,c
  8708  019CA0  0E00               	movlw	0
  8709  019CA2  200A               	addwfc	(btemp+9)^0,w,c
  8710  019CA4  6EDA               	movwf	fsr2h,c
  8711  019CA6  0060  F033  FFDF   	movff	btemp+11,indf2
  8712  019CAC                     l2075:
  8713                           
  8714                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8715  019CAC  52E5               	movf	postdec1,f,c
  8716  019CAE  52E5               	movf	postdec1,f,c
  8717  019CB0  0012               	return		;funcret
  8718  019CB2                     __end_of_hid_input:
  8719                           	opt callstack 0
  8720                           
  8721 ;; *************** function _esr_check *****************
  8722 ;; Defined at:
  8723 ;;		line 197 in file "bsoc.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  fsm             1  [STACK] const unsigned char 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  4  [STACK] float 
  8730 ;; Registers used:
  8731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8741 ;;Total ram usage:        0 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:   18
  8744 ;; This function calls:
  8745 ;;		_StartTimer
  8746 ;;		_TimerDone
  8747 ;;		___fldiv
  8748 ;;		___flsub
  8749 ;;		_conv_raw_result
  8750 ;;		_fabsf
  8751 ;;		_set_load_relay_one
  8752 ;;		_set_load_relay_two
  8753 ;;		_update_adc_result
  8754 ;; This function is called by:
  8755 ;;		_main
  8756 ;; This function uses a reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text20
  8760  0171A6                     __ptext20:
  8761                           	opt callstack 0
  8762  0171A6                     _esr_check:
  8763                           	opt callstack 12
  8764                           
  8765                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  8766                           ;stkvar	_fsm @ sp[(0)+-1]
  8767                           
  8768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8769                           ;incstack = 0
  8770  0171A6  0EFF               	movlw	-1
  8771  0171A8  50E3               	movf	plusw1,w,c
  8772  0171AA  B4D8               	btfsc	status,2,c
  8773  0171AC  D149               	goto	l11455
  8774                           
  8775                           ;bsoc.c: 202:   esr_state = 0;
  8776  0171AE  0100               	movlb	0	; () banked
  8777  0171B0  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;bsoc.c: 203:   return -10.0;
  8781  0171B2  0E00               	movlw	0
  8782  0171B4  6E01               	movwf	btemp^0,c
  8783  0171B6  0E00               	movlw	0
  8784  0171B8  6E02               	movwf	(btemp+1)^0,c
  8785  0171BA  0E20               	movlw	32
  8786  0171BC  6E03               	movwf	(btemp+2)^0,c
  8787  0171BE  0EC1               	movlw	193
  8788  0171C0  D15B               	goto	L5
  8789  0171C2                     l11387:
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  8793  0171C2  0E10               	movlw	16
  8794  0171C4  6EE6               	movwf	postinc1,c
  8795  0171C6  0E27               	movlw	39
  8796  0171C8  6EE6               	movwf	postinc1,c
  8797  0171CA  0E0C               	movlw	12
  8798  0171CC  6EE6               	movwf	postinc1,c
  8799  0171CE  ECEC  F0DF         	call	_StartTimer	;wreg free
  8800  0171D2                     l11389:
  8801                           
  8802                           ;bsoc.c: 209:   esr_state++;
  8803  0171D2  0100               	movlb	0	; () banked
  8804  0171D4  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8805                           
  8806                           ;bsoc.c: 210:   break;
  8807  0171D6  D149               	goto	l11457
  8808  0171D8                     l11391:
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;bsoc.c: 215:   set_load_relay_one(0);
  8812  0171D8  0E00               	movlw	0
  8813  0171DA  6EE6               	movwf	postinc1,c
  8814  0171DC  ECD3  F0E4         	call	_set_load_relay_one	;wreg free
  8815                           
  8816                           ;bsoc.c: 216:   set_load_relay_two(0);
  8817  0171E0  0E00               	movlw	0
  8818  0171E2  6EE6               	movwf	postinc1,c
  8819  0171E4  ECCB  F0E4         	call	_set_load_relay_two	;wreg free
  8820                           
  8821                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  8822  0171E8  0E0C               	movlw	12
  8823  0171EA  6EE6               	movwf	postinc1,c
  8824  0171EC  EC41  F0E2         	call	_TimerDone	;wreg free
  8825  0171F0  5001               	movf	btemp^0,w,c
  8826  0171F2  B4D8               	btfsc	status,2,c
  8827  0171F4  D009               	goto	l11397
  8828                           
  8829                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  8830  0171F6  0E10               	movlw	16
  8831  0171F8  6EE6               	movwf	postinc1,c
  8832  0171FA  0E27               	movlw	39
  8833  0171FC  6EE6               	movwf	postinc1,c
  8834  0171FE  0E0C               	movlw	12
  8835  017200  6EE6               	movwf	postinc1,c
  8836  017202  ECEC  F0DF         	call	_StartTimer	;wreg free
  8837                           
  8838                           ;bsoc.c: 219:   } else {
  8839  017206  D006               	goto	l11401
  8840  017208                     l11397:
  8841                           
  8842                           ;bsoc.c: 220:    return -2.0;
  8843  017208  0E00               	movlw	0
  8844  01720A  6E01               	movwf	btemp^0,c
  8845  01720C  0E00               	movlw	0
  8846  01720E  6E02               	movwf	(btemp+1)^0,c
  8847  017210  0E00               	movlw	0
  8848  017212  D066               	goto	L7
  8849  017214                     l11401:
  8850                           
  8851                           ;bsoc.c: 225:   update_adc_result();
  8852  017214  EC6B  F0E0         	call	_update_adc_result	;wreg free
  8853                           
  8854                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8855  017218  0E00               	movlw	0
  8856  01721A  6EE6               	movwf	postinc1,c
  8857  01721C  0E04               	movlw	4
  8858  01721E  6EE6               	movwf	postinc1,c
  8859  017220  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8860  017224  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8861  01722A  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8862  017230  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8863  017236  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8864  01723C  D7CA               	goto	l11389
  8865  01723E                     l11407:
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;bsoc.c: 230:   set_load_relay_one(1);
  8869  01723E  0E01               	movlw	1
  8870  017240  6EE6               	movwf	postinc1,c
  8871  017242  ECD3  F0E4         	call	_set_load_relay_one	;wreg free
  8872                           
  8873                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  8874  017246  0E0C               	movlw	12
  8875  017248  6EE6               	movwf	postinc1,c
  8876  01724A  EC41  F0E2         	call	_TimerDone	;wreg free
  8877  01724E  5001               	movf	btemp^0,w,c
  8878  017250  B4D8               	btfsc	status,2,c
  8879  017252  D009               	goto	l11413
  8880                           
  8881                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  8882  017254  0E10               	movlw	16
  8883  017256  6EE6               	movwf	postinc1,c
  8884  017258  0E27               	movlw	39
  8885  01725A  6EE6               	movwf	postinc1,c
  8886  01725C  0E0C               	movlw	12
  8887  01725E  6EE6               	movwf	postinc1,c
  8888  017260  ECEC  F0DF         	call	_StartTimer	;wreg free
  8889                           
  8890                           ;bsoc.c: 233:   } else {
  8891  017264  D006               	goto	l11417
  8892  017266                     l11413:
  8893                           
  8894                           ;bsoc.c: 234:    return -3.0;
  8895  017266  0E00               	movlw	0
  8896  017268  6E01               	movwf	btemp^0,c
  8897  01726A  0E00               	movlw	0
  8898  01726C  6E02               	movwf	(btemp+1)^0,c
  8899  01726E  0E40               	movlw	64
  8900  017270  D037               	goto	L7
  8901  017272                     l11417:
  8902                           
  8903                           ;bsoc.c: 237:   update_adc_result();
  8904  017272  EC6B  F0E0         	call	_update_adc_result	;wreg free
  8905                           
  8906                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8907  017276  0E00               	movlw	0
  8908  017278  6EE6               	movwf	postinc1,c
  8909  01727A  0E04               	movlw	4
  8910  01727C  6EE6               	movwf	postinc1,c
  8911  01727E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8912  017282  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8913  017288  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8914  01728E  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8915  017294  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8916                           
  8917                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8918  01729A  0E00               	movlw	0
  8919  01729C  6EE6               	movwf	postinc1,c
  8920  01729E  0E00               	movlw	0
  8921  0172A0  6EE6               	movwf	postinc1,c
  8922  0172A2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8923  0172A6  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8924  0172AC  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8925  0172B2  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8926  0172B8  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8927  0172BE  D789               	goto	l11389
  8928  0172C0                     l11425:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;bsoc.c: 243:   set_load_relay_two(1);
  8932  0172C0  0E01               	movlw	1
  8933  0172C2  6EE6               	movwf	postinc1,c
  8934  0172C4  ECCB  F0E4         	call	_set_load_relay_two	;wreg free
  8935                           
  8936                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  8937  0172C8  0E0C               	movlw	12
  8938  0172CA  6EE6               	movwf	postinc1,c
  8939  0172CC  EC41  F0E2         	call	_TimerDone	;wreg free
  8940  0172D0  5001               	movf	btemp^0,w,c
  8941  0172D2  A4D8               	btfss	status,2,c
  8942  0172D4  D008               	goto	l11433
  8943                           
  8944                           ;bsoc.c: 245:    return -4.0;
  8945  0172D6  0E00               	movlw	0
  8946  0172D8  6E01               	movwf	btemp^0,c
  8947  0172DA  0E00               	movlw	0
  8948  0172DC  6E02               	movwf	(btemp+1)^0,c
  8949  0172DE  0E80               	movlw	128
  8950  0172E0                     L7:
  8951  0172E0  6E03               	movwf	(btemp+2)^0,c
  8952  0172E2  0EC0               	movlw	192
  8953  0172E4  D0C9               	goto	L5
  8954  0172E6                     l11433:
  8955                           
  8956                           ;bsoc.c: 247:   update_adc_result();
  8957  0172E6  EC6B  F0E0         	call	_update_adc_result	;wreg free
  8958                           
  8959                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8960  0172EA  0E00               	movlw	0
  8961  0172EC  6EE6               	movwf	postinc1,c
  8962  0172EE  0E04               	movlw	4
  8963  0172F0  6EE6               	movwf	postinc1,c
  8964  0172F2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8965  0172F6  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8966  0172FC  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8967  017302  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8968  017308  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8969                           
  8970                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8971  01730E  0E00               	movlw	0
  8972  017310  6EE6               	movwf	postinc1,c
  8973  017312  0E00               	movlw	0
  8974  017314  6EE6               	movwf	postinc1,c
  8975  017316  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8976  01731A  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8977  017320  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8978  017326  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8979  01732C  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8980                           
  8981                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8982  017332  EE22  F011         	lfsr	2,_C+274	;volatile
  8983  017336  006F FF7B FFE6     	movff	postinc2,postinc1
  8984  01733C  006F FF7B FFE6     	movff	postinc2,postinc1
  8985  017342  006F FF7B FFE6     	movff	postinc2,postinc1
  8986  017348  006F FF7B FFE6     	movff	postinc2,postinc1
  8987  01734E  EE22  F00D         	lfsr	2,_C+270	;volatile
  8988  017352  006F FF7B FFE6     	movff	postinc2,postinc1
  8989  017358  006F FF7B FFE6     	movff	postinc2,postinc1
  8990  01735E  006F FF7B FFE6     	movff	postinc2,postinc1
  8991  017364  006F FF7B FFE6     	movff	postinc2,postinc1
  8992  01736A  EC46  F0DF         	call	___flsub	;wreg free
  8993  01736E  0060  F007  FFE6   	movff	btemp,postinc1
  8994  017374  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8995  01737A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8996  017380  0060  F013  FFE6   	movff	btemp+3,postinc1
  8997  017386  EE22  F01D         	lfsr	2,_C+286	;volatile
  8998  01738A  006F FF7B FFE6     	movff	postinc2,postinc1
  8999  017390  006F FF7B FFE6     	movff	postinc2,postinc1
  9000  017396  006F FF7B FFE6     	movff	postinc2,postinc1
  9001  01739C  006F FF7B FFE6     	movff	postinc2,postinc1
  9002  0173A2  EE22  F019         	lfsr	2,_C+282	;volatile
  9003  0173A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9004  0173AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9005  0173B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9006  0173B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9007  0173BE  EC46  F0DF         	call	___flsub	;wreg free
  9008  0173C2  0060  F007  FFE6   	movff	btemp,postinc1
  9009  0173C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9010  0173CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9011  0173D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9012  0173DA  EC13  F0A7         	call	___fldiv	;wreg free
  9013  0173DE  0060  F007  FFE6   	movff	btemp,postinc1
  9014  0173E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9015  0173EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9016  0173F0  0060  F013  FFE6   	movff	btemp+3,postinc1
  9017  0173F6  ECAE  F0D6         	call	_fabsf	;wreg free
  9018  0173FA  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9019  017400  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9020  017406  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9021  01740C  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9022                           
  9023                           ;bsoc.c: 252:   set_load_relay_one(0);
  9024  017412  0E00               	movlw	0
  9025  017414  6EE6               	movwf	postinc1,c
  9026  017416  ECD3  F0E4         	call	_set_load_relay_one	;wreg free
  9027                           
  9028                           ;bsoc.c: 253:   set_load_relay_two(0);
  9029  01741A  0E00               	movlw	0
  9030  01741C  6EE6               	movwf	postinc1,c
  9031  01741E  ECCB  F0E4         	call	_set_load_relay_two	;wreg free
  9032                           
  9033                           ;bsoc.c: 254:   esr_state = 0;
  9034  017422  0100               	movlb	0	; () banked
  9035  017424  6BA4               	clrf	esr_check@esr_state& (0+255),b
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;bsoc.c: 255:   return C.esr;
  9039  017426  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9040  01742C  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9041  017432  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9042  017438  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9043  01743E  D01D               	goto	l2200
  9044  017440                     l11455:
  9045  017440  0100               	movlb	0	; () banked
  9046  017442  51A4               	movf	esr_check@esr_state& (0+255),w,b
  9047  017444  6E0B               	movwf	(btemp+10)^0,c
  9048  017446  6A0C               	clrf	(btemp+11)^0,c
  9049                           
  9050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9051                           ; Switch size 1, requested type "simple"
  9052                           ; Number of cases is 1, Range of values is 0 to 0
  9053                           ; switch strategies available:
  9054                           ; Name         Instructions Cycles
  9055                           ; simple_byte            4     3 (average)
  9056                           ;	Chosen strategy is simple_byte
  9057  017448  500C               	movf	(btemp+11)^0,w,c
  9058  01744A  0A00               	xorlw	0	; case 0
  9059  01744C  A4D8               	btfss	status,2,c
  9060  01744E  D00D               	goto	l11457
  9061                           
  9062                           ; BSR set to: 0
  9063                           ; Switch size 1, requested type "simple"
  9064                           ; Number of cases is 4, Range of values is 0 to 3
  9065                           ; switch strategies available:
  9066                           ; Name         Instructions Cycles
  9067                           ; simple_byte           13     7 (average)
  9068                           ;	Chosen strategy is simple_byte
  9069  017450  500B               	movf	(btemp+10)^0,w,c
  9070  017452  0A00               	xorlw	0	; case 0
  9071  017454  B4D8               	btfsc	status,2,c
  9072  017456  D6B5               	goto	l11387
  9073  017458  0A01               	xorlw	1	; case 1
  9074  01745A  B4D8               	btfsc	status,2,c
  9075  01745C  D6BD               	goto	l11391
  9076  01745E  0A03               	xorlw	3	; case 2
  9077  017460  B4D8               	btfsc	status,2,c
  9078  017462  D6ED               	goto	l11407
  9079  017464  0A01               	xorlw	1	; case 3
  9080  017466  B4D8               	btfsc	status,2,c
  9081  017468  D72B               	goto	l11425
  9082  01746A                     l11457:
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;bsoc.c: 260:  return -1.0;
  9086  01746A  0E00               	movlw	0
  9087  01746C  6E01               	movwf	btemp^0,c
  9088  01746E  0E00               	movlw	0
  9089  017470  6E02               	movwf	(btemp+1)^0,c
  9090  017472  0E80               	movlw	128
  9091  017474  6E03               	movwf	(btemp+2)^0,c
  9092  017476  0EBF               	movlw	191
  9093  017478                     L5:
  9094  017478  6E04               	movwf	(btemp+3)^0,c
  9095  01747A                     l2200:
  9096                           
  9097                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9098  01747A  52E5               	movf	postdec1,f,c
  9099  01747C  0012               	return		;funcret
  9100  01747E                     __end_of_esr_check:
  9101                           	opt callstack 0
  9102                           
  9103 ;; *************** function _update_adc_result *****************
  9104 ;; Defined at:
  9105 ;;		line 99 in file "daq.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1  [STACK] _Bool 
  9112 ;; Registers used:
  9113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:   17
  9126 ;; This function calls:
  9127 ;;		_StartTimer
  9128 ;;		_TimerDone
  9129 ;;		_check_adc_scan
  9130 ;;		_clear_adc_scan
  9131 ;;		_start_adc_scan
  9132 ;; This function is called by:
  9133 ;;		_esr_check
  9134 ;; This function uses a reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text21
  9138  01C0D6                     __ptext21:
  9139                           	opt callstack 0
  9140  01C0D6                     _update_adc_result:
  9141                           	opt callstack 12
  9142                           
  9143                           ;daq.c: 101:  if (R.done) {
  9144                           
  9145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9146                           ;incstack = 0
  9147  01C0D6  0100               	movlb	0	; () banked
  9148  01C0D8  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9149  01C0DA  B4D8               	btfsc	status,2,c
  9150  01C0DC  0012               	return	
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;daq.c: 102:   clear_adc_scan();
  9154  01C0DE  EC3F  F0E5         	call	_clear_adc_scan	;wreg free
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;daq.c: 103:   start_adc_scan();
  9158  01C0E2  EC85  F0DC         	call	_start_adc_scan	;wreg free
  9159                           
  9160                           ;daq.c: 104:   StartTimer(TMR_ADC, 200);
  9161  01C0E6  0EC8               	movlw	200
  9162  01C0E8  6EE6               	movwf	postinc1,c
  9163  01C0EA  0E00               	movlw	0
  9164  01C0EC  6EE6               	movwf	postinc1,c
  9165  01C0EE  0E01               	movlw	1
  9166  01C0F0  6EE6               	movwf	postinc1,c
  9167  01C0F2  ECEC  F0DF         	call	_StartTimer	;wreg free
  9168  01C0F6                     l10903:
  9169  01C0F6  0E01               	movlw	1
  9170  01C0F8  6EE6               	movwf	postinc1,c
  9171  01C0FA  EC41  F0E2         	call	_TimerDone	;wreg free
  9172  01C0FE  5001               	movf	btemp^0,w,c
  9173  01C100  A4D8               	btfss	status,2,c
  9174  01C102  0012               	return	
  9175  01C104  EC2F  F0E5         	call	_check_adc_scan	;wreg free
  9176  01C108  5001               	movf	btemp^0,w,c
  9177  01C10A  A4D8               	btfss	status,2,c
  9178  01C10C  0012               	return	
  9179  01C10E  D7F3               	goto	l10903
  9180  01C110                     __end_of_update_adc_result:
  9181                           	opt callstack 0
  9182                           
  9183 ;; *************** function _start_adc_scan *****************
  9184 ;; Defined at:
  9185 ;;		line 60 in file "daq.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;		None
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1  [STACK] _Bool 
  9192 ;; Registers used:
  9193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 1/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9203 ;;Total ram usage:        0 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:   16
  9206 ;; This function calls:
  9207 ;;		_ADCC_DischargeSampleCapacitor
  9208 ;;		_ADCC_SetADIInterruptHandler
  9209 ;;		_ADCC_SetADTIInterruptHandler
  9210 ;;		_ADCC_StartConversion
  9211 ;; This function is called by:
  9212 ;;		_main
  9213 ;;		_update_adc_result
  9214 ;; This function uses a reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text22
  9218  01B90A                     __ptext22:
  9219                           	opt callstack 0
  9220  01B90A                     _start_adc_scan:
  9221                           	opt callstack 14
  9222                           
  9223                           ;daq.c: 62:  if (R.done)
  9224                           
  9225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9226                           ;incstack = 0
  9227  01B90A  0100               	movlb	0	; () banked
  9228  01B90C  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9229  01B90E  A4D8               	btfss	status,2,c
  9230  01B910  0012               	return	
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;daq.c: 65:  R.scan_index = 0;
  9234  01B912  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;daq.c: 66:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9238  01B914  013A               	movlb	58	; () banked
  9239  01B916  5140               	movf	64,w,b	;volatile
  9240  01B918  006E F940  F001    	movff	14928,btemp	;volatile
  9241  01B91E  6A02               	clrf	(btemp+1)^0,c
  9242  01B920  0060  F004  F002   	movff	btemp,btemp+1
  9243  01B926  6A01               	clrf	btemp^0,c
  9244  01B928  2601               	addwf	btemp^0,f,c
  9245  01B92A  0E00               	movlw	0
  9246  01B92C  2202               	addwfc	(btemp+1)^0,f,c
  9247  01B92E  0E77               	movlw	119
  9248  01B930  1401               	andwf	btemp^0,w,c
  9249  01B932  0100               	movlb	0	; () banked
  9250  01B934  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9251  01B936  0E3C               	movlw	60
  9252  01B938  1402               	andwf	(btemp+1)^0,w,c
  9253  01B93A  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;daq.c: 67:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9257  01B93C  0EA6               	movlw	low _adc_int_handler
  9258  01B93E  6EE6               	movwf	postinc1,c
  9259  01B940  0ECA               	movlw	high _adc_int_handler
  9260  01B942  6EE6               	movwf	postinc1,c
  9261  01B944  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9262  01B946  6EE6               	movwf	postinc1,c
  9263  01B948  EC09  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9264                           
  9265                           ;daq.c: 68:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9266  01B94C  0E1C               	movlw	low _adc_int_t_handler
  9267  01B94E  6EE6               	movwf	postinc1,c
  9268  01B950  0EB5               	movlw	high _adc_int_t_handler
  9269  01B952  6EE6               	movwf	postinc1,c
  9270  01B954  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9271  01B956  6EE6               	movwf	postinc1,c
  9272  01B958  ECF5  F0E2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9273                           
  9274                           ;daq.c: 69:  ADCC_DischargeSampleCapacitor();
  9275  01B95C  EC2B  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9276                           
  9277                           ; BSR set to: 62
  9278                           ;daq.c: 70:  ADCC_StartConversion(R.scan_index & 0xf);
  9279  01B960  0100               	movlb	0	; () banked
  9280  01B962  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9281  01B964  0B0F               	andlw	15
  9282  01B966  6EE6               	movwf	postinc1,c
  9283  01B968  ECC2  F0E4         	call	_ADCC_StartConversion	;wreg free
  9284                           
  9285                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9286  01B96C  0012               	return		;funcret
  9287  01B96E                     __end_of_start_adc_scan:
  9288                           	opt callstack 0
  9289                           
  9290 ;; *************** function _ADCC_StartConversion *****************
  9291 ;; Defined at:
  9292 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  channel         1  [STACK] enum E16136
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1  [STACK] void 
  9299 ;; Registers used:
  9300 ;;		fsr1l, fsr1h
  9301 ;; Tracked objects:
  9302 ;;		On entry : 3F/0
  9303 ;;		On exit  : 3F/3E
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:   15
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_start_adc_scan
  9317 ;;		_adc_int_t_handler
  9318 ;; This function uses a reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text23
  9322  01C984                     __ptext23:
  9323                           	opt callstack 0
  9324  01C984                     _ADCC_StartConversion:
  9325                           	opt callstack 0
  9326                           
  9327                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9328                           ;stkvar	_channel @ sp[(0)+-1]
  9329                           
  9330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9331                           ;incstack = 0
  9332 ;; hardware stack exceeded
  9333  01C984  0EFF               	movlw	-1
  9334  01C986  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9335                           
  9336                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9337  01C98C  013E               	movlb	62	; () banked
  9338  01C98E  8FF8               	bsf	248,7,b	;volatile
  9339                           
  9340                           ; BSR set to: 62
  9341                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9342  01C990  81F8               	bsf	248,0,b	;volatile
  9343                           
  9344                           ; BSR set to: 62
  9345                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9346  01C992  52E5               	movf	postdec1,f,c
  9347  01C994  0012               	return		;funcret
  9348  01C996                     __end_of_ADCC_StartConversion:
  9349                           	opt callstack 0
  9350                           
  9351 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9352 ;; Defined at:
  9353 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;		None
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1  [STACK] void 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 3F/3E
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9371 ;;Total ram usage:        0 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:   15
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_start_adc_scan
  9378 ;;		_adc_int_t_handler
  9379 ;; This function uses a reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text24
  9383  01CA56                     __ptext24:
  9384                           	opt callstack 0
  9385  01CA56                     _ADCC_DischargeSampleCapacitor:
  9386                           	opt callstack 0
  9387                           
  9388                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9389                           
  9390                           ; BSR set to: 62
  9391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9392                           ;incstack = 0
  9393 ;; hardware stack exceeded
  9394  01CA56  0E3B               	movlw	59
  9395  01CA58  013E               	movlb	62	; () banked
  9396  01CA5A  6FF1               	movwf	241,b	;volatile
  9397                           
  9398                           ; BSR set to: 62
  9399                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9400  01CA5C  0012               	return		;funcret
  9401  01CA5E                     __end_of_ADCC_DischargeSampleCapacitor:
  9402                           	opt callstack 0
  9403                           
  9404 ;; *************** function _clear_adc_scan *****************
  9405 ;; Defined at:
  9406 ;;		line 91 in file "daq.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;		None
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1  [STACK] void 
  9413 ;; Registers used:
  9414 ;;		None
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 3F/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9424 ;;Total ram usage:        0 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; Hardware stack levels required when called:   15
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		_main
  9431 ;;		_update_adc_result
  9432 ;; This function uses a reentrant model
  9433 ;;
  9434                           
  9435                           	psect	text25
  9436  01CA7E                     __ptext25:
  9437                           	opt callstack 0
  9438  01CA7E                     _clear_adc_scan:
  9439                           	opt callstack 13
  9440                           
  9441                           ;daq.c: 93:  R.done = 0;
  9442                           
  9443                           ; BSR set to: 62
  9444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9445                           ;incstack = 0
  9446  01CA7E  0100               	movlb	0	; () banked
  9447  01CA80  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9448                           
  9449                           ; BSR set to: 0
  9450                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9451  01CA82  0012               	return		;funcret
  9452  01CA84                     __end_of_clear_adc_scan:
  9453                           	opt callstack 0
  9454                           
  9455 ;; *************** function _check_adc_scan *****************
  9456 ;; Defined at:
  9457 ;;		line 83 in file "daq.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;		None
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1  [STACK] _Bool 
  9464 ;; Registers used:
  9465 ;;		btemp
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/1
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9475 ;;Total ram usage:        0 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:   15
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_main
  9482 ;;		_update_adc_result
  9483 ;; This function uses a reentrant model
  9484 ;;
  9485                           
  9486                           	psect	text26
  9487  01CA5E                     __ptext26:
  9488                           	opt callstack 0
  9489  01CA5E                     _check_adc_scan:
  9490                           	opt callstack 13
  9491                           
  9492                           ;daq.c: 85:  return R.done;
  9493                           
  9494                           ; BSR set to: 0
  9495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9496                           ;incstack = 0
  9497  01CA5E  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9498                           
  9499                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9500  01CA64  0012               	return		;funcret
  9501  01CA66                     __end_of_check_adc_scan:
  9502                           	opt callstack 0
  9503                           
  9504 ;; *************** function _set_load_relay_two *****************
  9505 ;; Defined at:
  9506 ;;		line 130 in file "mbmc.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  mode            1  [STACK] const _Bool 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1  [STACK] void 
  9513 ;; Registers used:
  9514 ;;		wreg, fsr1l, fsr1h
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:   15
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_main
  9531 ;;		_esr_check
  9532 ;; This function uses a reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text27
  9536  01C996                     __ptext27:
  9537                           	opt callstack 0
  9538  01C996                     _set_load_relay_two:
  9539                           	opt callstack 15
  9540                           
  9541                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9542                           ;stkvar	_mode @ sp[(0)+-1]
  9543                           
  9544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9545                           ;incstack = 0
  9546  01C996  0EFF               	movlw	-1
  9547  01C998  B0E3               	btfsc	plusw1,0,c
  9548  01C99A  D002               	bra	u9765
  9549  01C99C  9ABD               	bcf	189,5,c	;volatile
  9550  01C99E  D001               	bra	u9766
  9551  01C9A0                     u9765:
  9552  01C9A0  8ABD               	bsf	189,5,c	;volatile
  9553  01C9A2                     u9766:
  9554                           
  9555                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9556  01C9A2  52E5               	movf	postdec1,f,c
  9557  01C9A4  0012               	return		;funcret
  9558  01C9A6                     __end_of_set_load_relay_two:
  9559                           	opt callstack 0
  9560                           
  9561 ;; *************** function _set_load_relay_one *****************
  9562 ;; Defined at:
  9563 ;;		line 125 in file "mbmc.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  mode            1  [STACK] const _Bool 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1  [STACK] void 
  9570 ;; Registers used:
  9571 ;;		wreg, fsr1l, fsr1h
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9581 ;;Total ram usage:        0 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:   15
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_main
  9588 ;;		_esr_check
  9589 ;; This function uses a reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text28
  9593  01C9A6                     __ptext28:
  9594                           	opt callstack 0
  9595  01C9A6                     _set_load_relay_one:
  9596                           	opt callstack 15
  9597                           
  9598                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9599                           ;stkvar	_mode @ sp[(0)+-1]
  9600                           
  9601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9602                           ;incstack = 0
  9603  01C9A6  0EFF               	movlw	-1
  9604  01C9A8  B0E3               	btfsc	plusw1,0,c
  9605  01C9AA  D002               	bra	u9755
  9606  01C9AC  98BD               	bcf	189,4,c	;volatile
  9607  01C9AE  D001               	bra	u9756
  9608  01C9B0                     u9755:
  9609  01C9B0  88BD               	bsf	189,4,c	;volatile
  9610  01C9B2                     u9756:
  9611                           
  9612                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9613  01C9B2  52E5               	movf	postdec1,f,c
  9614  01C9B4  0012               	return		;funcret
  9615  01C9B6                     __end_of_set_load_relay_one:
  9616                           	opt callstack 0
  9617                           
  9618 ;; *************** function _eaDogM_WriteCommand *****************
  9619 ;; Defined at:
  9620 ;;		line 385 in file "eadog.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  cmd             1  [STACK] const unsigned char 
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1  [STACK] void 
  9627 ;; Registers used:
  9628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9629 ;; Tracked objects:
  9630 ;;		On entry : 3F/3D
  9631 ;;		On exit  : 3F/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9638 ;;Total ram usage:        0 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:   26
  9641 ;; This function calls:
  9642 ;;		_send_lcd_cmd_dma
  9643 ;; This function is called by:
  9644 ;;		_main
  9645 ;; This function uses a reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text29
  9649  01C9D6                     __ptext29:
  9650                           	opt callstack 0
  9651  01C9D6                     _eaDogM_WriteCommand:
  9652                           	opt callstack 4
  9653                           
  9654                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9655                           ;stkvar	_cmd @ sp[(0)+-1]
  9656                           
  9657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9658                           ;incstack = 0
  9659  01C9D6  0EFF               	movlw	-1
  9660  01C9D8  50E3               	movf	plusw1,w,c
  9661  01C9DA  6EE6               	movwf	postinc1,c
  9662  01C9DC  EC28  F0E4         	call	_send_lcd_cmd_dma	;wreg free
  9663                           
  9664                           ; BSR set to: 0
  9665                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9666  01C9E0  52E5               	movf	postdec1,f,c
  9667  01C9E2  0012               	return		;funcret
  9668  01C9E4                     __end_of_eaDogM_WriteCommand:
  9669                           	opt callstack 0
  9670                           
  9671 ;; *************** function _current_sensor_cal *****************
  9672 ;; Defined at:
  9673 ;;		line 473 in file "main.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;  x               1  [STACK] unsigned char 
  9678 ;; Return value:  Size  Location     Type
  9679 ;;                  1  [STACK] _Bool 
  9680 ;; Registers used:
  9681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/1
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9691 ;;Total ram usage:        0 bytes
  9692 ;; Hardware stack levels used:    1
  9693 ;; Hardware stack levels required when called:   28
  9694 ;; This function calls:
  9695 ;;		_WaitMs
  9696 ;;		_cal_current_zero
  9697 ;;		_get_switch
  9698 ;;		_get_vterm_ptr
  9699 ;;		_spinners
  9700 ;;		_sprintf
  9701 ;;		_update_lcd
  9702 ;; This function is called by:
  9703 ;;		_main
  9704 ;; This function uses a reentrant model
  9705 ;;
  9706                           
  9707                           	psect	text30
  9708  017C30                     __ptext30:
  9709                           	opt callstack 0
  9710  017C30                     _current_sensor_cal:
  9711                           	opt callstack 0
  9712                           
  9713                           ; BSR set to: 0
  9714                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9715  017C30  52E6               	movf	postinc1,f,c
  9716                           
  9717                           ;main.c: 475:  uint8_t x = 0;
  9718                           ;stkvar	_x @ sp[(-1)+0]
  9719                           
  9720                           ;incstack = 0
  9721  017C32  0EFF               	movlw	-1
  9722  017C34  6AE3               	clrf	plusw1,c
  9723                           
  9724                           ;main.c: 477:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9725  017C36  0E0A               	movlw	low STR_43
  9726  017C38  6EE6               	movwf	postinc1,c
  9727  017C3A  0EFF               	movlw	high STR_43
  9728  017C3C  6EE6               	movwf	postinc1,c
  9729  017C3E  0E00               	movlw	0
  9730  017C40  6EE6               	movwf	postinc1,c
  9731  017C42  0E00               	movlw	0
  9732  017C44  6EE6               	movwf	postinc1,c
  9733  017C46  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9734  017C4A  0060  F007  FFE6   	movff	btemp,postinc1
  9735  017C50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9736  017C56  0E04               	movlw	4
  9737  017C58  6EE6               	movwf	postinc1,c
  9738  017C5A  ECAC  F0D1         	call	_sprintf	;wreg free
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;main.c: 478:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
  9742  017C5E  0E23               	movlw	low STR_44
  9743  017C60  6EE6               	movwf	postinc1,c
  9744  017C62  0EFE               	movlw	high STR_44
  9745  017C64  6EE6               	movwf	postinc1,c
  9746  017C66  0E00               	movlw	0
  9747  017C68  6EE6               	movwf	postinc1,c
  9748  017C6A  0E01               	movlw	1
  9749  017C6C  6EE6               	movwf	postinc1,c
  9750  017C6E  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9751  017C72  0060  F007  FFE6   	movff	btemp,postinc1
  9752  017C78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9753  017C7E  0E04               	movlw	4
  9754  017C80  6EE6               	movwf	postinc1,c
  9755  017C82  ECAC  F0D1         	call	_sprintf	;wreg free
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;main.c: 479:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
  9759  017C86  0EA1               	movlw	low STR_45
  9760  017C88  6EE6               	movwf	postinc1,c
  9761  017C8A  0EFE               	movlw	high STR_45
  9762  017C8C  6EE6               	movwf	postinc1,c
  9763  017C8E  0E00               	movlw	0
  9764  017C90  6EE6               	movwf	postinc1,c
  9765  017C92  0E02               	movlw	2
  9766  017C94  6EE6               	movwf	postinc1,c
  9767  017C96  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9768  017C9A  0060  F007  FFE6   	movff	btemp,postinc1
  9769  017CA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9770  017CA6  0E04               	movlw	4
  9771  017CA8  6EE6               	movwf	postinc1,c
  9772  017CAA  ECAC  F0D1         	call	_sprintf	;wreg free
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;main.c: 480:  update_lcd(0);
  9776  017CAE  0E00               	movlw	0
  9777  017CB0  6EE6               	movwf	postinc1,c
  9778  017CB2  EC24  F0D1         	call	_update_lcd	;wreg free
  9779                           
  9780                           ;main.c: 481:  WaitMs(2000);
  9781  017CB6  0ED0               	movlw	208
  9782  017CB8  6EE6               	movwf	postinc1,c
  9783  017CBA  0E07               	movlw	7
  9784  017CBC  6EE6               	movwf	postinc1,c
  9785  017CBE  ECDB  F0E0         	call	_WaitMs	;wreg free
  9786                           
  9787                           ;main.c: 482:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9788  017CC2  0E00               	movlw	0
  9789  017CC4  6EE6               	movwf	postinc1,c
  9790  017CC6  0E04               	movlw	4
  9791  017CC8  6EE6               	movwf	postinc1,c
  9792  017CCA  EC31  F0D2         	call	_spinners	;wreg free
  9793  017CCE  5001               	movf	btemp^0,w,c
  9794  017CD0  6EE6               	movwf	postinc1,c
  9795  017CD2  0E00               	movlw	0
  9796  017CD4  6EE6               	movwf	postinc1,c
  9797  017CD6  0E49               	movlw	low STR_46
  9798  017CD8  6EE6               	movwf	postinc1,c
  9799  017CDA  0EFF               	movlw	high STR_46
  9800  017CDC  6EE6               	movwf	postinc1,c
  9801  017CDE  0E00               	movlw	0
  9802  017CE0  6EE6               	movwf	postinc1,c
  9803  017CE2  0E02               	movlw	2
  9804  017CE4  6EE6               	movwf	postinc1,c
  9805  017CE6  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9806  017CEA  0060  F007  FFE6   	movff	btemp,postinc1
  9807  017CF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9808  017CF6  0E06               	movlw	6
  9809  017CF8  6EE6               	movwf	postinc1,c
  9810  017CFA  ECAC  F0D1         	call	_sprintf	;wreg free
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;main.c: 483:  update_lcd(0);
  9814  017CFE  0E00               	movlw	0
  9815  017D00  6EE6               	movwf	postinc1,c
  9816  017D02  EC24  F0D1         	call	_update_lcd	;wreg free
  9817  017D06                     l13551:
  9818                           
  9819                           ;main.c: 485:   if (++x > 50)
  9820                           ;stkvar	_x @ sp[(-1)+0]
  9821  017D06  0EFF               	movlw	-1
  9822  017D08  2AE3               	incf	plusw1,f,c
  9823  017D0A  0EFF               	movlw	-1
  9824  017D0C  006F FF8C  F001    	movff	plusw1,btemp
  9825  017D12  0E32               	movlw	50
  9826  017D14  6401               	cpfsgt	btemp^0,c
  9827  017D16  D001               	goto	l13555
  9828  017D18  D0C2               	goto	l1398
  9829  017D1A                     l13555:
  9830                           
  9831                           ;main.c: 487:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9832  017D1A  0E00               	movlw	0
  9833  017D1C  6EE6               	movwf	postinc1,c
  9834  017D1E  0E04               	movlw	4
  9835  017D20  6EE6               	movwf	postinc1,c
  9836  017D22  EC31  F0D2         	call	_spinners	;wreg free
  9837  017D26  5001               	movf	btemp^0,w,c
  9838  017D28  6EE6               	movwf	postinc1,c
  9839  017D2A  0E00               	movlw	0
  9840  017D2C  6EE6               	movwf	postinc1,c
  9841  017D2E  0E49               	movlw	low STR_46
  9842  017D30  6EE6               	movwf	postinc1,c
  9843  017D32  0EFF               	movlw	high STR_46
  9844  017D34  6EE6               	movwf	postinc1,c
  9845  017D36  0E00               	movlw	0
  9846  017D38  6EE6               	movwf	postinc1,c
  9847  017D3A  0E02               	movlw	2
  9848  017D3C  6EE6               	movwf	postinc1,c
  9849  017D3E  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9850  017D42  0060  F007  FFE6   	movff	btemp,postinc1
  9851  017D48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9852  017D4E  0E06               	movlw	6
  9853  017D50  6EE6               	movwf	postinc1,c
  9854  017D52  ECAC  F0D1         	call	_sprintf	;wreg free
  9855                           
  9856                           ;main.c: 488:   update_lcd(0);
  9857  017D56  0E00               	movlw	0
  9858  017D58  6EE6               	movwf	postinc1,c
  9859  017D5A  EC24  F0D1         	call	_update_lcd	;wreg free
  9860                           
  9861                           ;main.c: 489:   WaitMs(100);
  9862  017D5E  0E64               	movlw	100
  9863  017D60  6EE6               	movwf	postinc1,c
  9864  017D62  0E00               	movlw	0
  9865  017D64  6EE6               	movwf	postinc1,c
  9866  017D66  ECDB  F0E0         	call	_WaitMs	;wreg free
  9867                           
  9868                           ;main.c: 490:  } while (get_switch(SCALIB));
  9869  017D6A  0E04               	movlw	4
  9870  017D6C  6EE6               	movwf	postinc1,c
  9871  017D6E  ECD5  F0E1         	call	_get_switch	;wreg free
  9872  017D72  5001               	movf	btemp^0,w,c
  9873  017D74  A4D8               	btfss	status,2,c
  9874  017D76  D7C7               	goto	l13551
  9875                           
  9876                           ;main.c: 492:  if (cal_current_zero(0)) {
  9877  017D78  0E00               	movlw	0
  9878  017D7A  6EE6               	movwf	postinc1,c
  9879  017D7C  ECD5  F0D4         	call	_cal_current_zero	;wreg free
  9880  017D80  5001               	movf	btemp^0,w,c
  9881  017D82  B4D8               	btfsc	status,2,c
  9882  017D84  D04B               	goto	l13575
  9883                           
  9884                           ;main.c: 493:   cal_current_zero(1);
  9885  017D86  0E01               	movlw	1
  9886  017D88  6EE6               	movwf	postinc1,c
  9887  017D8A  ECD5  F0D4         	call	_cal_current_zero	;wreg free
  9888                           
  9889                           ;main.c: 494:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9890  017D8E  0E0A               	movlw	low STR_43
  9891  017D90  6EE6               	movwf	postinc1,c
  9892  017D92  0EFF               	movlw	high STR_43
  9893  017D94  6EE6               	movwf	postinc1,c
  9894  017D96  0E00               	movlw	0
  9895  017D98  6EE6               	movwf	postinc1,c
  9896  017D9A  0E00               	movlw	0
  9897  017D9C  6EE6               	movwf	postinc1,c
  9898  017D9E  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9899  017DA2  0060  F007  FFE6   	movff	btemp,postinc1
  9900  017DA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9901  017DAE  0E04               	movlw	4
  9902  017DB0  6EE6               	movwf	postinc1,c
  9903  017DB2  ECAC  F0D1         	call	_sprintf	;wreg free
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;main.c: 495:   sprintf(get_vterm_ptr(1, 0), "Sensors             ");
  9907  017DB6  0E38               	movlw	low STR_49
  9908  017DB8  6EE6               	movwf	postinc1,c
  9909  017DBA  0EFE               	movlw	high STR_49
  9910  017DBC  6EE6               	movwf	postinc1,c
  9911  017DBE  0E00               	movlw	0
  9912  017DC0  6EE6               	movwf	postinc1,c
  9913  017DC2  0E01               	movlw	1
  9914  017DC4  6EE6               	movwf	postinc1,c
  9915  017DC6  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9916  017DCA  0060  F007  FFE6   	movff	btemp,postinc1
  9917  017DD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9918  017DD6  0E04               	movlw	4
  9919  017DD8  6EE6               	movwf	postinc1,c
  9920  017DDA  ECAC  F0D1         	call	_sprintf	;wreg free
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;main.c: 496:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
  9924  017DDE  0EE0               	movlw	low STR_50
  9925  017DE0  6EE6               	movwf	postinc1,c
  9926  017DE2  0EFE               	movlw	high STR_50
  9927  017DE4  6EE6               	movwf	postinc1,c
  9928  017DE6  0E00               	movlw	0
  9929  017DE8  6EE6               	movwf	postinc1,c
  9930  017DEA  0E02               	movlw	2
  9931  017DEC  6EE6               	movwf	postinc1,c
  9932  017DEE  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9933  017DF2  0060  F007  FFE6   	movff	btemp,postinc1
  9934  017DF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9935  017DFE  0E04               	movlw	4
  9936  017E00  6EE6               	movwf	postinc1,c
  9937  017E02  ECAC  F0D1         	call	_sprintf	;wreg free
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;main.c: 497:   update_lcd(0);
  9941  017E06  0E00               	movlw	0
  9942  017E08  6EE6               	movwf	postinc1,c
  9943  017E0A  EC24  F0D1         	call	_update_lcd	;wreg free
  9944  017E0E                     l13573:
  9945                           
  9946                           ;main.c: 498:   WaitMs(2000);
  9947  017E0E  0ED0               	movlw	208
  9948  017E10  6EE6               	movwf	postinc1,c
  9949  017E12  0E07               	movlw	7
  9950  017E14  6EE6               	movwf	postinc1,c
  9951  017E16  ECDB  F0E0         	call	_WaitMs	;wreg free
  9952                           
  9953                           ;main.c: 499:  } else {
  9954  017E1A  D041               	goto	l1398
  9955  017E1C                     l13575:
  9956                           
  9957                           ;main.c: 500:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9958  017E1C  0E0A               	movlw	low STR_43
  9959  017E1E  6EE6               	movwf	postinc1,c
  9960  017E20  0EFF               	movlw	high STR_43
  9961  017E22  6EE6               	movwf	postinc1,c
  9962  017E24  0E00               	movlw	0
  9963  017E26  6EE6               	movwf	postinc1,c
  9964  017E28  0E00               	movlw	0
  9965  017E2A  6EE6               	movwf	postinc1,c
  9966  017E2C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9967  017E30  0060  F007  FFE6   	movff	btemp,postinc1
  9968  017E36  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9969  017E3C  0E04               	movlw	4
  9970  017E3E  6EE6               	movwf	postinc1,c
  9971  017E40  ECAC  F0D1         	call	_sprintf	;wreg free
  9972                           
  9973                           ;main.c: 501:   sprintf(get_vterm_ptr(1, 0), "Sensors             ");
  9974  017E44  0E38               	movlw	low STR_49
  9975  017E46  6EE6               	movwf	postinc1,c
  9976  017E48  0EFE               	movlw	high STR_49
  9977  017E4A  6EE6               	movwf	postinc1,c
  9978  017E4C  0E00               	movlw	0
  9979  017E4E  6EE6               	movwf	postinc1,c
  9980  017E50  0E01               	movlw	1
  9981  017E52  6EE6               	movwf	postinc1,c
  9982  017E54  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9983  017E58  0060  F007  FFE6   	movff	btemp,postinc1
  9984  017E5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9985  017E64  0E04               	movlw	4
  9986  017E66  6EE6               	movwf	postinc1,c
  9987  017E68  ECAC  F0D1         	call	_sprintf	;wreg free
  9988                           
  9989                           ;main.c: 502:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
  9990  017E6C  0ECB               	movlw	low STR_53
  9991  017E6E  6EE6               	movwf	postinc1,c
  9992  017E70  0EFE               	movlw	high STR_53
  9993  017E72  6EE6               	movwf	postinc1,c
  9994  017E74  0E00               	movlw	0
  9995  017E76  6EE6               	movwf	postinc1,c
  9996  017E78  0E02               	movlw	2
  9997  017E7A  6EE6               	movwf	postinc1,c
  9998  017E7C  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
  9999  017E80  0060  F007  FFE6   	movff	btemp,postinc1
 10000  017E86  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10001  017E8C  0E04               	movlw	4
 10002  017E8E  6EE6               	movwf	postinc1,c
 10003  017E90  ECAC  F0D1         	call	_sprintf	;wreg free
 10004                           
 10005                           ;main.c: 503:   update_lcd(0);
 10006  017E94  0E00               	movlw	0
 10007  017E96  6EE6               	movwf	postinc1,c
 10008  017E98  EC24  F0D1         	call	_update_lcd	;wreg free
 10009  017E9C  D7B8               	goto	l13573
 10010  017E9E                     l1398:
 10011                           
 10012                           ; _current_sensor_cal: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10013  017E9E  52E5               	movf	postdec1,f,c
 10014  017EA0  0012               	return		;funcret
 10015  017EA2                     __end_of_current_sensor_cal:
 10016                           	opt callstack 0
 10017                           
 10018 ;; *************** function _spinners *****************
 10019 ;; Defined at:
 10020 ;;		line 146 in file "mbmc.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  shape           1  [STACK] unsigned char 
 10023 ;;  reset           1  [STACK] const unsigned char 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  c               1  [STACK] unsigned char 
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1  [STACK] unsigned char 
 10028 ;; Registers used:
 10029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10039 ;;Total ram usage:        0 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:   16
 10042 ;; This function calls:
 10043 ;;		_strlen
 10044 ;; This function is called by:
 10045 ;;		_main
 10046 ;;		_current_sensor_cal
 10047 ;; This function uses a reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text31
 10051  01A462                     __ptext31:
 10052                           	opt callstack 0
 10053  01A462                     _spinners:
 10054                           	opt callstack 0
 10055                           
 10056                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10057  01A462  52E6               	movf	postinc1,f,c
 10058                           
 10059                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 10060                           ;stkvar	_shape @ sp[(-1)+-1]
 10061                           
 10062                           ;incstack = 0
 10063  01A464  0EFE               	movlw	-2
 10064  01A466  006F FF8C  F001    	movff	plusw1,btemp
 10065  01A46C  0E05               	movlw	5
 10066  01A46E  6401               	cpfsgt	btemp^0,c
 10067  01A470  D002               	goto	l1992
 10068                           
 10069                           ;mbmc.c: 152:   shape = 0;
 10070                           ;stkvar	_shape @ sp[(-1)+-1]
 10071  01A472  0EFE               	movlw	-2
 10072  01A474  6AE3               	clrf	plusw1,c
 10073  01A476                     l1992:
 10074                           
 10075                           ;mbmc.c: 153:  if (reset)
 10076                           ;stkvar	_reset @ sp[(-1)+-2]
 10077  01A476  0EFD               	movlw	-3
 10078  01A478  50E3               	movf	plusw1,w,c
 10079  01A47A  B4D8               	btfsc	status,2,c
 10080  01A47C  D00C               	goto	l10759
 10081                           
 10082                           ;mbmc.c: 154:   s[shape] = 0;
 10083                           ;stkvar	_shape @ sp[(-1)+-1]
 10084  01A47E  0EFE               	movlw	-2
 10085  01A480  50E3               	movf	plusw1,w,c
 10086  01A482  6E0B               	movwf	(btemp+10)^0,c
 10087  01A484  6A0C               	clrf	(btemp+11)^0,c
 10088  01A486  0EE4               	movlw	low spinners@s
 10089  01A488  240B               	addwf	(btemp+10)^0,w,c
 10090  01A48A  6ED9               	movwf	fsr2l,c
 10091  01A48C  0E01               	movlw	high spinners@s
 10092  01A48E  200C               	addwfc	(btemp+11)^0,w,c
 10093  01A490  6EDA               	movwf	fsr2h,c
 10094  01A492  0E00               	movlw	0
 10095  01A494  6EDF               	movwf	indf2,c
 10096  01A496                     l10759:
 10097                           
 10098                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 10099                           ;stkvar	_shape @ sp[(-1)+-1]
 10100  01A496  0EFE               	movlw	-2
 10101  01A498  50E3               	movf	plusw1,w,c
 10102  01A49A  0D14               	mullw	20
 10103  01A49C  0EAD               	movlw	low _spin
 10104  01A49E  6E0B               	movwf	(btemp+10)^0,c
 10105  01A4A0  0EFA               	movlw	high _spin
 10106  01A4A2  6E0C               	movwf	(btemp+11)^0,c
 10107  01A4A4  50F3               	movf	243,w,c
 10108  01A4A6  260B               	addwf	(btemp+10)^0,f,c
 10109  01A4A8  50F4               	movf	244,w,c
 10110  01A4AA  220C               	addwfc	(btemp+11)^0,f,c
 10111                           
 10112                           ;stkvar	_shape @ sp[(-1)+-1]
 10113  01A4AC  0EFE               	movlw	-2
 10114  01A4AE  50E3               	movf	plusw1,w,c
 10115  01A4B0  6E09               	movwf	(btemp+8)^0,c
 10116  01A4B2  6A0A               	clrf	(btemp+9)^0,c
 10117  01A4B4  0EE4               	movlw	low spinners@s
 10118  01A4B6  2409               	addwf	(btemp+8)^0,w,c
 10119  01A4B8  6ED9               	movwf	fsr2l,c
 10120  01A4BA  0E01               	movlw	high spinners@s
 10121  01A4BC  200A               	addwfc	(btemp+9)^0,w,c
 10122  01A4BE  6EDA               	movwf	fsr2h,c
 10123  01A4C0  50DF               	movf	indf2,w,c
 10124  01A4C2  260B               	addwf	(btemp+10)^0,f,c
 10125  01A4C4  0E00               	movlw	0
 10126  01A4C6  220C               	addwfc	(btemp+11)^0,f,c
 10127  01A4C8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10128  01A4CE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10129  01A4D4                     	if	0	;tblptru may be non-zero
 10130  01A4D4                     	endif
 10131  01A4D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10132  01A4D4  0E00               	movlw	low (__mediumconst shr (0+16))
 10133  01A4D6  6EF8               	movwf	tblptru,c
 10134  01A4D8                     	endif
 10135                           
 10136                           ;stkvar	_c @ sp[(-1)+0]
 10137  01A4D8  0008               	tblrd		*
 10138  01A4DA  0EFF               	movlw	-1
 10139  01A4DC  006F FFD7 FFE3     	movff	tablat,plusw1
 10140                           
 10141                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 10142                           ;stkvar	_shape @ sp[(-1)+-1]
 10143  01A4E2  0EFE               	movlw	-2
 10144  01A4E4  50E3               	movf	plusw1,w,c
 10145  01A4E6  0D14               	mullw	20
 10146  01A4E8  0EAD               	movlw	low _spin
 10147  01A4EA  6E0B               	movwf	(btemp+10)^0,c
 10148  01A4EC  0EFA               	movlw	high _spin
 10149  01A4EE  6E0C               	movwf	(btemp+11)^0,c
 10150  01A4F0  50F3               	movf	243,w,c
 10151  01A4F2  260B               	addwf	(btemp+10)^0,f,c
 10152  01A4F4  50F4               	movf	244,w,c
 10153  01A4F6  220C               	addwfc	(btemp+11)^0,f,c
 10154  01A4F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10155  01A4FE  0060  F033  FFE6   	movff	btemp+11,postinc1
 10156  01A504  EC57  F0D8         	call	_strlen	;wreg free
 10157                           
 10158                           ;stkvar	_shape @ sp[(-1)+-1]
 10159  01A508  0EFE               	movlw	-2
 10160  01A50A  50E3               	movf	plusw1,w,c
 10161  01A50C  6E0B               	movwf	(btemp+10)^0,c
 10162  01A50E  6A0C               	clrf	(btemp+11)^0,c
 10163  01A510  0EE4               	movlw	low spinners@s
 10164  01A512  240B               	addwf	(btemp+10)^0,w,c
 10165  01A514  6ED9               	movwf	fsr2l,c
 10166  01A516  0E01               	movlw	high spinners@s
 10167  01A518  200C               	addwfc	(btemp+11)^0,w,c
 10168  01A51A  6EDA               	movwf	fsr2h,c
 10169  01A51C  2ADF               	incf	indf2,f,c
 10170  01A51E  50DF               	movf	indf2,w,c
 10171  01A520  6E0B               	movwf	(btemp+10)^0,c
 10172  01A522  6A0C               	clrf	(btemp+11)^0,c
 10173  01A524  5001               	movf	btemp^0,w,c
 10174  01A526  5C0B               	subwf	(btemp+10)^0,w,c
 10175  01A528  5002               	movf	(btemp+1)^0,w,c
 10176  01A52A  580C               	subwfb	(btemp+11)^0,w,c
 10177  01A52C  A0D8               	btfss	status,0,c
 10178  01A52E  D00C               	goto	l10765
 10179                           
 10180                           ;mbmc.c: 157:   s[shape] = 0;
 10181                           ;stkvar	_shape @ sp[(-1)+-1]
 10182  01A530  0EFE               	movlw	-2
 10183  01A532  50E3               	movf	plusw1,w,c
 10184  01A534  6E0B               	movwf	(btemp+10)^0,c
 10185  01A536  6A0C               	clrf	(btemp+11)^0,c
 10186  01A538  0EE4               	movlw	low spinners@s
 10187  01A53A  240B               	addwf	(btemp+10)^0,w,c
 10188  01A53C  6ED9               	movwf	fsr2l,c
 10189  01A53E  0E01               	movlw	high spinners@s
 10190  01A540  200C               	addwfc	(btemp+11)^0,w,c
 10191  01A542  6EDA               	movwf	fsr2h,c
 10192  01A544  0E00               	movlw	0
 10193  01A546  6EDF               	movwf	indf2,c
 10194  01A548                     l10765:
 10195                           
 10196                           ;mbmc.c: 158:  return c;
 10197                           ;stkvar	_c @ sp[(-1)+0]
 10198  01A548  0EFF               	movlw	-1
 10199  01A54A  006F FF8C  F001    	movff	plusw1,btemp
 10200                           
 10201                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 10202  01A550  52E5               	movf	postdec1,f,c
 10203  01A552  52E5               	movf	postdec1,f,c
 10204  01A554  52E5               	movf	postdec1,f,c
 10205  01A556  0012               	return		;funcret
 10206  01A558                     __end_of_spinners:
 10207                           	opt callstack 0
 10208                           
 10209 ;; *************** function _get_switch *****************
 10210 ;; Defined at:
 10211 ;;		line 18 in file "dio.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  i               1  [STACK] const unsigned char 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;		None
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  1  [STACK] enum E17021
 10218 ;; Registers used:
 10219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10229 ;;Total ram usage:        0 bytes
 10230 ;; Hardware stack levels used:    1
 10231 ;; Hardware stack levels required when called:   15
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		_main
 10236 ;;		_current_sensor_cal
 10237 ;;		_hid_input
 10238 ;; This function uses a reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text32
 10242  01C3AA                     __ptext32:
 10243                           	opt callstack 0
 10244  01C3AA                     _get_switch:
 10245                           	opt callstack 13
 10246                           
 10247                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 10248                           ;stkvar	_i @ sp[(0)+-1]
 10249                           
 10250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10251                           ;incstack = 0
 10252  01C3AA  0EFF               	movlw	-1
 10253  01C3AC  006F FF8C  F001    	movff	plusw1,btemp
 10254  01C3B2  0E05               	movlw	5
 10255  01C3B4  6401               	cpfsgt	btemp^0,c
 10256  01C3B6  D002               	goto	l10259
 10257                           
 10258                           ;dio.c: 21:   return SW_OFF;
 10259  01C3B8  0E00               	movlw	0
 10260  01C3BA  D00A               	goto	L8
 10261  01C3BC                     l10259:
 10262                           
 10263                           ;dio.c: 23:  return S.button[i].sw;
 10264                           ;stkvar	_i @ sp[(0)+-1]
 10265  01C3BC  0EFF               	movlw	-1
 10266  01C3BE  50E3               	movf	plusw1,w,c
 10267  01C3C0  0D05               	mullw	5
 10268  01C3C2  0E54               	movlw	low _S
 10269  01C3C4  24F3               	addwf	243,w,c
 10270  01C3C6  6ED9               	movwf	fsr2l,c
 10271  01C3C8  0E02               	movlw	high _S
 10272  01C3CA  20F4               	addwfc	prodh,w,c
 10273  01C3CC  6EDA               	movwf	fsr2h,c
 10274  01C3CE  50DF               	movf	indf2,w,c
 10275  01C3D0                     L8:
 10276  01C3D0  6E01               	movwf	btemp^0,c
 10277                           
 10278                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10279  01C3D2  52E5               	movf	postdec1,f,c
 10280  01C3D4  0012               	return		;funcret
 10281  01C3D6                     __end_of_get_switch:
 10282                           	opt callstack 0
 10283                           
 10284 ;; *************** function _cal_current_zero *****************
 10285 ;; Defined at:
 10286 ;;		line 317 in file "daq.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;  mode            1  [STACK] _Bool 
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;  a200            2  [STACK] short 
 10291 ;;  a100            2  [STACK] short 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1  [STACK] _Bool 
 10294 ;; Registers used:
 10295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10305 ;;Total ram usage:        0 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:   16
 10308 ;; This function calls:
 10309 ;;		_check_range
 10310 ;;		_get_raw_result
 10311 ;; This function is called by:
 10312 ;;		_current_sensor_cal
 10313 ;; This function uses a reentrant model
 10314 ;;
 10315                           
 10316                           	psect	text33
 10317  01A9AA                     __ptext33:
 10318                           	opt callstack 0
 10319  01A9AA                     _cal_current_zero:
 10320                           	opt callstack 0
 10321                           
 10322                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10323  01A9AA  52E6               	movf	postinc1,f,c
 10324  01A9AC  52E6               	movf	postinc1,f,c
 10325  01A9AE  52E6               	movf	postinc1,f,c
 10326  01A9B0  52E6               	movf	postinc1,f,c
 10327                           
 10328                           ;daq.c: 317: _Bool cal_current_zero(_Bool mode);daq.c: 318: {;daq.c: 319:  int16_t a100,
      +                           a200;;daq.c: 321:  a100 = get_raw_result(C_PV);
 10329                           
 10330                           ;incstack = 0
 10331  01A9B2  0E01               	movlw	1
 10332  01A9B4  6EE6               	movwf	postinc1,c
 10333  01A9B6  EC55  F0E4         	call	_get_raw_result	;wreg free
 10334                           
 10335                           ;stkvar	_a100 @ sp[(-4)+2]
 10336  01A9BA  0EFE               	movlw	-2
 10337  01A9BC  0060  F007  FFE3   	movff	btemp,plusw1
 10338  01A9C2  0EFF               	movlw	-1
 10339  01A9C4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10340                           
 10341                           ;daq.c: 322:  if (!check_range(a100, 100, 4000))
 10342  01A9CA  0EA0               	movlw	160
 10343  01A9CC  6EE6               	movwf	postinc1,c
 10344  01A9CE  0E0F               	movlw	15
 10345  01A9D0  6EE6               	movwf	postinc1,c
 10346  01A9D2  0E64               	movlw	100
 10347  01A9D4  6EE6               	movwf	postinc1,c
 10348  01A9D6  0E00               	movlw	0
 10349  01A9D8  6EE6               	movwf	postinc1,c
 10350                           
 10351                           ;stkvar	_a100 @ sp[(-8)+2]
 10352  01A9DA  0EFA               	movlw	-6
 10353  01A9DC  006F FF8F FFE6     	movff	plusw1,postinc1
 10354  01A9E2  006F FF8F FFE6     	movff	plusw1,postinc1
 10355  01A9E8  EC4E  F0DA         	call	_check_range	;wreg free
 10356  01A9EC  5001               	movf	btemp^0,w,c
 10357  01A9EE  A4D8               	btfss	status,2,c
 10358  01A9F0  D002               	goto	l10809
 10359  01A9F2                     u9860:
 10360                           
 10361                           ;daq.c: 323:   return 0;
 10362  01A9F2  0E00               	movlw	0
 10363  01A9F4  D025               	goto	L9
 10364  01A9F6                     l10809:
 10365                           
 10366                           ;daq.c: 324:  a200 = get_raw_result(C_BATT);
 10367  01A9F6  0E00               	movlw	0
 10368  01A9F8  6EE6               	movwf	postinc1,c
 10369  01A9FA  EC55  F0E4         	call	_get_raw_result	;wreg free
 10370                           
 10371                           ;stkvar	_a200 @ sp[(-4)+0]
 10372  01A9FE  0EFC               	movlw	-4
 10373  01AA00  0060  F007  FFE3   	movff	btemp,plusw1
 10374  01AA06  0EFD               	movlw	-3
 10375  01AA08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10376                           
 10377                           ;daq.c: 325:  if (!check_range(a200, 100, 4000))
 10378  01AA0E  0EA0               	movlw	160
 10379  01AA10  6EE6               	movwf	postinc1,c
 10380  01AA12  0E0F               	movlw	15
 10381  01AA14  6EE6               	movwf	postinc1,c
 10382  01AA16  0E64               	movlw	100
 10383  01AA18  6EE6               	movwf	postinc1,c
 10384  01AA1A  0E00               	movlw	0
 10385  01AA1C  6EE6               	movwf	postinc1,c
 10386                           
 10387                           ;stkvar	_a200 @ sp[(-8)+0]
 10388  01AA1E  0EF8               	movlw	-8
 10389  01AA20  006F FF8F FFE6     	movff	plusw1,postinc1
 10390  01AA26  006F FF8F FFE6     	movff	plusw1,postinc1
 10391  01AA2C  EC4E  F0DA         	call	_check_range	;wreg free
 10392  01AA30  5001               	movf	btemp^0,w,c
 10393  01AA32  B4D8               	btfsc	status,2,c
 10394  01AA34  D7DE               	goto	u9860
 10395                           
 10396                           ;daq.c: 328:  if (!mode)
 10397                           ;stkvar	_mode @ sp[(-4)+-1]
 10398  01AA36  0EFB               	movlw	-5
 10399  01AA38  50E3               	movf	plusw1,w,c
 10400  01AA3A  A4D8               	btfss	status,2,c
 10401  01AA3C  D003               	goto	l10823
 10402  01AA3E                     u9880:
 10403                           
 10404                           ;daq.c: 329:   return 1;
 10405  01AA3E  0E01               	movlw	1
 10406  01AA40                     L9:
 10407  01AA40  6E01               	movwf	btemp^0,c
 10408  01AA42  D011               	goto	l1910
 10409  01AA44                     l10823:
 10410                           
 10411                           ;daq.c: 331:  R.n_offset[1] = a100;
 10412                           ;stkvar	_a100 @ sp[(-4)+2]
 10413  01AA44  0EFE               	movlw	-2
 10414  01AA46  006F FF8C  F0D7    	movff	plusw1,_R+40	;volatile
 10415  01AA4C  0EFF               	movlw	-1
 10416  01AA4E  006F FF8C  F0D8    	movff	plusw1,_R+41	;volatile
 10417                           
 10418                           ;daq.c: 332:  R.n_offset[0] = a200;
 10419                           ;stkvar	_a200 @ sp[(-4)+0]
 10420  01AA54  0EFC               	movlw	-4
 10421  01AA56  006F FF8C  F0D5    	movff	plusw1,_R+38	;volatile
 10422  01AA5C  0EFD               	movlw	-3
 10423  01AA5E  006F FF8C  F0D6    	movff	plusw1,_R+39	;volatile
 10424  01AA64  D7EC               	goto	u9880
 10425  01AA66                     l1910:
 10426                           
 10427                           ; _cal_current_zero: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10428  01AA66  0EFB               	movlw	251
 10429  01AA68  26E1               	addwf	fsr1l,f,c
 10430  01AA6A  0EFF               	movlw	255
 10431  01AA6C  22E2               	addwfc	fsr1h,f,c
 10432  01AA6E  0012               	return		;funcret
 10433  01AA70                     __end_of_cal_current_zero:
 10434                           	opt callstack 0
 10435                           
 10436 ;; *************** function _check_range *****************
 10437 ;; Defined at:
 10438 ;;		line 305 in file "daq.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;  value           2  [STACK] short 
 10441 ;;  window          2  [STACK] short 
 10442 ;;  standard        2  [STACK] short 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;		None
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  1  [STACK] _Bool 
 10447 ;; Registers used:
 10448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 10449 ;; Tracked objects:
 10450 ;;		On entry : 0/0
 10451 ;;		On exit  : 0/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10458 ;;Total ram usage:        0 bytes
 10459 ;; Hardware stack levels used:    1
 10460 ;; Hardware stack levels required when called:   15
 10461 ;; This function calls:
 10462 ;;		Nothing
 10463 ;; This function is called by:
 10464 ;;		_cal_current_zero
 10465 ;; This function uses a reentrant model
 10466 ;;
 10467                           
 10468                           	psect	text34
 10469  01B49C                     __ptext34:
 10470                           	opt callstack 0
 10471  01B49C                     _check_range:
 10472                           	opt callstack 13
 10473                           
 10474                           ;daq.c: 305: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 306: {;daq.c: 307:  if (value > (standard + window))
 10475                           ;stkvar	_value @ sp[(0)+-2]
 10476                           ;stkvar	_window @ sp[(0)+-4]
 10477                           ;stkvar	_standard @ sp[(0)+-6]
 10478                           
 10479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10480                           ;incstack = 0
 10481  01B49C  0EFA               	movlw	-6
 10482  01B49E  006F FF8C  F00B    	movff	plusw1,btemp+10
 10483  01B4A4  0EFB               	movlw	-5
 10484  01B4A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10485  01B4AC  0EFC               	movlw	-4
 10486  01B4AE  50E3               	movf	plusw1,w,c
 10487  01B4B0  260B               	addwf	(btemp+10)^0,f,c
 10488  01B4B2  0EFD               	movlw	-3
 10489  01B4B4  50E3               	movf	plusw1,w,c
 10490  01B4B6  220C               	addwfc	(btemp+11)^0,f,c
 10491  01B4B8  0EFE               	movlw	-2
 10492  01B4BA  50E3               	movf	plusw1,w,c
 10493  01B4BC  5C0B               	subwf	(btemp+10)^0,w,c
 10494  01B4BE  500C               	movf	(btemp+11)^0,w,c
 10495  01B4C0  0A80               	xorlw	128
 10496  01B4C2  6E01               	movwf	btemp^0,c
 10497  01B4C4  0EFF               	movlw	-1
 10498  01B4C6  50E3               	movf	plusw1,w,c
 10499  01B4C8  0A80               	xorlw	128
 10500  01B4CA  5801               	subwfb	btemp^0,w,c
 10501  01B4CC  B0D8               	btfsc	status,0,c
 10502  01B4CE  D002               	goto	l10317
 10503  01B4D0                     u9650:
 10504                           
 10505                           ;daq.c: 308:   return 0;
 10506  01B4D0  0E00               	movlw	0
 10507  01B4D2  D01E               	goto	L10
 10508  01B4D4                     l10317:
 10509                           
 10510                           ;daq.c: 309:  if (value < (standard - window))
 10511                           ;stkvar	_window @ sp[(0)+-4]
 10512                           ;stkvar	_standard @ sp[(0)+-6]
 10513  01B4D4  0EFA               	movlw	-6
 10514  01B4D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10515  01B4DC  0EFB               	movlw	-5
 10516  01B4DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10517  01B4E4  0EFC               	movlw	-4
 10518  01B4E6  50E3               	movf	plusw1,w,c
 10519  01B4E8  5E0B               	subwf	(btemp+10)^0,f,c
 10520  01B4EA  0EFD               	movlw	-3
 10521  01B4EC  50E3               	movf	plusw1,w,c
 10522  01B4EE  5A0C               	subwfb	(btemp+11)^0,f,c
 10523                           
 10524                           ;stkvar	_value @ sp[(0)+-2]
 10525  01B4F0  0EFE               	movlw	-2
 10526  01B4F2  006F FF8C  F001    	movff	plusw1,btemp
 10527  01B4F8  500B               	movf	(btemp+10)^0,w,c
 10528  01B4FA  5C01               	subwf	btemp^0,w,c
 10529  01B4FC  0EFF               	movlw	-1
 10530  01B4FE  50E3               	movf	plusw1,w,c
 10531  01B500  0A80               	xorlw	128
 10532  01B502  6E01               	movwf	btemp^0,c
 10533  01B504  500C               	movf	(btemp+11)^0,w,c
 10534  01B506  0A80               	xorlw	128
 10535  01B508  5801               	subwfb	btemp^0,w,c
 10536  01B50A  A0D8               	btfss	status,0,c
 10537  01B50C  D7E1               	goto	u9650
 10538                           
 10539                           ;daq.c: 311:  return 1;
 10540  01B50E  0E01               	movlw	1
 10541  01B510                     L10:
 10542  01B510  6E01               	movwf	btemp^0,c
 10543                           
 10544                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 10545  01B512  0EFA               	movlw	250
 10546  01B514  26E1               	addwf	fsr1l,f,c
 10547  01B516  0EFF               	movlw	255
 10548  01B518  22E2               	addwfc	fsr1h,f,c
 10549  01B51A  0012               	return		;funcret
 10550  01B51C                     __end_of_check_range:
 10551                           	opt callstack 0
 10552                           
 10553 ;; *************** function _convert_adc_data *****************
 10554 ;; Defined at:
 10555 ;;		line 51 in file "mbmc.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;		None
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;  i               1  [STACK] unsigned char 
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  1  [STACK] void 
 10562 ;; Registers used:
 10563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/1
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10573 ;;Total ram usage:        0 bytes
 10574 ;; Hardware stack levels used:    1
 10575 ;; Hardware stack levels required when called:   18
 10576 ;; This function calls:
 10577 ;;		_conv_raw_result
 10578 ;;		_lp_filter
 10579 ;; This function is called by:
 10580 ;;		_main
 10581 ;; This function uses a reentrant model
 10582 ;;
 10583                           
 10584                           	psect	text35
 10585  01ABEE                     __ptext35:
 10586                           	opt callstack 0
 10587  01ABEE                     _convert_adc_data:
 10588                           	opt callstack 0
 10589                           
 10590                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10591  01ABEE  52E6               	movf	postinc1,f,c
 10592                           
 10593                           ;mbmc.c: 53:  uint8_t i = 0;
 10594                           ;stkvar	_i @ sp[(-1)+0]
 10595                           
 10596                           ;incstack = 0
 10597  01ABF0  0EFF               	movlw	-1
 10598  01ABF2  6AE3               	clrf	plusw1,c
 10599  01ABF4                     l11515:
 10600                           
 10601                           ;mbmc.c: 56:   if (V.calib) {
 10602  01ABF4  0101               	movlb	1	; () banked
 10603  01ABF6  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 10604  01ABF8  B4D8               	btfsc	status,2,c
 10605  01ABFA  D01B               	goto	l11519
 10606                           
 10607                           ; BSR set to: 1
 10608                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 10609  01ABFC  0E01               	movlw	1
 10610  01ABFE  6EE6               	movwf	postinc1,c
 10611                           
 10612                           ;stkvar	_i @ sp[(-2)+0]
 10613  01AC00  0EFE               	movlw	-2
 10614  01AC02  50E3               	movf	plusw1,w,c
 10615  01AC04  6EE6               	movwf	postinc1,c
 10616  01AC06  0E01               	movlw	1
 10617  01AC08  6EE6               	movwf	postinc1,c
 10618                           
 10619                           ;stkvar	_i @ sp[(-4)+0]
 10620  01AC0A  0EFC               	movlw	-4
 10621  01AC0C  50E3               	movf	plusw1,w,c
 10622  01AC0E  6EE6               	movwf	postinc1,c
 10623  01AC10  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10624  01AC14  0060  F007  FFE6   	movff	btemp,postinc1
 10625  01AC1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10626  01AC20  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10627  01AC26  0060  F013  FFE6   	movff	btemp+3,postinc1
 10628  01AC2C  ECBD  F0C5         	call	_lp_filter	;wreg free
 10629  01AC30  D01A               	goto	L11
 10630  01AC32                     l11519:
 10631                           
 10632                           ; BSR set to: 1
 10633                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 10634  01AC32  0E00               	movlw	0
 10635  01AC34  6EE6               	movwf	postinc1,c
 10636                           
 10637                           ;stkvar	_i @ sp[(-2)+0]
 10638  01AC36  0EFE               	movlw	-2
 10639  01AC38  50E3               	movf	plusw1,w,c
 10640  01AC3A  6EE6               	movwf	postinc1,c
 10641  01AC3C  0E00               	movlw	0
 10642  01AC3E  6EE6               	movwf	postinc1,c
 10643                           
 10644                           ;stkvar	_i @ sp[(-4)+0]
 10645  01AC40  0EFC               	movlw	-4
 10646  01AC42  50E3               	movf	plusw1,w,c
 10647  01AC44  6EE6               	movwf	postinc1,c
 10648  01AC46  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10649  01AC4A  0060  F007  FFE6   	movff	btemp,postinc1
 10650  01AC50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10651  01AC56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10652  01AC5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 10653  01AC62  ECBD  F0C5         	call	_lp_filter	;wreg free
 10654  01AC66                     L11:
 10655                           
 10656                           ;stkvar	_i @ sp[(-1)+0]
 10657  01AC66  0EFF               	movlw	-1
 10658  01AC68  50E3               	movf	plusw1,w,c
 10659  01AC6A  0D04               	mullw	4
 10660  01AC6C  0EFF               	movlw	low _C
 10661  01AC6E  24F3               	addwf	243,w,c
 10662  01AC70  6ED9               	movwf	fsr2l,c
 10663  01AC72  0E06               	movlw	high _C
 10664  01AC74  20F4               	addwfc	prodh,w,c
 10665  01AC76  6EDA               	movwf	fsr2h,c
 10666  01AC78  0060  F007  FFDE   	movff	btemp,postinc2
 10667  01AC7E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 10668  01AC84  0060  F00F  FFDE   	movff	btemp+2,postinc2
 10669  01AC8A  0060  F013  FFDE   	movff	btemp+3,postinc2
 10670                           
 10671                           ;mbmc.c: 61:  } while (++i < 16);
 10672                           ;stkvar	_i @ sp[(-1)+0]
 10673  01AC90  0EFF               	movlw	-1
 10674  01AC92  2AE3               	incf	plusw1,f,c
 10675  01AC94  0EFF               	movlw	-1
 10676  01AC96  006F FF8C  F001    	movff	plusw1,btemp
 10677  01AC9C  0E0F               	movlw	15
 10678  01AC9E  6401               	cpfsgt	btemp^0,c
 10679  01ACA0  D7A9               	goto	l11515
 10680                           
 10681                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10682  01ACA2  52E5               	movf	postdec1,f,c
 10683  01ACA4  0012               	return		;funcret
 10684  01ACA6                     __end_of_convert_adc_data:
 10685                           	opt callstack 0
 10686                           
 10687 ;; *************** function _clear_hid_pflags *****************
 10688 ;; Defined at:
 10689 ;;		line 67 in file "hid.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  h               2  [STACK] PTR struct H_data
 10692 ;;		 -> H(9), 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1  [STACK] void 
 10697 ;; Registers used:
 10698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 10699 ;; Tracked objects:
 10700 ;;		On entry : 3E/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10708 ;;Total ram usage:        0 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:   15
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_main
 10715 ;; This function uses a reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text36
 10719  01B83E                     __ptext36:
 10720                           	opt callstack 0
 10721  01B83E                     _clear_hid_pflags:
 10722                           	opt callstack 15
 10723                           
 10724                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 10725                           ;stkvar	_h @ sp[(0)+-2]
 10726                           
 10727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10728                           ;incstack = 0
 10729  01B83E  0EFE               	movlw	-2
 10730  01B840  006F FF8C  F00B    	movff	plusw1,btemp+10
 10731  01B846  0EFF               	movlw	-1
 10732  01B848  006F FF8C  F00C    	movff	plusw1,btemp+11
 10733  01B84E  0E03               	movlw	3
 10734  01B850  240B               	addwf	(btemp+10)^0,w,c
 10735  01B852  6ED9               	movwf	fsr2l,c
 10736  01B854  0E00               	movlw	0
 10737  01B856  200C               	addwfc	(btemp+11)^0,w,c
 10738  01B858  6EDA               	movwf	fsr2h,c
 10739  01B85A  0E00               	movlw	0
 10740  01B85C  6EDF               	movwf	indf2,c
 10741                           
 10742                           ;hid.c: 70:  h->enter_p = SW_OFF;
 10743                           ;stkvar	_h @ sp[(0)+-2]
 10744  01B85E  0EFE               	movlw	-2
 10745  01B860  006F FF8C  F00B    	movff	plusw1,btemp+10
 10746  01B866  0EFF               	movlw	-1
 10747  01B868  006F FF8C  F00C    	movff	plusw1,btemp+11
 10748  01B86E  0E05               	movlw	5
 10749  01B870  240B               	addwf	(btemp+10)^0,w,c
 10750  01B872  6ED9               	movwf	fsr2l,c
 10751  01B874  0E00               	movlw	0
 10752  01B876  200C               	addwfc	(btemp+11)^0,w,c
 10753  01B878  6EDA               	movwf	fsr2h,c
 10754  01B87A  0E00               	movlw	0
 10755  01B87C  6EDF               	movwf	indf2,c
 10756                           
 10757                           ;hid.c: 71:  h->calib_p = SW_OFF;
 10758                           ;stkvar	_h @ sp[(0)+-2]
 10759  01B87E  0EFE               	movlw	-2
 10760  01B880  006F FF8C  F00B    	movff	plusw1,btemp+10
 10761  01B886  0EFF               	movlw	-1
 10762  01B888  006F FF8C  F00C    	movff	plusw1,btemp+11
 10763  01B88E  0E07               	movlw	7
 10764  01B890  240B               	addwf	(btemp+10)^0,w,c
 10765  01B892  6ED9               	movwf	fsr2l,c
 10766  01B894  0E00               	movlw	0
 10767  01B896  200C               	addwfc	(btemp+11)^0,w,c
 10768  01B898  6EDA               	movwf	fsr2h,c
 10769  01B89A  0E00               	movlw	0
 10770  01B89C  6EDF               	movwf	indf2,c
 10771                           
 10772                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 10773  01B89E  52E5               	movf	postdec1,f,c
 10774  01B8A0  52E5               	movf	postdec1,f,c
 10775  01B8A2  0012               	return		;funcret
 10776  01B8A4                     __end_of_clear_hid_pflags:
 10777                           	opt callstack 0
 10778                           
 10779 ;; *************** function _check_help *****************
 10780 ;; Defined at:
 10781 ;;		line 40 in file "mconfig.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  flipper         1  [STACK] const _Bool 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  estatus         1    0        _Bool 
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1  [STACK] _Bool 
 10788 ;; Registers used:
 10789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10790 ;; Tracked objects:
 10791 ;;		On entry : 3F/1
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10799 ;;Total ram usage:        0 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:   28
 10802 ;; This function calls:
 10803 ;;		_StartTimer
 10804 ;;		_TimerDone
 10805 ;;		_display_help
 10806 ;;		_display_info
 10807 ;;		_get_vterm_ptr
 10808 ;;		_help_button
 10809 ;;		_mode_lamp_bright
 10810 ;;		_mode_lamp_dim
 10811 ;;		_set_display_info
 10812 ;;		_set_temp_display_help
 10813 ;;		_set_vterm
 10814 ;;		_sprintf
 10815 ;;		_update_lcd
 10816 ;;		_vterm_dump
 10817 ;; This function is called by:
 10818 ;;		_main
 10819 ;; This function uses a reentrant model
 10820 ;;
 10821                           
 10822                           	psect	text37
 10823  018764                     __ptext37:
 10824                           	opt callstack 0
 10825  018764                     _check_help:
 10826                           	opt callstack 2
 10827                           
 10828                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 10829                           
 10830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10831                           ;incstack = 0
 10832  018764  EC88  F0E0         	call	_help_button	;wreg free
 10833  018768  5001               	movf	btemp^0,w,c
 10834  01876A  B4D8               	btfsc	status,2,c
 10835  01876C  D0D0               	goto	l13667
 10836  01876E  EC33  F0E5         	call	_display_info	;wreg free
 10837  018772  0401               	decf	btemp^0,w,c
 10838  018774  B4D8               	btfsc	status,2,c
 10839  018776  D0CB               	goto	l13667
 10840                           
 10841                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 10842  018778  0EDC               	movlw	220
 10843  01877A  6EE6               	movwf	postinc1,c
 10844  01877C  0E05               	movlw	5
 10845  01877E  6EE6               	movwf	postinc1,c
 10846  018780  0E0B               	movlw	11
 10847  018782  6EE6               	movwf	postinc1,c
 10848  018784  ECEC  F0DF         	call	_StartTimer	;wreg free
 10849                           
 10850                           ;mconfig.c: 48:   if (V.debug)
 10851  018788  0101               	movlb	1	; () banked
 10852  01878A  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 10853                           
 10854                           ; BSR set to: 1
 10855                           ;mconfig.c: 49:    vterm_dump();
 10856  01878C  EC59  F0CE         	call	_vterm_dump	;wreg free
 10857                           
 10858                           ;mconfig.c: 51:   set_vterm(1);
 10859  018790  0E01               	movlw	1
 10860  018792  6EE6               	movwf	postinc1,c
 10861  018794  EC37  F0E4         	call	_set_vterm	;wreg free
 10862                           
 10863                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 10864  018798  EC33  F0E5         	call	_display_info	;wreg free
 10865  01879C  5001               	movf	btemp^0,w,c
 10866  01879E  6EE6               	movwf	postinc1,c
 10867  0187A0  ECDB  F0E4         	call	_set_temp_display_help	;wreg free
 10868                           
 10869                           ; BSR set to: 1
 10870                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 10871  0187A4  0E01               	movlw	1
 10872  0187A6  6EE6               	movwf	postinc1,c
 10873  0187A8  EC46  F0E4         	call	_set_display_info	;wreg free
 10874                           
 10875                           ;mconfig.c: 54:   if (flipper) {
 10876                           ;stkvar	_flipper @ sp[(0)+-1]
 10877  0187AC  0EFF               	movlw	-1
 10878  0187AE  50E3               	movf	plusw1,w,c
 10879  0187B0  B4D8               	btfsc	status,2,c
 10880  0187B2  D019               	goto	l13653
 10881                           
 10882                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 10883  0187B4  0EB3               	movlw	low STR_56
 10884  0187B6  6EE6               	movwf	postinc1,c
 10885  0187B8  0EFF               	movlw	high STR_56
 10886  0187BA  6EE6               	movwf	postinc1,c
 10887  0187BC  0E5D               	movlw	low STR_58
 10888  0187BE  6EE6               	movwf	postinc1,c
 10889  0187C0  0EFF               	movlw	high STR_58
 10890  0187C2  6EE6               	movwf	postinc1,c
 10891  0187C4  0E01               	movlw	1
 10892  0187C6  6EE6               	movwf	postinc1,c
 10893  0187C8  0E00               	movlw	0
 10894  0187CA  6EE6               	movwf	postinc1,c
 10895  0187CC  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 10896  0187D0  0060  F007  FFE6   	movff	btemp,postinc1
 10897  0187D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10898  0187DC  0E06               	movlw	6
 10899  0187DE  6EE6               	movwf	postinc1,c
 10900  0187E0  ECAC  F0D1         	call	_sprintf	;wreg free
 10901                           
 10902                           ;mconfig.c: 56:   } else {
 10903  0187E4  D018               	goto	l1697
 10904  0187E6                     l13653:
 10905                           
 10906                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 10907  0187E6  0EC9               	movlw	low STR_57
 10908  0187E8  6EE6               	movwf	postinc1,c
 10909  0187EA  0EFF               	movlw	high STR_57
 10910  0187EC  6EE6               	movwf	postinc1,c
 10911  0187EE  0E5D               	movlw	low STR_58
 10912  0187F0  6EE6               	movwf	postinc1,c
 10913  0187F2  0EFF               	movlw	high STR_58
 10914  0187F4  6EE6               	movwf	postinc1,c
 10915  0187F6  0E01               	movlw	1
 10916  0187F8  6EE6               	movwf	postinc1,c
 10917  0187FA  0E00               	movlw	0
 10918  0187FC  6EE6               	movwf	postinc1,c
 10919  0187FE  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 10920  018802  0060  F007  FFE6   	movff	btemp,postinc1
 10921  018808  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10922  01880E  0E06               	movlw	6
 10923  018810  6EE6               	movwf	postinc1,c
 10924  018812  ECAC  F0D1         	call	_sprintf	;wreg free
 10925  018816                     l1697:
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 10929  018816  0101               	movlb	1	; () banked
 10930  018818  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10931  01881A  32E8               	rrcf	wreg,f,c
 10932  01881C  32E8               	rrcf	wreg,f,c
 10933  01881E  0B03               	andlw	3
 10934  018820  0D24               	mullw	36
 10935  018822  0E12               	movlw	18
 10936  018824  26F3               	addwf	243,f,c
 10937  018826  0E00               	movlw	0
 10938  018828  22F4               	addwfc	244,f,c
 10939  01882A  0E1D               	movlw	low _T
 10940  01882C  6E0B               	movwf	(btemp+10)^0,c
 10941  01882E  0EFA               	movlw	high _T
 10942  018830  6E0C               	movwf	(btemp+11)^0,c
 10943  018832  50F3               	movf	243,w,c
 10944  018834  260B               	addwf	(btemp+10)^0,f,c
 10945  018836  50F4               	movf	244,w,c
 10946  018838  220C               	addwfc	(btemp+11)^0,f,c
 10947  01883A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10948  018840  0060  F033  FFE6   	movff	btemp+11,postinc1
 10949  018846  0EBF               	movlw	low STR_60
 10950  018848  6EE6               	movwf	postinc1,c
 10951  01884A  0EFF               	movlw	high STR_60
 10952  01884C  6EE6               	movwf	postinc1,c
 10953  01884E  0E01               	movlw	1
 10954  018850  6EE6               	movwf	postinc1,c
 10955  018852  0E01               	movlw	1
 10956  018854  6EE6               	movwf	postinc1,c
 10957  018856  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 10958  01885A  0060  F007  FFE6   	movff	btemp,postinc1
 10959  018860  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10960  018866  0E06               	movlw	6
 10961  018868  6EE6               	movwf	postinc1,c
 10962  01886A  ECAC  F0D1         	call	_sprintf	;wreg free
 10963                           
 10964                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 10965  01886E  0101               	movlb	1	; () banked
 10966  018870  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10967  018872  32E8               	rrcf	wreg,f,c
 10968  018874  32E8               	rrcf	wreg,f,c
 10969  018876  0B03               	andlw	3
 10970  018878  0D24               	mullw	36
 10971  01887A  0E1D               	movlw	low _T
 10972  01887C  6E0B               	movwf	(btemp+10)^0,c
 10973  01887E  0EFA               	movlw	high _T
 10974  018880  6E0C               	movwf	(btemp+11)^0,c
 10975  018882  50F3               	movf	243,w,c
 10976  018884  260B               	addwf	(btemp+10)^0,f,c
 10977  018886  50F4               	movf	244,w,c
 10978  018888  220C               	addwfc	(btemp+11)^0,f,c
 10979  01888A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10980  018890  0060  F033  FFE6   	movff	btemp+11,postinc1
 10981  018896  0EBF               	movlw	low STR_60
 10982  018898  6EE6               	movwf	postinc1,c
 10983  01889A  0EFF               	movlw	high STR_60
 10984  01889C  6EE6               	movwf	postinc1,c
 10985  01889E  0E01               	movlw	1
 10986  0188A0  6EE6               	movwf	postinc1,c
 10987  0188A2  0E02               	movlw	2
 10988  0188A4  6EE6               	movwf	postinc1,c
 10989  0188A6  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 10990  0188AA  0060  F007  FFE6   	movff	btemp,postinc1
 10991  0188B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10992  0188B6  0E06               	movlw	6
 10993  0188B8  6EE6               	movwf	postinc1,c
 10994  0188BA  ECAC  F0D1         	call	_sprintf	;wreg free
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;mconfig.c: 61:   V.help_id++;
 10998  0188BE  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10999  0188C2  38DF               	swapf	223,w,c
 11000  0188C4  6E0C               	movwf	(btemp+11)^0,c
 11001  0188C6  320C               	rrcf	(btemp+11)^0,f,c
 11002  0188C8  300C               	rrcf	(btemp+11)^0,w,c
 11003  0188CA  0B03               	andlw	3
 11004  0188CC  6E0C               	movwf	(btemp+11)^0,c
 11005  0188CE  2A0C               	incf	(btemp+11)^0,f,c
 11006  0188D0  3A0C               	swapf	(btemp+11)^0,f,c
 11007  0188D2  360C               	rlcf	(btemp+11)^0,f,c
 11008  0188D4  360C               	rlcf	(btemp+11)^0,f,c
 11009  0188D6  50DF               	movf	223,w,c
 11010  0188D8  180C               	xorwf	(btemp+11)^0,w,c
 11011  0188DA  0B3F               	andlw	-193
 11012  0188DC  180C               	xorwf	(btemp+11)^0,w,c
 11013  0188DE  6EDF               	movwf	223,c
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 11017  0188E0  0EB8               	movlw	184
 11018  0188E2  6EE6               	movwf	postinc1,c
 11019  0188E4  0E0B               	movlw	11
 11020  0188E6  6EE6               	movwf	postinc1,c
 11021  0188E8  0E09               	movlw	9
 11022  0188EA  6EE6               	movwf	postinc1,c
 11023  0188EC  ECEC  F0DF         	call	_StartTimer	;wreg free
 11024                           
 11025                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 11026  0188F0  0EB8               	movlw	184
 11027  0188F2  6EE6               	movwf	postinc1,c
 11028  0188F4  0E0B               	movlw	11
 11029  0188F6  6EE6               	movwf	postinc1,c
 11030  0188F8  0E07               	movlw	7
 11031  0188FA  6EE6               	movwf	postinc1,c
 11032  0188FC  ECEC  F0DF         	call	_StartTimer	;wreg free
 11033                           
 11034                           ;mconfig.c: 64:   mode_lamp_bright();
 11035  018900  ECF2  F0E4         	call	_mode_lamp_bright	;wreg free
 11036                           
 11037                           ;mconfig.c: 65:   update_lcd(1);
 11038  018904  0E01               	movlw	1
 11039  018906  6EE6               	movwf	postinc1,c
 11040  018908  EC24  F0D1         	call	_update_lcd	;wreg free
 11041                           
 11042                           ;mconfig.c: 67:  } else {
 11043  01890C  D032               	goto	l1698
 11044  01890E                     l13667:
 11045                           
 11046                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 11047  01890E  0E09               	movlw	9
 11048  018910  6EE6               	movwf	postinc1,c
 11049  018912  EC41  F0E2         	call	_TimerDone	;wreg free
 11050  018916  5001               	movf	btemp^0,w,c
 11051  018918  B4D8               	btfsc	status,2,c
 11052  01891A  D02B               	goto	l1698
 11053                           
 11054                           ;mconfig.c: 69:    set_vterm(0);
 11055  01891C  0E00               	movlw	0
 11056  01891E  6EE6               	movwf	postinc1,c
 11057  018920  EC37  F0E4         	call	_set_vterm	;wreg free
 11058                           
 11059                           ;mconfig.c: 70:    V.help = 0;
 11060  018924  0101               	movlb	1	; () banked
 11061  018926  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 11062                           
 11063                           ; BSR set to: 1
 11064                           ;mconfig.c: 71:    set_display_info(display_help());
 11065  018928  EC37  F0E5         	call	_display_help	;wreg free
 11066  01892C  5001               	movf	btemp^0,w,c
 11067  01892E  6EE6               	movwf	postinc1,c
 11068  018930  EC46  F0E4         	call	_set_display_info	;wreg free
 11069                           
 11070                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 11071  018934  0060  F673  FFE6   	movff	_V+149,postinc1
 11072  01893A  0060  F677  FFE6   	movff	_V+150,postinc1
 11073  018940  EC7F  F0E4         	call	_mode_lamp_dim	;wreg free
 11074                           
 11075                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 11076  018944  0E0B               	movlw	11
 11077  018946  6EE6               	movwf	postinc1,c
 11078  018948  EC41  F0E2         	call	_TimerDone	;wreg free
 11079  01894C  5001               	movf	btemp^0,w,c
 11080  01894E  B4D8               	btfsc	status,2,c
 11081  018950  D010               	goto	l1698
 11082                           
 11083                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 11084  018952  0101               	movlb	1	; () banked
 11085  018954  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 11086  018956  A4D8               	btfss	status,2,c
 11087  018958  D002               	goto	u13140
 11088  01895A  0E01               	movlw	1
 11089  01895C  D001               	goto	u13150
 11090  01895E                     u13140:
 11091  01895E  0E00               	movlw	0
 11092  018960                     u13150:
 11093  018960  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 11097  018962  0EDC               	movlw	220
 11098  018964  6EE6               	movwf	postinc1,c
 11099  018966  0E05               	movlw	5
 11100  018968  6EE6               	movwf	postinc1,c
 11101  01896A  0E0B               	movlw	11
 11102  01896C  6EE6               	movwf	postinc1,c
 11103  01896E  ECEC  F0DF         	call	_StartTimer	;wreg free
 11104  018972                     l1698:
 11105                           
 11106                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11107  018972  52E5               	movf	postdec1,f,c
 11108  018974  0012               	return		;funcret
 11109  018976                     __end_of_check_help:
 11110                           	opt callstack 0
 11111                           
 11112 ;; *************** function _vterm_dump *****************
 11113 ;; Defined at:
 11114 ;;		line 121 in file "mconfig.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;		None
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;		None
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  1  [STACK] void 
 11121 ;; Registers used:
 11122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11123 ;; Tracked objects:
 11124 ;;		On entry : 3F/1
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11132 ;;Total ram usage:        0 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; Hardware stack levels required when called:   27
 11135 ;; This function calls:
 11136 ;;		_WaitMs
 11137 ;;		_eaDogM_WriteStringAtPos
 11138 ;;		_get_vterm_ptr
 11139 ;;		_sprintf
 11140 ;;		_wait_lcd_done
 11141 ;; This function is called by:
 11142 ;;		_check_help
 11143 ;; This function uses a reentrant model
 11144 ;;
 11145                           
 11146                           	psect	text38
 11147  019CB2                     __ptext38:
 11148                           	opt callstack 0
 11149  019CB2                     _vterm_dump:
 11150                           	opt callstack 2
 11151                           
 11152                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 11153                           
 11154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11155                           ;incstack = 0
 11156  019CB2  0E01               	movlw	1
 11157  019CB4  6EE6               	movwf	postinc1,c
 11158  019CB6  0E00               	movlw	0
 11159  019CB8  6EE6               	movwf	postinc1,c
 11160  019CBA  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 11161  019CBE  0060  F007  FFE6   	movff	btemp,postinc1
 11162  019CC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11163  019CCA  0E00               	movlw	0
 11164  019CCC  6EE6               	movwf	postinc1,c
 11165  019CCE  0E00               	movlw	0
 11166  019CD0  6EE6               	movwf	postinc1,c
 11167  019CD2  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 11168  019CD6  0060  F007  FFE6   	movff	btemp,postinc1
 11169  019CDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11170  019CE2  0EA4               	movlw	low STR_62
 11171  019CE4  6EE6               	movwf	postinc1,c
 11172  019CE6  0EFF               	movlw	high STR_62
 11173  019CE8  6EE6               	movwf	postinc1,c
 11174  019CEA  0E08               	movlw	low (_V+1)
 11175  019CEC  6EE6               	movwf	postinc1,c
 11176  019CEE  0E01               	movlw	high (_V+1)
 11177  019CF0  6EE6               	movwf	postinc1,c
 11178  019CF2  0E08               	movlw	8
 11179  019CF4  6EE6               	movwf	postinc1,c
 11180  019CF6  ECAC  F0D1         	call	_sprintf	;wreg free
 11181                           
 11182                           ; BSR set to: 0
 11183                           ;mconfig.c: 124:  wait_lcd_done();
 11184  019CFA  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 11188  019CFE  0E08               	movlw	low (_V+1)
 11189  019D00  6EE6               	movwf	postinc1,c
 11190  019D02  0E01               	movlw	high (_V+1)
 11191  019D04  6EE6               	movwf	postinc1,c
 11192  019D06  0E00               	movlw	0
 11193  019D08  6EE6               	movwf	postinc1,c
 11194  019D0A  0E00               	movlw	0
 11195  019D0C  6EE6               	movwf	postinc1,c
 11196  019D0E  ECB0  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11197                           
 11198                           ; BSR set to: 59
 11199                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 11200  019D12  0E01               	movlw	1
 11201  019D14  6EE6               	movwf	postinc1,c
 11202  019D16  0E01               	movlw	1
 11203  019D18  6EE6               	movwf	postinc1,c
 11204  019D1A  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 11205  019D1E  0060  F007  FFE6   	movff	btemp,postinc1
 11206  019D24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11207  019D2A  0E00               	movlw	0
 11208  019D2C  6EE6               	movwf	postinc1,c
 11209  019D2E  0E01               	movlw	1
 11210  019D30  6EE6               	movwf	postinc1,c
 11211  019D32  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 11212  019D36  0060  F007  FFE6   	movff	btemp,postinc1
 11213  019D3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11214  019D42  0EA4               	movlw	low STR_62
 11215  019D44  6EE6               	movwf	postinc1,c
 11216  019D46  0EFF               	movlw	high STR_62
 11217  019D48  6EE6               	movwf	postinc1,c
 11218  019D4A  0E08               	movlw	low (_V+1)
 11219  019D4C  6EE6               	movwf	postinc1,c
 11220  019D4E  0E01               	movlw	high (_V+1)
 11221  019D50  6EE6               	movwf	postinc1,c
 11222  019D52  0E08               	movlw	8
 11223  019D54  6EE6               	movwf	postinc1,c
 11224  019D56  ECAC  F0D1         	call	_sprintf	;wreg free
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;mconfig.c: 127:  wait_lcd_done();
 11228  019D5A  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 11229                           
 11230                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 11231  019D5E  0E08               	movlw	low (_V+1)
 11232  019D60  6EE6               	movwf	postinc1,c
 11233  019D62  0E01               	movlw	high (_V+1)
 11234  019D64  6EE6               	movwf	postinc1,c
 11235  019D66  0E00               	movlw	0
 11236  019D68  6EE6               	movwf	postinc1,c
 11237  019D6A  0E01               	movlw	1
 11238  019D6C  6EE6               	movwf	postinc1,c
 11239  019D6E  ECB0  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11240                           
 11241                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 11242  019D72  0E01               	movlw	1
 11243  019D74  6EE6               	movwf	postinc1,c
 11244  019D76  0E02               	movlw	2
 11245  019D78  6EE6               	movwf	postinc1,c
 11246  019D7A  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 11247  019D7E  0060  F007  FFE6   	movff	btemp,postinc1
 11248  019D84  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11249  019D8A  0E00               	movlw	0
 11250  019D8C  6EE6               	movwf	postinc1,c
 11251  019D8E  0E02               	movlw	2
 11252  019D90  6EE6               	movwf	postinc1,c
 11253  019D92  ECBE  F0E1         	call	_get_vterm_ptr	;wreg free
 11254  019D96  0060  F007  FFE6   	movff	btemp,postinc1
 11255  019D9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11256  019DA2  0EA4               	movlw	low STR_62
 11257  019DA4  6EE6               	movwf	postinc1,c
 11258  019DA6  0EFF               	movlw	high STR_62
 11259  019DA8  6EE6               	movwf	postinc1,c
 11260  019DAA  0E08               	movlw	low (_V+1)
 11261  019DAC  6EE6               	movwf	postinc1,c
 11262  019DAE  0E01               	movlw	high (_V+1)
 11263  019DB0  6EE6               	movwf	postinc1,c
 11264  019DB2  0E08               	movlw	8
 11265  019DB4  6EE6               	movwf	postinc1,c
 11266  019DB6  ECAC  F0D1         	call	_sprintf	;wreg free
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;mconfig.c: 130:  wait_lcd_done();
 11270  019DBA  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 11274  019DBE  0E08               	movlw	low (_V+1)
 11275  019DC0  6EE6               	movwf	postinc1,c
 11276  019DC2  0E01               	movlw	high (_V+1)
 11277  019DC4  6EE6               	movwf	postinc1,c
 11278  019DC6  0E00               	movlw	0
 11279  019DC8  6EE6               	movwf	postinc1,c
 11280  019DCA  0E02               	movlw	2
 11281  019DCC  6EE6               	movwf	postinc1,c
 11282  019DCE  ECB0  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11283                           
 11284                           ; BSR set to: 59
 11285                           ;mconfig.c: 132:  WaitMs(3000);
 11286  019DD2  0EB8               	movlw	184
 11287  019DD4  6EE6               	movwf	postinc1,c
 11288  019DD6  0E0B               	movlw	11
 11289  019DD8  6EE6               	movwf	postinc1,c
 11290  019DDA  ECDB  F0E0         	call	_WaitMs	;wreg free
 11291                           
 11292                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11293  019DDE  0012               	return		;funcret
 11294  019DE0                     __end_of_vterm_dump:
 11295                           	opt callstack 0
 11296                           
 11297 ;; *************** function _sprintf *****************
 11298 ;; Defined at:
 11299 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  s               2  [STACK] PTR unsigned char 
 11302 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 11303 ;;  fmt             2  [STACK] PTR const unsigned char 
 11304 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 11305 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 11306 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 11307 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 11308 ;;		 -> STR_58(19), STR_53(21), STR_52(21), STR_51(21), 
 11309 ;;		 -> STR_50(21), STR_49(21), STR_48(21), STR_47(20), 
 11310 ;;		 -> STR_46(20), STR_45(21), STR_44(21), STR_43(21), 
 11311 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 11312 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 11313 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 11314 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 11315 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 11316 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 11317 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11318 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 11319 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 11320 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 11321 ;;		 -> STR_1(21), 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;  f               6  [STACK] struct _IO_FILE
 11324 ;;  ap              2  [STACK] PTR void [1]
 11325 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11326 ;;  ret             2    0        int 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  2  [STACK] int 
 11329 ;; Registers used:
 11330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/1
 11333 ;;		On exit  : 3F/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:   23
 11343 ;; This function calls:
 11344 ;;		_vfprintf
 11345 ;; This function is called by:
 11346 ;;		_main
 11347 ;;		_current_sensor_cal
 11348 ;;		_check_help
 11349 ;;		_vterm_dump
 11350 ;;		_calc_bsoc
 11351 ;; This function uses a reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text39
 11355  01A358                     __ptext39:
 11356                           	opt callstack 0
 11357  01A358                     _sprintf:
 11358                           	opt callstack 0
 11359                           
 11360                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11361  01A358  0E08               	movlw	8
 11362  01A35A  26E1               	addwf	fsr1l,f,c
 11363  01A35C  0E00               	movlw	0
 11364  01A35E  22E2               	addwfc	fsr1h,f,c
 11365                           
 11366                           ;incstack = 0
 11367 ;; hardware stack exceeded
 11368  01A360  0EFE               	movlw	254
 11369  01A362  6E0B               	movwf	(btemp+10)^0,c
 11370  01A364  0EFF               	movlw	255
 11371  01A366  6E0C               	movwf	(btemp+11)^0,c
 11372                           
 11373                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 11374  01A368  0EF5               	movlw	245
 11375  01A36A  24E1               	addwf	fsr1l,w,c
 11376  01A36C  6E09               	movwf	(btemp+8)^0,c
 11377  01A36E  0EFF               	movlw	255
 11378  01A370  20E2               	addwfc	fsr1h,w,c
 11379  01A372  6E0A               	movwf	(btemp+9)^0,c
 11380  01A374  500B               	movf	(btemp+10)^0,w,c
 11381  01A376  2609               	addwf	(btemp+8)^0,f,c
 11382  01A378  500C               	movf	(btemp+11)^0,w,c
 11383  01A37A  220A               	addwfc	(btemp+9)^0,f,c
 11384                           
 11385                           ;stkvar	_ap @ sp[(-8)+6]
 11386  01A37C  0EFF               	movlw	-1
 11387  01A37E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11388  01A384  0EFE               	movlw	-2
 11389  01A386  0060  F027  FFE3   	movff	btemp+8,plusw1
 11390                           
 11391                           ;stkvar	_s @ sp[(-8)+-3]
 11392  01A38C  0EF5               	movlw	-11
 11393  01A38E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11394  01A394  0EF6               	movlw	-10
 11395  01A396  006F FF8C  F00C    	movff	plusw1,btemp+11
 11396                           
 11397                           ;stkvar	_f @ sp[(-8)+0]
 11398  01A39C  0EF9               	movlw	-7
 11399  01A39E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11400  01A3A4  0EF8               	movlw	-8
 11401  01A3A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11402                           
 11403                           ;stkvar	_f @ sp[(-8)+0]
 11404  01A3AC  0EFA               	movlw	250
 11405  01A3AE  24E1               	addwf	fsr1l,w,c
 11406  01A3B0  6ED9               	movwf	fsr2l,c
 11407  01A3B2  0EFF               	movlw	255
 11408  01A3B4  20E2               	addwfc	fsr1h,w,c
 11409  01A3B6  6EDA               	movwf	fsr2h,c
 11410  01A3B8  0E00               	movlw	0
 11411  01A3BA  6EDE               	movwf	postinc2,c
 11412  01A3BC  0E00               	movlw	0
 11413  01A3BE  6EDD               	movwf	postdec2,c
 11414                           
 11415                           ;stkvar	_f @ sp[(-8)+0]
 11416  01A3C0  0EFC               	movlw	252
 11417  01A3C2  24E1               	addwf	fsr1l,w,c
 11418  01A3C4  6ED9               	movwf	fsr2l,c
 11419  01A3C6  0EFF               	movlw	255
 11420  01A3C8  20E2               	addwfc	fsr1h,w,c
 11421  01A3CA  6EDA               	movwf	fsr2h,c
 11422  01A3CC  0E00               	movlw	0
 11423  01A3CE  6EDE               	movwf	postinc2,c
 11424  01A3D0  0E00               	movlw	0
 11425  01A3D2  6EDD               	movwf	postdec2,c
 11426                           
 11427                           ;stkvar	_ap @ sp[(-8)+6]
 11428  01A3D4  0EFE               	movlw	254
 11429  01A3D6  24E1               	addwf	fsr1l,w,c
 11430  01A3D8  6E01               	movwf	btemp^0,c
 11431  01A3DA  0EFF               	movlw	255
 11432  01A3DC  20E2               	addwfc	fsr1h,w,c
 11433  01A3DE  6E02               	movwf	(btemp+1)^0,c
 11434  01A3E0  0060  F007  FFE6   	movff	btemp,postinc1
 11435  01A3E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11436                           
 11437                           ;stkvar	_fmt @ sp[(-10)+-5]
 11438  01A3EC  0EF1               	movlw	-15
 11439  01A3EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11440  01A3F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11441                           
 11442                           ;stkvar	_f @ sp[(-12)+0]
 11443  01A3FA  0EF4               	movlw	244
 11444  01A3FC  24E1               	addwf	fsr1l,w,c
 11445  01A3FE  6E01               	movwf	btemp^0,c
 11446  01A400  0EFF               	movlw	255
 11447  01A402  20E2               	addwfc	fsr1h,w,c
 11448  01A404  6E02               	movwf	(btemp+1)^0,c
 11449  01A406  0060  F007  FFE6   	movff	btemp,postinc1
 11450  01A40C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11451  01A412  EC05  F0D7         	call	_vfprintf	;wreg free
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;stkvar	_f @ sp[(-8)+0]
 11455  01A416  0EFA               	movlw	250
 11456  01A418  24E1               	addwf	fsr1l,w,c
 11457  01A41A  6ED9               	movwf	fsr2l,c
 11458  01A41C  0EFF               	movlw	255
 11459  01A41E  20E2               	addwfc	fsr1h,w,c
 11460  01A420  6EDA               	movwf	fsr2h,c
 11461  01A422  006F FF78  F00B    	movff	postinc2,btemp+10
 11462  01A428  006F FF74  F00C    	movff	postdec2,btemp+11
 11463                           
 11464                           ;stkvar	_s @ sp[(-8)+-3]
 11465  01A42E  0EF5               	movlw	-11
 11466  01A430  006F FF8C  F009    	movff	plusw1,btemp+8
 11467  01A436  0EF6               	movlw	-10
 11468  01A438  006F FF8C  F00A    	movff	plusw1,btemp+9
 11469  01A43E  500B               	movf	(btemp+10)^0,w,c
 11470  01A440  2409               	addwf	(btemp+8)^0,w,c
 11471  01A442  6ED9               	movwf	fsr2l,c
 11472  01A444  500C               	movf	(btemp+11)^0,w,c
 11473  01A446  200A               	addwfc	(btemp+9)^0,w,c
 11474  01A448  6EDA               	movwf	fsr2h,c
 11475  01A44A  0E00               	movlw	0
 11476  01A44C  6EDF               	movwf	indf2,c
 11477                           
 11478                           ; BSR set to: 0
 11479                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 11480  01A44E  0EF8               	movlw	248
 11481  01A450  26E1               	addwf	fsr1l,f,c
 11482  01A452  0EFF               	movlw	255
 11483  01A454  22E2               	addwfc	fsr1h,f,c
 11484  01A456  52E5               	movf	postdec1,f,c
 11485  01A458  50E7               	movf	indf1,w,c
 11486  01A45A  5EE1               	subwf	fsr1l,f,c
 11487  01A45C  0E00               	movlw	0
 11488  01A45E  5AE2               	subwfb	fsr1h,f,c
 11489  01A460  0012               	return		;funcret
 11490  01A462                     __end_of_sprintf:
 11491                           	opt callstack 0
 11492                           
 11493 ;; *************** function _get_vterm_ptr *****************
 11494 ;; Defined at:
 11495 ;;		line 116 in file "mconfig.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  line            1  [STACK] const unsigned char 
 11498 ;;  vterm           1  [STACK] const unsigned char 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  2  [STACK] PTR unsigned char 
 11503 ;; Registers used:
 11504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/1
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:   15
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_main
 11521 ;;		_current_sensor_cal
 11522 ;;		_check_help
 11523 ;;		_vterm_dump
 11524 ;; This function uses a reentrant model
 11525 ;;
 11526                           
 11527                           	psect	text40
 11528  01C37C                     __ptext40:
 11529                           	opt callstack 0
 11530  01C37C                     _get_vterm_ptr:
 11531                           	opt callstack 15
 11532                           
 11533                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 11534                           ;stkvar	_vterm @ sp[(0)+-2]
 11535                           
 11536                           ; BSR set to: 0
 11537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11538                           ;incstack = 0
 11539  01C37C  0EFE               	movlw	-2
 11540  01C37E  50E3               	movf	plusw1,w,c
 11541  01C380  0B03               	andlw	3
 11542  01C382  0D78               	mullw	120
 11543  01C384  0E2A               	movlw	low _D
 11544  01C386  6E01               	movwf	btemp^0,c
 11545  01C388  0E08               	movlw	high _D
 11546  01C38A  6E02               	movwf	(btemp+1)^0,c
 11547  01C38C  50F3               	movf	243,w,c
 11548  01C38E  2601               	addwf	btemp^0,f,c
 11549  01C390  50F4               	movf	244,w,c
 11550  01C392  2202               	addwfc	(btemp+1)^0,f,c
 11551                           
 11552                           ;stkvar	_line @ sp[(0)+-1]
 11553  01C394  0EFF               	movlw	-1
 11554  01C396  50E3               	movf	plusw1,w,c
 11555  01C398  0B03               	andlw	3
 11556  01C39A  0D28               	mullw	40
 11557  01C39C  50F3               	movf	243,w,c
 11558  01C39E  2601               	addwf	btemp^0,f,c
 11559  01C3A0  50F4               	movf	244,w,c
 11560  01C3A2  2202               	addwfc	(btemp+1)^0,f,c
 11561                           
 11562                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 11563  01C3A4  52E5               	movf	postdec1,f,c
 11564  01C3A6  52E5               	movf	postdec1,f,c
 11565  01C3A8  0012               	return		;funcret
 11566  01C3AA                     __end_of_get_vterm_ptr:
 11567                           	opt callstack 0
 11568                           
 11569 ;; *************** function _WaitMs *****************
 11570 ;; Defined at:
 11571 ;;		line 32 in file "timers.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;  numMilliseco    2  [STACK] const unsigned short 
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;		None
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1  [STACK] void 
 11578 ;; Registers used:
 11579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/1
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11589 ;;Total ram usage:        0 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:   16
 11592 ;; This function calls:
 11593 ;;		_StartTimer
 11594 ;;		_TimerDone
 11595 ;; This function is called by:
 11596 ;;		_main
 11597 ;;		_current_sensor_cal
 11598 ;;		_vterm_dump
 11599 ;; This function uses a reentrant model
 11600 ;;
 11601                           
 11602                           	psect	text41
 11603  01C1B6                     __ptext41:
 11604                           	opt callstack 0
 11605  01C1B6                     _WaitMs:
 11606                           	opt callstack 13
 11607                           
 11608                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 11609                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 11610                           
 11611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11612                           ;incstack = 0
 11613  01C1B6  0EFE               	movlw	-2
 11614  01C1B8  006F FF8F FFE6     	movff	plusw1,postinc1
 11615  01C1BE  006F FF8F FFE6     	movff	plusw1,postinc1
 11616  01C1C4  0E00               	movlw	0
 11617  01C1C6  6EE6               	movwf	postinc1,c
 11618  01C1C8  ECEC  F0DF         	call	_StartTimer	;wreg free
 11619                           
 11620                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11621  01C1CC  D005               	goto	l10205
 11622  01C1CE                     l1629:
 11623                           
 11624                           ;timers.c: 36:   __nop();
 11625  01C1CE  F000               	nop	
 11626                           
 11627                           ;timers.c: 37:   __nop();
 11628  01C1D0  F000               	nop	
 11629                           
 11630                           ;timers.c: 38:   __nop();
 11631  01C1D2  F000               	nop	
 11632                           
 11633                           ;timers.c: 39:   __nop();
 11634  01C1D4  F000               	nop	
 11635  01C1D6  0004               	clrwdt		;# 
 11636  01C1D8                     l10205:
 11637                           
 11638                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11639  01C1D8  0E00               	movlw	0
 11640  01C1DA  6EE6               	movwf	postinc1,c
 11641  01C1DC  EC41  F0E2         	call	_TimerDone	;wreg free
 11642  01C1E0  5001               	movf	btemp^0,w,c
 11643  01C1E2  B4D8               	btfsc	status,2,c
 11644  01C1E4  D7F4               	goto	l1629
 11645                           
 11646                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11647  01C1E6  52E5               	movf	postdec1,f,c
 11648  01C1E8  52E5               	movf	postdec1,f,c
 11649  01C1EA  0012               	return		;funcret
 11650  01C1EC                     __end_of_WaitMs:
 11651                           	opt callstack 0
 11652                           
 11653 ;; *************** function _update_lcd *****************
 11654 ;; Defined at:
 11655 ;;		line 85 in file "mconfig.c"
 11656 ;; Parameters:    Size  Location     Type
 11657 ;;  vterm           1  [STACK] unsigned char 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;		None
 11660 ;; Return value:  Size  Location     Type
 11661 ;;                  1  [STACK] unsigned char 
 11662 ;; Registers used:
 11663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11664 ;; Tracked objects:
 11665 ;;		On entry : 0/0
 11666 ;;		On exit  : 0/0
 11667 ;;		Unchanged: 0/0
 11668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11673 ;;Total ram usage:        0 bytes
 11674 ;; Hardware stack levels used:    1
 11675 ;; Hardware stack levels required when called:   27
 11676 ;; This function calls:
 11677 ;;		_eaDogM_WriteStringAtPos
 11678 ;;		_wait_lcd_done
 11679 ;; This function is called by:
 11680 ;;		_main
 11681 ;;		_current_sensor_cal
 11682 ;;		_check_help
 11683 ;; This function uses a reentrant model
 11684 ;;
 11685                           
 11686                           	psect	text42
 11687  01A248                     __ptext42:
 11688                           	opt callstack 0
 11689  01A248                     _update_lcd:
 11690                           	opt callstack 3
 11691                           
 11692                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 11693                           ;stkvar	_vterm @ sp[(0)+-1]
 11694                           
 11695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11696                           ;incstack = 0
 11697  01A248  0EFF               	movlw	-1
 11698  01A24A  006F FF8C  F001    	movff	plusw1,btemp
 11699  01A250  0E03               	movlw	3
 11700  01A252  1601               	andwf	btemp^0,f,c
 11701  01A254  0EFF               	movlw	-1
 11702  01A256  0060  F007  FFE3   	movff	btemp,plusw1
 11703                           
 11704                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 11705  01A25C  EE22  F20A         	lfsr	2,_D+480
 11706  01A260  A0DF               	btfss	indf2,0,c
 11707  01A262  D004               	goto	l13331
 11708                           
 11709                           ;stkvar	_vterm @ sp[(0)+-1]
 11710  01A264  0EFF               	movlw	-1
 11711  01A266  50E3               	movf	plusw1,w,c
 11712  01A268  B4D8               	btfsc	status,2,c
 11713  01A26A  D074               	goto	l1705
 11714  01A26C                     l13331:
 11715                           
 11716                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 11717                           ;stkvar	_vterm @ sp[(0)+-1]
 11718  01A26C  0EFF               	movlw	-1
 11719  01A26E  50E3               	movf	plusw1,w,c
 11720  01A270  0D78               	mullw	120
 11721  01A272  0E3E               	movlw	low (_D+20)
 11722  01A274  24F3               	addwf	243,w,c
 11723  01A276  6ED9               	movwf	fsr2l,c
 11724  01A278  0E08               	movlw	high (_D+20)
 11725  01A27A  20F4               	addwfc	prodh,w,c
 11726  01A27C  6EDA               	movwf	fsr2h,c
 11727  01A27E  0E00               	movlw	0
 11728  01A280  6EDF               	movwf	indf2,c
 11729                           
 11730                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 11731                           ;stkvar	_vterm @ sp[(0)+-1]
 11732  01A282  0EFF               	movlw	-1
 11733  01A284  50E3               	movf	plusw1,w,c
 11734  01A286  0D78               	mullw	120
 11735  01A288  0E66               	movlw	low (_D+60)
 11736  01A28A  24F3               	addwf	243,w,c
 11737  01A28C  6ED9               	movwf	fsr2l,c
 11738  01A28E  0E08               	movlw	high (_D+60)
 11739  01A290  20F4               	addwfc	prodh,w,c
 11740  01A292  6EDA               	movwf	fsr2h,c
 11741  01A294  0E00               	movlw	0
 11742  01A296  6EDF               	movwf	indf2,c
 11743                           
 11744                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 11745                           ;stkvar	_vterm @ sp[(0)+-1]
 11746  01A298  0EFF               	movlw	-1
 11747  01A29A  50E3               	movf	plusw1,w,c
 11748  01A29C  0D78               	mullw	120
 11749  01A29E  0E8E               	movlw	low (_D+100)
 11750  01A2A0  24F3               	addwf	243,w,c
 11751  01A2A2  6ED9               	movwf	fsr2l,c
 11752  01A2A4  0E08               	movlw	high (_D+100)
 11753  01A2A6  20F4               	addwfc	prodh,w,c
 11754  01A2A8  6EDA               	movwf	fsr2h,c
 11755  01A2AA  0E00               	movlw	0
 11756  01A2AC  6EDF               	movwf	indf2,c
 11757                           
 11758                           ;mconfig.c: 95:  wait_lcd_done();
 11759  01A2AE  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 11763                           ;stkvar	_vterm @ sp[(0)+-1]
 11764  01A2B2  0EFF               	movlw	-1
 11765  01A2B4  50E3               	movf	plusw1,w,c
 11766  01A2B6  0D78               	mullw	120
 11767  01A2B8  0E2A               	movlw	low _D
 11768  01A2BA  6E0B               	movwf	(btemp+10)^0,c
 11769  01A2BC  0E08               	movlw	high _D
 11770  01A2BE  6E0C               	movwf	(btemp+11)^0,c
 11771  01A2C0  50F3               	movf	243,w,c
 11772  01A2C2  260B               	addwf	(btemp+10)^0,f,c
 11773  01A2C4  50F4               	movf	244,w,c
 11774  01A2C6  220C               	addwfc	(btemp+11)^0,f,c
 11775  01A2C8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11776  01A2CE  0060  F033  FFE6   	movff	btemp+11,postinc1
 11777  01A2D4  0E00               	movlw	0
 11778  01A2D6  6EE6               	movwf	postinc1,c
 11779  01A2D8  0E00               	movlw	0
 11780  01A2DA  6EE6               	movwf	postinc1,c
 11781  01A2DC  ECB0  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11782                           
 11783                           ; BSR set to: 59
 11784                           ;mconfig.c: 97:  wait_lcd_done();
 11785  01A2E0  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 11789                           ;stkvar	_vterm @ sp[(0)+-1]
 11790  01A2E4  0EFF               	movlw	-1
 11791  01A2E6  50E3               	movf	plusw1,w,c
 11792  01A2E8  0D78               	mullw	120
 11793  01A2EA  0E2A               	movlw	low _D
 11794  01A2EC  6E0B               	movwf	(btemp+10)^0,c
 11795  01A2EE  0E08               	movlw	high _D
 11796  01A2F0  6E0C               	movwf	(btemp+11)^0,c
 11797  01A2F2  0E28               	movlw	40
 11798  01A2F4  260B               	addwf	(btemp+10)^0,f,c
 11799  01A2F6  0E00               	movlw	0
 11800  01A2F8  220C               	addwfc	(btemp+11)^0,f,c
 11801  01A2FA  50F3               	movf	243,w,c
 11802  01A2FC  260B               	addwf	(btemp+10)^0,f,c
 11803  01A2FE  50F4               	movf	244,w,c
 11804  01A300  220C               	addwfc	(btemp+11)^0,f,c
 11805  01A302  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11806  01A308  0060  F033  FFE6   	movff	btemp+11,postinc1
 11807  01A30E  0E00               	movlw	0
 11808  01A310  6EE6               	movwf	postinc1,c
 11809  01A312  0E01               	movlw	1
 11810  01A314  6EE6               	movwf	postinc1,c
 11811  01A316  ECB0  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11812                           
 11813                           ; BSR set to: 59
 11814                           ;mconfig.c: 99:  wait_lcd_done();
 11815  01A31A  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 11819                           ;stkvar	_vterm @ sp[(0)+-1]
 11820  01A31E  0EFF               	movlw	-1
 11821  01A320  50E3               	movf	plusw1,w,c
 11822  01A322  0D78               	mullw	120
 11823  01A324  0E2A               	movlw	low _D
 11824  01A326  6E0B               	movwf	(btemp+10)^0,c
 11825  01A328  0E08               	movlw	high _D
 11826  01A32A  6E0C               	movwf	(btemp+11)^0,c
 11827  01A32C  0E50               	movlw	80
 11828  01A32E  260B               	addwf	(btemp+10)^0,f,c
 11829  01A330  0E00               	movlw	0
 11830  01A332  220C               	addwfc	(btemp+11)^0,f,c
 11831  01A334  50F3               	movf	243,w,c
 11832  01A336  260B               	addwf	(btemp+10)^0,f,c
 11833  01A338  50F4               	movf	244,w,c
 11834  01A33A  220C               	addwfc	(btemp+11)^0,f,c
 11835  01A33C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11836  01A342  0060  F033  FFE6   	movff	btemp+11,postinc1
 11837  01A348  0E00               	movlw	0
 11838  01A34A  6EE6               	movwf	postinc1,c
 11839  01A34C  0E02               	movlw	2
 11840  01A34E  6EE6               	movwf	postinc1,c
 11841  01A350  ECB0  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11842  01A354                     l1705:
 11843                           
 11844                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11845  01A354  52E5               	movf	postdec1,f,c
 11846  01A356  0012               	return		;funcret
 11847  01A358                     __end_of_update_lcd:
 11848                           	opt callstack 0
 11849                           
 11850 ;; *************** function _eaDogM_WriteStringAtPos *****************
 11851 ;; Defined at:
 11852 ;;		line 195 in file "eadog.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;  r               1  [STACK] const unsigned char 
 11855 ;;  c               1  [STACK] const unsigned char 
 11856 ;;  strPtr          2  [STACK] PTR unsigned char 
 11857 ;;		 -> D.lcd(480), D(482), V(192), 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;  row             1  [STACK] unsigned char 
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1  [STACK] void 
 11862 ;; Registers used:
 11863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11864 ;; Tracked objects:
 11865 ;;		On entry : 3F/0
 11866 ;;		On exit  : 3F/3B
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11873 ;;Total ram usage:        0 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:   26
 11876 ;; This function calls:
 11877 ;;		_eaDogM_WriteString
 11878 ;;		_send_lcd_cmd_dma
 11879 ;;		_send_lcd_data_dma
 11880 ;;		_wait_lcd_done
 11881 ;;		_wdtdelay
 11882 ;; This function is called by:
 11883 ;;		_update_lcd
 11884 ;;		_vterm_dump
 11885 ;; This function uses a reentrant model
 11886 ;;
 11887                           
 11888                           	psect	text43
 11889  01AF60                     __ptext43:
 11890                           	opt callstack 0
 11891  01AF60                     _eaDogM_WriteStringAtPos:
 11892                           	opt callstack 0
 11893                           
 11894                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11895  01AF60  52E6               	movf	postinc1,f,c
 11896                           
 11897                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 11898                           
 11899                           ;incstack = 0
 11900  01AF62  D014               	goto	l13307
 11901  01AF64                     l13295:
 11902                           
 11903                           ;eadog.c: 201:   row = 0x40;
 11904                           ;stkvar	_row @ sp[(-1)+0]
 11905  01AF64  0EFF               	movlw	-1
 11906  01AF66  6AE3               	clrf	plusw1,c
 11907  01AF68  8CE3               	bsf	plusw1,6,c
 11908                           
 11909                           ;eadog.c: 202:   break;
 11910  01AF6A  D026               	goto	l13309
 11911  01AF6C                     l13297:
 11912                           
 11913                           ;eadog.c: 204:   row = 0x14;
 11914                           ;stkvar	_row @ sp[(-1)+0]
 11915  01AF6C  0EFF               	movlw	-1
 11916  01AF6E  6AE3               	clrf	plusw1,c
 11917  01AF70  84E3               	bsf	plusw1,2,c
 11918  01AF72  88E3               	bsf	plusw1,4,c	;indir
 11919                           
 11920                           ;eadog.c: 205:   break;
 11921  01AF74  D021               	goto	l13309
 11922  01AF76                     l13299:
 11923                           
 11924                           ;eadog.c: 207:   row = 0x54;
 11925  01AF76  0E54               	movlw	84
 11926  01AF78  6E0C               	movwf	(btemp+11)^0,c
 11927                           
 11928                           ;stkvar	_row @ sp[(-1)+0]
 11929  01AF7A  0EFF               	movlw	-1
 11930  01AF7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11931                           
 11932                           ;eadog.c: 208:   break;
 11933  01AF82  D01A               	goto	l13309
 11934  01AF84                     l13301:
 11935                           
 11936                           ;eadog.c: 210:   row = 0x1;
 11937                           ;stkvar	_row @ sp[(-1)+0]
 11938  01AF84  0EFF               	movlw	-1
 11939  01AF86  6AE3               	clrf	plusw1,c
 11940  01AF88  2AE3               	incf	plusw1,f,c
 11941                           
 11942                           ;eadog.c: 211:   break;
 11943  01AF8A  D016               	goto	l13309
 11944  01AF8C                     l13307:
 11945                           
 11946                           ;stkvar	_r @ sp[(-1)+-1]
 11947  01AF8C  0EFE               	movlw	-2
 11948  01AF8E  50E3               	movf	plusw1,w,c
 11949  01AF90  6E0B               	movwf	(btemp+10)^0,c
 11950  01AF92  6A0C               	clrf	(btemp+11)^0,c
 11951                           
 11952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11953                           ; Switch size 1, requested type "simple"
 11954                           ; Number of cases is 1, Range of values is 0 to 0
 11955                           ; switch strategies available:
 11956                           ; Name         Instructions Cycles
 11957                           ; simple_byte            4     3 (average)
 11958                           ;	Chosen strategy is simple_byte
 11959  01AF94  500C               	movf	(btemp+11)^0,w,c
 11960  01AF96  0A00               	xorlw	0	; case 0
 11961  01AF98  A4D8               	btfss	status,2,c
 11962  01AF9A  D7E4               	goto	l13295
 11963                           
 11964                           ; Switch size 1, requested type "simple"
 11965                           ; Number of cases is 4, Range of values is 0 to 3
 11966                           ; switch strategies available:
 11967                           ; Name         Instructions Cycles
 11968                           ; simple_byte           13     7 (average)
 11969                           ;	Chosen strategy is simple_byte
 11970  01AF9C  500B               	movf	(btemp+10)^0,w,c
 11971  01AF9E  0A00               	xorlw	0	; case 0
 11972  01AFA0  B4D8               	btfsc	status,2,c
 11973  01AFA2  D7E0               	goto	l13295
 11974  01AFA4  0A01               	xorlw	1	; case 1
 11975  01AFA6  B4D8               	btfsc	status,2,c
 11976  01AFA8  D7E1               	goto	l13297
 11977  01AFAA  0A03               	xorlw	3	; case 2
 11978  01AFAC  B4D8               	btfsc	status,2,c
 11979  01AFAE  D7E3               	goto	l13299
 11980  01AFB0  0A01               	xorlw	1	; case 3
 11981  01AFB2  B4D8               	btfsc	status,2,c
 11982  01AFB4  D7E7               	goto	l13301
 11983  01AFB6  D7D6               	goto	l13295
 11984  01AFB8                     l13309:
 11985                           
 11986                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11987  01AFB8  0E45               	movlw	69
 11988  01AFBA  6EE6               	movwf	postinc1,c
 11989  01AFBC  EC28  F0E4         	call	_send_lcd_cmd_dma	;wreg free
 11990                           
 11991                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11992                           ;stkvar	_c @ sp[(-1)+-2]
 11993  01AFC0  0EFD               	movlw	-3
 11994  01AFC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11995                           
 11996                           ;stkvar	_row @ sp[(-1)+0]
 11997  01AFC8  0EFF               	movlw	-1
 11998  01AFCA  50E3               	movf	plusw1,w,c
 11999  01AFCC  240C               	addwf	(btemp+11)^0,w,c
 12000  01AFCE  6EE6               	movwf	postinc1,c
 12001  01AFD0  EC49  F0DE         	call	_send_lcd_data_dma	;wreg free
 12002                           
 12003                           ; BSR set to: 59
 12004                           ;eadog.c: 218:  wait_lcd_done();
 12005  01AFD4  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;eadog.c: 219:  wdtdelay(8);
 12009  01AFD8  0E08               	movlw	8
 12010  01AFDA  6EE6               	movwf	postinc1,c
 12011  01AFDC  0E00               	movlw	0
 12012  01AFDE  6EE6               	movwf	postinc1,c
 12013  01AFE0  0E00               	movlw	0
 12014  01AFE2  6EE6               	movwf	postinc1,c
 12015  01AFE4  0E00               	movlw	0
 12016  01AFE6  6EE6               	movwf	postinc1,c
 12017  01AFE8  EC76  F0DD         	call	_wdtdelay	;wreg free
 12018                           
 12019                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 12020                           ;stkvar	_strPtr @ sp[(-1)+-4]
 12021  01AFEC  0EFB               	movlw	-5
 12022  01AFEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12023  01AFF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12024  01AFFA  EC04  F0D8         	call	_eaDogM_WriteString	;wreg free
 12025                           
 12026                           ; BSR set to: 59
 12027                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 12028  01AFFE  0EFB               	movlw	251
 12029  01B000  26E1               	addwf	fsr1l,f,c
 12030  01B002  0EFF               	movlw	255
 12031  01B004  22E2               	addwfc	fsr1h,f,c
 12032  01B006  0012               	return		;funcret
 12033  01B008                     __end_of_eaDogM_WriteStringAtPos:
 12034                           	opt callstack 0
 12035                           
 12036 ;; *************** function _send_lcd_cmd_dma *****************
 12037 ;; Defined at:
 12038 ;;		line 171 in file "eadog.c"
 12039 ;; Parameters:    Size  Location     Type
 12040 ;;  strPtr          1  [STACK] const unsigned char 
 12041 ;; Auto vars:     Size  Location     Type
 12042 ;;		None
 12043 ;; Return value:  Size  Location     Type
 12044 ;;                  1  [STACK] void 
 12045 ;; Registers used:
 12046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12047 ;; Tracked objects:
 12048 ;;		On entry : 0/3D
 12049 ;;		On exit  : 3F/0
 12050 ;;		Unchanged: 0/0
 12051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12056 ;;Total ram usage:        0 bytes
 12057 ;; Hardware stack levels used:    1
 12058 ;; Hardware stack levels required when called:   25
 12059 ;; This function calls:
 12060 ;;		_send_lcd_data_dma
 12061 ;;		_wait_lcd_done
 12062 ;; This function is called by:
 12063 ;;		_eaDogM_WriteStringAtPos
 12064 ;;		_eaDogM_WriteCommand
 12065 ;; This function uses a reentrant model
 12066 ;;
 12067                           
 12068                           	psect	text44
 12069  01C850                     __ptext44:
 12070                           	opt callstack 0
 12071  01C850                     _send_lcd_cmd_dma:
 12072                           	opt callstack 3
 12073                           
 12074                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 12075                           
 12076                           ; BSR set to: 59
 12077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12078                           ;incstack = 0
 12079  01C850  0EFE               	movlw	254
 12080  01C852  6EE6               	movwf	postinc1,c
 12081  01C854  EC49  F0DE         	call	_send_lcd_data_dma	;wreg free
 12082                           
 12083                           ; BSR set to: 59
 12084                           ;eadog.c: 174:  wait_lcd_done();
 12085  01C858  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 12089                           ;stkvar	_strPtr @ sp[(0)+-1]
 12090  01C85C  0EFF               	movlw	-1
 12091  01C85E  50E3               	movf	plusw1,w,c
 12092  01C860  6EE6               	movwf	postinc1,c
 12093  01C862  EC49  F0DE         	call	_send_lcd_data_dma	;wreg free
 12094                           
 12095                           ;eadog.c: 176:  wait_lcd_done();
 12096  01C866  ECC6  F0E3         	call	_wait_lcd_done	;wreg free
 12097                           
 12098                           ; BSR set to: 0
 12099                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 12100  01C86A  52E5               	movf	postdec1,f,c
 12101  01C86C  0012               	return		;funcret
 12102  01C86E                     __end_of_send_lcd_cmd_dma:
 12103                           	opt callstack 0
 12104                           
 12105 ;; *************** function _wait_lcd_done *****************
 12106 ;; Defined at:
 12107 ;;		line 444 in file "eadog.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;		None
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;		None
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  1  [STACK] void 
 12114 ;; Registers used:
 12115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/1
 12118 ;;		On exit  : 3F/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;Total ram usage:        0 bytes
 12126 ;; Hardware stack levels used:    1
 12127 ;; Hardware stack levels required when called:   16
 12128 ;; This function calls:
 12129 ;;		_wdtdelay
 12130 ;; This function is called by:
 12131 ;;		_main
 12132 ;;		_send_lcd_cmd_dma
 12133 ;;		_eaDogM_WriteStringAtPos
 12134 ;;		_update_lcd
 12135 ;;		_vterm_dump
 12136 ;; This function uses a reentrant model
 12137 ;;
 12138                           
 12139                           	psect	text45
 12140  01C78C                     __ptext45:
 12141                           	opt callstack 0
 12142  01C78C                     _wait_lcd_done:
 12143                           	opt callstack 14
 12144                           
 12145                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 12146                           
 12147                           ; BSR set to: 0
 12148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12149                           ;incstack = 0
 12150  01C78C  0101               	movlb	1	; () banked
 12151  01C78E  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 12152  01C790  D7FD               	goto	_wait_lcd_done
 12153  01C792                     u8890:
 12154  01C792  013D               	movlb	61	; () banked
 12155  01C794  AB17               	btfss	23,5,b	;volatile
 12156  01C796  D7FD               	goto	u8890
 12157                           
 12158                           ; BSR set to: 61
 12159                           ;eadog.c: 448:  wdtdelay(50);
 12160  01C798  0E32               	movlw	50
 12161  01C79A  6EE6               	movwf	postinc1,c
 12162  01C79C  0E00               	movlw	0
 12163  01C79E  6EE6               	movwf	postinc1,c
 12164  01C7A0  0E00               	movlw	0
 12165  01C7A2  6EE6               	movwf	postinc1,c
 12166  01C7A4  0E00               	movlw	0
 12167  01C7A6  6EE6               	movwf	postinc1,c
 12168  01C7A8  EC76  F0DD         	call	_wdtdelay	;wreg free
 12169                           
 12170                           ; BSR set to: 0
 12171                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 12172  01C7AC  0012               	return		;funcret
 12173  01C7AE                     __end_of_wait_lcd_done:
 12174                           	opt callstack 0
 12175                           
 12176 ;; *************** function _wdtdelay *****************
 12177 ;; Defined at:
 12178 ;;		line 23 in file "eadog.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  delay           4  [STACK] const unsigned long 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;		None
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1  [STACK] void 
 12185 ;; Registers used:
 12186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12187 ;; Tracked objects:
 12188 ;;		On entry : 2/3D
 12189 ;;		On exit  : 3F/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12196 ;;Total ram usage:        0 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:   15
 12199 ;; This function calls:
 12200 ;;		Nothing
 12201 ;; This function is called by:
 12202 ;;		_init_display
 12203 ;;		_send_lcd_data
 12204 ;;		_send_lcd_cmd
 12205 ;;		_send_lcd_cmd_long
 12206 ;;		_eaDogM_WriteStringAtPos
 12207 ;;		_wait_lcd_done
 12208 ;; This function uses a reentrant model
 12209 ;;
 12210                           
 12211                           	psect	text46
 12212  01BAEC                     __ptext46:
 12213                           	opt callstack 0
 12214  01BAEC                     _wdtdelay:
 12215                           	opt callstack 14
 12216                           
 12217                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 12218                           
 12219                           ; BSR set to: 0
 12220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12221                           ;incstack = 0
 12222  01BAEC  0100               	movlb	0	; () banked
 12223  01BAEE  6B78               	clrf	wdtdelay@dcount& (0+255),b
 12224  01BAF0  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 12225  01BAF2  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 12226  01BAF4  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 12227  01BAF6                     l1482:
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;eadog.c: 28:   __nop();
 12231  01BAF6  F000               	nop	
 12232  01BAF8  0004               	clrwdt		;# 
 12233                           
 12234                           ;eadog.c: 30:  };
 12235  01BAFA  0E01               	movlw	1
 12236  01BAFC  0100               	movlb	0	; () banked
 12237  01BAFE  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 12238  01BB00  0E00               	movlw	0
 12239  01BB02  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 12240  01BB04  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 12241  01BB06  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;stkvar	_delay @ sp[(0)+-4]
 12245  01BB08  0EFC               	movlw	-4
 12246  01BB0A  006F FF8C  F001    	movff	plusw1,btemp
 12247  01BB10  5178               	movf	wdtdelay@dcount& (0+255),w,b
 12248  01BB12  5C01               	subwf	btemp^0,w,c
 12249  01BB14  0EFD               	movlw	-3
 12250  01BB16  006F FF8C  F001    	movff	plusw1,btemp
 12251  01BB1C  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 12252  01BB1E  5801               	subwfb	btemp^0,w,c
 12253  01BB20  0EFE               	movlw	-2
 12254  01BB22  006F FF8C  F001    	movff	plusw1,btemp
 12255  01BB28  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 12256  01BB2A  5801               	subwfb	btemp^0,w,c
 12257  01BB2C  0EFF               	movlw	-1
 12258  01BB2E  006F FF8C  F001    	movff	plusw1,btemp
 12259  01BB34  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 12260  01BB36  5801               	subwfb	btemp^0,w,c
 12261  01BB38  B0D8               	btfsc	status,0,c
 12262  01BB3A  D7DD               	goto	l1482
 12263                           
 12264                           ; BSR set to: 0
 12265                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 12266  01BB3C  52E5               	movf	postdec1,f,c
 12267  01BB3E  52E5               	movf	postdec1,f,c
 12268  01BB40  52E5               	movf	postdec1,f,c
 12269  01BB42  52E5               	movf	postdec1,f,c
 12270  01BB44  0012               	return		;funcret
 12271  01BB46                     __end_of_wdtdelay:
 12272                           	opt callstack 0
 12273                           
 12274 ;; *************** function _send_lcd_data_dma *****************
 12275 ;; Defined at:
 12276 ;;		line 182 in file "eadog.c"
 12277 ;; Parameters:    Size  Location     Type
 12278 ;;  strPtr          1  [STACK] const unsigned char 
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;		None
 12281 ;; Return value:  Size  Location     Type
 12282 ;;                  1  [STACK] void 
 12283 ;; Registers used:
 12284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12285 ;; Tracked objects:
 12286 ;;		On entry : 0/0
 12287 ;;		On exit  : 3F/3B
 12288 ;;		Unchanged: 0/0
 12289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12294 ;;Total ram usage:        0 bytes
 12295 ;; Hardware stack levels used:    1
 12296 ;; Hardware stack levels required when called:   24
 12297 ;; This function calls:
 12298 ;;		_printf
 12299 ;;		_ringBufS_flush
 12300 ;;		_start_lcd
 12301 ;;		_wait_lcd_set
 12302 ;; This function is called by:
 12303 ;;		_send_lcd_cmd_dma
 12304 ;;		_eaDogM_WriteStringAtPos
 12305 ;; This function uses a reentrant model
 12306 ;;
 12307                           
 12308                           	psect	text47
 12309  01BC92                     __ptext47:
 12310                           	opt callstack 0
 12311  01BC92                     _send_lcd_data_dma:
 12312                           	opt callstack 4
 12313                           
 12314                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 12315                           
 12316                           ; BSR set to: 0
 12317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12318                           ;incstack = 0
 12319  01BC92  EC42  F0E5         	call	_wait_lcd_set	;wreg free
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 12323  01BC96  0E00               	movlw	0
 12324  01BC98  6EE6               	movwf	postinc1,c
 12325  01BC9A  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12326  01BCA0  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12327  01BCA6  ECF4  F0D8         	call	_ringBufS_flush	;wreg free
 12328  01BCAA  94BC               	bcf	188,2,c	;volatile
 12329                           
 12330                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 12331  01BCAC  013B               	movlb	59	; () banked
 12332  01BCAE  9FFC               	bcf	252,7,b	;volatile
 12333                           
 12334                           ; BSR set to: 59
 12335                           ;eadog.c: 189:  DMA1SSZ = 1;
 12336  01BCB0  0E00               	movlw	0
 12337  01BCB2  6FF8               	movwf	248,b	;volatile
 12338  01BCB4  0E01               	movlw	1
 12339  01BCB6  6FF7               	movwf	247,b	;volatile
 12340                           
 12341                           ; BSR set to: 59
 12342                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 12343  01BCB8  8FFC               	bsf	252,7,b	;volatile
 12344                           
 12345                           ; BSR set to: 59
 12346                           ;eadog.c: 191:  printf("%c", strPtr);
 12347                           ;stkvar	_strPtr @ sp[(0)+-1]
 12348  01BCBA  0EFF               	movlw	-1
 12349  01BCBC  50E3               	movf	plusw1,w,c
 12350  01BCBE  6EE6               	movwf	postinc1,c
 12351  01BCC0  0E00               	movlw	0
 12352  01BCC2  6EE6               	movwf	postinc1,c
 12353  01BCC4  0EF9               	movlw	low STR_55
 12354  01BCC6  6EE6               	movwf	postinc1,c
 12355  01BCC8  0EFF               	movlw	high STR_55
 12356  01BCCA  6EE6               	movwf	postinc1,c
 12357  01BCCC  0E04               	movlw	4
 12358  01BCCE  6EE6               	movwf	postinc1,c
 12359  01BCD0  ECB7  F0DC         	call	_printf	;wreg free
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;eadog.c: 192:  start_lcd();
 12363  01BCD4  EC45  F0E5         	call	_start_lcd	;wreg free
 12364                           
 12365                           ; BSR set to: 59
 12366                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12367  01BCD8  52E5               	movf	postdec1,f,c
 12368  01BCDA  0012               	return		;funcret
 12369  01BCDC                     __end_of_send_lcd_data_dma:
 12370                           	opt callstack 0
 12371                           
 12372 ;; *************** function _eaDogM_WriteString *****************
 12373 ;; Defined at:
 12374 ;;		line 151 in file "eadog.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  strPtr          2  [STACK] PTR unsigned char 
 12377 ;;		 -> D.lcd(480), D(482), V(192), 
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;		None
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1  [STACK] void 
 12382 ;; Registers used:
 12383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12384 ;; Tracked objects:
 12385 ;;		On entry : 3F/0
 12386 ;;		On exit  : 3F/3B
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12393 ;;Total ram usage:        0 bytes
 12394 ;; Hardware stack levels used:    1
 12395 ;; Hardware stack levels required when called:   24
 12396 ;; This function calls:
 12397 ;;		_printf
 12398 ;;		_ringBufS_flush
 12399 ;;		_start_lcd
 12400 ;;		_strlen
 12401 ;;		_wait_lcd_set
 12402 ;; This function is called by:
 12403 ;;		_eaDogM_WriteStringAtPos
 12404 ;; This function uses a reentrant model
 12405 ;;
 12406                           
 12407                           	psect	text48
 12408  01B008                     __ptext48:
 12409                           	opt callstack 0
 12410  01B008                     _eaDogM_WriteString:
 12411                           	opt callstack 4
 12412                           
 12413                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 12414                           
 12415                           ; BSR set to: 59
 12416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12417                           ;incstack = 0
 12418  01B008  EC42  F0E5         	call	_wait_lcd_set	;wreg free
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 12422  01B00C  0E00               	movlw	0
 12423  01B00E  6EE6               	movwf	postinc1,c
 12424  01B010  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12425  01B016  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12426  01B01C  ECF4  F0D8         	call	_ringBufS_flush	;wreg free
 12427  01B020  94BC               	bcf	188,2,c	;volatile
 12428                           
 12429                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 12430                           ;stkvar	_strPtr @ sp[(0)+-2]
 12431  01B022  0EFE               	movlw	-2
 12432  01B024  006F FF8F FFE6     	movff	plusw1,postinc1
 12433  01B02A  006F FF8F FFE6     	movff	plusw1,postinc1
 12434  01B030  EC57  F0D8         	call	_strlen	;wreg free
 12435  01B034  5002               	movf	(btemp+1)^0,w,c
 12436  01B036  E104               	bnz	u12720
 12437  01B038  0E41               	movlw	65
 12438  01B03A  5C01               	subwf	btemp^0,w,c
 12439  01B03C  A0D8               	btfss	status,0,c
 12440  01B03E  D010               	goto	l13251
 12441  01B040                     u12720:
 12442                           
 12443                           ;stkvar	_strPtr @ sp[(0)+-2]
 12444  01B040  0EFE               	movlw	-2
 12445  01B042  006F FF8C  F00B    	movff	plusw1,btemp+10
 12446  01B048  0EFF               	movlw	-1
 12447  01B04A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12448  01B050  0E40               	movlw	64
 12449  01B052  240B               	addwf	(btemp+10)^0,w,c
 12450  01B054  6ED9               	movwf	fsr2l,c
 12451  01B056  0E00               	movlw	0
 12452  01B058  200C               	addwfc	(btemp+11)^0,w,c
 12453  01B05A  6EDA               	movwf	fsr2h,c
 12454  01B05C  0E00               	movlw	0
 12455  01B05E  6EDF               	movwf	indf2,c
 12456  01B060                     l13251:
 12457                           
 12458                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 12459  01B060  013B               	movlb	59	; () banked
 12460  01B062  9FFC               	bcf	252,7,b	;volatile
 12461                           
 12462                           ; BSR set to: 59
 12463                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 12464                           ;stkvar	_strPtr @ sp[(0)+-2]
 12465  01B064  0EFE               	movlw	-2
 12466  01B066  006F FF8F FFE6     	movff	plusw1,postinc1
 12467  01B06C  006F FF8F FFE6     	movff	plusw1,postinc1
 12468  01B072  EC57  F0D8         	call	_strlen	;wreg free
 12469  01B076  0060  F007  FBF7   	movff	btemp,15351	;volatile
 12470  01B07C  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 12471                           
 12472                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 12473  01B082  013B               	movlb	59	; () banked
 12474  01B084  8FFC               	bsf	252,7,b	;volatile
 12475                           
 12476                           ; BSR set to: 59
 12477                           ;eadog.c: 161:  printf("%s", strPtr);
 12478                           ;stkvar	_strPtr @ sp[(0)+-2]
 12479  01B086  0EFE               	movlw	-2
 12480  01B088  006F FF8F FFE6     	movff	plusw1,postinc1
 12481  01B08E  006F FF8F FFE6     	movff	plusw1,postinc1
 12482  01B094  0EFC               	movlw	low STR_54
 12483  01B096  6EE6               	movwf	postinc1,c
 12484  01B098  0EFF               	movlw	high STR_54
 12485  01B09A  6EE6               	movwf	postinc1,c
 12486  01B09C  0E04               	movlw	4
 12487  01B09E  6EE6               	movwf	postinc1,c
 12488  01B0A0  ECB7  F0DC         	call	_printf	;wreg free
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;eadog.c: 162:  start_lcd();
 12492  01B0A4  EC45  F0E5         	call	_start_lcd	;wreg free
 12493                           
 12494                           ; BSR set to: 59
 12495                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 12496  01B0A8  52E5               	movf	postdec1,f,c
 12497  01B0AA  52E5               	movf	postdec1,f,c
 12498  01B0AC  0012               	return		;funcret
 12499  01B0AE                     __end_of_eaDogM_WriteString:
 12500                           	opt callstack 0
 12501                           
 12502 ;; *************** function _wait_lcd_set *****************
 12503 ;; Defined at:
 12504 ;;		line 434 in file "eadog.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;		None
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;		None
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1  [STACK] void 
 12511 ;; Registers used:
 12512 ;;		None
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 3F/1
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12522 ;;Total ram usage:        0 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:   15
 12525 ;; This function calls:
 12526 ;;		Nothing
 12527 ;; This function is called by:
 12528 ;;		_eaDogM_WriteString
 12529 ;;		_send_lcd_data_dma
 12530 ;; This function uses a reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text49
 12534  01CA84                     __ptext49:
 12535                           	opt callstack 0
 12536  01CA84                     _wait_lcd_set:
 12537                           	opt callstack 12
 12538                           
 12539                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 12540                           
 12541                           ; BSR set to: 59
 12542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12543                           ;incstack = 0
 12544  01CA84  0101               	movlb	1	; () banked
 12545  01CA86  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 12546                           
 12547                           ; BSR set to: 1
 12548                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 12549  01CA88  0012               	return		;funcret
 12550  01CA8A                     __end_of_wait_lcd_set:
 12551                           	opt callstack 0
 12552                           
 12553 ;; *************** function _start_lcd *****************
 12554 ;; Defined at:
 12555 ;;		line 429 in file "eadog.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;		None
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;		None
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  1  [STACK] void 
 12562 ;; Registers used:
 12563 ;;		None
 12564 ;; Tracked objects:
 12565 ;;		On entry : 3F/0
 12566 ;;		On exit  : 3F/3B
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12573 ;;Total ram usage:        0 bytes
 12574 ;; Hardware stack levels used:    1
 12575 ;; Hardware stack levels required when called:   15
 12576 ;; This function calls:
 12577 ;;		Nothing
 12578 ;; This function is called by:
 12579 ;;		_eaDogM_WriteString
 12580 ;;		_send_lcd_data_dma
 12581 ;; This function uses a reentrant model
 12582 ;;
 12583                           
 12584                           	psect	text50
 12585  01CA8A                     __ptext50:
 12586                           	opt callstack 0
 12587  01CA8A                     _start_lcd:
 12588                           	opt callstack 12
 12589                           
 12590                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 12591                           
 12592                           ; BSR set to: 1
 12593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12594                           ;incstack = 0
 12595  01CA8A  013B               	movlb	59	; () banked
 12596  01CA8C  8DFC               	bsf	252,6,b	;volatile
 12597                           
 12598                           ; BSR set to: 59
 12599                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 12600  01CA8E  0012               	return		;funcret
 12601  01CA90                     __end_of_start_lcd:
 12602                           	opt callstack 0
 12603                           
 12604 ;; *************** function _ringBufS_flush *****************
 12605 ;; Defined at:
 12606 ;;		line 76 in file "ringbufs.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12609 ;;		 -> ring_buf1(67), 
 12610 ;;  clearBuffer     1  [STACK] const char 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1  [STACK] void 
 12615 ;; Registers used:
 12616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12617 ;; Tracked objects:
 12618 ;;		On entry : 3F/1
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:   16
 12629 ;; This function calls:
 12630 ;;		_memset
 12631 ;; This function is called by:
 12632 ;;		_eaDogM_WriteString
 12633 ;;		_send_lcd_data_dma
 12634 ;; This function uses a reentrant model
 12635 ;;
 12636                           
 12637                           	psect	text51
 12638  01B1E8                     __ptext51:
 12639                           	opt callstack 0
 12640  01B1E8                     _ringBufS_flush:
 12641                           	opt callstack 11
 12642                           
 12643                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 12644                           ;stkvar	__this @ sp[(0)+-2]
 12645                           
 12646                           ; BSR set to: 59
 12647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12648                           ;incstack = 0
 12649  01B1E8  0EFE               	movlw	-2
 12650  01B1EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 12651  01B1F0  0EFF               	movlw	-1
 12652  01B1F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 12653  01B1F8  0E42               	movlw	66
 12654  01B1FA  240B               	addwf	(btemp+10)^0,w,c
 12655  01B1FC  6ED9               	movwf	fsr2l,c
 12656  01B1FE  0E00               	movlw	0
 12657  01B200  200C               	addwfc	(btemp+11)^0,w,c
 12658  01B202  6EDA               	movwf	fsr2h,c
 12659  01B204  0E00               	movlw	0
 12660  01B206  6EDF               	movwf	indf2,c
 12661                           
 12662                           ;ringbufs.c: 79:  _this->head = 0;
 12663                           ;stkvar	__this @ sp[(0)+-2]
 12664  01B208  0EFE               	movlw	-2
 12665  01B20A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12666  01B210  0EFF               	movlw	-1
 12667  01B212  006F FF8C  F00C    	movff	plusw1,btemp+11
 12668  01B218  0E40               	movlw	64
 12669  01B21A  240B               	addwf	(btemp+10)^0,w,c
 12670  01B21C  6ED9               	movwf	fsr2l,c
 12671  01B21E  0E00               	movlw	0
 12672  01B220  200C               	addwfc	(btemp+11)^0,w,c
 12673  01B222  6EDA               	movwf	fsr2h,c
 12674  01B224  0E00               	movlw	0
 12675  01B226  6EDF               	movwf	indf2,c
 12676                           
 12677                           ;ringbufs.c: 80:  _this->tail = 0;
 12678                           ;stkvar	__this @ sp[(0)+-2]
 12679  01B228  0EFE               	movlw	-2
 12680  01B22A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12681  01B230  0EFF               	movlw	-1
 12682  01B232  006F FF8C  F00C    	movff	plusw1,btemp+11
 12683  01B238  0E41               	movlw	65
 12684  01B23A  240B               	addwf	(btemp+10)^0,w,c
 12685  01B23C  6ED9               	movwf	fsr2l,c
 12686  01B23E  0E00               	movlw	0
 12687  01B240  200C               	addwfc	(btemp+11)^0,w,c
 12688  01B242  6EDA               	movwf	fsr2h,c
 12689  01B244  0E00               	movlw	0
 12690  01B246  6EDF               	movwf	indf2,c
 12691                           
 12692                           ;ringbufs.c: 81:  if (clearBuffer) {
 12693                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 12694  01B248  0EFD               	movlw	-3
 12695  01B24A  50E3               	movf	plusw1,w,c
 12696  01B24C  B4D8               	btfsc	status,2,c
 12697  01B24E  D011               	goto	l1614
 12698                           
 12699                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 12700  01B250  0E40               	movlw	64
 12701  01B252  6EE6               	movwf	postinc1,c
 12702  01B254  0E00               	movlw	0
 12703  01B256  6EE6               	movwf	postinc1,c
 12704  01B258  0E00               	movlw	0
 12705  01B25A  6EE6               	movwf	postinc1,c
 12706  01B25C  0E00               	movlw	0
 12707  01B25E  6EE6               	movwf	postinc1,c
 12708                           
 12709                           ;stkvar	__this @ sp[(-4)+-2]
 12710  01B260  0EFA               	movlw	-6
 12711  01B262  006F FF8F FFE6     	movff	plusw1,postinc1
 12712  01B268  006F FF8F FFE6     	movff	plusw1,postinc1
 12713  01B26E  EC5D  F0B7         	call	_memset	;wreg free
 12714  01B272                     l1614:
 12715                           
 12716                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 12717  01B272  52E5               	movf	postdec1,f,c
 12718  01B274  52E5               	movf	postdec1,f,c
 12719  01B276  52E5               	movf	postdec1,f,c
 12720  01B278  0012               	return		;funcret
 12721  01B27A                     __end_of_ringBufS_flush:
 12722                           	opt callstack 0
 12723                           
 12724 ;; *************** function _memset *****************
 12725 ;; Defined at:
 12726 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  dest            2  [STACK] PTR void 
 12729 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12730 ;;  c               2  [STACK] int 
 12731 ;;  n               2  [STACK] unsigned int 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;  s               2  [STACK] PTR unsigned char 
 12734 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12735 ;;  k               2  [STACK] unsigned int 
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  2  [STACK] PTR void 
 12738 ;; Registers used:
 12739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/1
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12749 ;;Total ram usage:        0 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; Hardware stack levels required when called:   15
 12752 ;; This function calls:
 12753 ;;		Nothing
 12754 ;; This function is called by:
 12755 ;;		_ringBufS_init
 12756 ;;		_ringBufS_flush
 12757 ;; This function uses a reentrant model
 12758 ;;
 12759                           
 12760                           	psect	text52
 12761  016EBA                     __ptext52:
 12762                           	opt callstack 0
 12763  016EBA                     _memset:
 12764                           	opt callstack 0
 12765                           
 12766                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12767  016EBA  52E6               	movf	postinc1,f,c
 12768  016EBC  52E6               	movf	postinc1,f,c
 12769  016EBE  52E6               	movf	postinc1,f,c
 12770  016EC0  52E6               	movf	postinc1,f,c
 12771                           
 12772                           ;stkvar	_dest @ sp[(-4)+-2]
 12773                           
 12774                           ;incstack = 0
 12775  016EC2  0EFA               	movlw	-6
 12776  016EC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 12777  016ECA  0EFB               	movlw	-5
 12778  016ECC  006F FF8C  F00C    	movff	plusw1,btemp+11
 12779                           
 12780                           ;stkvar	_s @ sp[(-4)+0]
 12781  016ED2  0EFD               	movlw	-3
 12782  016ED4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12783  016EDA  0EFC               	movlw	-4
 12784  016EDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12785                           
 12786                           ;stkvar	_n @ sp[(-4)+-6]
 12787  016EE2  0EF6               	movlw	-10
 12788  016EE4  006F FF8C  F001    	movff	plusw1,btemp
 12789  016EEA  0EF7               	movlw	-9
 12790  016EEC  50E3               	movf	plusw1,w,c
 12791  016EEE  1001               	iorwf	btemp^0,w,c
 12792  016EF0  B4D8               	btfsc	status,2,c
 12793  016EF2  D154               	goto	u11270
 12794                           
 12795                           ;stkvar	_c @ sp[(-4)+-4]
 12796                           ;stkvar	_s @ sp[(-4)+0]
 12797  016EF4  0EFC               	movlw	-4
 12798  016EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12799  016EFC  0EFD               	movlw	-3
 12800  016EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12801  016F04  0EF8               	movlw	-8
 12802  016F06  006F FF8F FFDF     	movff	plusw1,indf2
 12803                           
 12804                           ;stkvar	_c @ sp[(-4)+-4]
 12805                           ;stkvar	_n @ sp[(-4)+-6]
 12806                           ;stkvar	_s @ sp[(-4)+0]
 12807  016F0C  0EFC               	movlw	-4
 12808  016F0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12809  016F14  0EFD               	movlw	-3
 12810  016F16  006F FF8C  F00C    	movff	plusw1,btemp+11
 12811  016F1C  0EF6               	movlw	-10
 12812  016F1E  50E3               	movf	plusw1,w,c
 12813  016F20  260B               	addwf	(btemp+10)^0,f,c
 12814  016F22  0EF7               	movlw	-9
 12815  016F24  50E3               	movf	plusw1,w,c
 12816  016F26  220C               	addwfc	(btemp+11)^0,f,c
 12817  016F28  0EFF               	movlw	255
 12818  016F2A  240B               	addwf	(btemp+10)^0,w,c
 12819  016F2C  6ED9               	movwf	fsr2l,c
 12820  016F2E  0EFF               	movlw	255
 12821  016F30  200C               	addwfc	(btemp+11)^0,w,c
 12822  016F32  6EDA               	movwf	fsr2h,c
 12823  016F34  0EF8               	movlw	-8
 12824  016F36  006F FF8F FFDF     	movff	plusw1,indf2
 12825                           
 12826                           ;stkvar	_n @ sp[(-4)+-6]
 12827  016F3C  0EF7               	movlw	-9
 12828  016F3E  50E3               	movf	plusw1,w,c
 12829  016F40  E108               	bnz	l12403
 12830  016F42  0EF6               	movlw	-10
 12831  016F44  006F FF8C  F001    	movff	plusw1,btemp
 12832  016F4A  0E03               	movlw	3
 12833  016F4C  5E01               	subwf	btemp^0,f,c
 12834  016F4E  A0D8               	btfss	status,0,c
 12835  016F50  D125               	goto	u11270
 12836  016F52                     l12403:
 12837                           
 12838                           ;stkvar	_c @ sp[(-4)+-4]
 12839                           ;stkvar	_s @ sp[(-4)+0]
 12840  016F52  0EFC               	movlw	-4
 12841  016F54  006F FF8C  F00B    	movff	plusw1,btemp+10
 12842  016F5A  0EFD               	movlw	-3
 12843  016F5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12844  016F62  0E01               	movlw	1
 12845  016F64  240B               	addwf	(btemp+10)^0,w,c
 12846  016F66  6ED9               	movwf	fsr2l,c
 12847  016F68  0E00               	movlw	0
 12848  016F6A  200C               	addwfc	(btemp+11)^0,w,c
 12849  016F6C  6EDA               	movwf	fsr2h,c
 12850  016F6E  0EF8               	movlw	-8
 12851  016F70  006F FF8F FFDF     	movff	plusw1,indf2
 12852                           
 12853                           ;stkvar	_c @ sp[(-4)+-4]
 12854                           ;stkvar	_s @ sp[(-4)+0]
 12855  016F76  0EFC               	movlw	-4
 12856  016F78  006F FF8C  F00B    	movff	plusw1,btemp+10
 12857  016F7E  0EFD               	movlw	-3
 12858  016F80  006F FF8C  F00C    	movff	plusw1,btemp+11
 12859  016F86  0E02               	movlw	2
 12860  016F88  240B               	addwf	(btemp+10)^0,w,c
 12861  016F8A  6ED9               	movwf	fsr2l,c
 12862  016F8C  0E00               	movlw	0
 12863  016F8E  200C               	addwfc	(btemp+11)^0,w,c
 12864  016F90  6EDA               	movwf	fsr2h,c
 12865  016F92  0EF8               	movlw	-8
 12866  016F94  006F FF8F FFDF     	movff	plusw1,indf2
 12867                           
 12868                           ;stkvar	_c @ sp[(-4)+-4]
 12869                           ;stkvar	_n @ sp[(-4)+-6]
 12870                           ;stkvar	_s @ sp[(-4)+0]
 12871  016F9A  0EFC               	movlw	-4
 12872  016F9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12873  016FA2  0EFD               	movlw	-3
 12874  016FA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12875  016FAA  0EF6               	movlw	-10
 12876  016FAC  50E3               	movf	plusw1,w,c
 12877  016FAE  260B               	addwf	(btemp+10)^0,f,c
 12878  016FB0  0EF7               	movlw	-9
 12879  016FB2  50E3               	movf	plusw1,w,c
 12880  016FB4  220C               	addwfc	(btemp+11)^0,f,c
 12881  016FB6  0EFE               	movlw	254
 12882  016FB8  240B               	addwf	(btemp+10)^0,w,c
 12883  016FBA  6ED9               	movwf	fsr2l,c
 12884  016FBC  0EFF               	movlw	255
 12885  016FBE  200C               	addwfc	(btemp+11)^0,w,c
 12886  016FC0  6EDA               	movwf	fsr2h,c
 12887  016FC2  0EF8               	movlw	-8
 12888  016FC4  006F FF8F FFDF     	movff	plusw1,indf2
 12889                           
 12890                           ;stkvar	_c @ sp[(-4)+-4]
 12891                           ;stkvar	_n @ sp[(-4)+-6]
 12892                           ;stkvar	_s @ sp[(-4)+0]
 12893  016FCA  0EFC               	movlw	-4
 12894  016FCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 12895  016FD2  0EFD               	movlw	-3
 12896  016FD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12897  016FDA  0EF6               	movlw	-10
 12898  016FDC  50E3               	movf	plusw1,w,c
 12899  016FDE  260B               	addwf	(btemp+10)^0,f,c
 12900  016FE0  0EF7               	movlw	-9
 12901  016FE2  50E3               	movf	plusw1,w,c
 12902  016FE4  220C               	addwfc	(btemp+11)^0,f,c
 12903  016FE6  0EFD               	movlw	253
 12904  016FE8  240B               	addwf	(btemp+10)^0,w,c
 12905  016FEA  6ED9               	movwf	fsr2l,c
 12906  016FEC  0EFF               	movlw	255
 12907  016FEE  200C               	addwfc	(btemp+11)^0,w,c
 12908  016FF0  6EDA               	movwf	fsr2h,c
 12909  016FF2  0EF8               	movlw	-8
 12910  016FF4  006F FF8F FFDF     	movff	plusw1,indf2
 12911                           
 12912                           ;stkvar	_n @ sp[(-4)+-6]
 12913  016FFA  0EF7               	movlw	-9
 12914  016FFC  50E3               	movf	plusw1,w,c
 12915  016FFE  E108               	bnz	l12409
 12916  017000  0EF6               	movlw	-10
 12917  017002  006F FF8C  F001    	movff	plusw1,btemp
 12918  017008  0E07               	movlw	7
 12919  01700A  5E01               	subwf	btemp^0,f,c
 12920  01700C  A0D8               	btfss	status,0,c
 12921  01700E  D0C6               	goto	u11270
 12922  017010                     l12409:
 12923                           
 12924                           ;stkvar	_c @ sp[(-4)+-4]
 12925                           ;stkvar	_s @ sp[(-4)+0]
 12926  017010  0EFC               	movlw	-4
 12927  017012  006F FF8C  F00B    	movff	plusw1,btemp+10
 12928  017018  0EFD               	movlw	-3
 12929  01701A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12930  017020  0E03               	movlw	3
 12931  017022  240B               	addwf	(btemp+10)^0,w,c
 12932  017024  6ED9               	movwf	fsr2l,c
 12933  017026  0E00               	movlw	0
 12934  017028  200C               	addwfc	(btemp+11)^0,w,c
 12935  01702A  6EDA               	movwf	fsr2h,c
 12936  01702C  0EF8               	movlw	-8
 12937  01702E  006F FF8F FFDF     	movff	plusw1,indf2
 12938                           
 12939                           ;stkvar	_c @ sp[(-4)+-4]
 12940                           ;stkvar	_n @ sp[(-4)+-6]
 12941                           ;stkvar	_s @ sp[(-4)+0]
 12942  017034  0EFC               	movlw	-4
 12943  017036  006F FF8C  F00B    	movff	plusw1,btemp+10
 12944  01703C  0EFD               	movlw	-3
 12945  01703E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12946  017044  0EF6               	movlw	-10
 12947  017046  50E3               	movf	plusw1,w,c
 12948  017048  260B               	addwf	(btemp+10)^0,f,c
 12949  01704A  0EF7               	movlw	-9
 12950  01704C  50E3               	movf	plusw1,w,c
 12951  01704E  220C               	addwfc	(btemp+11)^0,f,c
 12952  017050  0EFC               	movlw	252
 12953  017052  240B               	addwf	(btemp+10)^0,w,c
 12954  017054  6ED9               	movwf	fsr2l,c
 12955  017056  0EFF               	movlw	255
 12956  017058  200C               	addwfc	(btemp+11)^0,w,c
 12957  01705A  6EDA               	movwf	fsr2h,c
 12958  01705C  0EF8               	movlw	-8
 12959  01705E  006F FF8F FFDF     	movff	plusw1,indf2
 12960                           
 12961                           ;stkvar	_n @ sp[(-4)+-6]
 12962  017064  0EF7               	movlw	-9
 12963  017066  50E3               	movf	plusw1,w,c
 12964  017068  E108               	bnz	l12415
 12965  01706A  0EF6               	movlw	-10
 12966  01706C  006F FF8C  F001    	movff	plusw1,btemp
 12967  017072  0E09               	movlw	9
 12968  017074  5E01               	subwf	btemp^0,f,c
 12969  017076  A0D8               	btfss	status,0,c
 12970  017078  D091               	goto	u11270
 12971  01707A                     l12415:
 12972                           
 12973                           ;stkvar	_s @ sp[(-4)+0]
 12974  01707A  0EFC               	movlw	-4
 12975  01707C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12976  017082  1E0B               	comf	(btemp+10)^0,f,c
 12977  017084  0EFD               	movlw	-3
 12978  017086  006F FF8C  F00C    	movff	plusw1,btemp+11
 12979  01708C  1E0C               	comf	(btemp+11)^0,f,c
 12980  01708E  2A0B               	incf	(btemp+10)^0,f,c
 12981  017090  B4D8               	btfsc	status,2,c
 12982  017092  2A0C               	incf	(btemp+11)^0,f,c
 12983  017094  0E03               	movlw	3
 12984  017096  160B               	andwf	(btemp+10)^0,f,c
 12985  017098  0E00               	movlw	0
 12986  01709A  160C               	andwf	(btemp+11)^0,f,c
 12987                           
 12988                           ;stkvar	_k @ sp[(-4)+2]
 12989  01709C  0EFE               	movlw	-2
 12990  01709E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12991  0170A4  0EFF               	movlw	-1
 12992  0170A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12993                           
 12994                           ;stkvar	_k @ sp[(-4)+2]
 12995                           ;stkvar	_s @ sp[(-4)+0]
 12996  0170AC  0EFC               	movlw	-4
 12997  0170AE  50E3               	movf	plusw1,w,c
 12998  0170B0  6E01               	movwf	btemp^0,c
 12999  0170B2  0EFE               	movlw	-2
 13000  0170B4  50E3               	movf	plusw1,w,c
 13001  0170B6  2601               	addwf	btemp^0,f,c
 13002  0170B8  0EFC               	movlw	-4
 13003  0170BA  0060  F007  FFE3   	movff	btemp,plusw1
 13004  0170C0  0EFD               	movlw	-3
 13005  0170C2  50E3               	movf	plusw1,w,c
 13006  0170C4  6E01               	movwf	btemp^0,c
 13007  0170C6  0EFF               	movlw	-1
 13008  0170C8  50E3               	movf	plusw1,w,c
 13009  0170CA  2201               	addwfc	btemp^0,f,c
 13010  0170CC  0EFD               	movlw	-3
 13011  0170CE  0060  F007  FFE3   	movff	btemp,plusw1
 13012                           
 13013                           ;stkvar	_k @ sp[(-4)+2]
 13014                           ;stkvar	_n @ sp[(-4)+-6]
 13015  0170D4  0EF6               	movlw	-10
 13016  0170D6  50E3               	movf	plusw1,w,c
 13017  0170D8  6E01               	movwf	btemp^0,c
 13018  0170DA  0EFE               	movlw	-2
 13019  0170DC  50E3               	movf	plusw1,w,c
 13020  0170DE  5E01               	subwf	btemp^0,f,c
 13021  0170E0  0EF6               	movlw	-10
 13022  0170E2  0060  F007  FFE3   	movff	btemp,plusw1
 13023  0170E8  0EF7               	movlw	-9
 13024  0170EA  50E3               	movf	plusw1,w,c
 13025  0170EC  6E01               	movwf	btemp^0,c
 13026  0170EE  0EFF               	movlw	-1
 13027  0170F0  50E3               	movf	plusw1,w,c
 13028  0170F2  5A01               	subwfb	btemp^0,f,c
 13029  0170F4  0EF7               	movlw	-9
 13030  0170F6  0060  F007  FFE3   	movff	btemp,plusw1
 13031  0170FC  0EFC               	movlw	252
 13032  0170FE  6E0B               	movwf	(btemp+10)^0,c
 13033  017100  0EFF               	movlw	255
 13034  017102  6E0C               	movwf	(btemp+11)^0,c
 13035                           
 13036                           ;stkvar	_n @ sp[(-4)+-6]
 13037  017104  0EF6               	movlw	-10
 13038  017106  006F FF8C  F001    	movff	plusw1,btemp
 13039  01710C  500B               	movf	(btemp+10)^0,w,c
 13040  01710E  1601               	andwf	btemp^0,f,c
 13041  017110  0EF6               	movlw	-10
 13042  017112  0060  F007  FFE3   	movff	btemp,plusw1
 13043  017118  0EF7               	movlw	-9
 13044  01711A  006F FF8C  F001    	movff	plusw1,btemp
 13045  017120  500C               	movf	(btemp+11)^0,w,c
 13046  017122  1601               	andwf	btemp^0,f,c
 13047  017124  0EF7               	movlw	-9
 13048  017126  D02E               	goto	L12
 13049  017128                     l12423:
 13050                           
 13051                           ;stkvar	_c @ sp[(-4)+-4]
 13052                           ;stkvar	_s @ sp[(-4)+0]
 13053  017128  0EFC               	movlw	-4
 13054  01712A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13055  017130  0EFD               	movlw	-3
 13056  017132  006F FF8F FFDA     	movff	plusw1,fsr2h
 13057  017138  0EF8               	movlw	-8
 13058  01713A  006F FF8F FFDF     	movff	plusw1,indf2
 13059                           
 13060                           ;stkvar	_n @ sp[(-4)+-6]
 13061  017140  0EF6               	movlw	-10
 13062  017142  006F FF8C  F001    	movff	plusw1,btemp
 13063  017148  0E01               	movlw	1
 13064  01714A  5E01               	subwf	btemp^0,f,c
 13065  01714C  0EF6               	movlw	-10
 13066  01714E  0060  F007  FFE3   	movff	btemp,plusw1
 13067  017154  0EF7               	movlw	-9
 13068  017156  006F FF8C  F001    	movff	plusw1,btemp
 13069  01715C  0E00               	movlw	0
 13070  01715E  5A01               	subwfb	btemp^0,f,c
 13071  017160  0EF7               	movlw	-9
 13072  017162  0060  F007  FFE3   	movff	btemp,plusw1
 13073                           
 13074                           ;stkvar	_s @ sp[(-4)+0]
 13075  017168  0EFC               	movlw	-4
 13076  01716A  50E3               	movf	plusw1,w,c
 13077  01716C  0F01               	addlw	1
 13078  01716E  6E01               	movwf	btemp^0,c
 13079  017170  0EFC               	movlw	-4
 13080  017172  0060  F007  FFE3   	movff	btemp,plusw1
 13081  017178  6A01               	clrf	btemp^0,c
 13082  01717A  0EFD               	movlw	-3
 13083  01717C  50E3               	movf	plusw1,w,c
 13084  01717E  2001               	addwfc	btemp^0,w,c
 13085  017180  6E01               	movwf	btemp^0,c
 13086  017182  0EFD               	movlw	-3
 13087  017184                     L12:
 13088  017184  0060  F007  FFE3   	movff	btemp,plusw1
 13089                           
 13090                           ;stkvar	_n @ sp[(-4)+-6]
 13091  01718A  0EF6               	movlw	-10
 13092  01718C  006F FF8C  F001    	movff	plusw1,btemp
 13093  017192  0EF7               	movlw	-9
 13094  017194  50E3               	movf	plusw1,w,c
 13095  017196  1001               	iorwf	btemp^0,w,c
 13096  017198  A4D8               	btfss	status,2,c
 13097  01719A  D7C6               	goto	l12423
 13098  01719C                     u11270:
 13099                           
 13100                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 13101  01719C  0EF6               	movlw	246
 13102  01719E  26E1               	addwf	fsr1l,f,c
 13103  0171A0  0EFF               	movlw	255
 13104  0171A2  22E2               	addwfc	fsr1h,f,c
 13105  0171A4  0012               	return		;funcret
 13106  0171A6                     __end_of_memset:
 13107                           	opt callstack 0
 13108                           
 13109 ;; *************** function _printf *****************
 13110 ;; Defined at:
 13111 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 13112 ;; Parameters:    Size  Location     Type
 13113 ;;  fmt             2  [STACK] PTR const unsigned char 
 13114 ;;		 -> STR_55(3), STR_54(3), 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;  ap              2  [STACK] PTR void [1]
 13117 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13118 ;;  ret             2    0        int 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  2  [STACK] int 
 13121 ;; Registers used:
 13122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13123 ;; Tracked objects:
 13124 ;;		On entry : 3F/3B
 13125 ;;		On exit  : 3F/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13132 ;;Total ram usage:        0 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:   23
 13135 ;; This function calls:
 13136 ;;		_vfprintf
 13137 ;; This function is called by:
 13138 ;;		_eaDogM_WriteString
 13139 ;;		_send_lcd_data_dma
 13140 ;; This function uses a reentrant model
 13141 ;;
 13142                           
 13143                           	psect	text53
 13144  01B96E                     __ptext53:
 13145                           	opt callstack 0
 13146  01B96E                     _printf:
 13147                           	opt callstack 0
 13148                           
 13149                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13150  01B96E  52E6               	movf	postinc1,f,c
 13151  01B970  52E6               	movf	postinc1,f,c
 13152                           
 13153                           ;stkvar	?_printf @ sp[(-2)+-3]
 13154                           
 13155                           ;incstack = 0
 13156  01B972  0EFB               	movlw	251
 13157  01B974  24E1               	addwf	fsr1l,w,c
 13158  01B976  6E0B               	movwf	(btemp+10)^0,c
 13159  01B978  0EFF               	movlw	255
 13160  01B97A  20E2               	addwfc	fsr1h,w,c
 13161  01B97C  6E0C               	movwf	(btemp+11)^0,c
 13162                           
 13163                           ;stkvar	_ap @ sp[(-2)+0]
 13164  01B97E  0EFF               	movlw	-1
 13165  01B980  0060  F033  FFE3   	movff	btemp+11,plusw1
 13166  01B986  0EFE               	movlw	-2
 13167  01B988  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13168                           
 13169                           ;stkvar	_ap @ sp[(-2)+0]
 13170  01B98E  0EFE               	movlw	254
 13171  01B990  24E1               	addwf	fsr1l,w,c
 13172  01B992  6E01               	movwf	btemp^0,c
 13173  01B994  0EFF               	movlw	255
 13174  01B996  20E2               	addwfc	fsr1h,w,c
 13175  01B998  6E02               	movwf	(btemp+1)^0,c
 13176  01B99A  0060  F007  FFE6   	movff	btemp,postinc1
 13177  01B9A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13178                           
 13179                           ;stkvar	_fmt @ sp[(-4)+-3]
 13180  01B9A6  0EF9               	movlw	-7
 13181  01B9A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13182  01B9AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13183  01B9B4  0E00               	movlw	0
 13184  01B9B6  6EE6               	movwf	postinc1,c
 13185  01B9B8  0E00               	movlw	0
 13186  01B9BA  6EE6               	movwf	postinc1,c
 13187  01B9BC  EC05  F0D7         	call	_vfprintf	;wreg free
 13188                           
 13189                           ; BSR set to: 0
 13190                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 13191  01B9C0  52E5               	movf	postdec1,f,c
 13192  01B9C2  52E5               	movf	postdec1,f,c
 13193  01B9C4  52E5               	movf	postdec1,f,c
 13194  01B9C6  50E7               	movf	indf1,w,c
 13195  01B9C8  5EE1               	subwf	fsr1l,f,c
 13196  01B9CA  0E00               	movlw	0
 13197  01B9CC  5AE2               	subwfb	fsr1h,f,c
 13198  01B9CE  0012               	return		;funcret
 13199  01B9D0                     __end_of_printf:
 13200                           	opt callstack 0
 13201                           
 13202 ;; *************** function _vfprintf *****************
 13203 ;; Defined at:
 13204 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13205 ;; Parameters:    Size  Location     Type
 13206 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13207 ;;		 -> f(6), NULL(0), 
 13208 ;;  fmt             2  [STACK] PTR const unsigned char 
 13209 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 13210 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 13211 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 13212 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 13213 ;;		 -> STR_58(19), STR_55(3), STR_54(3), STR_53(21), 
 13214 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 13215 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 13216 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 13217 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 13218 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 13219 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 13220 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 13221 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 13222 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 13223 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 13224 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 13225 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 13226 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 13227 ;;  ap              2  [STACK] PTR PTR void 
 13228 ;;		 -> ap(2), ap(2), 
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;  cfmt            2  [STACK] PTR unsigned char 
 13231 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 13232 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 13233 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 13234 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 13235 ;;		 -> STR_58(19), STR_55(3), STR_54(3), STR_53(21), 
 13236 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 13237 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 13238 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 13239 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 13240 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 13241 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 13242 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 13243 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 13244 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 13245 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 13246 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 13247 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 13248 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  2  [STACK] int 
 13251 ;; Registers used:
 13252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/1
 13255 ;;		On exit  : 3F/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13262 ;;Total ram usage:        0 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:   22
 13265 ;; This function calls:
 13266 ;;		_vfpfcnvrt
 13267 ;; This function is called by:
 13268 ;;		_sprintf
 13269 ;;		_printf
 13270 ;; This function uses a reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text54
 13274  01AE0A                     __ptext54:
 13275                           	opt callstack 0
 13276  01AE0A                     _vfprintf:
 13277                           	opt callstack 0
 13278                           
 13279                           ; BSR set to: 0
 13280                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13281  01AE0A  52E6               	movf	postinc1,f,c
 13282  01AE0C  52E6               	movf	postinc1,f,c
 13283                           
 13284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 13285                           ;stkvar	_fmt @ sp[(-2)+-4]
 13286                           
 13287                           ;incstack = 0
 13288 ;; hardware stack exceeded
 13289  01AE0E  0EFA               	movlw	-6
 13290  01AE10  006F FF8C  F00B    	movff	plusw1,btemp+10
 13291  01AE16  0EFB               	movlw	-5
 13292  01AE18  006F FF8C  F00C    	movff	plusw1,btemp+11
 13293                           
 13294                           ;stkvar	_cfmt @ sp[(-2)+0]
 13295  01AE1E  0EFF               	movlw	-1
 13296  01AE20  0060  F033  FFE3   	movff	btemp+11,plusw1
 13297  01AE26  0EFE               	movlw	-2
 13298  01AE28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13299                           
 13300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 13301  01AE2E  0100               	movlb	0	; () banked
 13302  01AE30  6B9A               	clrf	_nout& (0+255),b
 13303  01AE32  6B9B               	clrf	(_nout+1)& (0+255),b
 13304                           
 13305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13306  01AE34  D021               	goto	l13273
 13307  01AE36                     l13271:
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 13311                           ;stkvar	_ap @ sp[(-2)+-6]
 13312  01AE36  0EF8               	movlw	-8
 13313  01AE38  006F FF8F FFE6     	movff	plusw1,postinc1
 13314  01AE3E  006F FF8F FFE6     	movff	plusw1,postinc1
 13315                           
 13316                           ;stkvar	_cfmt @ sp[(-4)+0]
 13317  01AE44  0EFC               	movlw	252
 13318  01AE46  24E1               	addwf	fsr1l,w,c
 13319  01AE48  6E01               	movwf	btemp^0,c
 13320  01AE4A  0EFF               	movlw	255
 13321  01AE4C  20E2               	addwfc	fsr1h,w,c
 13322  01AE4E  6E02               	movwf	(btemp+1)^0,c
 13323  01AE50  0060  F007  FFE6   	movff	btemp,postinc1
 13324  01AE56  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13325                           
 13326                           ;stkvar	_fp @ sp[(-6)+-2]
 13327  01AE5C  0EF8               	movlw	-8
 13328  01AE5E  006F FF8F FFE6     	movff	plusw1,postinc1
 13329  01AE64  006F FF8F FFE6     	movff	plusw1,postinc1
 13330  01AE6A  EC13  F092         	call	_vfpfcnvrt	;wreg free
 13331  01AE6E  5001               	movf	btemp^0,w,c
 13332  01AE70  0100               	movlb	0	; () banked
 13333  01AE72  279A               	addwf	_nout& (0+255),f,b
 13334  01AE74  5002               	movf	(btemp+1)^0,w,c
 13335  01AE76  239B               	addwfc	(_nout+1)& (0+255),f,b
 13336  01AE78                     l13273:
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13340                           ;stkvar	_cfmt @ sp[(-2)+0]
 13341  01AE78  50E1               	movf	fsr1l,w,c
 13342  01AE7A  0FFE               	addlw	-2
 13343  01AE7C  6ED9               	movwf	fsr2l,c
 13344  01AE7E  50E2               	movf	fsr1h,w,c
 13345  01AE80  6EDA               	movwf	fsr2h,c
 13346  01AE82  0EFF               	movlw	255
 13347  01AE84  22DA               	addwfc	fsr2h,f,c
 13348  01AE86  006F FF7B FFF6     	movff	postinc2,tblptrl
 13349  01AE8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 13350  01AE92                     	if	0	;tblptru may be non-zero
 13351  01AE92                     	endif
 13352  01AE92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13353  01AE92  0E00               	movlw	low (__mediumconst shr (0+16))
 13354  01AE94  6EF8               	movwf	tblptru,c
 13355  01AE96                     	endif
 13356  01AE96  0008               	tblrd		*
 13357  01AE98  50F5               	movf	tablat,w,c
 13358  01AE9A  0900               	iorlw	0
 13359  01AE9C  A4D8               	btfss	status,2,c
 13360  01AE9E  D7CB               	goto	l13271
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 13364  01AEA0  0060  F268  F001   	movff	_nout,btemp
 13365  01AEA6  0060  F26C  F002   	movff	_nout+1,btemp+1
 13366                           
 13367                           ; BSR set to: 0
 13368                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 13369  01AEAC  0EF8               	movlw	248
 13370  01AEAE  26E1               	addwf	fsr1l,f,c
 13371  01AEB0  0EFF               	movlw	255
 13372  01AEB2  22E2               	addwfc	fsr1h,f,c
 13373  01AEB4  0012               	return		;funcret
 13374  01AEB6                     __end_of_vfprintf:
 13375                           	opt callstack 0
 13376                           
 13377 ;; *************** function _vfpfcnvrt *****************
 13378 ;; Defined at:
 13379 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13382 ;;		 -> f(6), NULL(0), 
 13383 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 13384 ;;		 -> cfmt(2), 
 13385 ;;  ap              2  [STACK] PTR PTR void 
 13386 ;;		 -> ap(2), ap(2), 
 13387 ;; Auto vars:     Size  Location     Type
 13388 ;;  llu             8  [STACK] unsigned long long 
 13389 ;;  ll              8  [STACK] long long 
 13390 ;;  f               4  [STACK] long long 
 13391 ;;  ct              3  [STACK] unsigned char [3]
 13392 ;;  vp              3    0        PTR void 
 13393 ;;  cp              2  [STACK] PTR unsigned char 
 13394 ;;		 -> ?_printf(2), ?_sprintf(2), STR_57(9), STR_56(12), 
 13395 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 13396 ;;		 -> V(192), 
 13397 ;;  i               2    0        int 
 13398 ;;  done            2    0        int 
 13399 ;;  c               1  [STACK] unsigned char 
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  2  [STACK] int 
 13402 ;; Registers used:
 13403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13413 ;;Total ram usage:        0 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:   21
 13416 ;; This function calls:
 13417 ;;		_atoi
 13418 ;;		_ctoa
 13419 ;;		_dtoa
 13420 ;;		_efgtoa
 13421 ;;		_fputc
 13422 ;;		_isdigit
 13423 ;;		_isupper
 13424 ;;		_stoa
 13425 ;;		_strncmp
 13426 ;;		_tolower
 13427 ;;		_utoa
 13428 ;;		_xtoa
 13429 ;; This function is called by:
 13430 ;;		_vfprintf
 13431 ;; This function uses a reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text55
 13435  012426                     __ptext55:
 13436                           	opt callstack 0
 13437  012426                     _vfpfcnvrt:
 13438                           	opt callstack 0
 13439                           
 13440                           ; BSR set to: 0
 13441                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13442  012426  0E20               	movlw	32
 13443  012428  26E1               	addwf	fsr1l,f,c
 13444  01242A  0E00               	movlw	0
 13445  01242C  22E2               	addwfc	fsr1h,f,c
 13446                           
 13447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 13448                           ;stkvar	_fmt @ sp[(-32)+-4]
 13449                           
 13450                           ;incstack = 0
 13451 ;; hardware stack exceeded
 13452  01242E  0EDC               	movlw	-36
 13453  012430  006F FF8F FFD9     	movff	plusw1,fsr2l
 13454  012436  0EDD               	movlw	-35
 13455  012438  006F FF8F FFDA     	movff	plusw1,fsr2h
 13456  01243E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13457  012444  006F FF77 FFF7     	movff	postdec2,tblptrh
 13458  01244A                     	if	0	;tblptru may be non-zero
 13459  01244A                     	endif
 13460  01244A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13461  01244A  0E00               	movlw	low (__mediumconst shr (0+16))
 13462  01244C  6EF8               	movwf	tblptru,c
 13463  01244E                     	endif
 13464  01244E  0008               	tblrd		*
 13465  012450  50F5               	movf	tablat,w,c
 13466  012452  0A25               	xorlw	37
 13467  012454  A4D8               	btfss	status,2,c
 13468  012456  EFBA  F099         	goto	l13233
 13469                           
 13470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 13471                           ;stkvar	_fmt @ sp[(-32)+-4]
 13472  01245A  0EDC               	movlw	-36
 13473  01245C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13474  012462  0EDD               	movlw	-35
 13475  012464  006F FF8F FFDA     	movff	plusw1,fsr2h
 13476  01246A  2ADE               	incf	postinc2,f,c
 13477  01246C  0E00               	movlw	0
 13478  01246E  22DD               	addwfc	postdec2,f,c
 13479                           
 13480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 13481  012470  6A3A               	clrf	_width^0,c
 13482  012472  6A3B               	clrf	(_width+1)^0,c
 13483  012474  6A3E               	clrf	_flags^0,c
 13484  012476  6A3F               	clrf	(_flags+1)^0,c
 13485                           
 13486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 13487  012478  683C               	setf	_prec^0,c
 13488  01247A  683D               	setf	(_prec+1)^0,c
 13489                           
 13490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 13491                           ;stkvar	_fmt @ sp[(-32)+-4]
 13492  01247C  0EDC               	movlw	-36
 13493  01247E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13494  012484  0EDD               	movlw	-35
 13495  012486  006F FF8F FFDA     	movff	plusw1,fsr2h
 13496  01248C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13497  012492  006F FF77 FFF7     	movff	postdec2,tblptrh
 13498  012498                     	if	0	;tblptru may be non-zero
 13499  012498                     	endif
 13500  012498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13501  012498  0E00               	movlw	low (__mediumconst shr (0+16))
 13502  01249A  6EF8               	movwf	tblptru,c
 13503  01249C                     	endif
 13504  01249C  0008               	tblrd		*
 13505  01249E  50F5               	movf	tablat,w,c
 13506  0124A0  0A2A               	xorlw	42
 13507  0124A2  A4D8               	btfss	status,2,c
 13508  0124A4  D031               	goto	l13051
 13509                           
 13510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 13511                           ;stkvar	_fmt @ sp[(-32)+-4]
 13512  0124A6  0EDC               	movlw	-36
 13513  0124A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13514  0124AE  0EDD               	movlw	-35
 13515  0124B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13516  0124B6  2ADE               	incf	postinc2,f,c
 13517  0124B8  0E00               	movlw	0
 13518  0124BA  22DD               	addwfc	postdec2,f,c
 13519                           
 13520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 13521                           ;stkvar	_ap @ sp[(-32)+-6]
 13522  0124BC  0EDA               	movlw	-38
 13523  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13524  0124C4  0EDB               	movlw	-37
 13525  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13526  0124CC  0E02               	movlw	2
 13527  0124CE  5EDE               	subwf	postinc2,f,c
 13528  0124D0  0E00               	movlw	0
 13529  0124D2  5ADD               	subwfb	postdec2,f,c
 13530  0124D4  006F FF78  F00B    	movff	postinc2,btemp+10
 13531  0124DA  006F FF74  F00C    	movff	postdec2,btemp+11
 13532  0124E0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13533  0124E6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13534  0124EC  006F FF78  F03A    	movff	postinc2,_width
 13535  0124F2  006F FF74  F03B    	movff	postdec2,_width+1
 13536                           
 13537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 13538  0124F8  AE3B               	btfss	(_width+1)^0,7,c
 13539  0124FA  D066               	goto	u12460
 13540                           
 13541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 13542  0124FC  803E               	bsf	_flags^0,0,c
 13543                           
 13544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 13545  0124FE  6C3A               	negf	_width^0,c
 13546  012500  1E3B               	comf	(_width+1)^0,f,c
 13547  012502  B0D8               	btfsc	status,0,c
 13548  012504  2A3B               	incf	(_width+1)^0,f,c
 13549  012506  D060               	goto	u12460
 13550  012508                     l13051:
 13551                           
 13552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 13553                           ;stkvar	_fmt @ sp[(-32)+-4]
 13554  012508  0EDC               	movlw	-36
 13555  01250A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13556  012510  0EDD               	movlw	-35
 13557  012512  006F FF8F FFDA     	movff	plusw1,fsr2h
 13558  012518  006F FF78  F00B    	movff	postinc2,btemp+10
 13559  01251E  006F FF74  F00C    	movff	postdec2,btemp+11
 13560  012524  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13561  01252A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13562  012530  ECDE  F0BC         	call	_atoi	;wreg free
 13563  012534  0060  F004  F03A   	movff	btemp,_width
 13564  01253A  0060  F008  F03B   	movff	btemp+1,_width+1
 13565                           
 13566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13567  012540  D00B               	goto	l13055
 13568  012542                     l13053:
 13569                           
 13570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 13571                           ;stkvar	_fmt @ sp[(-32)+-4]
 13572  012542  0EDC               	movlw	-36
 13573  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 13574  01254A  0EDD               	movlw	-35
 13575  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13576  012552  2ADE               	incf	postinc2,f,c
 13577  012554  0E00               	movlw	0
 13578  012556  22DD               	addwfc	postdec2,f,c
 13579  012558                     l13055:
 13580  012558  0ED0               	movlw	208
 13581  01255A  6E0B               	movwf	(btemp+10)^0,c
 13582  01255C  0EFF               	movlw	255
 13583  01255E  6E0C               	movwf	(btemp+11)^0,c
 13584                           
 13585                           ;stkvar	_fmt @ sp[(-32)+-4]
 13586  012560  0EDC               	movlw	-36
 13587  012562  006F FF8F FFD9     	movff	plusw1,fsr2l
 13588  012568  0EDD               	movlw	-35
 13589  01256A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13590  012570  006F FF7B FFF6     	movff	postinc2,tblptrl
 13591  012576  006F FF77 FFF7     	movff	postdec2,tblptrh
 13592  01257C                     	if	0	;tblptru may be non-zero
 13593  01257C                     	endif
 13594  01257C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13595  01257C  0E00               	movlw	low (__mediumconst shr (0+16))
 13596  01257E  6EF8               	movwf	tblptru,c
 13597  012580                     	endif
 13598  012580  0008               	tblrd		*
 13599  012582  50F5               	movf	tablat,w,c
 13600  012584  6E09               	movwf	(btemp+8)^0,c
 13601  012586  6A0A               	clrf	(btemp+9)^0,c
 13602  012588  500B               	movf	(btemp+10)^0,w,c
 13603  01258A  2609               	addwf	(btemp+8)^0,f,c
 13604  01258C  500C               	movf	(btemp+11)^0,w,c
 13605  01258E  220A               	addwfc	(btemp+9)^0,f,c
 13606  012590  500A               	movf	(btemp+9)^0,w,c
 13607  012592  E106               	bnz	u12440
 13608  012594  0E0A               	movlw	10
 13609  012596  5C09               	subwf	(btemp+8)^0,w,c
 13610  012598  B0D8               	btfsc	status,0,c
 13611  01259A  D002               	goto	u12440
 13612  01259C  0E01               	movlw	1
 13613  01259E  D001               	goto	u12450
 13614  0125A0                     u12440:
 13615  0125A0  0E00               	movlw	0
 13616  0125A2                     u12450:
 13617  0125A2  6E0B               	movwf	(btemp+10)^0,c
 13618  0125A4  6A0C               	clrf	(btemp+11)^0,c
 13619                           
 13620                           ;stkvar	_vfpfcnvrt$5907 @ sp[(-32)+4]
 13621  0125A6  0EE4               	movlw	-28
 13622  0125A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13623  0125AE  0EE5               	movlw	-27
 13624  0125B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13625                           
 13626                           ;stkvar	_vfpfcnvrt$5907 @ sp[(-32)+4]
 13627  0125B6  0EE4               	movlw	-28
 13628  0125B8  006F FF8C  F001    	movff	plusw1,btemp
 13629  0125BE  0EE5               	movlw	-27
 13630  0125C0  50E3               	movf	plusw1,w,c
 13631  0125C2  1001               	iorwf	btemp^0,w,c
 13632  0125C4  A4D8               	btfss	status,2,c
 13633  0125C6  D7BD               	goto	l13053
 13634  0125C8                     u12460:
 13635                           
 13636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 13637                           ;stkvar	_fmt @ sp[(-32)+-4]
 13638  0125C8  0EDC               	movlw	-36
 13639  0125CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13640  0125D0  0EDD               	movlw	-35
 13641  0125D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13642  0125D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13643  0125DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13644  0125E4                     	if	0	;tblptru may be non-zero
 13645  0125E4                     	endif
 13646  0125E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13647  0125E4  0E00               	movlw	low (__mediumconst shr (0+16))
 13648  0125E6  6EF8               	movwf	tblptru,c
 13649  0125E8                     	endif
 13650  0125E8  0008               	tblrd		*
 13651  0125EA  50F5               	movf	tablat,w,c
 13652  0125EC  0A2E               	xorlw	46
 13653  0125EE  A4D8               	btfss	status,2,c
 13654  0125F0  D0AC               	goto	u12510
 13655                           
 13656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 13657  0125F2  6A3C               	clrf	_prec^0,c
 13658  0125F4  6A3D               	clrf	(_prec+1)^0,c
 13659                           
 13660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 13661                           ;stkvar	_fmt @ sp[(-32)+-4]
 13662  0125F6  0EDC               	movlw	-36
 13663  0125F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13664  0125FE  0EDD               	movlw	-35
 13665  012600  006F FF8F FFDA     	movff	plusw1,fsr2h
 13666  012606  2ADE               	incf	postinc2,f,c
 13667  012608  0E00               	movlw	0
 13668  01260A  22DD               	addwfc	postdec2,f,c
 13669                           
 13670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 13671                           ;stkvar	_fmt @ sp[(-32)+-4]
 13672  01260C  0EDC               	movlw	-36
 13673  01260E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13674  012614  0EDD               	movlw	-35
 13675  012616  006F FF8F FFDA     	movff	plusw1,fsr2h
 13676  01261C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13677  012622  006F FF77 FFF7     	movff	postdec2,tblptrh
 13678  012628                     	if	0	;tblptru may be non-zero
 13679  012628                     	endif
 13680  012628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13681  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 13682  01262A  6EF8               	movwf	tblptru,c
 13683  01262C                     	endif
 13684  01262C  0008               	tblrd		*
 13685  01262E  50F5               	movf	tablat,w,c
 13686  012630  0A2A               	xorlw	42
 13687  012632  A4D8               	btfss	status,2,c
 13688  012634  D02A               	goto	l13073
 13689                           
 13690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 13691                           ;stkvar	_fmt @ sp[(-32)+-4]
 13692  012636  0EDC               	movlw	-36
 13693  012638  006F FF8F FFD9     	movff	plusw1,fsr2l
 13694  01263E  0EDD               	movlw	-35
 13695  012640  006F FF8F FFDA     	movff	plusw1,fsr2h
 13696  012646  2ADE               	incf	postinc2,f,c
 13697  012648  0E00               	movlw	0
 13698  01264A  22DD               	addwfc	postdec2,f,c
 13699                           
 13700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 13701                           ;stkvar	_ap @ sp[(-32)+-6]
 13702  01264C  0EDA               	movlw	-38
 13703  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13704  012654  0EDB               	movlw	-37
 13705  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 13706  01265C  0E02               	movlw	2
 13707  01265E  5EDE               	subwf	postinc2,f,c
 13708  012660  0E00               	movlw	0
 13709  012662  5ADD               	subwfb	postdec2,f,c
 13710  012664  006F FF78  F00B    	movff	postinc2,btemp+10
 13711  01266A  006F FF74  F00C    	movff	postdec2,btemp+11
 13712  012670  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13713  012676  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13714  01267C  006F FF78  F03C    	movff	postinc2,_prec
 13715  012682  006F FF74  F03D    	movff	postdec2,_prec+1
 13716                           
 13717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 13718  012688  D060               	goto	u12510
 13719  01268A                     l13073:
 13720                           
 13721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 13722                           ;stkvar	_fmt @ sp[(-32)+-4]
 13723  01268A  0EDC               	movlw	-36
 13724  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13725  012692  0EDD               	movlw	-35
 13726  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 13727  01269A  006F FF78  F00B    	movff	postinc2,btemp+10
 13728  0126A0  006F FF74  F00C    	movff	postdec2,btemp+11
 13729  0126A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13730  0126AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 13731  0126B2  ECDE  F0BC         	call	_atoi	;wreg free
 13732  0126B6  0060  F004  F03C   	movff	btemp,_prec
 13733  0126BC  0060  F008  F03D   	movff	btemp+1,_prec+1
 13734                           
 13735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13736  0126C2  D00B               	goto	l13077
 13737  0126C4                     l13075:
 13738                           
 13739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 13740                           ;stkvar	_fmt @ sp[(-32)+-4]
 13741  0126C4  0EDC               	movlw	-36
 13742  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13743  0126CC  0EDD               	movlw	-35
 13744  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13745  0126D4  2ADE               	incf	postinc2,f,c
 13746  0126D6  0E00               	movlw	0
 13747  0126D8  22DD               	addwfc	postdec2,f,c
 13748  0126DA                     l13077:
 13749  0126DA  0ED0               	movlw	208
 13750  0126DC  6E0B               	movwf	(btemp+10)^0,c
 13751  0126DE  0EFF               	movlw	255
 13752  0126E0  6E0C               	movwf	(btemp+11)^0,c
 13753                           
 13754                           ;stkvar	_fmt @ sp[(-32)+-4]
 13755  0126E2  0EDC               	movlw	-36
 13756  0126E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13757  0126EA  0EDD               	movlw	-35
 13758  0126EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13759  0126F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13760  0126F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13761  0126FE                     	if	0	;tblptru may be non-zero
 13762  0126FE                     	endif
 13763  0126FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13764  0126FE  0E00               	movlw	low (__mediumconst shr (0+16))
 13765  012700  6EF8               	movwf	tblptru,c
 13766  012702                     	endif
 13767  012702  0008               	tblrd		*
 13768  012704  50F5               	movf	tablat,w,c
 13769  012706  6E09               	movwf	(btemp+8)^0,c
 13770  012708  6A0A               	clrf	(btemp+9)^0,c
 13771  01270A  500B               	movf	(btemp+10)^0,w,c
 13772  01270C  2609               	addwf	(btemp+8)^0,f,c
 13773  01270E  500C               	movf	(btemp+11)^0,w,c
 13774  012710  220A               	addwfc	(btemp+9)^0,f,c
 13775  012712  500A               	movf	(btemp+9)^0,w,c
 13776  012714  E106               	bnz	u12490
 13777  012716  0E0A               	movlw	10
 13778  012718  5C09               	subwf	(btemp+8)^0,w,c
 13779  01271A  B0D8               	btfsc	status,0,c
 13780  01271C  D002               	goto	u12490
 13781  01271E  0E01               	movlw	1
 13782  012720  D001               	goto	u12500
 13783  012722                     u12490:
 13784  012722  0E00               	movlw	0
 13785  012724                     u12500:
 13786  012724  6E0B               	movwf	(btemp+10)^0,c
 13787  012726  6A0C               	clrf	(btemp+11)^0,c
 13788                           
 13789                           ;stkvar	_vfpfcnvrt$5908 @ sp[(-32)+0]
 13790  012728  0EE0               	movlw	-32
 13791  01272A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13792  012730  0EE1               	movlw	-31
 13793  012732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13794                           
 13795                           ;stkvar	_vfpfcnvrt$5908 @ sp[(-32)+0]
 13796  012738  0EE0               	movlw	-32
 13797  01273A  006F FF8C  F001    	movff	plusw1,btemp
 13798  012740  0EE1               	movlw	-31
 13799  012742  50E3               	movf	plusw1,w,c
 13800  012744  1001               	iorwf	btemp^0,w,c
 13801  012746  A4D8               	btfss	status,2,c
 13802  012748  D7BD               	goto	l13075
 13803  01274A                     u12510:
 13804                           
 13805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 13806                           ;stkvar	_fmt @ sp[(-32)+-4]
 13807  01274A  0EDC               	movlw	-36
 13808  01274C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13809  012752  0EDD               	movlw	-35
 13810  012754  006F FF8F FFDA     	movff	plusw1,fsr2h
 13811  01275A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13812  012760  006F FF77 FFF7     	movff	postdec2,tblptrh
 13813  012766                     	if	0	;tblptru may be non-zero
 13814  012766                     	endif
 13815  012766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13816  012766  0E00               	movlw	low (__mediumconst shr (0+16))
 13817  012768  6EF8               	movwf	tblptru,c
 13818  01276A                     	endif
 13819  01276A  0008               	tblrd		*
 13820  01276C  50F5               	movf	tablat,w,c
 13821  01276E  6EE6               	movwf	postinc1,c
 13822  012770  0E00               	movlw	0
 13823  012772  6EE6               	movwf	postinc1,c
 13824  012774  EC0C  F0DA         	call	_tolower	;wreg free
 13825                           
 13826                           ;stkvar	_ct @ sp[(-32)+26]
 13827  012778  0EFA               	movlw	-6
 13828  01277A  0060  F007  FFE3   	movff	btemp,plusw1
 13829                           
 13830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 13831                           ;stkvar	_ct @ sp[(-32)+26]
 13832  012780  0EFA               	movlw	-6
 13833  012782  50E3               	movf	plusw1,w,c
 13834  012784  B4D8               	btfsc	status,2,c
 13835  012786  D05B               	goto	l13093
 13836                           
 13837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 13838                           ;stkvar	_ct @ sp[(-32)+26]
 13839  012788  0EFB               	movlw	251
 13840  01278A  24E1               	addwf	fsr1l,w,c
 13841  01278C  6ED9               	movwf	fsr2l,c
 13842  01278E  0EFF               	movlw	255
 13843  012790  20E2               	addwfc	fsr1h,w,c
 13844  012792  6EDA               	movwf	fsr2h,c
 13845                           
 13846                           ;stkvar	_fmt @ sp[(-32)+-4]
 13847  012794  0EDC               	movlw	-36
 13848  012796  006F FF8F FFE9     	movff	plusw1,fsr0l
 13849  01279C  0EDD               	movlw	-35
 13850  01279E  006F FF8F FFEA     	movff	plusw1,fsr0h
 13851  0127A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 13852  0127AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 13853  0127B0  0E01               	movlw	1
 13854  0127B2  260B               	addwf	(btemp+10)^0,f,c
 13855  0127B4  0E00               	movlw	0
 13856  0127B6  220C               	addwfc	(btemp+11)^0,f,c
 13857  0127B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13858  0127BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13859  0127C4                     	if	0	;tblptru may be non-zero
 13860  0127C4                     	endif
 13861  0127C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13862  0127C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13863  0127C6  6EF8               	movwf	tblptru,c
 13864  0127C8                     	endif
 13865  0127C8  0008               	tblrd		*
 13866  0127CA  50F5               	movf	tablat,w,c
 13867  0127CC  6EE6               	movwf	postinc1,c
 13868  0127CE  0E00               	movlw	0
 13869  0127D0  6EE6               	movwf	postinc1,c
 13870  0127D2  EC0C  F0DA         	call	_tolower	;wreg free
 13871  0127D6  5001               	movf	btemp^0,w,c
 13872  0127D8  6EDF               	movwf	indf2,c
 13873                           
 13874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 13875                           ;stkvar	_ct @ sp[(-32)+26]
 13876  0127DA  0EFB               	movlw	251
 13877  0127DC  24E1               	addwf	fsr1l,w,c
 13878  0127DE  6ED9               	movwf	fsr2l,c
 13879  0127E0  0EFF               	movlw	255
 13880  0127E2  20E2               	addwfc	fsr1h,w,c
 13881  0127E4  6EDA               	movwf	fsr2h,c
 13882  0127E6  50DF               	movf	indf2,w,c
 13883  0127E8  B4D8               	btfsc	status,2,c
 13884  0127EA  D029               	goto	l13093
 13885                           
 13886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 13887                           ;stkvar	_ct @ sp[(-32)+26]
 13888  0127EC  0EFC               	movlw	252
 13889  0127EE  24E1               	addwf	fsr1l,w,c
 13890  0127F0  6ED9               	movwf	fsr2l,c
 13891  0127F2  0EFF               	movlw	255
 13892  0127F4  20E2               	addwfc	fsr1h,w,c
 13893  0127F6  6EDA               	movwf	fsr2h,c
 13894                           
 13895                           ;stkvar	_fmt @ sp[(-32)+-4]
 13896  0127F8  0EDC               	movlw	-36
 13897  0127FA  006F FF8F FFE9     	movff	plusw1,fsr0l
 13898  012800  0EDD               	movlw	-35
 13899  012802  006F FF8F FFEA     	movff	plusw1,fsr0h
 13900  012808  006F FFB8  F00B    	movff	postinc0,btemp+10
 13901  01280E  006F FFB4  F00C    	movff	postdec0,btemp+11
 13902  012814  0E02               	movlw	2
 13903  012816  260B               	addwf	(btemp+10)^0,f,c
 13904  012818  0E00               	movlw	0
 13905  01281A  220C               	addwfc	(btemp+11)^0,f,c
 13906  01281C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13907  012822  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13908  012828                     	if	0	;tblptru may be non-zero
 13909  012828                     	endif
 13910  012828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13911  012828  0E00               	movlw	low (__mediumconst shr (0+16))
 13912  01282A  6EF8               	movwf	tblptru,c
 13913  01282C                     	endif
 13914  01282C  0008               	tblrd		*
 13915  01282E  50F5               	movf	tablat,w,c
 13916  012830  6EE6               	movwf	postinc1,c
 13917  012832  0E00               	movlw	0
 13918  012834  6EE6               	movwf	postinc1,c
 13919  012836  EC0C  F0DA         	call	_tolower	;wreg free
 13920  01283A  5001               	movf	btemp^0,w,c
 13921  01283C  6EDF               	movwf	indf2,c
 13922  01283E                     l13093:
 13923                           
 13924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 13925                           ;stkvar	_fmt @ sp[(-32)+-4]
 13926  01283E  0EDC               	movlw	-36
 13927  012840  006F FF8F FFD9     	movff	plusw1,fsr2l
 13928  012846  0EDD               	movlw	-35
 13929  012848  006F FF8F FFDA     	movff	plusw1,fsr2h
 13930  01284E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13931  012854  006F FF77 FFF7     	movff	postdec2,tblptrh
 13932  01285A                     	if	0	;tblptru may be non-zero
 13933  01285A                     	endif
 13934  01285A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13935  01285A  0E00               	movlw	low (__mediumconst shr (0+16))
 13936  01285C  6EF8               	movwf	tblptru,c
 13937  01285E                     	endif
 13938  01285E  0008               	tblrd		*
 13939  012860  50F5               	movf	tablat,w,c
 13940  012862  0A63               	xorlw	99
 13941  012864  A4D8               	btfss	status,2,c
 13942  012866  D037               	goto	l13103
 13943                           
 13944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 13945                           ;stkvar	_fmt @ sp[(-32)+-4]
 13946  012868  0EDC               	movlw	-36
 13947  01286A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13948  012870  0EDD               	movlw	-35
 13949  012872  006F FF8F FFDA     	movff	plusw1,fsr2h
 13950  012878  2ADE               	incf	postinc2,f,c
 13951  01287A  0E00               	movlw	0
 13952  01287C  22DD               	addwfc	postdec2,f,c
 13953                           
 13954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13955                           ;stkvar	_ap @ sp[(-32)+-6]
 13956  01287E  0EDA               	movlw	-38
 13957  012880  006F FF8F FFD9     	movff	plusw1,fsr2l
 13958  012886  0EDB               	movlw	-37
 13959  012888  006F FF8F FFDA     	movff	plusw1,fsr2h
 13960  01288E  0E02               	movlw	2
 13961  012890  5EDE               	subwf	postinc2,f,c
 13962  012892  0E00               	movlw	0
 13963  012894  5ADD               	subwfb	postdec2,f,c
 13964  012896  006F FF78  F00B    	movff	postinc2,btemp+10
 13965  01289C  006F FF74  F00C    	movff	postdec2,btemp+11
 13966  0128A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13967  0128A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13968  0128AE  50DF               	movf	indf2,w,c
 13969  0128B0  6E0C               	movwf	(btemp+11)^0,c
 13970                           
 13971                           ;stkvar	_c @ sp[(-32)+31]
 13972  0128B2  0EFF               	movlw	-1
 13973  0128B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13974                           
 13975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13976                           ;stkvar	_c @ sp[(-32)+31]
 13977  0128BA  0EFF               	movlw	-1
 13978  0128BC  50E3               	movf	plusw1,w,c
 13979  0128BE  6EE6               	movwf	postinc1,c
 13980                           
 13981                           ;stkvar	_fp @ sp[(-33)+-2]
 13982  0128C0  0EDD               	movlw	-35
 13983  0128C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13984  0128C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13985  0128CE  EC86  F0D9         	call	_ctoa	;wreg free
 13986  0128D2  EFE4  F099         	goto	l2483
 13987  0128D6                     l13103:
 13988                           
 13989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13990                           ;stkvar	_fmt @ sp[(-32)+-4]
 13991  0128D6  0EDC               	movlw	-36
 13992  0128D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13993  0128DE  0EDD               	movlw	-35
 13994  0128E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13995  0128E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 13996  0128EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 13997  0128F2                     	if	0	;tblptru may be non-zero
 13998  0128F2                     	endif
 13999  0128F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14000  0128F2  0E00               	movlw	low (__mediumconst shr (0+16))
 14001  0128F4  6EF8               	movwf	tblptru,c
 14002  0128F6                     	endif
 14003  0128F6  0008               	tblrd		*
 14004  0128F8  50F5               	movf	tablat,w,c
 14005  0128FA  0A64               	xorlw	100
 14006  0128FC  B4D8               	btfsc	status,2,c
 14007  0128FE  D015               	goto	u12560
 14008                           
 14009                           ;stkvar	_fmt @ sp[(-32)+-4]
 14010  012900  0EDC               	movlw	-36
 14011  012902  006F FF8F FFD9     	movff	plusw1,fsr2l
 14012  012908  0EDD               	movlw	-35
 14013  01290A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14014  012910  006F FF7B FFF6     	movff	postinc2,tblptrl
 14015  012916  006F FF77 FFF7     	movff	postdec2,tblptrh
 14016  01291C                     	if	0	;tblptru may be non-zero
 14017  01291C                     	endif
 14018  01291C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14019  01291C  0E00               	movlw	low (__mediumconst shr (0+16))
 14020  01291E  6EF8               	movwf	tblptru,c
 14021  012920                     	endif
 14022  012920  0008               	tblrd		*
 14023  012922  50F5               	movf	tablat,w,c
 14024  012924  0A69               	xorlw	105
 14025  012926  A4D8               	btfss	status,2,c
 14026  012928  D076               	goto	l13115
 14027  01292A                     u12560:
 14028                           
 14029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 14030                           ;stkvar	_fmt @ sp[(-32)+-4]
 14031  01292A  0EDC               	movlw	-36
 14032  01292C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14033  012932  0EDD               	movlw	-35
 14034  012934  006F FF8F FFDA     	movff	plusw1,fsr2h
 14035  01293A  2ADE               	incf	postinc2,f,c
 14036  01293C  0E00               	movlw	0
 14037  01293E  22DD               	addwfc	postdec2,f,c
 14038                           
 14039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 14040                           ;stkvar	_ap @ sp[(-32)+-6]
 14041  012940  0EDA               	movlw	-38
 14042  012942  006F FF8F FFD9     	movff	plusw1,fsr2l
 14043  012948  0EDB               	movlw	-37
 14044  01294A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14045  012950  0E02               	movlw	2
 14046  012952  5EDE               	subwf	postinc2,f,c
 14047  012954  0E00               	movlw	0
 14048  012956  5ADD               	subwfb	postdec2,f,c
 14049  012958  006F FF78  F00B    	movff	postinc2,btemp+10
 14050  01295E  006F FF74  F00C    	movff	postdec2,btemp+11
 14051  012964  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14052  01296A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14053  012970  006F FF78  F00B    	movff	postinc2,btemp+10
 14054  012976  006F FF74  F00C    	movff	postdec2,btemp+11
 14055                           
 14056                           ;stkvar	_ll @ sp[(-32)+14]
 14057  01297C  0EEE               	movlw	-18
 14058  01297E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14059  012984  0EEF               	movlw	-17
 14060  012986  0060  F033  FFE3   	movff	btemp+11,plusw1
 14061  01298C  6A01               	clrf	btemp^0,c
 14062  01298E  BEE3               	btfsc	plusw1,7,c
 14063  012990  6801               	setf	btemp^0,c
 14064  012992  0EF0               	movlw	-16
 14065  012994  0060  F007  FFE3   	movff	btemp,plusw1
 14066  01299A  0EF1               	movlw	-15
 14067  01299C  0060  F007  FFE3   	movff	btemp,plusw1
 14068  0129A2  0EF2               	movlw	-14
 14069  0129A4  0060  F007  FFE3   	movff	btemp,plusw1
 14070  0129AA  0EF3               	movlw	-13
 14071  0129AC  0060  F007  FFE3   	movff	btemp,plusw1
 14072  0129B2  0EF4               	movlw	-12
 14073  0129B4  0060  F007  FFE3   	movff	btemp,plusw1
 14074  0129BA  0EF5               	movlw	-11
 14075  0129BC  0060  F007  FFE3   	movff	btemp,plusw1
 14076  0129C2                     l13111:
 14077                           
 14078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 14079                           ;stkvar	_ll @ sp[(-32)+14]
 14080  0129C2  50E1               	movf	fsr1l,w,c
 14081  0129C4  0FEE               	addlw	-18
 14082  0129C6  6ED9               	movwf	fsr2l,c
 14083  0129C8  50E2               	movf	fsr1h,w,c
 14084  0129CA  6EDA               	movwf	fsr2h,c
 14085  0129CC  0EFF               	movlw	255
 14086  0129CE  22DA               	addwfc	fsr2h,f,c
 14087  0129D0  006F FF7B FFE6     	movff	postinc2,postinc1
 14088  0129D6  006F FF7B FFE6     	movff	postinc2,postinc1
 14089  0129DC  006F FF7B FFE6     	movff	postinc2,postinc1
 14090  0129E2  006F FF7B FFE6     	movff	postinc2,postinc1
 14091  0129E8  006F FF7B FFE6     	movff	postinc2,postinc1
 14092  0129EE  006F FF7B FFE6     	movff	postinc2,postinc1
 14093  0129F4  006F FF7B FFE6     	movff	postinc2,postinc1
 14094  0129FA  006F FF7B FFE6     	movff	postinc2,postinc1
 14095                           
 14096                           ;stkvar	_fp @ sp[(-40)+-2]
 14097  012A00  0ED6               	movlw	-42
 14098  012A02  006F FF8F FFE6     	movff	plusw1,postinc1
 14099  012A08  006F FF8F FFE6     	movff	plusw1,postinc1
 14100  012A0E  EC2E  F0AC         	call	_dtoa	;wreg free
 14101  012A12  EFE4  F099         	goto	l2483
 14102  012A16                     l13115:
 14103                           
 14104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 14105  012A16  0E02               	movlw	2
 14106  012A18  6EE6               	movwf	postinc1,c
 14107  012A1A  0E00               	movlw	0
 14108  012A1C  6EE6               	movwf	postinc1,c
 14109  012A1E  0EEA               	movlw	low STR_84
 14110  012A20  6EE6               	movwf	postinc1,c
 14111  012A22  0EFF               	movlw	high STR_84
 14112  012A24  6EE6               	movwf	postinc1,c
 14113                           
 14114                           ;stkvar	_fmt @ sp[(-36)+-4]
 14115  012A26  0ED8               	movlw	-40
 14116  012A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 14117  012A2E  0ED9               	movlw	-39
 14118  012A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 14119  012A36  006F FF78  F00B    	movff	postinc2,btemp+10
 14120  012A3C  006F FF74  F00C    	movff	postdec2,btemp+11
 14121  012A42  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14122  012A48  0060  F033  FFE6   	movff	btemp+11,postinc1
 14123  012A4E  EC94  F0C1         	call	_strncmp	;wreg free
 14124  012A52  5001               	movf	btemp^0,w,c
 14125  012A54  1002               	iorwf	(btemp+1)^0,w,c
 14126  012A56  B4D8               	btfsc	status,2,c
 14127  012A58  D022               	goto	u12580
 14128  012A5A  0E02               	movlw	2
 14129  012A5C  6EE6               	movwf	postinc1,c
 14130  012A5E  0E00               	movlw	0
 14131  012A60  6EE6               	movwf	postinc1,c
 14132  012A62  0EF0               	movlw	low STR_88
 14133  012A64  6EE6               	movwf	postinc1,c
 14134  012A66  0EFF               	movlw	high STR_88
 14135  012A68  6EE6               	movwf	postinc1,c
 14136                           
 14137                           ;stkvar	_fmt @ sp[(-36)+-4]
 14138  012A6A  0ED8               	movlw	-40
 14139  012A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14140  012A72  0ED9               	movlw	-39
 14141  012A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14142  012A7A  006F FF78  F00B    	movff	postinc2,btemp+10
 14143  012A80  006F FF74  F00C    	movff	postdec2,btemp+11
 14144  012A86  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14145  012A8C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14146  012A92  EC94  F0C1         	call	_strncmp	;wreg free
 14147  012A96  5001               	movf	btemp^0,w,c
 14148  012A98  1002               	iorwf	(btemp+1)^0,w,c
 14149  012A9A  A4D8               	btfss	status,2,c
 14150  012A9C  D069               	goto	l13127
 14151  012A9E                     u12580:
 14152                           
 14153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 14154                           ;stkvar	_fmt @ sp[(-32)+-4]
 14155  012A9E  0EDC               	movlw	-36
 14156  012AA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14157  012AA6  0EDD               	movlw	-35
 14158  012AA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14159  012AAE  0E02               	movlw	2
 14160  012AB0  26DE               	addwf	postinc2,f,c
 14161  012AB2  0E00               	movlw	0
 14162  012AB4  22DD               	addwfc	postdec2,f,c
 14163                           
 14164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 14165                           ;stkvar	_ap @ sp[(-32)+-6]
 14166  012AB6  0EDA               	movlw	-38
 14167  012AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14168  012ABE  0EDB               	movlw	-37
 14169  012AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14170  012AC6  0E04               	movlw	4
 14171  012AC8  5EDE               	subwf	postinc2,f,c
 14172  012ACA  0E00               	movlw	0
 14173  012ACC  5ADD               	subwfb	postdec2,f,c
 14174  012ACE  006F FF78  F00B    	movff	postinc2,btemp+10
 14175  012AD4  006F FF74  F00C    	movff	postdec2,btemp+11
 14176  012ADA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14177  012AE0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14178  012AE6  006F FF78  F009    	movff	postinc2,btemp+8
 14179  012AEC  006F FF78  F00A    	movff	postinc2,btemp+9
 14180  012AF2  006F FF78  F00B    	movff	postinc2,btemp+10
 14181  012AF8  006F FF78  F00C    	movff	postinc2,btemp+11
 14182  012AFE  0060  F024  F011   	movff	btemp+8,btemp+16
 14183  012B04  0060  F028  F012   	movff	btemp+9,btemp+17
 14184  012B0A  0060  F02C  F013   	movff	btemp+10,btemp+18
 14185  012B10  0060  F030  F014   	movff	btemp+11,btemp+19
 14186  012B16  6A15               	clrf	(btemp+20)^0,c
 14187  012B18  BE14               	btfsc	(btemp+19)^0,7,c
 14188  012B1A  6815               	setf	(btemp+20)^0,c
 14189  012B1C  0060  F054  F016   	movff	btemp+20,btemp+21
 14190  012B22  0060  F054  F017   	movff	btemp+20,btemp+22
 14191  012B28  0060  F054  F018   	movff	btemp+20,btemp+23
 14192                           
 14193                           ;stkvar	_ll @ sp[(-32)+14]
 14194  012B2E  0EEE               	movlw	-18
 14195  012B30  0060  F047  FFE3   	movff	btemp+16,plusw1
 14196  012B36  0EEF               	movlw	-17
 14197  012B38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14198  012B3E  0EF0               	movlw	-16
 14199  012B40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14200  012B46  0EF1               	movlw	-15
 14201  012B48  0060  F053  FFE3   	movff	btemp+19,plusw1
 14202  012B4E  0EF2               	movlw	-14
 14203  012B50  0060  F057  FFE3   	movff	btemp+20,plusw1
 14204  012B56  0EF3               	movlw	-13
 14205  012B58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14206  012B5E  0EF4               	movlw	-12
 14207  012B60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14208  012B66  0EF5               	movlw	-11
 14209  012B68  0060  F063  FFE3   	movff	btemp+23,plusw1
 14210  012B6E  D729               	goto	l13111
 14211  012B70                     l13127:
 14212                           
 14213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 14214                           ;stkvar	_ct @ sp[(-32)+26]
 14215  012B70  0EFA               	movlw	-6
 14216  012B72  006F FF8C  F001    	movff	plusw1,btemp
 14217  012B78  0E66               	movlw	102
 14218  012B7A  1801               	xorwf	btemp^0,w,c
 14219  012B7C  A4D8               	btfss	status,2,c
 14220  012B7E  D06E               	goto	l13139
 14221                           
 14222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 14223                           ;stkvar	_fmt @ sp[(-32)+-4]
 14224  012B80  0EDC               	movlw	-36
 14225  012B82  006F FF8F FFD9     	movff	plusw1,fsr2l
 14226  012B88  0EDD               	movlw	-35
 14227  012B8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14228  012B90  006F FF7B FFF6     	movff	postinc2,tblptrl
 14229  012B96  006F FF77 FFF7     	movff	postdec2,tblptrh
 14230  012B9C                     	if	0	;tblptru may be non-zero
 14231  012B9C                     	endif
 14232  012B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14233  012B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 14234  012B9E  6EF8               	movwf	tblptru,c
 14235  012BA0                     	endif
 14236                           
 14237                           ;stkvar	_c @ sp[(-32)+31]
 14238  012BA0  0008               	tblrd		*
 14239  012BA2  0EFF               	movlw	-1
 14240  012BA4  006F FFD7 FFE3     	movff	tablat,plusw1
 14241                           
 14242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 14243                           ;stkvar	_fmt @ sp[(-32)+-4]
 14244  012BAA  0EDC               	movlw	-36
 14245  012BAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14246  012BB2  0EDD               	movlw	-35
 14247  012BB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14248  012BBA  2ADE               	incf	postinc2,f,c
 14249  012BBC  0E00               	movlw	0
 14250  012BBE  22DD               	addwfc	postdec2,f,c
 14251                           
 14252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 14253                           ;stkvar	_ap @ sp[(-32)+-6]
 14254  012BC0  0EDA               	movlw	-38
 14255  012BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14256  012BC8  0EDB               	movlw	-37
 14257  012BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14258  012BD0  0E04               	movlw	4
 14259  012BD2  5EDE               	subwf	postinc2,f,c
 14260  012BD4  0E00               	movlw	0
 14261  012BD6  5ADD               	subwfb	postdec2,f,c
 14262  012BD8  006F FF78  F00B    	movff	postinc2,btemp+10
 14263  012BDE  006F FF74  F00C    	movff	postdec2,btemp+11
 14264  012BE4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14265  012BEA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14266  012BF0  006F FF78  F009    	movff	postinc2,btemp+8
 14267  012BF6  006F FF78  F00A    	movff	postinc2,btemp+9
 14268  012BFC  006F FF78  F00B    	movff	postinc2,btemp+10
 14269  012C02  006F FF78  F00C    	movff	postinc2,btemp+11
 14270                           
 14271                           ;stkvar	_f @ sp[(-32)+22]
 14272  012C08  0EF6               	movlw	-10
 14273  012C0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14274  012C10  0EF7               	movlw	-9
 14275  012C12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14276  012C18  0EF8               	movlw	-8
 14277  012C1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14278  012C20  0EF9               	movlw	-7
 14279  012C22  0060  F033  FFE3   	movff	btemp+11,plusw1
 14280  012C28                     l13135:
 14281                           
 14282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 14283                           ;stkvar	_c @ sp[(-32)+31]
 14284  012C28  0EFF               	movlw	-1
 14285  012C2A  50E3               	movf	plusw1,w,c
 14286  012C2C  6EE6               	movwf	postinc1,c
 14287                           
 14288                           ;stkvar	_f @ sp[(-33)+22]
 14289  012C2E  0EF5               	movlw	-11
 14290  012C30  006F FF8F FFE6     	movff	plusw1,postinc1
 14291  012C36  006F FF8F FFE6     	movff	plusw1,postinc1
 14292  012C3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14293  012C42  006F FF8F FFE6     	movff	plusw1,postinc1
 14294                           
 14295                           ;stkvar	_fp @ sp[(-37)+-2]
 14296  012C48  0ED9               	movlw	-39
 14297  012C4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14298  012C50  006F FF8F FFE6     	movff	plusw1,postinc1
 14299  012C56  EC00  F080         	call	_efgtoa	;wreg free
 14300  012C5A  D3B6               	goto	l2483
 14301  012C5C                     l13139:
 14302                           
 14303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 14304  012C5C  0E02               	movlw	2
 14305  012C5E  6EE6               	movwf	postinc1,c
 14306  012C60  0E00               	movlw	0
 14307  012C62  6EE6               	movwf	postinc1,c
 14308  012C64  0EED               	movlw	low STR_93
 14309  012C66  6EE6               	movwf	postinc1,c
 14310  012C68  0EFF               	movlw	high STR_93
 14311  012C6A  6EE6               	movwf	postinc1,c
 14312                           
 14313                           ;stkvar	_ct @ sp[(-36)+26]
 14314  012C6C  0EF6               	movlw	246
 14315  012C6E  24E1               	addwf	fsr1l,w,c
 14316  012C70  6E01               	movwf	btemp^0,c
 14317  012C72  0EFF               	movlw	255
 14318  012C74  20E2               	addwfc	fsr1h,w,c
 14319  012C76  6E02               	movwf	(btemp+1)^0,c
 14320  012C78  0060  F007  FFE6   	movff	btemp,postinc1
 14321  012C7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14322  012C84  EC94  F0C1         	call	_strncmp	;wreg free
 14323  012C88  5001               	movf	btemp^0,w,c
 14324  012C8A  1002               	iorwf	(btemp+1)^0,w,c
 14325  012C8C  A4D8               	btfss	status,2,c
 14326  012C8E  D096               	goto	l13159
 14327                           
 14328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 14329                           ;stkvar	_fmt @ sp[(-32)+-4]
 14330  012C90  0EDC               	movlw	-36
 14331  012C92  006F FF8F FFD9     	movff	plusw1,fsr2l
 14332  012C98  0EDD               	movlw	-35
 14333  012C9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14334  012CA0  006F FF78  F00B    	movff	postinc2,btemp+10
 14335  012CA6  006F FF74  F00C    	movff	postdec2,btemp+11
 14336  012CAC  0E01               	movlw	1
 14337  012CAE  260B               	addwf	(btemp+10)^0,f,c
 14338  012CB0  0E00               	movlw	0
 14339  012CB2  220C               	addwfc	(btemp+11)^0,f,c
 14340  012CB4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14341  012CBA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14342  012CC0                     	if	0	;tblptru may be non-zero
 14343  012CC0                     	endif
 14344  012CC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14345  012CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 14346  012CC2  6EF8               	movwf	tblptru,c
 14347  012CC4                     	endif
 14348                           
 14349                           ;stkvar	_c @ sp[(-32)+31]
 14350  012CC4  0008               	tblrd		*
 14351  012CC6  0EFF               	movlw	-1
 14352  012CC8  006F FFD7 FFE3     	movff	tablat,plusw1
 14353  012CCE  0EBF               	movlw	191
 14354  012CD0  6E0B               	movwf	(btemp+10)^0,c
 14355  012CD2  0EFF               	movlw	255
 14356  012CD4  6E0C               	movwf	(btemp+11)^0,c
 14357                           
 14358                           ;stkvar	_fmt @ sp[(-32)+-4]
 14359  012CD6  0EDC               	movlw	-36
 14360  012CD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14361  012CDE  0EDD               	movlw	-35
 14362  012CE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14363  012CE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14364  012CEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14365  012CF2                     	if	0	;tblptru may be non-zero
 14366  012CF2                     	endif
 14367  012CF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14368  012CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 14369  012CF4  6EF8               	movwf	tblptru,c
 14370  012CF6                     	endif
 14371  012CF6  0008               	tblrd		*
 14372  012CF8  50F5               	movf	tablat,w,c
 14373  012CFA  6E09               	movwf	(btemp+8)^0,c
 14374  012CFC  6A0A               	clrf	(btemp+9)^0,c
 14375  012CFE  500B               	movf	(btemp+10)^0,w,c
 14376  012D00  2609               	addwf	(btemp+8)^0,f,c
 14377  012D02  500C               	movf	(btemp+11)^0,w,c
 14378  012D04  220A               	addwfc	(btemp+9)^0,f,c
 14379  012D06  500A               	movf	(btemp+9)^0,w,c
 14380  012D08  E106               	bnz	u12610
 14381  012D0A  0E1A               	movlw	26
 14382  012D0C  5C09               	subwf	(btemp+8)^0,w,c
 14383  012D0E  B0D8               	btfsc	status,0,c
 14384  012D10  D002               	goto	u12610
 14385  012D12  0E01               	movlw	1
 14386  012D14  D001               	goto	u12620
 14387  012D16                     u12610:
 14388  012D16  0E00               	movlw	0
 14389  012D18                     u12620:
 14390  012D18  6E0B               	movwf	(btemp+10)^0,c
 14391  012D1A  6A0C               	clrf	(btemp+11)^0,c
 14392                           
 14393                           ;stkvar	_vfpfcnvrt$5919 @ sp[(-32)+2]
 14394  012D1C  0EE2               	movlw	-30
 14395  012D1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14396  012D24  0EE3               	movlw	-29
 14397  012D26  0060  F033  FFE3   	movff	btemp+11,plusw1
 14398                           
 14399                           ;stkvar	_vfpfcnvrt$5919 @ sp[(-32)+2]
 14400  012D2C  0EE2               	movlw	-30
 14401  012D2E  006F FF8C  F001    	movff	plusw1,btemp
 14402  012D34  0EE3               	movlw	-29
 14403  012D36  50E3               	movf	plusw1,w,c
 14404  012D38  1001               	iorwf	btemp^0,w,c
 14405                           
 14406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14407                           ;stkvar	_ap @ sp[(-32)+-6]
 14408                           
 14409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 14410                           
 14411                           ;stkvar	_f @ sp[(-32)+22]
 14412                           
 14413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 14414                           ;stkvar	_ap @ sp[(-32)+-6]
 14415  012D3A  0EDA               	movlw	-38
 14416  012D3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14417  012D42  0EDB               	movlw	-37
 14418  012D44  006F FF8F FFDA     	movff	plusw1,fsr2h
 14419  012D4A  0E04               	movlw	4
 14420  012D4C  5EDE               	subwf	postinc2,f,c
 14421  012D4E  0E00               	movlw	0
 14422  012D50  5ADD               	subwfb	postdec2,f,c
 14423  012D52  006F FF78  F00B    	movff	postinc2,btemp+10
 14424  012D58  006F FF74  F00C    	movff	postdec2,btemp+11
 14425  012D5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14426  012D64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14427  012D6A  006F FF78  F009    	movff	postinc2,btemp+8
 14428  012D70  006F FF78  F00A    	movff	postinc2,btemp+9
 14429  012D76  006F FF78  F00B    	movff	postinc2,btemp+10
 14430  012D7C  006F FF78  F00C    	movff	postinc2,btemp+11
 14431                           
 14432                           ;stkvar	_f @ sp[(-32)+22]
 14433  012D82  0EF6               	movlw	-10
 14434  012D84  0060  F027  FFE3   	movff	btemp+8,plusw1
 14435  012D8A  0EF7               	movlw	-9
 14436  012D8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14437  012D92  0EF8               	movlw	-8
 14438  012D94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14439  012D9A  0EF9               	movlw	-7
 14440  012D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14441                           
 14442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 14443                           ;stkvar	_fmt @ sp[(-32)+-4]
 14444  012DA2  0EDC               	movlw	-36
 14445  012DA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14446  012DAA  0EDD               	movlw	-35
 14447  012DAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14448  012DB2  0E02               	movlw	2
 14449  012DB4  26DE               	addwf	postinc2,f,c
 14450  012DB6  0E00               	movlw	0
 14451  012DB8  22DD               	addwfc	postdec2,f,c
 14452  012DBA  D736               	goto	l13135
 14453  012DBC                     l13159:
 14454                           
 14455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 14456                           ;stkvar	_fmt @ sp[(-32)+-4]
 14457  012DBC  0EDC               	movlw	-36
 14458  012DBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14459  012DC4  0EDD               	movlw	-35
 14460  012DC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14461  012DCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 14462  012DD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 14463  012DD8                     	if	0	;tblptru may be non-zero
 14464  012DD8                     	endif
 14465  012DD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14466  012DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 14467  012DDA  6EF8               	movwf	tblptru,c
 14468  012DDC                     	endif
 14469  012DDC  0008               	tblrd		*
 14470  012DDE  50F5               	movf	tablat,w,c
 14471  012DE0  0A73               	xorlw	115
 14472  012DE2  A4D8               	btfss	status,2,c
 14473  012DE4  D042               	goto	l13169
 14474                           
 14475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 14476                           ;stkvar	_fmt @ sp[(-32)+-4]
 14477  012DE6  0EDC               	movlw	-36
 14478  012DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14479  012DEE  0EDD               	movlw	-35
 14480  012DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14481  012DF6  2ADE               	incf	postinc2,f,c
 14482  012DF8  0E00               	movlw	0
 14483  012DFA  22DD               	addwfc	postdec2,f,c
 14484                           
 14485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 14486                           ;stkvar	_ap @ sp[(-32)+-6]
 14487  012DFC  0EDA               	movlw	-38
 14488  012DFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14489  012E04  0EDB               	movlw	-37
 14490  012E06  006F FF8F FFDA     	movff	plusw1,fsr2h
 14491  012E0C  0E02               	movlw	2
 14492  012E0E  5EDE               	subwf	postinc2,f,c
 14493  012E10  0E00               	movlw	0
 14494  012E12  5ADD               	subwfb	postdec2,f,c
 14495  012E14  006F FF78  F00B    	movff	postinc2,btemp+10
 14496  012E1A  006F FF74  F00C    	movff	postdec2,btemp+11
 14497  012E20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14498  012E26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14499  012E2C  006F FF78  F00B    	movff	postinc2,btemp+10
 14500  012E32  006F FF74  F00C    	movff	postdec2,btemp+11
 14501                           
 14502                           ;stkvar	_cp @ sp[(-32)+29]
 14503  012E38  0EFE               	movlw	-2
 14504  012E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14505  012E40  0EFD               	movlw	-3
 14506  012E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14507                           
 14508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 14509                           ;stkvar	_cp @ sp[(-32)+29]
 14510  012E48  0EFD               	movlw	-3
 14511  012E4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14512  012E50  006F FF8F FFE6     	movff	plusw1,postinc1
 14513                           
 14514                           ;stkvar	_fp @ sp[(-34)+-2]
 14515  012E56  0EDC               	movlw	-36
 14516  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 14517  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14518  012E64  EC3F  F0BA         	call	_stoa	;wreg free
 14519  012E68  D2AF               	goto	l2483
 14520  012E6A                     l13169:
 14521                           
 14522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 14523                           ;stkvar	_fmt @ sp[(-32)+-4]
 14524  012E6A  0EDC               	movlw	-36
 14525  012E6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14526  012E72  0EDD               	movlw	-35
 14527  012E74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14528  012E7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 14529  012E80  006F FF77 FFF7     	movff	postdec2,tblptrh
 14530  012E86                     	if	0	;tblptru may be non-zero
 14531  012E86                     	endif
 14532  012E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14533  012E86  0E00               	movlw	low (__mediumconst shr (0+16))
 14534  012E88  6EF8               	movwf	tblptru,c
 14535  012E8A                     	endif
 14536  012E8A  0008               	tblrd		*
 14537  012E8C  50F5               	movf	tablat,w,c
 14538  012E8E  0A75               	xorlw	117
 14539  012E90  A4D8               	btfss	status,2,c
 14540  012E92  D07C               	goto	l13179
 14541                           
 14542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 14543                           ;stkvar	_fmt @ sp[(-32)+-4]
 14544  012E94  0EDC               	movlw	-36
 14545  012E96  006F FF8F FFD9     	movff	plusw1,fsr2l
 14546  012E9C  0EDD               	movlw	-35
 14547  012E9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14548  012EA4  2ADE               	incf	postinc2,f,c
 14549  012EA6  0E00               	movlw	0
 14550  012EA8  22DD               	addwfc	postdec2,f,c
 14551                           
 14552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14553                           ;stkvar	_ap @ sp[(-32)+-6]
 14554  012EAA  0EDA               	movlw	-38
 14555  012EAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14556  012EB2  0EDB               	movlw	-37
 14557  012EB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14558  012EBA  0E02               	movlw	2
 14559  012EBC  5EDE               	subwf	postinc2,f,c
 14560  012EBE  0E00               	movlw	0
 14561  012EC0  5ADD               	subwfb	postdec2,f,c
 14562  012EC2  006F FF78  F00B    	movff	postinc2,btemp+10
 14563  012EC8  006F FF74  F00C    	movff	postdec2,btemp+11
 14564  012ECE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14565  012ED4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14566  012EDA  006F FF78  F00B    	movff	postinc2,btemp+10
 14567  012EE0  006F FF74  F00C    	movff	postdec2,btemp+11
 14568  012EE6  500B               	movf	(btemp+10)^0,w,c
 14569  012EE8  6E11               	movwf	(btemp+16)^0,c
 14570  012EEA  500C               	movf	(btemp+11)^0,w,c
 14571  012EEC  6E12               	movwf	(btemp+17)^0,c
 14572  012EEE  6A13               	clrf	(btemp+18)^0,c
 14573  012EF0  6A14               	clrf	(btemp+19)^0,c
 14574  012EF2  6A15               	clrf	(btemp+20)^0,c
 14575  012EF4  6A16               	clrf	(btemp+21)^0,c
 14576  012EF6  6A17               	clrf	(btemp+22)^0,c
 14577  012EF8  6A18               	clrf	(btemp+23)^0,c
 14578                           
 14579                           ;stkvar	_llu @ sp[(-32)+6]
 14580  012EFA  0EE6               	movlw	-26
 14581  012EFC  0060  F047  FFE3   	movff	btemp+16,plusw1
 14582  012F02  0EE7               	movlw	-25
 14583  012F04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14584  012F0A  0EE8               	movlw	-24
 14585  012F0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14586  012F12  0EE9               	movlw	-23
 14587  012F14  0060  F053  FFE3   	movff	btemp+19,plusw1
 14588  012F1A  0EEA               	movlw	-22
 14589  012F1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 14590  012F22  0EEB               	movlw	-21
 14591  012F24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14592  012F2A  0EEC               	movlw	-20
 14593  012F2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14594  012F32  0EED               	movlw	-19
 14595  012F34  0060  F063  FFE3   	movff	btemp+23,plusw1
 14596                           
 14597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 14598                           ;stkvar	_llu @ sp[(-32)+6]
 14599  012F3A  50E1               	movf	fsr1l,w,c
 14600  012F3C  0FE6               	addlw	-26
 14601  012F3E  6ED9               	movwf	fsr2l,c
 14602  012F40  50E2               	movf	fsr1h,w,c
 14603  012F42  6EDA               	movwf	fsr2h,c
 14604  012F44  0EFF               	movlw	255
 14605  012F46  22DA               	addwfc	fsr2h,f,c
 14606  012F48  006F FF7B FFE6     	movff	postinc2,postinc1
 14607  012F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 14608  012F54  006F FF7B FFE6     	movff	postinc2,postinc1
 14609  012F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 14610  012F60  006F FF7B FFE6     	movff	postinc2,postinc1
 14611  012F66  006F FF7B FFE6     	movff	postinc2,postinc1
 14612  012F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 14613  012F72  006F FF7B FFE6     	movff	postinc2,postinc1
 14614                           
 14615                           ;stkvar	_fp @ sp[(-40)+-2]
 14616  012F78  0ED6               	movlw	-42
 14617  012F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 14618  012F80  006F FF8F FFE6     	movff	plusw1,postinc1
 14619  012F86  EC27  F0B4         	call	_utoa	;wreg free
 14620  012F8A  D21E               	goto	l2483
 14621  012F8C                     l13179:
 14622                           
 14623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 14624  012F8C  0E02               	movlw	2
 14625  012F8E  6EE6               	movwf	postinc1,c
 14626  012F90  0E00               	movlw	0
 14627  012F92  6EE6               	movwf	postinc1,c
 14628  012F94  0EF3               	movlw	low STR_98
 14629  012F96  6EE6               	movwf	postinc1,c
 14630  012F98  0EFF               	movlw	high STR_98
 14631  012F9A  6EE6               	movwf	postinc1,c
 14632                           
 14633                           ;stkvar	_fmt @ sp[(-36)+-4]
 14634  012F9C  0ED8               	movlw	-40
 14635  012F9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14636  012FA4  0ED9               	movlw	-39
 14637  012FA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14638  012FAC  006F FF78  F00B    	movff	postinc2,btemp+10
 14639  012FB2  006F FF74  F00C    	movff	postdec2,btemp+11
 14640  012FB8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14641  012FBE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14642  012FC4  EC94  F0C1         	call	_strncmp	;wreg free
 14643  012FC8  5001               	movf	btemp^0,w,c
 14644  012FCA  1002               	iorwf	(btemp+1)^0,w,c
 14645  012FCC  A4D8               	btfss	status,2,c
 14646  012FCE  D039               	goto	l13189
 14647                           
 14648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 14649                           ;stkvar	_fmt @ sp[(-32)+-4]
 14650  012FD0  0EDC               	movlw	-36
 14651  012FD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14652  012FD8  0EDD               	movlw	-35
 14653  012FDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14654  012FE0  0E02               	movlw	2
 14655  012FE2  26DE               	addwf	postinc2,f,c
 14656  012FE4  0E00               	movlw	0
 14657  012FE6  22DD               	addwfc	postdec2,f,c
 14658                           
 14659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14660                           ;stkvar	_ap @ sp[(-32)+-6]
 14661  012FE8  0EDA               	movlw	-38
 14662  012FEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14663  012FF0  0EDB               	movlw	-37
 14664  012FF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14665  012FF8  0E04               	movlw	4
 14666  012FFA  5EDE               	subwf	postinc2,f,c
 14667  012FFC  0E00               	movlw	0
 14668  012FFE  5ADD               	subwfb	postdec2,f,c
 14669  013000  006F FF78  F00B    	movff	postinc2,btemp+10
 14670  013006  006F FF74  F00C    	movff	postdec2,btemp+11
 14671  01300C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14672  013012  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14673  013018  006F FF78  F009    	movff	postinc2,btemp+8
 14674  01301E  006F FF78  F00A    	movff	postinc2,btemp+9
 14675  013024  006F FF78  F00B    	movff	postinc2,btemp+10
 14676  01302A  006F FF78  F00C    	movff	postinc2,btemp+11
 14677  013030  5009               	movf	(btemp+8)^0,w,c
 14678  013032  6E11               	movwf	(btemp+16)^0,c
 14679  013034  500A               	movf	(btemp+9)^0,w,c
 14680  013036  6E12               	movwf	(btemp+17)^0,c
 14681  013038  500B               	movf	(btemp+10)^0,w,c
 14682  01303A  6E13               	movwf	(btemp+18)^0,c
 14683  01303C  500C               	movf	(btemp+11)^0,w,c
 14684  01303E  6E14               	movwf	(btemp+19)^0,c
 14685  013040  D758               	goto	L13
 14686  013042                     l13189:
 14687                           
 14688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 14689                           ;stkvar	_fmt @ sp[(-32)+-4]
 14690  013042  0EDC               	movlw	-36
 14691  013044  006F FF8F FFD9     	movff	plusw1,fsr2l
 14692  01304A  0EDD               	movlw	-35
 14693  01304C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14694  013052  006F FF7B FFF6     	movff	postinc2,tblptrl
 14695  013058  006F FF77 FFF7     	movff	postdec2,tblptrh
 14696  01305E                     	if	0	;tblptru may be non-zero
 14697  01305E                     	endif
 14698  01305E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14699  01305E  0E00               	movlw	low (__mediumconst shr (0+16))
 14700  013060  6EF8               	movwf	tblptru,c
 14701  013062                     	endif
 14702  013062  0008               	tblrd		*
 14703  013064  50F5               	movf	tablat,w,c
 14704  013066  0A78               	xorlw	120
 14705  013068  B4D8               	btfsc	status,2,c
 14706  01306A  D015               	goto	u12680
 14707                           
 14708                           ;stkvar	_fmt @ sp[(-32)+-4]
 14709  01306C  0EDC               	movlw	-36
 14710  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14711  013074  0EDD               	movlw	-35
 14712  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 14713  01307C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14714  013082  006F FF77 FFF7     	movff	postdec2,tblptrh
 14715  013088                     	if	0	;tblptru may be non-zero
 14716  013088                     	endif
 14717  013088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14718  013088  0E00               	movlw	low (__mediumconst shr (0+16))
 14719  01308A  6EF8               	movwf	tblptru,c
 14720  01308C                     	endif
 14721  01308C  0008               	tblrd		*
 14722  01308E  50F5               	movf	tablat,w,c
 14723  013090  0A58               	xorlw	88
 14724  013092  A4D8               	btfss	status,2,c
 14725  013094  D094               	goto	l13203
 14726  013096                     u12680:
 14727                           
 14728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 14729                           ;stkvar	_fmt @ sp[(-32)+-4]
 14730  013096  0EDC               	movlw	-36
 14731  013098  006F FF8F FFD9     	movff	plusw1,fsr2l
 14732  01309E  0EDD               	movlw	-35
 14733  0130A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14734  0130A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14735  0130AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14736  0130B2                     	if	0	;tblptru may be non-zero
 14737  0130B2                     	endif
 14738  0130B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14739  0130B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14740  0130B4  6EF8               	movwf	tblptru,c
 14741  0130B6                     	endif
 14742                           
 14743                           ;stkvar	_c @ sp[(-32)+31]
 14744  0130B6  0008               	tblrd		*
 14745  0130B8  0EFF               	movlw	-1
 14746  0130BA  006F FFD7 FFE3     	movff	tablat,plusw1
 14747                           
 14748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 14749                           ;stkvar	_fmt @ sp[(-32)+-4]
 14750  0130C0  0EDC               	movlw	-36
 14751  0130C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14752  0130C8  0EDD               	movlw	-35
 14753  0130CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14754  0130D0  2ADE               	incf	postinc2,f,c
 14755  0130D2  0E00               	movlw	0
 14756  0130D4  22DD               	addwfc	postdec2,f,c
 14757                           
 14758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14759                           ;stkvar	_ap @ sp[(-32)+-6]
 14760  0130D6  0EDA               	movlw	-38
 14761  0130D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14762  0130DE  0EDB               	movlw	-37
 14763  0130E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14764  0130E6  0E02               	movlw	2
 14765  0130E8  5EDE               	subwf	postinc2,f,c
 14766  0130EA  0E00               	movlw	0
 14767  0130EC  5ADD               	subwfb	postdec2,f,c
 14768  0130EE  006F FF78  F00B    	movff	postinc2,btemp+10
 14769  0130F4  006F FF74  F00C    	movff	postdec2,btemp+11
 14770  0130FA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14771  013100  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14772  013106  006F FF78  F00B    	movff	postinc2,btemp+10
 14773  01310C  006F FF74  F00C    	movff	postdec2,btemp+11
 14774  013112  500B               	movf	(btemp+10)^0,w,c
 14775  013114  6E11               	movwf	(btemp+16)^0,c
 14776  013116  500C               	movf	(btemp+11)^0,w,c
 14777  013118  6E12               	movwf	(btemp+17)^0,c
 14778  01311A  6A13               	clrf	(btemp+18)^0,c
 14779  01311C  6A14               	clrf	(btemp+19)^0,c
 14780  01311E  6A15               	clrf	(btemp+20)^0,c
 14781  013120  6A16               	clrf	(btemp+21)^0,c
 14782  013122  6A17               	clrf	(btemp+22)^0,c
 14783  013124  6A18               	clrf	(btemp+23)^0,c
 14784                           
 14785                           ;stkvar	_llu @ sp[(-32)+6]
 14786  013126  0EE6               	movlw	-26
 14787  013128  0060  F047  FFE3   	movff	btemp+16,plusw1
 14788  01312E  0EE7               	movlw	-25
 14789  013130  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14790  013136  0EE8               	movlw	-24
 14791  013138  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14792  01313E  0EE9               	movlw	-23
 14793  013140  0060  F053  FFE3   	movff	btemp+19,plusw1
 14794  013146  0EEA               	movlw	-22
 14795  013148  0060  F057  FFE3   	movff	btemp+20,plusw1
 14796  01314E  0EEB               	movlw	-21
 14797  013150  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14798  013156  0EEC               	movlw	-20
 14799  013158  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14800  01315E  0EED               	movlw	-19
 14801  013160  0060  F063  FFE3   	movff	btemp+23,plusw1
 14802                           
 14803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 14804                           ;stkvar	_c @ sp[(-32)+31]
 14805  013166  0EFF               	movlw	-1
 14806  013168  50E3               	movf	plusw1,w,c
 14807  01316A  6EE6               	movwf	postinc1,c
 14808                           
 14809                           ;stkvar	_llu @ sp[(-33)+6]
 14810  01316C  50E1               	movf	fsr1l,w,c
 14811  01316E  0FE5               	addlw	-27
 14812  013170  6ED9               	movwf	fsr2l,c
 14813  013172  50E2               	movf	fsr1h,w,c
 14814  013174  6EDA               	movwf	fsr2h,c
 14815  013176  0EFF               	movlw	255
 14816  013178  22DA               	addwfc	fsr2h,f,c
 14817  01317A  006F FF7B FFE6     	movff	postinc2,postinc1
 14818  013180  006F FF7B FFE6     	movff	postinc2,postinc1
 14819  013186  006F FF7B FFE6     	movff	postinc2,postinc1
 14820  01318C  006F FF7B FFE6     	movff	postinc2,postinc1
 14821  013192  006F FF7B FFE6     	movff	postinc2,postinc1
 14822  013198  006F FF7B FFE6     	movff	postinc2,postinc1
 14823  01319E  006F FF7B FFE6     	movff	postinc2,postinc1
 14824  0131A4  006F FF7B FFE6     	movff	postinc2,postinc1
 14825                           
 14826                           ;stkvar	_fp @ sp[(-41)+-2]
 14827  0131AA  0ED5               	movlw	-43
 14828  0131AC  006F FF8F FFE6     	movff	plusw1,postinc1
 14829  0131B2  006F FF8F FFE6     	movff	plusw1,postinc1
 14830  0131B8  EC94  F0B0         	call	_xtoa	;wreg free
 14831  0131BC  D105               	goto	l2483
 14832  0131BE                     l13203:
 14833                           
 14834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 14835  0131BE  0E02               	movlw	2
 14836  0131C0  6EE6               	movwf	postinc1,c
 14837  0131C2  0E00               	movlw	0
 14838  0131C4  6EE6               	movwf	postinc1,c
 14839  0131C6  0EF6               	movlw	low STR_103
 14840  0131C8  6EE6               	movwf	postinc1,c
 14841  0131CA  0EFF               	movlw	high STR_103
 14842  0131CC  6EE6               	movwf	postinc1,c
 14843                           
 14844                           ;stkvar	_fmt @ sp[(-36)+-4]
 14845  0131CE  0ED8               	movlw	-40
 14846  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14847  0131D6  0ED9               	movlw	-39
 14848  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14849  0131DE  006F FF78  F00B    	movff	postinc2,btemp+10
 14850  0131E4  006F FF74  F00C    	movff	postdec2,btemp+11
 14851  0131EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14852  0131F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14853  0131F6  EC94  F0C1         	call	_strncmp	;wreg free
 14854  0131FA  5001               	movf	btemp^0,w,c
 14855  0131FC  1002               	iorwf	(btemp+1)^0,w,c
 14856  0131FE  B4D8               	btfsc	status,2,c
 14857  013200  D022               	goto	u12700
 14858  013202  0E02               	movlw	2
 14859  013204  6EE6               	movwf	postinc1,c
 14860  013206  0E00               	movlw	0
 14861  013208  6EE6               	movwf	postinc1,c
 14862  01320A  0EE7               	movlw	low STR_107
 14863  01320C  6EE6               	movwf	postinc1,c
 14864  01320E  0EFF               	movlw	high STR_107
 14865  013210  6EE6               	movwf	postinc1,c
 14866                           
 14867                           ;stkvar	_fmt @ sp[(-36)+-4]
 14868  013212  0ED8               	movlw	-40
 14869  013214  006F FF8F FFD9     	movff	plusw1,fsr2l
 14870  01321A  0ED9               	movlw	-39
 14871  01321C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14872  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 14873  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 14874  01322E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14875  013234  0060  F033  FFE6   	movff	btemp+11,postinc1
 14876  01323A  EC94  F0C1         	call	_strncmp	;wreg free
 14877  01323E  5001               	movf	btemp^0,w,c
 14878  013240  1002               	iorwf	(btemp+1)^0,w,c
 14879  013242  A4D8               	btfss	status,2,c
 14880  013244  D058               	goto	l13217
 14881  013246                     u12700:
 14882                           
 14883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 14884                           ;stkvar	_fmt @ sp[(-32)+-4]
 14885  013246  0EDC               	movlw	-36
 14886  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 14887  01324E  0EDD               	movlw	-35
 14888  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 14889  013256  006F FF78  F00B    	movff	postinc2,btemp+10
 14890  01325C  006F FF74  F00C    	movff	postdec2,btemp+11
 14891  013262  0E01               	movlw	1
 14892  013264  260B               	addwf	(btemp+10)^0,f,c
 14893  013266  0E00               	movlw	0
 14894  013268  220C               	addwfc	(btemp+11)^0,f,c
 14895  01326A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14896  013270  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14897  013276                     	if	0	;tblptru may be non-zero
 14898  013276                     	endif
 14899  013276                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14900  013276  0E00               	movlw	low (__mediumconst shr (0+16))
 14901  013278  6EF8               	movwf	tblptru,c
 14902  01327A                     	endif
 14903                           
 14904                           ;stkvar	_c @ sp[(-32)+31]
 14905  01327A  0008               	tblrd		*
 14906  01327C  0EFF               	movlw	-1
 14907  01327E  006F FFD7 FFE3     	movff	tablat,plusw1
 14908                           
 14909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 14910                           ;stkvar	_fmt @ sp[(-32)+-4]
 14911  013284  0EDC               	movlw	-36
 14912  013286  006F FF8F FFD9     	movff	plusw1,fsr2l
 14913  01328C  0EDD               	movlw	-35
 14914  01328E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14915  013294  0E02               	movlw	2
 14916  013296  26DE               	addwf	postinc2,f,c
 14917  013298  0E00               	movlw	0
 14918  01329A  22DD               	addwfc	postdec2,f,c
 14919                           
 14920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14921                           ;stkvar	_ap @ sp[(-32)+-6]
 14922  01329C  0EDA               	movlw	-38
 14923  01329E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14924  0132A4  0EDB               	movlw	-37
 14925  0132A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14926  0132AC  0E04               	movlw	4
 14927  0132AE  5EDE               	subwf	postinc2,f,c
 14928  0132B0  0E00               	movlw	0
 14929  0132B2  5ADD               	subwfb	postdec2,f,c
 14930  0132B4  006F FF78  F00B    	movff	postinc2,btemp+10
 14931  0132BA  006F FF74  F00C    	movff	postdec2,btemp+11
 14932  0132C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14933  0132C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14934  0132CC  006F FF78  F009    	movff	postinc2,btemp+8
 14935  0132D2  006F FF78  F00A    	movff	postinc2,btemp+9
 14936  0132D8  006F FF78  F00B    	movff	postinc2,btemp+10
 14937  0132DE  006F FF78  F00C    	movff	postinc2,btemp+11
 14938  0132E4  5009               	movf	(btemp+8)^0,w,c
 14939  0132E6  6E11               	movwf	(btemp+16)^0,c
 14940  0132E8  500A               	movf	(btemp+9)^0,w,c
 14941  0132EA  6E12               	movwf	(btemp+17)^0,c
 14942  0132EC  500B               	movf	(btemp+10)^0,w,c
 14943  0132EE  6E13               	movwf	(btemp+18)^0,c
 14944  0132F0  500C               	movf	(btemp+11)^0,w,c
 14945  0132F2  6E14               	movwf	(btemp+19)^0,c
 14946  0132F4  D714               	goto	L14
 14947  0132F6                     l13217:
 14948                           
 14949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 14950                           ;stkvar	_fmt @ sp[(-32)+-4]
 14951  0132F6  0EDC               	movlw	-36
 14952  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14953  0132FE  0EDD               	movlw	-35
 14954  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 14955  013306  006F FF7B FFF6     	movff	postinc2,tblptrl
 14956  01330C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14957  013312                     	if	0	;tblptru may be non-zero
 14958  013312                     	endif
 14959  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14960  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 14961  013314  6EF8               	movwf	tblptru,c
 14962  013316                     	endif
 14963  013316  0008               	tblrd		*
 14964  013318  50F5               	movf	tablat,w,c
 14965  01331A  0A25               	xorlw	37
 14966  01331C  A4D8               	btfss	status,2,c
 14967  01331E  D01A               	goto	l13227
 14968                           
 14969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14970                           ;stkvar	_fmt @ sp[(-32)+-4]
 14971  013320  0EDC               	movlw	-36
 14972  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 14973  013328  0EDD               	movlw	-35
 14974  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14975  013330  2ADE               	incf	postinc2,f,c
 14976  013332  0E00               	movlw	0
 14977  013334  22DD               	addwfc	postdec2,f,c
 14978                           
 14979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14980                           ;stkvar	_fp @ sp[(-32)+-2]
 14981  013336  0EDE               	movlw	-34
 14982  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 14983  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 14984  013344  0E25               	movlw	37
 14985  013346  6EE6               	movwf	postinc1,c
 14986  013348  0E00               	movlw	0
 14987  01334A  6EE6               	movwf	postinc1,c
 14988  01334C  ECF0  F0CE         	call	_fputc	;wreg free
 14989  013350                     l13223:
 14990                           
 14991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14992  013350  0E01               	movlw	1
 14993  013352  D00C               	goto	L15
 14994  013354                     l13227:
 14995                           
 14996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14997                           ;stkvar	_fmt @ sp[(-32)+-4]
 14998  013354  0EDC               	movlw	-36
 14999  013356  006F FF8F FFD9     	movff	plusw1,fsr2l
 15000  01335C  0EDD               	movlw	-35
 15001  01335E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15002  013364  2ADE               	incf	postinc2,f,c
 15003  013366  0E00               	movlw	0
 15004  013368  22DD               	addwfc	postdec2,f,c
 15005                           
 15006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 15007  01336A  0E00               	movlw	0
 15008  01336C                     L15:
 15009  01336C  6E01               	movwf	btemp^0,c
 15010  01336E  0E00               	movlw	0
 15011  013370  6E02               	movwf	(btemp+1)^0,c
 15012  013372  D02A               	goto	l2483
 15013  013374                     l13233:
 15014                           
 15015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 15016                           ;stkvar	_fp @ sp[(-32)+-2]
 15017  013374  0EDE               	movlw	-34
 15018  013376  006F FF8F FFE6     	movff	plusw1,postinc1
 15019  01337C  006F FF8F FFE6     	movff	plusw1,postinc1
 15020                           
 15021                           ;stkvar	_fmt @ sp[(-34)+-4]
 15022  013382  0EDA               	movlw	-38
 15023  013384  006F FF8F FFD9     	movff	plusw1,fsr2l
 15024  01338A  0EDB               	movlw	-37
 15025  01338C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15026  013392  006F FF7B FFF6     	movff	postinc2,tblptrl
 15027  013398  006F FF77 FFF7     	movff	postdec2,tblptrh
 15028  01339E                     	if	0	;tblptru may be non-zero
 15029  01339E                     	endif
 15030  01339E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15031  01339E  0E00               	movlw	low (__mediumconst shr (0+16))
 15032  0133A0  6EF8               	movwf	tblptru,c
 15033  0133A2                     	endif
 15034  0133A2  0008               	tblrd		*
 15035  0133A4  50F5               	movf	tablat,w,c
 15036  0133A6  6EE6               	movwf	postinc1,c
 15037  0133A8  0E00               	movlw	0
 15038  0133AA  6EE6               	movwf	postinc1,c
 15039  0133AC  ECF0  F0CE         	call	_fputc	;wreg free
 15040                           
 15041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 15042                           ;stkvar	_fmt @ sp[(-32)+-4]
 15043  0133B0  0EDC               	movlw	-36
 15044  0133B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15045  0133B8  0EDD               	movlw	-35
 15046  0133BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15047  0133C0  2ADE               	incf	postinc2,f,c
 15048  0133C2  0E00               	movlw	0
 15049  0133C4  22DD               	addwfc	postdec2,f,c
 15050  0133C6  D7C4               	goto	l13223
 15051  0133C8                     l2483:
 15052                           
 15053                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 15054  0133C8  0EDA               	movlw	218
 15055  0133CA  26E1               	addwf	fsr1l,f,c
 15056  0133CC  0EFF               	movlw	255
 15057  0133CE  22E2               	addwfc	fsr1h,f,c
 15058  0133D0  0012               	return		;funcret
 15059  0133D2                     __end_of_vfpfcnvrt:
 15060                           	opt callstack 0
 15061                           
 15062 ;; *************** function _xtoa *****************
 15063 ;; Defined at:
 15064 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15067 ;;		 -> f(6), NULL(0), 
 15068 ;;  d               8  [STACK] unsigned long long 
 15069 ;;  x               1  [STACK] unsigned char 
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;  n               8  [STACK] unsigned long long 
 15072 ;;  c               2  [STACK] int 
 15073 ;;  i               2  [STACK] int 
 15074 ;;  w               2  [STACK] int 
 15075 ;;  p               2  [STACK] int 
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  2  [STACK] int 
 15078 ;; Registers used:
 15079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15089 ;;Total ram usage:        0 bytes
 15090 ;; Hardware stack levels used:    1
 15091 ;; Hardware stack levels required when called:   20
 15092 ;; This function calls:
 15093 ;;		_isalpha
 15094 ;;		_isupper
 15095 ;;		_pad
 15096 ;;		_toupper
 15097 ;; This function is called by:
 15098 ;;		_vfpfcnvrt
 15099 ;; This function uses a reentrant model
 15100 ;;
 15101                           
 15102                           	psect	text56
 15103  016128                     __ptext56:
 15104                           	opt callstack 0
 15105  016128                     _xtoa:
 15106                           	opt callstack 0
 15107                           
 15108                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15109  016128  0E14               	movlw	20
 15110  01612A  26E1               	addwf	fsr1l,f,c
 15111  01612C  0E00               	movlw	0
 15112  01612E  22E2               	addwfc	fsr1h,f,c
 15113                           
 15114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 15115                           
 15116                           ;incstack = 0
 15117 ;; hardware stack exceeded
 15118  016130  AE3D               	btfss	(_prec+1)^0,7,c
 15119                           
 15120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 15121  016132  923E               	bcf	_flags^0,1,c
 15122                           
 15123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 15124  016134  BE3D               	btfsc	(_prec+1)^0,7,c
 15125  016136  D005               	goto	u12240
 15126  016138  503D               	movf	(_prec+1)^0,w,c
 15127  01613A  E110               	bnz	l12953
 15128  01613C  043C               	decf	_prec^0,w,c
 15129  01613E  B0D8               	btfsc	status,0,c
 15130  016140  D00D               	goto	l12953
 15131  016142                     u12240:
 15132  016142  0E01               	movlw	1
 15133  016144  6E0B               	movwf	(btemp+10)^0,c
 15134  016146  0E00               	movlw	0
 15135  016148  6E0C               	movwf	(btemp+11)^0,c
 15136                           
 15137                           ;stkvar	_p @ sp[(-20)+18]
 15138  01614A  0EFE               	movlw	-2
 15139  01614C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15140  016152  0EFF               	movlw	-1
 15141  016154  0060  F033  FFE3   	movff	btemp+11,plusw1
 15142  01615A  D008               	goto	l2433
 15143  01615C                     l12953:
 15144                           
 15145                           ;stkvar	_p @ sp[(-20)+18]
 15146  01615C  0EFE               	movlw	-2
 15147  01615E  0060  F0F3  FFE3   	movff	_prec,plusw1
 15148  016164  0EFF               	movlw	-1
 15149  016166  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15150  01616C                     l2433:
 15151                           
 15152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 15153                           ;stkvar	_w @ sp[(-20)+16]
 15154  01616C  0EFC               	movlw	-4
 15155  01616E  0060  F0EB  FFE3   	movff	_width,plusw1
 15156  016174  0EFD               	movlw	-3
 15157  016176  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15158                           
 15159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 15160  01617C  A83E               	btfss	_flags^0,4,c
 15161  01617E  D00B               	goto	l12959
 15162                           
 15163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 15164                           ;stkvar	_w @ sp[(-20)+16]
 15165  016180  50E1               	movf	fsr1l,w,c
 15166  016182  0FFC               	addlw	-4
 15167  016184  6ED9               	movwf	fsr2l,c
 15168  016186  50E2               	movf	fsr1h,w,c
 15169  016188  6EDA               	movwf	fsr2h,c
 15170  01618A  0EFF               	movlw	255
 15171  01618C  22DA               	addwfc	fsr2h,f,c
 15172  01618E  0EFE               	movlw	254
 15173  016190  26DE               	addwf	postinc2,f,c
 15174  016192  0EFF               	movlw	255
 15175  016194  22DD               	addwfc	postdec2,f,c
 15176  016196                     l12959:
 15177                           
 15178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 15179                           ;stkvar	_d @ sp[(-20)+-10]
 15180  016196  0EE2               	movlw	226
 15181  016198  24E1               	addwf	fsr1l,w,c
 15182  01619A  6ED9               	movwf	fsr2l,c
 15183  01619C  0EFF               	movlw	255
 15184  01619E  20E2               	addwfc	fsr1h,w,c
 15185  0161A0  6EDA               	movwf	fsr2h,c
 15186                           
 15187                           ;stkvar	_n @ sp[(-20)+4]
 15188  0161A2  0E08               	movlw	8
 15189  0161A4  6E01               	movwf	btemp^0,c
 15190  0161A6  0EF0               	movlw	-16
 15191  0161A8                     us1226999:
 15192  0161A8  006F FF7B FFE3     	movff	postinc2,plusw1
 15193  0161AE  28E8               	incf	wreg,w,c
 15194  0161B0  2E01               	decfsz	btemp^0,f,c
 15195  0161B2  D7FA               	bra	us1226999
 15196                           
 15197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 15198  0161B4  0E4F               	movlw	79
 15199  0161B6  6E0B               	movwf	(btemp+10)^0,c
 15200  0161B8  0E00               	movlw	0
 15201  0161BA  6E0C               	movwf	(btemp+11)^0,c
 15202                           
 15203                           ;stkvar	_i @ sp[(-20)+14]
 15204  0161BC  0EFA               	movlw	-6
 15205  0161BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15206  0161C4  0EFB               	movlw	-5
 15207  0161C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15208                           
 15209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 15210  0161CC  0102               	movlb	2	; () banked
 15211  0161CE  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15212                           
 15213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15214  0161D0  D0EE               	goto	l12997
 15215  0161D2                     l12965:
 15216                           
 15217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 15218                           ;stkvar	_i @ sp[(-20)+14]
 15219  0161D2  50E1               	movf	fsr1l,w,c
 15220  0161D4  0FFA               	addlw	-6
 15221  0161D6  6ED9               	movwf	fsr2l,c
 15222  0161D8  50E2               	movf	fsr1h,w,c
 15223  0161DA  6EDA               	movwf	fsr2h,c
 15224  0161DC  0EFF               	movlw	255
 15225  0161DE  22DA               	addwfc	fsr2h,f,c
 15226  0161E0  06DE               	decf	postinc2,f,c
 15227  0161E2  0E00               	movlw	0
 15228  0161E4  5ADD               	subwfb	postdec2,f,c
 15229                           
 15230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 15231                           ;stkvar	_n @ sp[(-20)+4]
 15232  0161E6  0EF0               	movlw	-16
 15233  0161E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15234  0161EE  0EF1               	movlw	-15
 15235  0161F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15236  0161F6  0E0F               	movlw	15
 15237  0161F8  160B               	andwf	(btemp+10)^0,f,c
 15238  0161FA  0E00               	movlw	0
 15239  0161FC  160C               	andwf	(btemp+11)^0,f,c
 15240                           
 15241                           ;stkvar	_c @ sp[(-20)+12]
 15242  0161FE  0EF8               	movlw	-8
 15243  016200  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15244  016206  0EF9               	movlw	-7
 15245  016208  0060  F033  FFE3   	movff	btemp+11,plusw1
 15246                           
 15247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 15248                           ;stkvar	_c @ sp[(-20)+12]
 15249  01620E  0EF9               	movlw	-7
 15250  016210  BEE3               	btfsc	plusw1,7,c
 15251  016212  D00F               	goto	l12973
 15252  016214  0EF9               	movlw	-7
 15253  016216  50E3               	movf	plusw1,w,c
 15254  016218  E108               	bnz	u12270
 15255  01621A  0EF8               	movlw	-8
 15256  01621C  006F FF8C  F001    	movff	plusw1,btemp
 15257  016222  0E0A               	movlw	10
 15258  016224  5E01               	subwf	btemp^0,f,c
 15259  016226  A0D8               	btfss	status,0,c
 15260  016228  D004               	goto	l12973
 15261  01622A                     u12270:
 15262                           
 15263                           ;stkvar	_c @ sp[(-20)+12]
 15264  01622A  0EF8               	movlw	-8
 15265  01622C  50E3               	movf	plusw1,w,c
 15266  01622E  0F57               	addlw	87
 15267  016230  D003               	goto	L16
 15268  016232                     l12973:
 15269                           
 15270                           ;stkvar	_c @ sp[(-20)+12]
 15271  016232  0EF8               	movlw	-8
 15272  016234  50E3               	movf	plusw1,w,c
 15273  016236  0F30               	addlw	48
 15274  016238                     L16:
 15275  016238  6E0B               	movwf	(btemp+10)^0,c
 15276  01623A  0EF9               	movlw	-7
 15277  01623C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15278  016242  0E00               	movlw	0
 15279  016244  220C               	addwfc	(btemp+11)^0,f,c
 15280                           
 15281                           ;stkvar	_c @ sp[(-20)+12]
 15282  016246  0EF8               	movlw	-8
 15283  016248  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15284  01624E  0EF9               	movlw	-7
 15285  016250  0060  F033  FFE3   	movff	btemp+11,plusw1
 15286  016256  0EBF               	movlw	191
 15287  016258  6E0B               	movwf	(btemp+10)^0,c
 15288  01625A  0EFF               	movlw	255
 15289  01625C  6E0C               	movwf	(btemp+11)^0,c
 15290                           
 15291                           ;stkvar	_x @ sp[(-20)+-11]
 15292  01625E  0EE1               	movlw	-31
 15293  016260  50E3               	movf	plusw1,w,c
 15294  016262  6E09               	movwf	(btemp+8)^0,c
 15295  016264  6A0A               	clrf	(btemp+9)^0,c
 15296  016266  500B               	movf	(btemp+10)^0,w,c
 15297  016268  2609               	addwf	(btemp+8)^0,f,c
 15298  01626A  500C               	movf	(btemp+11)^0,w,c
 15299  01626C  220A               	addwfc	(btemp+9)^0,f,c
 15300  01626E  500A               	movf	(btemp+9)^0,w,c
 15301  016270  E106               	bnz	u12280
 15302  016272  0E1A               	movlw	26
 15303  016274  5C09               	subwf	(btemp+8)^0,w,c
 15304  016276  B0D8               	btfsc	status,0,c
 15305  016278  D002               	goto	u12280
 15306  01627A  0E01               	movlw	1
 15307  01627C  D001               	goto	u12290
 15308  01627E                     u12280:
 15309  01627E  0E00               	movlw	0
 15310  016280                     u12290:
 15311  016280  6E0B               	movwf	(btemp+10)^0,c
 15312  016282  6A0C               	clrf	(btemp+11)^0,c
 15313                           
 15314                           ;stkvar	_xtoa$5892 @ sp[(-20)+2]
 15315  016284  0EEE               	movlw	-18
 15316  016286  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15317  01628C  0EEF               	movlw	-17
 15318  01628E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15319                           
 15320                           ;stkvar	_xtoa$5892 @ sp[(-20)+2]
 15321  016294  0EEE               	movlw	-18
 15322  016296  006F FF8C  F001    	movff	plusw1,btemp
 15323  01629C  0EEF               	movlw	-17
 15324  01629E  50E3               	movf	plusw1,w,c
 15325  0162A0  1001               	iorwf	btemp^0,w,c
 15326  0162A2  B4D8               	btfsc	status,2,c
 15327  0162A4  D041               	goto	l12989
 15328  0162A6  0E9F               	movlw	159
 15329  0162A8  6E0B               	movwf	(btemp+10)^0,c
 15330  0162AA  0EFF               	movlw	255
 15331  0162AC  6E0C               	movwf	(btemp+11)^0,c
 15332                           
 15333                           ;stkvar	_c @ sp[(-20)+12]
 15334  0162AE  0EF8               	movlw	-8
 15335  0162B0  006F FF8C  F009    	movff	plusw1,btemp+8
 15336  0162B6  0EF9               	movlw	-7
 15337  0162B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 15338  0162BE  0E20               	movlw	32
 15339  0162C0  1209               	iorwf	(btemp+8)^0,f,c
 15340  0162C2  0E00               	movlw	0
 15341  0162C4  120A               	iorwf	(btemp+9)^0,f,c
 15342  0162C6  500B               	movf	(btemp+10)^0,w,c
 15343  0162C8  2609               	addwf	(btemp+8)^0,f,c
 15344  0162CA  500C               	movf	(btemp+11)^0,w,c
 15345  0162CC  220A               	addwfc	(btemp+9)^0,f,c
 15346  0162CE  500A               	movf	(btemp+9)^0,w,c
 15347  0162D0  E106               	bnz	u12310
 15348  0162D2  0E1A               	movlw	26
 15349  0162D4  5C09               	subwf	(btemp+8)^0,w,c
 15350  0162D6  B0D8               	btfsc	status,0,c
 15351  0162D8  D002               	goto	u12310
 15352  0162DA  0E01               	movlw	1
 15353  0162DC  D001               	goto	u12320
 15354  0162DE                     u12310:
 15355  0162DE  0E00               	movlw	0
 15356  0162E0                     u12320:
 15357  0162E0  6E0B               	movwf	(btemp+10)^0,c
 15358  0162E2  6A0C               	clrf	(btemp+11)^0,c
 15359                           
 15360                           ;stkvar	_xtoa$5893 @ sp[(-20)+0]
 15361  0162E4  0EEC               	movlw	-20
 15362  0162E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15363  0162EC  0EED               	movlw	-19
 15364  0162EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15365                           
 15366                           ;stkvar	_xtoa$5893 @ sp[(-20)+0]
 15367  0162F4  0EEC               	movlw	-20
 15368  0162F6  006F FF8C  F001    	movff	plusw1,btemp
 15369  0162FC  0EED               	movlw	-19
 15370  0162FE  50E3               	movf	plusw1,w,c
 15371  016300  1001               	iorwf	btemp^0,w,c
 15372  016302  B4D8               	btfsc	status,2,c
 15373  016304  D011               	goto	l12989
 15374                           
 15375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 15376                           ;stkvar	_c @ sp[(-20)+12]
 15377  016306  0EF8               	movlw	-8
 15378  016308  006F FF8F FFE6     	movff	plusw1,postinc1
 15379  01630E  006F FF8F FFE6     	movff	plusw1,postinc1
 15380  016314  ECCA  F0D9         	call	_toupper	;wreg free
 15381                           
 15382                           ;stkvar	_c @ sp[(-20)+12]
 15383  016318  0EF8               	movlw	-8
 15384  01631A  0060  F007  FFE3   	movff	btemp,plusw1
 15385  016320  0EF9               	movlw	-7
 15386  016322  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15387  016328                     l12989:
 15388                           
 15389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 15390                           ;stkvar	_c @ sp[(-20)+12]
 15391                           ;stkvar	_i @ sp[(-20)+14]
 15392  016328  0EFA               	movlw	-6
 15393  01632A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15394  016330  0EFB               	movlw	-5
 15395  016332  006F FF8C  F00C    	movff	plusw1,btemp+11
 15396  016338  0E97               	movlw	low _dbuf
 15397  01633A  240B               	addwf	(btemp+10)^0,w,c
 15398  01633C  6ED9               	movwf	fsr2l,c
 15399  01633E  0E02               	movlw	high _dbuf
 15400  016340  200C               	addwfc	(btemp+11)^0,w,c
 15401  016342  6EDA               	movwf	fsr2h,c
 15402  016344  0EF8               	movlw	-8
 15403  016346  006F FF8F FFDF     	movff	plusw1,indf2
 15404                           
 15405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 15406                           ;stkvar	_p @ sp[(-20)+18]
 15407  01634C  50E1               	movf	fsr1l,w,c
 15408  01634E  0FFE               	addlw	-2
 15409  016350  6ED9               	movwf	fsr2l,c
 15410  016352  50E2               	movf	fsr1h,w,c
 15411  016354  6EDA               	movwf	fsr2h,c
 15412  016356  0EFF               	movlw	255
 15413  016358  22DA               	addwfc	fsr2h,f,c
 15414  01635A  06DE               	decf	postinc2,f,c
 15415  01635C  0E00               	movlw	0
 15416  01635E  5ADD               	subwfb	postdec2,f,c
 15417                           
 15418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 15419                           ;stkvar	_w @ sp[(-20)+16]
 15420  016360  50E1               	movf	fsr1l,w,c
 15421  016362  0FFC               	addlw	-4
 15422  016364  6ED9               	movwf	fsr2l,c
 15423  016366  50E2               	movf	fsr1h,w,c
 15424  016368  6EDA               	movwf	fsr2h,c
 15425  01636A  0EFF               	movlw	255
 15426  01636C  22DA               	addwfc	fsr2h,f,c
 15427  01636E  06DE               	decf	postinc2,f,c
 15428  016370  0E00               	movlw	0
 15429  016372  5ADD               	subwfb	postdec2,f,c
 15430                           
 15431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 15432  016374  0E04               	movlw	4
 15433  016376  6E0C               	movwf	(btemp+11)^0,c
 15434                           
 15435                           ;stkvar	_n @ sp[(-20)+4]
 15436  016378  50E1               	movf	fsr1l,w,c
 15437  01637A  0FF0               	addlw	-16
 15438  01637C  6ED9               	movwf	fsr2l,c
 15439  01637E  50E2               	movf	fsr1h,w,c
 15440  016380  6EDA               	movwf	fsr2h,c
 15441  016382  0EFF               	movlw	255
 15442  016384  22DA               	addwfc	fsr2h,f,c
 15443  016386  280C               	incf	(btemp+11)^0,w,c
 15444  016388  52DE               	movf	postinc2,f,c
 15445  01638A  D00F               	goto	u12340
 15446  01638C                     u12345:
 15447  01638C  52DE               	movf	postinc2,f,c
 15448  01638E  52DE               	movf	postinc2,f,c
 15449  016390  52DE               	movf	postinc2,f,c
 15450  016392  52DE               	movf	postinc2,f,c
 15451  016394  52DE               	movf	postinc2,f,c
 15452  016396  52DE               	movf	postinc2,f,c
 15453  016398  90D8               	bcf	status,0,c
 15454  01639A  32DD               	rrcf	postdec2,f,c
 15455  01639C  32DD               	rrcf	postdec2,f,c
 15456  01639E  32DD               	rrcf	postdec2,f,c
 15457  0163A0  32DD               	rrcf	postdec2,f,c
 15458  0163A2  32DD               	rrcf	postdec2,f,c
 15459  0163A4  32DD               	rrcf	postdec2,f,c
 15460  0163A6  32DD               	rrcf	postdec2,f,c
 15461  0163A8  32DE               	rrcf	postinc2,f,c
 15462  0163AA                     u12340:
 15463  0163AA  2EE8               	decfsz	wreg,f,c
 15464  0163AC  D7EF               	goto	u12345
 15465  0163AE                     l12997:
 15466                           
 15467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15468                           ;stkvar	_i @ sp[(-20)+14]
 15469  0163AE  0EFB               	movlw	-5
 15470  0163B0  BEE3               	btfsc	plusw1,7,c
 15471  0163B2  D03A               	goto	u12390
 15472  0163B4  0EFB               	movlw	-5
 15473  0163B6  50E3               	movf	plusw1,w,c
 15474  0163B8  E108               	bnz	u12350
 15475  0163BA  0EFA               	movlw	-6
 15476  0163BC  006F FF8C  F001    	movff	plusw1,btemp
 15477  0163C2  0E02               	movlw	2
 15478  0163C4  5E01               	subwf	btemp^0,f,c
 15479  0163C6  A0D8               	btfss	status,0,c
 15480  0163C8  D02F               	goto	u12390
 15481  0163CA                     u12350:
 15482                           
 15483                           ;stkvar	_n @ sp[(-20)+4]
 15484  0163CA  0EF0               	movlw	-16
 15485  0163CC  50E3               	movf	plusw1,w,c
 15486  0163CE  E115               	bnz	u12361
 15487  0163D0  0EF1               	movlw	-15
 15488  0163D2  50E3               	movf	plusw1,w,c
 15489  0163D4  E112               	bnz	u12361
 15490  0163D6  0EF2               	movlw	-14
 15491  0163D8  50E3               	movf	plusw1,w,c
 15492  0163DA  E10F               	bnz	u12361
 15493  0163DC  0EF3               	movlw	-13
 15494  0163DE  50E3               	movf	plusw1,w,c
 15495  0163E0  E10C               	bnz	u12361
 15496  0163E2  0EF4               	movlw	-12
 15497  0163E4  50E3               	movf	plusw1,w,c
 15498  0163E6  E109               	bnz	u12361
 15499  0163E8  0EF5               	movlw	-11
 15500  0163EA  50E3               	movf	plusw1,w,c
 15501  0163EC  E106               	bnz	u12361
 15502  0163EE  0EF6               	movlw	-10
 15503  0163F0  50E3               	movf	plusw1,w,c
 15504  0163F2  E103               	bnz	u12361
 15505  0163F4  0EF7               	movlw	-9
 15506  0163F6  50E3               	movf	plusw1,w,c
 15507  0163F8  A4D8               	btfss	status,2,c
 15508  0163FA                     u12361:
 15509  0163FA  D6EB               	goto	l12965
 15510                           
 15511                           ;stkvar	_p @ sp[(-20)+18]
 15512  0163FC  0EFF               	movlw	-1
 15513  0163FE  BEE3               	btfsc	plusw1,7,c
 15514  016400  D007               	goto	u12370
 15515  016402  0EFF               	movlw	-1
 15516  016404  50E3               	movf	plusw1,w,c
 15517  016406  E103               	bnz	u12371
 15518  016408  0EFE               	movlw	-2
 15519  01640A  04E3               	decf	plusw1,w,c
 15520  01640C  B0D8               	btfsc	status,0,c
 15521  01640E                     u12371:
 15522  01640E  D6E1               	goto	l12965
 15523  016410                     u12370:
 15524                           
 15525                           ;stkvar	_w @ sp[(-20)+16]
 15526  016410  0EFD               	movlw	-3
 15527  016412  BEE3               	btfsc	plusw1,7,c
 15528  016414  D009               	goto	u12390
 15529  016416  0EFD               	movlw	-3
 15530  016418  50E3               	movf	plusw1,w,c
 15531  01641A  E104               	bnz	u12380
 15532  01641C  0EFC               	movlw	-4
 15533  01641E  04E3               	decf	plusw1,w,c
 15534  016420  A0D8               	btfss	status,0,c
 15535  016422  D002               	goto	u12390
 15536  016424                     u12380:
 15537  016424  B23E               	btfsc	_flags^0,1,c
 15538  016426  D6D5               	goto	l12965
 15539  016428                     u12390:
 15540                           
 15541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 15542  016428  A83E               	btfss	_flags^0,4,c
 15543  01642A  D036               	goto	l13013
 15544                           
 15545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 15546                           ;stkvar	_i @ sp[(-20)+14]
 15547  01642C  50E1               	movf	fsr1l,w,c
 15548  01642E  0FFA               	addlw	-6
 15549  016430  6ED9               	movwf	fsr2l,c
 15550  016432  50E2               	movf	fsr1h,w,c
 15551  016434  6EDA               	movwf	fsr2h,c
 15552  016436  0EFF               	movlw	255
 15553  016438  22DA               	addwfc	fsr2h,f,c
 15554  01643A  06DE               	decf	postinc2,f,c
 15555  01643C  0E00               	movlw	0
 15556  01643E  5ADD               	subwfb	postdec2,f,c
 15557                           
 15558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 15559                           ;stkvar	_x @ sp[(-20)+-11]
 15560                           ;stkvar	_i @ sp[(-20)+14]
 15561  016440  0EFA               	movlw	-6
 15562  016442  006F FF8C  F00B    	movff	plusw1,btemp+10
 15563  016448  0EFB               	movlw	-5
 15564  01644A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15565  016450  0E97               	movlw	low _dbuf
 15566  016452  240B               	addwf	(btemp+10)^0,w,c
 15567  016454  6ED9               	movwf	fsr2l,c
 15568  016456  0E02               	movlw	high _dbuf
 15569  016458  200C               	addwfc	(btemp+11)^0,w,c
 15570  01645A  6EDA               	movwf	fsr2h,c
 15571  01645C  0EE1               	movlw	-31
 15572  01645E  006F FF8F FFDF     	movff	plusw1,indf2
 15573                           
 15574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 15575                           ;stkvar	_i @ sp[(-20)+14]
 15576  016464  50E1               	movf	fsr1l,w,c
 15577  016466  0FFA               	addlw	-6
 15578  016468  6ED9               	movwf	fsr2l,c
 15579  01646A  50E2               	movf	fsr1h,w,c
 15580  01646C  6EDA               	movwf	fsr2h,c
 15581  01646E  0EFF               	movlw	255
 15582  016470  22DA               	addwfc	fsr2h,f,c
 15583  016472  06DE               	decf	postinc2,f,c
 15584  016474  0E00               	movlw	0
 15585  016476  5ADD               	subwfb	postdec2,f,c
 15586                           
 15587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 15588                           ;stkvar	_i @ sp[(-20)+14]
 15589  016478  0EFA               	movlw	-6
 15590  01647A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15591  016480  0EFB               	movlw	-5
 15592  016482  006F FF8C  F00C    	movff	plusw1,btemp+11
 15593  016488  0E97               	movlw	low _dbuf
 15594  01648A  240B               	addwf	(btemp+10)^0,w,c
 15595  01648C  6ED9               	movwf	fsr2l,c
 15596  01648E  0E02               	movlw	high _dbuf
 15597  016490  200C               	addwfc	(btemp+11)^0,w,c
 15598  016492  6EDA               	movwf	fsr2h,c
 15599  016494  0E30               	movlw	48
 15600  016496  6EDF               	movwf	indf2,c
 15601  016498                     l13013:
 15602                           
 15603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 15604                           ;stkvar	_w @ sp[(-20)+16]
 15605  016498  0EFC               	movlw	-4
 15606  01649A  006F FF8F FFE6     	movff	plusw1,postinc1
 15607  0164A0  006F FF8F FFE6     	movff	plusw1,postinc1
 15608                           
 15609                           ;stkvar	_i @ sp[(-22)+14]
 15610  0164A6  0E97               	movlw	low _dbuf
 15611  0164A8  6E0B               	movwf	(btemp+10)^0,c
 15612  0164AA  0E02               	movlw	high _dbuf
 15613  0164AC  6E0C               	movwf	(btemp+11)^0,c
 15614  0164AE  0EF8               	movlw	-8
 15615  0164B0  50E3               	movf	plusw1,w,c
 15616  0164B2  260B               	addwf	(btemp+10)^0,f,c
 15617  0164B4  0EF9               	movlw	-7
 15618  0164B6  50E3               	movf	plusw1,w,c
 15619  0164B8  220C               	addwfc	(btemp+11)^0,f,c
 15620  0164BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15621  0164C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15622                           
 15623                           ;stkvar	_fp @ sp[(-24)+-2]
 15624  0164C6  0EE6               	movlw	-26
 15625  0164C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15626  0164CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15627  0164D4  EC9A  F0D0         	call	_pad	;wreg free
 15628                           
 15629                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 15630  0164D8  0EE1               	movlw	225
 15631  0164DA  26E1               	addwf	fsr1l,f,c
 15632  0164DC  0EFF               	movlw	255
 15633  0164DE  22E2               	addwfc	fsr1h,f,c
 15634  0164E0  0012               	return		;funcret
 15635  0164E2                     __end_of_xtoa:
 15636                           	opt callstack 0
 15637                           
 15638 ;; *************** function _toupper *****************
 15639 ;; Defined at:
 15640 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;  c               2  [STACK] int 
 15643 ;; Auto vars:     Size  Location     Type
 15644 ;;		None
 15645 ;; Return value:  Size  Location     Type
 15646 ;;                  2  [STACK] int 
 15647 ;; Registers used:
 15648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 15649 ;; Tracked objects:
 15650 ;;		On entry : 0/2
 15651 ;;		On exit  : 0/0
 15652 ;;		Unchanged: 0/0
 15653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15658 ;;Total ram usage:        0 bytes
 15659 ;; Hardware stack levels used:    1
 15660 ;; Hardware stack levels required when called:   16
 15661 ;; This function calls:
 15662 ;;		_islower
 15663 ;; This function is called by:
 15664 ;;		_xtoa
 15665 ;; This function uses a reentrant model
 15666 ;;
 15667                           
 15668                           	psect	text57
 15669  01B394                     __ptext57:
 15670                           	opt callstack 0
 15671  01B394                     _toupper:
 15672                           	opt callstack 0
 15673                           
 15674                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15675  01B394  52E6               	movf	postinc1,f,c
 15676  01B396  52E6               	movf	postinc1,f,c
 15677                           
 15678                           ;stkvar	_c @ sp[(-2)+-2]
 15679                           
 15680                           ;incstack = 0
 15681 ;; hardware stack exceeded
 15682  01B398  0EFC               	movlw	-4
 15683  01B39A  50E3               	movf	plusw1,w,c
 15684  01B39C  0F9F               	addlw	159
 15685  01B39E  6E0B               	movwf	(btemp+10)^0,c
 15686  01B3A0  0EFD               	movlw	-3
 15687  01B3A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 15688  01B3A8  0EFF               	movlw	255
 15689  01B3AA  220C               	addwfc	(btemp+11)^0,f,c
 15690  01B3AC  500C               	movf	(btemp+11)^0,w,c
 15691  01B3AE  E106               	bnz	u6470
 15692  01B3B0  0E1A               	movlw	26
 15693  01B3B2  5C0B               	subwf	(btemp+10)^0,w,c
 15694  01B3B4  B0D8               	btfsc	status,0,c
 15695  01B3B6  D002               	goto	u6470
 15696  01B3B8  0E01               	movlw	1
 15697  01B3BA  D001               	goto	u6480
 15698  01B3BC                     u6470:
 15699  01B3BC  0E00               	movlw	0
 15700  01B3BE                     u6480:
 15701  01B3BE  6E0B               	movwf	(btemp+10)^0,c
 15702  01B3C0  6A0C               	clrf	(btemp+11)^0,c
 15703                           
 15704                           ;stkvar	_toupper$6699 @ sp[(-2)+0]
 15705  01B3C2  0EFE               	movlw	-2
 15706  01B3C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15707  01B3CA  0EFF               	movlw	-1
 15708  01B3CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15709                           
 15710                           ;stkvar	_toupper$6699 @ sp[(-2)+0]
 15711  01B3D2  0EFE               	movlw	-2
 15712  01B3D4  006F FF8C  F001    	movff	plusw1,btemp
 15713  01B3DA  0EFF               	movlw	-1
 15714  01B3DC  50E3               	movf	plusw1,w,c
 15715  01B3DE  1001               	iorwf	btemp^0,w,c
 15716  01B3E0  B4D8               	btfsc	status,2,c
 15717  01B3E2  D00D               	goto	l8439
 15718                           
 15719                           ;stkvar	_c @ sp[(-2)+-2]
 15720  01B3E4  0EFC               	movlw	-4
 15721  01B3E6  006F FF8C  F001    	movff	plusw1,btemp
 15722  01B3EC  0EFD               	movlw	-3
 15723  01B3EE  006F FF8C  F002    	movff	plusw1,btemp+1
 15724  01B3F4  0E5F               	movlw	95
 15725  01B3F6  1601               	andwf	btemp^0,f,c
 15726  01B3F8  0E00               	movlw	0
 15727  01B3FA  1602               	andwf	(btemp+1)^0,f,c
 15728  01B3FC  D008               	goto	l3600
 15729  01B3FE                     l8439:
 15730                           
 15731                           ;stkvar	_c @ sp[(-2)+-2]
 15732  01B3FE  0EFC               	movlw	-4
 15733  01B400  006F FF8C  F001    	movff	plusw1,btemp
 15734  01B406  0EFD               	movlw	-3
 15735  01B408  006F FF8C  F002    	movff	plusw1,btemp+1
 15736  01B40E                     l3600:
 15737                           
 15738                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15739  01B40E  52E5               	movf	postdec1,f,c
 15740  01B410  52E5               	movf	postdec1,f,c
 15741  01B412  52E5               	movf	postdec1,f,c
 15742  01B414  52E5               	movf	postdec1,f,c
 15743  01B416  0012               	return		;funcret
 15744  01B418                     __end_of_toupper:
 15745                           	opt callstack 0
 15746                           
 15747 ;; *************** function _islower *****************
 15748 ;; Defined at:
 15749 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 15750 ;; Parameters:    Size  Location     Type
 15751 ;;  c               2  [STACK] int 
 15752 ;; Auto vars:     Size  Location     Type
 15753 ;;		None
 15754 ;; Return value:  Size  Location     Type
 15755 ;;                  2  [STACK] int 
 15756 ;; Registers used:
 15757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15758 ;; Tracked objects:
 15759 ;;		On entry : 0/0
 15760 ;;		On exit  : 0/0
 15761 ;;		Unchanged: 0/0
 15762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15767 ;;Total ram usage:        0 bytes
 15768 ;; Hardware stack levels used:    1
 15769 ;; Hardware stack levels required when called:   15
 15770 ;; This function calls:
 15771 ;;		Nothing
 15772 ;; This function is called by:
 15773 ;;		_toupper
 15774 ;; This function uses a reentrant model
 15775 ;;
 15776                           
 15777                           	psect	text58
 15778  01C2EC                     __ptext58:
 15779                           	opt callstack 0
 15780  01C2EC                     _islower:
 15781                           	opt callstack 0
 15782                           
 15783                           ;stkvar	_c @ sp[(0)+-2]
 15784                           
 15785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15786                           ;incstack = 0
 15787 ;; hardware stack exceeded
 15788  01C2EC  0EFE               	movlw	-2
 15789  01C2EE  50E3               	movf	plusw1,w,c
 15790  01C2F0  0F9F               	addlw	159
 15791  01C2F2  6E0B               	movwf	(btemp+10)^0,c
 15792  01C2F4  0EFF               	movlw	-1
 15793  01C2F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15794  01C2FC  0EFF               	movlw	255
 15795  01C2FE  220C               	addwfc	(btemp+11)^0,f,c
 15796  01C300  500C               	movf	(btemp+11)^0,w,c
 15797  01C302  E106               	bnz	u6110
 15798  01C304  0E1A               	movlw	26
 15799  01C306  5C0B               	subwf	(btemp+10)^0,w,c
 15800  01C308  B0D8               	btfsc	status,0,c
 15801  01C30A  D002               	goto	u6110
 15802  01C30C  0E01               	movlw	1
 15803  01C30E  D001               	goto	u6120
 15804  01C310                     u6110:
 15805  01C310  0E00               	movlw	0
 15806  01C312                     u6120:
 15807  01C312  6E01               	movwf	btemp^0,c
 15808  01C314  6A02               	clrf	(btemp+1)^0,c
 15809                           
 15810                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15811  01C316  52E5               	movf	postdec1,f,c
 15812  01C318  52E5               	movf	postdec1,f,c
 15813  01C31A  0012               	return		;funcret
 15814  01C31C                     __end_of_islower:
 15815                           	opt callstack 0
 15816                           
 15817 ;; *************** function _isalpha *****************
 15818 ;; Defined at:
 15819 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 15820 ;; Parameters:    Size  Location     Type
 15821 ;;  c               2  [STACK] int 
 15822 ;; Auto vars:     Size  Location     Type
 15823 ;;		None
 15824 ;; Return value:  Size  Location     Type
 15825 ;;                  2  [STACK] int 
 15826 ;; Registers used:
 15827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 15828 ;; Tracked objects:
 15829 ;;		On entry : 0/0
 15830 ;;		On exit  : 0/0
 15831 ;;		Unchanged: 0/0
 15832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15837 ;;Total ram usage:        0 bytes
 15838 ;; Hardware stack levels used:    1
 15839 ;; Hardware stack levels required when called:   15
 15840 ;; This function calls:
 15841 ;;		Nothing
 15842 ;; This function is called by:
 15843 ;;		_xtoa
 15844 ;; This function uses a reentrant model
 15845 ;;
 15846                           
 15847                           	psect	text59
 15848  01BED2                     __ptext59:
 15849                           	opt callstack 0
 15850  01BED2                     _isalpha:
 15851                           	opt callstack 0
 15852                           
 15853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15854                           ;incstack = 0
 15855 ;; hardware stack exceeded
 15856  01BED2  0E9F               	movlw	159
 15857  01BED4  6E0B               	movwf	(btemp+10)^0,c
 15858  01BED6  0EFF               	movlw	255
 15859  01BED8  6E0C               	movwf	(btemp+11)^0,c
 15860                           
 15861                           ;stkvar	_c @ sp[(0)+-2]
 15862  01BEDA  0EFE               	movlw	-2
 15863  01BEDC  006F FF8C  F009    	movff	plusw1,btemp+8
 15864  01BEE2  0EFF               	movlw	-1
 15865  01BEE4  006F FF8C  F00A    	movff	plusw1,btemp+9
 15866  01BEEA  0E20               	movlw	32
 15867  01BEEC  1209               	iorwf	(btemp+8)^0,f,c
 15868  01BEEE  0E00               	movlw	0
 15869  01BEF0  120A               	iorwf	(btemp+9)^0,f,c
 15870  01BEF2  500B               	movf	(btemp+10)^0,w,c
 15871  01BEF4  2609               	addwf	(btemp+8)^0,f,c
 15872  01BEF6  500C               	movf	(btemp+11)^0,w,c
 15873  01BEF8  220A               	addwfc	(btemp+9)^0,f,c
 15874  01BEFA  500A               	movf	(btemp+9)^0,w,c
 15875  01BEFC  E106               	bnz	u6450
 15876  01BEFE  0E1A               	movlw	26
 15877  01BF00  5C09               	subwf	(btemp+8)^0,w,c
 15878  01BF02  B0D8               	btfsc	status,0,c
 15879  01BF04  D002               	goto	u6450
 15880  01BF06  0E01               	movlw	1
 15881  01BF08  D001               	goto	u6460
 15882  01BF0A                     u6450:
 15883  01BF0A  0E00               	movlw	0
 15884  01BF0C                     u6460:
 15885  01BF0C  6E01               	movwf	btemp^0,c
 15886  01BF0E  6A02               	clrf	(btemp+1)^0,c
 15887                           
 15888                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15889  01BF10  52E5               	movf	postdec1,f,c
 15890  01BF12  52E5               	movf	postdec1,f,c
 15891  01BF14  0012               	return		;funcret
 15892  01BF16                     __end_of_isalpha:
 15893                           	opt callstack 0
 15894                           
 15895 ;; *************** function _utoa *****************
 15896 ;; Defined at:
 15897 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15898 ;; Parameters:    Size  Location     Type
 15899 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15900 ;;		 -> f(6), NULL(0), 
 15901 ;;  d               8  [STACK] unsigned long long 
 15902 ;; Auto vars:     Size  Location     Type
 15903 ;;  n               8  [STACK] unsigned long long 
 15904 ;;  i               2  [STACK] int 
 15905 ;;  w               2  [STACK] int 
 15906 ;;  p               2  [STACK] int 
 15907 ;; Return value:  Size  Location     Type
 15908 ;;                  2  [STACK] int 
 15909 ;; Registers used:
 15910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15911 ;; Tracked objects:
 15912 ;;		On entry : 0/0
 15913 ;;		On exit  : 0/0
 15914 ;;		Unchanged: 0/0
 15915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15920 ;;Total ram usage:        0 bytes
 15921 ;; Hardware stack levels used:    1
 15922 ;; Hardware stack levels required when called:   20
 15923 ;; This function calls:
 15924 ;;		___lodiv
 15925 ;;		___lomod
 15926 ;;		_pad
 15927 ;; This function is called by:
 15928 ;;		_vfpfcnvrt
 15929 ;; This function uses a reentrant model
 15930 ;;
 15931                           
 15932                           	psect	text60
 15933  01684E                     __ptext60:
 15934                           	opt callstack 0
 15935  01684E                     _utoa:
 15936                           	opt callstack 0
 15937                           
 15938                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15939  01684E  0E0E               	movlw	14
 15940  016850  26E1               	addwf	fsr1l,f,c
 15941  016852  0E00               	movlw	0
 15942  016854  22E2               	addwfc	fsr1h,f,c
 15943                           
 15944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 15945                           
 15946                           ;incstack = 0
 15947 ;; hardware stack exceeded
 15948  016856  AE3D               	btfss	(_prec+1)^0,7,c
 15949                           
 15950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 15951  016858  923E               	bcf	_flags^0,1,c
 15952                           
 15953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 15954  01685A  BE3D               	btfsc	(_prec+1)^0,7,c
 15955  01685C  D005               	goto	u12160
 15956  01685E  503D               	movf	(_prec+1)^0,w,c
 15957  016860  E110               	bnz	l12913
 15958  016862  043C               	decf	_prec^0,w,c
 15959  016864  B0D8               	btfsc	status,0,c
 15960  016866  D00D               	goto	l12913
 15961  016868                     u12160:
 15962  016868  0E01               	movlw	1
 15963  01686A  6E0B               	movwf	(btemp+10)^0,c
 15964  01686C  0E00               	movlw	0
 15965  01686E  6E0C               	movwf	(btemp+11)^0,c
 15966                           
 15967                           ;stkvar	_p @ sp[(-14)+12]
 15968  016870  0EFE               	movlw	-2
 15969  016872  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15970  016878  0EFF               	movlw	-1
 15971  01687A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15972  016880  D008               	goto	l2418
 15973  016882                     l12913:
 15974                           
 15975                           ;stkvar	_p @ sp[(-14)+12]
 15976  016882  0EFE               	movlw	-2
 15977  016884  0060  F0F3  FFE3   	movff	_prec,plusw1
 15978  01688A  0EFF               	movlw	-1
 15979  01688C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15980  016892                     l2418:
 15981                           
 15982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15983                           ;stkvar	_w @ sp[(-14)+10]
 15984  016892  0EFC               	movlw	-4
 15985  016894  0060  F0EB  FFE3   	movff	_width,plusw1
 15986  01689A  0EFD               	movlw	-3
 15987  01689C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15988                           
 15989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15990                           ;stkvar	_d @ sp[(-14)+-10]
 15991  0168A2  0EE8               	movlw	232
 15992  0168A4  24E1               	addwf	fsr1l,w,c
 15993  0168A6  6ED9               	movwf	fsr2l,c
 15994  0168A8  0EFF               	movlw	255
 15995  0168AA  20E2               	addwfc	fsr1h,w,c
 15996  0168AC  6EDA               	movwf	fsr2h,c
 15997                           
 15998                           ;stkvar	_n @ sp[(-14)+0]
 15999  0168AE  0E08               	movlw	8
 16000  0168B0  6E01               	movwf	btemp^0,c
 16001  0168B2  0EF2               	movlw	-14
 16002  0168B4                     us1217999:
 16003  0168B4  006F FF7B FFE3     	movff	postinc2,plusw1
 16004  0168BA  28E8               	incf	wreg,w,c
 16005  0168BC  2E01               	decfsz	btemp^0,f,c
 16006  0168BE  D7FA               	bra	us1217999
 16007                           
 16008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 16009  0168C0  0E4F               	movlw	79
 16010  0168C2  6E0B               	movwf	(btemp+10)^0,c
 16011  0168C4  0E00               	movlw	0
 16012  0168C6  6E0C               	movwf	(btemp+11)^0,c
 16013                           
 16014                           ;stkvar	_i @ sp[(-14)+8]
 16015  0168C8  0EFA               	movlw	-6
 16016  0168CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16017  0168D0  0EFB               	movlw	-5
 16018  0168D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16019                           
 16020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 16021  0168D8  0102               	movlb	2	; () banked
 16022  0168DA  6BE6               	clrf	(_dbuf+79)& (0+255),b
 16023                           
 16024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16025  0168DC  D0FB               	goto	l12931
 16026  0168DE                     l12921:
 16027                           
 16028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 16029                           ;stkvar	_i @ sp[(-14)+8]
 16030  0168DE  50E1               	movf	fsr1l,w,c
 16031  0168E0  0FFA               	addlw	-6
 16032  0168E2  6ED9               	movwf	fsr2l,c
 16033  0168E4  50E2               	movf	fsr1h,w,c
 16034  0168E6  6EDA               	movwf	fsr2h,c
 16035  0168E8  0EFF               	movlw	255
 16036  0168EA  22DA               	addwfc	fsr2h,f,c
 16037  0168EC  06DE               	decf	postinc2,f,c
 16038  0168EE  0E00               	movlw	0
 16039  0168F0  5ADD               	subwfb	postdec2,f,c
 16040                           
 16041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 16042  0168F2  0E0A               	movlw	10
 16043  0168F4  6EE6               	movwf	postinc1,c
 16044  0168F6  0E00               	movlw	0
 16045  0168F8  6EE6               	movwf	postinc1,c
 16046  0168FA  0E00               	movlw	0
 16047  0168FC  6EE6               	movwf	postinc1,c
 16048  0168FE  0E00               	movlw	0
 16049  016900  6EE6               	movwf	postinc1,c
 16050  016902  0E00               	movlw	0
 16051  016904  6EE6               	movwf	postinc1,c
 16052  016906  0E00               	movlw	0
 16053  016908  6EE6               	movwf	postinc1,c
 16054  01690A  0E00               	movlw	0
 16055  01690C  6EE6               	movwf	postinc1,c
 16056  01690E  0E00               	movlw	0
 16057  016910  6EE6               	movwf	postinc1,c
 16058                           
 16059                           ;stkvar	_n @ sp[(-22)+0]
 16060  016912  50E1               	movf	fsr1l,w,c
 16061  016914  0FEA               	addlw	-22
 16062  016916  6ED9               	movwf	fsr2l,c
 16063  016918  50E2               	movf	fsr1h,w,c
 16064  01691A  6EDA               	movwf	fsr2h,c
 16065  01691C  0EFF               	movlw	255
 16066  01691E  22DA               	addwfc	fsr2h,f,c
 16067  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 16068  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 16069  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 16070  016932  006F FF7B FFE6     	movff	postinc2,postinc1
 16071  016938  006F FF7B FFE6     	movff	postinc2,postinc1
 16072  01693E  006F FF7B FFE6     	movff	postinc2,postinc1
 16073  016944  006F FF7B FFE6     	movff	postinc2,postinc1
 16074  01694A  006F FF7B FFE6     	movff	postinc2,postinc1
 16075  016950  EC1D  F0CD         	call	___lomod	;wreg free
 16076  016954  52E5               	movf	postdec1,f,c
 16077  016956  006F FF9C  F018    	movff	indf1,btemp+23
 16078  01695C  52E5               	movf	postdec1,f,c
 16079  01695E  006F FF9C  F017    	movff	indf1,btemp+22
 16080  016964  52E5               	movf	postdec1,f,c
 16081  016966  006F FF9C  F016    	movff	indf1,btemp+21
 16082  01696C  52E5               	movf	postdec1,f,c
 16083  01696E  006F FF9C  F015    	movff	indf1,btemp+20
 16084  016974  52E5               	movf	postdec1,f,c
 16085  016976  006F FF9C  F014    	movff	indf1,btemp+19
 16086  01697C  52E5               	movf	postdec1,f,c
 16087  01697E  006F FF9C  F013    	movff	indf1,btemp+18
 16088  016984  52E5               	movf	postdec1,f,c
 16089  016986  006F FF9C  F012    	movff	indf1,btemp+17
 16090  01698C  52E5               	movf	postdec1,f,c
 16091  01698E  006F FF9C  F011    	movff	indf1,btemp+16
 16092  016994  0EF8               	movlw	248
 16093  016996  26E1               	addwf	fsr1l,f,c
 16094  016998  0EFF               	movlw	255
 16095  01699A  22E2               	addwfc	fsr1h,f,c
 16096  01699C  0E30               	movlw	48
 16097  01699E  2611               	addwf	(btemp+16)^0,f,c
 16098                           
 16099                           ;stkvar	_i @ sp[(-14)+8]
 16100  0169A0  0EFA               	movlw	-6
 16101  0169A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16102  0169A8  0EFB               	movlw	-5
 16103  0169AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16104  0169B0  0E97               	movlw	low _dbuf
 16105  0169B2  240B               	addwf	(btemp+10)^0,w,c
 16106  0169B4  6ED9               	movwf	fsr2l,c
 16107  0169B6  0E02               	movlw	high _dbuf
 16108  0169B8  200C               	addwfc	(btemp+11)^0,w,c
 16109  0169BA  6EDA               	movwf	fsr2h,c
 16110  0169BC  0060  F047  FFDF   	movff	btemp+16,indf2
 16111                           
 16112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 16113                           ;stkvar	_p @ sp[(-14)+12]
 16114  0169C2  50E1               	movf	fsr1l,w,c
 16115  0169C4  0FFE               	addlw	-2
 16116  0169C6  6ED9               	movwf	fsr2l,c
 16117  0169C8  50E2               	movf	fsr1h,w,c
 16118  0169CA  6EDA               	movwf	fsr2h,c
 16119  0169CC  0EFF               	movlw	255
 16120  0169CE  22DA               	addwfc	fsr2h,f,c
 16121  0169D0  06DE               	decf	postinc2,f,c
 16122  0169D2  0E00               	movlw	0
 16123  0169D4  5ADD               	subwfb	postdec2,f,c
 16124                           
 16125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 16126                           ;stkvar	_w @ sp[(-14)+10]
 16127  0169D6  50E1               	movf	fsr1l,w,c
 16128  0169D8  0FFC               	addlw	-4
 16129  0169DA  6ED9               	movwf	fsr2l,c
 16130  0169DC  50E2               	movf	fsr1h,w,c
 16131  0169DE  6EDA               	movwf	fsr2h,c
 16132  0169E0  0EFF               	movlw	255
 16133  0169E2  22DA               	addwfc	fsr2h,f,c
 16134  0169E4  06DE               	decf	postinc2,f,c
 16135  0169E6  0E00               	movlw	0
 16136  0169E8  5ADD               	subwfb	postdec2,f,c
 16137                           
 16138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 16139  0169EA  0E0A               	movlw	10
 16140  0169EC  6EE6               	movwf	postinc1,c
 16141  0169EE  0E00               	movlw	0
 16142  0169F0  6EE6               	movwf	postinc1,c
 16143  0169F2  0E00               	movlw	0
 16144  0169F4  6EE6               	movwf	postinc1,c
 16145  0169F6  0E00               	movlw	0
 16146  0169F8  6EE6               	movwf	postinc1,c
 16147  0169FA  0E00               	movlw	0
 16148  0169FC  6EE6               	movwf	postinc1,c
 16149  0169FE  0E00               	movlw	0
 16150  016A00  6EE6               	movwf	postinc1,c
 16151  016A02  0E00               	movlw	0
 16152  016A04  6EE6               	movwf	postinc1,c
 16153  016A06  0E00               	movlw	0
 16154  016A08  6EE6               	movwf	postinc1,c
 16155                           
 16156                           ;stkvar	_n @ sp[(-22)+0]
 16157  016A0A  50E1               	movf	fsr1l,w,c
 16158  016A0C  0FEA               	addlw	-22
 16159  016A0E  6ED9               	movwf	fsr2l,c
 16160  016A10  50E2               	movf	fsr1h,w,c
 16161  016A12  6EDA               	movwf	fsr2h,c
 16162  016A14  0EFF               	movlw	255
 16163  016A16  22DA               	addwfc	fsr2h,f,c
 16164  016A18  006F FF7B FFE6     	movff	postinc2,postinc1
 16165  016A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 16166  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 16167  016A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 16168  016A30  006F FF7B FFE6     	movff	postinc2,postinc1
 16169  016A36  006F FF7B FFE6     	movff	postinc2,postinc1
 16170  016A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 16171  016A42  006F FF7B FFE6     	movff	postinc2,postinc1
 16172  016A48  ECF9  F0C8         	call	___lodiv	;wreg free
 16173  016A4C  52E5               	movf	postdec1,f,c
 16174  016A4E  006F FF9C  F018    	movff	indf1,btemp+23
 16175  016A54  52E5               	movf	postdec1,f,c
 16176  016A56  006F FF9C  F017    	movff	indf1,btemp+22
 16177  016A5C  52E5               	movf	postdec1,f,c
 16178  016A5E  006F FF9C  F016    	movff	indf1,btemp+21
 16179  016A64  52E5               	movf	postdec1,f,c
 16180  016A66  006F FF9C  F015    	movff	indf1,btemp+20
 16181  016A6C  52E5               	movf	postdec1,f,c
 16182  016A6E  006F FF9C  F014    	movff	indf1,btemp+19
 16183  016A74  52E5               	movf	postdec1,f,c
 16184  016A76  006F FF9C  F013    	movff	indf1,btemp+18
 16185  016A7C  52E5               	movf	postdec1,f,c
 16186  016A7E  006F FF9C  F012    	movff	indf1,btemp+17
 16187  016A84  52E5               	movf	postdec1,f,c
 16188  016A86  006F FF9C  F011    	movff	indf1,btemp+16
 16189  016A8C  0EF8               	movlw	248
 16190  016A8E  26E1               	addwf	fsr1l,f,c
 16191  016A90  0EFF               	movlw	255
 16192  016A92  22E2               	addwfc	fsr1h,f,c
 16193                           
 16194                           ;stkvar	_n @ sp[(-14)+0]
 16195  016A94  0EF2               	movlw	-14
 16196  016A96  0060  F047  FFE3   	movff	btemp+16,plusw1
 16197  016A9C  0EF3               	movlw	-13
 16198  016A9E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16199  016AA4  0EF4               	movlw	-12
 16200  016AA6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16201  016AAC  0EF5               	movlw	-11
 16202  016AAE  0060  F053  FFE3   	movff	btemp+19,plusw1
 16203  016AB4  0EF6               	movlw	-10
 16204  016AB6  0060  F057  FFE3   	movff	btemp+20,plusw1
 16205  016ABC  0EF7               	movlw	-9
 16206  016ABE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16207  016AC4  0EF8               	movlw	-8
 16208  016AC6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16209  016ACC  0EF9               	movlw	-7
 16210  016ACE  0060  F063  FFE3   	movff	btemp+23,plusw1
 16211  016AD4                     l12931:
 16212                           
 16213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16214                           ;stkvar	_i @ sp[(-14)+8]
 16215  016AD4  0EFA               	movlw	-6
 16216  016AD6  006F FF8C  F001    	movff	plusw1,btemp
 16217  016ADC  0EFB               	movlw	-5
 16218  016ADE  50E3               	movf	plusw1,w,c
 16219  016AE0  1001               	iorwf	btemp^0,w,c
 16220  016AE2  B4D8               	btfsc	status,2,c
 16221  016AE4  D02F               	goto	u12220
 16222                           
 16223                           ;stkvar	_n @ sp[(-14)+0]
 16224  016AE6  0EF2               	movlw	-14
 16225  016AE8  50E3               	movf	plusw1,w,c
 16226  016AEA  E115               	bnz	u12191
 16227  016AEC  0EF3               	movlw	-13
 16228  016AEE  50E3               	movf	plusw1,w,c
 16229  016AF0  E112               	bnz	u12191
 16230  016AF2  0EF4               	movlw	-12
 16231  016AF4  50E3               	movf	plusw1,w,c
 16232  016AF6  E10F               	bnz	u12191
 16233  016AF8  0EF5               	movlw	-11
 16234  016AFA  50E3               	movf	plusw1,w,c
 16235  016AFC  E10C               	bnz	u12191
 16236  016AFE  0EF6               	movlw	-10
 16237  016B00  50E3               	movf	plusw1,w,c
 16238  016B02  E109               	bnz	u12191
 16239  016B04  0EF7               	movlw	-9
 16240  016B06  50E3               	movf	plusw1,w,c
 16241  016B08  E106               	bnz	u12191
 16242  016B0A  0EF8               	movlw	-8
 16243  016B0C  50E3               	movf	plusw1,w,c
 16244  016B0E  E103               	bnz	u12191
 16245  016B10  0EF9               	movlw	-7
 16246  016B12  50E3               	movf	plusw1,w,c
 16247  016B14  A4D8               	btfss	status,2,c
 16248  016B16                     u12191:
 16249  016B16  D6E3               	goto	l12921
 16250                           
 16251                           ;stkvar	_p @ sp[(-14)+12]
 16252  016B18  0EFF               	movlw	-1
 16253  016B1A  BEE3               	btfsc	plusw1,7,c
 16254  016B1C  D007               	goto	u12200
 16255  016B1E  0EFF               	movlw	-1
 16256  016B20  50E3               	movf	plusw1,w,c
 16257  016B22  E103               	bnz	u12201
 16258  016B24  0EFE               	movlw	-2
 16259  016B26  04E3               	decf	plusw1,w,c
 16260  016B28  B0D8               	btfsc	status,0,c
 16261  016B2A                     u12201:
 16262  016B2A  D6D9               	goto	l12921
 16263  016B2C                     u12200:
 16264                           
 16265                           ;stkvar	_w @ sp[(-14)+10]
 16266  016B2C  0EFD               	movlw	-3
 16267  016B2E  BEE3               	btfsc	plusw1,7,c
 16268  016B30  D009               	goto	u12220
 16269  016B32  0EFD               	movlw	-3
 16270  016B34  50E3               	movf	plusw1,w,c
 16271  016B36  E104               	bnz	u12210
 16272  016B38  0EFC               	movlw	-4
 16273  016B3A  04E3               	decf	plusw1,w,c
 16274  016B3C  A0D8               	btfss	status,0,c
 16275  016B3E  D002               	goto	u12220
 16276  016B40                     u12210:
 16277  016B40  B23E               	btfsc	_flags^0,1,c
 16278  016B42  D6CD               	goto	l12921
 16279  016B44                     u12220:
 16280                           
 16281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 16282                           ;stkvar	_w @ sp[(-14)+10]
 16283  016B44  0EFC               	movlw	-4
 16284  016B46  006F FF8F FFE6     	movff	plusw1,postinc1
 16285  016B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 16286                           
 16287                           ;stkvar	_i @ sp[(-16)+8]
 16288  016B52  0E97               	movlw	low _dbuf
 16289  016B54  6E0B               	movwf	(btemp+10)^0,c
 16290  016B56  0E02               	movlw	high _dbuf
 16291  016B58  6E0C               	movwf	(btemp+11)^0,c
 16292  016B5A  0EF8               	movlw	-8
 16293  016B5C  50E3               	movf	plusw1,w,c
 16294  016B5E  260B               	addwf	(btemp+10)^0,f,c
 16295  016B60  0EF9               	movlw	-7
 16296  016B62  50E3               	movf	plusw1,w,c
 16297  016B64  220C               	addwfc	(btemp+11)^0,f,c
 16298  016B66  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16299  016B6C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16300                           
 16301                           ;stkvar	_fp @ sp[(-18)+-2]
 16302  016B72  0EEC               	movlw	-20
 16303  016B74  006F FF8F FFE6     	movff	plusw1,postinc1
 16304  016B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 16305  016B80  EC9A  F0D0         	call	_pad	;wreg free
 16306                           
 16307                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16308  016B84  0EE8               	movlw	232
 16309  016B86  26E1               	addwf	fsr1l,f,c
 16310  016B88  0EFF               	movlw	255
 16311  016B8A  22E2               	addwfc	fsr1h,f,c
 16312  016B8C  0012               	return		;funcret
 16313  016B8E                     __end_of_utoa:
 16314                           	opt callstack 0
 16315                           
 16316 ;; *************** function ___lomod *****************
 16317 ;; Defined at:
 16318 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;  dividend        8  [STACK] unsigned long long 
 16321 ;;  divisor         8  [STACK] unsigned long long 
 16322 ;; Auto vars:     Size  Location     Type
 16323 ;;  counter         1  [STACK] unsigned char 
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  8  [STACK] unsigned long long 
 16326 ;; Registers used:
 16327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16328 ;; Tracked objects:
 16329 ;;		On entry : 0/2
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16337 ;;Total ram usage:        0 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; Hardware stack levels required when called:   15
 16340 ;; This function calls:
 16341 ;;		Nothing
 16342 ;; This function is called by:
 16343 ;;		_utoa
 16344 ;; This function uses a reentrant model
 16345 ;;
 16346                           
 16347                           	psect	text61
 16348  019A3A                     __ptext61:
 16349                           	opt callstack 0
 16350  019A3A                     ___lomod:
 16351                           	opt callstack 0
 16352                           
 16353                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16354  019A3A  52E6               	movf	postinc1,f,c
 16355                           
 16356                           ;stkvar	_divisor @ sp[(-1)+-16]
 16357                           
 16358                           ;incstack = 0
 16359 ;; hardware stack exceeded
 16360  019A3C  0EEF               	movlw	-17
 16361  019A3E  50E3               	movf	plusw1,w,c
 16362  019A40  E116               	bnz	u7600
 16363  019A42  0EF0               	movlw	-16
 16364  019A44  50E3               	movf	plusw1,w,c
 16365  019A46  E113               	bnz	u7600
 16366  019A48  0EF1               	movlw	-15
 16367  019A4A  50E3               	movf	plusw1,w,c
 16368  019A4C  E110               	bnz	u7600
 16369  019A4E  0EF2               	movlw	-14
 16370  019A50  50E3               	movf	plusw1,w,c
 16371  019A52  E10D               	bnz	u7600
 16372  019A54  0EF3               	movlw	-13
 16373  019A56  50E3               	movf	plusw1,w,c
 16374  019A58  E10A               	bnz	u7600
 16375  019A5A  0EF4               	movlw	-12
 16376  019A5C  50E3               	movf	plusw1,w,c
 16377  019A5E  E107               	bnz	u7600
 16378  019A60  0EF5               	movlw	-11
 16379  019A62  50E3               	movf	plusw1,w,c
 16380  019A64  E104               	bnz	u7600
 16381  019A66  0EF6               	movlw	-10
 16382  019A68  50E3               	movf	plusw1,w,c
 16383  019A6A  B4D8               	btfsc	status,2,c
 16384  019A6C  D075               	goto	u7630
 16385  019A6E                     u7600:
 16386                           
 16387                           ;stkvar	_counter @ sp[(-1)+0]
 16388  019A6E  0EFF               	movlw	-1
 16389  019A70  6AE3               	clrf	plusw1,c
 16390  019A72  D012               	goto	L17
 16391  019A74                     l9049:
 16392                           
 16393                           ;stkvar	_divisor @ sp[(-1)+-16]
 16394  019A74  90D8               	bcf	status,0,c
 16395  019A76  0EEF               	movlw	-17
 16396  019A78  36E3               	rlcf	plusw1,f,c
 16397  019A7A  0EF0               	movlw	-16
 16398  019A7C  36E3               	rlcf	plusw1,f,c
 16399  019A7E  0EF1               	movlw	-15
 16400  019A80  36E3               	rlcf	plusw1,f,c
 16401  019A82  0EF2               	movlw	-14
 16402  019A84  36E3               	rlcf	plusw1,f,c
 16403  019A86  0EF3               	movlw	-13
 16404  019A88  36E3               	rlcf	plusw1,f,c
 16405  019A8A  0EF4               	movlw	-12
 16406  019A8C  36E3               	rlcf	plusw1,f,c
 16407  019A8E  0EF5               	movlw	-11
 16408  019A90  36E3               	rlcf	plusw1,f,c
 16409  019A92  0EF6               	movlw	-10
 16410  019A94  36E3               	rlcf	plusw1,f,c
 16411                           
 16412                           ;stkvar	_counter @ sp[(-1)+0]
 16413  019A96  0EFF               	movlw	-1
 16414  019A98                     L17:
 16415  019A98  2AE3               	incf	plusw1,f,c
 16416                           
 16417                           ;stkvar	_divisor @ sp[(-1)+-16]
 16418  019A9A  0EF6               	movlw	-10
 16419  019A9C  AEE3               	btfss	plusw1,7,c
 16420  019A9E  D7EA               	goto	l9049
 16421  019AA0                     u7610:
 16422                           
 16423                           ;stkvar	_divisor @ sp[(-1)+-16]
 16424                           ;stkvar	_dividend @ sp[(-1)+-8]
 16425  019AA0  50E1               	movf	fsr1l,w,c
 16426  019AA2  0FF7               	addlw	-9
 16427  019AA4  6ED9               	movwf	fsr2l,c
 16428  019AA6  50E2               	movf	fsr1h,w,c
 16429  019AA8  6EDA               	movwf	fsr2h,c
 16430  019AAA  0EFF               	movlw	255
 16431  019AAC  22DA               	addwfc	fsr2h,f,c
 16432  019AAE  0EEF               	movlw	-17
 16433  019AB0  50E3               	movf	plusw1,w,c
 16434  019AB2  5CDE               	subwf	postinc2,w,c
 16435  019AB4  0EF0               	movlw	-16
 16436  019AB6  50E3               	movf	plusw1,w,c
 16437  019AB8  58DE               	subwfb	postinc2,w,c
 16438  019ABA  0EF1               	movlw	-15
 16439  019ABC  50E3               	movf	plusw1,w,c
 16440  019ABE  58DE               	subwfb	postinc2,w,c
 16441  019AC0  0EF2               	movlw	-14
 16442  019AC2  50E3               	movf	plusw1,w,c
 16443  019AC4  58DE               	subwfb	postinc2,w,c
 16444  019AC6  0EF3               	movlw	-13
 16445  019AC8  50E3               	movf	plusw1,w,c
 16446  019ACA  58DE               	subwfb	postinc2,w,c
 16447  019ACC  0EF4               	movlw	-12
 16448  019ACE  50E3               	movf	plusw1,w,c
 16449  019AD0  58DE               	subwfb	postinc2,w,c
 16450  019AD2  0EF5               	movlw	-11
 16451  019AD4  50E3               	movf	plusw1,w,c
 16452  019AD6  58DE               	subwfb	postinc2,w,c
 16453  019AD8  0EF6               	movlw	-10
 16454  019ADA  50E3               	movf	plusw1,w,c
 16455  019ADC  58DE               	subwfb	postinc2,w,c
 16456  019ADE  A0D8               	btfss	status,0,c
 16457  019AE0  D01F               	goto	l9057
 16458                           
 16459                           ;stkvar	_divisor @ sp[(-1)+-16]
 16460                           ;stkvar	_dividend @ sp[(-1)+-8]
 16461  019AE2  50E1               	movf	fsr1l,w,c
 16462  019AE4  0FF7               	addlw	-9
 16463  019AE6  6ED9               	movwf	fsr2l,c
 16464  019AE8  50E2               	movf	fsr1h,w,c
 16465  019AEA  6EDA               	movwf	fsr2h,c
 16466  019AEC  0EFF               	movlw	255
 16467  019AEE  22DA               	addwfc	fsr2h,f,c
 16468  019AF0  0EEF               	movlw	-17
 16469  019AF2  50E3               	movf	plusw1,w,c
 16470  019AF4  5EDE               	subwf	postinc2,f,c
 16471  019AF6  0EF0               	movlw	-16
 16472  019AF8  50E3               	movf	plusw1,w,c
 16473  019AFA  5ADE               	subwfb	postinc2,f,c
 16474  019AFC  0EF1               	movlw	-15
 16475  019AFE  50E3               	movf	plusw1,w,c
 16476  019B00  5ADE               	subwfb	postinc2,f,c
 16477  019B02  0EF2               	movlw	-14
 16478  019B04  50E3               	movf	plusw1,w,c
 16479  019B06  5ADE               	subwfb	postinc2,f,c
 16480  019B08  0EF3               	movlw	-13
 16481  019B0A  50E3               	movf	plusw1,w,c
 16482  019B0C  5ADE               	subwfb	postinc2,f,c
 16483  019B0E  0EF4               	movlw	-12
 16484  019B10  50E3               	movf	plusw1,w,c
 16485  019B12  5ADE               	subwfb	postinc2,f,c
 16486  019B14  0EF5               	movlw	-11
 16487  019B16  50E3               	movf	plusw1,w,c
 16488  019B18  5ADE               	subwfb	postinc2,f,c
 16489  019B1A  0EF6               	movlw	-10
 16490  019B1C  50E3               	movf	plusw1,w,c
 16491  019B1E  5ADE               	subwfb	postinc2,f,c
 16492  019B20                     l9057:
 16493                           
 16494                           ;stkvar	_divisor @ sp[(-1)+-16]
 16495  019B20  90D8               	bcf	status,0,c
 16496  019B22  0EF6               	movlw	-10
 16497  019B24  32E3               	rrcf	plusw1,f,c
 16498  019B26  0EF5               	movlw	-11
 16499  019B28  32E3               	rrcf	plusw1,f,c
 16500  019B2A  0EF4               	movlw	-12
 16501  019B2C  32E3               	rrcf	plusw1,f,c
 16502  019B2E  0EF3               	movlw	-13
 16503  019B30  32E3               	rrcf	plusw1,f,c
 16504  019B32  0EF2               	movlw	-14
 16505  019B34  32E3               	rrcf	plusw1,f,c
 16506  019B36  0EF1               	movlw	-15
 16507  019B38  32E3               	rrcf	plusw1,f,c
 16508  019B3A  0EF0               	movlw	-16
 16509  019B3C  32E3               	rrcf	plusw1,f,c
 16510  019B3E  0EEF               	movlw	-17
 16511  019B40  32E3               	rrcf	plusw1,f,c
 16512                           
 16513                           ;stkvar	_counter @ sp[(-1)+0]
 16514  019B42  0EFF               	movlw	-1
 16515  019B44  50E3               	movf	plusw1,w,c
 16516  019B46  6E01               	movwf	btemp^0,c
 16517  019B48  0E01               	movlw	1
 16518  019B4A  5E01               	subwf	btemp^0,f,c
 16519  019B4C  0EFF               	movlw	-1
 16520  019B4E  0060  F007  FFE3   	movff	btemp,plusw1
 16521  019B54  A4D8               	btfss	status,2,c
 16522  019B56  D7A4               	goto	u7610
 16523  019B58                     u7630:
 16524                           
 16525                           ;stkvar	_dividend @ sp[(-1)+-8]
 16526  019B58  0EF7               	movlw	247
 16527  019B5A  24E1               	addwf	fsr1l,w,c
 16528  019B5C  6ED9               	movwf	fsr2l,c
 16529  019B5E  0EFF               	movlw	255
 16530  019B60  20E2               	addwfc	fsr1h,w,c
 16531  019B62  6EDA               	movwf	fsr2h,c
 16532                           
 16533                           ;stkvar	?___lomod @ sp[(-1)+-8]
 16534  019B64  0E08               	movlw	8
 16535  019B66  6E01               	movwf	btemp^0,c
 16536  019B68  0EF7               	movlw	-9
 16537  019B6A                     us764999:
 16538  019B6A  006F FF7B FFE3     	movff	postinc2,plusw1
 16539  019B70  28E8               	incf	wreg,w,c
 16540  019B72  2E01               	decfsz	btemp^0,f,c
 16541  019B74  D7FA               	bra	us764999
 16542                           
 16543                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16544  019B76  52E5               	movf	postdec1,f,c
 16545  019B78  0012               	return		;funcret
 16546  019B7A                     __end_of___lomod:
 16547                           	opt callstack 0
 16548                           
 16549 ;; *************** function ___lodiv *****************
 16550 ;; Defined at:
 16551 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 16552 ;; Parameters:    Size  Location     Type
 16553 ;;  dividend        8  [STACK] unsigned long long 
 16554 ;;  divisor         8  [STACK] unsigned long long 
 16555 ;; Auto vars:     Size  Location     Type
 16556 ;;  quotient        8  [STACK] unsigned long long 
 16557 ;;  counter         1  [STACK] unsigned char 
 16558 ;; Return value:  Size  Location     Type
 16559 ;;                  8  [STACK] unsigned long long 
 16560 ;; Registers used:
 16561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16562 ;; Tracked objects:
 16563 ;;		On entry : 0/2
 16564 ;;		On exit  : 0/0
 16565 ;;		Unchanged: 0/0
 16566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16571 ;;Total ram usage:        0 bytes
 16572 ;; Hardware stack levels used:    1
 16573 ;; Hardware stack levels required when called:   15
 16574 ;; This function calls:
 16575 ;;		Nothing
 16576 ;; This function is called by:
 16577 ;;		_utoa
 16578 ;; This function uses a reentrant model
 16579 ;;
 16580                           
 16581                           	psect	text62
 16582  0191F2                     __ptext62:
 16583                           	opt callstack 0
 16584  0191F2                     ___lodiv:
 16585                           	opt callstack 0
 16586                           
 16587                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16588  0191F2  0E09               	movlw	9
 16589  0191F4  26E1               	addwf	fsr1l,f,c
 16590  0191F6  0E00               	movlw	0
 16591  0191F8  22E2               	addwfc	fsr1h,f,c
 16592                           
 16593                           ;stkvar	_quotient @ sp[(-9)+0]
 16594                           
 16595                           ;incstack = 0
 16596 ;; hardware stack exceeded
 16597  0191FA  0E07               	movlw	7
 16598  0191FC  6E01               	movwf	btemp^0,c
 16599  0191FE  0EF7               	movlw	-9
 16600  019200                     u7541:
 16601  019200  6AE3               	clrf	plusw1,c
 16602  019202  2AE8               	incf	wreg,f,c
 16603  019204  0601               	decf	btemp^0,f,c
 16604  019206  E2FC               	bc	u7541
 16605                           
 16606                           ;stkvar	_divisor @ sp[(-9)+-16]
 16607  019208  0EE7               	movlw	-25
 16608  01920A  50E3               	movf	plusw1,w,c
 16609  01920C  E116               	bnz	u7550
 16610  01920E  0EE8               	movlw	-24
 16611  019210  50E3               	movf	plusw1,w,c
 16612  019212  E113               	bnz	u7550
 16613  019214  0EE9               	movlw	-23
 16614  019216  50E3               	movf	plusw1,w,c
 16615  019218  E110               	bnz	u7550
 16616  01921A  0EEA               	movlw	-22
 16617  01921C  50E3               	movf	plusw1,w,c
 16618  01921E  E10D               	bnz	u7550
 16619  019220  0EEB               	movlw	-21
 16620  019222  50E3               	movf	plusw1,w,c
 16621  019224  E10A               	bnz	u7550
 16622  019226  0EEC               	movlw	-20
 16623  019228  50E3               	movf	plusw1,w,c
 16624  01922A  E107               	bnz	u7550
 16625  01922C  0EED               	movlw	-19
 16626  01922E  50E3               	movf	plusw1,w,c
 16627  019230  E104               	bnz	u7550
 16628  019232  0EEE               	movlw	-18
 16629  019234  50E3               	movf	plusw1,w,c
 16630  019236  B4D8               	btfsc	status,2,c
 16631  019238  D088               	goto	u7580
 16632  01923A                     u7550:
 16633                           
 16634                           ;stkvar	_counter @ sp[(-9)+8]
 16635  01923A  0EFF               	movlw	-1
 16636  01923C  6AE3               	clrf	plusw1,c
 16637  01923E  D012               	goto	L18
 16638  019240                     l9025:
 16639                           
 16640                           ;stkvar	_divisor @ sp[(-9)+-16]
 16641  019240  90D8               	bcf	status,0,c
 16642  019242  0EE7               	movlw	-25
 16643  019244  36E3               	rlcf	plusw1,f,c
 16644  019246  0EE8               	movlw	-24
 16645  019248  36E3               	rlcf	plusw1,f,c
 16646  01924A  0EE9               	movlw	-23
 16647  01924C  36E3               	rlcf	plusw1,f,c
 16648  01924E  0EEA               	movlw	-22
 16649  019250  36E3               	rlcf	plusw1,f,c
 16650  019252  0EEB               	movlw	-21
 16651  019254  36E3               	rlcf	plusw1,f,c
 16652  019256  0EEC               	movlw	-20
 16653  019258  36E3               	rlcf	plusw1,f,c
 16654  01925A  0EED               	movlw	-19
 16655  01925C  36E3               	rlcf	plusw1,f,c
 16656  01925E  0EEE               	movlw	-18
 16657  019260  36E3               	rlcf	plusw1,f,c
 16658                           
 16659                           ;stkvar	_counter @ sp[(-9)+8]
 16660  019262  0EFF               	movlw	-1
 16661  019264                     L18:
 16662  019264  2AE3               	incf	plusw1,f,c
 16663                           
 16664                           ;stkvar	_divisor @ sp[(-9)+-16]
 16665  019266  0EEE               	movlw	-18
 16666  019268  AEE3               	btfss	plusw1,7,c
 16667  01926A  D7EA               	goto	l9025
 16668  01926C                     u7560:
 16669                           
 16670                           ;stkvar	_quotient @ sp[(-9)+0]
 16671  01926C  90D8               	bcf	status,0,c
 16672  01926E  0EF7               	movlw	-9
 16673  019270  36E3               	rlcf	plusw1,f,c
 16674  019272  0EF8               	movlw	-8
 16675  019274  36E3               	rlcf	plusw1,f,c
 16676  019276  0EF9               	movlw	-7
 16677  019278  36E3               	rlcf	plusw1,f,c
 16678  01927A  0EFA               	movlw	-6
 16679  01927C  36E3               	rlcf	plusw1,f,c
 16680  01927E  0EFB               	movlw	-5
 16681  019280  36E3               	rlcf	plusw1,f,c
 16682  019282  0EFC               	movlw	-4
 16683  019284  36E3               	rlcf	plusw1,f,c
 16684  019286  0EFD               	movlw	-3
 16685  019288  36E3               	rlcf	plusw1,f,c
 16686  01928A  0EFE               	movlw	-2
 16687  01928C  36E3               	rlcf	plusw1,f,c
 16688                           
 16689                           ;stkvar	_divisor @ sp[(-9)+-16]
 16690                           ;stkvar	_dividend @ sp[(-9)+-8]
 16691  01928E  50E1               	movf	fsr1l,w,c
 16692  019290  0FEF               	addlw	-17
 16693  019292  6ED9               	movwf	fsr2l,c
 16694  019294  50E2               	movf	fsr1h,w,c
 16695  019296  6EDA               	movwf	fsr2h,c
 16696  019298  0EFF               	movlw	255
 16697  01929A  22DA               	addwfc	fsr2h,f,c
 16698  01929C  0EE7               	movlw	-25
 16699  01929E  50E3               	movf	plusw1,w,c
 16700  0192A0  5CDE               	subwf	postinc2,w,c
 16701  0192A2  0EE8               	movlw	-24
 16702  0192A4  50E3               	movf	plusw1,w,c
 16703  0192A6  58DE               	subwfb	postinc2,w,c
 16704  0192A8  0EE9               	movlw	-23
 16705  0192AA  50E3               	movf	plusw1,w,c
 16706  0192AC  58DE               	subwfb	postinc2,w,c
 16707  0192AE  0EEA               	movlw	-22
 16708  0192B0  50E3               	movf	plusw1,w,c
 16709  0192B2  58DE               	subwfb	postinc2,w,c
 16710  0192B4  0EEB               	movlw	-21
 16711  0192B6  50E3               	movf	plusw1,w,c
 16712  0192B8  58DE               	subwfb	postinc2,w,c
 16713  0192BA  0EEC               	movlw	-20
 16714  0192BC  50E3               	movf	plusw1,w,c
 16715  0192BE  58DE               	subwfb	postinc2,w,c
 16716  0192C0  0EED               	movlw	-19
 16717  0192C2  50E3               	movf	plusw1,w,c
 16718  0192C4  58DE               	subwfb	postinc2,w,c
 16719  0192C6  0EEE               	movlw	-18
 16720  0192C8  50E3               	movf	plusw1,w,c
 16721  0192CA  58DE               	subwfb	postinc2,w,c
 16722  0192CC  A0D8               	btfss	status,0,c
 16723  0192CE  D021               	goto	l9037
 16724                           
 16725                           ;stkvar	_divisor @ sp[(-9)+-16]
 16726                           ;stkvar	_dividend @ sp[(-9)+-8]
 16727  0192D0  50E1               	movf	fsr1l,w,c
 16728  0192D2  0FEF               	addlw	-17
 16729  0192D4  6ED9               	movwf	fsr2l,c
 16730  0192D6  50E2               	movf	fsr1h,w,c
 16731  0192D8  6EDA               	movwf	fsr2h,c
 16732  0192DA  0EFF               	movlw	255
 16733  0192DC  22DA               	addwfc	fsr2h,f,c
 16734  0192DE  0EE7               	movlw	-25
 16735  0192E0  50E3               	movf	plusw1,w,c
 16736  0192E2  5EDE               	subwf	postinc2,f,c
 16737  0192E4  0EE8               	movlw	-24
 16738  0192E6  50E3               	movf	plusw1,w,c
 16739  0192E8  5ADE               	subwfb	postinc2,f,c
 16740  0192EA  0EE9               	movlw	-23
 16741  0192EC  50E3               	movf	plusw1,w,c
 16742  0192EE  5ADE               	subwfb	postinc2,f,c
 16743  0192F0  0EEA               	movlw	-22
 16744  0192F2  50E3               	movf	plusw1,w,c
 16745  0192F4  5ADE               	subwfb	postinc2,f,c
 16746  0192F6  0EEB               	movlw	-21
 16747  0192F8  50E3               	movf	plusw1,w,c
 16748  0192FA  5ADE               	subwfb	postinc2,f,c
 16749  0192FC  0EEC               	movlw	-20
 16750  0192FE  50E3               	movf	plusw1,w,c
 16751  019300  5ADE               	subwfb	postinc2,f,c
 16752  019302  0EED               	movlw	-19
 16753  019304  50E3               	movf	plusw1,w,c
 16754  019306  5ADE               	subwfb	postinc2,f,c
 16755  019308  0EEE               	movlw	-18
 16756  01930A  50E3               	movf	plusw1,w,c
 16757  01930C  5ADE               	subwfb	postinc2,f,c
 16758                           
 16759                           ;stkvar	_quotient @ sp[(-9)+0]
 16760  01930E  0EF7               	movlw	-9
 16761  019310  80E3               	bsf	plusw1,0,c
 16762  019312                     l9037:
 16763                           
 16764                           ;stkvar	_divisor @ sp[(-9)+-16]
 16765  019312  90D8               	bcf	status,0,c
 16766  019314  0EEE               	movlw	-18
 16767  019316  32E3               	rrcf	plusw1,f,c
 16768  019318  0EED               	movlw	-19
 16769  01931A  32E3               	rrcf	plusw1,f,c
 16770  01931C  0EEC               	movlw	-20
 16771  01931E  32E3               	rrcf	plusw1,f,c
 16772  019320  0EEB               	movlw	-21
 16773  019322  32E3               	rrcf	plusw1,f,c
 16774  019324  0EEA               	movlw	-22
 16775  019326  32E3               	rrcf	plusw1,f,c
 16776  019328  0EE9               	movlw	-23
 16777  01932A  32E3               	rrcf	plusw1,f,c
 16778  01932C  0EE8               	movlw	-24
 16779  01932E  32E3               	rrcf	plusw1,f,c
 16780  019330  0EE7               	movlw	-25
 16781  019332  32E3               	rrcf	plusw1,f,c
 16782                           
 16783                           ;stkvar	_counter @ sp[(-9)+8]
 16784  019334  0EFF               	movlw	-1
 16785  019336  50E3               	movf	plusw1,w,c
 16786  019338  6E01               	movwf	btemp^0,c
 16787  01933A  0E01               	movlw	1
 16788  01933C  5E01               	subwf	btemp^0,f,c
 16789  01933E  0EFF               	movlw	-1
 16790  019340  0060  F007  FFE3   	movff	btemp,plusw1
 16791  019346  A4D8               	btfss	status,2,c
 16792  019348  D791               	goto	u7560
 16793  01934A                     u7580:
 16794                           
 16795                           ;stkvar	_quotient @ sp[(-9)+0]
 16796  01934A  0EF7               	movlw	247
 16797  01934C  24E1               	addwf	fsr1l,w,c
 16798  01934E  6ED9               	movwf	fsr2l,c
 16799  019350  0EFF               	movlw	255
 16800  019352  20E2               	addwfc	fsr1h,w,c
 16801  019354  6EDA               	movwf	fsr2h,c
 16802                           
 16803                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 16804  019356  0E08               	movlw	8
 16805  019358  6E01               	movwf	btemp^0,c
 16806  01935A  0EEF               	movlw	-17
 16807  01935C                     us759999:
 16808  01935C  006F FF7B FFE3     	movff	postinc2,plusw1
 16809  019362  28E8               	incf	wreg,w,c
 16810  019364  2E01               	decfsz	btemp^0,f,c
 16811  019366  D7FA               	bra	us759999
 16812                           
 16813                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16814  019368  0EF7               	movlw	247
 16815  01936A  26E1               	addwf	fsr1l,f,c
 16816  01936C  0EFF               	movlw	255
 16817  01936E  22E2               	addwfc	fsr1h,f,c
 16818  019370  0012               	return		;funcret
 16819  019372                     __end_of___lodiv:
 16820                           	opt callstack 0
 16821                           
 16822 ;; *************** function _strncmp *****************
 16823 ;; Defined at:
 16824 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;  _l              2  [STACK] PTR const unsigned char 
 16827 ;;		 -> ct(3), STR_75(127), STR_73(3), STR_72(3), 
 16828 ;;		 -> STR_71(19), STR_70(19), STR_69(19), STR_68(19), 
 16829 ;;		 -> STR_67(19), STR_66(19), STR_65(24), STR_64(15), 
 16830 ;;		 -> STR_63(15), STR_62(15), STR_61(10), STR_60(10), 
 16831 ;;		 -> STR_59(19), STR_58(19), STR_55(3), STR_54(3), 
 16832 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 16833 ;;		 -> STR_49(21), STR_48(21), STR_47(20), STR_46(20), 
 16834 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 16835 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 16836 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 16837 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 16838 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 16839 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 16840 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 16841 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 16842 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 16843 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 16844 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 16845 ;;  _r              2  [STACK] PTR const unsigned char 
 16846 ;;		 -> STR_109(3), STR_105(3), STR_100(3), STR_95(3), 
 16847 ;;		 -> STR_90(3), STR_86(3), 
 16848 ;;  n               2  [STACK] unsigned int 
 16849 ;; Auto vars:     Size  Location     Type
 16850 ;;  r               2  [STACK] PTR const unsigned char 
 16851 ;;		 -> STR_109(3), STR_105(3), STR_100(3), STR_95(3), 
 16852 ;;		 -> STR_90(3), STR_86(3), 
 16853 ;;  l               2  [STACK] PTR const unsigned char 
 16854 ;;		 -> ct(3), STR_75(127), STR_73(3), STR_72(3), 
 16855 ;;		 -> STR_71(19), STR_70(19), STR_69(19), STR_68(19), 
 16856 ;;		 -> STR_67(19), STR_66(19), STR_65(24), STR_64(15), 
 16857 ;;		 -> STR_63(15), STR_62(15), STR_61(10), STR_60(10), 
 16858 ;;		 -> STR_59(19), STR_58(19), STR_55(3), STR_54(3), 
 16859 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 16860 ;;		 -> STR_49(21), STR_48(21), STR_47(20), STR_46(20), 
 16861 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 16862 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 16863 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 16864 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 16865 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 16866 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 16867 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 16868 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 16869 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 16870 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 16871 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 16872 ;; Return value:  Size  Location     Type
 16873 ;;                  2  [STACK] int 
 16874 ;; Registers used:
 16875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 16876 ;; Tracked objects:
 16877 ;;		On entry : 0/0
 16878 ;;		On exit  : 0/0
 16879 ;;		Unchanged: 0/0
 16880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16885 ;;Total ram usage:        0 bytes
 16886 ;; Hardware stack levels used:    1
 16887 ;; Hardware stack levels required when called:   15
 16888 ;; This function calls:
 16889 ;;		Nothing
 16890 ;; This function is called by:
 16891 ;;		_vfpfcnvrt
 16892 ;; This function uses a reentrant model
 16893 ;;
 16894                           
 16895                           	psect	text63
 16896  018328                     __ptext63:
 16897                           	opt callstack 0
 16898  018328                     _strncmp:
 16899                           	opt callstack 0
 16900                           
 16901                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16902  018328  52E6               	movf	postinc1,f,c
 16903  01832A  52E6               	movf	postinc1,f,c
 16904  01832C  52E6               	movf	postinc1,f,c
 16905  01832E  52E6               	movf	postinc1,f,c
 16906                           
 16907                           ;stkvar	__l @ sp[(-4)+-2]
 16908                           
 16909                           ;incstack = 0
 16910 ;; hardware stack exceeded
 16911  018330  0EFA               	movlw	-6
 16912  018332  006F FF8C  F00B    	movff	plusw1,btemp+10
 16913  018338  0EFB               	movlw	-5
 16914  01833A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16915                           
 16916                           ;stkvar	_l @ sp[(-4)+2]
 16917  018340  0EFF               	movlw	-1
 16918  018342  0060  F033  FFE3   	movff	btemp+11,plusw1
 16919  018348  0EFE               	movlw	-2
 16920  01834A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16921                           
 16922                           ;stkvar	__r @ sp[(-4)+-4]
 16923  018350  0EF8               	movlw	-8
 16924  018352  006F FF8C  F00B    	movff	plusw1,btemp+10
 16925  018358  0EF9               	movlw	-7
 16926  01835A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16927                           
 16928                           ;stkvar	_r @ sp[(-4)+0]
 16929  018360  0EFD               	movlw	-3
 16930  018362  0060  F033  FFE3   	movff	btemp+11,plusw1
 16931  018368  0EFC               	movlw	-4
 16932  01836A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16933                           
 16934                           ;stkvar	_n @ sp[(-4)+-6]
 16935  018370  0EF6               	movlw	-10
 16936  018372  006F FF8C  F001    	movff	plusw1,btemp
 16937  018378  0E01               	movlw	1
 16938  01837A  5E01               	subwf	btemp^0,f,c
 16939  01837C  0EF6               	movlw	-10
 16940  01837E  0060  F007  FFE3   	movff	btemp,plusw1
 16941  018384  0EF7               	movlw	-9
 16942  018386  006F FF8C  F001    	movff	plusw1,btemp
 16943  01838C  0E00               	movlw	0
 16944  01838E  5A01               	subwfb	btemp^0,f,c
 16945  018390  0EF7               	movlw	-9
 16946  018392  0060  F007  FFE3   	movff	btemp,plusw1
 16947  018398  0EF6               	movlw	-10
 16948  01839A  28E3               	incf	plusw1,w,c
 16949  01839C  E13F               	bnz	l9707
 16950  01839E  0EF7               	movlw	-9
 16951  0183A0  28E3               	incf	plusw1,w,c
 16952  0183A2  A4D8               	btfss	status,2,c
 16953  0183A4  D03B               	goto	l9707
 16954  0183A6  0E00               	movlw	0
 16955  0183A8  6E01               	movwf	btemp^0,c
 16956  0183AA  0E00               	movlw	0
 16957  0183AC  6E02               	movwf	(btemp+1)^0,c
 16958  0183AE  D0C7               	goto	l3572
 16959  0183B0                     l9705:
 16960                           
 16961                           ;stkvar	_l @ sp[(-4)+2]
 16962  0183B0  0EFE               	movlw	-2
 16963  0183B2  50E3               	movf	plusw1,w,c
 16964  0183B4  0F01               	addlw	1
 16965  0183B6  6E01               	movwf	btemp^0,c
 16966  0183B8  0EFE               	movlw	-2
 16967  0183BA  0060  F007  FFE3   	movff	btemp,plusw1
 16968  0183C0  6A01               	clrf	btemp^0,c
 16969  0183C2  0EFF               	movlw	-1
 16970  0183C4  50E3               	movf	plusw1,w,c
 16971  0183C6  2001               	addwfc	btemp^0,w,c
 16972  0183C8  6E01               	movwf	btemp^0,c
 16973  0183CA  0EFF               	movlw	-1
 16974  0183CC  0060  F007  FFE3   	movff	btemp,plusw1
 16975                           
 16976                           ;stkvar	_r @ sp[(-4)+0]
 16977  0183D2  0EFC               	movlw	-4
 16978  0183D4  50E3               	movf	plusw1,w,c
 16979  0183D6  0F01               	addlw	1
 16980  0183D8  6E01               	movwf	btemp^0,c
 16981  0183DA  0EFC               	movlw	-4
 16982  0183DC  0060  F007  FFE3   	movff	btemp,plusw1
 16983  0183E2  6A01               	clrf	btemp^0,c
 16984  0183E4  0EFD               	movlw	-3
 16985  0183E6  50E3               	movf	plusw1,w,c
 16986  0183E8  2001               	addwfc	btemp^0,w,c
 16987  0183EA  6E01               	movwf	btemp^0,c
 16988  0183EC  0EFD               	movlw	-3
 16989  0183EE  0060  F007  FFE3   	movff	btemp,plusw1
 16990                           
 16991                           ;stkvar	_n @ sp[(-4)+-6]
 16992  0183F4  0EF6               	movlw	-10
 16993  0183F6  006F FF8C  F001    	movff	plusw1,btemp
 16994  0183FC  0E01               	movlw	1
 16995  0183FE  5E01               	subwf	btemp^0,f,c
 16996  018400  0EF6               	movlw	-10
 16997  018402  0060  F007  FFE3   	movff	btemp,plusw1
 16998  018408  0EF7               	movlw	-9
 16999  01840A  006F FF8C  F001    	movff	plusw1,btemp
 17000  018410  0E00               	movlw	0
 17001  018412  5A01               	subwfb	btemp^0,f,c
 17002  018414  0EF7               	movlw	-9
 17003  018416  0060  F007  FFE3   	movff	btemp,plusw1
 17004  01841C                     l9707:
 17005                           
 17006                           ;stkvar	_l @ sp[(-4)+2]
 17007  01841C  0EFE               	movlw	-2
 17008  01841E  006F FF8F FFF6     	movff	plusw1,tblptrl
 17009  018424  0EFF               	movlw	-1
 17010  018426  006F FF8F FFF7     	movff	plusw1,tblptrh
 17011  01842C  0E00               	movlw	low (__mediumconst shr (0+16))
 17012  01842E  6EF8               	movwf	tblptru,c
 17013  018430  0E1F               	movlw	(high __ramtop+-1)
 17014  018432  64F7               	cpfsgt	tblptrh,c
 17015  018434  D003               	bra	u8837
 17016  018436  0008               	tblrd		*
 17017  018438  50F5               	movf	tablat,w,c
 17018  01843A  D007               	bra	u8830
 17019  01843C                     u8837:
 17020  01843C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17021  018442  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17022  018448  50EF               	movf	indf0,w,c
 17023  01844A                     u8830:
 17024  01844A  0900               	iorlw	0
 17025  01844C  B4D8               	btfsc	status,2,c
 17026  01844E  D04A               	goto	u8870
 17027                           
 17028                           ;stkvar	_r @ sp[(-4)+0]
 17029  018450  50E1               	movf	fsr1l,w,c
 17030  018452  0FFC               	addlw	-4
 17031  018454  6ED9               	movwf	fsr2l,c
 17032  018456  50E2               	movf	fsr1h,w,c
 17033  018458  6EDA               	movwf	fsr2h,c
 17034  01845A  0EFF               	movlw	255
 17035  01845C  22DA               	addwfc	fsr2h,f,c
 17036  01845E  006F FF7B FFF6     	movff	postinc2,tblptrl
 17037  018464  006F FF77 FFF7     	movff	postdec2,tblptrh
 17038  01846A                     	if	0	;tblptru may be non-zero
 17039  01846A                     	endif
 17040  01846A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17041  01846A  0E00               	movlw	low (__mediumconst shr (0+16))
 17042  01846C  6EF8               	movwf	tblptru,c
 17043  01846E                     	endif
 17044  01846E  0008               	tblrd		*
 17045  018470  50F5               	movf	tablat,w,c
 17046  018472  0900               	iorlw	0
 17047  018474  B4D8               	btfsc	status,2,c
 17048  018476  D036               	goto	u8870
 17049                           
 17050                           ;stkvar	_n @ sp[(-4)+-6]
 17051  018478  0EF6               	movlw	-10
 17052  01847A  006F FF8C  F001    	movff	plusw1,btemp
 17053  018480  0EF7               	movlw	-9
 17054  018482  50E3               	movf	plusw1,w,c
 17055  018484  1001               	iorwf	btemp^0,w,c
 17056  018486  B4D8               	btfsc	status,2,c
 17057  018488  D02D               	goto	u8870
 17058                           
 17059                           ;stkvar	_r @ sp[(-4)+0]
 17060  01848A  50E1               	movf	fsr1l,w,c
 17061  01848C  0FFC               	addlw	-4
 17062  01848E  6ED9               	movwf	fsr2l,c
 17063  018490  50E2               	movf	fsr1h,w,c
 17064  018492  6EDA               	movwf	fsr2h,c
 17065  018494  0EFF               	movlw	255
 17066  018496  22DA               	addwfc	fsr2h,f,c
 17067  018498  006F FF7B FFF6     	movff	postinc2,tblptrl
 17068  01849E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17069  0184A4                     	if	0	;tblptru may be non-zero
 17070  0184A4                     	endif
 17071  0184A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17072  0184A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17073  0184A6  6EF8               	movwf	tblptru,c
 17074  0184A8                     	endif
 17075  0184A8  0008               	tblrd		*
 17076  0184AA  006F FFD4  F00C    	movff	tablat,btemp+11
 17077                           
 17078                           ;stkvar	_l @ sp[(-4)+2]
 17079  0184B0  0EFE               	movlw	-2
 17080  0184B2  006F FF8F FFF6     	movff	plusw1,tblptrl
 17081  0184B8  0EFF               	movlw	-1
 17082  0184BA  006F FF8F FFF7     	movff	plusw1,tblptrh
 17083  0184C0  0E00               	movlw	low (__mediumconst shr (0+16))
 17084  0184C2  6EF8               	movwf	tblptru,c
 17085  0184C4  0E1F               	movlw	(high __ramtop+-1)
 17086  0184C6  64F7               	cpfsgt	tblptrh,c
 17087  0184C8  D003               	bra	u8877
 17088  0184CA  0008               	tblrd		*
 17089  0184CC  50F5               	movf	tablat,w,c
 17090  0184CE  D007               	bra	u8875
 17091  0184D0                     u8877:
 17092  0184D0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17093  0184D6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17094  0184DC  50EF               	movf	indf0,w,c
 17095  0184DE                     u8875:
 17096  0184DE  180C               	xorwf	(btemp+11)^0,w,c
 17097  0184E0  B4D8               	btfsc	status,2,c
 17098  0184E2  D766               	goto	l9705
 17099  0184E4                     u8870:
 17100                           
 17101                           ;stkvar	_l @ sp[(-4)+2]
 17102  0184E4  0EFE               	movlw	-2
 17103  0184E6  006F FF8F FFF6     	movff	plusw1,tblptrl
 17104  0184EC  0EFF               	movlw	-1
 17105  0184EE  006F FF8F FFF7     	movff	plusw1,tblptrh
 17106  0184F4  0E00               	movlw	low (__mediumconst shr (0+16))
 17107  0184F6  6EF8               	movwf	tblptru,c
 17108  0184F8  0E1F               	movlw	(high __ramtop+-1)
 17109  0184FA  64F7               	cpfsgt	tblptrh,c
 17110  0184FC  D003               	bra	u8887
 17111  0184FE  0008               	tblrd		*
 17112  018500  50F5               	movf	tablat,w,c
 17113  018502  D007               	bra	u8880
 17114  018504                     u8887:
 17115  018504  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17116  01850A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17117  018510  50EF               	movf	indf0,w,c
 17118  018512                     u8880:
 17119  018512  6E01               	movwf	btemp^0,c
 17120  018514  6A02               	clrf	(btemp+1)^0,c
 17121                           
 17122                           ;stkvar	_r @ sp[(-4)+0]
 17123  018516  50E1               	movf	fsr1l,w,c
 17124  018518  0FFC               	addlw	-4
 17125  01851A  6ED9               	movwf	fsr2l,c
 17126  01851C  50E2               	movf	fsr1h,w,c
 17127  01851E  6EDA               	movwf	fsr2h,c
 17128  018520  0EFF               	movlw	255
 17129  018522  22DA               	addwfc	fsr2h,f,c
 17130  018524  006F FF7B FFF6     	movff	postinc2,tblptrl
 17131  01852A  006F FF77 FFF7     	movff	postdec2,tblptrh
 17132  018530                     	if	0	;tblptru may be non-zero
 17133  018530                     	endif
 17134  018530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17135  018530  0E00               	movlw	low (__mediumconst shr (0+16))
 17136  018532  6EF8               	movwf	tblptru,c
 17137  018534                     	endif
 17138  018534  0008               	tblrd		*
 17139  018536  50F5               	movf	tablat,w,c
 17140  018538  5E01               	subwf	btemp^0,f,c
 17141  01853A  0E00               	movlw	0
 17142  01853C  5A02               	subwfb	(btemp+1)^0,f,c
 17143  01853E                     l3572:
 17144                           
 17145                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 17146  01853E  0EF6               	movlw	246
 17147  018540  26E1               	addwf	fsr1l,f,c
 17148  018542  0EFF               	movlw	255
 17149  018544  22E2               	addwfc	fsr1h,f,c
 17150  018546  0012               	return		;funcret
 17151  018548                     __end_of_strncmp:
 17152                           	opt callstack 0
 17153                           
 17154 ;; *************** function _stoa *****************
 17155 ;; Defined at:
 17156 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17159 ;;		 -> f(6), NULL(0), 
 17160 ;;  s               2  [STACK] PTR unsigned char 
 17161 ;;		 -> ?_printf(2), ?_sprintf(2), STR_57(9), STR_56(12), 
 17162 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 17163 ;;		 -> V(192), 
 17164 ;; Auto vars:     Size  Location     Type
 17165 ;;  nuls            7  [STACK] unsigned char [7]
 17166 ;;  l               2  [STACK] int 
 17167 ;;  p               2  [STACK] int 
 17168 ;;  cp              2  [STACK] PTR unsigned char 
 17169 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_57(9), 
 17170 ;;		 -> STR_56(12), D.lcd(480), D(482), T(144), 
 17171 ;;		 -> STR_3(5), V(192), 
 17172 ;;  w               2  [STACK] int 
 17173 ;;  i               2  [STACK] int 
 17174 ;; Return value:  Size  Location     Type
 17175 ;;                  2  [STACK] int 
 17176 ;; Registers used:
 17177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17178 ;; Tracked objects:
 17179 ;;		On entry : 0/0
 17180 ;;		On exit  : 0/0
 17181 ;;		Unchanged: 0/0
 17182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17187 ;;Total ram usage:        0 bytes
 17188 ;; Hardware stack levels used:    1
 17189 ;; Hardware stack levels required when called:   18
 17190 ;; This function calls:
 17191 ;;		_fputc
 17192 ;;		_strlen
 17193 ;; This function is called by:
 17194 ;;		_vfpfcnvrt
 17195 ;; This function uses a reentrant model
 17196 ;;
 17197                           
 17198                           	psect	text64
 17199  01747E                     __ptext64:
 17200                           	opt callstack 0
 17201  01747E                     _stoa:
 17202                           	opt callstack 0
 17203                           
 17204                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17205  01747E  0E11               	movlw	17
 17206  017480  26E1               	addwf	fsr1l,f,c
 17207  017482  0E00               	movlw	0
 17208  017484  22E2               	addwfc	fsr1h,f,c
 17209                           
 17210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 17211                           
 17212                           ;incstack = 0
 17213 ;; hardware stack exceeded
 17214  017486  EE20  F100         	lfsr	2,stoa@F1166
 17215                           
 17216                           ;stkvar	_nuls @ sp[(-17)+0]
 17217  01748A  0E07               	movlw	7
 17218  01748C  6E01               	movwf	btemp^0,c
 17219  01748E  0EEF               	movlw	-17
 17220  017490                     us1205999:
 17221  017490  006F FF7B FFE3     	movff	postinc2,plusw1
 17222  017496  28E8               	incf	wreg,w,c
 17223  017498  2E01               	decfsz	btemp^0,f,c
 17224  01749A  D7FA               	bra	us1205999
 17225                           
 17226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 17227                           ;stkvar	_s @ sp[(-17)+-4]
 17228  01749C  0EEB               	movlw	-21
 17229  01749E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17230  0174A4  0EEC               	movlw	-20
 17231  0174A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17232                           
 17233                           ;stkvar	_cp @ sp[(-17)+11]
 17234  0174AC  0EFB               	movlw	-5
 17235  0174AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17236  0174B4  0EFA               	movlw	-6
 17237  0174B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17238                           
 17239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 17240                           ;stkvar	_cp @ sp[(-17)+11]
 17241  0174BC  0EFA               	movlw	-6
 17242  0174BE  006F FF8C  F001    	movff	plusw1,btemp
 17243  0174C4  0EFB               	movlw	-5
 17244  0174C6  50E3               	movf	plusw1,w,c
 17245  0174C8  1001               	iorwf	btemp^0,w,c
 17246  0174CA  A4D8               	btfss	status,2,c
 17247  0174CC  D00E               	goto	l12861
 17248                           
 17249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 17250                           ;stkvar	_nuls @ sp[(-17)+0]
 17251  0174CE  0EEF               	movlw	239
 17252  0174D0  24E1               	addwf	fsr1l,w,c
 17253  0174D2  6E0B               	movwf	(btemp+10)^0,c
 17254  0174D4  0EFF               	movlw	255
 17255  0174D6  20E2               	addwfc	fsr1h,w,c
 17256  0174D8  6E0C               	movwf	(btemp+11)^0,c
 17257                           
 17258                           ;stkvar	_cp @ sp[(-17)+11]
 17259  0174DA  0EFB               	movlw	-5
 17260  0174DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17261  0174E2  0EFA               	movlw	-6
 17262  0174E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17263  0174EA                     l12861:
 17264                           
 17265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 17266                           ;stkvar	_cp @ sp[(-17)+11]
 17267  0174EA  0EFA               	movlw	-6
 17268  0174EC  006F FF8F FFE6     	movff	plusw1,postinc1
 17269  0174F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17270  0174F8  EC57  F0D8         	call	_strlen	;wreg free
 17271                           
 17272                           ;stkvar	_l @ sp[(-17)+7]
 17273  0174FC  0EF6               	movlw	-10
 17274  0174FE  0060  F007  FFE3   	movff	btemp,plusw1
 17275  017504  0EF7               	movlw	-9
 17276  017506  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17277                           
 17278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 17279                           ;stkvar	_p @ sp[(-17)+9]
 17280  01750C  0EF8               	movlw	-8
 17281  01750E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17282  017514  0EF9               	movlw	-7
 17283  017516  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17284                           
 17285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 17286                           ;stkvar	_p @ sp[(-17)+9]
 17287  01751C  0EF9               	movlw	-7
 17288  01751E  BEE3               	btfsc	plusw1,7,c
 17289  017520  D023               	goto	l2397
 17290                           
 17291                           ;stkvar	_l @ sp[(-17)+7]
 17292                           ;stkvar	_p @ sp[(-17)+9]
 17293  017522  50E1               	movf	fsr1l,w,c
 17294  017524  0FF8               	addlw	-8
 17295  017526  6ED9               	movwf	fsr2l,c
 17296  017528  50E2               	movf	fsr1h,w,c
 17297  01752A  6EDA               	movwf	fsr2h,c
 17298  01752C  0EFF               	movlw	255
 17299  01752E  22DA               	addwfc	fsr2h,f,c
 17300  017530  0EF6               	movlw	-10
 17301  017532  50E3               	movf	plusw1,w,c
 17302  017534  5CDE               	subwf	postinc2,w,c
 17303  017536  50DE               	movf	postinc2,w,c
 17304  017538  0A80               	xorlw	128
 17305  01753A  6E01               	movwf	btemp^0,c
 17306  01753C  0EF7               	movlw	-9
 17307  01753E  50E3               	movf	plusw1,w,c
 17308  017540  0A80               	xorlw	128
 17309  017542  5801               	subwfb	btemp^0,w,c
 17310  017544  B0D8               	btfsc	status,0,c
 17311  017546  D010               	goto	l2397
 17312                           
 17313                           ;stkvar	_p @ sp[(-17)+9]
 17314                           ;stkvar	_l @ sp[(-17)+7]
 17315  017548  0EF8               	movlw	-8
 17316  01754A  006F FF8C  F001    	movff	plusw1,btemp
 17317  017550  0EF6               	movlw	-10
 17318  017552  0060  F007  FFE3   	movff	btemp,plusw1
 17319  017558  0EF9               	movlw	-7
 17320  01755A  006F FF8C  F001    	movff	plusw1,btemp
 17321  017560  0EF7               	movlw	-9
 17322  017562  0060  F007  FFE3   	movff	btemp,plusw1
 17323  017568                     l2397:
 17324                           
 17325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 17326                           ;stkvar	_l @ sp[(-17)+7]
 17327                           ;stkvar	_p @ sp[(-17)+9]
 17328  017568  0EF6               	movlw	-10
 17329  01756A  006F FF8C  F001    	movff	plusw1,btemp
 17330  017570  0EF8               	movlw	-8
 17331  017572  0060  F007  FFE3   	movff	btemp,plusw1
 17332  017578  0EF7               	movlw	-9
 17333  01757A  006F FF8C  F001    	movff	plusw1,btemp
 17334  017580  0EF9               	movlw	-7
 17335  017582  0060  F007  FFE3   	movff	btemp,plusw1
 17336                           
 17337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 17338                           ;stkvar	_w @ sp[(-17)+13]
 17339  017588  0EFC               	movlw	-4
 17340  01758A  0060  F0EB  FFE3   	movff	_width,plusw1
 17341  017590  0EFD               	movlw	-3
 17342  017592  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17343                           
 17344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 17345  017598  A03E               	btfss	_flags^0,0,c
 17346  01759A  D01F               	goto	l12881
 17347  01759C  D031               	goto	u12100
 17348  01759E                     l12877:
 17349                           
 17350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 17351                           ;stkvar	_fp @ sp[(-17)+-2]
 17352  01759E  0EED               	movlw	-19
 17353  0175A0  006F FF8F FFE6     	movff	plusw1,postinc1
 17354  0175A6  006F FF8F FFE6     	movff	plusw1,postinc1
 17355  0175AC  0E20               	movlw	32
 17356  0175AE  6EE6               	movwf	postinc1,c
 17357  0175B0  0E00               	movlw	0
 17358  0175B2  6EE6               	movwf	postinc1,c
 17359  0175B4  ECF0  F0CE         	call	_fputc	;wreg free
 17360                           
 17361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 17362                           ;stkvar	_l @ sp[(-17)+7]
 17363  0175B8  0EF6               	movlw	-10
 17364  0175BA  50E3               	movf	plusw1,w,c
 17365  0175BC  0F01               	addlw	1
 17366  0175BE  6E01               	movwf	btemp^0,c
 17367  0175C0  0EF6               	movlw	-10
 17368  0175C2  0060  F007  FFE3   	movff	btemp,plusw1
 17369  0175C8  6A01               	clrf	btemp^0,c
 17370  0175CA  0EF7               	movlw	-9
 17371  0175CC  50E3               	movf	plusw1,w,c
 17372  0175CE  2001               	addwfc	btemp^0,w,c
 17373  0175D0  6E01               	movwf	btemp^0,c
 17374  0175D2  0EF7               	movlw	-9
 17375  0175D4  0060  F007  FFE3   	movff	btemp,plusw1
 17376  0175DA                     l12881:
 17377                           
 17378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 17379                           ;stkvar	_w @ sp[(-17)+13]
 17380                           ;stkvar	_l @ sp[(-17)+7]
 17381  0175DA  50E1               	movf	fsr1l,w,c
 17382  0175DC  0FF6               	addlw	-10
 17383  0175DE  6ED9               	movwf	fsr2l,c
 17384  0175E0  50E2               	movf	fsr1h,w,c
 17385  0175E2  6EDA               	movwf	fsr2h,c
 17386  0175E4  0EFF               	movlw	255
 17387  0175E6  22DA               	addwfc	fsr2h,f,c
 17388  0175E8  0EFC               	movlw	-4
 17389  0175EA  50E3               	movf	plusw1,w,c
 17390  0175EC  5CDE               	subwf	postinc2,w,c
 17391  0175EE  50DE               	movf	postinc2,w,c
 17392  0175F0  0A80               	xorlw	128
 17393  0175F2  6E01               	movwf	btemp^0,c
 17394  0175F4  0EFD               	movlw	-3
 17395  0175F6  50E3               	movf	plusw1,w,c
 17396  0175F8  0A80               	xorlw	128
 17397  0175FA  5801               	subwfb	btemp^0,w,c
 17398  0175FC  A0D8               	btfss	status,0,c
 17399  0175FE  D7CF               	goto	l12877
 17400  017600                     u12100:
 17401                           
 17402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 17403                           ;stkvar	_i @ sp[(-17)+15]
 17404  017600  0EFE               	movlw	-2
 17405  017602  6AE3               	clrf	plusw1,c
 17406  017604  0EFF               	movlw	-1
 17407  017606  6AE3               	clrf	plusw1,c
 17408                           
 17409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17410  017608  D045               	goto	l12891
 17411  01760A                     l12885:
 17412                           
 17413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 17414                           ;stkvar	_fp @ sp[(-17)+-2]
 17415  01760A  0EED               	movlw	-19
 17416  01760C  006F FF8F FFE6     	movff	plusw1,postinc1
 17417  017612  006F FF8F FFE6     	movff	plusw1,postinc1
 17418                           
 17419                           ;stkvar	_cp @ sp[(-19)+11]
 17420  017618  0EF8               	movlw	-8
 17421  01761A  006F FF8F FFF6     	movff	plusw1,tblptrl
 17422  017620  0EF9               	movlw	-7
 17423  017622  006F FF8F FFF7     	movff	plusw1,tblptrh
 17424  017628  0E00               	movlw	low (__mediumconst shr (0+16))
 17425  01762A  6EF8               	movwf	tblptru,c
 17426  01762C  0E1F               	movlw	(high __ramtop+-1)
 17427  01762E  64F7               	cpfsgt	tblptrh,c
 17428  017630  D003               	bra	u12117
 17429  017632  0008               	tblrd		*
 17430  017634  50F5               	movf	tablat,w,c
 17431  017636  D007               	bra	u12110
 17432  017638                     u12117:
 17433  017638  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17434  01763E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17435  017644  50EF               	movf	indf0,w,c
 17436  017646                     u12110:
 17437  017646  6EE6               	movwf	postinc1,c
 17438  017648  0E00               	movlw	0
 17439  01764A  6EE6               	movwf	postinc1,c
 17440  01764C  ECF0  F0CE         	call	_fputc	;wreg free
 17441                           
 17442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 17443                           ;stkvar	_cp @ sp[(-17)+11]
 17444  017650  0EFA               	movlw	-6
 17445  017652  50E3               	movf	plusw1,w,c
 17446  017654  0F01               	addlw	1
 17447  017656  6E01               	movwf	btemp^0,c
 17448  017658  0EFA               	movlw	-6
 17449  01765A  0060  F007  FFE3   	movff	btemp,plusw1
 17450  017660  6A01               	clrf	btemp^0,c
 17451  017662  0EFB               	movlw	-5
 17452  017664  50E3               	movf	plusw1,w,c
 17453  017666  2001               	addwfc	btemp^0,w,c
 17454  017668  6E01               	movwf	btemp^0,c
 17455  01766A  0EFB               	movlw	-5
 17456  01766C  0060  F007  FFE3   	movff	btemp,plusw1
 17457                           
 17458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 17459                           ;stkvar	_i @ sp[(-17)+15]
 17460  017672  0EFE               	movlw	-2
 17461  017674  50E3               	movf	plusw1,w,c
 17462  017676  0F01               	addlw	1
 17463  017678  6E01               	movwf	btemp^0,c
 17464  01767A  0EFE               	movlw	-2
 17465  01767C  0060  F007  FFE3   	movff	btemp,plusw1
 17466  017682  6A01               	clrf	btemp^0,c
 17467  017684  0EFF               	movlw	-1
 17468  017686  50E3               	movf	plusw1,w,c
 17469  017688  2001               	addwfc	btemp^0,w,c
 17470  01768A  6E01               	movwf	btemp^0,c
 17471  01768C  0EFF               	movlw	-1
 17472  01768E  0060  F007  FFE3   	movff	btemp,plusw1
 17473  017694                     l12891:
 17474                           
 17475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17476                           ;stkvar	_p @ sp[(-17)+9]
 17477                           ;stkvar	_i @ sp[(-17)+15]
 17478  017694  50E1               	movf	fsr1l,w,c
 17479  017696  0FFE               	addlw	-2
 17480  017698  6ED9               	movwf	fsr2l,c
 17481  01769A  50E2               	movf	fsr1h,w,c
 17482  01769C  6EDA               	movwf	fsr2h,c
 17483  01769E  0EFF               	movlw	255
 17484  0176A0  22DA               	addwfc	fsr2h,f,c
 17485  0176A2  0EF8               	movlw	-8
 17486  0176A4  50E3               	movf	plusw1,w,c
 17487  0176A6  5CDE               	subwf	postinc2,w,c
 17488  0176A8  50DE               	movf	postinc2,w,c
 17489  0176AA  0A80               	xorlw	128
 17490  0176AC  6E01               	movwf	btemp^0,c
 17491  0176AE  0EF9               	movlw	-7
 17492  0176B0  50E3               	movf	plusw1,w,c
 17493  0176B2  0A80               	xorlw	128
 17494  0176B4  5801               	subwfb	btemp^0,w,c
 17495  0176B6  A0D8               	btfss	status,0,c
 17496  0176B8  D7A8               	goto	l12885
 17497                           
 17498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 17499  0176BA  B03E               	btfsc	_flags^0,0,c
 17500  0176BC  D01F               	goto	l12899
 17501  0176BE  D031               	goto	u12140
 17502  0176C0                     l12895:
 17503                           
 17504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 17505                           ;stkvar	_fp @ sp[(-17)+-2]
 17506  0176C0  0EED               	movlw	-19
 17507  0176C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17508  0176C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17509  0176CE  0E20               	movlw	32
 17510  0176D0  6EE6               	movwf	postinc1,c
 17511  0176D2  0E00               	movlw	0
 17512  0176D4  6EE6               	movwf	postinc1,c
 17513  0176D6  ECF0  F0CE         	call	_fputc	;wreg free
 17514                           
 17515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 17516                           ;stkvar	_l @ sp[(-17)+7]
 17517  0176DA  0EF6               	movlw	-10
 17518  0176DC  50E3               	movf	plusw1,w,c
 17519  0176DE  0F01               	addlw	1
 17520  0176E0  6E01               	movwf	btemp^0,c
 17521  0176E2  0EF6               	movlw	-10
 17522  0176E4  0060  F007  FFE3   	movff	btemp,plusw1
 17523  0176EA  6A01               	clrf	btemp^0,c
 17524  0176EC  0EF7               	movlw	-9
 17525  0176EE  50E3               	movf	plusw1,w,c
 17526  0176F0  2001               	addwfc	btemp^0,w,c
 17527  0176F2  6E01               	movwf	btemp^0,c
 17528  0176F4  0EF7               	movlw	-9
 17529  0176F6  0060  F007  FFE3   	movff	btemp,plusw1
 17530  0176FC                     l12899:
 17531                           
 17532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 17533                           ;stkvar	_w @ sp[(-17)+13]
 17534                           ;stkvar	_l @ sp[(-17)+7]
 17535  0176FC  50E1               	movf	fsr1l,w,c
 17536  0176FE  0FF6               	addlw	-10
 17537  017700  6ED9               	movwf	fsr2l,c
 17538  017702  50E2               	movf	fsr1h,w,c
 17539  017704  6EDA               	movwf	fsr2h,c
 17540  017706  0EFF               	movlw	255
 17541  017708  22DA               	addwfc	fsr2h,f,c
 17542  01770A  0EFC               	movlw	-4
 17543  01770C  50E3               	movf	plusw1,w,c
 17544  01770E  5CDE               	subwf	postinc2,w,c
 17545  017710  50DE               	movf	postinc2,w,c
 17546  017712  0A80               	xorlw	128
 17547  017714  6E01               	movwf	btemp^0,c
 17548  017716  0EFD               	movlw	-3
 17549  017718  50E3               	movf	plusw1,w,c
 17550  01771A  0A80               	xorlw	128
 17551  01771C  5801               	subwfb	btemp^0,w,c
 17552  01771E  A0D8               	btfss	status,0,c
 17553  017720  D7CF               	goto	l12895
 17554  017722                     u12140:
 17555                           
 17556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 17557                           ;stkvar	_l @ sp[(-17)+7]
 17558  017722  0EF6               	movlw	-10
 17559  017724  006F FF8C  F001    	movff	plusw1,btemp
 17560  01772A  0EF7               	movlw	-9
 17561  01772C  006F FF8C  F002    	movff	plusw1,btemp+1
 17562                           
 17563                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17564  017732  0EEB               	movlw	235
 17565  017734  26E1               	addwf	fsr1l,f,c
 17566  017736  0EFF               	movlw	255
 17567  017738  22E2               	addwfc	fsr1h,f,c
 17568  01773A  0012               	return		;funcret
 17569  01773C                     __end_of_stoa:
 17570                           	opt callstack 0
 17571                           
 17572 ;; *************** function _efgtoa *****************
 17573 ;; Defined at:
 17574 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17575 ;; Parameters:    Size  Location     Type
 17576 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17577 ;;		 -> f(6), NULL(0), 
 17578 ;;  f               4  [STACK] PTR struct _IO_FILE
 17579 ;;  c               1  [STACK] unsigned char 
 17580 ;; Auto vars:     Size  Location     Type
 17581 ;;  u               4  [STACK] unsigned char 
 17582 ;;  g               4  [STACK] unsigned char 
 17583 ;;  l               4  [STACK] unsigned char 
 17584 ;;  h               4  [STACK] unsigned char 
 17585 ;;  ou              4  [STACK] unsigned char 
 17586 ;;  n               2  [STACK] int 
 17587 ;;  e               2  [STACK] int 
 17588 ;;  i               2  [STACK] int 
 17589 ;;  w               2  [STACK] int 
 17590 ;;  p               2  [STACK] int 
 17591 ;;  sign            2  [STACK] int 
 17592 ;;  d               2  [STACK] int 
 17593 ;;  ne              2  [STACK] int 
 17594 ;;  m               2  [STACK] int 
 17595 ;;  pp              2  [STACK] int 
 17596 ;;  t               2  [STACK] int 
 17597 ;;  mode            1  [STACK] unsigned char 
 17598 ;;  nmode           1  [STACK] unsigned char 
 17599 ;; Return value:  Size  Location     Type
 17600 ;;                  2  [STACK] int 
 17601 ;; Registers used:
 17602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17603 ;; Tracked objects:
 17604 ;;		On entry : 0/0
 17605 ;;		On exit  : 0/0
 17606 ;;		Unchanged: 0/0
 17607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17612 ;;Total ram usage:        0 bytes
 17613 ;; Hardware stack levels used:    1
 17614 ;; Hardware stack levels required when called:   20
 17615 ;; This function calls:
 17616 ;;		___awdiv
 17617 ;;		___awmod
 17618 ;;		___fladd
 17619 ;;		___fldiv
 17620 ;;		___fleq
 17621 ;;		___flge
 17622 ;;		___flmul
 17623 ;;		___flneg
 17624 ;;		___flsub
 17625 ;;		___fltol
 17626 ;;		___fpclassifyf
 17627 ;;		_floorf
 17628 ;;		_isupper
 17629 ;;		_pad
 17630 ;;		_strcpy
 17631 ;;		_tolower
 17632 ;; This function is called by:
 17633 ;;		_vfpfcnvrt
 17634 ;; This function uses a reentrant model
 17635 ;;
 17636                           
 17637                           	psect	text65
 17638  010000                     __ptext65:
 17639                           	opt callstack 0
 17640  010000                     _efgtoa:
 17641                           	opt callstack 0
 17642                           
 17643                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17644  010000  0E38               	movlw	56
 17645  010002  26E1               	addwf	fsr1l,f,c
 17646  010004  0E00               	movlw	0
 17647  010006  22E2               	addwfc	fsr1h,f,c
 17648                           
 17649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 17650                           ;stkvar	_sign @ sp[(-56)+42]
 17651                           
 17652                           ;incstack = 0
 17653 ;; hardware stack exceeded
 17654  010008  0EF2               	movlw	-14
 17655  01000A  6AE3               	clrf	plusw1,c
 17656  01000C  0EF3               	movlw	-13
 17657  01000E  6AE3               	clrf	plusw1,c
 17658                           
 17659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 17660                           ;stkvar	_f @ sp[(-56)+-6]
 17661  010010  0EC2               	movlw	-62
 17662  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 17663  010018  0EC3               	movlw	-61
 17664  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17665  010020  0EC4               	movlw	-60
 17666  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 17667  010028  0EC5               	movlw	-59
 17668  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17669                           
 17670                           ;stkvar	_g @ sp[(-56)+16]
 17671  010030  0ED8               	movlw	-40
 17672  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 17673  010038  0ED9               	movlw	-39
 17674  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17675  010040  0EDA               	movlw	-38
 17676  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17677  010048  0EDB               	movlw	-37
 17678  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17679                           
 17680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 17681                           ;stkvar	_g @ sp[(-56)+16]
 17682  010050  0EDB               	movlw	-37
 17683  010052  AEE3               	btfss	plusw1,7,c
 17684  010054  D02B               	goto	l12559
 17685                           
 17686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 17687  010056  0E01               	movlw	1
 17688  010058  6E0B               	movwf	(btemp+10)^0,c
 17689  01005A  0E00               	movlw	0
 17690  01005C  6E0C               	movwf	(btemp+11)^0,c
 17691                           
 17692                           ;stkvar	_sign @ sp[(-56)+42]
 17693  01005E  0EF2               	movlw	-14
 17694  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17695  010066  0EF3               	movlw	-13
 17696  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 17697                           
 17698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 17699                           ;stkvar	_g @ sp[(-56)+16]
 17700  01006E  0ED8               	movlw	-40
 17701  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 17702  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 17703  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 17704  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 17705  010088  EC93  F0DE         	call	___flneg	;wreg free
 17706                           
 17707                           ;stkvar	_g @ sp[(-56)+16]
 17708  01008C  0ED8               	movlw	-40
 17709  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 17710  010094  0ED9               	movlw	-39
 17711  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17712  01009C  0EDA               	movlw	-38
 17713  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17714  0100A4  0EDB               	movlw	-37
 17715  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 17716  0100AC                     l12559:
 17717                           
 17718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 17719                           ;stkvar	_n @ sp[(-56)+32]
 17720  0100AC  0EE8               	movlw	-24
 17721  0100AE  6AE3               	clrf	plusw1,c
 17722  0100B0  0EE9               	movlw	-23
 17723  0100B2  6AE3               	clrf	plusw1,c
 17724                           
 17725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 17726                           ;stkvar	_w @ sp[(-56)+38]
 17727  0100B4  0EEE               	movlw	-18
 17728  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 17729  0100BC  0EEF               	movlw	-17
 17730  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17731                           
 17732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 17733                           ;stkvar	_sign @ sp[(-56)+42]
 17734  0100C4  0EF2               	movlw	-14
 17735  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 17736  0100CC  0EF3               	movlw	-13
 17737  0100CE  50E3               	movf	plusw1,w,c
 17738  0100D0  1001               	iorwf	btemp^0,w,c
 17739  0100D2  A4D8               	btfss	status,2,c
 17740  0100D4  D002               	goto	u11550
 17741  0100D6  A43E               	btfss	_flags^0,2,c
 17742  0100D8  D036               	goto	l12579
 17743  0100DA                     u11550:
 17744                           
 17745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 17746                           ;stkvar	_sign @ sp[(-56)+42]
 17747  0100DA  0EF2               	movlw	-14
 17748  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 17749  0100E2  0EF3               	movlw	-13
 17750  0100E4  50E3               	movf	plusw1,w,c
 17751  0100E6  1001               	iorwf	btemp^0,w,c
 17752  0100E8  A4D8               	btfss	status,2,c
 17753  0100EA  D002               	goto	l12571
 17754  0100EC  0E2B               	movlw	43
 17755  0100EE  D001               	goto	L19
 17756  0100F0                     l12571:
 17757  0100F0  0E2D               	movlw	45
 17758  0100F2                     L19:
 17759  0100F2  6E0B               	movwf	(btemp+10)^0,c
 17760  0100F4  0E00               	movlw	0
 17761  0100F6  6E0C               	movwf	(btemp+11)^0,c
 17762                           
 17763                           ;stkvar	_efgtoa$5854 @ sp[(-56)+10]
 17764  0100F8  0ED2               	movlw	-46
 17765  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17766  010100  0ED3               	movlw	-45
 17767  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 17768                           
 17769                           ;stkvar	_efgtoa$5854 @ sp[(-56)+10]
 17770  010108  0ED2               	movlw	-46
 17771  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 17772                           
 17773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 17774                           ;stkvar	_n @ sp[(-56)+32]
 17775  010110  0EE8               	movlw	-24
 17776  010112  50E3               	movf	plusw1,w,c
 17777  010114  0F01               	addlw	1
 17778  010116  6E01               	movwf	btemp^0,c
 17779  010118  0EE8               	movlw	-24
 17780  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 17781  010120  6A01               	clrf	btemp^0,c
 17782  010122  0EE9               	movlw	-23
 17783  010124  50E3               	movf	plusw1,w,c
 17784  010126  2001               	addwfc	btemp^0,w,c
 17785  010128  6E01               	movwf	btemp^0,c
 17786  01012A  0EE9               	movlw	-23
 17787  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 17788                           
 17789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 17790                           ;stkvar	_w @ sp[(-56)+38]
 17791  010132  50E1               	movf	fsr1l,w,c
 17792  010134  0FEE               	addlw	-18
 17793  010136  6ED9               	movwf	fsr2l,c
 17794  010138  50E2               	movf	fsr1h,w,c
 17795  01013A  6EDA               	movwf	fsr2h,c
 17796  01013C  0EFF               	movlw	255
 17797  01013E  22DA               	addwfc	fsr2h,f,c
 17798  010140  06DE               	decf	postinc2,f,c
 17799  010142  0E00               	movlw	0
 17800  010144  5ADD               	subwfb	postdec2,f,c
 17801  010146                     l12579:
 17802                           
 17803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17804                           ;stkvar	_g @ sp[(-56)+16]
 17805  010146  0ED8               	movlw	-40
 17806  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 17807  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 17808  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 17809  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 17810  010160  EC6B  F0C7         	call	___fpclassifyf	;wreg free
 17811  010164  0401               	decf	btemp^0,w,c
 17812  010166  1002               	iorwf	(btemp+1)^0,w,c
 17813  010168  A4D8               	btfss	status,2,c
 17814  01016A  D076               	goto	l12597
 17815  01016C  0EBF               	movlw	191
 17816  01016E  6E0B               	movwf	(btemp+10)^0,c
 17817  010170  0EFF               	movlw	255
 17818  010172  6E0C               	movwf	(btemp+11)^0,c
 17819                           
 17820                           ;stkvar	_c @ sp[(-56)+-7]
 17821  010174  0EC1               	movlw	-63
 17822  010176  50E3               	movf	plusw1,w,c
 17823  010178  6E09               	movwf	(btemp+8)^0,c
 17824  01017A  6A0A               	clrf	(btemp+9)^0,c
 17825  01017C  500B               	movf	(btemp+10)^0,w,c
 17826  01017E  2609               	addwf	(btemp+8)^0,f,c
 17827  010180  500C               	movf	(btemp+11)^0,w,c
 17828  010182  220A               	addwfc	(btemp+9)^0,f,c
 17829  010184  500A               	movf	(btemp+9)^0,w,c
 17830  010186  E106               	bnz	u11580
 17831  010188  0E1A               	movlw	26
 17832  01018A  5C09               	subwf	(btemp+8)^0,w,c
 17833  01018C  B0D8               	btfsc	status,0,c
 17834  01018E  D002               	goto	u11580
 17835  010190  0E01               	movlw	1
 17836  010192  D001               	goto	u11590
 17837  010194                     u11580:
 17838  010194  0E00               	movlw	0
 17839  010196                     u11590:
 17840  010196  6E0B               	movwf	(btemp+10)^0,c
 17841  010198  6A0C               	clrf	(btemp+11)^0,c
 17842                           
 17843                           ;stkvar	_efgtoa$5855 @ sp[(-56)+8]
 17844  01019A  0ED0               	movlw	-48
 17845  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17846  0101A2  0ED1               	movlw	-47
 17847  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17848                           
 17849                           ;stkvar	_efgtoa$5855 @ sp[(-56)+8]
 17850  0101AA  0ED0               	movlw	-48
 17851  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 17852  0101B2  0ED1               	movlw	-47
 17853  0101B4  50E3               	movf	plusw1,w,c
 17854  0101B6  1001               	iorwf	btemp^0,w,c
 17855  0101B8  B4D8               	btfsc	status,2,c
 17856  0101BA  D017               	goto	l12589
 17857                           
 17858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 17859  0101BC  0ED7               	movlw	low STR_76
 17860  0101BE  6EE6               	movwf	postinc1,c
 17861  0101C0  0EFF               	movlw	high STR_76
 17862  0101C2  6EE6               	movwf	postinc1,c
 17863                           
 17864                           ;stkvar	_n @ sp[(-58)+32]
 17865  0101C4  0E97               	movlw	low _dbuf
 17866  0101C6  6E0B               	movwf	(btemp+10)^0,c
 17867  0101C8  0E02               	movlw	high _dbuf
 17868  0101CA  6E0C               	movwf	(btemp+11)^0,c
 17869  0101CC  0EE6               	movlw	-26
 17870  0101CE  50E3               	movf	plusw1,w,c
 17871  0101D0  260B               	addwf	(btemp+10)^0,f,c
 17872  0101D2  0EE7               	movlw	-25
 17873  0101D4  50E3               	movf	plusw1,w,c
 17874  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 17875  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17876  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 17877  0101E4  EC03  F0D4         	call	_strcpy	;wreg free
 17878                           
 17879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 17880  0101E8  D016               	goto	l12591
 17881  0101EA                     l12589:
 17882                           
 17883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 17884  0101EA  0EDF               	movlw	low STR_77
 17885  0101EC  6EE6               	movwf	postinc1,c
 17886  0101EE  0EFF               	movlw	high STR_77
 17887  0101F0  6EE6               	movwf	postinc1,c
 17888                           
 17889                           ;stkvar	_n @ sp[(-58)+32]
 17890  0101F2  0E97               	movlw	low _dbuf
 17891  0101F4  6E0B               	movwf	(btemp+10)^0,c
 17892  0101F6  0E02               	movlw	high _dbuf
 17893  0101F8  6E0C               	movwf	(btemp+11)^0,c
 17894  0101FA  0EE6               	movlw	-26
 17895  0101FC  50E3               	movf	plusw1,w,c
 17896  0101FE  260B               	addwf	(btemp+10)^0,f,c
 17897  010200  0EE7               	movlw	-25
 17898  010202  50E3               	movf	plusw1,w,c
 17899  010204  220C               	addwfc	(btemp+11)^0,f,c
 17900  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17901  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17902  010212  EC03  F0D4         	call	_strcpy	;wreg free
 17903  010216                     l12591:
 17904                           
 17905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 17906                           ;stkvar	_w @ sp[(-56)+38]
 17907  010216  50E1               	movf	fsr1l,w,c
 17908  010218  0FEE               	addlw	-18
 17909  01021A  6ED9               	movwf	fsr2l,c
 17910  01021C  50E2               	movf	fsr1h,w,c
 17911  01021E  6EDA               	movwf	fsr2h,c
 17912  010220  0EFF               	movlw	255
 17913  010222  22DA               	addwfc	fsr2h,f,c
 17914  010224  0EFD               	movlw	253
 17915  010226  26DE               	addwf	postinc2,f,c
 17916  010228  0EFF               	movlw	255
 17917  01022A  22DD               	addwfc	postdec2,f,c
 17918  01022C                     l12593:
 17919                           
 17920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 17921                           ;stkvar	_w @ sp[(-56)+38]
 17922  01022C  0EEE               	movlw	-18
 17923  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 17924  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 17925  01023A  0E97               	movlw	low _dbuf
 17926  01023C  6EE6               	movwf	postinc1,c
 17927  01023E  0E02               	movlw	high _dbuf
 17928  010240  6EE6               	movwf	postinc1,c
 17929                           
 17930                           ;stkvar	_fp @ sp[(-60)+-2]
 17931  010242  0EC2               	movlw	-62
 17932  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 17933  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 17934  010250  EC9A  F0D0         	call	_pad	;wreg free
 17935  010254  EF1D  F089         	goto	l2315
 17936  010258                     l12597:
 17937                           
 17938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17939                           ;stkvar	_g @ sp[(-56)+16]
 17940  010258  0ED8               	movlw	-40
 17941  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 17942  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 17943  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 17944  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 17945  010272  EC6B  F0C7         	call	___fpclassifyf	;wreg free
 17946  010276  5001               	movf	btemp^0,w,c
 17947  010278  1002               	iorwf	(btemp+1)^0,w,c
 17948  01027A  A4D8               	btfss	status,2,c
 17949  01027C  D056               	goto	l12615
 17950  01027E  0EBF               	movlw	191
 17951  010280  6E0B               	movwf	(btemp+10)^0,c
 17952  010282  0EFF               	movlw	255
 17953  010284  6E0C               	movwf	(btemp+11)^0,c
 17954                           
 17955                           ;stkvar	_c @ sp[(-56)+-7]
 17956  010286  0EC1               	movlw	-63
 17957  010288  50E3               	movf	plusw1,w,c
 17958  01028A  6E09               	movwf	(btemp+8)^0,c
 17959  01028C  6A0A               	clrf	(btemp+9)^0,c
 17960  01028E  500B               	movf	(btemp+10)^0,w,c
 17961  010290  2609               	addwf	(btemp+8)^0,f,c
 17962  010292  500C               	movf	(btemp+11)^0,w,c
 17963  010294  220A               	addwfc	(btemp+9)^0,f,c
 17964  010296  500A               	movf	(btemp+9)^0,w,c
 17965  010298  E106               	bnz	u11620
 17966  01029A  0E1A               	movlw	26
 17967  01029C  5C09               	subwf	(btemp+8)^0,w,c
 17968  01029E  B0D8               	btfsc	status,0,c
 17969  0102A0  D002               	goto	u11620
 17970  0102A2  0E01               	movlw	1
 17971  0102A4  D001               	goto	u11630
 17972  0102A6                     u11620:
 17973  0102A6  0E00               	movlw	0
 17974  0102A8                     u11630:
 17975  0102A8  6E0B               	movwf	(btemp+10)^0,c
 17976  0102AA  6A0C               	clrf	(btemp+11)^0,c
 17977                           
 17978                           ;stkvar	_efgtoa$5859 @ sp[(-56)+6]
 17979  0102AC  0ECE               	movlw	-50
 17980  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17981  0102B4  0ECF               	movlw	-49
 17982  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17983                           
 17984                           ;stkvar	_efgtoa$5859 @ sp[(-56)+6]
 17985  0102BC  0ECE               	movlw	-50
 17986  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 17987  0102C4  0ECF               	movlw	-49
 17988  0102C6  50E3               	movf	plusw1,w,c
 17989  0102C8  1001               	iorwf	btemp^0,w,c
 17990  0102CA  B4D8               	btfsc	status,2,c
 17991  0102CC  D017               	goto	l12607
 17992                           
 17993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17994  0102CE  0EDB               	movlw	low STR_80
 17995  0102D0  6EE6               	movwf	postinc1,c
 17996  0102D2  0EFF               	movlw	high STR_80
 17997  0102D4  6EE6               	movwf	postinc1,c
 17998                           
 17999                           ;stkvar	_n @ sp[(-58)+32]
 18000  0102D6  0E97               	movlw	low _dbuf
 18001  0102D8  6E0B               	movwf	(btemp+10)^0,c
 18002  0102DA  0E02               	movlw	high _dbuf
 18003  0102DC  6E0C               	movwf	(btemp+11)^0,c
 18004  0102DE  0EE6               	movlw	-26
 18005  0102E0  50E3               	movf	plusw1,w,c
 18006  0102E2  260B               	addwf	(btemp+10)^0,f,c
 18007  0102E4  0EE7               	movlw	-25
 18008  0102E6  50E3               	movf	plusw1,w,c
 18009  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 18010  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18011  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18012  0102F6  EC03  F0D4         	call	_strcpy	;wreg free
 18013                           
 18014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 18015  0102FA  D78D               	goto	l12591
 18016  0102FC                     l12607:
 18017                           
 18018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 18019  0102FC  0EE3               	movlw	low STR_81
 18020  0102FE  6EE6               	movwf	postinc1,c
 18021  010300  0EFF               	movlw	high STR_81
 18022  010302  6EE6               	movwf	postinc1,c
 18023                           
 18024                           ;stkvar	_n @ sp[(-58)+32]
 18025  010304  0E97               	movlw	low _dbuf
 18026  010306  6E0B               	movwf	(btemp+10)^0,c
 18027  010308  0E02               	movlw	high _dbuf
 18028  01030A  6E0C               	movwf	(btemp+11)^0,c
 18029  01030C  0EE6               	movlw	-26
 18030  01030E  50E3               	movf	plusw1,w,c
 18031  010310  260B               	addwf	(btemp+10)^0,f,c
 18032  010312  0EE7               	movlw	-25
 18033  010314  50E3               	movf	plusw1,w,c
 18034  010316  220C               	addwfc	(btemp+11)^0,f,c
 18035  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18036  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18037  010324  EC03  F0D4         	call	_strcpy	;wreg free
 18038  010328  D776               	goto	l12591
 18039  01032A                     l12615:
 18040                           
 18041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 18042  01032A  0E00               	movlw	0
 18043  01032C  6E09               	movwf	(btemp+8)^0,c
 18044  01032E  0E00               	movlw	0
 18045  010330  6E0A               	movwf	(btemp+9)^0,c
 18046  010332  0E80               	movlw	128
 18047  010334  6E0B               	movwf	(btemp+10)^0,c
 18048  010336  0E3F               	movlw	63
 18049  010338  6E0C               	movwf	(btemp+11)^0,c
 18050                           
 18051                           ;stkvar	_u @ sp[(-56)+12]
 18052  01033A  0ED4               	movlw	-44
 18053  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18054  010342  0ED5               	movlw	-43
 18055  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18056  01034A  0ED6               	movlw	-42
 18057  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18058  010352  0ED7               	movlw	-41
 18059  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 18060                           
 18061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 18062                           ;stkvar	_e @ sp[(-56)+34]
 18063  01035A  0EEA               	movlw	-22
 18064  01035C  6AE3               	clrf	plusw1,c
 18065  01035E  0EEB               	movlw	-21
 18066  010360  6AE3               	clrf	plusw1,c
 18067                           
 18068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 18069  010362  0E00               	movlw	0
 18070  010364  6EE6               	movwf	postinc1,c
 18071  010366  0E00               	movlw	0
 18072  010368  6EE6               	movwf	postinc1,c
 18073  01036A  0E00               	movlw	0
 18074  01036C  6EE6               	movwf	postinc1,c
 18075  01036E  0E00               	movlw	0
 18076  010370  6EE6               	movwf	postinc1,c
 18077                           
 18078                           ;stkvar	_g @ sp[(-60)+16]
 18079  010372  0ED4               	movlw	-44
 18080  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 18081  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 18082  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 18083  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 18084  01038C  EC38  F0D5         	call	___fleq	;wreg free
 18085  010390  A001               	btfss	btemp& (0+255),0,c
 18086  010392  D039               	goto	l12627
 18087  010394  D0BC               	goto	u11670
 18088  010396                     l12623:
 18089                           
 18090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 18091  010396  0E00               	movlw	0
 18092  010398  6EE6               	movwf	postinc1,c
 18093  01039A  0E00               	movlw	0
 18094  01039C  6EE6               	movwf	postinc1,c
 18095  01039E  0E20               	movlw	32
 18096  0103A0  6EE6               	movwf	postinc1,c
 18097  0103A2  0E41               	movlw	65
 18098  0103A4  6EE6               	movwf	postinc1,c
 18099                           
 18100                           ;stkvar	_u @ sp[(-60)+12]
 18101  0103A6  0ED0               	movlw	-48
 18102  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18103  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18104  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18105  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 18106  0103C0  EC20  F09F         	call	___flmul	;wreg free
 18107                           
 18108                           ;stkvar	_u @ sp[(-56)+12]
 18109  0103C4  0ED4               	movlw	-44
 18110  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 18111  0103CC  0ED5               	movlw	-43
 18112  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18113  0103D4  0ED6               	movlw	-42
 18114  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18115  0103DC  0ED7               	movlw	-41
 18116  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18117                           
 18118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 18119                           ;stkvar	_e @ sp[(-56)+34]
 18120  0103E4  0EEA               	movlw	-22
 18121  0103E6  50E3               	movf	plusw1,w,c
 18122  0103E8  0F01               	addlw	1
 18123  0103EA  6E01               	movwf	btemp^0,c
 18124  0103EC  0EEA               	movlw	-22
 18125  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 18126  0103F4  6A01               	clrf	btemp^0,c
 18127  0103F6  0EEB               	movlw	-21
 18128  0103F8  50E3               	movf	plusw1,w,c
 18129  0103FA  2001               	addwfc	btemp^0,w,c
 18130  0103FC  6E01               	movwf	btemp^0,c
 18131  0103FE  0EEB               	movlw	-21
 18132  010400  0060  F007  FFE3   	movff	btemp,plusw1
 18133  010406                     l12627:
 18134                           
 18135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 18136  010406  0E00               	movlw	0
 18137  010408  6EE6               	movwf	postinc1,c
 18138  01040A  0E00               	movlw	0
 18139  01040C  6EE6               	movwf	postinc1,c
 18140  01040E  0E20               	movlw	32
 18141  010410  6EE6               	movwf	postinc1,c
 18142  010412  0E41               	movlw	65
 18143  010414  6EE6               	movwf	postinc1,c
 18144                           
 18145                           ;stkvar	_u @ sp[(-60)+12]
 18146  010416  0ED0               	movlw	-48
 18147  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 18148  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 18149  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 18150  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 18151  010430  EC20  F09F         	call	___flmul	;wreg free
 18152  010434  0060  F007  FFE6   	movff	btemp,postinc1
 18153  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18154  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18155  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 18156                           
 18157                           ;stkvar	_g @ sp[(-60)+16]
 18158  01044C  0ED4               	movlw	-44
 18159  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 18160  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 18161  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 18162  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 18163  010466  EC72  F0CA         	call	___flge	;wreg free
 18164  01046A  A001               	btfss	btemp& (0+255),0,c
 18165  01046C  D032               	goto	l12633
 18166  01046E  D793               	goto	l12623
 18167  010470                     l12629:
 18168                           
 18169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 18170  010470  0E00               	movlw	0
 18171  010472  6EE6               	movwf	postinc1,c
 18172  010474  0E00               	movlw	0
 18173  010476  6EE6               	movwf	postinc1,c
 18174  010478  0E20               	movlw	32
 18175  01047A  6EE6               	movwf	postinc1,c
 18176  01047C  0E41               	movlw	65
 18177  01047E  6EE6               	movwf	postinc1,c
 18178                           
 18179                           ;stkvar	_u @ sp[(-60)+12]
 18180  010480  0ED0               	movlw	-48
 18181  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 18182  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 18183  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 18184  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 18185  01049A  EC13  F0A7         	call	___fldiv	;wreg free
 18186                           
 18187                           ;stkvar	_u @ sp[(-56)+12]
 18188  01049E  0ED4               	movlw	-44
 18189  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 18190  0104A6  0ED5               	movlw	-43
 18191  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18192  0104AE  0ED6               	movlw	-42
 18193  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18194  0104B6  0ED7               	movlw	-41
 18195  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18196                           
 18197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 18198                           ;stkvar	_e @ sp[(-56)+34]
 18199  0104BE  50E1               	movf	fsr1l,w,c
 18200  0104C0  0FEA               	addlw	-22
 18201  0104C2  6ED9               	movwf	fsr2l,c
 18202  0104C4  50E2               	movf	fsr1h,w,c
 18203  0104C6  6EDA               	movwf	fsr2h,c
 18204  0104C8  0EFF               	movlw	255
 18205  0104CA  22DA               	addwfc	fsr2h,f,c
 18206  0104CC  06DE               	decf	postinc2,f,c
 18207  0104CE  0E00               	movlw	0
 18208  0104D0  5ADD               	subwfb	postdec2,f,c
 18209  0104D2                     l12633:
 18210                           
 18211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 18212                           ;stkvar	_u @ sp[(-56)+12]
 18213  0104D2  0ED4               	movlw	-44
 18214  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18215  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18216  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18217  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18218                           
 18219                           ;stkvar	_g @ sp[(-60)+16]
 18220  0104EC  0ED4               	movlw	-44
 18221  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18222  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18223  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18224  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 18225  010506  EC72  F0CA         	call	___flge	;wreg free
 18226  01050A  A001               	btfss	btemp& (0+255),0,c
 18227  01050C  D7B1               	goto	l12629
 18228  01050E                     u11670:
 18229                           
 18230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 18231                           ;stkvar	_c @ sp[(-56)+-7]
 18232  01050E  0EC1               	movlw	-63
 18233  010510  50E3               	movf	plusw1,w,c
 18234  010512  6EE6               	movwf	postinc1,c
 18235  010514  0E00               	movlw	0
 18236  010516  6EE6               	movwf	postinc1,c
 18237  010518  EC0C  F0DA         	call	_tolower	;wreg free
 18238                           
 18239                           ;stkvar	_mode @ sp[(-56)+54]
 18240  01051C  0EFE               	movlw	-2
 18241  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 18242                           
 18243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 18244                           ;stkvar	_mode @ sp[(-56)+54]
 18245                           ;stkvar	_nmode @ sp[(-56)+55]
 18246  010524  0EFE               	movlw	-2
 18247  010526  006F FF8C  F001    	movff	plusw1,btemp
 18248  01052C  0EFF               	movlw	-1
 18249  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 18250                           
 18251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 18252                           ;stkvar	_mode @ sp[(-56)+54]
 18253  010534  0EFE               	movlw	-2
 18254  010536  006F FF8C  F001    	movff	plusw1,btemp
 18255  01053C  0E67               	movlw	103
 18256  01053E  1801               	xorwf	btemp^0,w,c
 18257  010540  A4D8               	btfss	status,2,c
 18258  010542  D025               	goto	l12651
 18259                           
 18260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 18261  010544  503C               	movf	_prec^0,w,c
 18262  010546  103D               	iorwf	(_prec+1)^0,w,c
 18263  010548  A4D8               	btfss	status,2,c
 18264  01054A  D004               	goto	l12645
 18265                           
 18266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 18267  01054C  0E00               	movlw	0
 18268  01054E  6E3D               	movwf	(_prec+1)^0,c
 18269  010550  0E01               	movlw	1
 18270  010552  6E3C               	movwf	_prec^0,c
 18271  010554                     l12645:
 18272                           
 18273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 18274  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 18275  010556  D005               	goto	u11700
 18276  010558  503D               	movf	(_prec+1)^0,w,c
 18277  01055A  E110               	bnz	l12649
 18278  01055C  043C               	decf	_prec^0,w,c
 18279  01055E  B0D8               	btfsc	status,0,c
 18280  010560  D00D               	goto	l12649
 18281  010562                     u11700:
 18282  010562  0E06               	movlw	6
 18283  010564  6E0B               	movwf	(btemp+10)^0,c
 18284  010566  0E00               	movlw	0
 18285  010568  6E0C               	movwf	(btemp+11)^0,c
 18286                           
 18287                           ;stkvar	_p @ sp[(-56)+40]
 18288  01056A  0EF0               	movlw	-16
 18289  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18290  010572  0EF1               	movlw	-15
 18291  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 18292  01057A  D00C               	goto	l12657
 18293  01057C                     l12649:
 18294                           
 18295                           ;stkvar	_p @ sp[(-56)+40]
 18296  01057C  0EF0               	movlw	-16
 18297  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 18298  010584  0EF1               	movlw	-15
 18299  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18300  01058C  D003               	goto	l12657
 18301  01058E                     l12651:
 18302                           
 18303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 18304  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 18305  010590  D7F5               	goto	l12649
 18306  010592  D7E7               	goto	u11700
 18307  010594                     l12657:
 18308                           
 18309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 18310                           ;stkvar	_mode @ sp[(-56)+54]
 18311  010594  0EFE               	movlw	-2
 18312  010596  006F FF8C  F001    	movff	plusw1,btemp
 18313  01059C  0E67               	movlw	103
 18314  01059E  1801               	xorwf	btemp^0,w,c
 18315  0105A0  A4D8               	btfss	status,2,c
 18316  0105A2  D02F               	goto	l12667
 18317                           
 18318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 18319                           ;stkvar	_e @ sp[(-56)+34]
 18320  0105A4  0EEB               	movlw	-21
 18321  0105A6  AEE3               	btfss	plusw1,7,c
 18322  0105A8  D00E               	goto	u11730
 18323  0105AA  0EEA               	movlw	-22
 18324  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 18325  0105B2  0EFC               	movlw	252
 18326  0105B4  5E01               	subwf	btemp^0,f,c
 18327  0105B6  0EEB               	movlw	-21
 18328  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 18329  0105BE  0EFF               	movlw	255
 18330  0105C0  5A01               	subwfb	btemp^0,f,c
 18331  0105C2  A0D8               	btfss	status,0,c
 18332  0105C4  D018               	goto	l12665
 18333  0105C6                     u11730:
 18334                           
 18335                           ;stkvar	_e @ sp[(-56)+34]
 18336                           ;stkvar	_p @ sp[(-56)+40]
 18337  0105C6  0EF0               	movlw	-16
 18338  0105C8  50E3               	movf	plusw1,w,c
 18339  0105CA  0FFF               	addlw	255
 18340  0105CC  6E0B               	movwf	(btemp+10)^0,c
 18341  0105CE  0EF1               	movlw	-15
 18342  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18343  0105D6  0EFF               	movlw	255
 18344  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 18345  0105DA  0EEA               	movlw	-22
 18346  0105DC  50E3               	movf	plusw1,w,c
 18347  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 18348  0105E0  500C               	movf	(btemp+11)^0,w,c
 18349  0105E2  0A80               	xorlw	128
 18350  0105E4  6E01               	movwf	btemp^0,c
 18351  0105E6  0EEB               	movlw	-21
 18352  0105E8  50E3               	movf	plusw1,w,c
 18353  0105EA  0A80               	xorlw	128
 18354  0105EC  5801               	subwfb	btemp^0,w,c
 18355  0105EE  A0D8               	btfss	status,0,c
 18356  0105F0  D002               	goto	l12665
 18357                           
 18358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 18359  0105F2  0E66               	movlw	102
 18360  0105F4  D001               	goto	L20
 18361  0105F6                     l12665:
 18362                           
 18363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 18364  0105F6  0E65               	movlw	101
 18365  0105F8                     L20:
 18366  0105F8  6E0C               	movwf	(btemp+11)^0,c
 18367                           
 18368                           ;stkvar	_nmode @ sp[(-56)+55]
 18369  0105FA  0EFF               	movlw	-1
 18370  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18371  010602                     l12667:
 18372                           
 18373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 18374                           ;stkvar	_p @ sp[(-56)+40]
 18375                           ;stkvar	_m @ sp[(-56)+48]
 18376  010602  0EF0               	movlw	-16
 18377  010604  006F FF8C  F001    	movff	plusw1,btemp
 18378  01060A  0EF8               	movlw	-8
 18379  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 18380  010612  0EF1               	movlw	-15
 18381  010614  006F FF8C  F001    	movff	plusw1,btemp
 18382  01061A  0EF9               	movlw	-7
 18383  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 18384                           
 18385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 18386                           ;stkvar	_mode @ sp[(-56)+54]
 18387  010622  0EFE               	movlw	-2
 18388  010624  006F FF8C  F001    	movff	plusw1,btemp
 18389  01062A  0E67               	movlw	103
 18390  01062C  1801               	xorwf	btemp^0,w,c
 18391  01062E  A4D8               	btfss	status,2,c
 18392  010630  D00B               	goto	u11770
 18393                           
 18394                           ;stkvar	_nmode @ sp[(-56)+55]
 18395  010632  0EFF               	movlw	-1
 18396  010634  006F FF8C  F001    	movff	plusw1,btemp
 18397  01063A  0E66               	movlw	102
 18398  01063C  1801               	xorwf	btemp^0,w,c
 18399  01063E  A4D8               	btfss	status,2,c
 18400  010640  D014               	goto	l2344
 18401                           
 18402                           ;stkvar	_e @ sp[(-56)+34]
 18403  010642  0EEB               	movlw	-21
 18404  010644  AEE3               	btfss	plusw1,7,c
 18405  010646  D011               	goto	l2344
 18406  010648                     u11770:
 18407                           
 18408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 18409                           ;stkvar	_m @ sp[(-56)+48]
 18410  010648  0EF8               	movlw	-8
 18411  01064A  50E3               	movf	plusw1,w,c
 18412  01064C  0F01               	addlw	1
 18413  01064E  6E01               	movwf	btemp^0,c
 18414  010650  0EF8               	movlw	-8
 18415  010652  0060  F007  FFE3   	movff	btemp,plusw1
 18416  010658  6A01               	clrf	btemp^0,c
 18417  01065A  0EF9               	movlw	-7
 18418  01065C  50E3               	movf	plusw1,w,c
 18419  01065E  2001               	addwfc	btemp^0,w,c
 18420  010660  6E01               	movwf	btemp^0,c
 18421  010662  0EF9               	movlw	-7
 18422  010664  0060  F007  FFE3   	movff	btemp,plusw1
 18423  01066A                     l2344:
 18424                           
 18425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 18426                           ;stkvar	_nmode @ sp[(-56)+55]
 18427  01066A  0EFF               	movlw	-1
 18428  01066C  006F FF8C  F001    	movff	plusw1,btemp
 18429  010672  0E66               	movlw	102
 18430  010674  1801               	xorwf	btemp^0,w,c
 18431  010676  A4D8               	btfss	status,2,c
 18432  010678  D03B               	goto	l12687
 18433                           
 18434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 18435                           ;stkvar	_e @ sp[(-56)+34]
 18436  01067A  0EEB               	movlw	-21
 18437  01067C  AEE3               	btfss	plusw1,7,c
 18438  01067E  D01C               	goto	l12683
 18439                           
 18440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 18441  010680  0E00               	movlw	0
 18442  010682  6E09               	movwf	(btemp+8)^0,c
 18443  010684  0E00               	movlw	0
 18444  010686  6E0A               	movwf	(btemp+9)^0,c
 18445  010688  0E80               	movlw	128
 18446  01068A  6E0B               	movwf	(btemp+10)^0,c
 18447  01068C  0E3F               	movlw	63
 18448  01068E  6E0C               	movwf	(btemp+11)^0,c
 18449                           
 18450                           ;stkvar	_u @ sp[(-56)+12]
 18451  010690  0ED4               	movlw	-44
 18452  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 18453  010698  0ED5               	movlw	-43
 18454  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18455  0106A0  0ED6               	movlw	-42
 18456  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18457  0106A8  0ED7               	movlw	-41
 18458  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18459                           
 18460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 18461                           ;stkvar	_e @ sp[(-56)+34]
 18462  0106B0  0EEA               	movlw	-22
 18463  0106B2  6AE3               	clrf	plusw1,c
 18464  0106B4  0EEB               	movlw	-21
 18465  0106B6  6AE3               	clrf	plusw1,c
 18466  0106B8                     l12683:
 18467                           
 18468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 18469                           ;stkvar	_mode @ sp[(-56)+54]
 18470  0106B8  0EFE               	movlw	-2
 18471  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 18472  0106C0  0E67               	movlw	103
 18473  0106C2  1801               	xorwf	btemp^0,w,c
 18474  0106C4  B4D8               	btfsc	status,2,c
 18475  0106C6  D014               	goto	l12687
 18476                           
 18477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 18478                           ;stkvar	_e @ sp[(-56)+34]
 18479                           ;stkvar	_m @ sp[(-56)+48]
 18480  0106C8  0EF8               	movlw	-8
 18481  0106CA  50E3               	movf	plusw1,w,c
 18482  0106CC  6E01               	movwf	btemp^0,c
 18483  0106CE  0EEA               	movlw	-22
 18484  0106D0  50E3               	movf	plusw1,w,c
 18485  0106D2  2601               	addwf	btemp^0,f,c
 18486  0106D4  0EF8               	movlw	-8
 18487  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 18488  0106DC  0EF9               	movlw	-7
 18489  0106DE  50E3               	movf	plusw1,w,c
 18490  0106E0  6E01               	movwf	btemp^0,c
 18491  0106E2  0EEB               	movlw	-21
 18492  0106E4  50E3               	movf	plusw1,w,c
 18493  0106E6  2201               	addwfc	btemp^0,f,c
 18494  0106E8  0EF9               	movlw	-7
 18495  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 18496  0106F0                     l12687:
 18497                           
 18498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 18499                           ;stkvar	_i @ sp[(-56)+36]
 18500  0106F0  0EEC               	movlw	-20
 18501  0106F2  6AE3               	clrf	plusw1,c
 18502  0106F4  0EED               	movlw	-19
 18503  0106F6  6AE3               	clrf	plusw1,c
 18504                           
 18505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 18506                           ;stkvar	_g @ sp[(-56)+16]
 18507  0106F8  0ED8               	movlw	-40
 18508  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 18509  010700  0ED9               	movlw	-39
 18510  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 18511  010708  0EDA               	movlw	-38
 18512  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18513  010710  0EDB               	movlw	-37
 18514  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 18515                           
 18516                           ;stkvar	_h @ sp[(-56)+24]
 18517  010718  0EE0               	movlw	-32
 18518  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18519  010720  0EE1               	movlw	-31
 18520  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18521  010728  0EE2               	movlw	-30
 18522  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18523  010730  0EE3               	movlw	-29
 18524  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 18525                           
 18526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 18527                           ;stkvar	_u @ sp[(-56)+12]
 18528  010738  0ED4               	movlw	-44
 18529  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 18530  010740  0ED5               	movlw	-43
 18531  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 18532  010748  0ED6               	movlw	-42
 18533  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18534  010750  0ED7               	movlw	-41
 18535  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 18536                           
 18537                           ;stkvar	_ou @ sp[(-56)+28]
 18538  010758  0EE4               	movlw	-28
 18539  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18540  010760  0EE5               	movlw	-27
 18541  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18542  010768  0EE6               	movlw	-26
 18543  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18544  010770  0EE7               	movlw	-25
 18545  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 18546                           
 18547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18548  010778  D0D6               	goto	l12703
 18549  01077A                     l12693:
 18550                           
 18551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 18552                           ;stkvar	_u @ sp[(-56)+12]
 18553  01077A  0ED4               	movlw	-44
 18554  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 18555  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 18556  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 18557  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 18558                           
 18559                           ;stkvar	_h @ sp[(-60)+24]
 18560  010794  0EDC               	movlw	-36
 18561  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 18562  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 18563  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18564  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18565  0107AE  EC13  F0A7         	call	___fldiv	;wreg free
 18566  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 18567  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18568  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18569  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 18570  0107CA  EC71  F0B2         	call	_floorf	;wreg free
 18571                           
 18572                           ;stkvar	_l @ sp[(-56)+20]
 18573  0107CE  0EDC               	movlw	-36
 18574  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 18575  0107D6  0EDD               	movlw	-35
 18576  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18577  0107DE  0EDE               	movlw	-34
 18578  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18579  0107E6  0EDF               	movlw	-33
 18580  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18581                           
 18582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 18583                           ;stkvar	_l @ sp[(-56)+20]
 18584  0107EE  0EDC               	movlw	-36
 18585  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18586  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 18587  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 18588  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 18589  010808  ECB9  F0C9         	call	___fltol	;wreg free
 18590  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 18591  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 18592                           
 18593                           ;stkvar	_d @ sp[(-56)+44]
 18594  010818  0EF4               	movlw	-12
 18595  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18596  010820  0EF5               	movlw	-11
 18597  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 18598                           
 18599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 18600                           ;stkvar	_u @ sp[(-56)+12]
 18601  010828  0ED4               	movlw	-44
 18602  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 18603  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 18604  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 18605  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 18606                           
 18607                           ;stkvar	_l @ sp[(-60)+20]
 18608  010842  0ED8               	movlw	-40
 18609  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 18610  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 18611  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 18612  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 18613  01085C  EC20  F09F         	call	___flmul	;wreg free
 18614  010860  0060  F007  FFE6   	movff	btemp,postinc1
 18615  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18616  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18617  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 18618                           
 18619                           ;stkvar	_h @ sp[(-60)+24]
 18620  010878  0EDC               	movlw	-36
 18621  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 18622  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 18623  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 18624  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 18625  010892  EC46  F0DF         	call	___flsub	;wreg free
 18626                           
 18627                           ;stkvar	_h @ sp[(-56)+24]
 18628  010896  0EE0               	movlw	-32
 18629  010898  0060  F007  FFE3   	movff	btemp,plusw1
 18630  01089E  0EE1               	movlw	-31
 18631  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18632  0108A6  0EE2               	movlw	-30
 18633  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18634  0108AE  0EE3               	movlw	-29
 18635  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 18636                           
 18637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 18638  0108B6  0E00               	movlw	0
 18639  0108B8  6EE6               	movwf	postinc1,c
 18640  0108BA  0E00               	movlw	0
 18641  0108BC  6EE6               	movwf	postinc1,c
 18642  0108BE  0E20               	movlw	32
 18643  0108C0  6EE6               	movwf	postinc1,c
 18644  0108C2  0E41               	movlw	65
 18645  0108C4  6EE6               	movwf	postinc1,c
 18646                           
 18647                           ;stkvar	_u @ sp[(-60)+12]
 18648  0108C6  0ED0               	movlw	-48
 18649  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18650  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18651  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18652  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18653  0108E0  EC13  F0A7         	call	___fldiv	;wreg free
 18654                           
 18655                           ;stkvar	_u @ sp[(-56)+12]
 18656  0108E4  0ED4               	movlw	-44
 18657  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 18658  0108EC  0ED5               	movlw	-43
 18659  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18660  0108F4  0ED6               	movlw	-42
 18661  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18662  0108FC  0ED7               	movlw	-41
 18663  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18664                           
 18665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 18666                           ;stkvar	_i @ sp[(-56)+36]
 18667  010904  0EEC               	movlw	-20
 18668  010906  50E3               	movf	plusw1,w,c
 18669  010908  0F01               	addlw	1
 18670  01090A  6E01               	movwf	btemp^0,c
 18671  01090C  0EEC               	movlw	-20
 18672  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 18673  010914  6A01               	clrf	btemp^0,c
 18674  010916  0EED               	movlw	-19
 18675  010918  50E3               	movf	plusw1,w,c
 18676  01091A  2001               	addwfc	btemp^0,w,c
 18677  01091C  6E01               	movwf	btemp^0,c
 18678  01091E  0EED               	movlw	-19
 18679  010920  0060  F007  FFE3   	movff	btemp,plusw1
 18680  010926                     l12703:
 18681                           
 18682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18683                           ;stkvar	_m @ sp[(-56)+48]
 18684                           ;stkvar	_i @ sp[(-56)+36]
 18685  010926  50E1               	movf	fsr1l,w,c
 18686  010928  0FEC               	addlw	-20
 18687  01092A  6ED9               	movwf	fsr2l,c
 18688  01092C  50E2               	movf	fsr1h,w,c
 18689  01092E  6EDA               	movwf	fsr2h,c
 18690  010930  0EFF               	movlw	255
 18691  010932  22DA               	addwfc	fsr2h,f,c
 18692  010934  0EF8               	movlw	-8
 18693  010936  50E3               	movf	plusw1,w,c
 18694  010938  5CDE               	subwf	postinc2,w,c
 18695  01093A  50DE               	movf	postinc2,w,c
 18696  01093C  0A80               	xorlw	128
 18697  01093E  6E01               	movwf	btemp^0,c
 18698  010940  0EF9               	movlw	-7
 18699  010942  50E3               	movf	plusw1,w,c
 18700  010944  0A80               	xorlw	128
 18701  010946  5801               	subwfb	btemp^0,w,c
 18702  010948  A0D8               	btfss	status,0,c
 18703  01094A  D717               	goto	l12693
 18704                           
 18705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 18706  01094C  0E00               	movlw	0
 18707  01094E  6EE6               	movwf	postinc1,c
 18708  010950  0E00               	movlw	0
 18709  010952  6EE6               	movwf	postinc1,c
 18710  010954  0EA0               	movlw	160
 18711  010956  6EE6               	movwf	postinc1,c
 18712  010958  0E40               	movlw	64
 18713  01095A  6EE6               	movwf	postinc1,c
 18714                           
 18715                           ;stkvar	_u @ sp[(-60)+12]
 18716  01095C  0ED0               	movlw	-48
 18717  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 18718  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 18719  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 18720  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 18721  010976  EC20  F09F         	call	___flmul	;wreg free
 18722                           
 18723                           ;stkvar	_l @ sp[(-56)+20]
 18724  01097A  0EDC               	movlw	-36
 18725  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 18726  010982  0EDD               	movlw	-35
 18727  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18728  01098A  0EDE               	movlw	-34
 18729  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18730  010992  0EDF               	movlw	-33
 18731  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 18732                           
 18733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 18734                           ;stkvar	_l @ sp[(-56)+20]
 18735  01099A  0EDC               	movlw	-36
 18736  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 18737  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18738  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18739  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18740                           
 18741                           ;stkvar	_h @ sp[(-60)+24]
 18742  0109B4  0EDC               	movlw	-36
 18743  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18744  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18745  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18746  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18747  0109CE  EC72  F0CA         	call	___flge	;wreg free
 18748  0109D2  A001               	btfss	btemp& (0+255),0,c
 18749  0109D4  D021               	goto	u11840
 18750                           
 18751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 18752                           ;stkvar	_l @ sp[(-56)+20]
 18753                           
 18754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 18755                           
 18756                           ;stkvar	_l @ sp[(-56)+20]
 18757                           
 18758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 18759  0109D6  0EDC               	movlw	-36
 18760  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18761  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18762  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18763  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18764                           
 18765                           ;stkvar	_h @ sp[(-60)+24]
 18766  0109F0  0EDC               	movlw	-36
 18767  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 18768  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 18769  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 18770  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 18771  010A0A  EC38  F0D5         	call	___fleq	;wreg free
 18772  010A0E  A001               	btfss	btemp& (0+255),0,c
 18773  010A10  D01B               	goto	l12717
 18774                           
 18775                           ;stkvar	_d @ sp[(-56)+44]
 18776  010A12  0EF4               	movlw	-12
 18777  010A14  B0E3               	btfsc	plusw1,0,c
 18778  010A16  D018               	goto	l12717
 18779  010A18                     u11840:
 18780                           
 18781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 18782  010A18  0E00               	movlw	0
 18783  010A1A  6E09               	movwf	(btemp+8)^0,c
 18784  010A1C  0E00               	movlw	0
 18785  010A1E  6E0A               	movwf	(btemp+9)^0,c
 18786  010A20  0E00               	movlw	0
 18787  010A22  6E0B               	movwf	(btemp+10)^0,c
 18788  010A24  0E00               	movlw	0
 18789  010A26  6E0C               	movwf	(btemp+11)^0,c
 18790                           
 18791                           ;stkvar	_l @ sp[(-56)+20]
 18792  010A28  0EDC               	movlw	-36
 18793  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18794  010A30  0EDD               	movlw	-35
 18795  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18796  010A38  0EDE               	movlw	-34
 18797  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18798  010A40  0EDF               	movlw	-33
 18799  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 18800  010A48                     l12717:
 18801                           
 18802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 18803                           ;stkvar	_l @ sp[(-56)+20]
 18804  010A48  0EDC               	movlw	-36
 18805  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 18806  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 18807  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 18808  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18809                           
 18810                           ;stkvar	_g @ sp[(-60)+16]
 18811  010A62  0ED4               	movlw	-44
 18812  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 18813  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 18814  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 18815  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 18816  010A7C  EC35  F0A3         	call	___fladd	;wreg free
 18817                           
 18818                           ;stkvar	_h @ sp[(-56)+24]
 18819  010A80  0EE0               	movlw	-32
 18820  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 18821  010A88  0EE1               	movlw	-31
 18822  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18823  010A90  0EE2               	movlw	-30
 18824  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18825  010A98  0EE3               	movlw	-29
 18826  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 18827                           
 18828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 18829                           ;stkvar	_ou @ sp[(-56)+28]
 18830  010AA0  0EE4               	movlw	-28
 18831  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 18832  010AA8  0EE5               	movlw	-27
 18833  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18834  010AB0  0EE6               	movlw	-26
 18835  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18836  010AB8  0EE7               	movlw	-25
 18837  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18838                           
 18839                           ;stkvar	_u @ sp[(-56)+12]
 18840  010AC0  0ED4               	movlw	-44
 18841  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18842  010AC8  0ED5               	movlw	-43
 18843  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18844  010AD0  0ED6               	movlw	-42
 18845  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18846  010AD8  0ED7               	movlw	-41
 18847  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18848                           
 18849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 18850                           ;stkvar	_nmode @ sp[(-56)+55]
 18851  010AE0  0EFF               	movlw	-1
 18852  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 18853  010AE8  0E65               	movlw	101
 18854  010AEA  1801               	xorwf	btemp^0,w,c
 18855  010AEC  B4D8               	btfsc	status,2,c
 18856  010AEE  D011               	goto	l12725
 18857                           
 18858                           ;stkvar	_e @ sp[(-56)+34]
 18859                           ;stkvar	_ne @ sp[(-56)+46]
 18860  010AF0  0EEA               	movlw	-22
 18861  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 18862  010AF8  0EF6               	movlw	-10
 18863  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 18864  010B00  0EEB               	movlw	-21
 18865  010B02  006F FF8C  F001    	movff	plusw1,btemp
 18866  010B08  0EF7               	movlw	-9
 18867  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 18868  010B10  D004               	goto	l2359
 18869  010B12                     l12725:
 18870                           
 18871                           ;stkvar	_ne @ sp[(-56)+46]
 18872  010B12  0EF6               	movlw	-10
 18873  010B14  6AE3               	clrf	plusw1,c
 18874  010B16  0EF7               	movlw	-9
 18875  010B18  6AE3               	clrf	plusw1,c
 18876  010B1A                     l2359:
 18877                           
 18878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 18879                           ;stkvar	_pp @ sp[(-56)+50]
 18880  010B1A  0EFA               	movlw	-6
 18881  010B1C  6AE3               	clrf	plusw1,c
 18882  010B1E  0EFB               	movlw	-5
 18883  010B20  6AE3               	clrf	plusw1,c
 18884                           
 18885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 18886                           ;stkvar	_t @ sp[(-56)+52]
 18887  010B22  0EFC               	movlw	-4
 18888  010B24  6AE3               	clrf	plusw1,c
 18889  010B26  0EFD               	movlw	-3
 18890  010B28  6AE3               	clrf	plusw1,c
 18891                           
 18892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 18893                           ;stkvar	_i @ sp[(-56)+36]
 18894  010B2A  0EEC               	movlw	-20
 18895  010B2C  6AE3               	clrf	plusw1,c
 18896  010B2E  0EED               	movlw	-19
 18897  010B30  6AE3               	clrf	plusw1,c
 18898                           
 18899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18900  010B32  D1B7               	goto	l12777
 18901  010B34                     l12727:
 18902                           
 18903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 18904                           ;stkvar	_u @ sp[(-56)+12]
 18905  010B34  0ED4               	movlw	-44
 18906  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 18907  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18908  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 18909  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 18910                           
 18911                           ;stkvar	_h @ sp[(-60)+24]
 18912  010B4E  0EDC               	movlw	-36
 18913  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 18914  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 18915  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18916  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 18917  010B68  EC13  F0A7         	call	___fldiv	;wreg free
 18918  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 18919  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18920  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18921  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 18922  010B84  EC71  F0B2         	call	_floorf	;wreg free
 18923                           
 18924                           ;stkvar	_l @ sp[(-56)+20]
 18925  010B88  0EDC               	movlw	-36
 18926  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 18927  010B90  0EDD               	movlw	-35
 18928  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18929  010B98  0EDE               	movlw	-34
 18930  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18931  010BA0  0EDF               	movlw	-33
 18932  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 18933                           
 18934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 18935                           ;stkvar	_l @ sp[(-56)+20]
 18936  010BA8  0EDC               	movlw	-36
 18937  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 18938  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 18939  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 18940  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 18941  010BC2  ECB9  F0C9         	call	___fltol	;wreg free
 18942  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 18943  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 18944                           
 18945                           ;stkvar	_d @ sp[(-56)+44]
 18946  010BD2  0EF4               	movlw	-12
 18947  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18948  010BDA  0EF5               	movlw	-11
 18949  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18950                           
 18951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 18952  010BE2  B83E               	btfsc	_flags^0,4,c
 18953  010BE4  D026               	goto	l12741
 18954                           
 18955                           ;stkvar	_d @ sp[(-56)+44]
 18956  010BE6  0EF4               	movlw	-12
 18957  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 18958  010BEE  0EF5               	movlw	-11
 18959  010BF0  50E3               	movf	plusw1,w,c
 18960  010BF2  1001               	iorwf	btemp^0,w,c
 18961  010BF4  A4D8               	btfss	status,2,c
 18962  010BF6  D01D               	goto	l12741
 18963                           
 18964                           ;stkvar	_mode @ sp[(-56)+54]
 18965  010BF8  0EFE               	movlw	-2
 18966  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 18967  010C00  0E67               	movlw	103
 18968  010C02  1801               	xorwf	btemp^0,w,c
 18969  010C04  A4D8               	btfss	status,2,c
 18970  010C06  D015               	goto	l12741
 18971                           
 18972                           ;stkvar	_ne @ sp[(-56)+46]
 18973  010C08  0EF7               	movlw	-9
 18974  010C0A  AEE3               	btfss	plusw1,7,c
 18975  010C0C  D012               	goto	l12741
 18976                           
 18977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 18978                           ;stkvar	_t @ sp[(-56)+52]
 18979  010C0E  0EFC               	movlw	-4
 18980  010C10  50E3               	movf	plusw1,w,c
 18981  010C12  0F01               	addlw	1
 18982  010C14  6E01               	movwf	btemp^0,c
 18983  010C16  0EFC               	movlw	-4
 18984  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 18985  010C1E  6A01               	clrf	btemp^0,c
 18986  010C20  0EFD               	movlw	-3
 18987  010C22  50E3               	movf	plusw1,w,c
 18988  010C24  2001               	addwfc	btemp^0,w,c
 18989  010C26  6E01               	movwf	btemp^0,c
 18990  010C28  0EFD               	movlw	-3
 18991  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18992                           
 18993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18994  010C30  D0AF               	goto	l12769
 18995  010C32                     l12741:
 18996                           
 18997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18998                           ;stkvar	_pp @ sp[(-56)+50]
 18999  010C32  0EFA               	movlw	-6
 19000  010C34  006F FF8C  F001    	movff	plusw1,btemp
 19001  010C3A  0EFB               	movlw	-5
 19002  010C3C  50E3               	movf	plusw1,w,c
 19003  010C3E  1001               	iorwf	btemp^0,w,c
 19004  010C40  A4D8               	btfss	status,2,c
 19005  010C42  D070               	goto	l12761
 19006                           
 19007                           ;stkvar	_ne @ sp[(-56)+46]
 19008  010C44  0EF7               	movlw	-9
 19009  010C46  AEE3               	btfss	plusw1,7,c
 19010  010C48  D06D               	goto	l12761
 19011                           
 19012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 19013                           ;stkvar	_n @ sp[(-56)+32]
 19014  010C4A  0EE8               	movlw	-24
 19015  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19016  010C52  0EE9               	movlw	-23
 19017  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 19018  010C5A  0E97               	movlw	low _dbuf
 19019  010C5C  240B               	addwf	(btemp+10)^0,w,c
 19020  010C5E  6ED9               	movwf	fsr2l,c
 19021  010C60  0E02               	movlw	high _dbuf
 19022  010C62  200C               	addwfc	(btemp+11)^0,w,c
 19023  010C64  6EDA               	movwf	fsr2h,c
 19024  010C66  0E2E               	movlw	46
 19025  010C68  6EDF               	movwf	indf2,c
 19026                           
 19027                           ;stkvar	_n @ sp[(-56)+32]
 19028  010C6A  0EE8               	movlw	-24
 19029  010C6C  50E3               	movf	plusw1,w,c
 19030  010C6E  0F01               	addlw	1
 19031  010C70  6E01               	movwf	btemp^0,c
 19032  010C72  0EE8               	movlw	-24
 19033  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 19034  010C7A  6A01               	clrf	btemp^0,c
 19035  010C7C  0EE9               	movlw	-23
 19036  010C7E  50E3               	movf	plusw1,w,c
 19037  010C80  2001               	addwfc	btemp^0,w,c
 19038  010C82  6E01               	movwf	btemp^0,c
 19039  010C84  0EE9               	movlw	-23
 19040  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 19041                           
 19042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 19043                           ;stkvar	_w @ sp[(-56)+38]
 19044  010C8C  50E1               	movf	fsr1l,w,c
 19045  010C8E  0FEE               	addlw	-18
 19046  010C90  6ED9               	movwf	fsr2l,c
 19047  010C92  50E2               	movf	fsr1h,w,c
 19048  010C94  6EDA               	movwf	fsr2h,c
 19049  010C96  0EFF               	movlw	255
 19050  010C98  22DA               	addwfc	fsr2h,f,c
 19051  010C9A  06DE               	decf	postinc2,f,c
 19052  010C9C  0E00               	movlw	0
 19053  010C9E  5ADD               	subwfb	postdec2,f,c
 19054                           
 19055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 19056  010CA0  0E01               	movlw	1
 19057  010CA2  6E0B               	movwf	(btemp+10)^0,c
 19058  010CA4  0E00               	movlw	0
 19059  010CA6  6E0C               	movwf	(btemp+11)^0,c
 19060                           
 19061                           ;stkvar	_pp @ sp[(-56)+50]
 19062  010CA8  0EFA               	movlw	-6
 19063  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19064  010CB0  0EFB               	movlw	-5
 19065  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19066  010CB8  D035               	goto	l12761
 19067  010CBA                     l12753:
 19068                           
 19069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 19070                           ;stkvar	_n @ sp[(-56)+32]
 19071  010CBA  0EE8               	movlw	-24
 19072  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19073  010CC2  0EE9               	movlw	-23
 19074  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19075  010CCA  0E97               	movlw	low _dbuf
 19076  010CCC  240B               	addwf	(btemp+10)^0,w,c
 19077  010CCE  6ED9               	movwf	fsr2l,c
 19078  010CD0  0E02               	movlw	high _dbuf
 19079  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 19080  010CD4  6EDA               	movwf	fsr2h,c
 19081  010CD6  0E30               	movlw	48
 19082  010CD8  6EDF               	movwf	indf2,c
 19083                           
 19084                           ;stkvar	_n @ sp[(-56)+32]
 19085  010CDA  0EE8               	movlw	-24
 19086  010CDC  50E3               	movf	plusw1,w,c
 19087  010CDE  0F01               	addlw	1
 19088  010CE0  6E01               	movwf	btemp^0,c
 19089  010CE2  0EE8               	movlw	-24
 19090  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 19091  010CEA  6A01               	clrf	btemp^0,c
 19092  010CEC  0EE9               	movlw	-23
 19093  010CEE  50E3               	movf	plusw1,w,c
 19094  010CF0  2001               	addwfc	btemp^0,w,c
 19095  010CF2  6E01               	movwf	btemp^0,c
 19096  010CF4  0EE9               	movlw	-23
 19097  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 19098                           
 19099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 19100                           ;stkvar	_w @ sp[(-56)+38]
 19101  010CFC  50E1               	movf	fsr1l,w,c
 19102  010CFE  0FEE               	addlw	-18
 19103  010D00  6ED9               	movwf	fsr2l,c
 19104  010D02  50E2               	movf	fsr1h,w,c
 19105  010D04  6EDA               	movwf	fsr2h,c
 19106  010D06  0EFF               	movlw	255
 19107  010D08  22DA               	addwfc	fsr2h,f,c
 19108  010D0A  06DE               	decf	postinc2,f,c
 19109  010D0C  0E00               	movlw	0
 19110  010D0E  5ADD               	subwfb	postdec2,f,c
 19111                           
 19112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 19113                           ;stkvar	_t @ sp[(-56)+52]
 19114  010D10  50E1               	movf	fsr1l,w,c
 19115  010D12  0FFC               	addlw	-4
 19116  010D14  6ED9               	movwf	fsr2l,c
 19117  010D16  50E2               	movf	fsr1h,w,c
 19118  010D18  6EDA               	movwf	fsr2h,c
 19119  010D1A  0EFF               	movlw	255
 19120  010D1C  22DA               	addwfc	fsr2h,f,c
 19121  010D1E  06DE               	decf	postinc2,f,c
 19122  010D20  0E00               	movlw	0
 19123  010D22  5ADD               	subwfb	postdec2,f,c
 19124  010D24                     l12761:
 19125                           
 19126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 19127                           ;stkvar	_t @ sp[(-56)+52]
 19128  010D24  0EFC               	movlw	-4
 19129  010D26  006F FF8C  F001    	movff	plusw1,btemp
 19130  010D2C  0EFD               	movlw	-3
 19131  010D2E  50E3               	movf	plusw1,w,c
 19132  010D30  1001               	iorwf	btemp^0,w,c
 19133  010D32  A4D8               	btfss	status,2,c
 19134  010D34  D7C2               	goto	l12753
 19135                           
 19136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 19137                           ;stkvar	_n @ sp[(-56)+32]
 19138  010D36  0EE8               	movlw	-24
 19139  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 19140  010D3E  0EE9               	movlw	-23
 19141  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 19142  010D46  0E97               	movlw	low _dbuf
 19143  010D48  240B               	addwf	(btemp+10)^0,w,c
 19144  010D4A  6ED9               	movwf	fsr2l,c
 19145  010D4C  0E02               	movlw	high _dbuf
 19146  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 19147  010D50  6EDA               	movwf	fsr2h,c
 19148                           
 19149                           ;stkvar	_d @ sp[(-56)+44]
 19150  010D52  0EF4               	movlw	-12
 19151  010D54  50E3               	movf	plusw1,w,c
 19152  010D56  0F30               	addlw	48
 19153  010D58  6EDF               	movwf	indf2,c
 19154                           
 19155                           ;stkvar	_n @ sp[(-56)+32]
 19156  010D5A  0EE8               	movlw	-24
 19157  010D5C  50E3               	movf	plusw1,w,c
 19158  010D5E  0F01               	addlw	1
 19159  010D60  6E01               	movwf	btemp^0,c
 19160  010D62  0EE8               	movlw	-24
 19161  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 19162  010D6A  6A01               	clrf	btemp^0,c
 19163  010D6C  0EE9               	movlw	-23
 19164  010D6E  50E3               	movf	plusw1,w,c
 19165  010D70  2001               	addwfc	btemp^0,w,c
 19166  010D72  6E01               	movwf	btemp^0,c
 19167  010D74  0EE9               	movlw	-23
 19168  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 19169                           
 19170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 19171                           ;stkvar	_w @ sp[(-56)+38]
 19172  010D7C  50E1               	movf	fsr1l,w,c
 19173  010D7E  0FEE               	addlw	-18
 19174  010D80  6ED9               	movwf	fsr2l,c
 19175  010D82  50E2               	movf	fsr1h,w,c
 19176  010D84  6EDA               	movwf	fsr2h,c
 19177  010D86  0EFF               	movlw	255
 19178  010D88  22DA               	addwfc	fsr2h,f,c
 19179  010D8A  06DE               	decf	postinc2,f,c
 19180  010D8C  0E00               	movlw	0
 19181  010D8E  5ADD               	subwfb	postdec2,f,c
 19182  010D90                     l12769:
 19183                           
 19184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 19185                           ;stkvar	_u @ sp[(-56)+12]
 19186  010D90  0ED4               	movlw	-44
 19187  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 19188  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 19189  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 19190  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 19191                           
 19192                           ;stkvar	_l @ sp[(-60)+20]
 19193  010DAA  0ED8               	movlw	-40
 19194  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 19195  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 19196  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 19197  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 19198  010DC4  EC20  F09F         	call	___flmul	;wreg free
 19199  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 19200  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19201  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19202  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 19203                           
 19204                           ;stkvar	_h @ sp[(-60)+24]
 19205  010DE0  0EDC               	movlw	-36
 19206  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19207  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19208  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19209  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19210  010DFA  EC46  F0DF         	call	___flsub	;wreg free
 19211                           
 19212                           ;stkvar	_h @ sp[(-56)+24]
 19213  010DFE  0EE0               	movlw	-32
 19214  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 19215  010E06  0EE1               	movlw	-31
 19216  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19217  010E0E  0EE2               	movlw	-30
 19218  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19219  010E16  0EE3               	movlw	-29
 19220  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 19221                           
 19222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 19223  010E1E  0E00               	movlw	0
 19224  010E20  6EE6               	movwf	postinc1,c
 19225  010E22  0E00               	movlw	0
 19226  010E24  6EE6               	movwf	postinc1,c
 19227  010E26  0E20               	movlw	32
 19228  010E28  6EE6               	movwf	postinc1,c
 19229  010E2A  0E41               	movlw	65
 19230  010E2C  6EE6               	movwf	postinc1,c
 19231                           
 19232                           ;stkvar	_u @ sp[(-60)+12]
 19233  010E2E  0ED0               	movlw	-48
 19234  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 19235  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 19236  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 19237  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 19238  010E48  EC13  F0A7         	call	___fldiv	;wreg free
 19239                           
 19240                           ;stkvar	_u @ sp[(-56)+12]
 19241  010E4C  0ED4               	movlw	-44
 19242  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 19243  010E54  0ED5               	movlw	-43
 19244  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19245  010E5C  0ED6               	movlw	-42
 19246  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19247  010E64  0ED7               	movlw	-41
 19248  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 19249                           
 19250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 19251                           ;stkvar	_ne @ sp[(-56)+46]
 19252  010E6C  50E1               	movf	fsr1l,w,c
 19253  010E6E  0FF6               	addlw	-10
 19254  010E70  6ED9               	movwf	fsr2l,c
 19255  010E72  50E2               	movf	fsr1h,w,c
 19256  010E74  6EDA               	movwf	fsr2h,c
 19257  010E76  0EFF               	movlw	255
 19258  010E78  22DA               	addwfc	fsr2h,f,c
 19259  010E7A  06DE               	decf	postinc2,f,c
 19260  010E7C  0E00               	movlw	0
 19261  010E7E  5ADD               	subwfb	postdec2,f,c
 19262                           
 19263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 19264                           ;stkvar	_i @ sp[(-56)+36]
 19265  010E80  0EEC               	movlw	-20
 19266  010E82  50E3               	movf	plusw1,w,c
 19267  010E84  0F01               	addlw	1
 19268  010E86  6E01               	movwf	btemp^0,c
 19269  010E88  0EEC               	movlw	-20
 19270  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 19271  010E90  6A01               	clrf	btemp^0,c
 19272  010E92  0EED               	movlw	-19
 19273  010E94  50E3               	movf	plusw1,w,c
 19274  010E96  2001               	addwfc	btemp^0,w,c
 19275  010E98  6E01               	movwf	btemp^0,c
 19276  010E9A  0EED               	movlw	-19
 19277  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 19278  010EA2                     l12777:
 19279                           
 19280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19281                           ;stkvar	_m @ sp[(-56)+48]
 19282                           ;stkvar	_i @ sp[(-56)+36]
 19283  010EA2  50E1               	movf	fsr1l,w,c
 19284  010EA4  0FEC               	addlw	-20
 19285  010EA6  6ED9               	movwf	fsr2l,c
 19286  010EA8  50E2               	movf	fsr1h,w,c
 19287  010EAA  6EDA               	movwf	fsr2h,c
 19288  010EAC  0EFF               	movlw	255
 19289  010EAE  22DA               	addwfc	fsr2h,f,c
 19290  010EB0  0EF8               	movlw	-8
 19291  010EB2  50E3               	movf	plusw1,w,c
 19292  010EB4  5CDE               	subwf	postinc2,w,c
 19293  010EB6  50DE               	movf	postinc2,w,c
 19294  010EB8  0A80               	xorlw	128
 19295  010EBA  6E01               	movwf	btemp^0,c
 19296  010EBC  0EF9               	movlw	-7
 19297  010EBE  50E3               	movf	plusw1,w,c
 19298  010EC0  0A80               	xorlw	128
 19299  010EC2  5801               	subwfb	btemp^0,w,c
 19300  010EC4  B0D8               	btfsc	status,0,c
 19301  010EC6  D00E               	goto	u11940
 19302                           
 19303                           ;stkvar	_n @ sp[(-56)+32]
 19304  010EC8  0EE9               	movlw	-23
 19305  010ECA  BEE3               	btfsc	plusw1,7,c
 19306  010ECC  D633               	goto	l12727
 19307  010ECE  0EE9               	movlw	-23
 19308  010ED0  50E3               	movf	plusw1,w,c
 19309  010ED2  E108               	bnz	u11940
 19310  010ED4  0EE8               	movlw	-24
 19311  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 19312  010EDC  0E4B               	movlw	75
 19313  010EDE  5E01               	subwf	btemp^0,f,c
 19314  010EE0  A0D8               	btfss	status,0,c
 19315  010EE2  D628               	goto	l12727
 19316  010EE4                     u11940:
 19317                           
 19318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 19319                           ;stkvar	_pp @ sp[(-56)+50]
 19320  010EE4  0EFA               	movlw	-6
 19321  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 19322  010EEC  0EFB               	movlw	-5
 19323  010EEE  50E3               	movf	plusw1,w,c
 19324  010EF0  1001               	iorwf	btemp^0,w,c
 19325  010EF2  B4D8               	btfsc	status,2,c
 19326  010EF4  A83E               	btfss	_flags^0,4,c
 19327  010EF6  D021               	goto	l12789
 19328                           
 19329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 19330                           ;stkvar	_n @ sp[(-56)+32]
 19331  010EF8  0EE8               	movlw	-24
 19332  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19333  010F00  0EE9               	movlw	-23
 19334  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 19335  010F08  0E97               	movlw	low _dbuf
 19336  010F0A  240B               	addwf	(btemp+10)^0,w,c
 19337  010F0C  6ED9               	movwf	fsr2l,c
 19338  010F0E  0E02               	movlw	high _dbuf
 19339  010F10  200C               	addwfc	(btemp+11)^0,w,c
 19340  010F12  6EDA               	movwf	fsr2h,c
 19341  010F14  0E2E               	movlw	46
 19342  010F16  6EDF               	movwf	indf2,c
 19343                           
 19344                           ;stkvar	_n @ sp[(-56)+32]
 19345  010F18  0EE8               	movlw	-24
 19346  010F1A  50E3               	movf	plusw1,w,c
 19347  010F1C  0F01               	addlw	1
 19348  010F1E  6E01               	movwf	btemp^0,c
 19349  010F20  0EE8               	movlw	-24
 19350  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 19351  010F28  6A01               	clrf	btemp^0,c
 19352  010F2A  0EE9               	movlw	-23
 19353  010F2C  50E3               	movf	plusw1,w,c
 19354  010F2E  2001               	addwfc	btemp^0,w,c
 19355  010F30  6E01               	movwf	btemp^0,c
 19356  010F32  0EE9               	movlw	-23
 19357  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 19358  010F3A                     l12789:
 19359                           
 19360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 19361                           ;stkvar	_n @ sp[(-56)+32]
 19362  010F3A  0EE8               	movlw	-24
 19363  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19364  010F42  0EE9               	movlw	-23
 19365  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 19366  010F4A  0E97               	movlw	low _dbuf
 19367  010F4C  240B               	addwf	(btemp+10)^0,w,c
 19368  010F4E  6ED9               	movwf	fsr2l,c
 19369  010F50  0E02               	movlw	high _dbuf
 19370  010F52  200C               	addwfc	(btemp+11)^0,w,c
 19371  010F54  6EDA               	movwf	fsr2h,c
 19372  010F56  0E00               	movlw	0
 19373  010F58  6EDF               	movwf	indf2,c
 19374                           
 19375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 19376                           ;stkvar	_nmode @ sp[(-56)+55]
 19377  010F5A  0EFF               	movlw	-1
 19378  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 19379  010F62  0E65               	movlw	101
 19380  010F64  1801               	xorwf	btemp^0,w,c
 19381  010F66  A4D8               	btfss	status,2,c
 19382  010F68  EF16  F081         	goto	l12593
 19383                           
 19384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 19385  010F6C  0E4F               	movlw	79
 19386  010F6E  6E0B               	movwf	(btemp+10)^0,c
 19387  010F70  0E00               	movlw	0
 19388  010F72  6E0C               	movwf	(btemp+11)^0,c
 19389                           
 19390                           ;stkvar	_i @ sp[(-56)+36]
 19391  010F74  0EEC               	movlw	-20
 19392  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19393  010F7C  0EED               	movlw	-19
 19394  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19395                           
 19396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 19397                           ;stkvar	_i @ sp[(-56)+36]
 19398  010F84  0EEC               	movlw	-20
 19399  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 19400  010F8C  0EED               	movlw	-19
 19401  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19402  010F94  0E97               	movlw	low _dbuf
 19403  010F96  240B               	addwf	(btemp+10)^0,w,c
 19404  010F98  6ED9               	movwf	fsr2l,c
 19405  010F9A  0E02               	movlw	high _dbuf
 19406  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 19407  010F9E  6EDA               	movwf	fsr2h,c
 19408  010FA0  0E00               	movlw	0
 19409  010FA2  6EDF               	movwf	indf2,c
 19410                           
 19411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 19412                           ;stkvar	_sign @ sp[(-56)+42]
 19413  010FA4  0EF2               	movlw	-14
 19414  010FA6  6AE3               	clrf	plusw1,c
 19415  010FA8  0EF3               	movlw	-13
 19416  010FAA  6AE3               	clrf	plusw1,c
 19417                           
 19418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 19419                           ;stkvar	_e @ sp[(-56)+34]
 19420  010FAC  0EEB               	movlw	-21
 19421  010FAE  AEE3               	btfss	plusw1,7,c
 19422  010FB0  D012               	goto	l12803
 19423                           
 19424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 19425  010FB2  0E01               	movlw	1
 19426  010FB4  6E0B               	movwf	(btemp+10)^0,c
 19427  010FB6  0E00               	movlw	0
 19428  010FB8  6E0C               	movwf	(btemp+11)^0,c
 19429                           
 19430                           ;stkvar	_sign @ sp[(-56)+42]
 19431  010FBA  0EF2               	movlw	-14
 19432  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19433  010FC2  0EF3               	movlw	-13
 19434  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19435                           
 19436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 19437                           ;stkvar	_e @ sp[(-56)+34]
 19438                           ;stkvar	_e @ sp[(-56)+34]
 19439  010FCA  0EEA               	movlw	-22
 19440  010FCC  6CE3               	negf	plusw1,c
 19441  010FCE  0EEB               	movlw	-21
 19442  010FD0  1EE3               	comf	plusw1,f,c
 19443  010FD2  B0D8               	btfsc	status,0,c
 19444  010FD4  2AE3               	incf	plusw1,f,c
 19445  010FD6                     l12803:
 19446                           
 19447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 19448  010FD6  0E02               	movlw	2
 19449  010FD8  6E0B               	movwf	(btemp+10)^0,c
 19450  010FDA  0E00               	movlw	0
 19451  010FDC  6E0C               	movwf	(btemp+11)^0,c
 19452                           
 19453                           ;stkvar	_p @ sp[(-56)+40]
 19454  010FDE  0EF0               	movlw	-16
 19455  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19456  010FE6  0EF1               	movlw	-15
 19457  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19458                           
 19459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19460  010FEE  D051               	goto	l12815
 19461  010FF0                     l12805:
 19462                           
 19463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 19464                           ;stkvar	_i @ sp[(-56)+36]
 19465  010FF0  50E1               	movf	fsr1l,w,c
 19466  010FF2  0FEC               	addlw	-20
 19467  010FF4  6ED9               	movwf	fsr2l,c
 19468  010FF6  50E2               	movf	fsr1h,w,c
 19469  010FF8  6EDA               	movwf	fsr2h,c
 19470  010FFA  0EFF               	movlw	255
 19471  010FFC  22DA               	addwfc	fsr2h,f,c
 19472  010FFE  06DE               	decf	postinc2,f,c
 19473  011000  0E00               	movlw	0
 19474  011002  5ADD               	subwfb	postdec2,f,c
 19475                           
 19476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 19477                           ;stkvar	_i @ sp[(-56)+36]
 19478  011004  0EEC               	movlw	-20
 19479  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 19480  01100C  0EED               	movlw	-19
 19481  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19482  011014  0E97               	movlw	low _dbuf
 19483  011016  240B               	addwf	(btemp+10)^0,w,c
 19484  011018  6ED9               	movwf	fsr2l,c
 19485  01101A  0E02               	movlw	high _dbuf
 19486  01101C  200C               	addwfc	(btemp+11)^0,w,c
 19487  01101E  6EDA               	movwf	fsr2h,c
 19488  011020  0E0A               	movlw	10
 19489  011022  6EE6               	movwf	postinc1,c
 19490  011024  0E00               	movlw	0
 19491  011026  6EE6               	movwf	postinc1,c
 19492                           
 19493                           ;stkvar	_e @ sp[(-58)+34]
 19494  011028  0EE8               	movlw	-24
 19495  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 19496  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 19497  011036  EC0E  F0D0         	call	___awmod	;wreg free
 19498  01103A  5001               	movf	btemp^0,w,c
 19499  01103C  0F30               	addlw	48
 19500  01103E  6EDF               	movwf	indf2,c
 19501                           
 19502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 19503  011040  0E0A               	movlw	10
 19504  011042  6EE6               	movwf	postinc1,c
 19505  011044  0E00               	movlw	0
 19506  011046  6EE6               	movwf	postinc1,c
 19507                           
 19508                           ;stkvar	_e @ sp[(-58)+34]
 19509  011048  0EE8               	movlw	-24
 19510  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 19511  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 19512  011056  ECD5  F0CB         	call	___awdiv	;wreg free
 19513                           
 19514                           ;stkvar	_e @ sp[(-56)+34]
 19515  01105A  0EEA               	movlw	-22
 19516  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 19517  011062  0EEB               	movlw	-21
 19518  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19519                           
 19520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 19521                           ;stkvar	_p @ sp[(-56)+40]
 19522  01106A  50E1               	movf	fsr1l,w,c
 19523  01106C  0FF0               	addlw	-16
 19524  01106E  6ED9               	movwf	fsr2l,c
 19525  011070  50E2               	movf	fsr1h,w,c
 19526  011072  6EDA               	movwf	fsr2h,c
 19527  011074  0EFF               	movlw	255
 19528  011076  22DA               	addwfc	fsr2h,f,c
 19529  011078  06DE               	decf	postinc2,f,c
 19530  01107A  0E00               	movlw	0
 19531  01107C  5ADD               	subwfb	postdec2,f,c
 19532                           
 19533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 19534                           ;stkvar	_w @ sp[(-56)+38]
 19535  01107E  50E1               	movf	fsr1l,w,c
 19536  011080  0FEE               	addlw	-18
 19537  011082  6ED9               	movwf	fsr2l,c
 19538  011084  50E2               	movf	fsr1h,w,c
 19539  011086  6EDA               	movwf	fsr2h,c
 19540  011088  0EFF               	movlw	255
 19541  01108A  22DA               	addwfc	fsr2h,f,c
 19542  01108C  06DE               	decf	postinc2,f,c
 19543  01108E  0E00               	movlw	0
 19544  011090  5ADD               	subwfb	postdec2,f,c
 19545  011092                     l12815:
 19546                           
 19547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19548                           ;stkvar	_e @ sp[(-56)+34]
 19549  011092  0EEA               	movlw	-22
 19550  011094  006F FF8C  F001    	movff	plusw1,btemp
 19551  01109A  0EEB               	movlw	-21
 19552  01109C  50E3               	movf	plusw1,w,c
 19553  01109E  1001               	iorwf	btemp^0,w,c
 19554  0110A0  A4D8               	btfss	status,2,c
 19555  0110A2  D7A6               	goto	l12805
 19556                           
 19557                           ;stkvar	_p @ sp[(-56)+40]
 19558  0110A4  0EF1               	movlw	-15
 19559  0110A6  BEE3               	btfsc	plusw1,7,c
 19560  0110A8  D007               	goto	u12000
 19561  0110AA  0EF1               	movlw	-15
 19562  0110AC  50E3               	movf	plusw1,w,c
 19563  0110AE  E1A0               	bnz	l12805
 19564  0110B0  0EF0               	movlw	-16
 19565  0110B2  04E3               	decf	plusw1,w,c
 19566  0110B4  B0D8               	btfsc	status,0,c
 19567  0110B6  D79C               	goto	l12805
 19568  0110B8                     u12000:
 19569                           
 19570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 19571                           ;stkvar	_i @ sp[(-56)+36]
 19572  0110B8  50E1               	movf	fsr1l,w,c
 19573  0110BA  0FEC               	addlw	-20
 19574  0110BC  6ED9               	movwf	fsr2l,c
 19575  0110BE  50E2               	movf	fsr1h,w,c
 19576  0110C0  6EDA               	movwf	fsr2h,c
 19577  0110C2  0EFF               	movlw	255
 19578  0110C4  22DA               	addwfc	fsr2h,f,c
 19579  0110C6  06DE               	decf	postinc2,f,c
 19580  0110C8  0E00               	movlw	0
 19581  0110CA  5ADD               	subwfb	postdec2,f,c
 19582                           
 19583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 19584                           ;stkvar	_sign @ sp[(-56)+42]
 19585  0110CC  0EF2               	movlw	-14
 19586  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 19587  0110D4  0EF3               	movlw	-13
 19588  0110D6  50E3               	movf	plusw1,w,c
 19589  0110D8  1001               	iorwf	btemp^0,w,c
 19590  0110DA  A4D8               	btfss	status,2,c
 19591  0110DC  D002               	goto	l12825
 19592  0110DE  0E2B               	movlw	43
 19593  0110E0  D001               	goto	L21
 19594  0110E2                     l12825:
 19595  0110E2  0E2D               	movlw	45
 19596  0110E4                     L21:
 19597  0110E4  6E0B               	movwf	(btemp+10)^0,c
 19598  0110E6  0E00               	movlw	0
 19599  0110E8  6E0C               	movwf	(btemp+11)^0,c
 19600                           
 19601                           ;stkvar	_efgtoa$5863 @ sp[(-56)+4]
 19602  0110EA  0ECC               	movlw	-52
 19603  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19604  0110F2  0ECD               	movlw	-51
 19605  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19606                           
 19607                           ;stkvar	_efgtoa$5863 @ sp[(-56)+4]
 19608                           ;stkvar	_i @ sp[(-56)+36]
 19609  0110FA  0EEC               	movlw	-20
 19610  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19611  011102  0EED               	movlw	-19
 19612  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 19613  01110A  0E97               	movlw	low _dbuf
 19614  01110C  240B               	addwf	(btemp+10)^0,w,c
 19615  01110E  6ED9               	movwf	fsr2l,c
 19616  011110  0E02               	movlw	high _dbuf
 19617  011112  200C               	addwfc	(btemp+11)^0,w,c
 19618  011114  6EDA               	movwf	fsr2h,c
 19619  011116  0ECC               	movlw	-52
 19620  011118  006F FF8F FFDF     	movff	plusw1,indf2
 19621                           
 19622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 19623                           ;stkvar	_w @ sp[(-56)+38]
 19624  01111E  50E1               	movf	fsr1l,w,c
 19625  011120  0FEE               	addlw	-18
 19626  011122  6ED9               	movwf	fsr2l,c
 19627  011124  50E2               	movf	fsr1h,w,c
 19628  011126  6EDA               	movwf	fsr2h,c
 19629  011128  0EFF               	movlw	255
 19630  01112A  22DA               	addwfc	fsr2h,f,c
 19631  01112C  06DE               	decf	postinc2,f,c
 19632  01112E  0E00               	movlw	0
 19633  011130  5ADD               	subwfb	postdec2,f,c
 19634                           
 19635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 19636                           ;stkvar	_i @ sp[(-56)+36]
 19637  011132  50E1               	movf	fsr1l,w,c
 19638  011134  0FEC               	addlw	-20
 19639  011136  6ED9               	movwf	fsr2l,c
 19640  011138  50E2               	movf	fsr1h,w,c
 19641  01113A  6EDA               	movwf	fsr2h,c
 19642  01113C  0EFF               	movlw	255
 19643  01113E  22DA               	addwfc	fsr2h,f,c
 19644  011140  06DE               	decf	postinc2,f,c
 19645  011142  0E00               	movlw	0
 19646  011144  5ADD               	subwfb	postdec2,f,c
 19647  011146  0EBF               	movlw	191
 19648  011148  6E0B               	movwf	(btemp+10)^0,c
 19649  01114A  0EFF               	movlw	255
 19650  01114C  6E0C               	movwf	(btemp+11)^0,c
 19651                           
 19652                           ;stkvar	_c @ sp[(-56)+-7]
 19653  01114E  0EC1               	movlw	-63
 19654  011150  50E3               	movf	plusw1,w,c
 19655  011152  6E09               	movwf	(btemp+8)^0,c
 19656  011154  6A0A               	clrf	(btemp+9)^0,c
 19657  011156  500B               	movf	(btemp+10)^0,w,c
 19658  011158  2609               	addwf	(btemp+8)^0,f,c
 19659  01115A  500C               	movf	(btemp+11)^0,w,c
 19660  01115C  220A               	addwfc	(btemp+9)^0,f,c
 19661  01115E  500A               	movf	(btemp+9)^0,w,c
 19662  011160  E106               	bnz	u12020
 19663  011162  0E1A               	movlw	26
 19664  011164  5C09               	subwf	(btemp+8)^0,w,c
 19665  011166  B0D8               	btfsc	status,0,c
 19666  011168  D002               	goto	u12020
 19667  01116A  0E01               	movlw	1
 19668  01116C  D001               	goto	u12030
 19669  01116E                     u12020:
 19670  01116E  0E00               	movlw	0
 19671  011170                     u12030:
 19672  011170  6E0B               	movwf	(btemp+10)^0,c
 19673  011172  6A0C               	clrf	(btemp+11)^0,c
 19674                           
 19675                           ;stkvar	_efgtoa$5865 @ sp[(-56)+0]
 19676  011174  0EC8               	movlw	-56
 19677  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19678  01117C  0EC9               	movlw	-55
 19679  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19680                           
 19681                           ;stkvar	_efgtoa$5865 @ sp[(-56)+0]
 19682  011184  0EC8               	movlw	-56
 19683  011186  006F FF8C  F001    	movff	plusw1,btemp
 19684  01118C  0EC9               	movlw	-55
 19685  01118E  50E3               	movf	plusw1,w,c
 19686  011190  1001               	iorwf	btemp^0,w,c
 19687  011192  A4D8               	btfss	status,2,c
 19688  011194  D002               	goto	l12841
 19689  011196  0E65               	movlw	101
 19690  011198  D001               	goto	L22
 19691  01119A                     l12841:
 19692  01119A  0E45               	movlw	69
 19693  01119C                     L22:
 19694  01119C  6E0B               	movwf	(btemp+10)^0,c
 19695  01119E  0E00               	movlw	0
 19696  0111A0  6E0C               	movwf	(btemp+11)^0,c
 19697                           
 19698                           ;stkvar	_efgtoa$5864 @ sp[(-56)+2]
 19699  0111A2  0ECA               	movlw	-54
 19700  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19701  0111AA  0ECB               	movlw	-53
 19702  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19703                           
 19704                           ;stkvar	_efgtoa$5864 @ sp[(-56)+2]
 19705                           ;stkvar	_i @ sp[(-56)+36]
 19706  0111B2  0EEC               	movlw	-20
 19707  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19708  0111BA  0EED               	movlw	-19
 19709  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19710  0111C2  0E97               	movlw	low _dbuf
 19711  0111C4  240B               	addwf	(btemp+10)^0,w,c
 19712  0111C6  6ED9               	movwf	fsr2l,c
 19713  0111C8  0E02               	movlw	high _dbuf
 19714  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 19715  0111CC  6EDA               	movwf	fsr2h,c
 19716  0111CE  0ECA               	movlw	-54
 19717  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 19718                           
 19719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 19720                           ;stkvar	_w @ sp[(-56)+38]
 19721  0111D6  50E1               	movf	fsr1l,w,c
 19722  0111D8  0FEE               	addlw	-18
 19723  0111DA  6ED9               	movwf	fsr2l,c
 19724  0111DC  50E2               	movf	fsr1h,w,c
 19725  0111DE  6EDA               	movwf	fsr2h,c
 19726  0111E0  0EFF               	movlw	255
 19727  0111E2  22DA               	addwfc	fsr2h,f,c
 19728  0111E4  06DE               	decf	postinc2,f,c
 19729  0111E6  0E00               	movlw	0
 19730  0111E8  5ADD               	subwfb	postdec2,f,c
 19731                           
 19732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 19733                           ;stkvar	_i @ sp[(-56)+36]
 19734  0111EA  0EEC               	movlw	-20
 19735  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19736  0111F2  0EED               	movlw	-19
 19737  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19738  0111FA  0E97               	movlw	low _dbuf
 19739  0111FC  240B               	addwf	(btemp+10)^0,w,c
 19740  0111FE  6E09               	movwf	(btemp+8)^0,c
 19741  011200  0E02               	movlw	high _dbuf
 19742  011202  200C               	addwfc	(btemp+11)^0,w,c
 19743  011204  6E0A               	movwf	(btemp+9)^0,c
 19744  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 19745  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 19746                           
 19747                           ;stkvar	_n @ sp[(-58)+32]
 19748  011212  0E97               	movlw	low _dbuf
 19749  011214  6E0B               	movwf	(btemp+10)^0,c
 19750  011216  0E02               	movlw	high _dbuf
 19751  011218  6E0C               	movwf	(btemp+11)^0,c
 19752  01121A  0EE6               	movlw	-26
 19753  01121C  50E3               	movf	plusw1,w,c
 19754  01121E  260B               	addwf	(btemp+10)^0,f,c
 19755  011220  0EE7               	movlw	-25
 19756  011222  50E3               	movf	plusw1,w,c
 19757  011224  220C               	addwfc	(btemp+11)^0,f,c
 19758  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19759  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19760  011232  EC03  F0D4         	call	_strcpy	;wreg free
 19761  011236  EF16  F081         	goto	l12593
 19762  01123A                     l2315:
 19763                           
 19764                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 19765  01123A  0EC1               	movlw	193
 19766  01123C  26E1               	addwf	fsr1l,f,c
 19767  01123E  0EFF               	movlw	255
 19768  011240  22E2               	addwfc	fsr1h,f,c
 19769  011242  0012               	return		;funcret
 19770  011244                     __end_of_efgtoa:
 19771                           	opt callstack 0
 19772                           
 19773 ;; *************** function _tolower *****************
 19774 ;; Defined at:
 19775 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 19776 ;; Parameters:    Size  Location     Type
 19777 ;;  c               2  [STACK] int 
 19778 ;; Auto vars:     Size  Location     Type
 19779 ;;		None
 19780 ;; Return value:  Size  Location     Type
 19781 ;;                  2  [STACK] int 
 19782 ;; Registers used:
 19783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 19784 ;; Tracked objects:
 19785 ;;		On entry : 0/0
 19786 ;;		On exit  : 0/0
 19787 ;;		Unchanged: 0/0
 19788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19793 ;;Total ram usage:        0 bytes
 19794 ;; Hardware stack levels used:    1
 19795 ;; Hardware stack levels required when called:   16
 19796 ;; This function calls:
 19797 ;;		_isupper
 19798 ;; This function is called by:
 19799 ;;		_efgtoa
 19800 ;;		_vfpfcnvrt
 19801 ;; This function uses a reentrant model
 19802 ;;
 19803                           
 19804                           	psect	text66
 19805  01B418                     __ptext66:
 19806                           	opt callstack 0
 19807  01B418                     _tolower:
 19808                           	opt callstack 0
 19809                           
 19810                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19811  01B418  52E6               	movf	postinc1,f,c
 19812  01B41A  52E6               	movf	postinc1,f,c
 19813                           
 19814                           ;stkvar	_c @ sp[(-2)+-2]
 19815                           
 19816                           ;incstack = 0
 19817 ;; hardware stack exceeded
 19818  01B41C  0EFC               	movlw	-4
 19819  01B41E  50E3               	movf	plusw1,w,c
 19820  01B420  0FBF               	addlw	191
 19821  01B422  6E0B               	movwf	(btemp+10)^0,c
 19822  01B424  0EFD               	movlw	-3
 19823  01B426  006F FF8C  F00C    	movff	plusw1,btemp+11
 19824  01B42C  0EFF               	movlw	255
 19825  01B42E  220C               	addwfc	(btemp+11)^0,f,c
 19826  01B430  500C               	movf	(btemp+11)^0,w,c
 19827  01B432  E106               	bnz	u6320
 19828  01B434  0E1A               	movlw	26
 19829  01B436  5C0B               	subwf	(btemp+10)^0,w,c
 19830  01B438  B0D8               	btfsc	status,0,c
 19831  01B43A  D002               	goto	u6320
 19832  01B43C  0E01               	movlw	1
 19833  01B43E  D001               	goto	u6330
 19834  01B440                     u6320:
 19835  01B440  0E00               	movlw	0
 19836  01B442                     u6330:
 19837  01B442  6E0B               	movwf	(btemp+10)^0,c
 19838  01B444  6A0C               	clrf	(btemp+11)^0,c
 19839                           
 19840                           ;stkvar	_tolower$6684 @ sp[(-2)+0]
 19841  01B446  0EFE               	movlw	-2
 19842  01B448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19843  01B44E  0EFF               	movlw	-1
 19844  01B450  0060  F033  FFE3   	movff	btemp+11,plusw1
 19845                           
 19846                           ;stkvar	_tolower$6684 @ sp[(-2)+0]
 19847  01B456  0EFE               	movlw	-2
 19848  01B458  006F FF8C  F001    	movff	plusw1,btemp
 19849  01B45E  0EFF               	movlw	-1
 19850  01B460  50E3               	movf	plusw1,w,c
 19851  01B462  1001               	iorwf	btemp^0,w,c
 19852  01B464  B4D8               	btfsc	status,2,c
 19853  01B466  D00D               	goto	l8383
 19854                           
 19855                           ;stkvar	_c @ sp[(-2)+-2]
 19856  01B468  0EFC               	movlw	-4
 19857  01B46A  006F FF8C  F001    	movff	plusw1,btemp
 19858  01B470  0EFD               	movlw	-3
 19859  01B472  006F FF8C  F002    	movff	plusw1,btemp+1
 19860  01B478  0E20               	movlw	32
 19861  01B47A  1201               	iorwf	btemp^0,f,c
 19862  01B47C  0E00               	movlw	0
 19863  01B47E  1202               	iorwf	(btemp+1)^0,f,c
 19864  01B480  D008               	goto	l3587
 19865  01B482                     l8383:
 19866                           
 19867                           ;stkvar	_c @ sp[(-2)+-2]
 19868  01B482  0EFC               	movlw	-4
 19869  01B484  006F FF8C  F001    	movff	plusw1,btemp
 19870  01B48A  0EFD               	movlw	-3
 19871  01B48C  006F FF8C  F002    	movff	plusw1,btemp+1
 19872  01B492                     l3587:
 19873                           
 19874                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19875  01B492  52E5               	movf	postdec1,f,c
 19876  01B494  52E5               	movf	postdec1,f,c
 19877  01B496  52E5               	movf	postdec1,f,c
 19878  01B498  52E5               	movf	postdec1,f,c
 19879  01B49A  0012               	return		;funcret
 19880  01B49C                     __end_of_tolower:
 19881                           	opt callstack 0
 19882                           
 19883 ;; *************** function _isupper *****************
 19884 ;; Defined at:
 19885 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;  c               2  [STACK] int 
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;		None
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  2  [STACK] int 
 19892 ;; Registers used:
 19893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/0
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19903 ;;Total ram usage:        0 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; Hardware stack levels required when called:   15
 19906 ;; This function calls:
 19907 ;;		Nothing
 19908 ;; This function is called by:
 19909 ;;		_efgtoa
 19910 ;;		_xtoa
 19911 ;;		_vfpfcnvrt
 19912 ;;		_tolower
 19913 ;; This function uses a reentrant model
 19914 ;;
 19915                           
 19916                           	psect	text67
 19917  01C31C                     __ptext67:
 19918                           	opt callstack 0
 19919  01C31C                     _isupper:
 19920                           	opt callstack 0
 19921                           
 19922                           ;stkvar	_c @ sp[(0)+-2]
 19923                           
 19924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19925                           ;incstack = 0
 19926 ;; hardware stack exceeded
 19927  01C31C  0EFE               	movlw	-2
 19928  01C31E  50E3               	movf	plusw1,w,c
 19929  01C320  0FBF               	addlw	191
 19930  01C322  6E0B               	movwf	(btemp+10)^0,c
 19931  01C324  0EFF               	movlw	-1
 19932  01C326  006F FF8C  F00C    	movff	plusw1,btemp+11
 19933  01C32C  0EFF               	movlw	255
 19934  01C32E  220C               	addwfc	(btemp+11)^0,f,c
 19935  01C330  500C               	movf	(btemp+11)^0,w,c
 19936  01C332  E106               	bnz	u5670
 19937  01C334  0E1A               	movlw	26
 19938  01C336  5C0B               	subwf	(btemp+10)^0,w,c
 19939  01C338  B0D8               	btfsc	status,0,c
 19940  01C33A  D002               	goto	u5670
 19941  01C33C  0E01               	movlw	1
 19942  01C33E  D001               	goto	u5680
 19943  01C340                     u5670:
 19944  01C340  0E00               	movlw	0
 19945  01C342                     u5680:
 19946  01C342  6E01               	movwf	btemp^0,c
 19947  01C344  6A02               	clrf	(btemp+1)^0,c
 19948                           
 19949                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19950  01C346  52E5               	movf	postdec1,f,c
 19951  01C348  52E5               	movf	postdec1,f,c
 19952  01C34A  0012               	return		;funcret
 19953  01C34C                     __end_of_isupper:
 19954                           	opt callstack 0
 19955                           
 19956 ;; *************** function _strcpy *****************
 19957 ;; Defined at:
 19958 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 19959 ;; Parameters:    Size  Location     Type
 19960 ;;  dest            2  [STACK] PTR unsigned char 
 19961 ;;		 -> dbuf(80), 
 19962 ;;  src             2  [STACK] PTR const unsigned char 
 19963 ;;		 -> STR_81(4), STR_80(4), STR_77(4), STR_76(4), 
 19964 ;;		 -> dbuf(80), 
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;  d               2  [STACK] PTR unsigned char 
 19967 ;;		 -> dbuf(80), 
 19968 ;;  s               2  [STACK] PTR const unsigned char 
 19969 ;;		 -> STR_81(4), STR_80(4), STR_77(4), STR_76(4), 
 19970 ;;		 -> dbuf(80), 
 19971 ;; Return value:  Size  Location     Type
 19972 ;;                  2  [STACK] PTR unsigned char 
 19973 ;; Registers used:
 19974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 19975 ;; Tracked objects:
 19976 ;;		On entry : 0/0
 19977 ;;		On exit  : 0/0
 19978 ;;		Unchanged: 0/0
 19979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19984 ;;Total ram usage:        0 bytes
 19985 ;; Hardware stack levels used:    1
 19986 ;; Hardware stack levels required when called:   15
 19987 ;; This function calls:
 19988 ;;		Nothing
 19989 ;; This function is called by:
 19990 ;;		_efgtoa
 19991 ;; This function uses a reentrant model
 19992 ;;
 19993                           
 19994                           	psect	text68
 19995  01A806                     __ptext68:
 19996                           	opt callstack 0
 19997  01A806                     _strcpy:
 19998                           	opt callstack 0
 19999                           
 20000                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20001  01A806  52E6               	movf	postinc1,f,c
 20002  01A808  52E6               	movf	postinc1,f,c
 20003  01A80A  52E6               	movf	postinc1,f,c
 20004  01A80C  52E6               	movf	postinc1,f,c
 20005                           
 20006                           ;stkvar	_src @ sp[(-4)+-4]
 20007                           
 20008                           ;incstack = 0
 20009 ;; hardware stack exceeded
 20010  01A80E  0EF8               	movlw	-8
 20011  01A810  006F FF8C  F00B    	movff	plusw1,btemp+10
 20012  01A816  0EF9               	movlw	-7
 20013  01A818  006F FF8C  F00C    	movff	plusw1,btemp+11
 20014                           
 20015                           ;stkvar	_s @ sp[(-4)+2]
 20016  01A81E  0EFF               	movlw	-1
 20017  01A820  0060  F033  FFE3   	movff	btemp+11,plusw1
 20018  01A826  0EFE               	movlw	-2
 20019  01A828  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20020                           
 20021                           ;stkvar	_dest @ sp[(-4)+-2]
 20022  01A82E  0EFA               	movlw	-6
 20023  01A830  006F FF8C  F00B    	movff	plusw1,btemp+10
 20024  01A836  0EFB               	movlw	-5
 20025  01A838  006F FF8C  F00C    	movff	plusw1,btemp+11
 20026                           
 20027                           ;stkvar	_d @ sp[(-4)+0]
 20028  01A83E  0EFD               	movlw	-3
 20029  01A840  0060  F033  FFE3   	movff	btemp+11,plusw1
 20030  01A846  0EFC               	movlw	-4
 20031  01A848  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20032  01A84E                     l12455:
 20033                           
 20034                           ;stkvar	_s @ sp[(-4)+2]
 20035  01A84E  50E1               	movf	fsr1l,w,c
 20036  01A850  0FFE               	addlw	-2
 20037  01A852  6ED9               	movwf	fsr2l,c
 20038  01A854  50E2               	movf	fsr1h,w,c
 20039  01A856  6EDA               	movwf	fsr2h,c
 20040  01A858  0EFF               	movlw	255
 20041  01A85A  22DA               	addwfc	fsr2h,f,c
 20042  01A85C  006F FF7C  F00B    	movff	indf2,btemp+10
 20043  01A862  0E01               	movlw	1
 20044  01A864  26DE               	addwf	postinc2,f,c
 20045  01A866  006F FF7C  F00C    	movff	indf2,btemp+11
 20046  01A86C  0E00               	movlw	0
 20047  01A86E  22DD               	addwfc	postdec2,f,c
 20048  01A870  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 20049  01A876  0060  F033  FFF7   	movff	btemp+11,tblptrh
 20050  01A87C  0E00               	movlw	low (__mediumconst shr (0+16))
 20051  01A87E  6EF8               	movwf	tblptru,c
 20052                           
 20053                           ;stkvar	_d @ sp[(-4)+0]
 20054  01A880  50E1               	movf	fsr1l,w,c
 20055  01A882  0FFC               	addlw	-4
 20056  01A884  6ED9               	movwf	fsr2l,c
 20057  01A886  50E2               	movf	fsr1h,w,c
 20058  01A888  6EDA               	movwf	fsr2h,c
 20059  01A88A  0EFF               	movlw	255
 20060  01A88C  22DA               	addwfc	fsr2h,f,c
 20061  01A88E  006F FF7C  F00B    	movff	indf2,btemp+10
 20062  01A894  0E01               	movlw	1
 20063  01A896  26DE               	addwf	postinc2,f,c
 20064  01A898  006F FF7C  F00C    	movff	indf2,btemp+11
 20065  01A89E  0E00               	movlw	0
 20066  01A8A0  22DD               	addwfc	postdec2,f,c
 20067  01A8A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 20068  01A8A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 20069  01A8AE  0E1F               	movlw	(high __ramtop+-1)
 20070  01A8B0  64F7               	cpfsgt	tblptrh,c
 20071  01A8B2  D003               	bra	u11327
 20072  01A8B4  0008               	tblrd		*
 20073  01A8B6  50F5               	movf	tablat,w,c
 20074  01A8B8  D007               	bra	u11320
 20075  01A8BA                     u11327:
 20076  01A8BA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20077  01A8C0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20078  01A8C6  50EF               	movf	indf0,w,c
 20079  01A8C8                     u11320:
 20080  01A8C8  6EDF               	movwf	indf2,c
 20081  01A8CA  50DF               	movf	indf2,w,c
 20082  01A8CC  A4D8               	btfss	status,2,c
 20083  01A8CE  D7BF               	goto	l12455
 20084                           
 20085                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 20086  01A8D0  0EF8               	movlw	248
 20087  01A8D2  26E1               	addwf	fsr1l,f,c
 20088  01A8D4  0EFF               	movlw	255
 20089  01A8D6  22E2               	addwfc	fsr1h,f,c
 20090  01A8D8  0012               	return		;funcret
 20091  01A8DA                     __end_of_strcpy:
 20092                           	opt callstack 0
 20093                           
 20094 ;; *************** function _floorf *****************
 20095 ;; Defined at:
 20096 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 20097 ;; Parameters:    Size  Location     Type
 20098 ;;  x               4  [STACK] float 
 20099 ;; Auto vars:     Size  Location     Type
 20100 ;;  u               4  [STACK] struct .
 20101 ;;  m               4  [STACK] unsigned long 
 20102 ;;  e               2  [STACK] int 
 20103 ;; Return value:  Size  Location     Type
 20104 ;;                  4  [STACK] float 
 20105 ;; Registers used:
 20106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20107 ;; Tracked objects:
 20108 ;;		On entry : 0/0
 20109 ;;		On exit  : 0/0
 20110 ;;		Unchanged: 0/0
 20111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20116 ;;Total ram usage:        0 bytes
 20117 ;; Hardware stack levels used:    1
 20118 ;; Hardware stack levels required when called:   15
 20119 ;; This function calls:
 20120 ;;		Nothing
 20121 ;; This function is called by:
 20122 ;;		_efgtoa
 20123 ;; This function uses a reentrant model
 20124 ;;
 20125                           
 20126                           	psect	text69
 20127  0164E2                     __ptext69:
 20128                           	opt callstack 0
 20129  0164E2                     _floorf:
 20130                           	opt callstack 0
 20131                           
 20132                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20133  0164E2  0E0A               	movlw	10
 20134  0164E4  26E1               	addwf	fsr1l,f,c
 20135  0164E6  0E00               	movlw	0
 20136  0164E8  22E2               	addwfc	fsr1h,f,c
 20137                           
 20138                           ;incstack = 0
 20139 ;; hardware stack exceeded
 20140  0164EA  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 20141  0164F0  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 20142  0164F6  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 20143  0164FC  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 20144                           
 20145                           ;stkvar	_u @ sp[(-10)+0]
 20146  016502  0EF6               	movlw	-10
 20147  016504  0060  F027  FFE3   	movff	btemp+8,plusw1
 20148  01650A  0EF7               	movlw	-9
 20149  01650C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20150  016512  0EF8               	movlw	-8
 20151  016514  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20152  01651A  0EF9               	movlw	-7
 20153  01651C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20154                           
 20155                           ;stkvar	_x @ sp[(-10)+-4]
 20156  016522  0EF2               	movlw	-14
 20157  016524  006F FF8C  F009    	movff	plusw1,btemp+8
 20158  01652A  0EF3               	movlw	-13
 20159  01652C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20160  016532  0EF4               	movlw	-12
 20161  016534  006F FF8C  F00B    	movff	plusw1,btemp+10
 20162  01653A  0EF5               	movlw	-11
 20163  01653C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20164                           
 20165                           ;stkvar	_u @ sp[(-10)+0]
 20166  016542  0EF6               	movlw	-10
 20167  016544  0060  F027  FFE3   	movff	btemp+8,plusw1
 20168  01654A  0EF7               	movlw	-9
 20169  01654C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20170  016552  0EF8               	movlw	-8
 20171  016554  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20172  01655A  0EF9               	movlw	-7
 20173  01655C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20174  016562  0E81               	movlw	129
 20175  016564  6E0B               	movwf	(btemp+10)^0,c
 20176  016566  0EFF               	movlw	255
 20177  016568  6E0C               	movwf	(btemp+11)^0,c
 20178                           
 20179                           ;stkvar	_u @ sp[(-10)+0]
 20180  01656A  0EF6               	movlw	-10
 20181  01656C  006F FF8C  F005    	movff	plusw1,btemp+4
 20182  016572  0EF7               	movlw	-9
 20183  016574  006F FF8C  F006    	movff	plusw1,btemp+5
 20184  01657A  0EF8               	movlw	-8
 20185  01657C  006F FF8C  F007    	movff	plusw1,btemp+6
 20186  016582  0EF9               	movlw	-7
 20187  016584  006F FF8C  F008    	movff	plusw1,btemp+7
 20188  01658A  0E18               	movlw	24
 20189  01658C  D005               	goto	u6350
 20190  01658E                     u6355:
 20191  01658E  90D8               	bcf	status,0,c
 20192  016590  3208               	rrcf	(btemp+7)^0,f,c
 20193  016592  3207               	rrcf	(btemp+6)^0,f,c
 20194  016594  3206               	rrcf	(btemp+5)^0,f,c
 20195  016596  3205               	rrcf	(btemp+4)^0,f,c
 20196  016598                     u6350:
 20197  016598  2EE8               	decfsz	wreg,f,c
 20198  01659A  D7F9               	goto	u6355
 20199  01659C  0060  F014  F009   	movff	btemp+4,btemp+8
 20200  0165A2  0060  F018  F00A   	movff	btemp+5,btemp+9
 20201  0165A8  0EFF               	movlw	255
 20202  0165AA  1609               	andwf	(btemp+8)^0,f,c
 20203  0165AC  0E00               	movlw	0
 20204  0165AE  160A               	andwf	(btemp+9)^0,f,c
 20205  0165B0  500B               	movf	(btemp+10)^0,w,c
 20206  0165B2  2609               	addwf	(btemp+8)^0,f,c
 20207  0165B4  500C               	movf	(btemp+11)^0,w,c
 20208  0165B6  220A               	addwfc	(btemp+9)^0,f,c
 20209                           
 20210                           ;stkvar	_e @ sp[(-10)+8]
 20211  0165B8  0EFE               	movlw	-2
 20212  0165BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 20213  0165C0  0EFF               	movlw	-1
 20214  0165C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20215                           
 20216                           ;stkvar	_e @ sp[(-10)+8]
 20217  0165C8  0EFF               	movlw	-1
 20218  0165CA  BEE3               	btfsc	plusw1,7,c
 20219  0165CC  D019               	goto	l8397
 20220  0165CE  0EFF               	movlw	-1
 20221  0165D0  50E3               	movf	plusw1,w,c
 20222  0165D2  E108               	bnz	u6360
 20223  0165D4  0EFE               	movlw	-2
 20224  0165D6  006F FF8C  F001    	movff	plusw1,btemp
 20225  0165DC  0E17               	movlw	23
 20226  0165DE  5E01               	subwf	btemp^0,f,c
 20227  0165E0  A0D8               	btfss	status,0,c
 20228  0165E2  D00E               	goto	l8397
 20229  0165E4                     u6360:
 20230                           
 20231                           ;stkvar	_x @ sp[(-10)+-4]
 20232  0165E4  0EF2               	movlw	-14
 20233  0165E6  006F FF8C  F001    	movff	plusw1,btemp
 20234  0165EC  0EF3               	movlw	-13
 20235  0165EE  006F FF8C  F002    	movff	plusw1,btemp+1
 20236  0165F4  0EF4               	movlw	-12
 20237  0165F6  006F FF8C  F003    	movff	plusw1,btemp+2
 20238  0165FC  0EF5               	movlw	-11
 20239  0165FE  D11F               	goto	L23
 20240  016600                     l8397:
 20241                           
 20242                           ;stkvar	_e @ sp[(-10)+8]
 20243  016600  0EFF               	movlw	-1
 20244  016602  BEE3               	btfsc	plusw1,7,c
 20245  016604  D0B4               	goto	l8413
 20246                           
 20247                           ;stkvar	_e @ sp[(-10)+8]
 20248  016606  0EFE               	movlw	-2
 20249  016608  006F FF8C  F00C    	movff	plusw1,btemp+11
 20250  01660E  0EFF               	movlw	255
 20251  016610  6E05               	movwf	(btemp+4)^0,c
 20252  016612  0EFF               	movlw	255
 20253  016614  6E06               	movwf	(btemp+5)^0,c
 20254  016616  0E7F               	movlw	127
 20255  016618  6E07               	movwf	(btemp+6)^0,c
 20256  01661A  0E00               	movlw	0
 20257  01661C  6E08               	movwf	(btemp+7)^0,c
 20258  01661E                     u6385:
 20259  01661E  660C               	tstfsz	(btemp+11)^0,c
 20260  016620  D001               	goto	u6386
 20261  016622  D007               	goto	u6387
 20262  016624                     u6386:
 20263  016624  3408               	rlcf	(btemp+7)^0,w,c
 20264  016626  3208               	rrcf	(btemp+7)^0,f,c
 20265  016628  3207               	rrcf	(btemp+6)^0,f,c
 20266  01662A  3206               	rrcf	(btemp+5)^0,f,c
 20267  01662C  3205               	rrcf	(btemp+4)^0,f,c
 20268  01662E  2E0C               	decfsz	(btemp+11)^0,f,c
 20269  016630  D7F6               	goto	u6385
 20270  016632                     u6387:
 20271                           
 20272                           ;stkvar	_m @ sp[(-10)+4]
 20273  016632  0EFA               	movlw	-6
 20274  016634  0060  F017  FFE3   	movff	btemp+4,plusw1
 20275  01663A  0EFB               	movlw	-5
 20276  01663C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 20277  016642  0EFC               	movlw	-4
 20278  016644  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20279  01664A  0EFD               	movlw	-3
 20280  01664C  0060  F023  FFE3   	movff	btemp+7,plusw1
 20281                           
 20282                           ;stkvar	_m @ sp[(-10)+4]
 20283                           ;stkvar	_u @ sp[(-10)+0]
 20284  016652  0EF6               	movlw	-10
 20285  016654  006F FF8C  F009    	movff	plusw1,btemp+8
 20286  01665A  0EF7               	movlw	-9
 20287  01665C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20288  016662  0EF8               	movlw	-8
 20289  016664  006F FF8C  F00B    	movff	plusw1,btemp+10
 20290  01666A  0EF9               	movlw	-7
 20291  01666C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20292  016672  0EFA               	movlw	-6
 20293  016674  50E3               	movf	plusw1,w,c
 20294  016676  1609               	andwf	(btemp+8)^0,f,c
 20295  016678  0EFB               	movlw	-5
 20296  01667A  50E3               	movf	plusw1,w,c
 20297  01667C  160A               	andwf	(btemp+9)^0,f,c
 20298  01667E  0EFC               	movlw	-4
 20299  016680  50E3               	movf	plusw1,w,c
 20300  016682  160B               	andwf	(btemp+10)^0,f,c
 20301  016684  0EFD               	movlw	-3
 20302  016686  50E3               	movf	plusw1,w,c
 20303  016688  160C               	andwf	(btemp+11)^0,f,c
 20304  01668A  5009               	movf	(btemp+8)^0,w,c
 20305  01668C  100A               	iorwf	(btemp+9)^0,w,c
 20306  01668E  100B               	iorwf	(btemp+10)^0,w,c
 20307  016690  100C               	iorwf	(btemp+11)^0,w,c
 20308  016692  B4D8               	btfsc	status,2,c
 20309  016694  D7A7               	goto	u6360
 20310                           
 20311                           ;stkvar	_u @ sp[(-10)+0]
 20312  016696  0EF6               	movlw	-10
 20313  016698  006F FF8C  F009    	movff	plusw1,btemp+8
 20314  01669E  0EF7               	movlw	-9
 20315  0166A0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20316  0166A6  0EF8               	movlw	-8
 20317  0166A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20318  0166AE  0EF9               	movlw	-7
 20319  0166B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20320  0166B6  0E20               	movlw	32
 20321  0166B8  D005               	goto	u6400
 20322  0166BA                     u6405:
 20323  0166BA  90D8               	bcf	status,0,c
 20324  0166BC  320C               	rrcf	(btemp+11)^0,f,c
 20325  0166BE  320B               	rrcf	(btemp+10)^0,f,c
 20326  0166C0  320A               	rrcf	(btemp+9)^0,f,c
 20327  0166C2  3209               	rrcf	(btemp+8)^0,f,c
 20328  0166C4                     u6400:
 20329  0166C4  2EE8               	decfsz	wreg,f,c
 20330  0166C6  D7F9               	goto	u6405
 20331  0166C8  5009               	movf	(btemp+8)^0,w,c
 20332  0166CA  B4D8               	btfsc	status,2,c
 20333  0166CC  D028               	goto	l8411
 20334                           
 20335                           ;stkvar	_m @ sp[(-10)+4]
 20336                           ;stkvar	_u @ sp[(-10)+0]
 20337  0166CE  0EF6               	movlw	-10
 20338  0166D0  50E3               	movf	plusw1,w,c
 20339  0166D2  6E01               	movwf	btemp^0,c
 20340  0166D4  0EFA               	movlw	-6
 20341  0166D6  50E3               	movf	plusw1,w,c
 20342  0166D8  2601               	addwf	btemp^0,f,c
 20343  0166DA  0EF6               	movlw	-10
 20344  0166DC  0060  F007  FFE3   	movff	btemp,plusw1
 20345  0166E2  0EF7               	movlw	-9
 20346  0166E4  50E3               	movf	plusw1,w,c
 20347  0166E6  6E01               	movwf	btemp^0,c
 20348  0166E8  0EFB               	movlw	-5
 20349  0166EA  50E3               	movf	plusw1,w,c
 20350  0166EC  2201               	addwfc	btemp^0,f,c
 20351  0166EE  0EF7               	movlw	-9
 20352  0166F0  0060  F007  FFE3   	movff	btemp,plusw1
 20353  0166F6  0EF8               	movlw	-8
 20354  0166F8  50E3               	movf	plusw1,w,c
 20355  0166FA  6E01               	movwf	btemp^0,c
 20356  0166FC  0EFC               	movlw	-4
 20357  0166FE  50E3               	movf	plusw1,w,c
 20358  016700  2201               	addwfc	btemp^0,f,c
 20359  016702  0EF8               	movlw	-8
 20360  016704  0060  F007  FFE3   	movff	btemp,plusw1
 20361  01670A  0EF9               	movlw	-7
 20362  01670C  50E3               	movf	plusw1,w,c
 20363  01670E  6E01               	movwf	btemp^0,c
 20364  016710  0EFD               	movlw	-3
 20365  016712  50E3               	movf	plusw1,w,c
 20366  016714  2201               	addwfc	btemp^0,f,c
 20367  016716  0EF9               	movlw	-7
 20368  016718  0060  F007  FFE3   	movff	btemp,plusw1
 20369  01671E                     l8411:
 20370                           
 20371                           ;stkvar	_m @ sp[(-10)+4]
 20372  01671E  0EFA               	movlw	-6
 20373  016720  006F FF8C  F009    	movff	plusw1,btemp+8
 20374  016726  0EFB               	movlw	-5
 20375  016728  006F FF8C  F00A    	movff	plusw1,btemp+9
 20376  01672E  0EFC               	movlw	-4
 20377  016730  006F FF8C  F00B    	movff	plusw1,btemp+10
 20378  016736  0EFD               	movlw	-3
 20379  016738  006F FF8C  F00C    	movff	plusw1,btemp+11
 20380  01673E  1C09               	comf	(btemp+8)^0,w,c
 20381  016740  6E05               	movwf	(btemp+4)^0,c
 20382  016742  1C0A               	comf	(btemp+9)^0,w,c
 20383  016744  6E06               	movwf	(btemp+5)^0,c
 20384  016746  1C0B               	comf	(btemp+10)^0,w,c
 20385  016748  6E07               	movwf	(btemp+6)^0,c
 20386  01674A  1C0C               	comf	(btemp+11)^0,w,c
 20387  01674C  6E08               	movwf	(btemp+7)^0,c
 20388                           
 20389                           ;stkvar	_u @ sp[(-10)+0]
 20390  01674E  50E1               	movf	fsr1l,w,c
 20391  016750  0FF6               	addlw	-10
 20392  016752  6ED9               	movwf	fsr2l,c
 20393  016754  50E2               	movf	fsr1h,w,c
 20394  016756  6EDA               	movwf	fsr2h,c
 20395  016758  0EFF               	movlw	255
 20396  01675A  22DA               	addwfc	fsr2h,f,c
 20397  01675C  5005               	movf	(btemp+4)^0,w,c
 20398  01675E  16DE               	andwf	postinc2,f,c
 20399  016760  5006               	movf	(btemp+5)^0,w,c
 20400  016762  16DE               	andwf	postinc2,f,c
 20401  016764  5007               	movf	(btemp+6)^0,w,c
 20402  016766  16DE               	andwf	postinc2,f,c
 20403  016768  5008               	movf	(btemp+7)^0,w,c
 20404  01676A  16DE               	andwf	postinc2,f,c
 20405  01676C  D05B               	goto	l8421
 20406  01676E                     l8413:
 20407                           
 20408                           ;stkvar	_u @ sp[(-10)+0]
 20409  01676E  0EF6               	movlw	-10
 20410  016770  006F FF8C  F009    	movff	plusw1,btemp+8
 20411  016776  0EF7               	movlw	-9
 20412  016778  006F FF8C  F00A    	movff	plusw1,btemp+9
 20413  01677E  0EF8               	movlw	-8
 20414  016780  006F FF8C  F00B    	movff	plusw1,btemp+10
 20415  016786  0EF9               	movlw	-7
 20416  016788  006F FF8C  F00C    	movff	plusw1,btemp+11
 20417  01678E  0E20               	movlw	32
 20418  016790  D005               	goto	u6420
 20419  016792                     u6425:
 20420  016792  90D8               	bcf	status,0,c
 20421  016794  320C               	rrcf	(btemp+11)^0,f,c
 20422  016796  320B               	rrcf	(btemp+10)^0,f,c
 20423  016798  320A               	rrcf	(btemp+9)^0,f,c
 20424  01679A  3209               	rrcf	(btemp+8)^0,f,c
 20425  01679C                     u6420:
 20426  01679C  2EE8               	decfsz	wreg,f,c
 20427  01679E  D7F9               	goto	u6425
 20428  0167A0  6609               	tstfsz	(btemp+8)^0,c
 20429  0167A2  D009               	goto	l8417
 20430                           
 20431                           ;stkvar	_u @ sp[(-10)+0]
 20432  0167A4  0EF6               	movlw	-10
 20433  0167A6  6AE3               	clrf	plusw1,c
 20434  0167A8  0EF7               	movlw	-9
 20435  0167AA  6AE3               	clrf	plusw1,c
 20436  0167AC  0EF8               	movlw	-8
 20437  0167AE  6AE3               	clrf	plusw1,c
 20438  0167B0  0EF9               	movlw	-7
 20439  0167B2  6AE3               	clrf	plusw1,c
 20440  0167B4  D037               	goto	l8421
 20441  0167B6                     l8417:
 20442                           
 20443                           ;stkvar	_u @ sp[(-10)+0]
 20444  0167B6  0EF6               	movlw	-10
 20445  0167B8  006F FF8C  F009    	movff	plusw1,btemp+8
 20446  0167BE  0EF7               	movlw	-9
 20447  0167C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20448  0167C6  0EF8               	movlw	-8
 20449  0167C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20450  0167CE  0EF9               	movlw	-7
 20451  0167D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20452  0167D6  90D8               	bcf	status,0,c
 20453  0167D8  3409               	rlcf	(btemp+8)^0,w,c
 20454  0167DA  6E05               	movwf	(btemp+4)^0,c
 20455  0167DC  340A               	rlcf	(btemp+9)^0,w,c
 20456  0167DE  6E06               	movwf	(btemp+5)^0,c
 20457  0167E0  340B               	rlcf	(btemp+10)^0,w,c
 20458  0167E2  6E07               	movwf	(btemp+6)^0,c
 20459  0167E4  340C               	rlcf	(btemp+11)^0,w,c
 20460  0167E6  6E08               	movwf	(btemp+7)^0,c
 20461  0167E8  5005               	movf	(btemp+4)^0,w,c
 20462  0167EA  1006               	iorwf	(btemp+5)^0,w,c
 20463  0167EC  1007               	iorwf	(btemp+6)^0,w,c
 20464  0167EE  1008               	iorwf	(btemp+7)^0,w,c
 20465  0167F0  B4D8               	btfsc	status,2,c
 20466  0167F2  D018               	goto	l8421
 20467  0167F4  0E00               	movlw	0
 20468  0167F6  6E09               	movwf	(btemp+8)^0,c
 20469  0167F8  0E00               	movlw	0
 20470  0167FA  6E0A               	movwf	(btemp+9)^0,c
 20471  0167FC  0E80               	movlw	128
 20472  0167FE  6E0B               	movwf	(btemp+10)^0,c
 20473  016800  0EBF               	movlw	191
 20474  016802  6E0C               	movwf	(btemp+11)^0,c
 20475                           
 20476                           ;stkvar	_u @ sp[(-10)+0]
 20477  016804  0EF6               	movlw	-10
 20478  016806  0060  F027  FFE3   	movff	btemp+8,plusw1
 20479  01680C  0EF7               	movlw	-9
 20480  01680E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20481  016814  0EF8               	movlw	-8
 20482  016816  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20483  01681C  0EF9               	movlw	-7
 20484  01681E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20485  016824                     l8421:
 20486                           
 20487                           ;stkvar	_u @ sp[(-10)+0]
 20488  016824  0EF6               	movlw	-10
 20489  016826  006F FF8C  F001    	movff	plusw1,btemp
 20490  01682C  0EF7               	movlw	-9
 20491  01682E  006F FF8C  F002    	movff	plusw1,btemp+1
 20492  016834  0EF8               	movlw	-8
 20493  016836  006F FF8C  F003    	movff	plusw1,btemp+2
 20494  01683C  0EF9               	movlw	-7
 20495  01683E                     L23:
 20496  01683E  006F FF8C  F004    	movff	plusw1,btemp+3
 20497                           
 20498                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20499  016844  0EF2               	movlw	242
 20500  016846  26E1               	addwf	fsr1l,f,c
 20501  016848  0EFF               	movlw	255
 20502  01684A  22E2               	addwfc	fsr1h,f,c
 20503  01684C  0012               	return		;funcret
 20504  01684E                     __end_of_floorf:
 20505                           	opt callstack 0
 20506                           
 20507 ;; *************** function ___fpclassifyf *****************
 20508 ;; Defined at:
 20509 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 20510 ;; Parameters:    Size  Location     Type
 20511 ;;  x               4  [STACK] float 
 20512 ;; Auto vars:     Size  Location     Type
 20513 ;;  u               4  [STACK] struct .
 20514 ;;  e               2  [STACK] int 
 20515 ;; Return value:  Size  Location     Type
 20516 ;;                  2  [STACK] int 
 20517 ;; Registers used:
 20518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 20519 ;; Tracked objects:
 20520 ;;		On entry : 0/0
 20521 ;;		On exit  : 0/0
 20522 ;;		Unchanged: 0/0
 20523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20528 ;;Total ram usage:        0 bytes
 20529 ;; Hardware stack levels used:    1
 20530 ;; Hardware stack levels required when called:   15
 20531 ;; This function calls:
 20532 ;;		Nothing
 20533 ;; This function is called by:
 20534 ;;		_efgtoa
 20535 ;; This function uses a reentrant model
 20536 ;;
 20537                           
 20538                           	psect	text70
 20539  018ED6                     __ptext70:
 20540                           	opt callstack 0
 20541  018ED6                     ___fpclassifyf:
 20542                           	opt callstack 0
 20543                           
 20544                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20545  018ED6  0E06               	movlw	6
 20546  018ED8  26E1               	addwf	fsr1l,f,c
 20547  018EDA  0E00               	movlw	0
 20548  018EDC  22E2               	addwfc	fsr1h,f,c
 20549                           
 20550                           ;incstack = 0
 20551 ;; hardware stack exceeded
 20552  018EDE  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 20553  018EE4  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 20554  018EEA  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 20555  018EF0  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 20556                           
 20557                           ;stkvar	_u @ sp[(-6)+0]
 20558  018EF6  0EFA               	movlw	-6
 20559  018EF8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20560  018EFE  0EFB               	movlw	-5
 20561  018F00  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20562  018F06  0EFC               	movlw	-4
 20563  018F08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20564  018F0E  0EFD               	movlw	-3
 20565  018F10  0060  F033  FFE3   	movff	btemp+11,plusw1
 20566                           
 20567                           ;stkvar	_x @ sp[(-6)+-4]
 20568  018F16  0EF6               	movlw	-10
 20569  018F18  006F FF8C  F009    	movff	plusw1,btemp+8
 20570  018F1E  0EF7               	movlw	-9
 20571  018F20  006F FF8C  F00A    	movff	plusw1,btemp+9
 20572  018F26  0EF8               	movlw	-8
 20573  018F28  006F FF8C  F00B    	movff	plusw1,btemp+10
 20574  018F2E  0EF9               	movlw	-7
 20575  018F30  006F FF8C  F00C    	movff	plusw1,btemp+11
 20576                           
 20577                           ;stkvar	_u @ sp[(-6)+0]
 20578  018F36  0EFA               	movlw	-6
 20579  018F38  0060  F027  FFE3   	movff	btemp+8,plusw1
 20580  018F3E  0EFB               	movlw	-5
 20581  018F40  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20582  018F46  0EFC               	movlw	-4
 20583  018F48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20584  018F4E  0EFD               	movlw	-3
 20585  018F50  0060  F033  FFE3   	movff	btemp+11,plusw1
 20586                           
 20587                           ;stkvar	_u @ sp[(-6)+0]
 20588  018F56  0EFA               	movlw	-6
 20589  018F58  006F FF8C  F009    	movff	plusw1,btemp+8
 20590  018F5E  0EFB               	movlw	-5
 20591  018F60  006F FF8C  F00A    	movff	plusw1,btemp+9
 20592  018F66  0EFC               	movlw	-4
 20593  018F68  006F FF8C  F00B    	movff	plusw1,btemp+10
 20594  018F6E  0EFD               	movlw	-3
 20595  018F70  006F FF8C  F00C    	movff	plusw1,btemp+11
 20596  018F76  0E18               	movlw	24
 20597  018F78  D005               	goto	u6230
 20598  018F7A                     u6235:
 20599  018F7A  90D8               	bcf	status,0,c
 20600  018F7C  320C               	rrcf	(btemp+11)^0,f,c
 20601  018F7E  320B               	rrcf	(btemp+10)^0,f,c
 20602  018F80  320A               	rrcf	(btemp+9)^0,f,c
 20603  018F82  3209               	rrcf	(btemp+8)^0,f,c
 20604  018F84                     u6230:
 20605  018F84  2EE8               	decfsz	wreg,f,c
 20606  018F86  D7F9               	goto	u6235
 20607  018F88  0060  F024  F007   	movff	btemp+8,btemp+6
 20608  018F8E  0060  F028  F008   	movff	btemp+9,btemp+7
 20609  018F94  0EFF               	movlw	255
 20610  018F96  1607               	andwf	(btemp+6)^0,f,c
 20611  018F98  0E00               	movlw	0
 20612  018F9A  1608               	andwf	(btemp+7)^0,f,c
 20613                           
 20614                           ;stkvar	_e @ sp[(-6)+4]
 20615  018F9C  0EFE               	movlw	-2
 20616  018F9E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20617  018FA4  0EFF               	movlw	-1
 20618  018FA6  0060  F023  FFE3   	movff	btemp+7,plusw1
 20619                           
 20620                           ;stkvar	_e @ sp[(-6)+4]
 20621  018FAC  0EFE               	movlw	-2
 20622  018FAE  006F FF8C  F001    	movff	plusw1,btemp
 20623  018FB4  0EFF               	movlw	-1
 20624  018FB6  50E3               	movf	plusw1,w,c
 20625  018FB8  1001               	iorwf	btemp^0,w,c
 20626  018FBA  A4D8               	btfss	status,2,c
 20627  018FBC  D023               	goto	l8359
 20628                           
 20629                           ;stkvar	_u @ sp[(-6)+0]
 20630  018FBE  0EFA               	movlw	-6
 20631  018FC0  006F FF8C  F009    	movff	plusw1,btemp+8
 20632  018FC6  0EFB               	movlw	-5
 20633  018FC8  006F FF8C  F00A    	movff	plusw1,btemp+9
 20634  018FCE  0EFC               	movlw	-4
 20635  018FD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20636  018FD6  0EFD               	movlw	-3
 20637  018FD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20638  018FDE  90D8               	bcf	status,0,c
 20639  018FE0  3409               	rlcf	(btemp+8)^0,w,c
 20640  018FE2  6E05               	movwf	(btemp+4)^0,c
 20641  018FE4  340A               	rlcf	(btemp+9)^0,w,c
 20642  018FE6  6E06               	movwf	(btemp+5)^0,c
 20643  018FE8  340B               	rlcf	(btemp+10)^0,w,c
 20644  018FEA  6E07               	movwf	(btemp+6)^0,c
 20645  018FEC  340C               	rlcf	(btemp+11)^0,w,c
 20646  018FEE  6E08               	movwf	(btemp+7)^0,c
 20647  018FF0  5005               	movf	(btemp+4)^0,w,c
 20648  018FF2  1006               	iorwf	(btemp+5)^0,w,c
 20649  018FF4  1007               	iorwf	(btemp+6)^0,w,c
 20650  018FF6  1008               	iorwf	(btemp+7)^0,w,c
 20651  018FF8  A4D8               	btfss	status,2,c
 20652  018FFA  D002               	goto	l8355
 20653  018FFC  0E02               	movlw	2
 20654  018FFE  D02E               	goto	L24
 20655  019000                     l8355:
 20656  019000  0E03               	movlw	3
 20657  019002  D02C               	goto	L24
 20658  019004                     l8359:
 20659                           
 20660                           ;stkvar	_e @ sp[(-6)+4]
 20661  019004  0EFE               	movlw	-2
 20662  019006  28E3               	incf	plusw1,w,c
 20663  019008  E128               	bnz	l8365
 20664  01900A  0EFF               	movlw	-1
 20665  01900C  50E3               	movf	plusw1,w,c
 20666  01900E  A4D8               	btfss	status,2,c
 20667  019010  D024               	goto	l8365
 20668                           
 20669                           ;stkvar	_u @ sp[(-6)+0]
 20670  019012  0EFA               	movlw	-6
 20671  019014  006F FF8C  F009    	movff	plusw1,btemp+8
 20672  01901A  0EFB               	movlw	-5
 20673  01901C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20674  019022  0EFC               	movlw	-4
 20675  019024  006F FF8C  F00B    	movff	plusw1,btemp+10
 20676  01902A  0EFD               	movlw	-3
 20677  01902C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20678  019032  0E09               	movlw	9
 20679  019034                     u6275:
 20680  019034  90D8               	bcf	status,0,c
 20681  019036  3609               	rlcf	(btemp+8)^0,f,c
 20682  019038  360A               	rlcf	(btemp+9)^0,f,c
 20683  01903A  360B               	rlcf	(btemp+10)^0,f,c
 20684  01903C  360C               	rlcf	(btemp+11)^0,f,c
 20685  01903E  2EE8               	decfsz	wreg,f,c
 20686  019040  D7F9               	goto	u6275
 20687  019042  5009               	movf	(btemp+8)^0,w,c
 20688  019044  100A               	iorwf	(btemp+9)^0,w,c
 20689  019046  100B               	iorwf	(btemp+10)^0,w,c
 20690  019048  100C               	iorwf	(btemp+11)^0,w,c
 20691  01904A  A4D8               	btfss	status,2,c
 20692  01904C  D002               	goto	u6280
 20693  01904E  0E01               	movlw	1
 20694  019050  D001               	goto	u6290
 20695  019052                     u6280:
 20696  019052  0E00               	movlw	0
 20697  019054                     u6290:
 20698  019054  6E01               	movwf	btemp^0,c
 20699  019056  6A02               	clrf	(btemp+1)^0,c
 20700  019058  D004               	goto	l3197
 20701  01905A                     l8365:
 20702  01905A  0E04               	movlw	4
 20703  01905C                     L24:
 20704  01905C  6E01               	movwf	btemp^0,c
 20705  01905E  0E00               	movlw	0
 20706  019060  6E02               	movwf	(btemp+1)^0,c
 20707  019062                     l3197:
 20708                           
 20709                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 20710  019062  0EF6               	movlw	246
 20711  019064  26E1               	addwf	fsr1l,f,c
 20712  019066  0EFF               	movlw	255
 20713  019068  22E2               	addwfc	fsr1h,f,c
 20714  01906A  0012               	return		;funcret
 20715  01906C                     __end_of___fpclassifyf:
 20716                           	opt callstack 0
 20717                           
 20718 ;; *************** function ___fltol *****************
 20719 ;; Defined at:
 20720 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 20721 ;; Parameters:    Size  Location     Type
 20722 ;;  f1              4  [STACK] int 
 20723 ;; Auto vars:     Size  Location     Type
 20724 ;;  exp1            1  [STACK] unsigned char 
 20725 ;;  sign1           1  [STACK] unsigned char 
 20726 ;; Return value:  Size  Location     Type
 20727 ;;                  4  [STACK] long 
 20728 ;; Registers used:
 20729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 20730 ;; Tracked objects:
 20731 ;;		On entry : 0/0
 20732 ;;		On exit  : 0/0
 20733 ;;		Unchanged: 0/0
 20734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20739 ;;Total ram usage:        0 bytes
 20740 ;; Hardware stack levels used:    1
 20741 ;; Hardware stack levels required when called:   15
 20742 ;; This function calls:
 20743 ;;		Nothing
 20744 ;; This function is called by:
 20745 ;;		_main
 20746 ;;		_convert_dac_raw
 20747 ;;		_calc_bsoc
 20748 ;;		_init_bsoc
 20749 ;;		_efgtoa
 20750 ;; This function uses a reentrant model
 20751 ;;
 20752                           
 20753                           	psect	text71
 20754  019372                     __ptext71:
 20755                           	opt callstack 0
 20756  019372                     ___fltol:
 20757                           	opt callstack 0
 20758                           
 20759                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20760  019372  52E6               	movf	postinc1,f,c
 20761  019374  52E6               	movf	postinc1,f,c
 20762                           
 20763                           ;stkvar	_f1 @ sp[(-2)+-4]
 20764                           
 20765                           ;incstack = 0
 20766 ;; hardware stack exceeded
 20767  019376  0EFA               	movlw	-6
 20768  019378  006F FF8C  F009    	movff	plusw1,btemp+8
 20769  01937E  0EFB               	movlw	-5
 20770  019380  006F FF8C  F00A    	movff	plusw1,btemp+9
 20771  019386  0EFC               	movlw	-4
 20772  019388  006F FF8C  F00B    	movff	plusw1,btemp+10
 20773  01938E  0EFD               	movlw	-3
 20774  019390  006F FF8C  F00C    	movff	plusw1,btemp+11
 20775  019396  0E18               	movlw	24
 20776  019398  D005               	goto	u7440
 20777  01939A                     u7445:
 20778  01939A  90D8               	bcf	status,0,c
 20779  01939C  320C               	rrcf	(btemp+11)^0,f,c
 20780  01939E  320B               	rrcf	(btemp+10)^0,f,c
 20781  0193A0  320A               	rrcf	(btemp+9)^0,f,c
 20782  0193A2  3209               	rrcf	(btemp+8)^0,f,c
 20783  0193A4                     u7440:
 20784  0193A4  2EE8               	decfsz	wreg,f,c
 20785  0193A6  D7F9               	goto	u7445
 20786                           
 20787                           ;stkvar	_exp1 @ sp[(-2)+0]
 20788  0193A8  0EFE               	movlw	-2
 20789  0193AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 20790  0193B0  0EFE               	movlw	-2
 20791  0193B2  50E3               	movf	plusw1,w,c
 20792  0193B4  A4D8               	btfss	status,2,c
 20793  0193B6  D006               	goto	l8985
 20794  0193B8                     u7450:
 20795  0193B8  0E00               	movlw	0
 20796  0193BA  6E01               	movwf	btemp^0,c
 20797  0193BC  6A02               	clrf	(btemp+1)^0,c
 20798  0193BE  6A03               	clrf	(btemp+2)^0,c
 20799  0193C0  6A04               	clrf	(btemp+3)^0,c
 20800  0193C2  D08B               	goto	l2813
 20801  0193C4                     l8985:
 20802                           
 20803                           ;stkvar	_f1 @ sp[(-2)+-4]
 20804  0193C4  0EFA               	movlw	-6
 20805  0193C6  006F FF8C  F009    	movff	plusw1,btemp+8
 20806  0193CC  0EFB               	movlw	-5
 20807  0193CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 20808  0193D4  0EFC               	movlw	-4
 20809  0193D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20810  0193DC  0EFD               	movlw	-3
 20811  0193DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20812  0193E4  0E20               	movlw	32
 20813  0193E6  D005               	goto	u7460
 20814  0193E8                     u7465:
 20815  0193E8  90D8               	bcf	status,0,c
 20816  0193EA  320C               	rrcf	(btemp+11)^0,f,c
 20817  0193EC  320B               	rrcf	(btemp+10)^0,f,c
 20818  0193EE  320A               	rrcf	(btemp+9)^0,f,c
 20819  0193F0  3209               	rrcf	(btemp+8)^0,f,c
 20820  0193F2                     u7460:
 20821  0193F2  2EE8               	decfsz	wreg,f,c
 20822  0193F4  D7F9               	goto	u7465
 20823                           
 20824                           ;stkvar	_sign1 @ sp[(-2)+1]
 20825  0193F6  0EFF               	movlw	-1
 20826  0193F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20827                           
 20828                           ;stkvar	_f1 @ sp[(-2)+-4]
 20829  0193FE  0EFC               	movlw	-4
 20830  019400  8EE3               	bsf	plusw1,7,c
 20831                           
 20832                           ;stkvar	_f1 @ sp[(-2)+-4]
 20833  019402  50E1               	movf	fsr1l,w,c
 20834  019404  0FFA               	addlw	-6
 20835  019406  6ED9               	movwf	fsr2l,c
 20836  019408  50E2               	movf	fsr1h,w,c
 20837  01940A  6EDA               	movwf	fsr2h,c
 20838  01940C  0EFF               	movlw	255
 20839  01940E  22DA               	addwfc	fsr2h,f,c
 20840  019410  0EFF               	movlw	255
 20841  019412  16DE               	andwf	postinc2,f,c
 20842  019414  0EFF               	movlw	255
 20843  019416  16DE               	andwf	postinc2,f,c
 20844  019418  0EFF               	movlw	255
 20845  01941A  16DE               	andwf	postinc2,f,c
 20846  01941C  0E00               	movlw	0
 20847  01941E  16DE               	andwf	postinc2,f,c
 20848                           
 20849                           ;stkvar	_exp1 @ sp[(-2)+0]
 20850  019420  0EFE               	movlw	-2
 20851  019422  006F FF8C  F001    	movff	plusw1,btemp
 20852  019428  0E96               	movlw	150
 20853  01942A  5E01               	subwf	btemp^0,f,c
 20854  01942C  0EFE               	movlw	-2
 20855  01942E  0060  F007  FFE3   	movff	btemp,plusw1
 20856                           
 20857                           ;stkvar	_exp1 @ sp[(-2)+0]
 20858  019434  0EFE               	movlw	-2
 20859  019436  AEE3               	btfss	plusw1,7,c
 20860  019438  D014               	goto	l9003
 20861                           
 20862                           ;stkvar	_exp1 @ sp[(-2)+0]
 20863  01943A  0EFE               	movlw	-2
 20864  01943C  50E3               	movf	plusw1,w,c
 20865  01943E  0A80               	xorlw	128
 20866  019440  0F97               	addlw	151
 20867  019442  A0D8               	btfss	status,0,c
 20868  019444  D7B9               	goto	u7450
 20869  019446                     l9001:
 20870                           
 20871                           ;stkvar	_f1 @ sp[(-2)+-4]
 20872  019446  90D8               	bcf	status,0,c
 20873  019448  0EFD               	movlw	-3
 20874  01944A  32E3               	rrcf	plusw1,f,c
 20875  01944C  0EFC               	movlw	-4
 20876  01944E  32E3               	rrcf	plusw1,f,c
 20877  019450  0EFB               	movlw	-5
 20878  019452  32E3               	rrcf	plusw1,f,c
 20879  019454  0EFA               	movlw	-6
 20880  019456  32E3               	rrcf	plusw1,f,c
 20881                           
 20882                           ;stkvar	_exp1 @ sp[(-2)+0]
 20883  019458  0EFE               	movlw	-2
 20884  01945A  2AE3               	incf	plusw1,f,c
 20885  01945C  B4D8               	btfsc	status,2,c
 20886  01945E  D018               	goto	u7510
 20887  019460  D7F2               	goto	l9001
 20888  019462                     l9003:
 20889                           
 20890                           ;stkvar	_exp1 @ sp[(-2)+0]
 20891  019462  0EFE               	movlw	-2
 20892  019464  006F FF8C  F001    	movff	plusw1,btemp
 20893  01946A  0E1F               	movlw	31
 20894  01946C  6401               	cpfsgt	btemp^0,c
 20895  01946E  D00C               	goto	l9011
 20896  019470  D7A3               	goto	u7450
 20897  019472                     l9009:
 20898                           
 20899                           ;stkvar	_f1 @ sp[(-2)+-4]
 20900  019472  90D8               	bcf	status,0,c
 20901  019474  0EFA               	movlw	-6
 20902  019476  36E3               	rlcf	plusw1,f,c
 20903  019478  0EFB               	movlw	-5
 20904  01947A  36E3               	rlcf	plusw1,f,c
 20905  01947C  0EFC               	movlw	-4
 20906  01947E  36E3               	rlcf	plusw1,f,c
 20907  019480  0EFD               	movlw	-3
 20908  019482  36E3               	rlcf	plusw1,f,c
 20909                           
 20910                           ;stkvar	_exp1 @ sp[(-2)+0]
 20911  019484  0EFE               	movlw	-2
 20912  019486  06E3               	decf	plusw1,f,c
 20913  019488                     l9011:
 20914                           
 20915                           ;stkvar	_exp1 @ sp[(-2)+0]
 20916  019488  0EFE               	movlw	-2
 20917  01948A  50E3               	movf	plusw1,w,c
 20918  01948C  A4D8               	btfss	status,2,c
 20919  01948E  D7F1               	goto	l9009
 20920  019490                     u7510:
 20921                           
 20922                           ;stkvar	_sign1 @ sp[(-2)+1]
 20923  019490  0EFF               	movlw	-1
 20924  019492  50E3               	movf	plusw1,w,c
 20925  019494  B4D8               	btfsc	status,2,c
 20926  019496  D011               	goto	u7530
 20927                           
 20928                           ;stkvar	_f1 @ sp[(-2)+-4]
 20929                           ;stkvar	_f1 @ sp[(-2)+-4]
 20930  019498  0EFA               	movlw	-6
 20931  01949A  6CE3               	negf	plusw1,c
 20932  01949C  0EFB               	movlw	-5
 20933  01949E  1EE3               	comf	plusw1,f,c
 20934  0194A0  0EFC               	movlw	-4
 20935  0194A2  1EE3               	comf	plusw1,f,c
 20936  0194A4  0EFD               	movlw	-3
 20937  0194A6  1EE3               	comf	plusw1,f,c
 20938  0194A8  E308               	bnc	u7530
 20939  0194AA  0EFB               	movlw	-5
 20940  0194AC  2AE3               	incf	plusw1,f,c
 20941  0194AE  E305               	bnc	u7530
 20942  0194B0  0EFC               	movlw	-4
 20943  0194B2  2AE3               	incf	plusw1,f,c
 20944  0194B4  E302               	bnc	u7530
 20945  0194B6  0EFD               	movlw	-3
 20946  0194B8  2AE3               	incf	plusw1,f,c
 20947  0194BA                     u7530:
 20948                           
 20949                           ;stkvar	_f1 @ sp[(-2)+-4]
 20950  0194BA  0EFA               	movlw	-6
 20951  0194BC  006F FF8C  F001    	movff	plusw1,btemp
 20952  0194C2  0EFB               	movlw	-5
 20953  0194C4  006F FF8C  F002    	movff	plusw1,btemp+1
 20954  0194CA  0EFC               	movlw	-4
 20955  0194CC  006F FF8C  F003    	movff	plusw1,btemp+2
 20956  0194D2  0EFD               	movlw	-3
 20957  0194D4  006F FF8C  F004    	movff	plusw1,btemp+3
 20958  0194DA                     l2813:
 20959                           
 20960                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20961  0194DA  0EFA               	movlw	250
 20962  0194DC  26E1               	addwf	fsr1l,f,c
 20963  0194DE  0EFF               	movlw	255
 20964  0194E0  22E2               	addwfc	fsr1h,f,c
 20965  0194E2  0012               	return		;funcret
 20966  0194E4                     __end_of___fltol:
 20967                           	opt callstack 0
 20968                           
 20969 ;; *************** function ___flneg *****************
 20970 ;; Defined at:
 20971 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 20972 ;; Parameters:    Size  Location     Type
 20973 ;;  f1              4  [STACK] long 
 20974 ;; Auto vars:     Size  Location     Type
 20975 ;;		None
 20976 ;; Return value:  Size  Location     Type
 20977 ;;                  4  [STACK] long 
 20978 ;; Registers used:
 20979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20980 ;; Tracked objects:
 20981 ;;		On entry : 0/0
 20982 ;;		On exit  : 0/0
 20983 ;;		Unchanged: 0/0
 20984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20989 ;;Total ram usage:        0 bytes
 20990 ;; Hardware stack levels used:    1
 20991 ;; Hardware stack levels required when called:   15
 20992 ;; This function calls:
 20993 ;;		Nothing
 20994 ;; This function is called by:
 20995 ;;		_calc_bsoc
 20996 ;;		_efgtoa
 20997 ;; This function uses a reentrant model
 20998 ;;
 20999                           
 21000                           	psect	text72
 21001  01BD26                     __ptext72:
 21002                           	opt callstack 0
 21003  01BD26                     ___flneg:
 21004                           	opt callstack 0
 21005                           
 21006                           ;stkvar	_f1 @ sp[(0)+-4]
 21007                           
 21008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21009                           ;incstack = 0
 21010 ;; hardware stack exceeded
 21011  01BD26  0EFC               	movlw	-4
 21012  01BD28  50E3               	movf	plusw1,w,c
 21013  01BD2A  E10A               	bnz	u7430
 21014  01BD2C  0EFD               	movlw	-3
 21015  01BD2E  50E3               	movf	plusw1,w,c
 21016  01BD30  E107               	bnz	u7430
 21017  01BD32  0EFE               	movlw	-2
 21018  01BD34  50E3               	movf	plusw1,w,c
 21019  01BD36  E104               	bnz	u7430
 21020  01BD38  0EFF               	movlw	-1
 21021  01BD3A  50E3               	movf	plusw1,w,c
 21022  01BD3C  B4D8               	btfsc	status,2,c
 21023  01BD3E  D002               	goto	l8975
 21024  01BD40                     u7430:
 21025                           
 21026                           ;stkvar	_f1 @ sp[(0)+-4]
 21027  01BD40  0EFF               	movlw	-1
 21028  01BD42  7EE3               	btg	plusw1,7,c
 21029  01BD44                     l8975:
 21030                           
 21031                           ;stkvar	_f1 @ sp[(0)+-4]
 21032  01BD44  0EFC               	movlw	-4
 21033  01BD46  006F FF8C  F001    	movff	plusw1,btemp
 21034  01BD4C  0EFD               	movlw	-3
 21035  01BD4E  006F FF8C  F002    	movff	plusw1,btemp+1
 21036  01BD54  0EFE               	movlw	-2
 21037  01BD56  006F FF8C  F003    	movff	plusw1,btemp+2
 21038  01BD5C  0EFF               	movlw	-1
 21039  01BD5E  006F FF8C  F004    	movff	plusw1,btemp+3
 21040                           
 21041                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21042  01BD64  52E5               	movf	postdec1,f,c
 21043  01BD66  52E5               	movf	postdec1,f,c
 21044  01BD68  52E5               	movf	postdec1,f,c
 21045  01BD6A  52E5               	movf	postdec1,f,c
 21046  01BD6C  0012               	return		;funcret
 21047  01BD6E                     __end_of___flneg:
 21048                           	opt callstack 0
 21049                           
 21050 ;; *************** function ___fleq *****************
 21051 ;; Defined at:
 21052 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;  ff1             4  [STACK] long 
 21055 ;;  ff2             4  [STACK] long 
 21056 ;; Auto vars:     Size  Location     Type
 21057 ;;		None
 21058 ;; Return value:  Size  Location     Type
 21059 ;;		None               void
 21060 ;; Registers used:
 21061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21062 ;; Tracked objects:
 21063 ;;		On entry : 0/0
 21064 ;;		On exit  : 0/0
 21065 ;;		Unchanged: 0/0
 21066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21071 ;;Total ram usage:        0 bytes
 21072 ;; Hardware stack levels used:    1
 21073 ;; Hardware stack levels required when called:   15
 21074 ;; This function calls:
 21075 ;;		Nothing
 21076 ;; This function is called by:
 21077 ;;		_efgtoa
 21078 ;; This function uses a reentrant model
 21079 ;;
 21080                           
 21081                           	psect	text73
 21082  01AA70                     __ptext73:
 21083                           	opt callstack 0
 21084  01AA70                     ___fleq:
 21085                           	opt callstack 0
 21086                           
 21087                           ;stkvar	_ff1 @ sp[(0)+-4]
 21088                           
 21089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21090                           ;incstack = 0
 21091 ;; hardware stack exceeded
 21092  01AA70  50E1               	movf	fsr1l,w,c
 21093  01AA72  0FFC               	addlw	-4
 21094  01AA74  6ED9               	movwf	fsr2l,c
 21095  01AA76  50E2               	movf	fsr1h,w,c
 21096  01AA78  6EDA               	movwf	fsr2h,c
 21097  01AA7A  0EFF               	movlw	255
 21098  01AA7C  22DA               	addwfc	fsr2h,f,c
 21099  01AA7E  0E00               	movlw	0
 21100  01AA80  14DE               	andwf	postinc2,w,c
 21101  01AA82  6E09               	movwf	(btemp+8)^0,c
 21102  01AA84  0E00               	movlw	0
 21103  01AA86  14DE               	andwf	postinc2,w,c
 21104  01AA88  6E0A               	movwf	(btemp+9)^0,c
 21105  01AA8A  0E80               	movlw	128
 21106  01AA8C  14DE               	andwf	postinc2,w,c
 21107  01AA8E  6E0B               	movwf	(btemp+10)^0,c
 21108  01AA90  0E7F               	movlw	127
 21109  01AA92  14DE               	andwf	postinc2,w,c
 21110  01AA94  6E0C               	movwf	(btemp+11)^0,c
 21111  01AA96  5009               	movf	(btemp+8)^0,w,c
 21112  01AA98  100A               	iorwf	(btemp+9)^0,w,c
 21113  01AA9A  100B               	iorwf	(btemp+10)^0,w,c
 21114  01AA9C  100C               	iorwf	(btemp+11)^0,w,c
 21115  01AA9E  A4D8               	btfss	status,2,c
 21116  01AAA0  D008               	goto	l8933
 21117                           
 21118                           ;stkvar	_ff1 @ sp[(0)+-4]
 21119  01AAA2  0EFC               	movlw	-4
 21120  01AAA4  6AE3               	clrf	plusw1,c
 21121  01AAA6  0EFD               	movlw	-3
 21122  01AAA8  6AE3               	clrf	plusw1,c
 21123  01AAAA  0EFE               	movlw	-2
 21124  01AAAC  6AE3               	clrf	plusw1,c
 21125  01AAAE  0EFF               	movlw	-1
 21126  01AAB0  6AE3               	clrf	plusw1,c
 21127  01AAB2                     l8933:
 21128                           
 21129                           ;stkvar	_ff2 @ sp[(0)+-8]
 21130  01AAB2  50E1               	movf	fsr1l,w,c
 21131  01AAB4  0FF8               	addlw	-8
 21132  01AAB6  6ED9               	movwf	fsr2l,c
 21133  01AAB8  50E2               	movf	fsr1h,w,c
 21134  01AABA  6EDA               	movwf	fsr2h,c
 21135  01AABC  0EFF               	movlw	255
 21136  01AABE  22DA               	addwfc	fsr2h,f,c
 21137  01AAC0  0E00               	movlw	0
 21138  01AAC2  14DE               	andwf	postinc2,w,c
 21139  01AAC4  6E09               	movwf	(btemp+8)^0,c
 21140  01AAC6  0E00               	movlw	0
 21141  01AAC8  14DE               	andwf	postinc2,w,c
 21142  01AACA  6E0A               	movwf	(btemp+9)^0,c
 21143  01AACC  0E80               	movlw	128
 21144  01AACE  14DE               	andwf	postinc2,w,c
 21145  01AAD0  6E0B               	movwf	(btemp+10)^0,c
 21146  01AAD2  0E7F               	movlw	127
 21147  01AAD4  14DE               	andwf	postinc2,w,c
 21148  01AAD6  6E0C               	movwf	(btemp+11)^0,c
 21149  01AAD8  5009               	movf	(btemp+8)^0,w,c
 21150  01AADA  100A               	iorwf	(btemp+9)^0,w,c
 21151  01AADC  100B               	iorwf	(btemp+10)^0,w,c
 21152  01AADE  100C               	iorwf	(btemp+11)^0,w,c
 21153  01AAE0  A4D8               	btfss	status,2,c
 21154  01AAE2  D008               	goto	l8937
 21155                           
 21156                           ;stkvar	_ff2 @ sp[(0)+-8]
 21157  01AAE4  0EF8               	movlw	-8
 21158  01AAE6  6AE3               	clrf	plusw1,c
 21159  01AAE8  0EF9               	movlw	-7
 21160  01AAEA  6AE3               	clrf	plusw1,c
 21161  01AAEC  0EFA               	movlw	-6
 21162  01AAEE  6AE3               	clrf	plusw1,c
 21163  01AAF0  0EFB               	movlw	-5
 21164  01AAF2  6AE3               	clrf	plusw1,c
 21165  01AAF4                     l8937:
 21166                           
 21167                           ;stkvar	_ff2 @ sp[(0)+-8]
 21168                           ;stkvar	_ff1 @ sp[(0)+-4]
 21169  01AAF4  50E1               	movf	fsr1l,w,c
 21170  01AAF6  0FFC               	addlw	-4
 21171  01AAF8  6ED9               	movwf	fsr2l,c
 21172  01AAFA  50E2               	movf	fsr1h,w,c
 21173  01AAFC  6EDA               	movwf	fsr2h,c
 21174  01AAFE  0EFF               	movlw	255
 21175  01AB00  22DA               	addwfc	fsr2h,f,c
 21176  01AB02  0EF8               	movlw	-8
 21177  01AB04  50E3               	movf	plusw1,w,c
 21178  01AB06  18DE               	xorwf	postinc2,w,c
 21179  01AB08  E10D               	bnz	u7370
 21180  01AB0A  0EF9               	movlw	-7
 21181  01AB0C  50E3               	movf	plusw1,w,c
 21182  01AB0E  18DE               	xorwf	postinc2,w,c
 21183  01AB10  E109               	bnz	u7370
 21184  01AB12  0EFA               	movlw	-6
 21185  01AB14  50E3               	movf	plusw1,w,c
 21186  01AB16  18DE               	xorwf	postinc2,w,c
 21187  01AB18  E105               	bnz	u7370
 21188  01AB1A  0EFB               	movlw	-5
 21189  01AB1C  50E3               	movf	plusw1,w,c
 21190  01AB1E  18DE               	xorwf	postinc2,w,c
 21191  01AB20  B4D8               	btfsc	status,2,c
 21192  01AB22  D002               	goto	l8941
 21193  01AB24                     u7370:
 21194  01AB24  9001               	bcf	btemp& (0+255),0,c
 21195  01AB26  D001               	goto	l2775
 21196  01AB28                     l8941:
 21197  01AB28  8001               	bsf	btemp& (0+255),0,c
 21198  01AB2A                     l2775:
 21199                           
 21200                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 21201  01AB2A  0EF8               	movlw	248
 21202  01AB2C  26E1               	addwf	fsr1l,f,c
 21203  01AB2E  0EFF               	movlw	255
 21204  01AB30  22E2               	addwfc	fsr1h,f,c
 21205  01AB32  0012               	return		;funcret
 21206  01AB34                     __end_of___fleq:
 21207                           	opt callstack 0
 21208                           
 21209 ;; *************** function ___awmod *****************
 21210 ;; Defined at:
 21211 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 21212 ;; Parameters:    Size  Location     Type
 21213 ;;  dividend        2  [STACK] int 
 21214 ;;  divisor         2  [STACK] int 
 21215 ;; Auto vars:     Size  Location     Type
 21216 ;;  sign            1  [STACK] unsigned char 
 21217 ;;  counter         1  [STACK] unsigned char 
 21218 ;; Return value:  Size  Location     Type
 21219 ;;                  2  [STACK] int 
 21220 ;; Registers used:
 21221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21222 ;; Tracked objects:
 21223 ;;		On entry : 0/0
 21224 ;;		On exit  : 0/0
 21225 ;;		Unchanged: 0/0
 21226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21231 ;;Total ram usage:        0 bytes
 21232 ;; Hardware stack levels used:    1
 21233 ;; Hardware stack levels required when called:   15
 21234 ;; This function calls:
 21235 ;;		Nothing
 21236 ;; This function is called by:
 21237 ;;		_efgtoa
 21238 ;; This function uses a reentrant model
 21239 ;;
 21240                           
 21241                           	psect	text74
 21242  01A01C                     __ptext74:
 21243                           	opt callstack 0
 21244  01A01C                     ___awmod:
 21245                           	opt callstack 0
 21246                           
 21247                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21248  01A01C  52E6               	movf	postinc1,f,c
 21249  01A01E  52E6               	movf	postinc1,f,c
 21250                           
 21251                           ;stkvar	_sign @ sp[(-2)+0]
 21252                           
 21253                           ;incstack = 0
 21254 ;; hardware stack exceeded
 21255  01A020  0EFE               	movlw	-2
 21256  01A022  6AE3               	clrf	plusw1,c
 21257                           
 21258                           ;stkvar	_dividend @ sp[(-2)+-2]
 21259  01A024  0EFD               	movlw	-3
 21260  01A026  AEE3               	btfss	plusw1,7,c
 21261  01A028  D009               	goto	l8899
 21262                           
 21263                           ;stkvar	_dividend @ sp[(-2)+-2]
 21264                           ;stkvar	_dividend @ sp[(-2)+-2]
 21265  01A02A  0EFC               	movlw	-4
 21266  01A02C  6CE3               	negf	plusw1,c
 21267  01A02E  0EFD               	movlw	-3
 21268  01A030  1EE3               	comf	plusw1,f,c
 21269  01A032  B0D8               	btfsc	status,0,c
 21270  01A034  2AE3               	incf	plusw1,f,c
 21271                           
 21272                           ;stkvar	_sign @ sp[(-2)+0]
 21273  01A036  0EFE               	movlw	-2
 21274  01A038  6AE3               	clrf	plusw1,c
 21275  01A03A  2AE3               	incf	plusw1,f,c
 21276  01A03C                     l8899:
 21277                           
 21278                           ;stkvar	_divisor @ sp[(-2)+-4]
 21279  01A03C  0EFB               	movlw	-5
 21280  01A03E  AEE3               	btfss	plusw1,7,c
 21281  01A040  D006               	goto	l8903
 21282                           
 21283                           ;stkvar	_divisor @ sp[(-2)+-4]
 21284                           ;stkvar	_divisor @ sp[(-2)+-4]
 21285  01A042  0EFA               	movlw	-6
 21286  01A044  6CE3               	negf	plusw1,c
 21287  01A046  0EFB               	movlw	-5
 21288  01A048  1EE3               	comf	plusw1,f,c
 21289  01A04A  B0D8               	btfsc	status,0,c
 21290  01A04C  2AE3               	incf	plusw1,f,c
 21291  01A04E                     l8903:
 21292                           
 21293                           ;stkvar	_divisor @ sp[(-2)+-4]
 21294  01A04E  0EFA               	movlw	-6
 21295  01A050  006F FF8C  F001    	movff	plusw1,btemp
 21296  01A056  0EFB               	movlw	-5
 21297  01A058  50E3               	movf	plusw1,w,c
 21298  01A05A  1001               	iorwf	btemp^0,w,c
 21299  01A05C  B4D8               	btfsc	status,2,c
 21300  01A05E  D053               	goto	u7330
 21301                           
 21302                           ;stkvar	_counter @ sp[(-2)+1]
 21303  01A060  0EFF               	movlw	-1
 21304  01A062  6AE3               	clrf	plusw1,c
 21305  01A064  D012               	goto	L25
 21306  01A066                     l8907:
 21307                           
 21308                           ;stkvar	_divisor @ sp[(-2)+-4]
 21309  01A066  0EFA               	movlw	-6
 21310  01A068  50E3               	movf	plusw1,w,c
 21311  01A06A  90D8               	bcf	status,0,c
 21312  01A06C  34E8               	rlcf	wreg,w,c
 21313  01A06E  6E01               	movwf	btemp^0,c
 21314  01A070  0EFA               	movlw	-6
 21315  01A072  0060  F007  FFE3   	movff	btemp,plusw1
 21316  01A078  0EFB               	movlw	-5
 21317  01A07A  50E3               	movf	plusw1,w,c
 21318  01A07C  34E8               	rlcf	wreg,w,c
 21319  01A07E  6E01               	movwf	btemp^0,c
 21320  01A080  0EFB               	movlw	-5
 21321  01A082  0060  F007  FFE3   	movff	btemp,plusw1
 21322                           
 21323                           ;stkvar	_counter @ sp[(-2)+1]
 21324  01A088  0EFF               	movlw	-1
 21325  01A08A                     L25:
 21326  01A08A  2AE3               	incf	plusw1,f,c
 21327                           
 21328                           ;stkvar	_divisor @ sp[(-2)+-4]
 21329  01A08C  0EFB               	movlw	-5
 21330  01A08E  AEE3               	btfss	plusw1,7,c
 21331  01A090  D7EA               	goto	l8907
 21332  01A092                     u7310:
 21333                           
 21334                           ;stkvar	_divisor @ sp[(-2)+-4]
 21335  01A092  0EFA               	movlw	-6
 21336  01A094  006F FF8C  F00B    	movff	plusw1,btemp+10
 21337  01A09A  0EFB               	movlw	-5
 21338  01A09C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21339                           
 21340                           ;stkvar	_dividend @ sp[(-2)+-2]
 21341  01A0A2  0EFC               	movlw	-4
 21342  01A0A4  006F FF8C  F009    	movff	plusw1,btemp+8
 21343  01A0AA  0EFD               	movlw	-3
 21344  01A0AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 21345  01A0B2  500B               	movf	(btemp+10)^0,w,c
 21346  01A0B4  5C09               	subwf	(btemp+8)^0,w,c
 21347  01A0B6  500C               	movf	(btemp+11)^0,w,c
 21348  01A0B8  580A               	subwfb	(btemp+9)^0,w,c
 21349  01A0BA  A0D8               	btfss	status,0,c
 21350  01A0BC  D014               	goto	l8917
 21351                           
 21352                           ;stkvar	_divisor @ sp[(-2)+-4]
 21353                           ;stkvar	_dividend @ sp[(-2)+-2]
 21354  01A0BE  0EFC               	movlw	-4
 21355  01A0C0  50E3               	movf	plusw1,w,c
 21356  01A0C2  6E01               	movwf	btemp^0,c
 21357  01A0C4  0EFA               	movlw	-6
 21358  01A0C6  50E3               	movf	plusw1,w,c
 21359  01A0C8  5E01               	subwf	btemp^0,f,c
 21360  01A0CA  0EFC               	movlw	-4
 21361  01A0CC  0060  F007  FFE3   	movff	btemp,plusw1
 21362  01A0D2  0EFD               	movlw	-3
 21363  01A0D4  50E3               	movf	plusw1,w,c
 21364  01A0D6  6E01               	movwf	btemp^0,c
 21365  01A0D8  0EFB               	movlw	-5
 21366  01A0DA  50E3               	movf	plusw1,w,c
 21367  01A0DC  5A01               	subwfb	btemp^0,f,c
 21368  01A0DE  0EFD               	movlw	-3
 21369  01A0E0  0060  F007  FFE3   	movff	btemp,plusw1
 21370  01A0E6                     l8917:
 21371                           
 21372                           ;stkvar	_divisor @ sp[(-2)+-4]
 21373  01A0E6  90D8               	bcf	status,0,c
 21374  01A0E8  0EFB               	movlw	-5
 21375  01A0EA  32E3               	rrcf	plusw1,f,c
 21376  01A0EC  0EFA               	movlw	-6
 21377  01A0EE  32E3               	rrcf	plusw1,f,c
 21378                           
 21379                           ;stkvar	_counter @ sp[(-2)+1]
 21380  01A0F0  0EFF               	movlw	-1
 21381  01A0F2  50E3               	movf	plusw1,w,c
 21382  01A0F4  6E01               	movwf	btemp^0,c
 21383  01A0F6  0E01               	movlw	1
 21384  01A0F8  5E01               	subwf	btemp^0,f,c
 21385  01A0FA  0EFF               	movlw	-1
 21386  01A0FC  0060  F007  FFE3   	movff	btemp,plusw1
 21387  01A102  A4D8               	btfss	status,2,c
 21388  01A104  D7C6               	goto	u7310
 21389  01A106                     u7330:
 21390                           
 21391                           ;stkvar	_sign @ sp[(-2)+0]
 21392  01A106  0EFE               	movlw	-2
 21393  01A108  50E3               	movf	plusw1,w,c
 21394  01A10A  B4D8               	btfsc	status,2,c
 21395  01A10C  D006               	goto	l8925
 21396                           
 21397                           ;stkvar	_dividend @ sp[(-2)+-2]
 21398                           ;stkvar	_dividend @ sp[(-2)+-2]
 21399  01A10E  0EFC               	movlw	-4
 21400  01A110  6CE3               	negf	plusw1,c
 21401  01A112  0EFD               	movlw	-3
 21402  01A114  1EE3               	comf	plusw1,f,c
 21403  01A116  B0D8               	btfsc	status,0,c
 21404  01A118  2AE3               	incf	plusw1,f,c
 21405  01A11A                     l8925:
 21406                           
 21407                           ;stkvar	_dividend @ sp[(-2)+-2]
 21408  01A11A  0EFC               	movlw	-4
 21409  01A11C  006F FF8C  F001    	movff	plusw1,btemp
 21410  01A122  0EFD               	movlw	-3
 21411  01A124  006F FF8C  F002    	movff	plusw1,btemp+1
 21412                           
 21413                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21414  01A12A  0EFA               	movlw	250
 21415  01A12C  26E1               	addwf	fsr1l,f,c
 21416  01A12E  0EFF               	movlw	255
 21417  01A130  22E2               	addwfc	fsr1h,f,c
 21418  01A132  0012               	return		;funcret
 21419  01A134                     __end_of___awmod:
 21420                           	opt callstack 0
 21421                           
 21422 ;; *************** function ___awdiv *****************
 21423 ;; Defined at:
 21424 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 21425 ;; Parameters:    Size  Location     Type
 21426 ;;  dividend        2  [STACK] int 
 21427 ;;  divisor         2  [STACK] int 
 21428 ;; Auto vars:     Size  Location     Type
 21429 ;;  quotient        2  [STACK] int 
 21430 ;;  sign            1  [STACK] unsigned char 
 21431 ;;  counter         1  [STACK] unsigned char 
 21432 ;; Return value:  Size  Location     Type
 21433 ;;                  2  [STACK] int 
 21434 ;; Registers used:
 21435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21436 ;; Tracked objects:
 21437 ;;		On entry : 0/0
 21438 ;;		On exit  : 0/0
 21439 ;;		Unchanged: 0/0
 21440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21445 ;;Total ram usage:        0 bytes
 21446 ;; Hardware stack levels used:    1
 21447 ;; Hardware stack levels required when called:   15
 21448 ;; This function calls:
 21449 ;;		Nothing
 21450 ;; This function is called by:
 21451 ;;		_efgtoa
 21452 ;; This function uses a reentrant model
 21453 ;;
 21454                           
 21455                           	psect	text75
 21456  0197AA                     __ptext75:
 21457                           	opt callstack 0
 21458  0197AA                     ___awdiv:
 21459                           	opt callstack 0
 21460                           
 21461                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21462  0197AA  52E6               	movf	postinc1,f,c
 21463  0197AC  52E6               	movf	postinc1,f,c
 21464  0197AE  52E6               	movf	postinc1,f,c
 21465  0197B0  52E6               	movf	postinc1,f,c
 21466                           
 21467                           ;stkvar	_sign @ sp[(-4)+2]
 21468                           
 21469                           ;incstack = 0
 21470 ;; hardware stack exceeded
 21471  0197B2  0EFE               	movlw	-2
 21472  0197B4  6AE3               	clrf	plusw1,c
 21473                           
 21474                           ;stkvar	_divisor @ sp[(-4)+-4]
 21475  0197B6  0EF9               	movlw	-7
 21476  0197B8  AEE3               	btfss	plusw1,7,c
 21477  0197BA  D009               	goto	l8853
 21478                           
 21479                           ;stkvar	_divisor @ sp[(-4)+-4]
 21480                           ;stkvar	_divisor @ sp[(-4)+-4]
 21481  0197BC  0EF8               	movlw	-8
 21482  0197BE  6CE3               	negf	plusw1,c
 21483  0197C0  0EF9               	movlw	-7
 21484  0197C2  1EE3               	comf	plusw1,f,c
 21485  0197C4  B0D8               	btfsc	status,0,c
 21486  0197C6  2AE3               	incf	plusw1,f,c
 21487                           
 21488                           ;stkvar	_sign @ sp[(-4)+2]
 21489  0197C8  0EFE               	movlw	-2
 21490  0197CA  6AE3               	clrf	plusw1,c
 21491  0197CC  2AE3               	incf	plusw1,f,c
 21492  0197CE                     l8853:
 21493                           
 21494                           ;stkvar	_dividend @ sp[(-4)+-2]
 21495  0197CE  0EFB               	movlw	-5
 21496  0197D0  AEE3               	btfss	plusw1,7,c
 21497  0197D2  D008               	goto	l8859
 21498                           
 21499                           ;stkvar	_dividend @ sp[(-4)+-2]
 21500                           ;stkvar	_dividend @ sp[(-4)+-2]
 21501  0197D4  0EFA               	movlw	-6
 21502  0197D6  6CE3               	negf	plusw1,c
 21503  0197D8  0EFB               	movlw	-5
 21504  0197DA  1EE3               	comf	plusw1,f,c
 21505  0197DC  B0D8               	btfsc	status,0,c
 21506  0197DE  2AE3               	incf	plusw1,f,c
 21507                           
 21508                           ;stkvar	_sign @ sp[(-4)+2]
 21509  0197E0  0EFE               	movlw	-2
 21510  0197E2  70E3               	btg	plusw1,0,c
 21511  0197E4                     l8859:
 21512                           
 21513                           ;stkvar	_quotient @ sp[(-4)+0]
 21514  0197E4  0EFC               	movlw	-4
 21515  0197E6  6AE3               	clrf	plusw1,c
 21516  0197E8  0EFD               	movlw	-3
 21517  0197EA  6AE3               	clrf	plusw1,c
 21518                           
 21519                           ;stkvar	_divisor @ sp[(-4)+-4]
 21520  0197EC  0EF8               	movlw	-8
 21521  0197EE  006F FF8C  F001    	movff	plusw1,btemp
 21522  0197F4  0EF9               	movlw	-7
 21523  0197F6  50E3               	movf	plusw1,w,c
 21524  0197F8  1001               	iorwf	btemp^0,w,c
 21525  0197FA  B4D8               	btfsc	status,2,c
 21526  0197FC  D066               	goto	u7260
 21527                           
 21528                           ;stkvar	_counter @ sp[(-4)+3]
 21529  0197FE  0EFF               	movlw	-1
 21530  019800  6AE3               	clrf	plusw1,c
 21531  019802  D012               	goto	L26
 21532  019804                     l8865:
 21533                           
 21534                           ;stkvar	_divisor @ sp[(-4)+-4]
 21535  019804  0EF8               	movlw	-8
 21536  019806  50E3               	movf	plusw1,w,c
 21537  019808  90D8               	bcf	status,0,c
 21538  01980A  34E8               	rlcf	wreg,w,c
 21539  01980C  6E01               	movwf	btemp^0,c
 21540  01980E  0EF8               	movlw	-8
 21541  019810  0060  F007  FFE3   	movff	btemp,plusw1
 21542  019816  0EF9               	movlw	-7
 21543  019818  50E3               	movf	plusw1,w,c
 21544  01981A  34E8               	rlcf	wreg,w,c
 21545  01981C  6E01               	movwf	btemp^0,c
 21546  01981E  0EF9               	movlw	-7
 21547  019820  0060  F007  FFE3   	movff	btemp,plusw1
 21548                           
 21549                           ;stkvar	_counter @ sp[(-4)+3]
 21550  019826  0EFF               	movlw	-1
 21551  019828                     L26:
 21552  019828  2AE3               	incf	plusw1,f,c
 21553                           
 21554                           ;stkvar	_divisor @ sp[(-4)+-4]
 21555  01982A  0EF9               	movlw	-7
 21556  01982C  AEE3               	btfss	plusw1,7,c
 21557  01982E  D7EA               	goto	l8865
 21558  019830                     u7240:
 21559                           
 21560                           ;stkvar	_quotient @ sp[(-4)+0]
 21561  019830  0EFC               	movlw	-4
 21562  019832  50E3               	movf	plusw1,w,c
 21563  019834  90D8               	bcf	status,0,c
 21564  019836  34E8               	rlcf	wreg,w,c
 21565  019838  6E01               	movwf	btemp^0,c
 21566  01983A  0EFC               	movlw	-4
 21567  01983C  0060  F007  FFE3   	movff	btemp,plusw1
 21568  019842  0EFD               	movlw	-3
 21569  019844  50E3               	movf	plusw1,w,c
 21570  019846  34E8               	rlcf	wreg,w,c
 21571  019848  6E01               	movwf	btemp^0,c
 21572  01984A  0EFD               	movlw	-3
 21573  01984C  0060  F007  FFE3   	movff	btemp,plusw1
 21574                           
 21575                           ;stkvar	_divisor @ sp[(-4)+-4]
 21576  019852  0EF8               	movlw	-8
 21577  019854  006F FF8C  F00B    	movff	plusw1,btemp+10
 21578  01985A  0EF9               	movlw	-7
 21579  01985C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21580                           
 21581                           ;stkvar	_dividend @ sp[(-4)+-2]
 21582  019862  0EFA               	movlw	-6
 21583  019864  006F FF8C  F009    	movff	plusw1,btemp+8
 21584  01986A  0EFB               	movlw	-5
 21585  01986C  006F FF8C  F00A    	movff	plusw1,btemp+9
 21586  019872  500B               	movf	(btemp+10)^0,w,c
 21587  019874  5C09               	subwf	(btemp+8)^0,w,c
 21588  019876  500C               	movf	(btemp+11)^0,w,c
 21589  019878  580A               	subwfb	(btemp+9)^0,w,c
 21590  01987A  A0D8               	btfss	status,0,c
 21591  01987C  D016               	goto	l8879
 21592                           
 21593                           ;stkvar	_divisor @ sp[(-4)+-4]
 21594                           ;stkvar	_dividend @ sp[(-4)+-2]
 21595  01987E  0EFA               	movlw	-6
 21596  019880  50E3               	movf	plusw1,w,c
 21597  019882  6E01               	movwf	btemp^0,c
 21598  019884  0EF8               	movlw	-8
 21599  019886  50E3               	movf	plusw1,w,c
 21600  019888  5E01               	subwf	btemp^0,f,c
 21601  01988A  0EFA               	movlw	-6
 21602  01988C  0060  F007  FFE3   	movff	btemp,plusw1
 21603  019892  0EFB               	movlw	-5
 21604  019894  50E3               	movf	plusw1,w,c
 21605  019896  6E01               	movwf	btemp^0,c
 21606  019898  0EF9               	movlw	-7
 21607  01989A  50E3               	movf	plusw1,w,c
 21608  01989C  5A01               	subwfb	btemp^0,f,c
 21609  01989E  0EFB               	movlw	-5
 21610  0198A0  0060  F007  FFE3   	movff	btemp,plusw1
 21611                           
 21612                           ;stkvar	_quotient @ sp[(-4)+0]
 21613  0198A6  0EFC               	movlw	-4
 21614  0198A8  80E3               	bsf	plusw1,0,c
 21615  0198AA                     l8879:
 21616                           
 21617                           ;stkvar	_divisor @ sp[(-4)+-4]
 21618  0198AA  90D8               	bcf	status,0,c
 21619  0198AC  0EF9               	movlw	-7
 21620  0198AE  32E3               	rrcf	plusw1,f,c
 21621  0198B0  0EF8               	movlw	-8
 21622  0198B2  32E3               	rrcf	plusw1,f,c
 21623                           
 21624                           ;stkvar	_counter @ sp[(-4)+3]
 21625  0198B4  0EFF               	movlw	-1
 21626  0198B6  50E3               	movf	plusw1,w,c
 21627  0198B8  6E01               	movwf	btemp^0,c
 21628  0198BA  0E01               	movlw	1
 21629  0198BC  5E01               	subwf	btemp^0,f,c
 21630  0198BE  0EFF               	movlw	-1
 21631  0198C0  0060  F007  FFE3   	movff	btemp,plusw1
 21632  0198C6  A4D8               	btfss	status,2,c
 21633  0198C8  D7B3               	goto	u7240
 21634  0198CA                     u7260:
 21635                           
 21636                           ;stkvar	_sign @ sp[(-4)+2]
 21637  0198CA  0EFE               	movlw	-2
 21638  0198CC  50E3               	movf	plusw1,w,c
 21639  0198CE  B4D8               	btfsc	status,2,c
 21640  0198D0  D006               	goto	l8887
 21641                           
 21642                           ;stkvar	_quotient @ sp[(-4)+0]
 21643                           ;stkvar	_quotient @ sp[(-4)+0]
 21644  0198D2  0EFC               	movlw	-4
 21645  0198D4  6CE3               	negf	plusw1,c
 21646  0198D6  0EFD               	movlw	-3
 21647  0198D8  1EE3               	comf	plusw1,f,c
 21648  0198DA  B0D8               	btfsc	status,0,c
 21649  0198DC  2AE3               	incf	plusw1,f,c
 21650  0198DE                     l8887:
 21651                           
 21652                           ;stkvar	_quotient @ sp[(-4)+0]
 21653  0198DE  0EFC               	movlw	-4
 21654  0198E0  006F FF8C  F001    	movff	plusw1,btemp
 21655  0198E6  0EFD               	movlw	-3
 21656  0198E8  006F FF8C  F002    	movff	plusw1,btemp+1
 21657                           
 21658                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21659  0198EE  0EF8               	movlw	248
 21660  0198F0  26E1               	addwf	fsr1l,f,c
 21661  0198F2  0EFF               	movlw	255
 21662  0198F4  22E2               	addwfc	fsr1h,f,c
 21663  0198F6  0012               	return		;funcret
 21664  0198F8                     __end_of___awdiv:
 21665                           	opt callstack 0
 21666                           
 21667 ;; *************** function _dtoa *****************
 21668 ;; Defined at:
 21669 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21670 ;; Parameters:    Size  Location     Type
 21671 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21672 ;;		 -> f(6), NULL(0), 
 21673 ;;  d               8  [STACK] long long 
 21674 ;; Auto vars:     Size  Location     Type
 21675 ;;  n               8  [STACK] long long 
 21676 ;;  i               2  [STACK] int 
 21677 ;;  s               2  [STACK] int 
 21678 ;;  w               2  [STACK] int 
 21679 ;;  p               2  [STACK] int 
 21680 ;; Return value:  Size  Location     Type
 21681 ;;                  2  [STACK] int 
 21682 ;; Registers used:
 21683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 21684 ;; Tracked objects:
 21685 ;;		On entry : 0/0
 21686 ;;		On exit  : 0/0
 21687 ;;		Unchanged: 0/0
 21688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21693 ;;Total ram usage:        0 bytes
 21694 ;; Hardware stack levels used:    1
 21695 ;; Hardware stack levels required when called:   20
 21696 ;; This function calls:
 21697 ;;		___aodiv
 21698 ;;		___aomod
 21699 ;;		_abs
 21700 ;;		_pad
 21701 ;; This function is called by:
 21702 ;;		_vfpfcnvrt
 21703 ;; This function uses a reentrant model
 21704 ;;
 21705                           
 21706                           	psect	text76
 21707  01585C                     __ptext76:
 21708                           	opt callstack 0
 21709  01585C                     _dtoa:
 21710                           	opt callstack 0
 21711                           
 21712                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 21713  01585C  0E12               	movlw	18
 21714  01585E  26E1               	addwf	fsr1l,f,c
 21715  015860  0E00               	movlw	0
 21716  015862  22E2               	addwfc	fsr1h,f,c
 21717                           
 21718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 21719                           ;stkvar	_d @ sp[(-18)+-10]
 21720                           
 21721                           ;incstack = 0
 21722 ;; hardware stack exceeded
 21723  015864  0EE4               	movlw	228
 21724  015866  24E1               	addwf	fsr1l,w,c
 21725  015868  6ED9               	movwf	fsr2l,c
 21726  01586A  0EFF               	movlw	255
 21727  01586C  20E2               	addwfc	fsr1h,w,c
 21728  01586E  6EDA               	movwf	fsr2h,c
 21729                           
 21730                           ;stkvar	_n @ sp[(-18)+2]
 21731  015870  0E08               	movlw	8
 21732  015872  6E01               	movwf	btemp^0,c
 21733  015874  0EF0               	movlw	-16
 21734  015876                     us1136999:
 21735  015876  006F FF7B FFE3     	movff	postinc2,plusw1
 21736  01587C  28E8               	incf	wreg,w,c
 21737  01587E  2E01               	decfsz	btemp^0,f,c
 21738  015880  D7FA               	bra	us1136999
 21739                           
 21740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 21741                           ;stkvar	_n @ sp[(-18)+2]
 21742  015882  0EF7               	movlw	-9
 21743  015884  AEE3               	btfss	plusw1,7,c
 21744  015886  D002               	goto	u11370
 21745  015888  0E01               	movlw	1
 21746  01588A  D001               	goto	u11380
 21747  01588C                     u11370:
 21748  01588C  0E00               	movlw	0
 21749  01588E                     u11380:
 21750  01588E  6E0B               	movwf	(btemp+10)^0,c
 21751  015890  6A0C               	clrf	(btemp+11)^0,c
 21752                           
 21753                           ;stkvar	_s @ sp[(-18)+12]
 21754  015892  0EFA               	movlw	-6
 21755  015894  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21756  01589A  0EFB               	movlw	-5
 21757  01589C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21758                           
 21759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 21760                           ;stkvar	_s @ sp[(-18)+12]
 21761  0158A2  0EFA               	movlw	-6
 21762  0158A4  006F FF8C  F001    	movff	plusw1,btemp
 21763  0158AA  0EFB               	movlw	-5
 21764  0158AC  50E3               	movf	plusw1,w,c
 21765  0158AE  1001               	iorwf	btemp^0,w,c
 21766  0158B0  B4D8               	btfsc	status,2,c
 21767  0158B2  D025               	goto	u11400
 21768                           
 21769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 21770                           ;stkvar	_n @ sp[(-18)+2]
 21771                           ;stkvar	_n @ sp[(-18)+2]
 21772  0158B4  0EF0               	movlw	-16
 21773  0158B6  6CE3               	negf	plusw1,c
 21774  0158B8  0EF1               	movlw	-15
 21775  0158BA  1EE3               	comf	plusw1,f,c
 21776  0158BC  0EF2               	movlw	-14
 21777  0158BE  1EE3               	comf	plusw1,f,c
 21778  0158C0  0EF3               	movlw	-13
 21779  0158C2  1EE3               	comf	plusw1,f,c
 21780  0158C4  0EF4               	movlw	-12
 21781  0158C6  1EE3               	comf	plusw1,f,c
 21782  0158C8  0EF5               	movlw	-11
 21783  0158CA  1EE3               	comf	plusw1,f,c
 21784  0158CC  0EF6               	movlw	-10
 21785  0158CE  1EE3               	comf	plusw1,f,c
 21786  0158D0  0EF7               	movlw	-9
 21787  0158D2  1EE3               	comf	plusw1,f,c
 21788  0158D4  E314               	bnc	u11400
 21789  0158D6  0EF1               	movlw	-15
 21790  0158D8  2AE3               	incf	plusw1,f,c
 21791  0158DA  E311               	bnc	u11400
 21792  0158DC  0EF2               	movlw	-14
 21793  0158DE  2AE3               	incf	plusw1,f,c
 21794  0158E0  E30E               	bnc	u11400
 21795  0158E2  0EF3               	movlw	-13
 21796  0158E4  2AE3               	incf	plusw1,f,c
 21797  0158E6  E30B               	bnc	u11400
 21798  0158E8  0EF4               	movlw	-12
 21799  0158EA  2AE3               	incf	plusw1,f,c
 21800  0158EC  E308               	bnc	u11400
 21801  0158EE  0EF5               	movlw	-11
 21802  0158F0  2AE3               	incf	plusw1,f,c
 21803  0158F2  E305               	bnc	u11400
 21804  0158F4  0EF6               	movlw	-10
 21805  0158F6  2AE3               	incf	plusw1,f,c
 21806  0158F8  E302               	bnc	u11400
 21807  0158FA  0EF7               	movlw	-9
 21808  0158FC  2AE3               	incf	plusw1,f,c
 21809  0158FE                     u11400:
 21810                           
 21811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 21812  0158FE  AE3D               	btfss	(_prec+1)^0,7,c
 21813                           
 21814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 21815  015900  923E               	bcf	_flags^0,1,c
 21816                           
 21817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 21818  015902  BE3D               	btfsc	(_prec+1)^0,7,c
 21819  015904  D005               	goto	u11420
 21820  015906  503D               	movf	(_prec+1)^0,w,c
 21821  015908  E110               	bnz	l12499
 21822  01590A  043C               	decf	_prec^0,w,c
 21823  01590C  B0D8               	btfsc	status,0,c
 21824  01590E  D00D               	goto	l12499
 21825  015910                     u11420:
 21826  015910  0E01               	movlw	1
 21827  015912  6E0B               	movwf	(btemp+10)^0,c
 21828  015914  0E00               	movlw	0
 21829  015916  6E0C               	movwf	(btemp+11)^0,c
 21830                           
 21831                           ;stkvar	_p @ sp[(-18)+16]
 21832  015918  0EFE               	movlw	-2
 21833  01591A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21834  015920  0EFF               	movlw	-1
 21835  015922  0060  F033  FFE3   	movff	btemp+11,plusw1
 21836  015928  D008               	goto	l2279
 21837  01592A                     l12499:
 21838                           
 21839                           ;stkvar	_p @ sp[(-18)+16]
 21840  01592A  0EFE               	movlw	-2
 21841  01592C  0060  F0F3  FFE3   	movff	_prec,plusw1
 21842  015932  0EFF               	movlw	-1
 21843  015934  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 21844  01593A                     l2279:
 21845                           
 21846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 21847                           ;stkvar	_w @ sp[(-18)+14]
 21848  01593A  0EFC               	movlw	-4
 21849  01593C  0060  F0EB  FFE3   	movff	_width,plusw1
 21850  015942  0EFD               	movlw	-3
 21851  015944  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21852                           
 21853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 21854                           ;stkvar	_s @ sp[(-18)+12]
 21855  01594A  0EFA               	movlw	-6
 21856  01594C  006F FF8C  F001    	movff	plusw1,btemp
 21857  015952  0EFB               	movlw	-5
 21858  015954  50E3               	movf	plusw1,w,c
 21859  015956  1001               	iorwf	btemp^0,w,c
 21860  015958  A4D8               	btfss	status,2,c
 21861  01595A  D002               	goto	u11440
 21862  01595C  A43E               	btfss	_flags^0,2,c
 21863  01595E  D00A               	goto	l12507
 21864  015960                     u11440:
 21865                           
 21866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 21867                           ;stkvar	_w @ sp[(-18)+14]
 21868  015960  50E1               	movf	fsr1l,w,c
 21869  015962  0FFC               	addlw	-4
 21870  015964  6ED9               	movwf	fsr2l,c
 21871  015966  50E2               	movf	fsr1h,w,c
 21872  015968  6EDA               	movwf	fsr2h,c
 21873  01596A  0EFF               	movlw	255
 21874  01596C  22DA               	addwfc	fsr2h,f,c
 21875  01596E  06DE               	decf	postinc2,f,c
 21876  015970  0E00               	movlw	0
 21877  015972  5ADD               	subwfb	postdec2,f,c
 21878  015974                     l12507:
 21879                           
 21880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 21881  015974  0E4F               	movlw	79
 21882  015976  6E0B               	movwf	(btemp+10)^0,c
 21883  015978  0E00               	movlw	0
 21884  01597A  6E0C               	movwf	(btemp+11)^0,c
 21885                           
 21886                           ;stkvar	_i @ sp[(-18)+10]
 21887  01597C  0EF8               	movlw	-8
 21888  01597E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21889  015984  0EF9               	movlw	-7
 21890  015986  0060  F033  FFE3   	movff	btemp+11,plusw1
 21891                           
 21892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 21893  01598C  0102               	movlb	2	; () banked
 21894  01598E  6BE6               	clrf	(_dbuf+79)& (0+255),b
 21895                           
 21896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21897  015990  D109               	goto	l12521
 21898  015992                     l12511:
 21899                           
 21900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 21901                           ;stkvar	_i @ sp[(-18)+10]
 21902  015992  50E1               	movf	fsr1l,w,c
 21903  015994  0FF8               	addlw	-8
 21904  015996  6ED9               	movwf	fsr2l,c
 21905  015998  50E2               	movf	fsr1h,w,c
 21906  01599A  6EDA               	movwf	fsr2h,c
 21907  01599C  0EFF               	movlw	255
 21908  01599E  22DA               	addwfc	fsr2h,f,c
 21909  0159A0  06DE               	decf	postinc2,f,c
 21910  0159A2  0E00               	movlw	0
 21911  0159A4  5ADD               	subwfb	postdec2,f,c
 21912                           
 21913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 21914  0159A6  0E0A               	movlw	10
 21915  0159A8  6EE6               	movwf	postinc1,c
 21916  0159AA  0E00               	movlw	0
 21917  0159AC  6EE6               	movwf	postinc1,c
 21918  0159AE  0E00               	movlw	0
 21919  0159B0  6EE6               	movwf	postinc1,c
 21920  0159B2  0E00               	movlw	0
 21921  0159B4  6EE6               	movwf	postinc1,c
 21922  0159B6  0E00               	movlw	0
 21923  0159B8  6EE6               	movwf	postinc1,c
 21924  0159BA  0E00               	movlw	0
 21925  0159BC  6EE6               	movwf	postinc1,c
 21926  0159BE  0E00               	movlw	0
 21927  0159C0  6EE6               	movwf	postinc1,c
 21928  0159C2  0E00               	movlw	0
 21929  0159C4  6EE6               	movwf	postinc1,c
 21930                           
 21931                           ;stkvar	_n @ sp[(-26)+2]
 21932  0159C6  50E1               	movf	fsr1l,w,c
 21933  0159C8  0FE8               	addlw	-24
 21934  0159CA  6ED9               	movwf	fsr2l,c
 21935  0159CC  50E2               	movf	fsr1h,w,c
 21936  0159CE  6EDA               	movwf	fsr2h,c
 21937  0159D0  0EFF               	movlw	255
 21938  0159D2  22DA               	addwfc	fsr2h,f,c
 21939  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 21940  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 21941  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 21942  0159E6  006F FF7B FFE6     	movff	postinc2,postinc1
 21943  0159EC  006F FF7B FFE6     	movff	postinc2,postinc1
 21944  0159F2  006F FF7B FFE6     	movff	postinc2,postinc1
 21945  0159F8  006F FF7B FFE6     	movff	postinc2,postinc1
 21946  0159FE  006F FF7B FFE6     	movff	postinc2,postinc1
 21947  015A04  EC74  F0C0         	call	___aomod	;wreg free
 21948  015A08  52E5               	movf	postdec1,f,c
 21949  015A0A  006F FF9C  F018    	movff	indf1,btemp+23
 21950  015A10  52E5               	movf	postdec1,f,c
 21951  015A12  006F FF9C  F017    	movff	indf1,btemp+22
 21952  015A18  52E5               	movf	postdec1,f,c
 21953  015A1A  006F FF9C  F016    	movff	indf1,btemp+21
 21954  015A20  52E5               	movf	postdec1,f,c
 21955  015A22  006F FF9C  F015    	movff	indf1,btemp+20
 21956  015A28  52E5               	movf	postdec1,f,c
 21957  015A2A  006F FF9C  F014    	movff	indf1,btemp+19
 21958  015A30  52E5               	movf	postdec1,f,c
 21959  015A32  006F FF9C  F013    	movff	indf1,btemp+18
 21960  015A38  52E5               	movf	postdec1,f,c
 21961  015A3A  006F FF9C  F012    	movff	indf1,btemp+17
 21962  015A40  52E5               	movf	postdec1,f,c
 21963  015A42  006F FF9C  F011    	movff	indf1,btemp+16
 21964  015A48  0EF8               	movlw	248
 21965  015A4A  26E1               	addwf	fsr1l,f,c
 21966  015A4C  0EFF               	movlw	255
 21967  015A4E  22E2               	addwfc	fsr1h,f,c
 21968  015A50  0060  F044  F00B   	movff	btemp+16,btemp+10
 21969  015A56  0060  F048  F00C   	movff	btemp+17,btemp+11
 21970  015A5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21971  015A62  0060  F033  FFE6   	movff	btemp+11,postinc1
 21972  015A68  EC23  F0DF         	call	_abs	;wreg free
 21973  015A6C  0E30               	movlw	48
 21974  015A6E  2601               	addwf	btemp^0,f,c
 21975                           
 21976                           ;stkvar	_i @ sp[(-18)+10]
 21977  015A70  0EF8               	movlw	-8
 21978  015A72  006F FF8C  F00B    	movff	plusw1,btemp+10
 21979  015A78  0EF9               	movlw	-7
 21980  015A7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21981  015A80  0E97               	movlw	low _dbuf
 21982  015A82  240B               	addwf	(btemp+10)^0,w,c
 21983  015A84  6ED9               	movwf	fsr2l,c
 21984  015A86  0E02               	movlw	high _dbuf
 21985  015A88  200C               	addwfc	(btemp+11)^0,w,c
 21986  015A8A  6EDA               	movwf	fsr2h,c
 21987  015A8C  0060  F007  FFDF   	movff	btemp,indf2
 21988                           
 21989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 21990                           ;stkvar	_p @ sp[(-18)+16]
 21991  015A92  50E1               	movf	fsr1l,w,c
 21992  015A94  0FFE               	addlw	-2
 21993  015A96  6ED9               	movwf	fsr2l,c
 21994  015A98  50E2               	movf	fsr1h,w,c
 21995  015A9A  6EDA               	movwf	fsr2h,c
 21996  015A9C  0EFF               	movlw	255
 21997  015A9E  22DA               	addwfc	fsr2h,f,c
 21998  015AA0  06DE               	decf	postinc2,f,c
 21999  015AA2  0E00               	movlw	0
 22000  015AA4  5ADD               	subwfb	postdec2,f,c
 22001                           
 22002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22003                           ;stkvar	_w @ sp[(-18)+14]
 22004  015AA6  50E1               	movf	fsr1l,w,c
 22005  015AA8  0FFC               	addlw	-4
 22006  015AAA  6ED9               	movwf	fsr2l,c
 22007  015AAC  50E2               	movf	fsr1h,w,c
 22008  015AAE  6EDA               	movwf	fsr2h,c
 22009  015AB0  0EFF               	movlw	255
 22010  015AB2  22DA               	addwfc	fsr2h,f,c
 22011  015AB4  06DE               	decf	postinc2,f,c
 22012  015AB6  0E00               	movlw	0
 22013  015AB8  5ADD               	subwfb	postdec2,f,c
 22014                           
 22015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 22016  015ABA  0E0A               	movlw	10
 22017  015ABC  6EE6               	movwf	postinc1,c
 22018  015ABE  0E00               	movlw	0
 22019  015AC0  6EE6               	movwf	postinc1,c
 22020  015AC2  0E00               	movlw	0
 22021  015AC4  6EE6               	movwf	postinc1,c
 22022  015AC6  0E00               	movlw	0
 22023  015AC8  6EE6               	movwf	postinc1,c
 22024  015ACA  0E00               	movlw	0
 22025  015ACC  6EE6               	movwf	postinc1,c
 22026  015ACE  0E00               	movlw	0
 22027  015AD0  6EE6               	movwf	postinc1,c
 22028  015AD2  0E00               	movlw	0
 22029  015AD4  6EE6               	movwf	postinc1,c
 22030  015AD6  0E00               	movlw	0
 22031  015AD8  6EE6               	movwf	postinc1,c
 22032                           
 22033                           ;stkvar	_n @ sp[(-26)+2]
 22034  015ADA  50E1               	movf	fsr1l,w,c
 22035  015ADC  0FE8               	addlw	-24
 22036  015ADE  6ED9               	movwf	fsr2l,c
 22037  015AE0  50E2               	movf	fsr1h,w,c
 22038  015AE2  6EDA               	movwf	fsr2h,c
 22039  015AE4  0EFF               	movlw	255
 22040  015AE6  22DA               	addwfc	fsr2h,f,c
 22041  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 22042  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 22043  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 22044  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 22045  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 22046  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 22047  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 22048  015B12  006F FF7B FFE6     	movff	postinc2,postinc1
 22049  015B18  EC9E  F0BB         	call	___aodiv	;wreg free
 22050  015B1C  52E5               	movf	postdec1,f,c
 22051  015B1E  006F FF9C  F018    	movff	indf1,btemp+23
 22052  015B24  52E5               	movf	postdec1,f,c
 22053  015B26  006F FF9C  F017    	movff	indf1,btemp+22
 22054  015B2C  52E5               	movf	postdec1,f,c
 22055  015B2E  006F FF9C  F016    	movff	indf1,btemp+21
 22056  015B34  52E5               	movf	postdec1,f,c
 22057  015B36  006F FF9C  F015    	movff	indf1,btemp+20
 22058  015B3C  52E5               	movf	postdec1,f,c
 22059  015B3E  006F FF9C  F014    	movff	indf1,btemp+19
 22060  015B44  52E5               	movf	postdec1,f,c
 22061  015B46  006F FF9C  F013    	movff	indf1,btemp+18
 22062  015B4C  52E5               	movf	postdec1,f,c
 22063  015B4E  006F FF9C  F012    	movff	indf1,btemp+17
 22064  015B54  52E5               	movf	postdec1,f,c
 22065  015B56  006F FF9C  F011    	movff	indf1,btemp+16
 22066  015B5C  0EF8               	movlw	248
 22067  015B5E  26E1               	addwf	fsr1l,f,c
 22068  015B60  0EFF               	movlw	255
 22069  015B62  22E2               	addwfc	fsr1h,f,c
 22070                           
 22071                           ;stkvar	_n @ sp[(-18)+2]
 22072  015B64  0EF0               	movlw	-16
 22073  015B66  0060  F047  FFE3   	movff	btemp+16,plusw1
 22074  015B6C  0EF1               	movlw	-15
 22075  015B6E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 22076  015B74  0EF2               	movlw	-14
 22077  015B76  0060  F04F  FFE3   	movff	btemp+18,plusw1
 22078  015B7C  0EF3               	movlw	-13
 22079  015B7E  0060  F053  FFE3   	movff	btemp+19,plusw1
 22080  015B84  0EF4               	movlw	-12
 22081  015B86  0060  F057  FFE3   	movff	btemp+20,plusw1
 22082  015B8C  0EF5               	movlw	-11
 22083  015B8E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 22084  015B94  0EF6               	movlw	-10
 22085  015B96  0060  F05F  FFE3   	movff	btemp+22,plusw1
 22086  015B9C  0EF7               	movlw	-9
 22087  015B9E  0060  F063  FFE3   	movff	btemp+23,plusw1
 22088  015BA4                     l12521:
 22089                           
 22090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22091                           ;stkvar	_i @ sp[(-18)+10]
 22092  015BA4  0EF9               	movlw	-7
 22093  015BA6  BEE3               	btfsc	plusw1,7,c
 22094  015BA8  D036               	goto	u11490
 22095  015BAA  0EF9               	movlw	-7
 22096  015BAC  50E3               	movf	plusw1,w,c
 22097  015BAE  E104               	bnz	u11450
 22098  015BB0  0EF8               	movlw	-8
 22099  015BB2  04E3               	decf	plusw1,w,c
 22100  015BB4  A0D8               	btfss	status,0,c
 22101  015BB6  D02F               	goto	u11490
 22102  015BB8                     u11450:
 22103                           
 22104                           ;stkvar	_n @ sp[(-18)+2]
 22105  015BB8  0EF0               	movlw	-16
 22106  015BBA  50E3               	movf	plusw1,w,c
 22107  015BBC  E115               	bnz	u11461
 22108  015BBE  0EF1               	movlw	-15
 22109  015BC0  50E3               	movf	plusw1,w,c
 22110  015BC2  E112               	bnz	u11461
 22111  015BC4  0EF2               	movlw	-14
 22112  015BC6  50E3               	movf	plusw1,w,c
 22113  015BC8  E10F               	bnz	u11461
 22114  015BCA  0EF3               	movlw	-13
 22115  015BCC  50E3               	movf	plusw1,w,c
 22116  015BCE  E10C               	bnz	u11461
 22117  015BD0  0EF4               	movlw	-12
 22118  015BD2  50E3               	movf	plusw1,w,c
 22119  015BD4  E109               	bnz	u11461
 22120  015BD6  0EF5               	movlw	-11
 22121  015BD8  50E3               	movf	plusw1,w,c
 22122  015BDA  E106               	bnz	u11461
 22123  015BDC  0EF6               	movlw	-10
 22124  015BDE  50E3               	movf	plusw1,w,c
 22125  015BE0  E103               	bnz	u11461
 22126  015BE2  0EF7               	movlw	-9
 22127  015BE4  50E3               	movf	plusw1,w,c
 22128  015BE6  A4D8               	btfss	status,2,c
 22129  015BE8                     u11461:
 22130  015BE8  D6D4               	goto	l12511
 22131                           
 22132                           ;stkvar	_p @ sp[(-18)+16]
 22133  015BEA  0EFF               	movlw	-1
 22134  015BEC  BEE3               	btfsc	plusw1,7,c
 22135  015BEE  D007               	goto	u11470
 22136  015BF0  0EFF               	movlw	-1
 22137  015BF2  50E3               	movf	plusw1,w,c
 22138  015BF4  E103               	bnz	u11471
 22139  015BF6  0EFE               	movlw	-2
 22140  015BF8  04E3               	decf	plusw1,w,c
 22141  015BFA  B0D8               	btfsc	status,0,c
 22142  015BFC                     u11471:
 22143  015BFC  D6CA               	goto	l12511
 22144  015BFE                     u11470:
 22145                           
 22146                           ;stkvar	_w @ sp[(-18)+14]
 22147  015BFE  0EFD               	movlw	-3
 22148  015C00  BEE3               	btfsc	plusw1,7,c
 22149  015C02  D009               	goto	u11490
 22150  015C04  0EFD               	movlw	-3
 22151  015C06  50E3               	movf	plusw1,w,c
 22152  015C08  E104               	bnz	u11480
 22153  015C0A  0EFC               	movlw	-4
 22154  015C0C  04E3               	decf	plusw1,w,c
 22155  015C0E  A0D8               	btfss	status,0,c
 22156  015C10  D002               	goto	u11490
 22157  015C12                     u11480:
 22158  015C12  B23E               	btfsc	_flags^0,1,c
 22159  015C14  D6BE               	goto	l12511
 22160  015C16                     u11490:
 22161                           
 22162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 22163                           ;stkvar	_s @ sp[(-18)+12]
 22164  015C16  0EFA               	movlw	-6
 22165  015C18  006F FF8C  F001    	movff	plusw1,btemp
 22166  015C1E  0EFB               	movlw	-5
 22167  015C20  50E3               	movf	plusw1,w,c
 22168  015C22  1001               	iorwf	btemp^0,w,c
 22169  015C24  A4D8               	btfss	status,2,c
 22170  015C26  D002               	goto	u11510
 22171  015C28  A43E               	btfss	_flags^0,2,c
 22172  015C2A  D033               	goto	l12545
 22173  015C2C                     u11510:
 22174                           
 22175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 22176                           ;stkvar	_i @ sp[(-18)+10]
 22177  015C2C  50E1               	movf	fsr1l,w,c
 22178  015C2E  0FF8               	addlw	-8
 22179  015C30  6ED9               	movwf	fsr2l,c
 22180  015C32  50E2               	movf	fsr1h,w,c
 22181  015C34  6EDA               	movwf	fsr2h,c
 22182  015C36  0EFF               	movlw	255
 22183  015C38  22DA               	addwfc	fsr2h,f,c
 22184  015C3A  06DE               	decf	postinc2,f,c
 22185  015C3C  0E00               	movlw	0
 22186  015C3E  5ADD               	subwfb	postdec2,f,c
 22187                           
 22188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 22189                           ;stkvar	_s @ sp[(-18)+12]
 22190  015C40  0EFA               	movlw	-6
 22191  015C42  006F FF8C  F001    	movff	plusw1,btemp
 22192  015C48  0EFB               	movlw	-5
 22193  015C4A  50E3               	movf	plusw1,w,c
 22194  015C4C  1001               	iorwf	btemp^0,w,c
 22195  015C4E  A4D8               	btfss	status,2,c
 22196  015C50  D002               	goto	l12541
 22197  015C52  0E2B               	movlw	43
 22198  015C54  D001               	goto	L27
 22199  015C56                     l12541:
 22200  015C56  0E2D               	movlw	45
 22201  015C58                     L27:
 22202  015C58  6E0B               	movwf	(btemp+10)^0,c
 22203  015C5A  0E00               	movlw	0
 22204  015C5C  6E0C               	movwf	(btemp+11)^0,c
 22205                           
 22206                           ;stkvar	_dtoa$5831 @ sp[(-18)+0]
 22207  015C5E  0EEE               	movlw	-18
 22208  015C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22209  015C66  0EEF               	movlw	-17
 22210  015C68  0060  F033  FFE3   	movff	btemp+11,plusw1
 22211                           
 22212                           ;stkvar	_dtoa$5831 @ sp[(-18)+0]
 22213                           ;stkvar	_i @ sp[(-18)+10]
 22214  015C6E  0EF8               	movlw	-8
 22215  015C70  006F FF8C  F00B    	movff	plusw1,btemp+10
 22216  015C76  0EF9               	movlw	-7
 22217  015C78  006F FF8C  F00C    	movff	plusw1,btemp+11
 22218  015C7E  0E97               	movlw	low _dbuf
 22219  015C80  240B               	addwf	(btemp+10)^0,w,c
 22220  015C82  6ED9               	movwf	fsr2l,c
 22221  015C84  0E02               	movlw	high _dbuf
 22222  015C86  200C               	addwfc	(btemp+11)^0,w,c
 22223  015C88  6EDA               	movwf	fsr2h,c
 22224  015C8A  0EEE               	movlw	-18
 22225  015C8C  006F FF8F FFDF     	movff	plusw1,indf2
 22226  015C92                     l12545:
 22227                           
 22228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 22229                           ;stkvar	_w @ sp[(-18)+14]
 22230  015C92  0EFC               	movlw	-4
 22231  015C94  006F FF8F FFE6     	movff	plusw1,postinc1
 22232  015C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 22233                           
 22234                           ;stkvar	_i @ sp[(-20)+10]
 22235  015CA0  0E97               	movlw	low _dbuf
 22236  015CA2  6E0B               	movwf	(btemp+10)^0,c
 22237  015CA4  0E02               	movlw	high _dbuf
 22238  015CA6  6E0C               	movwf	(btemp+11)^0,c
 22239  015CA8  0EF6               	movlw	-10
 22240  015CAA  50E3               	movf	plusw1,w,c
 22241  015CAC  260B               	addwf	(btemp+10)^0,f,c
 22242  015CAE  0EF7               	movlw	-9
 22243  015CB0  50E3               	movf	plusw1,w,c
 22244  015CB2  220C               	addwfc	(btemp+11)^0,f,c
 22245  015CB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22246  015CBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 22247                           
 22248                           ;stkvar	_fp @ sp[(-22)+-2]
 22249  015CC0  0EE8               	movlw	-24
 22250  015CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 22251  015CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 22252  015CCE  EC9A  F0D0         	call	_pad	;wreg free
 22253                           
 22254                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 22255  015CD2  0EE4               	movlw	228
 22256  015CD4  26E1               	addwf	fsr1l,f,c
 22257  015CD6  0EFF               	movlw	255
 22258  015CD8  22E2               	addwfc	fsr1h,f,c
 22259  015CDA  0012               	return		;funcret
 22260  015CDC                     __end_of_dtoa:
 22261                           	opt callstack 0
 22262                           
 22263 ;; *************** function _abs *****************
 22264 ;; Defined at:
 22265 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 22266 ;; Parameters:    Size  Location     Type
 22267 ;;  a               2  [STACK] int 
 22268 ;; Auto vars:     Size  Location     Type
 22269 ;;		None
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  2  [STACK] int 
 22272 ;; Registers used:
 22273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/2
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22283 ;;Total ram usage:        0 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:   15
 22286 ;; This function calls:
 22287 ;;		Nothing
 22288 ;; This function is called by:
 22289 ;;		_dtoa
 22290 ;; This function uses a reentrant model
 22291 ;;
 22292                           
 22293                           	psect	text77
 22294  01BE46                     __ptext77:
 22295                           	opt callstack 0
 22296  01BE46                     _abs:
 22297                           	opt callstack 0
 22298                           
 22299                           ;stkvar	_a @ sp[(0)+-2]
 22300                           
 22301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22302                           ;incstack = 0
 22303 ;; hardware stack exceeded
 22304  01BE46  0EFF               	movlw	-1
 22305  01BE48  BEE3               	btfsc	plusw1,7,c
 22306  01BE4A  D007               	goto	u6220
 22307  01BE4C  0EFF               	movlw	-1
 22308  01BE4E  50E3               	movf	plusw1,w,c
 22309  01BE50  E112               	bnz	l8341
 22310  01BE52  0EFE               	movlw	-2
 22311  01BE54  04E3               	decf	plusw1,w,c
 22312  01BE56  B0D8               	btfsc	status,0,c
 22313  01BE58  D00E               	goto	l8341
 22314  01BE5A                     u6220:
 22315                           
 22316                           ;stkvar	_a @ sp[(0)+-2]
 22317  01BE5A  0EFE               	movlw	-2
 22318  01BE5C  006F FF8C  F001    	movff	plusw1,btemp
 22319  01BE62  1E01               	comf	btemp^0,f,c
 22320  01BE64  0EFF               	movlw	-1
 22321  01BE66  006F FF8C  F002    	movff	plusw1,btemp+1
 22322  01BE6C  1E02               	comf	(btemp+1)^0,f,c
 22323  01BE6E  2A01               	incf	btemp^0,f,c
 22324  01BE70  B4D8               	btfsc	status,2,c
 22325  01BE72  2A02               	incf	(btemp+1)^0,f,c
 22326  01BE74  D008               	goto	l3205
 22327  01BE76                     l8341:
 22328                           
 22329                           ;stkvar	_a @ sp[(0)+-2]
 22330  01BE76  0EFE               	movlw	-2
 22331  01BE78  006F FF8C  F001    	movff	plusw1,btemp
 22332  01BE7E  0EFF               	movlw	-1
 22333  01BE80  006F FF8C  F002    	movff	plusw1,btemp+1
 22334  01BE86                     l3205:
 22335                           
 22336                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 22337  01BE86  52E5               	movf	postdec1,f,c
 22338  01BE88  52E5               	movf	postdec1,f,c
 22339  01BE8A  0012               	return		;funcret
 22340  01BE8C                     __end_of_abs:
 22341                           	opt callstack 0
 22342                           
 22343 ;; *************** function ___aomod *****************
 22344 ;; Defined at:
 22345 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 22346 ;; Parameters:    Size  Location     Type
 22347 ;;  dividend        8  [STACK] long long 
 22348 ;;  divisor         8  [STACK] long long 
 22349 ;; Auto vars:     Size  Location     Type
 22350 ;;  sign            1  [STACK] unsigned char 
 22351 ;;  counter         1  [STACK] unsigned char 
 22352 ;; Return value:  Size  Location     Type
 22353 ;;                  8  [STACK] long long 
 22354 ;; Registers used:
 22355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22356 ;; Tracked objects:
 22357 ;;		On entry : 0/2
 22358 ;;		On exit  : 0/0
 22359 ;;		Unchanged: 0/0
 22360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22365 ;;Total ram usage:        0 bytes
 22366 ;; Hardware stack levels used:    1
 22367 ;; Hardware stack levels required when called:   15
 22368 ;; This function calls:
 22369 ;;		Nothing
 22370 ;; This function is called by:
 22371 ;;		_dtoa
 22372 ;; This function uses a reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text78
 22376  0180E8                     __ptext78:
 22377                           	opt callstack 0
 22378  0180E8                     ___aomod:
 22379                           	opt callstack 0
 22380                           
 22381                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 22382  0180E8  52E6               	movf	postinc1,f,c
 22383  0180EA  52E6               	movf	postinc1,f,c
 22384                           
 22385                           ;stkvar	_sign @ sp[(-2)+0]
 22386                           
 22387                           ;incstack = 0
 22388 ;; hardware stack exceeded
 22389  0180EC  0EFE               	movlw	-2
 22390  0180EE  6AE3               	clrf	plusw1,c
 22391                           
 22392                           ;stkvar	_dividend @ sp[(-2)+-8]
 22393  0180F0  0EFD               	movlw	-3
 22394  0180F2  AEE3               	btfss	plusw1,7,c
 22395  0180F4  D028               	goto	l8499
 22396                           
 22397                           ;stkvar	_dividend @ sp[(-2)+-8]
 22398                           ;stkvar	_dividend @ sp[(-2)+-8]
 22399  0180F6  0EF6               	movlw	-10
 22400  0180F8  6CE3               	negf	plusw1,c
 22401  0180FA  0EF7               	movlw	-9
 22402  0180FC  1EE3               	comf	plusw1,f,c
 22403  0180FE  0EF8               	movlw	-8
 22404  018100  1EE3               	comf	plusw1,f,c
 22405  018102  0EF9               	movlw	-7
 22406  018104  1EE3               	comf	plusw1,f,c
 22407  018106  0EFA               	movlw	-6
 22408  018108  1EE3               	comf	plusw1,f,c
 22409  01810A  0EFB               	movlw	-5
 22410  01810C  1EE3               	comf	plusw1,f,c
 22411  01810E  0EFC               	movlw	-4
 22412  018110  1EE3               	comf	plusw1,f,c
 22413  018112  0EFD               	movlw	-3
 22414  018114  1EE3               	comf	plusw1,f,c
 22415  018116  E314               	bnc	u6650
 22416  018118  0EF7               	movlw	-9
 22417  01811A  2AE3               	incf	plusw1,f,c
 22418  01811C  E311               	bnc	u6650
 22419  01811E  0EF8               	movlw	-8
 22420  018120  2AE3               	incf	plusw1,f,c
 22421  018122  E30E               	bnc	u6650
 22422  018124  0EF9               	movlw	-7
 22423  018126  2AE3               	incf	plusw1,f,c
 22424  018128  E30B               	bnc	u6650
 22425  01812A  0EFA               	movlw	-6
 22426  01812C  2AE3               	incf	plusw1,f,c
 22427  01812E  E308               	bnc	u6650
 22428  018130  0EFB               	movlw	-5
 22429  018132  2AE3               	incf	plusw1,f,c
 22430  018134  E305               	bnc	u6650
 22431  018136  0EFC               	movlw	-4
 22432  018138  2AE3               	incf	plusw1,f,c
 22433  01813A  E302               	bnc	u6650
 22434  01813C  0EFD               	movlw	-3
 22435  01813E  2AE3               	incf	plusw1,f,c
 22436  018140                     u6650:
 22437                           
 22438                           ;stkvar	_sign @ sp[(-2)+0]
 22439  018140  0EFE               	movlw	-2
 22440  018142  6AE3               	clrf	plusw1,c
 22441  018144  2AE3               	incf	plusw1,f,c
 22442  018146                     l8499:
 22443                           
 22444                           ;stkvar	_divisor @ sp[(-2)+-16]
 22445  018146  0EF5               	movlw	-11
 22446  018148  AEE3               	btfss	plusw1,7,c
 22447  01814A  D025               	goto	u6670
 22448                           
 22449                           ;stkvar	_divisor @ sp[(-2)+-16]
 22450                           ;stkvar	_divisor @ sp[(-2)+-16]
 22451  01814C  0EEE               	movlw	-18
 22452  01814E  6CE3               	negf	plusw1,c
 22453  018150  0EEF               	movlw	-17
 22454  018152  1EE3               	comf	plusw1,f,c
 22455  018154  0EF0               	movlw	-16
 22456  018156  1EE3               	comf	plusw1,f,c
 22457  018158  0EF1               	movlw	-15
 22458  01815A  1EE3               	comf	plusw1,f,c
 22459  01815C  0EF2               	movlw	-14
 22460  01815E  1EE3               	comf	plusw1,f,c
 22461  018160  0EF3               	movlw	-13
 22462  018162  1EE3               	comf	plusw1,f,c
 22463  018164  0EF4               	movlw	-12
 22464  018166  1EE3               	comf	plusw1,f,c
 22465  018168  0EF5               	movlw	-11
 22466  01816A  1EE3               	comf	plusw1,f,c
 22467  01816C  E314               	bnc	u6670
 22468  01816E  0EEF               	movlw	-17
 22469  018170  2AE3               	incf	plusw1,f,c
 22470  018172  E311               	bnc	u6670
 22471  018174  0EF0               	movlw	-16
 22472  018176  2AE3               	incf	plusw1,f,c
 22473  018178  E30E               	bnc	u6670
 22474  01817A  0EF1               	movlw	-15
 22475  01817C  2AE3               	incf	plusw1,f,c
 22476  01817E  E30B               	bnc	u6670
 22477  018180  0EF2               	movlw	-14
 22478  018182  2AE3               	incf	plusw1,f,c
 22479  018184  E308               	bnc	u6670
 22480  018186  0EF3               	movlw	-13
 22481  018188  2AE3               	incf	plusw1,f,c
 22482  01818A  E305               	bnc	u6670
 22483  01818C  0EF4               	movlw	-12
 22484  01818E  2AE3               	incf	plusw1,f,c
 22485  018190  E302               	bnc	u6670
 22486  018192  0EF5               	movlw	-11
 22487  018194  2AE3               	incf	plusw1,f,c
 22488  018196                     u6670:
 22489                           
 22490                           ;stkvar	_divisor @ sp[(-2)+-16]
 22491  018196  0EEE               	movlw	-18
 22492  018198  50E3               	movf	plusw1,w,c
 22493  01819A  E116               	bnz	u6680
 22494  01819C  0EEF               	movlw	-17
 22495  01819E  50E3               	movf	plusw1,w,c
 22496  0181A0  E113               	bnz	u6680
 22497  0181A2  0EF0               	movlw	-16
 22498  0181A4  50E3               	movf	plusw1,w,c
 22499  0181A6  E110               	bnz	u6680
 22500  0181A8  0EF1               	movlw	-15
 22501  0181AA  50E3               	movf	plusw1,w,c
 22502  0181AC  E10D               	bnz	u6680
 22503  0181AE  0EF2               	movlw	-14
 22504  0181B0  50E3               	movf	plusw1,w,c
 22505  0181B2  E10A               	bnz	u6680
 22506  0181B4  0EF3               	movlw	-13
 22507  0181B6  50E3               	movf	plusw1,w,c
 22508  0181B8  E107               	bnz	u6680
 22509  0181BA  0EF4               	movlw	-12
 22510  0181BC  50E3               	movf	plusw1,w,c
 22511  0181BE  E104               	bnz	u6680
 22512  0181C0  0EF5               	movlw	-11
 22513  0181C2  50E3               	movf	plusw1,w,c
 22514  0181C4  B4D8               	btfsc	status,2,c
 22515  0181C6  D075               	goto	u6710
 22516  0181C8                     u6680:
 22517                           
 22518                           ;stkvar	_counter @ sp[(-2)+1]
 22519  0181C8  0EFF               	movlw	-1
 22520  0181CA  6AE3               	clrf	plusw1,c
 22521  0181CC  D012               	goto	L28
 22522  0181CE                     l8507:
 22523                           
 22524                           ;stkvar	_divisor @ sp[(-2)+-16]
 22525  0181CE  90D8               	bcf	status,0,c
 22526  0181D0  0EEE               	movlw	-18
 22527  0181D2  36E3               	rlcf	plusw1,f,c
 22528  0181D4  0EEF               	movlw	-17
 22529  0181D6  36E3               	rlcf	plusw1,f,c
 22530  0181D8  0EF0               	movlw	-16
 22531  0181DA  36E3               	rlcf	plusw1,f,c
 22532  0181DC  0EF1               	movlw	-15
 22533  0181DE  36E3               	rlcf	plusw1,f,c
 22534  0181E0  0EF2               	movlw	-14
 22535  0181E2  36E3               	rlcf	plusw1,f,c
 22536  0181E4  0EF3               	movlw	-13
 22537  0181E6  36E3               	rlcf	plusw1,f,c
 22538  0181E8  0EF4               	movlw	-12
 22539  0181EA  36E3               	rlcf	plusw1,f,c
 22540  0181EC  0EF5               	movlw	-11
 22541  0181EE  36E3               	rlcf	plusw1,f,c
 22542                           
 22543                           ;stkvar	_counter @ sp[(-2)+1]
 22544  0181F0  0EFF               	movlw	-1
 22545  0181F2                     L28:
 22546  0181F2  2AE3               	incf	plusw1,f,c
 22547                           
 22548                           ;stkvar	_divisor @ sp[(-2)+-16]
 22549  0181F4  0EF5               	movlw	-11
 22550  0181F6  AEE3               	btfss	plusw1,7,c
 22551  0181F8  D7EA               	goto	l8507
 22552  0181FA                     u6690:
 22553                           
 22554                           ;stkvar	_divisor @ sp[(-2)+-16]
 22555                           ;stkvar	_dividend @ sp[(-2)+-8]
 22556  0181FA  50E1               	movf	fsr1l,w,c
 22557  0181FC  0FF6               	addlw	-10
 22558  0181FE  6ED9               	movwf	fsr2l,c
 22559  018200  50E2               	movf	fsr1h,w,c
 22560  018202  6EDA               	movwf	fsr2h,c
 22561  018204  0EFF               	movlw	255
 22562  018206  22DA               	addwfc	fsr2h,f,c
 22563  018208  0EEE               	movlw	-18
 22564  01820A  50E3               	movf	plusw1,w,c
 22565  01820C  5CDE               	subwf	postinc2,w,c
 22566  01820E  0EEF               	movlw	-17
 22567  018210  50E3               	movf	plusw1,w,c
 22568  018212  58DE               	subwfb	postinc2,w,c
 22569  018214  0EF0               	movlw	-16
 22570  018216  50E3               	movf	plusw1,w,c
 22571  018218  58DE               	subwfb	postinc2,w,c
 22572  01821A  0EF1               	movlw	-15
 22573  01821C  50E3               	movf	plusw1,w,c
 22574  01821E  58DE               	subwfb	postinc2,w,c
 22575  018220  0EF2               	movlw	-14
 22576  018222  50E3               	movf	plusw1,w,c
 22577  018224  58DE               	subwfb	postinc2,w,c
 22578  018226  0EF3               	movlw	-13
 22579  018228  50E3               	movf	plusw1,w,c
 22580  01822A  58DE               	subwfb	postinc2,w,c
 22581  01822C  0EF4               	movlw	-12
 22582  01822E  50E3               	movf	plusw1,w,c
 22583  018230  58DE               	subwfb	postinc2,w,c
 22584  018232  0EF5               	movlw	-11
 22585  018234  50E3               	movf	plusw1,w,c
 22586  018236  58DE               	subwfb	postinc2,w,c
 22587  018238  A0D8               	btfss	status,0,c
 22588  01823A  D01F               	goto	l8515
 22589                           
 22590                           ;stkvar	_divisor @ sp[(-2)+-16]
 22591                           ;stkvar	_dividend @ sp[(-2)+-8]
 22592  01823C  50E1               	movf	fsr1l,w,c
 22593  01823E  0FF6               	addlw	-10
 22594  018240  6ED9               	movwf	fsr2l,c
 22595  018242  50E2               	movf	fsr1h,w,c
 22596  018244  6EDA               	movwf	fsr2h,c
 22597  018246  0EFF               	movlw	255
 22598  018248  22DA               	addwfc	fsr2h,f,c
 22599  01824A  0EEE               	movlw	-18
 22600  01824C  50E3               	movf	plusw1,w,c
 22601  01824E  5EDE               	subwf	postinc2,f,c
 22602  018250  0EEF               	movlw	-17
 22603  018252  50E3               	movf	plusw1,w,c
 22604  018254  5ADE               	subwfb	postinc2,f,c
 22605  018256  0EF0               	movlw	-16
 22606  018258  50E3               	movf	plusw1,w,c
 22607  01825A  5ADE               	subwfb	postinc2,f,c
 22608  01825C  0EF1               	movlw	-15
 22609  01825E  50E3               	movf	plusw1,w,c
 22610  018260  5ADE               	subwfb	postinc2,f,c
 22611  018262  0EF2               	movlw	-14
 22612  018264  50E3               	movf	plusw1,w,c
 22613  018266  5ADE               	subwfb	postinc2,f,c
 22614  018268  0EF3               	movlw	-13
 22615  01826A  50E3               	movf	plusw1,w,c
 22616  01826C  5ADE               	subwfb	postinc2,f,c
 22617  01826E  0EF4               	movlw	-12
 22618  018270  50E3               	movf	plusw1,w,c
 22619  018272  5ADE               	subwfb	postinc2,f,c
 22620  018274  0EF5               	movlw	-11
 22621  018276  50E3               	movf	plusw1,w,c
 22622  018278  5ADE               	subwfb	postinc2,f,c
 22623  01827A                     l8515:
 22624                           
 22625                           ;stkvar	_divisor @ sp[(-2)+-16]
 22626  01827A  90D8               	bcf	status,0,c
 22627  01827C  0EF5               	movlw	-11
 22628  01827E  32E3               	rrcf	plusw1,f,c
 22629  018280  0EF4               	movlw	-12
 22630  018282  32E3               	rrcf	plusw1,f,c
 22631  018284  0EF3               	movlw	-13
 22632  018286  32E3               	rrcf	plusw1,f,c
 22633  018288  0EF2               	movlw	-14
 22634  01828A  32E3               	rrcf	plusw1,f,c
 22635  01828C  0EF1               	movlw	-15
 22636  01828E  32E3               	rrcf	plusw1,f,c
 22637  018290  0EF0               	movlw	-16
 22638  018292  32E3               	rrcf	plusw1,f,c
 22639  018294  0EEF               	movlw	-17
 22640  018296  32E3               	rrcf	plusw1,f,c
 22641  018298  0EEE               	movlw	-18
 22642  01829A  32E3               	rrcf	plusw1,f,c
 22643                           
 22644                           ;stkvar	_counter @ sp[(-2)+1]
 22645  01829C  0EFF               	movlw	-1
 22646  01829E  50E3               	movf	plusw1,w,c
 22647  0182A0  6E01               	movwf	btemp^0,c
 22648  0182A2  0E01               	movlw	1
 22649  0182A4  5E01               	subwf	btemp^0,f,c
 22650  0182A6  0EFF               	movlw	-1
 22651  0182A8  0060  F007  FFE3   	movff	btemp,plusw1
 22652  0182AE  A4D8               	btfss	status,2,c
 22653  0182B0  D7A4               	goto	u6690
 22654  0182B2                     u6710:
 22655                           
 22656                           ;stkvar	_sign @ sp[(-2)+0]
 22657  0182B2  0EFE               	movlw	-2
 22658  0182B4  50E3               	movf	plusw1,w,c
 22659  0182B6  B4D8               	btfsc	status,2,c
 22660  0182B8  D025               	goto	u6730
 22661                           
 22662                           ;stkvar	_dividend @ sp[(-2)+-8]
 22663                           ;stkvar	_dividend @ sp[(-2)+-8]
 22664  0182BA  0EF6               	movlw	-10
 22665  0182BC  6CE3               	negf	plusw1,c
 22666  0182BE  0EF7               	movlw	-9
 22667  0182C0  1EE3               	comf	plusw1,f,c
 22668  0182C2  0EF8               	movlw	-8
 22669  0182C4  1EE3               	comf	plusw1,f,c
 22670  0182C6  0EF9               	movlw	-7
 22671  0182C8  1EE3               	comf	plusw1,f,c
 22672  0182CA  0EFA               	movlw	-6
 22673  0182CC  1EE3               	comf	plusw1,f,c
 22674  0182CE  0EFB               	movlw	-5
 22675  0182D0  1EE3               	comf	plusw1,f,c
 22676  0182D2  0EFC               	movlw	-4
 22677  0182D4  1EE3               	comf	plusw1,f,c
 22678  0182D6  0EFD               	movlw	-3
 22679  0182D8  1EE3               	comf	plusw1,f,c
 22680  0182DA  E314               	bnc	u6730
 22681  0182DC  0EF7               	movlw	-9
 22682  0182DE  2AE3               	incf	plusw1,f,c
 22683  0182E0  E311               	bnc	u6730
 22684  0182E2  0EF8               	movlw	-8
 22685  0182E4  2AE3               	incf	plusw1,f,c
 22686  0182E6  E30E               	bnc	u6730
 22687  0182E8  0EF9               	movlw	-7
 22688  0182EA  2AE3               	incf	plusw1,f,c
 22689  0182EC  E30B               	bnc	u6730
 22690  0182EE  0EFA               	movlw	-6
 22691  0182F0  2AE3               	incf	plusw1,f,c
 22692  0182F2  E308               	bnc	u6730
 22693  0182F4  0EFB               	movlw	-5
 22694  0182F6  2AE3               	incf	plusw1,f,c
 22695  0182F8  E305               	bnc	u6730
 22696  0182FA  0EFC               	movlw	-4
 22697  0182FC  2AE3               	incf	plusw1,f,c
 22698  0182FE  E302               	bnc	u6730
 22699  018300  0EFD               	movlw	-3
 22700  018302  2AE3               	incf	plusw1,f,c
 22701  018304                     u6730:
 22702                           
 22703                           ;stkvar	_dividend @ sp[(-2)+-8]
 22704  018304  0EF6               	movlw	246
 22705  018306  24E1               	addwf	fsr1l,w,c
 22706  018308  6ED9               	movwf	fsr2l,c
 22707  01830A  0EFF               	movlw	255
 22708  01830C  20E2               	addwfc	fsr1h,w,c
 22709  01830E  6EDA               	movwf	fsr2h,c
 22710                           
 22711                           ;stkvar	?___aomod @ sp[(-2)+-8]
 22712  018310  0E08               	movlw	8
 22713  018312  6E01               	movwf	btemp^0,c
 22714  018314  0EF6               	movlw	-10
 22715  018316                     us674999:
 22716  018316  006F FF7B FFE3     	movff	postinc2,plusw1
 22717  01831C  28E8               	incf	wreg,w,c
 22718  01831E  2E01               	decfsz	btemp^0,f,c
 22719  018320  D7FA               	bra	us674999
 22720                           
 22721                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 22722  018322  52E5               	movf	postdec1,f,c
 22723  018324  52E5               	movf	postdec1,f,c
 22724  018326  0012               	return		;funcret
 22725  018328                     __end_of___aomod:
 22726                           	opt callstack 0
 22727                           
 22728 ;; *************** function ___aodiv *****************
 22729 ;; Defined at:
 22730 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 22731 ;; Parameters:    Size  Location     Type
 22732 ;;  dividend        8  [STACK] long long 
 22733 ;;  divisor         8  [STACK] long long 
 22734 ;; Auto vars:     Size  Location     Type
 22735 ;;  quotient        8  [STACK] long long 
 22736 ;;  sign            1  [STACK] unsigned char 
 22737 ;;  counter         1  [STACK] unsigned char 
 22738 ;; Return value:  Size  Location     Type
 22739 ;;                  8  [STACK] long long 
 22740 ;; Registers used:
 22741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22742 ;; Tracked objects:
 22743 ;;		On entry : 0/2
 22744 ;;		On exit  : 0/0
 22745 ;;		Unchanged: 0/0
 22746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22751 ;;Total ram usage:        0 bytes
 22752 ;; Hardware stack levels used:    1
 22753 ;; Hardware stack levels required when called:   15
 22754 ;; This function calls:
 22755 ;;		Nothing
 22756 ;; This function is called by:
 22757 ;;		_dtoa
 22758 ;; This function uses a reentrant model
 22759 ;;
 22760                           
 22761                           	psect	text79
 22762  01773C                     __ptext79:
 22763                           	opt callstack 0
 22764  01773C                     ___aodiv:
 22765                           	opt callstack 0
 22766                           
 22767                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 22768  01773C  0E0A               	movlw	10
 22769  01773E  26E1               	addwf	fsr1l,f,c
 22770  017740  0E00               	movlw	0
 22771  017742  22E2               	addwfc	fsr1h,f,c
 22772                           
 22773                           ;stkvar	_sign @ sp[(-10)+8]
 22774                           
 22775                           ;incstack = 0
 22776 ;; hardware stack exceeded
 22777  017744  0EFE               	movlw	-2
 22778  017746  6AE3               	clrf	plusw1,c
 22779                           
 22780                           ;stkvar	_divisor @ sp[(-10)+-16]
 22781  017748  0EED               	movlw	-19
 22782  01774A  AEE3               	btfss	plusw1,7,c
 22783  01774C  D028               	goto	l8455
 22784                           
 22785                           ;stkvar	_divisor @ sp[(-10)+-16]
 22786                           ;stkvar	_divisor @ sp[(-10)+-16]
 22787  01774E  0EE6               	movlw	-26
 22788  017750  6CE3               	negf	plusw1,c
 22789  017752  0EE7               	movlw	-25
 22790  017754  1EE3               	comf	plusw1,f,c
 22791  017756  0EE8               	movlw	-24
 22792  017758  1EE3               	comf	plusw1,f,c
 22793  01775A  0EE9               	movlw	-23
 22794  01775C  1EE3               	comf	plusw1,f,c
 22795  01775E  0EEA               	movlw	-22
 22796  017760  1EE3               	comf	plusw1,f,c
 22797  017762  0EEB               	movlw	-21
 22798  017764  1EE3               	comf	plusw1,f,c
 22799  017766  0EEC               	movlw	-20
 22800  017768  1EE3               	comf	plusw1,f,c
 22801  01776A  0EED               	movlw	-19
 22802  01776C  1EE3               	comf	plusw1,f,c
 22803  01776E  E314               	bnc	u6530
 22804  017770  0EE7               	movlw	-25
 22805  017772  2AE3               	incf	plusw1,f,c
 22806  017774  E311               	bnc	u6530
 22807  017776  0EE8               	movlw	-24
 22808  017778  2AE3               	incf	plusw1,f,c
 22809  01777A  E30E               	bnc	u6530
 22810  01777C  0EE9               	movlw	-23
 22811  01777E  2AE3               	incf	plusw1,f,c
 22812  017780  E30B               	bnc	u6530
 22813  017782  0EEA               	movlw	-22
 22814  017784  2AE3               	incf	plusw1,f,c
 22815  017786  E308               	bnc	u6530
 22816  017788  0EEB               	movlw	-21
 22817  01778A  2AE3               	incf	plusw1,f,c
 22818  01778C  E305               	bnc	u6530
 22819  01778E  0EEC               	movlw	-20
 22820  017790  2AE3               	incf	plusw1,f,c
 22821  017792  E302               	bnc	u6530
 22822  017794  0EED               	movlw	-19
 22823  017796  2AE3               	incf	plusw1,f,c
 22824  017798                     u6530:
 22825                           
 22826                           ;stkvar	_sign @ sp[(-10)+8]
 22827  017798  0EFE               	movlw	-2
 22828  01779A  6AE3               	clrf	plusw1,c
 22829  01779C  2AE3               	incf	plusw1,f,c
 22830  01779E                     l8455:
 22831                           
 22832                           ;stkvar	_dividend @ sp[(-10)+-8]
 22833  01779E  0EF5               	movlw	-11
 22834  0177A0  AEE3               	btfss	plusw1,7,c
 22835  0177A2  D027               	goto	l8461
 22836                           
 22837                           ;stkvar	_dividend @ sp[(-10)+-8]
 22838                           ;stkvar	_dividend @ sp[(-10)+-8]
 22839  0177A4  0EEE               	movlw	-18
 22840  0177A6  6CE3               	negf	plusw1,c
 22841  0177A8  0EEF               	movlw	-17
 22842  0177AA  1EE3               	comf	plusw1,f,c
 22843  0177AC  0EF0               	movlw	-16
 22844  0177AE  1EE3               	comf	plusw1,f,c
 22845  0177B0  0EF1               	movlw	-15
 22846  0177B2  1EE3               	comf	plusw1,f,c
 22847  0177B4  0EF2               	movlw	-14
 22848  0177B6  1EE3               	comf	plusw1,f,c
 22849  0177B8  0EF3               	movlw	-13
 22850  0177BA  1EE3               	comf	plusw1,f,c
 22851  0177BC  0EF4               	movlw	-12
 22852  0177BE  1EE3               	comf	plusw1,f,c
 22853  0177C0  0EF5               	movlw	-11
 22854  0177C2  1EE3               	comf	plusw1,f,c
 22855  0177C4  E314               	bnc	u6550
 22856  0177C6  0EEF               	movlw	-17
 22857  0177C8  2AE3               	incf	plusw1,f,c
 22858  0177CA  E311               	bnc	u6550
 22859  0177CC  0EF0               	movlw	-16
 22860  0177CE  2AE3               	incf	plusw1,f,c
 22861  0177D0  E30E               	bnc	u6550
 22862  0177D2  0EF1               	movlw	-15
 22863  0177D4  2AE3               	incf	plusw1,f,c
 22864  0177D6  E30B               	bnc	u6550
 22865  0177D8  0EF2               	movlw	-14
 22866  0177DA  2AE3               	incf	plusw1,f,c
 22867  0177DC  E308               	bnc	u6550
 22868  0177DE  0EF3               	movlw	-13
 22869  0177E0  2AE3               	incf	plusw1,f,c
 22870  0177E2  E305               	bnc	u6550
 22871  0177E4  0EF4               	movlw	-12
 22872  0177E6  2AE3               	incf	plusw1,f,c
 22873  0177E8  E302               	bnc	u6550
 22874  0177EA  0EF5               	movlw	-11
 22875  0177EC  2AE3               	incf	plusw1,f,c
 22876  0177EE                     u6550:
 22877                           
 22878                           ;stkvar	_sign @ sp[(-10)+8]
 22879  0177EE  0EFE               	movlw	-2
 22880  0177F0  70E3               	btg	plusw1,0,c
 22881  0177F2                     l8461:
 22882                           
 22883                           ;stkvar	_quotient @ sp[(-10)+0]
 22884  0177F2  0E07               	movlw	7
 22885  0177F4  6E01               	movwf	btemp^0,c
 22886  0177F6  0EF6               	movlw	-10
 22887  0177F8                     u6561:
 22888  0177F8  6AE3               	clrf	plusw1,c
 22889  0177FA  2AE8               	incf	wreg,f,c
 22890  0177FC  0601               	decf	btemp^0,f,c
 22891  0177FE  E2FC               	bc	u6561
 22892                           
 22893                           ;stkvar	_divisor @ sp[(-10)+-16]
 22894  017800  0EE6               	movlw	-26
 22895  017802  50E3               	movf	plusw1,w,c
 22896  017804  E116               	bnz	u6570
 22897  017806  0EE7               	movlw	-25
 22898  017808  50E3               	movf	plusw1,w,c
 22899  01780A  E113               	bnz	u6570
 22900  01780C  0EE8               	movlw	-24
 22901  01780E  50E3               	movf	plusw1,w,c
 22902  017810  E110               	bnz	u6570
 22903  017812  0EE9               	movlw	-23
 22904  017814  50E3               	movf	plusw1,w,c
 22905  017816  E10D               	bnz	u6570
 22906  017818  0EEA               	movlw	-22
 22907  01781A  50E3               	movf	plusw1,w,c
 22908  01781C  E10A               	bnz	u6570
 22909  01781E  0EEB               	movlw	-21
 22910  017820  50E3               	movf	plusw1,w,c
 22911  017822  E107               	bnz	u6570
 22912  017824  0EEC               	movlw	-20
 22913  017826  50E3               	movf	plusw1,w,c
 22914  017828  E104               	bnz	u6570
 22915  01782A  0EED               	movlw	-19
 22916  01782C  50E3               	movf	plusw1,w,c
 22917  01782E  B4D8               	btfsc	status,2,c
 22918  017830  D088               	goto	u6600
 22919  017832                     u6570:
 22920                           
 22921                           ;stkvar	_counter @ sp[(-10)+9]
 22922  017832  0EFF               	movlw	-1
 22923  017834  6AE3               	clrf	plusw1,c
 22924  017836  D012               	goto	L29
 22925  017838                     l8467:
 22926                           
 22927                           ;stkvar	_divisor @ sp[(-10)+-16]
 22928  017838  90D8               	bcf	status,0,c
 22929  01783A  0EE6               	movlw	-26
 22930  01783C  36E3               	rlcf	plusw1,f,c
 22931  01783E  0EE7               	movlw	-25
 22932  017840  36E3               	rlcf	plusw1,f,c
 22933  017842  0EE8               	movlw	-24
 22934  017844  36E3               	rlcf	plusw1,f,c
 22935  017846  0EE9               	movlw	-23
 22936  017848  36E3               	rlcf	plusw1,f,c
 22937  01784A  0EEA               	movlw	-22
 22938  01784C  36E3               	rlcf	plusw1,f,c
 22939  01784E  0EEB               	movlw	-21
 22940  017850  36E3               	rlcf	plusw1,f,c
 22941  017852  0EEC               	movlw	-20
 22942  017854  36E3               	rlcf	plusw1,f,c
 22943  017856  0EED               	movlw	-19
 22944  017858  36E3               	rlcf	plusw1,f,c
 22945                           
 22946                           ;stkvar	_counter @ sp[(-10)+9]
 22947  01785A  0EFF               	movlw	-1
 22948  01785C                     L29:
 22949  01785C  2AE3               	incf	plusw1,f,c
 22950                           
 22951                           ;stkvar	_divisor @ sp[(-10)+-16]
 22952  01785E  0EED               	movlw	-19
 22953  017860  AEE3               	btfss	plusw1,7,c
 22954  017862  D7EA               	goto	l8467
 22955  017864                     u6580:
 22956                           
 22957                           ;stkvar	_quotient @ sp[(-10)+0]
 22958  017864  90D8               	bcf	status,0,c
 22959  017866  0EF6               	movlw	-10
 22960  017868  36E3               	rlcf	plusw1,f,c
 22961  01786A  0EF7               	movlw	-9
 22962  01786C  36E3               	rlcf	plusw1,f,c
 22963  01786E  0EF8               	movlw	-8
 22964  017870  36E3               	rlcf	plusw1,f,c
 22965  017872  0EF9               	movlw	-7
 22966  017874  36E3               	rlcf	plusw1,f,c
 22967  017876  0EFA               	movlw	-6
 22968  017878  36E3               	rlcf	plusw1,f,c
 22969  01787A  0EFB               	movlw	-5
 22970  01787C  36E3               	rlcf	plusw1,f,c
 22971  01787E  0EFC               	movlw	-4
 22972  017880  36E3               	rlcf	plusw1,f,c
 22973  017882  0EFD               	movlw	-3
 22974  017884  36E3               	rlcf	plusw1,f,c
 22975                           
 22976                           ;stkvar	_divisor @ sp[(-10)+-16]
 22977                           ;stkvar	_dividend @ sp[(-10)+-8]
 22978  017886  50E1               	movf	fsr1l,w,c
 22979  017888  0FEE               	addlw	-18
 22980  01788A  6ED9               	movwf	fsr2l,c
 22981  01788C  50E2               	movf	fsr1h,w,c
 22982  01788E  6EDA               	movwf	fsr2h,c
 22983  017890  0EFF               	movlw	255
 22984  017892  22DA               	addwfc	fsr2h,f,c
 22985  017894  0EE6               	movlw	-26
 22986  017896  50E3               	movf	plusw1,w,c
 22987  017898  5CDE               	subwf	postinc2,w,c
 22988  01789A  0EE7               	movlw	-25
 22989  01789C  50E3               	movf	plusw1,w,c
 22990  01789E  58DE               	subwfb	postinc2,w,c
 22991  0178A0  0EE8               	movlw	-24
 22992  0178A2  50E3               	movf	plusw1,w,c
 22993  0178A4  58DE               	subwfb	postinc2,w,c
 22994  0178A6  0EE9               	movlw	-23
 22995  0178A8  50E3               	movf	plusw1,w,c
 22996  0178AA  58DE               	subwfb	postinc2,w,c
 22997  0178AC  0EEA               	movlw	-22
 22998  0178AE  50E3               	movf	plusw1,w,c
 22999  0178B0  58DE               	subwfb	postinc2,w,c
 23000  0178B2  0EEB               	movlw	-21
 23001  0178B4  50E3               	movf	plusw1,w,c
 23002  0178B6  58DE               	subwfb	postinc2,w,c
 23003  0178B8  0EEC               	movlw	-20
 23004  0178BA  50E3               	movf	plusw1,w,c
 23005  0178BC  58DE               	subwfb	postinc2,w,c
 23006  0178BE  0EED               	movlw	-19
 23007  0178C0  50E3               	movf	plusw1,w,c
 23008  0178C2  58DE               	subwfb	postinc2,w,c
 23009  0178C4  A0D8               	btfss	status,0,c
 23010  0178C6  D021               	goto	l8479
 23011                           
 23012                           ;stkvar	_divisor @ sp[(-10)+-16]
 23013                           ;stkvar	_dividend @ sp[(-10)+-8]
 23014  0178C8  50E1               	movf	fsr1l,w,c
 23015  0178CA  0FEE               	addlw	-18
 23016  0178CC  6ED9               	movwf	fsr2l,c
 23017  0178CE  50E2               	movf	fsr1h,w,c
 23018  0178D0  6EDA               	movwf	fsr2h,c
 23019  0178D2  0EFF               	movlw	255
 23020  0178D4  22DA               	addwfc	fsr2h,f,c
 23021  0178D6  0EE6               	movlw	-26
 23022  0178D8  50E3               	movf	plusw1,w,c
 23023  0178DA  5EDE               	subwf	postinc2,f,c
 23024  0178DC  0EE7               	movlw	-25
 23025  0178DE  50E3               	movf	plusw1,w,c
 23026  0178E0  5ADE               	subwfb	postinc2,f,c
 23027  0178E2  0EE8               	movlw	-24
 23028  0178E4  50E3               	movf	plusw1,w,c
 23029  0178E6  5ADE               	subwfb	postinc2,f,c
 23030  0178E8  0EE9               	movlw	-23
 23031  0178EA  50E3               	movf	plusw1,w,c
 23032  0178EC  5ADE               	subwfb	postinc2,f,c
 23033  0178EE  0EEA               	movlw	-22
 23034  0178F0  50E3               	movf	plusw1,w,c
 23035  0178F2  5ADE               	subwfb	postinc2,f,c
 23036  0178F4  0EEB               	movlw	-21
 23037  0178F6  50E3               	movf	plusw1,w,c
 23038  0178F8  5ADE               	subwfb	postinc2,f,c
 23039  0178FA  0EEC               	movlw	-20
 23040  0178FC  50E3               	movf	plusw1,w,c
 23041  0178FE  5ADE               	subwfb	postinc2,f,c
 23042  017900  0EED               	movlw	-19
 23043  017902  50E3               	movf	plusw1,w,c
 23044  017904  5ADE               	subwfb	postinc2,f,c
 23045                           
 23046                           ;stkvar	_quotient @ sp[(-10)+0]
 23047  017906  0EF6               	movlw	-10
 23048  017908  80E3               	bsf	plusw1,0,c
 23049  01790A                     l8479:
 23050                           
 23051                           ;stkvar	_divisor @ sp[(-10)+-16]
 23052  01790A  90D8               	bcf	status,0,c
 23053  01790C  0EED               	movlw	-19
 23054  01790E  32E3               	rrcf	plusw1,f,c
 23055  017910  0EEC               	movlw	-20
 23056  017912  32E3               	rrcf	plusw1,f,c
 23057  017914  0EEB               	movlw	-21
 23058  017916  32E3               	rrcf	plusw1,f,c
 23059  017918  0EEA               	movlw	-22
 23060  01791A  32E3               	rrcf	plusw1,f,c
 23061  01791C  0EE9               	movlw	-23
 23062  01791E  32E3               	rrcf	plusw1,f,c
 23063  017920  0EE8               	movlw	-24
 23064  017922  32E3               	rrcf	plusw1,f,c
 23065  017924  0EE7               	movlw	-25
 23066  017926  32E3               	rrcf	plusw1,f,c
 23067  017928  0EE6               	movlw	-26
 23068  01792A  32E3               	rrcf	plusw1,f,c
 23069                           
 23070                           ;stkvar	_counter @ sp[(-10)+9]
 23071  01792C  0EFF               	movlw	-1
 23072  01792E  50E3               	movf	plusw1,w,c
 23073  017930  6E01               	movwf	btemp^0,c
 23074  017932  0E01               	movlw	1
 23075  017934  5E01               	subwf	btemp^0,f,c
 23076  017936  0EFF               	movlw	-1
 23077  017938  0060  F007  FFE3   	movff	btemp,plusw1
 23078  01793E  A4D8               	btfss	status,2,c
 23079  017940  D791               	goto	u6580
 23080  017942                     u6600:
 23081                           
 23082                           ;stkvar	_sign @ sp[(-10)+8]
 23083  017942  0EFE               	movlw	-2
 23084  017944  50E3               	movf	plusw1,w,c
 23085  017946  B4D8               	btfsc	status,2,c
 23086  017948  D025               	goto	u6620
 23087                           
 23088                           ;stkvar	_quotient @ sp[(-10)+0]
 23089                           ;stkvar	_quotient @ sp[(-10)+0]
 23090  01794A  0EF6               	movlw	-10
 23091  01794C  6CE3               	negf	plusw1,c
 23092  01794E  0EF7               	movlw	-9
 23093  017950  1EE3               	comf	plusw1,f,c
 23094  017952  0EF8               	movlw	-8
 23095  017954  1EE3               	comf	plusw1,f,c
 23096  017956  0EF9               	movlw	-7
 23097  017958  1EE3               	comf	plusw1,f,c
 23098  01795A  0EFA               	movlw	-6
 23099  01795C  1EE3               	comf	plusw1,f,c
 23100  01795E  0EFB               	movlw	-5
 23101  017960  1EE3               	comf	plusw1,f,c
 23102  017962  0EFC               	movlw	-4
 23103  017964  1EE3               	comf	plusw1,f,c
 23104  017966  0EFD               	movlw	-3
 23105  017968  1EE3               	comf	plusw1,f,c
 23106  01796A  E314               	bnc	u6620
 23107  01796C  0EF7               	movlw	-9
 23108  01796E  2AE3               	incf	plusw1,f,c
 23109  017970  E311               	bnc	u6620
 23110  017972  0EF8               	movlw	-8
 23111  017974  2AE3               	incf	plusw1,f,c
 23112  017976  E30E               	bnc	u6620
 23113  017978  0EF9               	movlw	-7
 23114  01797A  2AE3               	incf	plusw1,f,c
 23115  01797C  E30B               	bnc	u6620
 23116  01797E  0EFA               	movlw	-6
 23117  017980  2AE3               	incf	plusw1,f,c
 23118  017982  E308               	bnc	u6620
 23119  017984  0EFB               	movlw	-5
 23120  017986  2AE3               	incf	plusw1,f,c
 23121  017988  E305               	bnc	u6620
 23122  01798A  0EFC               	movlw	-4
 23123  01798C  2AE3               	incf	plusw1,f,c
 23124  01798E  E302               	bnc	u6620
 23125  017990  0EFD               	movlw	-3
 23126  017992  2AE3               	incf	plusw1,f,c
 23127  017994                     u6620:
 23128                           
 23129                           ;stkvar	_quotient @ sp[(-10)+0]
 23130  017994  0EF6               	movlw	246
 23131  017996  24E1               	addwf	fsr1l,w,c
 23132  017998  6ED9               	movwf	fsr2l,c
 23133  01799A  0EFF               	movlw	255
 23134  01799C  20E2               	addwfc	fsr1h,w,c
 23135  01799E  6EDA               	movwf	fsr2h,c
 23136                           
 23137                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 23138  0179A0  0E08               	movlw	8
 23139  0179A2  6E01               	movwf	btemp^0,c
 23140  0179A4  0EEE               	movlw	-18
 23141  0179A6                     us663999:
 23142  0179A6  006F FF7B FFE3     	movff	postinc2,plusw1
 23143  0179AC  28E8               	incf	wreg,w,c
 23144  0179AE  2E01               	decfsz	btemp^0,f,c
 23145  0179B0  D7FA               	bra	us663999
 23146                           
 23147                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 23148  0179B2  0EF6               	movlw	246
 23149  0179B4  26E1               	addwf	fsr1l,f,c
 23150  0179B6  0EFF               	movlw	255
 23151  0179B8  22E2               	addwfc	fsr1h,f,c
 23152  0179BA  0012               	return		;funcret
 23153  0179BC                     __end_of___aodiv:
 23154                           	opt callstack 0
 23155                           
 23156 ;; *************** function _ctoa *****************
 23157 ;; Defined at:
 23158 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23159 ;; Parameters:    Size  Location     Type
 23160 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23161 ;;		 -> f(6), NULL(0), 
 23162 ;;  c               1  [STACK] unsigned char 
 23163 ;; Auto vars:     Size  Location     Type
 23164 ;;  w               2  [STACK] int 
 23165 ;;  l               2    0        int 
 23166 ;; Return value:  Size  Location     Type
 23167 ;;                  2  [STACK] int 
 23168 ;; Registers used:
 23169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23170 ;; Tracked objects:
 23171 ;;		On entry : 0/0
 23172 ;;		On exit  : 0/0
 23173 ;;		Unchanged: 0/0
 23174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23179 ;;Total ram usage:        0 bytes
 23180 ;; Hardware stack levels used:    1
 23181 ;; Hardware stack levels required when called:   20
 23182 ;; This function calls:
 23183 ;;		_pad
 23184 ;; This function is called by:
 23185 ;;		_vfpfcnvrt
 23186 ;; This function uses a reentrant model
 23187 ;;
 23188                           
 23189                           	psect	text80
 23190  01B30C                     __ptext80:
 23191                           	opt callstack 0
 23192  01B30C                     _ctoa:
 23193                           	opt callstack 0
 23194                           
 23195                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23196  01B30C  52E6               	movf	postinc1,f,c
 23197  01B30E  52E6               	movf	postinc1,f,c
 23198                           
 23199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 23200                           
 23201                           ;incstack = 0
 23202 ;; hardware stack exceeded
 23203  01B310  503A               	movf	_width^0,w,c
 23204  01B312  103B               	iorwf	(_width+1)^0,w,c
 23205  01B314  A4D8               	btfss	status,2,c
 23206  01B316  D009               	goto	l12473
 23207                           
 23208                           ;stkvar	_w @ sp[(-2)+0]
 23209  01B318  0EFE               	movlw	-2
 23210  01B31A  0060  F0EB  FFE3   	movff	_width,plusw1
 23211  01B320  0EFF               	movlw	-1
 23212  01B322  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23213  01B328  D016               	goto	l12475
 23214  01B32A                     l12473:
 23215  01B32A  0EFF               	movlw	255
 23216  01B32C  6E0B               	movwf	(btemp+10)^0,c
 23217  01B32E  0EFF               	movlw	255
 23218  01B330  6E0C               	movwf	(btemp+11)^0,c
 23219  01B332  0060  F0E8  F009   	movff	_width,btemp+8
 23220  01B338  0060  F0EC  F00A   	movff	_width+1,btemp+9
 23221  01B33E  500B               	movf	(btemp+10)^0,w,c
 23222  01B340  2609               	addwf	(btemp+8)^0,f,c
 23223  01B342  500C               	movf	(btemp+11)^0,w,c
 23224  01B344  220A               	addwfc	(btemp+9)^0,f,c
 23225                           
 23226                           ;stkvar	_w @ sp[(-2)+0]
 23227  01B346  0EFE               	movlw	-2
 23228  01B348  0060  F027  FFE3   	movff	btemp+8,plusw1
 23229  01B34E  0EFF               	movlw	-1
 23230  01B350  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23231  01B356                     l12475:
 23232                           
 23233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 23234                           ;stkvar	_c @ sp[(-2)+-3]
 23235  01B356  0EFB               	movlw	-5
 23236  01B358  006F FF8C  F297    	movff	plusw1,_dbuf
 23237                           
 23238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 23239  01B35E  0102               	movlb	2	; () banked
 23240  01B360  6B98               	clrf	(_dbuf+1)& (0+255),b
 23241                           
 23242                           ; BSR set to: 2
 23243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 23244                           ;stkvar	_w @ sp[(-2)+0]
 23245  01B362  0EFE               	movlw	-2
 23246  01B364  006F FF8F FFE6     	movff	plusw1,postinc1
 23247  01B36A  006F FF8F FFE6     	movff	plusw1,postinc1
 23248  01B370  0E97               	movlw	low _dbuf
 23249  01B372  6EE6               	movwf	postinc1,c
 23250  01B374  0E02               	movlw	high _dbuf
 23251  01B376  6EE6               	movwf	postinc1,c
 23252                           
 23253                           ;stkvar	_fp @ sp[(-6)+-2]
 23254  01B378  0EF8               	movlw	-8
 23255  01B37A  006F FF8F FFE6     	movff	plusw1,postinc1
 23256  01B380  006F FF8F FFE6     	movff	plusw1,postinc1
 23257  01B386  EC9A  F0D0         	call	_pad	;wreg free
 23258                           
 23259                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 23260  01B38A  0EFB               	movlw	251
 23261  01B38C  26E1               	addwf	fsr1l,f,c
 23262  01B38E  0EFF               	movlw	255
 23263  01B390  22E2               	addwfc	fsr1h,f,c
 23264  01B392  0012               	return		;funcret
 23265  01B394                     __end_of_ctoa:
 23266                           	opt callstack 0
 23267                           
 23268 ;; *************** function _pad *****************
 23269 ;; Defined at:
 23270 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23271 ;; Parameters:    Size  Location     Type
 23272 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23273 ;;		 -> f(6), NULL(0), 
 23274 ;;  buf             2  [STACK] PTR unsigned char 
 23275 ;;		 -> dbuf(80), 
 23276 ;;  p               2  [STACK] int 
 23277 ;; Auto vars:     Size  Location     Type
 23278 ;;  w               2  [STACK] int 
 23279 ;;  i               2  [STACK] int 
 23280 ;; Return value:  Size  Location     Type
 23281 ;;                  2  [STACK] int 
 23282 ;; Registers used:
 23283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23284 ;; Tracked objects:
 23285 ;;		On entry : 0/2
 23286 ;;		On exit  : 0/0
 23287 ;;		Unchanged: 0/0
 23288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23293 ;;Total ram usage:        0 bytes
 23294 ;; Hardware stack levels used:    1
 23295 ;; Hardware stack levels required when called:   19
 23296 ;; This function calls:
 23297 ;;		_fputc
 23298 ;;		_fputs
 23299 ;;		_strlen
 23300 ;; This function is called by:
 23301 ;;		_ctoa
 23302 ;;		_dtoa
 23303 ;;		_efgtoa
 23304 ;;		_utoa
 23305 ;;		_xtoa
 23306 ;; This function uses a reentrant model
 23307 ;;
 23308                           
 23309                           	psect	text81
 23310  01A134                     __ptext81:
 23311                           	opt callstack 0
 23312  01A134                     _pad:
 23313                           	opt callstack 0
 23314                           
 23315                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23316  01A134  52E6               	movf	postinc1,f,c
 23317  01A136  52E6               	movf	postinc1,f,c
 23318  01A138  52E6               	movf	postinc1,f,c
 23319  01A13A  52E6               	movf	postinc1,f,c
 23320                           
 23321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 23322                           
 23323                           ;incstack = 0
 23324 ;; hardware stack exceeded
 23325  01A13C  A03E               	btfss	_flags^0,0,c
 23326  01A13E  D010               	goto	l12435
 23327                           
 23328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 23329                           ;stkvar	_fp @ sp[(-4)+-2]
 23330  01A140  0EFA               	movlw	-6
 23331  01A142  006F FF8F FFE6     	movff	plusw1,postinc1
 23332  01A148  006F FF8F FFE6     	movff	plusw1,postinc1
 23333                           
 23334                           ;stkvar	_buf @ sp[(-6)+-4]
 23335  01A14E  0EF6               	movlw	-10
 23336  01A150  006F FF8F FFE6     	movff	plusw1,postinc1
 23337  01A156  006F FF8F FFE6     	movff	plusw1,postinc1
 23338  01A15C  ECA8  F0D8         	call	_fputs	;wreg free
 23339  01A160                     l12435:
 23340                           
 23341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 23342                           ;stkvar	_p @ sp[(-4)+-6]
 23343  01A160  0EF7               	movlw	-9
 23344  01A162  BEE3               	btfsc	plusw1,7,c
 23345  01A164  D011               	goto	l12439
 23346                           
 23347                           ;stkvar	_p @ sp[(-4)+-6]
 23348                           ;stkvar	_w @ sp[(-4)+0]
 23349  01A166  0EF6               	movlw	-10
 23350  01A168  006F FF8C  F001    	movff	plusw1,btemp
 23351  01A16E  0EFC               	movlw	-4
 23352  01A170  0060  F007  FFE3   	movff	btemp,plusw1
 23353  01A176  0EF7               	movlw	-9
 23354  01A178  006F FF8C  F001    	movff	plusw1,btemp
 23355  01A17E  0EFD               	movlw	-3
 23356  01A180  0060  F007  FFE3   	movff	btemp,plusw1
 23357  01A186  D004               	goto	l2259
 23358  01A188                     l12439:
 23359                           
 23360                           ;stkvar	_w @ sp[(-4)+0]
 23361  01A188  0EFC               	movlw	-4
 23362  01A18A  6AE3               	clrf	plusw1,c
 23363  01A18C  0EFD               	movlw	-3
 23364  01A18E  6AE3               	clrf	plusw1,c
 23365  01A190                     l2259:
 23366                           
 23367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23368                           ;stkvar	_i @ sp[(-4)+2]
 23369  01A190  0EFE               	movlw	-2
 23370  01A192  6AE3               	clrf	plusw1,c
 23371  01A194  0EFF               	movlw	-1
 23372  01A196  6AE3               	clrf	plusw1,c
 23373                           
 23374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23375  01A198  D01E               	goto	l12445
 23376  01A19A                     l12441:
 23377                           
 23378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 23379                           ;stkvar	_fp @ sp[(-4)+-2]
 23380  01A19A  0EFA               	movlw	-6
 23381  01A19C  006F FF8F FFE6     	movff	plusw1,postinc1
 23382  01A1A2  006F FF8F FFE6     	movff	plusw1,postinc1
 23383  01A1A8  0E20               	movlw	32
 23384  01A1AA  6EE6               	movwf	postinc1,c
 23385  01A1AC  0E00               	movlw	0
 23386  01A1AE  6EE6               	movwf	postinc1,c
 23387  01A1B0  ECF0  F0CE         	call	_fputc	;wreg free
 23388                           
 23389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23390                           ;stkvar	_i @ sp[(-4)+2]
 23391  01A1B4  0EFE               	movlw	-2
 23392  01A1B6  50E3               	movf	plusw1,w,c
 23393  01A1B8  0F01               	addlw	1
 23394  01A1BA  6E01               	movwf	btemp^0,c
 23395  01A1BC  0EFE               	movlw	-2
 23396  01A1BE  0060  F007  FFE3   	movff	btemp,plusw1
 23397  01A1C4  6A01               	clrf	btemp^0,c
 23398  01A1C6  0EFF               	movlw	-1
 23399  01A1C8  50E3               	movf	plusw1,w,c
 23400  01A1CA  2001               	addwfc	btemp^0,w,c
 23401  01A1CC  6E01               	movwf	btemp^0,c
 23402  01A1CE  0EFF               	movlw	-1
 23403  01A1D0  0060  F007  FFE3   	movff	btemp,plusw1
 23404  01A1D6                     l12445:
 23405                           
 23406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23407                           ;stkvar	_w @ sp[(-4)+0]
 23408                           ;stkvar	_i @ sp[(-4)+2]
 23409  01A1D6  50E1               	movf	fsr1l,w,c
 23410  01A1D8  0FFE               	addlw	-2
 23411  01A1DA  6ED9               	movwf	fsr2l,c
 23412  01A1DC  50E2               	movf	fsr1h,w,c
 23413  01A1DE  6EDA               	movwf	fsr2h,c
 23414  01A1E0  0EFF               	movlw	255
 23415  01A1E2  22DA               	addwfc	fsr2h,f,c
 23416  01A1E4  0EFC               	movlw	-4
 23417  01A1E6  50E3               	movf	plusw1,w,c
 23418  01A1E8  5CDE               	subwf	postinc2,w,c
 23419  01A1EA  50DE               	movf	postinc2,w,c
 23420  01A1EC  0A80               	xorlw	128
 23421  01A1EE  6E01               	movwf	btemp^0,c
 23422  01A1F0  0EFD               	movlw	-3
 23423  01A1F2  50E3               	movf	plusw1,w,c
 23424  01A1F4  0A80               	xorlw	128
 23425  01A1F6  5801               	subwfb	btemp^0,w,c
 23426  01A1F8  A0D8               	btfss	status,0,c
 23427  01A1FA  D7CF               	goto	l12441
 23428                           
 23429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 23430  01A1FC  B03E               	btfsc	_flags^0,0,c
 23431  01A1FE  D010               	goto	l12449
 23432                           
 23433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 23434                           ;stkvar	_fp @ sp[(-4)+-2]
 23435  01A200  0EFA               	movlw	-6
 23436  01A202  006F FF8F FFE6     	movff	plusw1,postinc1
 23437  01A208  006F FF8F FFE6     	movff	plusw1,postinc1
 23438                           
 23439                           ;stkvar	_buf @ sp[(-6)+-4]
 23440  01A20E  0EF6               	movlw	-10
 23441  01A210  006F FF8F FFE6     	movff	plusw1,postinc1
 23442  01A216  006F FF8F FFE6     	movff	plusw1,postinc1
 23443  01A21C  ECA8  F0D8         	call	_fputs	;wreg free
 23444  01A220                     l12449:
 23445                           
 23446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 23447                           ;stkvar	_w @ sp[(-4)+0]
 23448                           ;stkvar	_buf @ sp[(-4)+-4]
 23449  01A220  0EF8               	movlw	-8
 23450  01A222  006F FF8F FFE6     	movff	plusw1,postinc1
 23451  01A228  006F FF8F FFE6     	movff	plusw1,postinc1
 23452  01A22E  EC57  F0D8         	call	_strlen	;wreg free
 23453  01A232  0EFC               	movlw	-4
 23454  01A234  50E3               	movf	plusw1,w,c
 23455  01A236  2601               	addwf	btemp^0,f,c
 23456  01A238  0EFD               	movlw	-3
 23457  01A23A  50E3               	movf	plusw1,w,c
 23458  01A23C  2202               	addwfc	(btemp+1)^0,f,c
 23459                           
 23460                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 23461  01A23E  0EF6               	movlw	246
 23462  01A240  26E1               	addwf	fsr1l,f,c
 23463  01A242  0EFF               	movlw	255
 23464  01A244  22E2               	addwfc	fsr1h,f,c
 23465  01A246  0012               	return		;funcret
 23466  01A248                     __end_of_pad:
 23467                           	opt callstack 0
 23468                           
 23469 ;; *************** function _strlen *****************
 23470 ;; Defined at:
 23471 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 23472 ;; Parameters:    Size  Location     Type
 23473 ;;  s               2  [STACK] PTR const unsigned char 
 23474 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23475 ;;		 -> spin(120), STR_57(9), STR_56(12), D.lcd(480), 
 23476 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23477 ;;		 -> V(192), 
 23478 ;; Auto vars:     Size  Location     Type
 23479 ;;  a               2  [STACK] PTR const unsigned char 
 23480 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23481 ;;		 -> spin(120), STR_57(9), STR_56(12), D.lcd(480), 
 23482 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23483 ;;		 -> V(192), 
 23484 ;; Return value:  Size  Location     Type
 23485 ;;                  2  [STACK] unsigned int 
 23486 ;; Registers used:
 23487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 23488 ;; Tracked objects:
 23489 ;;		On entry : 0/0
 23490 ;;		On exit  : 0/0
 23491 ;;		Unchanged: 0/0
 23492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23497 ;;Total ram usage:        0 bytes
 23498 ;; Hardware stack levels used:    1
 23499 ;; Hardware stack levels required when called:   15
 23500 ;; This function calls:
 23501 ;;		Nothing
 23502 ;; This function is called by:
 23503 ;;		_eaDogM_WriteString
 23504 ;;		_spinners
 23505 ;;		_calc_bsoc
 23506 ;;		_pad
 23507 ;;		_stoa
 23508 ;; This function uses a reentrant model
 23509 ;;
 23510                           
 23511                           	psect	text82
 23512  01B0AE                     __ptext82:
 23513                           	opt callstack 0
 23514  01B0AE                     _strlen:
 23515                           	opt callstack 0
 23516                           
 23517                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23518  01B0AE  52E6               	movf	postinc1,f,c
 23519  01B0B0  52E6               	movf	postinc1,f,c
 23520                           
 23521                           ;stkvar	_s @ sp[(-2)+-2]
 23522                           
 23523                           ;incstack = 0
 23524 ;; hardware stack exceeded
 23525  01B0B2  0EFC               	movlw	-4
 23526  01B0B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23527  01B0BA  0EFD               	movlw	-3
 23528  01B0BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23529                           
 23530                           ;stkvar	_a @ sp[(-2)+0]
 23531  01B0C2  0EFF               	movlw	-1
 23532  01B0C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 23533  01B0CA  0EFE               	movlw	-2
 23534  01B0CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23535  01B0D2  D011               	goto	l8031
 23536  01B0D4                     l8029:
 23537                           
 23538                           ;stkvar	_s @ sp[(-2)+-2]
 23539  01B0D4  0EFC               	movlw	-4
 23540  01B0D6  50E3               	movf	plusw1,w,c
 23541  01B0D8  0F01               	addlw	1
 23542  01B0DA  6E01               	movwf	btemp^0,c
 23543  01B0DC  0EFC               	movlw	-4
 23544  01B0DE  0060  F007  FFE3   	movff	btemp,plusw1
 23545  01B0E4  6A01               	clrf	btemp^0,c
 23546  01B0E6  0EFD               	movlw	-3
 23547  01B0E8  50E3               	movf	plusw1,w,c
 23548  01B0EA  2001               	addwfc	btemp^0,w,c
 23549  01B0EC  6E01               	movwf	btemp^0,c
 23550  01B0EE  0EFD               	movlw	-3
 23551  01B0F0  0060  F007  FFE3   	movff	btemp,plusw1
 23552  01B0F6                     l8031:
 23553                           
 23554                           ;stkvar	_s @ sp[(-2)+-2]
 23555  01B0F6  0EFC               	movlw	-4
 23556  01B0F8  006F FF8F FFF6     	movff	plusw1,tblptrl
 23557  01B0FE  0EFD               	movlw	-3
 23558  01B100  006F FF8F FFF7     	movff	plusw1,tblptrh
 23559  01B106  0E00               	movlw	low (__mediumconst shr (0+16))
 23560  01B108  6EF8               	movwf	tblptru,c
 23561  01B10A  0E1F               	movlw	(high __ramtop+-1)
 23562  01B10C  64F7               	cpfsgt	tblptrh,c
 23563  01B10E  D003               	bra	u5647
 23564  01B110  0008               	tblrd		*
 23565  01B112  50F5               	movf	tablat,w,c
 23566  01B114  D007               	bra	u5640
 23567  01B116                     u5647:
 23568  01B116  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23569  01B11C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23570  01B122  50EF               	movf	indf0,w,c
 23571  01B124                     u5640:
 23572  01B124  0900               	iorlw	0
 23573  01B126  A4D8               	btfss	status,2,c
 23574  01B128  D7D5               	goto	l8029
 23575                           
 23576                           ;stkvar	_a @ sp[(-2)+0]
 23577                           ;stkvar	_s @ sp[(-2)+-2]
 23578  01B12A  0EFC               	movlw	-4
 23579  01B12C  006F FF8C  F001    	movff	plusw1,btemp
 23580  01B132  0EFD               	movlw	-3
 23581  01B134  006F FF8C  F002    	movff	plusw1,btemp+1
 23582  01B13A  0EFE               	movlw	-2
 23583  01B13C  50E3               	movf	plusw1,w,c
 23584  01B13E  5E01               	subwf	btemp^0,f,c
 23585  01B140  0EFF               	movlw	-1
 23586  01B142  50E3               	movf	plusw1,w,c
 23587  01B144  5A02               	subwfb	(btemp+1)^0,f,c
 23588                           
 23589                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23590  01B146  52E5               	movf	postdec1,f,c
 23591  01B148  52E5               	movf	postdec1,f,c
 23592  01B14A  52E5               	movf	postdec1,f,c
 23593  01B14C  52E5               	movf	postdec1,f,c
 23594  01B14E  0012               	return		;funcret
 23595  01B150                     __end_of_strlen:
 23596                           	opt callstack 0
 23597                           
 23598 ;; *************** function _fputs *****************
 23599 ;; Defined at:
 23600 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 23601 ;; Parameters:    Size  Location     Type
 23602 ;;  s               2  [STACK] PTR const unsigned char 
 23603 ;;		 -> dbuf(80), 
 23604 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23605 ;;		 -> f(6), NULL(0), 
 23606 ;; Auto vars:     Size  Location     Type
 23607 ;;  i               2  [STACK] int 
 23608 ;;  c               1  [STACK] unsigned char 
 23609 ;; Return value:  Size  Location     Type
 23610 ;;                  2  [STACK] int 
 23611 ;; Registers used:
 23612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23613 ;; Tracked objects:
 23614 ;;		On entry : 0/2
 23615 ;;		On exit  : 0/0
 23616 ;;		Unchanged: 0/0
 23617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23622 ;;Total ram usage:        0 bytes
 23623 ;; Hardware stack levels used:    1
 23624 ;; Hardware stack levels required when called:   18
 23625 ;; This function calls:
 23626 ;;		_fputc
 23627 ;; This function is called by:
 23628 ;;		_pad
 23629 ;; This function uses a reentrant model
 23630 ;;
 23631                           
 23632                           	psect	text83
 23633  01B150                     __ptext83:
 23634                           	opt callstack 0
 23635  01B150                     _fputs:
 23636                           	opt callstack 0
 23637                           
 23638                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23639  01B150  52E6               	movf	postinc1,f,c
 23640  01B152  52E6               	movf	postinc1,f,c
 23641  01B154  52E6               	movf	postinc1,f,c
 23642                           
 23643                           ;stkvar	_i @ sp[(-3)+0]
 23644                           
 23645                           ;incstack = 0
 23646 ;; hardware stack exceeded
 23647  01B156  0EFD               	movlw	-3
 23648  01B158  6AE3               	clrf	plusw1,c
 23649  01B15A  0EFE               	movlw	-2
 23650  01B15C  6AE3               	clrf	plusw1,c
 23651  01B15E  D01F               	goto	l12387
 23652  01B160                     l12383:
 23653                           
 23654                           ;stkvar	_fp @ sp[(-3)+-4]
 23655  01B160  0EF9               	movlw	-7
 23656  01B162  006F FF8F FFE6     	movff	plusw1,postinc1
 23657  01B168  006F FF8F FFE6     	movff	plusw1,postinc1
 23658                           
 23659                           ;stkvar	_c @ sp[(-5)+2]
 23660  01B16E  0EFD               	movlw	-3
 23661  01B170  50E3               	movf	plusw1,w,c
 23662  01B172  6EE6               	movwf	postinc1,c
 23663  01B174  0E00               	movlw	0
 23664  01B176  6EE6               	movwf	postinc1,c
 23665  01B178  ECF0  F0CE         	call	_fputc	;wreg free
 23666                           
 23667                           ;stkvar	_i @ sp[(-3)+0]
 23668  01B17C  0EFD               	movlw	-3
 23669  01B17E  50E3               	movf	plusw1,w,c
 23670  01B180  0F01               	addlw	1
 23671  01B182  6E01               	movwf	btemp^0,c
 23672  01B184  0EFD               	movlw	-3
 23673  01B186  0060  F007  FFE3   	movff	btemp,plusw1
 23674  01B18C  6A01               	clrf	btemp^0,c
 23675  01B18E  0EFE               	movlw	-2
 23676  01B190  50E3               	movf	plusw1,w,c
 23677  01B192  2001               	addwfc	btemp^0,w,c
 23678  01B194  6E01               	movwf	btemp^0,c
 23679  01B196  0EFE               	movlw	-2
 23680  01B198  0060  F007  FFE3   	movff	btemp,plusw1
 23681  01B19E                     l12387:
 23682                           
 23683                           ;stkvar	_i @ sp[(-3)+0]
 23684  01B19E  0EFD               	movlw	-3
 23685  01B1A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23686  01B1A6  0EFE               	movlw	-2
 23687  01B1A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23688                           
 23689                           ;stkvar	_s @ sp[(-3)+-2]
 23690  01B1AE  0EFB               	movlw	-5
 23691  01B1B0  006F FF8C  F009    	movff	plusw1,btemp+8
 23692  01B1B6  0EFC               	movlw	-4
 23693  01B1B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23694  01B1BE  500B               	movf	(btemp+10)^0,w,c
 23695  01B1C0  2409               	addwf	(btemp+8)^0,w,c
 23696  01B1C2  6ED9               	movwf	fsr2l,c
 23697  01B1C4  500C               	movf	(btemp+11)^0,w,c
 23698  01B1C6  200A               	addwfc	(btemp+9)^0,w,c
 23699  01B1C8  6EDA               	movwf	fsr2h,c
 23700  01B1CA  50DF               	movf	indf2,w,c
 23701  01B1CC  6E0C               	movwf	(btemp+11)^0,c
 23702                           
 23703                           ;stkvar	_c @ sp[(-3)+2]
 23704  01B1CE  0EFF               	movlw	-1
 23705  01B1D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23706  01B1D6  0EFF               	movlw	-1
 23707  01B1D8  50E3               	movf	plusw1,w,c
 23708  01B1DA  A4D8               	btfss	status,2,c
 23709  01B1DC  D7C1               	goto	l12383
 23710                           
 23711                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23712  01B1DE  0EF9               	movlw	249
 23713  01B1E0  26E1               	addwf	fsr1l,f,c
 23714  01B1E2  0EFF               	movlw	255
 23715  01B1E4  22E2               	addwfc	fsr1h,f,c
 23716  01B1E6  0012               	return		;funcret
 23717  01B1E8                     __end_of_fputs:
 23718                           	opt callstack 0
 23719                           
 23720 ;; *************** function _fputc *****************
 23721 ;; Defined at:
 23722 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 23723 ;; Parameters:    Size  Location     Type
 23724 ;;  c               2  [STACK] int 
 23725 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23726 ;;		 -> f(6), NULL(0), 
 23727 ;; Auto vars:     Size  Location     Type
 23728 ;;		None
 23729 ;; Return value:  Size  Location     Type
 23730 ;;                  2  [STACK] int 
 23731 ;; Registers used:
 23732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23733 ;; Tracked objects:
 23734 ;;		On entry : 0/0
 23735 ;;		On exit  : 0/0
 23736 ;;		Unchanged: 0/0
 23737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23742 ;;Total ram usage:        0 bytes
 23743 ;; Hardware stack levels used:    1
 23744 ;; Hardware stack levels required when called:   17
 23745 ;; This function calls:
 23746 ;;		_putch
 23747 ;; This function is called by:
 23748 ;;		_pad
 23749 ;;		_stoa
 23750 ;;		_vfpfcnvrt
 23751 ;;		_fputs
 23752 ;; This function uses a reentrant model
 23753 ;;
 23754                           
 23755                           	psect	text84
 23756  019DE0                     __ptext84:
 23757                           	opt callstack 0
 23758  019DE0                     _fputc:
 23759                           	opt callstack 0
 23760                           
 23761                           ;stkvar	_fp @ sp[(0)+-4]
 23762                           
 23763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23764                           ;incstack = 0
 23765 ;; hardware stack exceeded
 23766  019DE0  0EFC               	movlw	-4
 23767  019DE2  006F FF8C  F001    	movff	plusw1,btemp
 23768  019DE8  0EFD               	movlw	-3
 23769  019DEA  50E3               	movf	plusw1,w,c
 23770  019DEC  1001               	iorwf	btemp^0,w,c
 23771  019DEE  B4D8               	btfsc	status,2,c
 23772  019DF0  D009               	goto	u11190
 23773                           
 23774                           ;stkvar	_fp @ sp[(0)+-4]
 23775  019DF2  0EFC               	movlw	-4
 23776  019DF4  006F FF8C  F001    	movff	plusw1,btemp
 23777  019DFA  0EFD               	movlw	-3
 23778  019DFC  50E3               	movf	plusw1,w,c
 23779  019DFE  1001               	iorwf	btemp^0,w,c
 23780  019E00  A4D8               	btfss	status,2,c
 23781  019E02  D006               	goto	l12371
 23782  019E04                     u11190:
 23783                           
 23784                           ;stkvar	_c @ sp[(0)+-2]
 23785  019E04  0EFE               	movlw	-2
 23786  019E06  50E3               	movf	plusw1,w,c
 23787  019E08  6EE6               	movwf	postinc1,c
 23788  019E0A  EC64  F0E4         	call	_putch	;wreg free
 23789  019E0E  D075               	goto	l3305
 23790  019E10                     l12371:
 23791                           
 23792                           ;stkvar	_fp @ sp[(0)+-4]
 23793  019E10  0EFC               	movlw	-4
 23794  019E12  006F FF8C  F00B    	movff	plusw1,btemp+10
 23795  019E18  0EFD               	movlw	-3
 23796  019E1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23797  019E20  0E04               	movlw	4
 23798  019E22  240B               	addwf	(btemp+10)^0,w,c
 23799  019E24  6ED9               	movwf	fsr2l,c
 23800  019E26  0E00               	movlw	0
 23801  019E28  200C               	addwfc	(btemp+11)^0,w,c
 23802  019E2A  6EDA               	movwf	fsr2h,c
 23803  019E2C  50DE               	movf	postinc2,w,c
 23804  019E2E  10DE               	iorwf	postinc2,w,c
 23805  019E30  B4D8               	btfsc	status,2,c
 23806  019E32  D026               	goto	u11210
 23807                           
 23808                           ;stkvar	_fp @ sp[(0)+-4]
 23809  019E34  0EFC               	movlw	-4
 23810  019E36  006F FF8C  F00B    	movff	plusw1,btemp+10
 23811  019E3C  0EFD               	movlw	-3
 23812  019E3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23813  019E44  0E04               	movlw	4
 23814  019E46  240B               	addwf	(btemp+10)^0,w,c
 23815  019E48  6ED9               	movwf	fsr2l,c
 23816  019E4A  0E00               	movlw	0
 23817  019E4C  200C               	addwfc	(btemp+11)^0,w,c
 23818  019E4E  6EDA               	movwf	fsr2h,c
 23819                           
 23820                           ;stkvar	_fp @ sp[(0)+-4]
 23821  019E50  0EFC               	movlw	-4
 23822  019E52  006F FF8C  F00B    	movff	plusw1,btemp+10
 23823  019E58  0EFD               	movlw	-3
 23824  019E5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23825  019E60  0E02               	movlw	2
 23826  019E62  240B               	addwf	(btemp+10)^0,w,c
 23827  019E64  6EE9               	movwf	fsr0l,c
 23828  019E66  0E00               	movlw	0
 23829  019E68  200C               	addwfc	(btemp+11)^0,w,c
 23830  019E6A  6EEA               	movwf	fsr0h,c
 23831  019E6C  50DE               	movf	postinc2,w,c
 23832  019E6E  5CEE               	subwf	postinc0,w,c
 23833  019E70  50EE               	movf	postinc0,w,c
 23834  019E72  0A80               	xorlw	128
 23835  019E74  6E01               	movwf	btemp^0,c
 23836  019E76  50DE               	movf	postinc2,w,c
 23837  019E78  0A80               	xorlw	128
 23838  019E7A  5801               	subwfb	btemp^0,w,c
 23839  019E7C  B0D8               	btfsc	status,0,c
 23840  019E7E  D03D               	goto	l3305
 23841  019E80                     u11210:
 23842                           
 23843                           ;stkvar	_c @ sp[(0)+-2]
 23844                           ;stkvar	_fp @ sp[(0)+-4]
 23845  019E80  0EFC               	movlw	-4
 23846  019E82  006F FF8C  F00B    	movff	plusw1,btemp+10
 23847  019E88  0EFD               	movlw	-3
 23848  019E8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23849  019E90  0E02               	movlw	2
 23850  019E92  240B               	addwf	(btemp+10)^0,w,c
 23851  019E94  6ED9               	movwf	fsr2l,c
 23852  019E96  0E00               	movlw	0
 23853  019E98  200C               	addwfc	(btemp+11)^0,w,c
 23854  019E9A  6EDA               	movwf	fsr2h,c
 23855  019E9C  006F FF78  F00B    	movff	postinc2,btemp+10
 23856  019EA2  006F FF74  F00C    	movff	postdec2,btemp+11
 23857                           
 23858                           ;stkvar	_fp @ sp[(0)+-4]
 23859  019EA8  0EFC               	movlw	-4
 23860  019EAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 23861  019EB0  0EFD               	movlw	-3
 23862  019EB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 23863  019EB8  006F FF78  F009    	movff	postinc2,btemp+8
 23864  019EBE  006F FF74  F00A    	movff	postdec2,btemp+9
 23865  019EC4  500B               	movf	(btemp+10)^0,w,c
 23866  019EC6  2409               	addwf	(btemp+8)^0,w,c
 23867  019EC8  6ED9               	movwf	fsr2l,c
 23868  019ECA  500C               	movf	(btemp+11)^0,w,c
 23869  019ECC  200A               	addwfc	(btemp+9)^0,w,c
 23870  019ECE  6EDA               	movwf	fsr2h,c
 23871  019ED0  0EFE               	movlw	-2
 23872  019ED2  006F FF8F FFDF     	movff	plusw1,indf2
 23873                           
 23874                           ;stkvar	_fp @ sp[(0)+-4]
 23875  019ED8  0EFC               	movlw	-4
 23876  019EDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23877  019EE0  0EFD               	movlw	-3
 23878  019EE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23879  019EE8  0E02               	movlw	2
 23880  019EEA  240B               	addwf	(btemp+10)^0,w,c
 23881  019EEC  6ED9               	movwf	fsr2l,c
 23882  019EEE  0E00               	movlw	0
 23883  019EF0  200C               	addwfc	(btemp+11)^0,w,c
 23884  019EF2  6EDA               	movwf	fsr2h,c
 23885  019EF4  2ADE               	incf	postinc2,f,c
 23886  019EF6  0E00               	movlw	0
 23887  019EF8  22DD               	addwfc	postdec2,f,c
 23888  019EFA                     l3305:
 23889                           
 23890                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23891  019EFA  52E5               	movf	postdec1,f,c
 23892  019EFC  52E5               	movf	postdec1,f,c
 23893  019EFE  52E5               	movf	postdec1,f,c
 23894  019F00  52E5               	movf	postdec1,f,c
 23895  019F02  0012               	return		;funcret
 23896  019F04                     __end_of_fputc:
 23897                           	opt callstack 0
 23898                           
 23899 ;; *************** function _putch *****************
 23900 ;; Defined at:
 23901 ;;		line 421 in file "eadog.c"
 23902 ;; Parameters:    Size  Location     Type
 23903 ;;  c               1  [STACK] unsigned char 
 23904 ;; Auto vars:     Size  Location     Type
 23905 ;;		None
 23906 ;; Return value:  Size  Location     Type
 23907 ;;                  1  [STACK] void 
 23908 ;; Registers used:
 23909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23910 ;; Tracked objects:
 23911 ;;		On entry : 0/0
 23912 ;;		On exit  : 0/0
 23913 ;;		Unchanged: 0/0
 23914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;Total ram usage:        0 bytes
 23920 ;; Hardware stack levels used:    1
 23921 ;; Hardware stack levels required when called:   16
 23922 ;; This function calls:
 23923 ;;		_ringBufS_put_dma
 23924 ;; This function is called by:
 23925 ;;		_fputc
 23926 ;; This function uses a reentrant model
 23927 ;;
 23928                           
 23929                           	psect	text85
 23930  01C8C8                     __ptext85:
 23931                           	opt callstack 0
 23932  01C8C8                     _putch:
 23933                           	opt callstack 0
 23934                           
 23935                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 23936                           ;stkvar	_c @ sp[(0)+-1]
 23937                           
 23938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23939                           ;incstack = 0
 23940 ;; hardware stack exceeded
 23941  01C8C8  0EFF               	movlw	-1
 23942  01C8CA  50E3               	movf	plusw1,w,c
 23943  01C8CC  6EE6               	movwf	postinc1,c
 23944  01C8CE  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 23945  01C8D4  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 23946  01C8DA  EC5B  F0D7         	call	_ringBufS_put_dma	;wreg free
 23947                           
 23948                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 23949  01C8DE  52E5               	movf	postdec1,f,c
 23950  01C8E0  0012               	return		;funcret
 23951  01C8E2                     __end_of_putch:
 23952                           	opt callstack 0
 23953                           
 23954 ;; *************** function _ringBufS_put_dma *****************
 23955 ;; Defined at:
 23956 ;;		line 67 in file "ringbufs.c"
 23957 ;; Parameters:    Size  Location     Type
 23958 ;;  _this           2  [STACK] PTR struct ringBufS_t
 23959 ;;		 -> ring_buf1(67), 
 23960 ;;  c               1  [STACK] const unsigned char 
 23961 ;; Auto vars:     Size  Location     Type
 23962 ;;		None
 23963 ;; Return value:  Size  Location     Type
 23964 ;;                  1  [STACK] void 
 23965 ;; Registers used:
 23966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23967 ;; Tracked objects:
 23968 ;;		On entry : 0/0
 23969 ;;		On exit  : 0/0
 23970 ;;		Unchanged: 0/0
 23971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23976 ;;Total ram usage:        0 bytes
 23977 ;; Hardware stack levels used:    1
 23978 ;; Hardware stack levels required when called:   15
 23979 ;; This function calls:
 23980 ;;		Nothing
 23981 ;; This function is called by:
 23982 ;;		_putch
 23983 ;; This function uses a reentrant model
 23984 ;;
 23985                           
 23986                           	psect	text86
 23987  01AEB6                     __ptext86:
 23988                           	opt callstack 0
 23989  01AEB6                     _ringBufS_put_dma:
 23990                           	opt callstack 0
 23991                           
 23992                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 23993                           ;stkvar	__this @ sp[(0)+-2]
 23994                           
 23995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23996                           ;incstack = 0
 23997 ;; hardware stack exceeded
 23998  01AEB6  0EFE               	movlw	-2
 23999  01AEB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 24000  01AEBE  0EFF               	movlw	-1
 24001  01AEC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 24002  01AEC6  0E42               	movlw	66
 24003  01AEC8  240B               	addwf	(btemp+10)^0,w,c
 24004  01AECA  6ED9               	movwf	fsr2l,c
 24005  01AECC  0E00               	movlw	0
 24006  01AECE  200C               	addwfc	(btemp+11)^0,w,c
 24007  01AED0  6EDA               	movwf	fsr2h,c
 24008  01AED2  0E40               	movlw	64
 24009  01AED4  60DF               	cpfslt	indf2,c
 24010  01AED6  D040               	goto	l1610
 24011                           
 24012                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 24013                           ;stkvar	_c @ sp[(0)+-3]
 24014                           ;stkvar	__this @ sp[(0)+-2]
 24015  01AED8  0EFE               	movlw	-2
 24016  01AEDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 24017  01AEE0  0EFF               	movlw	-1
 24018  01AEE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24019  01AEE8  0E40               	movlw	64
 24020  01AEEA  240B               	addwf	(btemp+10)^0,w,c
 24021  01AEEC  6ED9               	movwf	fsr2l,c
 24022  01AEEE  0E00               	movlw	0
 24023  01AEF0  200C               	addwfc	(btemp+11)^0,w,c
 24024  01AEF2  6EDA               	movwf	fsr2h,c
 24025  01AEF4  50DF               	movf	indf2,w,c
 24026  01AEF6  6E0C               	movwf	(btemp+11)^0,c
 24027                           
 24028                           ;stkvar	__this @ sp[(0)+-2]
 24029  01AEF8  0EFE               	movlw	-2
 24030  01AEFA  006F FF8C  F009    	movff	plusw1,btemp+8
 24031  01AF00  0EFF               	movlw	-1
 24032  01AF02  006F FF8C  F00A    	movff	plusw1,btemp+9
 24033  01AF08  500C               	movf	(btemp+11)^0,w,c
 24034  01AF0A  2409               	addwf	(btemp+8)^0,w,c
 24035  01AF0C  6ED9               	movwf	fsr2l,c
 24036  01AF0E  0E00               	movlw	0
 24037  01AF10  200A               	addwfc	(btemp+9)^0,w,c
 24038  01AF12  6EDA               	movwf	fsr2h,c
 24039  01AF14  0EFD               	movlw	-3
 24040  01AF16  006F FF8F FFDF     	movff	plusw1,indf2
 24041                           
 24042                           ;ringbufs.c: 71:   ++_this->head;
 24043                           ;stkvar	__this @ sp[(0)+-2]
 24044  01AF1C  0EFE               	movlw	-2
 24045  01AF1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24046  01AF24  0EFF               	movlw	-1
 24047  01AF26  006F FF8C  F00C    	movff	plusw1,btemp+11
 24048  01AF2C  0E40               	movlw	64
 24049  01AF2E  240B               	addwf	(btemp+10)^0,w,c
 24050  01AF30  6ED9               	movwf	fsr2l,c
 24051  01AF32  0E00               	movlw	0
 24052  01AF34  200C               	addwfc	(btemp+11)^0,w,c
 24053  01AF36  6EDA               	movwf	fsr2h,c
 24054  01AF38  2ADF               	incf	indf2,f,c
 24055                           
 24056                           ;ringbufs.c: 72:   ++_this->count;
 24057                           ;stkvar	__this @ sp[(0)+-2]
 24058  01AF3A  0EFE               	movlw	-2
 24059  01AF3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24060  01AF42  0EFF               	movlw	-1
 24061  01AF44  006F FF8C  F00C    	movff	plusw1,btemp+11
 24062  01AF4A  0E42               	movlw	66
 24063  01AF4C  240B               	addwf	(btemp+10)^0,w,c
 24064  01AF4E  6ED9               	movwf	fsr2l,c
 24065  01AF50  0E00               	movlw	0
 24066  01AF52  200C               	addwfc	(btemp+11)^0,w,c
 24067  01AF54  6EDA               	movwf	fsr2h,c
 24068  01AF56  2ADF               	incf	indf2,f,c
 24069  01AF58                     l1610:
 24070                           
 24071                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 24072  01AF58  52E5               	movf	postdec1,f,c
 24073  01AF5A  52E5               	movf	postdec1,f,c
 24074  01AF5C  52E5               	movf	postdec1,f,c
 24075  01AF5E  0012               	return		;funcret
 24076  01AF60                     __end_of_ringBufS_put_dma:
 24077                           	opt callstack 0
 24078                           
 24079 ;; *************** function _atoi *****************
 24080 ;; Defined at:
 24081 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24082 ;; Parameters:    Size  Location     Type
 24083 ;;  s               2  [STACK] PTR const unsigned char 
 24084 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 24085 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 24086 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 24087 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 24088 ;;		 -> STR_58(19), STR_55(3), STR_54(3), STR_53(21), 
 24089 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 24090 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 24091 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 24092 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 24093 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 24094 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 24095 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 24096 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 24097 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 24098 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 24099 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 24100 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 24101 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 24102 ;; Auto vars:     Size  Location     Type
 24103 ;;  n               2  [STACK] int 
 24104 ;;  neg             2  [STACK] int 
 24105 ;; Return value:  Size  Location     Type
 24106 ;;                  2  [STACK] int 
 24107 ;; Registers used:
 24108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 24109 ;; Tracked objects:
 24110 ;;		On entry : 0/0
 24111 ;;		On exit  : 0/0
 24112 ;;		Unchanged: 0/0
 24113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24118 ;;Total ram usage:        0 bytes
 24119 ;; Hardware stack levels used:    1
 24120 ;; Hardware stack levels required when called:   16
 24121 ;; This function calls:
 24122 ;;		_isdigit
 24123 ;;		_isspace
 24124 ;; This function is called by:
 24125 ;;		_vfpfcnvrt
 24126 ;; This function uses a reentrant model
 24127 ;;
 24128                           
 24129                           	psect	text87
 24130  0179BC                     __ptext87:
 24131                           	opt callstack 0
 24132  0179BC                     _atoi:
 24133                           	opt callstack 0
 24134                           
 24135                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24136  0179BC  0E09               	movlw	9
 24137  0179BE  26E1               	addwf	fsr1l,f,c
 24138  0179C0  0E00               	movlw	0
 24139  0179C2  22E2               	addwfc	fsr1h,f,c
 24140                           
 24141                           ;stkvar	_n @ sp[(-9)+5]
 24142                           
 24143                           ;incstack = 0
 24144 ;; hardware stack exceeded
 24145  0179C4  0EFC               	movlw	-4
 24146  0179C6  6AE3               	clrf	plusw1,c
 24147  0179C8  0EFD               	movlw	-3
 24148  0179CA  6AE3               	clrf	plusw1,c
 24149                           
 24150                           ;stkvar	_neg @ sp[(-9)+7]
 24151  0179CC  0EFE               	movlw	-2
 24152  0179CE  6AE3               	clrf	plusw1,c
 24153  0179D0  0EFF               	movlw	-1
 24154  0179D2  6AE3               	clrf	plusw1,c
 24155  0179D4  D011               	goto	l9655
 24156  0179D6                     l9653:
 24157                           
 24158                           ;stkvar	_s @ sp[(-9)+-2]
 24159  0179D6  0EF5               	movlw	-11
 24160  0179D8  50E3               	movf	plusw1,w,c
 24161  0179DA  0F01               	addlw	1
 24162  0179DC  6E01               	movwf	btemp^0,c
 24163  0179DE  0EF5               	movlw	-11
 24164  0179E0  0060  F007  FFE3   	movff	btemp,plusw1
 24165  0179E6  6A01               	clrf	btemp^0,c
 24166  0179E8  0EF6               	movlw	-10
 24167  0179EA  50E3               	movf	plusw1,w,c
 24168  0179EC  2001               	addwfc	btemp^0,w,c
 24169  0179EE  6E01               	movwf	btemp^0,c
 24170  0179F0  0EF6               	movlw	-10
 24171  0179F2  0060  F007  FFE3   	movff	btemp,plusw1
 24172  0179F8                     l9655:
 24173                           
 24174                           ;stkvar	_atoi$6414 @ sp[(-9)+4]
 24175  0179F8  0EFB               	movlw	-5
 24176  0179FA  6AE3               	clrf	plusw1,c
 24177  0179FC  2AE3               	incf	plusw1,f,c
 24178                           
 24179                           ;stkvar	_s @ sp[(-9)+-2]
 24180  0179FE  50E1               	movf	fsr1l,w,c
 24181  017A00  0FF5               	addlw	-11
 24182  017A02  6ED9               	movwf	fsr2l,c
 24183  017A04  50E2               	movf	fsr1h,w,c
 24184  017A06  6EDA               	movwf	fsr2h,c
 24185  017A08  0EFF               	movlw	255
 24186  017A0A  22DA               	addwfc	fsr2h,f,c
 24187  017A0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 24188  017A12  006F FF77 FFF7     	movff	postdec2,tblptrh
 24189  017A18                     	if	0	;tblptru may be non-zero
 24190  017A18                     	endif
 24191  017A18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24192  017A18  0E00               	movlw	low (__mediumconst shr (0+16))
 24193  017A1A  6EF8               	movwf	tblptru,c
 24194  017A1C                     	endif
 24195  017A1C  0008               	tblrd		*
 24196  017A1E  50F5               	movf	tablat,w,c
 24197  017A20  0A20               	xorlw	32
 24198  017A22  B4D8               	btfsc	status,2,c
 24199  017A24  D023               	goto	l9663
 24200  017A26  0EF7               	movlw	247
 24201  017A28  6E0B               	movwf	(btemp+10)^0,c
 24202  017A2A  0EFF               	movlw	255
 24203  017A2C  6E0C               	movwf	(btemp+11)^0,c
 24204                           
 24205                           ;stkvar	_s @ sp[(-9)+-2]
 24206  017A2E  50E1               	movf	fsr1l,w,c
 24207  017A30  0FF5               	addlw	-11
 24208  017A32  6ED9               	movwf	fsr2l,c
 24209  017A34  50E2               	movf	fsr1h,w,c
 24210  017A36  6EDA               	movwf	fsr2h,c
 24211  017A38  0EFF               	movlw	255
 24212  017A3A  22DA               	addwfc	fsr2h,f,c
 24213  017A3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 24214  017A42  006F FF77 FFF7     	movff	postdec2,tblptrh
 24215  017A48                     	if	0	;tblptru may be non-zero
 24216  017A48                     	endif
 24217  017A48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24218  017A48  0E00               	movlw	low (__mediumconst shr (0+16))
 24219  017A4A  6EF8               	movwf	tblptru,c
 24220  017A4C                     	endif
 24221  017A4C  0008               	tblrd		*
 24222  017A4E  50F5               	movf	tablat,w,c
 24223  017A50  6E09               	movwf	(btemp+8)^0,c
 24224  017A52  6A0A               	clrf	(btemp+9)^0,c
 24225  017A54  500B               	movf	(btemp+10)^0,w,c
 24226  017A56  2609               	addwf	(btemp+8)^0,f,c
 24227  017A58  500C               	movf	(btemp+11)^0,w,c
 24228  017A5A  220A               	addwfc	(btemp+9)^0,f,c
 24229  017A5C  500A               	movf	(btemp+9)^0,w,c
 24230  017A5E  E104               	bnz	u8760
 24231  017A60  0E05               	movlw	5
 24232  017A62  5C09               	subwf	(btemp+8)^0,w,c
 24233  017A64  A0D8               	btfss	status,0,c
 24234  017A66  D002               	goto	l9663
 24235  017A68                     u8760:
 24236                           
 24237                           ;stkvar	_atoi$6414 @ sp[(-9)+4]
 24238  017A68  0EFB               	movlw	-5
 24239  017A6A  6AE3               	clrf	plusw1,c
 24240  017A6C                     l9663:
 24241                           
 24242                           ;stkvar	_atoi$6414 @ sp[(-9)+4]
 24243  017A6C  0EFB               	movlw	-5
 24244  017A6E  50E3               	movf	plusw1,w,c
 24245  017A70  6E0B               	movwf	(btemp+10)^0,c
 24246  017A72  6A0C               	clrf	(btemp+11)^0,c
 24247                           
 24248                           ;stkvar	_atoi$6413 @ sp[(-9)+2]
 24249  017A74  0EF9               	movlw	-7
 24250  017A76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24251  017A7C  0EFA               	movlw	-6
 24252  017A7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24253                           
 24254                           ;stkvar	_atoi$6413 @ sp[(-9)+2]
 24255  017A84  0EF9               	movlw	-7
 24256  017A86  006F FF8C  F001    	movff	plusw1,btemp
 24257  017A8C  0EFA               	movlw	-6
 24258  017A8E  50E3               	movf	plusw1,w,c
 24259  017A90  1001               	iorwf	btemp^0,w,c
 24260  017A92  B4D8               	btfsc	status,2,c
 24261  017A94  D01F               	goto	l9673
 24262  017A96  D79F               	goto	l9653
 24263  017A98                     l9669:
 24264  017A98  0E01               	movlw	1
 24265  017A9A  6E0B               	movwf	(btemp+10)^0,c
 24266  017A9C  0E00               	movlw	0
 24267  017A9E  6E0C               	movwf	(btemp+11)^0,c
 24268                           
 24269                           ;stkvar	_neg @ sp[(-9)+7]
 24270  017AA0  0EFE               	movlw	-2
 24271  017AA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24272  017AA8  0EFF               	movlw	-1
 24273  017AAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24274  017AB0                     l9671:
 24275                           
 24276                           ;stkvar	_s @ sp[(-9)+-2]
 24277  017AB0  0EF5               	movlw	-11
 24278  017AB2  50E3               	movf	plusw1,w,c
 24279  017AB4  0F01               	addlw	1
 24280  017AB6  6E01               	movwf	btemp^0,c
 24281  017AB8  0EF5               	movlw	-11
 24282  017ABA  0060  F007  FFE3   	movff	btemp,plusw1
 24283  017AC0  6A01               	clrf	btemp^0,c
 24284  017AC2  0EF6               	movlw	-10
 24285  017AC4  50E3               	movf	plusw1,w,c
 24286  017AC6  2001               	addwfc	btemp^0,w,c
 24287  017AC8  6E01               	movwf	btemp^0,c
 24288  017ACA  0EF6               	movlw	-10
 24289  017ACC  0060  F007  FFE3   	movff	btemp,plusw1
 24290  017AD2  D053               	goto	l9679
 24291  017AD4                     l9673:
 24292                           
 24293                           ;stkvar	_s @ sp[(-9)+-2]
 24294  017AD4  50E1               	movf	fsr1l,w,c
 24295  017AD6  0FF5               	addlw	-11
 24296  017AD8  6ED9               	movwf	fsr2l,c
 24297  017ADA  50E2               	movf	fsr1h,w,c
 24298  017ADC  6EDA               	movwf	fsr2h,c
 24299  017ADE  0EFF               	movlw	255
 24300  017AE0  22DA               	addwfc	fsr2h,f,c
 24301  017AE2  006F FF7B FFF6     	movff	postinc2,tblptrl
 24302  017AE8  006F FF77 FFF7     	movff	postdec2,tblptrh
 24303  017AEE                     	if	0	;tblptru may be non-zero
 24304  017AEE                     	endif
 24305  017AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24306  017AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 24307  017AF0  6EF8               	movwf	tblptru,c
 24308  017AF2                     	endif
 24309  017AF2  0008               	tblrd		*
 24310  017AF4  50F5               	movf	tablat,w,c
 24311  017AF6  6E0B               	movwf	(btemp+10)^0,c
 24312  017AF8  6A0C               	clrf	(btemp+11)^0,c
 24313                           
 24314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24315                           ; Switch size 1, requested type "simple"
 24316                           ; Number of cases is 1, Range of values is 0 to 0
 24317                           ; switch strategies available:
 24318                           ; Name         Instructions Cycles
 24319                           ; simple_byte            4     3 (average)
 24320                           ;	Chosen strategy is simple_byte
 24321  017AFA  500C               	movf	(btemp+11)^0,w,c
 24322  017AFC  0A00               	xorlw	0	; case 0
 24323  017AFE  A4D8               	btfss	status,2,c
 24324  017B00  D03C               	goto	l9679
 24325                           
 24326                           ; Switch size 1, requested type "simple"
 24327                           ; Number of cases is 2, Range of values is 43 to 45
 24328                           ; switch strategies available:
 24329                           ; Name         Instructions Cycles
 24330                           ; simple_byte            7     4 (average)
 24331                           ;	Chosen strategy is simple_byte
 24332  017B02  500B               	movf	(btemp+10)^0,w,c
 24333  017B04  0A2B               	xorlw	43	; case 43
 24334  017B06  B4D8               	btfsc	status,2,c
 24335  017B08  D7D3               	goto	l9671
 24336  017B0A  0A06               	xorlw	6	; case 45
 24337  017B0C  B4D8               	btfsc	status,2,c
 24338  017B0E  D7C4               	goto	l9669
 24339  017B10  D034               	goto	l9679
 24340  017B12                     l9675:
 24341                           
 24342                           ;stkvar	_n @ sp[(-9)+5]
 24343  017B12  0EFC               	movlw	-4
 24344  017B14  006F FF8C  F00B    	movff	plusw1,btemp+10
 24345  017B1A  0EFD               	movlw	-3
 24346  017B1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24347  017B22  0E0A               	movlw	10
 24348  017B24  020B               	mulwf	(btemp+10)^0,c
 24349  017B26  006F FFCC  F009    	movff	prodl,btemp+8
 24350  017B2C  006F FFD0  F00A    	movff	prodh,btemp+9
 24351  017B32  020C               	mulwf	(btemp+11)^0,c
 24352  017B34  50F3               	movf	prodl,w,c
 24353  017B36  260A               	addwf	(btemp+9)^0,f,c
 24354                           
 24355                           ;stkvar	_s @ sp[(-9)+-2]
 24356  017B38  50E1               	movf	fsr1l,w,c
 24357  017B3A  0FF5               	addlw	-11
 24358  017B3C  6ED9               	movwf	fsr2l,c
 24359  017B3E  50E2               	movf	fsr1h,w,c
 24360  017B40  6EDA               	movwf	fsr2h,c
 24361  017B42  0EFF               	movlw	255
 24362  017B44  22DA               	addwfc	fsr2h,f,c
 24363  017B46  006F FF7B FFF6     	movff	postinc2,tblptrl
 24364  017B4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 24365  017B52                     	if	0	;tblptru may be non-zero
 24366  017B52                     	endif
 24367  017B52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24368  017B52  0E00               	movlw	low (__mediumconst shr (0+16))
 24369  017B54  6EF8               	movwf	tblptru,c
 24370  017B56                     	endif
 24371  017B56  0008               	tblrd		*
 24372  017B58  50F5               	movf	tablat,w,c
 24373  017B5A  5E09               	subwf	(btemp+8)^0,f,c
 24374  017B5C  0E00               	movlw	0
 24375  017B5E  5A0A               	subwfb	(btemp+9)^0,f,c
 24376  017B60  0E30               	movlw	48
 24377  017B62  2609               	addwf	(btemp+8)^0,f,c
 24378  017B64  0E00               	movlw	0
 24379  017B66  220A               	addwfc	(btemp+9)^0,f,c
 24380                           
 24381                           ;stkvar	_n @ sp[(-9)+5]
 24382  017B68  0EFC               	movlw	-4
 24383  017B6A  0060  F027  FFE3   	movff	btemp+8,plusw1
 24384  017B70  0EFD               	movlw	-3
 24385  017B72  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24386  017B78  D79B               	goto	l9671
 24387  017B7A                     l9679:
 24388  017B7A  0ED0               	movlw	208
 24389  017B7C  6E0B               	movwf	(btemp+10)^0,c
 24390  017B7E  0EFF               	movlw	255
 24391  017B80  6E0C               	movwf	(btemp+11)^0,c
 24392                           
 24393                           ;stkvar	_s @ sp[(-9)+-2]
 24394  017B82  50E1               	movf	fsr1l,w,c
 24395  017B84  0FF5               	addlw	-11
 24396  017B86  6ED9               	movwf	fsr2l,c
 24397  017B88  50E2               	movf	fsr1h,w,c
 24398  017B8A  6EDA               	movwf	fsr2h,c
 24399  017B8C  0EFF               	movlw	255
 24400  017B8E  22DA               	addwfc	fsr2h,f,c
 24401  017B90  006F FF7B FFF6     	movff	postinc2,tblptrl
 24402  017B96  006F FF77 FFF7     	movff	postdec2,tblptrh
 24403  017B9C                     	if	0	;tblptru may be non-zero
 24404  017B9C                     	endif
 24405  017B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24406  017B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 24407  017B9E  6EF8               	movwf	tblptru,c
 24408  017BA0                     	endif
 24409  017BA0  0008               	tblrd		*
 24410  017BA2  50F5               	movf	tablat,w,c
 24411  017BA4  6E09               	movwf	(btemp+8)^0,c
 24412  017BA6  6A0A               	clrf	(btemp+9)^0,c
 24413  017BA8  500B               	movf	(btemp+10)^0,w,c
 24414  017BAA  2609               	addwf	(btemp+8)^0,f,c
 24415  017BAC  500C               	movf	(btemp+11)^0,w,c
 24416  017BAE  220A               	addwfc	(btemp+9)^0,f,c
 24417  017BB0  500A               	movf	(btemp+9)^0,w,c
 24418  017BB2  E106               	bnz	u8780
 24419  017BB4  0E0A               	movlw	10
 24420  017BB6  5C09               	subwf	(btemp+8)^0,w,c
 24421  017BB8  B0D8               	btfsc	status,0,c
 24422  017BBA  D002               	goto	u8780
 24423  017BBC  0E01               	movlw	1
 24424  017BBE  D001               	goto	u8790
 24425  017BC0                     u8780:
 24426  017BC0  0E00               	movlw	0
 24427  017BC2                     u8790:
 24428  017BC2  6E0B               	movwf	(btemp+10)^0,c
 24429  017BC4  6A0C               	clrf	(btemp+11)^0,c
 24430                           
 24431                           ;stkvar	_atoi$6415 @ sp[(-9)+0]
 24432  017BC6  0EF7               	movlw	-9
 24433  017BC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24434  017BCE  0EF8               	movlw	-8
 24435  017BD0  0060  F033  FFE3   	movff	btemp+11,plusw1
 24436                           
 24437                           ;stkvar	_atoi$6415 @ sp[(-9)+0]
 24438  017BD6  0EF7               	movlw	-9
 24439  017BD8  006F FF8C  F001    	movff	plusw1,btemp
 24440  017BDE  0EF8               	movlw	-8
 24441  017BE0  50E3               	movf	plusw1,w,c
 24442  017BE2  1001               	iorwf	btemp^0,w,c
 24443  017BE4  A4D8               	btfss	status,2,c
 24444  017BE6  D795               	goto	l9675
 24445                           
 24446                           ;stkvar	_neg @ sp[(-9)+7]
 24447  017BE8  0EFE               	movlw	-2
 24448  017BEA  006F FF8C  F001    	movff	plusw1,btemp
 24449  017BF0  0EFF               	movlw	-1
 24450  017BF2  50E3               	movf	plusw1,w,c
 24451  017BF4  1001               	iorwf	btemp^0,w,c
 24452  017BF6  A4D8               	btfss	status,2,c
 24453  017BF8  D00E               	goto	l9689
 24454                           
 24455                           ;stkvar	_n @ sp[(-9)+5]
 24456  017BFA  0EFC               	movlw	-4
 24457  017BFC  006F FF8C  F001    	movff	plusw1,btemp
 24458  017C02  1E01               	comf	btemp^0,f,c
 24459  017C04  0EFD               	movlw	-3
 24460  017C06  006F FF8C  F002    	movff	plusw1,btemp+1
 24461  017C0C  1E02               	comf	(btemp+1)^0,f,c
 24462  017C0E  2A01               	incf	btemp^0,f,c
 24463  017C10  B4D8               	btfsc	status,2,c
 24464  017C12  2A02               	incf	(btemp+1)^0,f,c
 24465  017C14  D008               	goto	l3236
 24466  017C16                     l9689:
 24467                           
 24468                           ;stkvar	_n @ sp[(-9)+5]
 24469  017C16  0EFC               	movlw	-4
 24470  017C18  006F FF8C  F001    	movff	plusw1,btemp
 24471  017C1E  0EFD               	movlw	-3
 24472  017C20  006F FF8C  F002    	movff	plusw1,btemp+1
 24473  017C26                     l3236:
 24474                           
 24475                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24476  017C26  0EF5               	movlw	245
 24477  017C28  26E1               	addwf	fsr1l,f,c
 24478  017C2A  0EFF               	movlw	255
 24479  017C2C  22E2               	addwfc	fsr1h,f,c
 24480  017C2E  0012               	return		;funcret
 24481  017C30                     __end_of_atoi:
 24482                           	opt callstack 0
 24483                           
 24484 ;; *************** function _isspace *****************
 24485 ;; Defined at:
 24486 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24487 ;; Parameters:    Size  Location     Type
 24488 ;;  c               2  [STACK] int 
 24489 ;; Auto vars:     Size  Location     Type
 24490 ;;		None
 24491 ;; Return value:  Size  Location     Type
 24492 ;;                  2  [STACK] int 
 24493 ;; Registers used:
 24494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24495 ;; Tracked objects:
 24496 ;;		On entry : 0/0
 24497 ;;		On exit  : 0/0
 24498 ;;		Unchanged: 0/0
 24499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24504 ;;Total ram usage:        0 bytes
 24505 ;; Hardware stack levels used:    1
 24506 ;; Hardware stack levels required when called:   15
 24507 ;; This function calls:
 24508 ;;		Nothing
 24509 ;; This function is called by:
 24510 ;;		_atoi
 24511 ;; This function uses a reentrant model
 24512 ;;
 24513                           
 24514                           	psect	text88
 24515  01BBA0                     __ptext88:
 24516                           	opt callstack 0
 24517  01BBA0                     _isspace:
 24518                           	opt callstack 0
 24519                           
 24520                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24521  01BBA0  52E6               	movf	postinc1,f,c
 24522                           
 24523                           ;stkvar	_isspace$6464 @ sp[(-1)+0]
 24524                           
 24525                           ;incstack = 0
 24526 ;; hardware stack exceeded
 24527  01BBA2  0EFF               	movlw	-1
 24528  01BBA4  6AE3               	clrf	plusw1,c
 24529  01BBA6  2AE3               	incf	plusw1,f,c
 24530                           
 24531                           ;stkvar	_c @ sp[(-1)+-2]
 24532  01BBA8  0EFD               	movlw	-3
 24533  01BBAA  006F FF8C  F001    	movff	plusw1,btemp
 24534  01BBB0  0E20               	movlw	32
 24535  01BBB2  1801               	xorwf	btemp^0,w,c
 24536  01BBB4  E104               	bnz	u7650
 24537  01BBB6  0EFE               	movlw	-2
 24538  01BBB8  50E3               	movf	plusw1,w,c
 24539  01BBBA  B4D8               	btfsc	status,2,c
 24540  01BBBC  D012               	goto	l9073
 24541  01BBBE                     u7650:
 24542                           
 24543                           ;stkvar	_c @ sp[(-1)+-2]
 24544  01BBBE  0EFD               	movlw	-3
 24545  01BBC0  50E3               	movf	plusw1,w,c
 24546  01BBC2  0FF7               	addlw	247
 24547  01BBC4  6E0B               	movwf	(btemp+10)^0,c
 24548  01BBC6  0EFE               	movlw	-2
 24549  01BBC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24550  01BBCE  0EFF               	movlw	255
 24551  01BBD0  220C               	addwfc	(btemp+11)^0,f,c
 24552  01BBD2  500C               	movf	(btemp+11)^0,w,c
 24553  01BBD4  E104               	bnz	u7660
 24554  01BBD6  0E05               	movlw	5
 24555  01BBD8  5C0B               	subwf	(btemp+10)^0,w,c
 24556  01BBDA  A0D8               	btfss	status,0,c
 24557  01BBDC  D002               	goto	l9073
 24558  01BBDE                     u7660:
 24559                           
 24560                           ;stkvar	_isspace$6464 @ sp[(-1)+0]
 24561  01BBDE  0EFF               	movlw	-1
 24562  01BBE0  6AE3               	clrf	plusw1,c
 24563  01BBE2                     l9073:
 24564                           
 24565                           ;stkvar	_isspace$6464 @ sp[(-1)+0]
 24566  01BBE2  0EFF               	movlw	-1
 24567  01BBE4  50E3               	movf	plusw1,w,c
 24568  01BBE6  6E01               	movwf	btemp^0,c
 24569  01BBE8  6A02               	clrf	(btemp+1)^0,c
 24570                           
 24571                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24572  01BBEA  52E5               	movf	postdec1,f,c
 24573  01BBEC  52E5               	movf	postdec1,f,c
 24574  01BBEE  52E5               	movf	postdec1,f,c
 24575  01BBF0  0012               	return		;funcret
 24576  01BBF2                     __end_of_isspace:
 24577                           	opt callstack 0
 24578                           
 24579 ;; *************** function _isdigit *****************
 24580 ;; Defined at:
 24581 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24582 ;; Parameters:    Size  Location     Type
 24583 ;;  c               2  [STACK] int 
 24584 ;; Auto vars:     Size  Location     Type
 24585 ;;		None
 24586 ;; Return value:  Size  Location     Type
 24587 ;;                  2  [STACK] int 
 24588 ;; Registers used:
 24589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24590 ;; Tracked objects:
 24591 ;;		On entry : 0/0
 24592 ;;		On exit  : 0/0
 24593 ;;		Unchanged: 0/0
 24594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24599 ;;Total ram usage:        0 bytes
 24600 ;; Hardware stack levels used:    1
 24601 ;; Hardware stack levels required when called:   15
 24602 ;; This function calls:
 24603 ;;		Nothing
 24604 ;; This function is called by:
 24605 ;;		_vfpfcnvrt
 24606 ;;		_atoi
 24607 ;; This function uses a reentrant model
 24608 ;;
 24609                           
 24610                           	psect	text89
 24611  01C34C                     __ptext89:
 24612                           	opt callstack 0
 24613  01C34C                     _isdigit:
 24614                           	opt callstack 0
 24615                           
 24616                           ;stkvar	_c @ sp[(0)+-2]
 24617                           
 24618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24619                           ;incstack = 0
 24620 ;; hardware stack exceeded
 24621  01C34C  0EFE               	movlw	-2
 24622  01C34E  50E3               	movf	plusw1,w,c
 24623  01C350  0FD0               	addlw	208
 24624  01C352  6E0B               	movwf	(btemp+10)^0,c
 24625  01C354  0EFF               	movlw	-1
 24626  01C356  006F FF8C  F00C    	movff	plusw1,btemp+11
 24627  01C35C  0EFF               	movlw	255
 24628  01C35E  220C               	addwfc	(btemp+11)^0,f,c
 24629  01C360  500C               	movf	(btemp+11)^0,w,c
 24630  01C362  E106               	bnz	u6500
 24631  01C364  0E0A               	movlw	10
 24632  01C366  5C0B               	subwf	(btemp+10)^0,w,c
 24633  01C368  B0D8               	btfsc	status,0,c
 24634  01C36A  D002               	goto	u6500
 24635  01C36C  0E01               	movlw	1
 24636  01C36E  D001               	goto	u6510
 24637  01C370                     u6500:
 24638  01C370  0E00               	movlw	0
 24639  01C372                     u6510:
 24640  01C372  6E01               	movwf	btemp^0,c
 24641  01C374  6A02               	clrf	(btemp+1)^0,c
 24642                           
 24643                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24644  01C376  52E5               	movf	postdec1,f,c
 24645  01C378  52E5               	movf	postdec1,f,c
 24646  01C37A  0012               	return		;funcret
 24647  01C37C                     __end_of_isdigit:
 24648                           	opt callstack 0
 24649                           
 24650 ;; *************** function _set_vterm *****************
 24651 ;; Defined at:
 24652 ;;		line 107 in file "mconfig.c"
 24653 ;; Parameters:    Size  Location     Type
 24654 ;;  vterm           1  [STACK] const unsigned char 
 24655 ;; Auto vars:     Size  Location     Type
 24656 ;;		None
 24657 ;; Return value:  Size  Location     Type
 24658 ;;                  1  [STACK] unsigned char 
 24659 ;; Registers used:
 24660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 24661 ;; Tracked objects:
 24662 ;;		On entry : 0/1
 24663 ;;		On exit  : 0/0
 24664 ;;		Unchanged: 0/0
 24665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24670 ;;Total ram usage:        0 bytes
 24671 ;; Hardware stack levels used:    1
 24672 ;; Hardware stack levels required when called:   15
 24673 ;; This function calls:
 24674 ;;		Nothing
 24675 ;; This function is called by:
 24676 ;;		_main
 24677 ;;		_check_help
 24678 ;; This function uses a reentrant model
 24679 ;;
 24680                           
 24681                           	psect	text90
 24682  01C86E                     __ptext90:
 24683                           	opt callstack 0
 24684  01C86E                     _set_vterm:
 24685                           	opt callstack 15
 24686                           
 24687                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 24688                           ;stkvar	_vterm @ sp[(0)+-1]
 24689                           
 24690                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24691                           ;incstack = 0
 24692  01C86E  0EFF               	movlw	-1
 24693  01C870  006F FF8C  F00C    	movff	plusw1,btemp+11
 24694  01C876  0E03               	movlw	3
 24695  01C878  160C               	andwf	(btemp+11)^0,f,c
 24696  01C87A  EE22  F20A         	lfsr	2,_D+480
 24697  01C87E  50DF               	movf	223,w,c
 24698  01C880  180C               	xorwf	(btemp+11)^0,w,c
 24699  01C882  0BFE               	andlw	-2
 24700  01C884  180C               	xorwf	(btemp+11)^0,w,c
 24701  01C886  6EDF               	movwf	223,c
 24702                           
 24703                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24704  01C888  52E5               	movf	postdec1,f,c
 24705  01C88A  0012               	return		;funcret
 24706  01C88C                     __end_of_set_vterm:
 24707                           	opt callstack 0
 24708                           
 24709 ;; *************** function _set_temp_display_help *****************
 24710 ;; Defined at:
 24711 ;;		line 211 in file "mconfig.c"
 24712 ;; Parameters:    Size  Location     Type
 24713 ;;  new_response    1  [STACK] const enum E16509
 24714 ;; Auto vars:     Size  Location     Type
 24715 ;;		None
 24716 ;; Return value:  Size  Location     Type
 24717 ;;                  1  [STACK] enum E16509
 24718 ;; Registers used:
 24719 ;;		wreg, fsr1l, fsr1h
 24720 ;; Tracked objects:
 24721 ;;		On entry : 0/1
 24722 ;;		On exit  : 3F/1
 24723 ;;		Unchanged: 0/0
 24724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24729 ;;Total ram usage:        0 bytes
 24730 ;; Hardware stack levels used:    1
 24731 ;; Hardware stack levels required when called:   15
 24732 ;; This function calls:
 24733 ;;		Nothing
 24734 ;; This function is called by:
 24735 ;;		_check_help
 24736 ;; This function uses a reentrant model
 24737 ;;
 24738                           
 24739                           	psect	text91
 24740  01C9B6                     __ptext91:
 24741                           	opt callstack 0
 24742  01C9B6                     _set_temp_display_help:
 24743                           	opt callstack 14
 24744                           
 24745                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 24746                           
 24747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24748                           ;incstack = 0
 24749  01C9B6  0101               	movlb	1	; () banked
 24750  01C9B8  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 24751                           
 24752                           ; BSR set to: 1
 24753                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 24754                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24755  01C9BA  0EFF               	movlw	-1
 24756  01C9BC  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 24757                           
 24758                           ; BSR set to: 1
 24759                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 24760  01C9C2  52E5               	movf	postdec1,f,c
 24761  01C9C4  0012               	return		;funcret
 24762  01C9C6                     __end_of_set_temp_display_help:
 24763                           	opt callstack 0
 24764                           
 24765 ;; *************** function _set_display_info *****************
 24766 ;; Defined at:
 24767 ;;		line 200 in file "mconfig.c"
 24768 ;; Parameters:    Size  Location     Type
 24769 ;;  new_response    1  [STACK] const enum E16509
 24770 ;; Auto vars:     Size  Location     Type
 24771 ;;		None
 24772 ;; Return value:  Size  Location     Type
 24773 ;;                  1  [STACK] enum E16994
 24774 ;; Registers used:
 24775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24776 ;; Tracked objects:
 24777 ;;		On entry : 0/1
 24778 ;;		On exit  : 0/0
 24779 ;;		Unchanged: 0/0
 24780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24785 ;;Total ram usage:        0 bytes
 24786 ;; Hardware stack levels used:    1
 24787 ;; Hardware stack levels required when called:   16
 24788 ;; This function calls:
 24789 ;;		_TimerDone
 24790 ;; This function is called by:
 24791 ;;		_main
 24792 ;;		_check_help
 24793 ;; This function uses a reentrant model
 24794 ;;
 24795                           
 24796                           	psect	text92
 24797  01C88C                     __ptext92:
 24798                           	opt callstack 0
 24799  01C88C                     _set_display_info:
 24800                           	opt callstack 14
 24801                           
 24802                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 24803                           
 24804                           ; BSR set to: 1
 24805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24806                           ;incstack = 0
 24807  01C88C  0E07               	movlw	7
 24808  01C88E  6EE6               	movwf	postinc1,c
 24809  01C890  EC41  F0E2         	call	_TimerDone	;wreg free
 24810  01C894  5001               	movf	btemp^0,w,c
 24811  01C896  B4D8               	btfsc	status,2,c
 24812  01C898  D006               	goto	l1745
 24813                           
 24814                           ;mconfig.c: 205:   old_info = V.response.info;
 24815  01C89A  0101               	movlb	1	; () banked
 24816  01C89C  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 24817                           
 24818                           ; BSR set to: 1
 24819                           ;mconfig.c: 206:   V.response.info = new_response_info;
 24820                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24821  01C89E  0EFF               	movlw	-1
 24822  01C8A0  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 24823  01C8A6                     l1745:
 24824                           
 24825                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24826  01C8A6  52E5               	movf	postdec1,f,c
 24827  01C8A8  0012               	return		;funcret
 24828  01C8AA                     __end_of_set_display_info:
 24829                           	opt callstack 0
 24830                           
 24831 ;; *************** function _mode_lamp_dim *****************
 24832 ;; Defined at:
 24833 ;;		line 13 in file "mconfig.c"
 24834 ;; Parameters:    Size  Location     Type
 24835 ;;  level           2  [STACK] const unsigned short 
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;		None
 24838 ;; Return value:  Size  Location     Type
 24839 ;;                  1  [STACK] void 
 24840 ;; Registers used:
 24841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24842 ;; Tracked objects:
 24843 ;;		On entry : 0/1
 24844 ;;		On exit  : 0/0
 24845 ;;		Unchanged: 0/0
 24846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24851 ;;Total ram usage:        0 bytes
 24852 ;; Hardware stack levels used:    1
 24853 ;; Hardware stack levels required when called:   16
 24854 ;; This function calls:
 24855 ;;		_PWM8_LoadDutyValue
 24856 ;; This function is called by:
 24857 ;;		_main
 24858 ;;		_check_help
 24859 ;; This function uses a reentrant model
 24860 ;;
 24861                           
 24862                           	psect	text93
 24863  01C8FE                     __ptext93:
 24864                           	opt callstack 0
 24865  01C8FE                     _mode_lamp_dim:
 24866                           	opt callstack 14
 24867                           
 24868                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 24869                           ;stkvar	_level @ sp[(0)+-2]
 24870                           
 24871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24872                           ;incstack = 0
 24873  01C8FE  0EFE               	movlw	-2
 24874  01C900  006F FF8F FFE6     	movff	plusw1,postinc1
 24875  01C906  006F FF8F FFE6     	movff	plusw1,postinc1
 24876  01C90C  EC8B  F0DF         	call	_PWM8_LoadDutyValue	;wreg free
 24877                           
 24878                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24879  01C910  52E5               	movf	postdec1,f,c
 24880  01C912  52E5               	movf	postdec1,f,c
 24881  01C914  0012               	return		;funcret
 24882  01C916                     __end_of_mode_lamp_dim:
 24883                           	opt callstack 0
 24884                           
 24885 ;; *************** function _mode_lamp_bright *****************
 24886 ;; Defined at:
 24887 ;;		line 18 in file "mconfig.c"
 24888 ;; Parameters:    Size  Location     Type
 24889 ;;		None
 24890 ;; Auto vars:     Size  Location     Type
 24891 ;;		None
 24892 ;; Return value:  Size  Location     Type
 24893 ;;                  1  [STACK] void 
 24894 ;; Registers used:
 24895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24896 ;; Tracked objects:
 24897 ;;		On entry : 0/0
 24898 ;;		On exit  : 0/0
 24899 ;;		Unchanged: 0/0
 24900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24905 ;;Total ram usage:        0 bytes
 24906 ;; Hardware stack levels used:    1
 24907 ;; Hardware stack levels required when called:   16
 24908 ;; This function calls:
 24909 ;;		_PWM8_LoadDutyValue
 24910 ;; This function is called by:
 24911 ;;		_check_help
 24912 ;; This function uses a reentrant model
 24913 ;;
 24914                           
 24915                           	psect	text94
 24916  01C9E4                     __ptext94:
 24917                           	opt callstack 0
 24918  01C9E4                     _mode_lamp_bright:
 24919                           	opt callstack 13
 24920                           
 24921                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 24922                           
 24923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24924                           ;incstack = 0
 24925  01C9E4  0E2C               	movlw	44
 24926  01C9E6  6EE6               	movwf	postinc1,c
 24927  01C9E8  0E01               	movlw	1
 24928  01C9EA  6EE6               	movwf	postinc1,c
 24929  01C9EC  EC8B  F0DF         	call	_PWM8_LoadDutyValue	;wreg free
 24930                           
 24931                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24932  01C9F0  0012               	return		;funcret
 24933  01C9F2                     __end_of_mode_lamp_bright:
 24934                           	opt callstack 0
 24935                           
 24936 ;; *************** function _PWM8_LoadDutyValue *****************
 24937 ;; Defined at:
 24938 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 24939 ;; Parameters:    Size  Location     Type
 24940 ;;  dutyValue       2  [STACK] unsigned short 
 24941 ;; Auto vars:     Size  Location     Type
 24942 ;;		None
 24943 ;; Return value:  Size  Location     Type
 24944 ;;                  1  [STACK] void 
 24945 ;; Registers used:
 24946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24947 ;; Tracked objects:
 24948 ;;		On entry : 0/1
 24949 ;;		On exit  : 0/0
 24950 ;;		Unchanged: 0/0
 24951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24956 ;;Total ram usage:        0 bytes
 24957 ;; Hardware stack levels used:    1
 24958 ;; Hardware stack levels required when called:   15
 24959 ;; This function calls:
 24960 ;;		Nothing
 24961 ;; This function is called by:
 24962 ;;		_mode_lamp_dim
 24963 ;;		_mode_lamp_bright
 24964 ;; This function uses a reentrant model
 24965 ;;
 24966                           
 24967                           	psect	text95
 24968  01BF16                     __ptext95:
 24969                           	opt callstack 0
 24970  01BF16                     _PWM8_LoadDutyValue:
 24971                           	opt callstack 14
 24972                           
 24973                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 24974                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24975                           
 24976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24977                           ;incstack = 0
 24978  01BF16  0EFE               	movlw	-2
 24979  01BF18  006F FF8C  F00B    	movff	plusw1,btemp+10
 24980  01BF1E  0EFF               	movlw	-1
 24981  01BF20  006F FF8C  F00C    	movff	plusw1,btemp+11
 24982  01BF26  90D8               	bcf	status,0,c
 24983  01BF28  320C               	rrcf	(btemp+11)^0,f,c
 24984  01BF2A  320B               	rrcf	(btemp+10)^0,f,c
 24985  01BF2C  90D8               	bcf	status,0,c
 24986  01BF2E  320C               	rrcf	(btemp+11)^0,f,c
 24987  01BF30  320B               	rrcf	(btemp+10)^0,f,c
 24988  01BF32  500B               	movf	(btemp+10)^0,w,c
 24989  01BF34  6E61               	movwf	97,c	;volatile
 24990                           
 24991                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 24992                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24993  01BF36  0EFE               	movlw	-2
 24994  01BF38  006F FF8C  F00C    	movff	plusw1,btemp+11
 24995  01BF3E  0E03               	movlw	3
 24996  01BF40  160C               	andwf	(btemp+11)^0,f,c
 24997  01BF42  0E06               	movlw	6
 24998  01BF44  6E01               	movwf	btemp^0,c
 24999  01BF46                     u9605:
 25000  01BF46  90D8               	bcf	status,0,c
 25001  01BF48  360C               	rlcf	(btemp+11)^0,f,c
 25002  01BF4A  2E01               	decfsz	btemp^0,f,c
 25003  01BF4C  D7FC               	goto	u9605
 25004  01BF4E  500C               	movf	(btemp+11)^0,w,c
 25005  01BF50  6E60               	movwf	96,c	;volatile
 25006                           
 25007                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25008  01BF52  52E5               	movf	postdec1,f,c
 25009  01BF54  52E5               	movf	postdec1,f,c
 25010  01BF56  0012               	return		;funcret
 25011  01BF58                     __end_of_PWM8_LoadDutyValue:
 25012                           	opt callstack 0
 25013                           
 25014 ;; *************** function _help_button *****************
 25015 ;; Defined at:
 25016 ;;		line 26 in file "mconfig.c"
 25017 ;; Parameters:    Size  Location     Type
 25018 ;;		None
 25019 ;; Auto vars:     Size  Location     Type
 25020 ;;		None
 25021 ;; Return value:  Size  Location     Type
 25022 ;;                  1  [STACK] _Bool 
 25023 ;; Registers used:
 25024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25025 ;; Tracked objects:
 25026 ;;		On entry : 0/1
 25027 ;;		On exit  : 0/0
 25028 ;;		Unchanged: 0/0
 25029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25034 ;;Total ram usage:        0 bytes
 25035 ;; Hardware stack levels used:    1
 25036 ;; Hardware stack levels required when called:   16
 25037 ;; This function calls:
 25038 ;;		_StartTimer
 25039 ;;		_TimerDone
 25040 ;; This function is called by:
 25041 ;;		_check_help
 25042 ;; This function uses a reentrant model
 25043 ;;
 25044                           
 25045                           	psect	text96
 25046  01C110                     __ptext96:
 25047                           	opt callstack 0
 25048  01C110                     _help_button:
 25049                           	opt callstack 13
 25050                           
 25051                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 25052                           
 25053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25054                           ;incstack = 0
 25055  01C110  B0CB               	btfsc	203,0,c	;volatile
 25056  01C112  D00C               	goto	l1688
 25057                           
 25058                           ;mconfig.c: 29:   V.help = 1;
 25059  01C114  0101               	movlb	1	; () banked
 25060  01C116  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 25061                           
 25062                           ; BSR set to: 1
 25063                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 25064  01C118  0E08               	movlw	8
 25065  01C11A  6EE6               	movwf	postinc1,c
 25066  01C11C  EC41  F0E2         	call	_TimerDone	;wreg free
 25067  01C120  5001               	movf	btemp^0,w,c
 25068  01C122  B4D8               	btfsc	status,2,c
 25069  01C124  D003               	goto	l1688
 25070                           
 25071                           ;mconfig.c: 31:    return 1;
 25072  01C126  0E01               	movlw	1
 25073  01C128  6E01               	movwf	btemp^0,c
 25074  01C12A  0012               	return	
 25075  01C12C                     l1688:
 25076                           
 25077                           ;mconfig.c: 34:  if (!V.help)
 25078  01C12C  0101               	movlb	1	; () banked
 25079  01C12E  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 25080  01C130  D008               	goto	l10861
 25081                           
 25082                           ; BSR set to: 1
 25083                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 25084  01C132  0E2C               	movlw	44
 25085  01C134  6EE6               	movwf	postinc1,c
 25086  01C136  0E01               	movlw	1
 25087  01C138  6EE6               	movwf	postinc1,c
 25088  01C13A  0E08               	movlw	8
 25089  01C13C  6EE6               	movwf	postinc1,c
 25090  01C13E  ECEC  F0DF         	call	_StartTimer	;wreg free
 25091  01C142                     l10861:
 25092                           
 25093                           ;mconfig.c: 37:  return 0;
 25094  01C142  0E00               	movlw	0
 25095  01C144  6E01               	movwf	btemp^0,c
 25096                           
 25097                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 25098  01C146  0012               	return		;funcret
 25099  01C148                     __end_of_help_button:
 25100                           	opt callstack 0
 25101                           
 25102 ;; *************** function _TimerDone *****************
 25103 ;; Defined at:
 25104 ;;		line 20 in file "timers.c"
 25105 ;; Parameters:    Size  Location     Type
 25106 ;;  timer           1  [STACK] const unsigned char 
 25107 ;; Auto vars:     Size  Location     Type
 25108 ;;		None
 25109 ;; Return value:  Size  Location     Type
 25110 ;;                  1  [STACK] _Bool 
 25111 ;; Registers used:
 25112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25113 ;; Tracked objects:
 25114 ;;		On entry : 0/1
 25115 ;;		On exit  : 0/0
 25116 ;;		Unchanged: 0/0
 25117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25122 ;;Total ram usage:        0 bytes
 25123 ;; Hardware stack levels used:    1
 25124 ;; Hardware stack levels required when called:   15
 25125 ;; This function calls:
 25126 ;;		Nothing
 25127 ;; This function is called by:
 25128 ;;		_main
 25129 ;;		_WaitMs
 25130 ;;		_help_button
 25131 ;;		_check_help
 25132 ;;		_set_display_info
 25133 ;;		_update_adc_result
 25134 ;;		_esr_check
 25135 ;; This function uses a reentrant model
 25136 ;;
 25137                           
 25138                           	psect	text97
 25139  01C482                     __ptext97:
 25140                           	opt callstack 0
 25141  01C482                     _TimerDone:
 25142                           	opt callstack 14
 25143                           
 25144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25145                           ;incstack = 0
 25146  01C482  0004               	clrwdt		;# 
 25147                           
 25148                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 25149                           ;stkvar	_timer @ sp[(0)+-1]
 25150  01C484  0EFF               	movlw	-1
 25151  01C486  50E3               	movf	plusw1,w,c
 25152  01C488  0D02               	mullw	2
 25153  01C48A  0E7D               	movlw	low _tickCount
 25154  01C48C  24F3               	addwf	243,w,c
 25155  01C48E  6ED9               	movwf	fsr2l,c
 25156  01C490  0E02               	movlw	high _tickCount
 25157  01C492  20F4               	addwfc	prodh,w,c
 25158  01C494  6EDA               	movwf	fsr2h,c
 25159  01C496  50DE               	movf	postinc2,w,c
 25160  01C498  10DE               	iorwf	postinc2,w,c
 25161  01C49A  A4D8               	btfss	status,2,c
 25162  01C49C  D002               	goto	l10087
 25163                           
 25164                           ;timers.c: 24:   return 1;
 25165  01C49E  0E01               	movlw	1
 25166  01C4A0  D001               	goto	L30
 25167  01C4A2                     l10087:
 25168                           
 25169                           ;timers.c: 26:  return 0;
 25170  01C4A2  0E00               	movlw	0
 25171  01C4A4                     L30:
 25172  01C4A4  6E01               	movwf	btemp^0,c
 25173                           
 25174                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 25175  01C4A6  52E5               	movf	postdec1,f,c
 25176  01C4A8  0012               	return		;funcret
 25177  01C4AA                     __end_of_TimerDone:
 25178                           	opt callstack 0
 25179                           
 25180 ;; *************** function _StartTimer *****************
 25181 ;; Defined at:
 25182 ;;		line 12 in file "timers.c"
 25183 ;; Parameters:    Size  Location     Type
 25184 ;;  timer           1  [STACK] const unsigned char 
 25185 ;;  count           2  [STACK] const unsigned short 
 25186 ;; Auto vars:     Size  Location     Type
 25187 ;;		None
 25188 ;; Return value:  Size  Location     Type
 25189 ;;                  1  [STACK] void 
 25190 ;; Registers used:
 25191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25192 ;; Tracked objects:
 25193 ;;		On entry : 0/0
 25194 ;;		On exit  : 0/0
 25195 ;;		Unchanged: 0/0
 25196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25201 ;;Total ram usage:        0 bytes
 25202 ;; Hardware stack levels used:    1
 25203 ;; Hardware stack levels required when called:   15
 25204 ;; This function calls:
 25205 ;;		Nothing
 25206 ;; This function is called by:
 25207 ;;		_main
 25208 ;;		_WaitMs
 25209 ;;		_help_button
 25210 ;;		_check_help
 25211 ;;		_update_adc_result
 25212 ;;		_calc_bsoc
 25213 ;;		_esr_check
 25214 ;; This function uses a reentrant model
 25215 ;;
 25216                           
 25217                           	psect	text98
 25218  01BFD8                     __ptext98:
 25219                           	opt callstack 0
 25220  01BFD8                     _StartTimer:
 25221                           	opt callstack 0
 25222                           
 25223                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 25224                           ;stkvar	_count @ sp[(0)+-3]
 25225                           
 25226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25227                           ;incstack = 0
 25228 ;; hardware stack exceeded
 25229  01BFD8  0EFD               	movlw	-3
 25230  01BFDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 25231  01BFE0  0EFE               	movlw	-2
 25232  01BFE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25233  01BFE8  90D8               	bcf	status,0,c
 25234  01BFEA  340B               	rlcf	(btemp+10)^0,w,c
 25235  01BFEC  6E09               	movwf	(btemp+8)^0,c
 25236  01BFEE  340C               	rlcf	(btemp+11)^0,w,c
 25237  01BFF0  6E0A               	movwf	(btemp+9)^0,c
 25238                           
 25239                           ;stkvar	_timer @ sp[(0)+-1]
 25240  01BFF2  0EFF               	movlw	-1
 25241  01BFF4  50E3               	movf	plusw1,w,c
 25242  01BFF6  0D02               	mullw	2
 25243  01BFF8  0E7D               	movlw	low _tickCount
 25244  01BFFA  24F3               	addwf	243,w,c
 25245  01BFFC  6ED9               	movwf	fsr2l,c
 25246  01BFFE  0E02               	movlw	high _tickCount
 25247  01C000  20F4               	addwfc	prodh,w,c
 25248  01C002  6EDA               	movwf	fsr2h,c
 25249  01C004  0060  F027  FFDE   	movff	btemp+8,postinc2
 25250  01C00A  0060  F02B  FFDD   	movff	btemp+9,postdec2
 25251                           
 25252                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 25253  01C010  52E5               	movf	postdec1,f,c
 25254  01C012  52E5               	movf	postdec1,f,c
 25255  01C014  52E5               	movf	postdec1,f,c
 25256  01C016  0012               	return		;funcret
 25257  01C018                     __end_of_StartTimer:
 25258                           	opt callstack 0
 25259                           
 25260 ;; *************** function _display_info *****************
 25261 ;; Defined at:
 25262 ;;		line 190 in file "mconfig.c"
 25263 ;; Parameters:    Size  Location     Type
 25264 ;;		None
 25265 ;; Auto vars:     Size  Location     Type
 25266 ;;		None
 25267 ;; Return value:  Size  Location     Type
 25268 ;;                  1  [STACK] enum E16509
 25269 ;; Registers used:
 25270 ;;		btemp
 25271 ;; Tracked objects:
 25272 ;;		On entry : 0/1
 25273 ;;		On exit  : 0/0
 25274 ;;		Unchanged: 0/0
 25275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25280 ;;Total ram usage:        0 bytes
 25281 ;; Hardware stack levels used:    1
 25282 ;; Hardware stack levels required when called:   15
 25283 ;; This function calls:
 25284 ;;		Nothing
 25285 ;; This function is called by:
 25286 ;;		_check_help
 25287 ;; This function uses a reentrant model
 25288 ;;
 25289                           
 25290                           	psect	text99
 25291  01CA66                     __ptext99:
 25292                           	opt callstack 0
 25293  01CA66                     _display_info:
 25294                           	opt callstack 14
 25295                           
 25296                           ;mconfig.c: 192:  return V.response.info;
 25297                           
 25298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25299                           ;incstack = 0
 25300  01CA66  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 25301                           
 25302                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25303  01CA6C  0012               	return		;funcret
 25304  01CA6E                     __end_of_display_info:
 25305                           	opt callstack 0
 25306                           
 25307 ;; *************** function _display_help *****************
 25308 ;; Defined at:
 25309 ;;		line 195 in file "mconfig.c"
 25310 ;; Parameters:    Size  Location     Type
 25311 ;;		None
 25312 ;; Auto vars:     Size  Location     Type
 25313 ;;		None
 25314 ;; Return value:  Size  Location     Type
 25315 ;;                  1  [STACK] enum E16509
 25316 ;; Registers used:
 25317 ;;		btemp
 25318 ;; Tracked objects:
 25319 ;;		On entry : 3F/1
 25320 ;;		On exit  : 0/0
 25321 ;;		Unchanged: 0/0
 25322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25327 ;;Total ram usage:        0 bytes
 25328 ;; Hardware stack levels used:    1
 25329 ;; Hardware stack levels required when called:   15
 25330 ;; This function calls:
 25331 ;;		Nothing
 25332 ;; This function is called by:
 25333 ;;		_check_help
 25334 ;; This function uses a reentrant model
 25335 ;;
 25336                           
 25337                           	psect	text100
 25338  01CA6E                     __ptext100:
 25339                           	opt callstack 0
 25340  01CA6E                     _display_help:
 25341                           	opt callstack 14
 25342                           
 25343                           ;mconfig.c: 197:  return V.response.help_temp;
 25344                           
 25345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25346                           ;incstack = 0
 25347  01CA6E  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 25348                           
 25349                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25350  01CA74  0012               	return		;funcret
 25351  01CA76                     __end_of_display_help:
 25352                           	opt callstack 0
 25353                           
 25354 ;; *************** function _check_enter_button *****************
 25355 ;; Defined at:
 25356 ;;		line 49 in file "hid.c"
 25357 ;; Parameters:    Size  Location     Type
 25358 ;;  h               2  [STACK] PTR struct H_data
 25359 ;;		 -> H(9), 
 25360 ;; Auto vars:     Size  Location     Type
 25361 ;;		None
 25362 ;; Return value:  Size  Location     Type
 25363 ;;                  1  [STACK] _Bool 
 25364 ;; Registers used:
 25365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 25366 ;; Tracked objects:
 25367 ;;		On entry : 0/0
 25368 ;;		On exit  : 0/0
 25369 ;;		Unchanged: 0/0
 25370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25375 ;;Total ram usage:        0 bytes
 25376 ;; Hardware stack levels used:    1
 25377 ;; Hardware stack levels required when called:   15
 25378 ;; This function calls:
 25379 ;;		Nothing
 25380 ;; This function is called by:
 25381 ;;		_main
 25382 ;; This function uses a reentrant model
 25383 ;;
 25384                           
 25385                           	psect	text101
 25386  01B68C                     __ptext101:
 25387                           	opt callstack 0
 25388  01B68C                     _check_enter_button:
 25389                           	opt callstack 15
 25390                           
 25391                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 25392                           ;stkvar	_h @ sp[(0)+-2]
 25393                           
 25394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25395                           ;incstack = 0
 25396  01B68C  0EFE               	movlw	-2
 25397  01B68E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25398  01B694  0EFF               	movlw	-1
 25399  01B696  006F FF8C  F00C    	movff	plusw1,btemp+11
 25400  01B69C  0E04               	movlw	4
 25401  01B69E  240B               	addwf	(btemp+10)^0,w,c
 25402  01B6A0  6ED9               	movwf	fsr2l,c
 25403  01B6A2  0E00               	movlw	0
 25404  01B6A4  200C               	addwfc	(btemp+11)^0,w,c
 25405  01B6A6  6EDA               	movwf	fsr2h,c
 25406  01B6A8  50DF               	movf	indf2,w,c
 25407  01B6AA  A4D8               	btfss	status,2,c
 25408  01B6AC  D023               	goto	l13627
 25409                           
 25410                           ;stkvar	_h @ sp[(0)+-2]
 25411  01B6AE  0EFE               	movlw	-2
 25412  01B6B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 25413  01B6B6  0EFF               	movlw	-1
 25414  01B6B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25415  01B6BE  0E05               	movlw	5
 25416  01B6C0  240B               	addwf	(btemp+10)^0,w,c
 25417  01B6C2  6ED9               	movwf	fsr2l,c
 25418  01B6C4  0E00               	movlw	0
 25419  01B6C6  200C               	addwfc	(btemp+11)^0,w,c
 25420  01B6C8  6EDA               	movwf	fsr2h,c
 25421  01B6CA  50DF               	movf	indf2,w,c
 25422  01B6CC  A4D8               	btfss	status,2,c
 25423  01B6CE  D012               	goto	l13627
 25424                           
 25425                           ;hid.c: 52:   h->wait_enter = 1;
 25426                           ;stkvar	_h @ sp[(0)+-2]
 25427  01B6D0  0EFE               	movlw	-2
 25428  01B6D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25429  01B6D8  0EFF               	movlw	-1
 25430  01B6DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25431  01B6E0  0E04               	movlw	4
 25432  01B6E2  240B               	addwf	(btemp+10)^0,w,c
 25433  01B6E4  6ED9               	movwf	fsr2l,c
 25434  01B6E6  0E00               	movlw	0
 25435  01B6E8  200C               	addwfc	(btemp+11)^0,w,c
 25436  01B6EA  6EDA               	movwf	fsr2h,c
 25437  01B6EC  0E01               	movlw	1
 25438  01B6EE  6EDF               	movwf	indf2,c
 25439                           
 25440                           ;hid.c: 53:   return 1;
 25441  01B6F0  0E01               	movlw	1
 25442  01B6F2  D001               	goto	L31
 25443  01B6F4                     l13627:
 25444                           
 25445                           ;hid.c: 55:  return 0;
 25446  01B6F4  0E00               	movlw	0
 25447  01B6F6                     L31:
 25448  01B6F6  6E01               	movwf	btemp^0,c
 25449                           
 25450                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25451  01B6F8  52E5               	movf	postdec1,f,c
 25452  01B6FA  52E5               	movf	postdec1,f,c
 25453  01B6FC  0012               	return		;funcret
 25454  01B6FE                     __end_of_check_enter_button:
 25455                           	opt callstack 0
 25456                           
 25457 ;; *************** function _calc_ror_data *****************
 25458 ;; Defined at:
 25459 ;;		line 102 in file "mbmc.c"
 25460 ;; Parameters:    Size  Location     Type
 25461 ;;		None
 25462 ;; Auto vars:     Size  Location     Type
 25463 ;;		None
 25464 ;; Return value:  Size  Location     Type
 25465 ;;                  1  [STACK] void 
 25466 ;; Registers used:
 25467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25468 ;; Tracked objects:
 25469 ;;		On entry : 0/39
 25470 ;;		On exit  : 0/0
 25471 ;;		Unchanged: 0/0
 25472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25477 ;;Total ram usage:        0 bytes
 25478 ;; Hardware stack levels used:    1
 25479 ;; Hardware stack levels required when called:   18
 25480 ;; This function calls:
 25481 ;;		___flge
 25482 ;;		___flsub
 25483 ;;		_conv_raw_result
 25484 ;;		_fabsf
 25485 ;; This function is called by:
 25486 ;;		_main
 25487 ;; This function uses a reentrant model
 25488 ;;
 25489                           
 25490                           	psect	text102
 25491  01906C                     __ptext102:
 25492                           	opt callstack 0
 25493  01906C                     _calc_ror_data:
 25494                           	opt callstack 12
 25495                           
 25496                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 25497                           
 25498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25499                           ;incstack = 0
 25500  01906C  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 25501  019072  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 25502  019078  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 25503  01907E  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 25504  019084  0E00               	movlw	0
 25505  019086  6EE6               	movwf	postinc1,c
 25506  019088  0E00               	movlw	0
 25507  01908A  6EE6               	movwf	postinc1,c
 25508  01908C  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25509  019090  0060  F007  FFE6   	movff	btemp,postinc1
 25510  019096  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25511  01909C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25512  0190A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25513  0190A8  EC46  F0DF         	call	___flsub	;wreg free
 25514  0190AC  0060  F007  FFE6   	movff	btemp,postinc1
 25515  0190B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25516  0190B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25517  0190BE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25518  0190C4  ECAE  F0D6         	call	_fabsf	;wreg free
 25519  0190C8  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25520  0190CE  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25521  0190D4  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25522  0190DA  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25523                           
 25524                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 25525  0190E0  0E00               	movlw	0
 25526  0190E2  6EE6               	movwf	postinc1,c
 25527  0190E4  0E00               	movlw	0
 25528  0190E6  6EE6               	movwf	postinc1,c
 25529  0190E8  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25530  0190EC  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 25531  0190F2  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 25532  0190F8  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 25533  0190FE  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 25534                           
 25535                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 25536  019104  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 25537  01910A  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 25538  019110  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 25539  019116  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 25540  01911C  0E00               	movlw	0
 25541  01911E  6EE6               	movwf	postinc1,c
 25542  019120  0E04               	movlw	4
 25543  019122  6EE6               	movwf	postinc1,c
 25544  019124  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25545  019128  0060  F007  FFE6   	movff	btemp,postinc1
 25546  01912E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25547  019134  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25548  01913A  0060  F013  FFE6   	movff	btemp+3,postinc1
 25549  019140  EC46  F0DF         	call	___flsub	;wreg free
 25550  019144  0060  F007  FFE6   	movff	btemp,postinc1
 25551  01914A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25552  019150  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25553  019156  0060  F013  FFE6   	movff	btemp+3,postinc1
 25554  01915C  ECAE  F0D6         	call	_fabsf	;wreg free
 25555  019160  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25556  019166  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25557  01916C  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25558  019172  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25559                           
 25560                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 25561  019178  0EE7               	movlw	231
 25562  01917A  6EE6               	movwf	postinc1,c
 25563  01917C  0E1D               	movlw	29
 25564  01917E  6EE6               	movwf	postinc1,c
 25565  019180  0EA7               	movlw	167
 25566  019182  6EE6               	movwf	postinc1,c
 25567  019184  0E3B               	movlw	59
 25568  019186  6EE6               	movwf	postinc1,c
 25569  019188  EE21  F36B         	lfsr	2,_C+108	;volatile
 25570  01918C  006F FF7B FFE6     	movff	postinc2,postinc1
 25571  019192  006F FF7B FFE6     	movff	postinc2,postinc1
 25572  019198  006F FF7B FFE6     	movff	postinc2,postinc1
 25573  01919E  006F FF7B FFE6     	movff	postinc2,postinc1
 25574  0191A4  EC72  F0CA         	call	___flge	;wreg free
 25575  0191A8  B001               	btfsc	btemp& (0+255),0,c
 25576  0191AA  D010               	goto	l11367
 25577                           
 25578                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 25579  0191AC  0EB0               	movlw	176
 25580  0191AE  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 25581  0191B4  0E03               	movlw	3
 25582  0191B6  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 25583  0191BC  0E67               	movlw	103
 25584  0191BE  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 25585  0191C4  0E3C               	movlw	60
 25586  0191C6  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 25587  0191CC                     l11367:
 25588                           
 25589                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 25590  0191CC  0E00               	movlw	0
 25591  0191CE  6EE6               	movwf	postinc1,c
 25592  0191D0  0E04               	movlw	4
 25593  0191D2  6EE6               	movwf	postinc1,c
 25594  0191D4  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25595  0191D8  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 25596  0191DE  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 25597  0191E4  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 25598  0191EA  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 25599                           
 25600                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 25601  0191F0  0012               	return		;funcret
 25602  0191F2                     __end_of_calc_ror_data:
 25603                           	opt callstack 0
 25604                           
 25605 ;; *************** function _fabsf *****************
 25606 ;; Defined at:
 25607 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 25608 ;; Parameters:    Size  Location     Type
 25609 ;;  x               4  [STACK] float 
 25610 ;; Auto vars:     Size  Location     Type
 25611 ;;  u               4  [STACK] struct .
 25612 ;; Return value:  Size  Location     Type
 25613 ;;                  4  [STACK] float 
 25614 ;; Registers used:
 25615 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25616 ;; Tracked objects:
 25617 ;;		On entry : 0/0
 25618 ;;		On exit  : 0/0
 25619 ;;		Unchanged: 0/0
 25620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25625 ;;Total ram usage:        0 bytes
 25626 ;; Hardware stack levels used:    1
 25627 ;; Hardware stack levels required when called:   15
 25628 ;; This function calls:
 25629 ;;		Nothing
 25630 ;; This function is called by:
 25631 ;;		_main
 25632 ;;		_calc_ror_data
 25633 ;;		_calc_bsoc
 25634 ;;		_esr_check
 25635 ;; This function uses a reentrant model
 25636 ;;
 25637                           
 25638                           	psect	text103
 25639  01AD5C                     __ptext103:
 25640                           	opt callstack 0
 25641  01AD5C                     _fabsf:
 25642                           	opt callstack 0
 25643                           
 25644                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25645  01AD5C  52E6               	movf	postinc1,f,c
 25646  01AD5E  52E6               	movf	postinc1,f,c
 25647  01AD60  52E6               	movf	postinc1,f,c
 25648  01AD62  52E6               	movf	postinc1,f,c
 25649                           
 25650                           ;incstack = 0
 25651 ;; hardware stack exceeded
 25652  01AD64  0060  F180  F009   	movff	fabsf@F463,btemp+8
 25653  01AD6A  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 25654  01AD70  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 25655  01AD76  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 25656                           
 25657                           ;stkvar	_u @ sp[(-4)+0]
 25658  01AD7C  0EFC               	movlw	-4
 25659  01AD7E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25660  01AD84  0EFD               	movlw	-3
 25661  01AD86  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25662  01AD8C  0EFE               	movlw	-2
 25663  01AD8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25664  01AD94  0EFF               	movlw	-1
 25665  01AD96  0060  F033  FFE3   	movff	btemp+11,plusw1
 25666                           
 25667                           ;stkvar	_x @ sp[(-4)+-4]
 25668  01AD9C  0EF8               	movlw	-8
 25669  01AD9E  006F FF8C  F009    	movff	plusw1,btemp+8
 25670  01ADA4  0EF9               	movlw	-7
 25671  01ADA6  006F FF8C  F00A    	movff	plusw1,btemp+9
 25672  01ADAC  0EFA               	movlw	-6
 25673  01ADAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25674  01ADB4  0EFB               	movlw	-5
 25675  01ADB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25676                           
 25677                           ;stkvar	_u @ sp[(-4)+0]
 25678  01ADBC  0EFC               	movlw	-4
 25679  01ADBE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25680  01ADC4  0EFD               	movlw	-3
 25681  01ADC6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25682  01ADCC  0EFE               	movlw	-2
 25683  01ADCE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25684  01ADD4  0EFF               	movlw	-1
 25685  01ADD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25686                           
 25687                           ;stkvar	_u @ sp[(-4)+0]
 25688  01ADDC  0EFF               	movlw	-1
 25689  01ADDE  9EE3               	bcf	plusw1,7,c
 25690                           
 25691                           ;stkvar	_u @ sp[(-4)+0]
 25692  01ADE0  0EFC               	movlw	-4
 25693  01ADE2  006F FF8C  F001    	movff	plusw1,btemp
 25694  01ADE8  0EFD               	movlw	-3
 25695  01ADEA  006F FF8C  F002    	movff	plusw1,btemp+1
 25696  01ADF0  0EFE               	movlw	-2
 25697  01ADF2  006F FF8C  F003    	movff	plusw1,btemp+2
 25698  01ADF8  0EFF               	movlw	-1
 25699  01ADFA  006F FF8C  F004    	movff	plusw1,btemp+3
 25700                           
 25701                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25702  01AE00  0EF8               	movlw	248
 25703  01AE02  26E1               	addwf	fsr1l,f,c
 25704  01AE04  0EFF               	movlw	255
 25705  01AE06  22E2               	addwfc	fsr1h,f,c
 25706  01AE08  0012               	return		;funcret
 25707  01AE0A                     __end_of_fabsf:
 25708                           	opt callstack 0
 25709                           
 25710 ;; *************** function _conv_raw_result *****************
 25711 ;; Defined at:
 25712 ;;		line 123 in file "daq.c"
 25713 ;; Parameters:    Size  Location     Type
 25714 ;;  chan            1  [STACK] const enum E16590
 25715 ;;  to_what         1  [STACK] const enum E16652
 25716 ;; Auto vars:     Size  Location     Type
 25717 ;;		None
 25718 ;; Return value:  Size  Location     Type
 25719 ;;                  4  [STACK] float 
 25720 ;; Registers used:
 25721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25722 ;; Tracked objects:
 25723 ;;		On entry : 0/39
 25724 ;;		On exit  : 0/0
 25725 ;;		Unchanged: 0/0
 25726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25731 ;;Total ram usage:        0 bytes
 25732 ;; Hardware stack levels used:    1
 25733 ;; Hardware stack levels required when called:   17
 25734 ;; This function calls:
 25735 ;;		___fldiv
 25736 ;;		___flmul
 25737 ;;		___flsub
 25738 ;;		___xxtofl
 25739 ;;		_get_raw_result
 25740 ;;		_nanf
 25741 ;; This function is called by:
 25742 ;;		_main
 25743 ;;		_convert_adc_data
 25744 ;;		_calc_ror_data
 25745 ;;		_check_day_time
 25746 ;;		_init_bsoc
 25747 ;;		_esr_check
 25748 ;; This function uses a reentrant model
 25749 ;;
 25750                           
 25751                           	psect	text104
 25752  0153A0                     __ptext104:
 25753                           	opt callstack 0
 25754  0153A0                     _conv_raw_result:
 25755                           	opt callstack 0
 25756                           
 25757                           ;daq.c: 123: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 124: {;daq.c: 126:  switch (to_what) {
 25758                           
 25759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25760                           ;incstack = 0
 25761 ;; hardware stack exceeded
 25762  0153A0  D24A               	goto	l10069
 25763  0153A2                     l10015:
 25764                           
 25765                           ;daq.c: 128:   if (!(0b0011110001110111 >> chan & 0x1))
 25766                           ;stkvar	_chan @ sp[(0)+-1]
 25767  0153A2  0EFF               	movlw	-1
 25768  0153A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25769  0153AA  0E77               	movlw	119
 25770  0153AC  6E09               	movwf	(btemp+8)^0,c
 25771  0153AE  0E3C               	movlw	60
 25772  0153B0  6E0A               	movwf	(btemp+9)^0,c
 25773  0153B2  2A0C               	incf	(btemp+11)^0,f,c
 25774  0153B4  D003               	goto	u9324
 25775  0153B6                     u9325:
 25776  0153B6  340A               	rlcf	(btemp+9)^0,w,c
 25777  0153B8  320A               	rrcf	(btemp+9)^0,f,c
 25778  0153BA  3209               	rrcf	(btemp+8)^0,f,c
 25779  0153BC                     u9324:
 25780  0153BC  2E0C               	decfsz	(btemp+11)^0,f,c
 25781  0153BE  D7FB               	goto	u9325
 25782  0153C0  B009               	btfsc	(btemp+8)^0,0,c
 25783  0153C2  D007               	goto	l10021
 25784                           
 25785                           ;daq.c: 129:    return nanf("");
 25786  0153C4  0EB7               	movlw	low (STR_75+126)
 25787  0153C6  6EE6               	movwf	postinc1,c
 25788  0153C8  0EFB               	movlw	high (STR_75+126)
 25789  0153CA  6EE6               	movwf	postinc1,c
 25790  0153CC  ECE8  F0DC         	call	_nanf	;wreg free
 25791  0153D0  D242               	goto	l1829
 25792  0153D2                     l10021:
 25793                           
 25794                           ;daq.c: 131:   if (0b0000000000000011 >> chan & 0x1) {
 25795                           ;stkvar	_chan @ sp[(0)+-1]
 25796  0153D2  0EFF               	movlw	-1
 25797  0153D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25798  0153DA  0E03               	movlw	3
 25799  0153DC  6E09               	movwf	(btemp+8)^0,c
 25800  0153DE  0E00               	movlw	0
 25801  0153E0  6E0A               	movwf	(btemp+9)^0,c
 25802  0153E2  2A0C               	incf	(btemp+11)^0,f,c
 25803  0153E4  D003               	goto	u9344
 25804  0153E6                     u9345:
 25805  0153E6  340A               	rlcf	(btemp+9)^0,w,c
 25806  0153E8  320A               	rrcf	(btemp+9)^0,f,c
 25807  0153EA  3209               	rrcf	(btemp+8)^0,f,c
 25808  0153EC                     u9344:
 25809  0153EC  2E0C               	decfsz	(btemp+11)^0,f,c
 25810  0153EE  D7FB               	goto	u9345
 25811  0153F0  A009               	btfss	(btemp+8)^0,0,c
 25812  0153F2  D0F3               	goto	l10035
 25813                           
 25814                           ;daq.c: 132:    if (0b0000000000000001 >> chan & 0x1) {
 25815                           ;stkvar	_chan @ sp[(0)+-1]
 25816  0153F4  0EFF               	movlw	-1
 25817  0153F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25818  0153FC  0E01               	movlw	1
 25819  0153FE  6E09               	movwf	(btemp+8)^0,c
 25820  015400  0E00               	movlw	0
 25821  015402  6E0A               	movwf	(btemp+9)^0,c
 25822  015404  2A0C               	incf	(btemp+11)^0,f,c
 25823  015406  D003               	goto	u9364
 25824  015408                     u9365:
 25825  015408  340A               	rlcf	(btemp+9)^0,w,c
 25826  01540A  320A               	rrcf	(btemp+9)^0,f,c
 25827  01540C  3209               	rrcf	(btemp+8)^0,f,c
 25828  01540E                     u9364:
 25829  01540E  2E0C               	decfsz	(btemp+11)^0,f,c
 25830  015410  D7FB               	goto	u9365
 25831  015412  A009               	btfss	(btemp+8)^0,0,c
 25832  015414  D071               	goto	l10031
 25833                           
 25834                           ;daq.c: 133:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 25835  015416  0060  F367  FFE6   	movff	_R+42,postinc1
 25836  01541C  0060  F36B  FFE6   	movff	_R+43,postinc1
 25837  015422  0060  F36F  FFE6   	movff	_R+44,postinc1
 25838  015428  0060  F373  FFE6   	movff	_R+45,postinc1
 25839  01542E  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 25840  015434  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 25841  01543A  0E00               	movlw	0
 25842  01543C  BE0A               	btfsc	(btemp+9)^0,7,c
 25843  01543E  0EFF               	movlw	255
 25844  015440  6E0B               	movwf	(btemp+10)^0,c
 25845  015442  6E0C               	movwf	(btemp+11)^0,c
 25846  015444  0060  F027  FFE6   	movff	btemp+8,postinc1
 25847  01544A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 25848  015450  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25849  015456  0060  F033  FFE6   	movff	btemp+11,postinc1
 25850  01545C  0E01               	movlw	1
 25851  01545E  6EE6               	movwf	postinc1,c
 25852  015460  ECBB  F0C4         	call	___xxtofl	;wreg free
 25853  015464  0060  F007  FFE6   	movff	btemp,postinc1
 25854  01546A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25855  015470  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25856  015476  0060  F013  FFE6   	movff	btemp+3,postinc1
 25857                           
 25858                           ;stkvar	_chan @ sp[(-8)+-1]
 25859  01547C  0EF7               	movlw	-9
 25860  01547E  50E3               	movf	plusw1,w,c
 25861  015480  6EE6               	movwf	postinc1,c
 25862  015482  EC55  F0E4         	call	_get_raw_result	;wreg free
 25863  015486  0060  F004  F00B   	movff	btemp,btemp+10
 25864  01548C  0060  F008  F00C   	movff	btemp+1,btemp+11
 25865  015492  500B               	movf	(btemp+10)^0,w,c
 25866  015494  6E05               	movwf	(btemp+4)^0,c
 25867  015496  500C               	movf	(btemp+11)^0,w,c
 25868  015498  6E06               	movwf	(btemp+5)^0,c
 25869  01549A  6A07               	clrf	(btemp+6)^0,c
 25870  01549C  6A08               	clrf	(btemp+7)^0,c
 25871  01549E  0060  F017  FFE6   	movff	btemp+4,postinc1
 25872  0154A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25873  0154AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25874  0154B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 25875  0154B6  0E00               	movlw	0
 25876  0154B8  6EE6               	movwf	postinc1,c
 25877  0154BA  ECBB  F0C4         	call	___xxtofl	;wreg free
 25878  0154BE  0060  F007  FFE6   	movff	btemp,postinc1
 25879  0154C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25880  0154CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25881  0154D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 25882  0154D6  EC46  F0DF         	call	___flsub	;wreg free
 25883  0154DA  0060  F007  FFE6   	movff	btemp,postinc1
 25884  0154E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25885  0154E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25886  0154EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 25887  0154F2  EC20  F09F         	call	___flmul	;wreg free
 25888  0154F6  D1AF               	goto	l1829
 25889  0154F8                     l10031:
 25890                           
 25891                           ;daq.c: 135:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 25892  0154F8  0060  F377  FFE6   	movff	_R+46,postinc1
 25893  0154FE  0060  F37B  FFE6   	movff	_R+47,postinc1
 25894  015504  0060  F37F  FFE6   	movff	_R+48,postinc1
 25895  01550A  0060  F383  FFE6   	movff	_R+49,postinc1
 25896  015510  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 25897  015516  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 25898  01551C  0E00               	movlw	0
 25899  01551E  BE0A               	btfsc	(btemp+9)^0,7,c
 25900  015520  0EFF               	movlw	255
 25901  015522  6E0B               	movwf	(btemp+10)^0,c
 25902  015524  6E0C               	movwf	(btemp+11)^0,c
 25903  015526  0060  F027  FFE6   	movff	btemp+8,postinc1
 25904  01552C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 25905  015532  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25906  015538  0060  F033  FFE6   	movff	btemp+11,postinc1
 25907  01553E  0E01               	movlw	1
 25908  015540  6EE6               	movwf	postinc1,c
 25909  015542  ECBB  F0C4         	call	___xxtofl	;wreg free
 25910  015546  0060  F007  FFE6   	movff	btemp,postinc1
 25911  01554C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25912  015552  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25913  015558  0060  F013  FFE6   	movff	btemp+3,postinc1
 25914                           
 25915                           ;stkvar	_chan @ sp[(-8)+-1]
 25916  01555E  0EF7               	movlw	-9
 25917  015560  50E3               	movf	plusw1,w,c
 25918  015562  6EE6               	movwf	postinc1,c
 25919  015564  EC55  F0E4         	call	_get_raw_result	;wreg free
 25920  015568  0060  F004  F00B   	movff	btemp,btemp+10
 25921  01556E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25922  015574  500B               	movf	(btemp+10)^0,w,c
 25923  015576  6E05               	movwf	(btemp+4)^0,c
 25924  015578  500C               	movf	(btemp+11)^0,w,c
 25925  01557A  6E06               	movwf	(btemp+5)^0,c
 25926  01557C  6A07               	clrf	(btemp+6)^0,c
 25927  01557E  6A08               	clrf	(btemp+7)^0,c
 25928  015580  0060  F017  FFE6   	movff	btemp+4,postinc1
 25929  015586  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25930  01558C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25931  015592  0060  F023  FFE6   	movff	btemp+7,postinc1
 25932  015598  0E00               	movlw	0
 25933  01559A  6EE6               	movwf	postinc1,c
 25934  01559C  ECBB  F0C4         	call	___xxtofl	;wreg free
 25935  0155A0  0060  F007  FFE6   	movff	btemp,postinc1
 25936  0155A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25937  0155AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25938  0155B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25939  0155B8  EC46  F0DF         	call	___flsub	;wreg free
 25940  0155BC  0060  F007  FFE6   	movff	btemp,postinc1
 25941  0155C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25942  0155C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25943  0155CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25944  0155D4  EC20  F09F         	call	___flmul	;wreg free
 25945  0155D8  D13E               	goto	l1829
 25946  0155DA                     l10035:
 25947                           
 25948                           ;daq.c: 138:    if (0b0000100000000000 >> chan & 0x1) {
 25949                           ;stkvar	_chan @ sp[(0)+-1]
 25950  0155DA  0EFF               	movlw	-1
 25951  0155DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25952  0155E2  0E00               	movlw	0
 25953  0155E4  6E09               	movwf	(btemp+8)^0,c
 25954  0155E6  0E08               	movlw	8
 25955  0155E8  6E0A               	movwf	(btemp+9)^0,c
 25956  0155EA  2A0C               	incf	(btemp+11)^0,f,c
 25957  0155EC  D003               	goto	u9384
 25958  0155EE                     u9385:
 25959  0155EE  340A               	rlcf	(btemp+9)^0,w,c
 25960  0155F0  320A               	rrcf	(btemp+9)^0,f,c
 25961  0155F2  3209               	rrcf	(btemp+8)^0,f,c
 25962  0155F4                     u9384:
 25963  0155F4  2E0C               	decfsz	(btemp+11)^0,f,c
 25964  0155F6  D7FB               	goto	u9385
 25965  0155F8  A009               	btfss	(btemp+8)^0,0,c
 25966  0155FA  D008               	goto	l10043
 25967                           
 25968                           ;daq.c: 139:     return 25.0;
 25969  0155FC  0E00               	movlw	0
 25970  0155FE  6E01               	movwf	btemp^0,c
 25971  015600  0E00               	movlw	0
 25972  015602  6E02               	movwf	(btemp+1)^0,c
 25973  015604  0EC8               	movlw	200
 25974  015606  6E03               	movwf	(btemp+2)^0,c
 25975  015608  0E41               	movlw	65
 25976  01560A  D113               	goto	L32
 25977  01560C                     l10043:
 25978                           
 25979                           ;daq.c: 141:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25980  01560C  0E00               	movlw	0
 25981  01560E  6EE6               	movwf	postinc1,c
 25982  015610  0E00               	movlw	0
 25983  015612  6EE6               	movwf	postinc1,c
 25984  015614  0E7A               	movlw	122
 25985  015616  6EE6               	movwf	postinc1,c
 25986  015618  0E44               	movlw	68
 25987  01561A  6EE6               	movwf	postinc1,c
 25988  01561C  0E61               	movlw	97
 25989  01561E  6EE6               	movwf	postinc1,c
 25990  015620  0E03               	movlw	3
 25991  015622  6EE6               	movwf	postinc1,c
 25992  015624  0E84               	movlw	132
 25993  015626  6EE6               	movwf	postinc1,c
 25994  015628  0E40               	movlw	64
 25995  01562A  6EE6               	movwf	postinc1,c
 25996                           
 25997                           ;stkvar	_chan @ sp[(-8)+-1]
 25998  01562C  0EF7               	movlw	-9
 25999  01562E  50E3               	movf	plusw1,w,c
 26000  015630  6EE6               	movwf	postinc1,c
 26001  015632  EC55  F0E4         	call	_get_raw_result	;wreg free
 26002  015636  0060  F004  F00B   	movff	btemp,btemp+10
 26003  01563C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26004  015642  500B               	movf	(btemp+10)^0,w,c
 26005  015644  6E05               	movwf	(btemp+4)^0,c
 26006  015646  500C               	movf	(btemp+11)^0,w,c
 26007  015648  6E06               	movwf	(btemp+5)^0,c
 26008  01564A  6A07               	clrf	(btemp+6)^0,c
 26009  01564C  6A08               	clrf	(btemp+7)^0,c
 26010  01564E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26011  015654  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26012  01565A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26013  015660  0060  F023  FFE6   	movff	btemp+7,postinc1
 26014  015666  0E00               	movlw	0
 26015  015668  6EE6               	movwf	postinc1,c
 26016  01566A  ECBB  F0C4         	call	___xxtofl	;wreg free
 26017  01566E  0060  F007  FFE6   	movff	btemp,postinc1
 26018  015674  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26019  01567A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26020  015680  0060  F013  FFE6   	movff	btemp+3,postinc1
 26021  015686  EC20  F09F         	call	___flmul	;wreg free
 26022  01568A  0060  F007  FFE6   	movff	btemp,postinc1
 26023  015690  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26024  015696  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26025  01569C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26026  0156A2  EC13  F0A7         	call	___fldiv	;wreg free
 26027  0156A6  D0D7               	goto	l1829
 26028  0156A8                     l10047:
 26029                           
 26030                           ;daq.c: 146:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 26031                           ;stkvar	_chan @ sp[(0)+-1]
 26032  0156A8  0EFF               	movlw	-1
 26033  0156AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26034  0156B0  0E03               	movlw	3
 26035  0156B2  6E09               	movwf	(btemp+8)^0,c
 26036  0156B4  0E00               	movlw	0
 26037  0156B6  6E0A               	movwf	(btemp+9)^0,c
 26038  0156B8  2A0C               	incf	(btemp+11)^0,f,c
 26039  0156BA  D003               	goto	u9404
 26040  0156BC                     u9405:
 26041  0156BC  340A               	rlcf	(btemp+9)^0,w,c
 26042  0156BE  320A               	rrcf	(btemp+9)^0,f,c
 26043  0156C0  3209               	rrcf	(btemp+8)^0,f,c
 26044  0156C2                     u9404:
 26045  0156C2  2E0C               	decfsz	(btemp+11)^0,f,c
 26046  0156C4  D7FB               	goto	u9405
 26047  0156C6  B009               	btfsc	(btemp+8)^0,0,c
 26048  0156C8  D011               	goto	u9430
 26049                           
 26050                           ;stkvar	_chan @ sp[(0)+-1]
 26051  0156CA  0EFF               	movlw	-1
 26052  0156CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26053  0156D2  0E00               	movlw	0
 26054  0156D4  6E09               	movwf	(btemp+8)^0,c
 26055  0156D6  0E08               	movlw	8
 26056  0156D8  6E0A               	movwf	(btemp+9)^0,c
 26057  0156DA  2A0C               	incf	(btemp+11)^0,f,c
 26058  0156DC  D003               	goto	u9424
 26059  0156DE                     u9425:
 26060  0156DE  340A               	rlcf	(btemp+9)^0,w,c
 26061  0156E0  320A               	rrcf	(btemp+9)^0,f,c
 26062  0156E2  3209               	rrcf	(btemp+8)^0,f,c
 26063  0156E4                     u9424:
 26064  0156E4  2E0C               	decfsz	(btemp+11)^0,f,c
 26065  0156E6  D7FB               	goto	u9425
 26066  0156E8  A009               	btfss	(btemp+8)^0,0,c
 26067  0156EA  D04E               	goto	l10055
 26068  0156EC                     u9430:
 26069                           
 26070                           ;daq.c: 147:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 26071  0156EC  0E00               	movlw	0
 26072  0156EE  6EE6               	movwf	postinc1,c
 26073  0156F0  0E00               	movlw	0
 26074  0156F2  6EE6               	movwf	postinc1,c
 26075  0156F4  0E7A               	movlw	122
 26076  0156F6  6EE6               	movwf	postinc1,c
 26077  0156F8  0E44               	movlw	68
 26078  0156FA  6EE6               	movwf	postinc1,c
 26079  0156FC  0E00               	movlw	0
 26080  0156FE  6EE6               	movwf	postinc1,c
 26081  015700  0E00               	movlw	0
 26082  015702  6EE6               	movwf	postinc1,c
 26083  015704  0E20               	movlw	32
 26084  015706  6EE6               	movwf	postinc1,c
 26085  015708  0E3F               	movlw	63
 26086  01570A  6EE6               	movwf	postinc1,c
 26087                           
 26088                           ;stkvar	_chan @ sp[(-8)+-1]
 26089  01570C  0EF7               	movlw	-9
 26090  01570E  50E3               	movf	plusw1,w,c
 26091  015710  6EE6               	movwf	postinc1,c
 26092  015712  EC55  F0E4         	call	_get_raw_result	;wreg free
 26093  015716  0060  F004  F00B   	movff	btemp,btemp+10
 26094  01571C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26095  015722  500B               	movf	(btemp+10)^0,w,c
 26096  015724  6E05               	movwf	(btemp+4)^0,c
 26097  015726  500C               	movf	(btemp+11)^0,w,c
 26098  015728  6E06               	movwf	(btemp+5)^0,c
 26099  01572A  6A07               	clrf	(btemp+6)^0,c
 26100  01572C  6A08               	clrf	(btemp+7)^0,c
 26101  01572E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26102  015734  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26103  01573A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26104  015740  0060  F023  FFE6   	movff	btemp+7,postinc1
 26105  015746  0E00               	movlw	0
 26106  015748  6EE6               	movwf	postinc1,c
 26107  01574A  ECBB  F0C4         	call	___xxtofl	;wreg free
 26108  01574E  0060  F007  FFE6   	movff	btemp,postinc1
 26109  015754  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26110  01575A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26111  015760  0060  F013  FFE6   	movff	btemp+3,postinc1
 26112  015766  EC20  F09F         	call	___flmul	;wreg free
 26113  01576A  0060  F007  FFE6   	movff	btemp,postinc1
 26114  015770  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26115  015776  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26116  01577C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26117  015782  EC13  F0A7         	call	___fldiv	;wreg free
 26118  015786  D067               	goto	l1829
 26119  015788                     l10055:
 26120                           
 26121                           ;daq.c: 149:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26122  015788  0E00               	movlw	0
 26123  01578A  6EE6               	movwf	postinc1,c
 26124  01578C  0E00               	movlw	0
 26125  01578E  6EE6               	movwf	postinc1,c
 26126  015790  0E7A               	movlw	122
 26127  015792  6EE6               	movwf	postinc1,c
 26128  015794  0E44               	movlw	68
 26129  015796  6EE6               	movwf	postinc1,c
 26130  015798  0E61               	movlw	97
 26131  01579A  6EE6               	movwf	postinc1,c
 26132  01579C  0E03               	movlw	3
 26133  01579E  6EE6               	movwf	postinc1,c
 26134  0157A0  0E84               	movlw	132
 26135  0157A2  6EE6               	movwf	postinc1,c
 26136  0157A4  0E40               	movlw	64
 26137  0157A6  6EE6               	movwf	postinc1,c
 26138                           
 26139                           ;stkvar	_chan @ sp[(-8)+-1]
 26140  0157A8  0EF7               	movlw	-9
 26141  0157AA  50E3               	movf	plusw1,w,c
 26142  0157AC  6EE6               	movwf	postinc1,c
 26143  0157AE  EC55  F0E4         	call	_get_raw_result	;wreg free
 26144  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 26145  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 26146  0157BE  500B               	movf	(btemp+10)^0,w,c
 26147  0157C0  6E05               	movwf	(btemp+4)^0,c
 26148  0157C2  500C               	movf	(btemp+11)^0,w,c
 26149  0157C4  6E06               	movwf	(btemp+5)^0,c
 26150  0157C6  6A07               	clrf	(btemp+6)^0,c
 26151  0157C8  6A08               	clrf	(btemp+7)^0,c
 26152  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 26153  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26154  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26155  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 26156  0157E2  0E00               	movlw	0
 26157  0157E4  6EE6               	movwf	postinc1,c
 26158  0157E6  ECBB  F0C4         	call	___xxtofl	;wreg free
 26159  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 26160  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26161  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26162  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26163  015802  EC20  F09F         	call	___flmul	;wreg free
 26164  015806  0060  F007  FFE6   	movff	btemp,postinc1
 26165  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26166  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26167  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 26168  01581E  EC13  F0A7         	call	___fldiv	;wreg free
 26169  015822  D019               	goto	l1829
 26170  015824                     l10061:
 26171                           
 26172                           ;daq.c: 152:   return 0.0;
 26173  015824  0E00               	movlw	0
 26174  015826  6E01               	movwf	btemp^0,c
 26175  015828  0E00               	movlw	0
 26176  01582A  6E02               	movwf	(btemp+1)^0,c
 26177  01582C  0E00               	movlw	0
 26178  01582E  6E03               	movwf	(btemp+2)^0,c
 26179  015830  0E00               	movlw	0
 26180  015832                     L32:
 26181  015832  6E04               	movwf	(btemp+3)^0,c
 26182  015834  D010               	goto	l1829
 26183  015836                     l10069:
 26184                           
 26185                           ;stkvar	_to_what @ sp[(0)+-2]
 26186  015836  0EFE               	movlw	-2
 26187  015838  50E3               	movf	plusw1,w,c
 26188  01583A  6E0B               	movwf	(btemp+10)^0,c
 26189  01583C  6A0C               	clrf	(btemp+11)^0,c
 26190                           
 26191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26192                           ; Switch size 1, requested type "simple"
 26193                           ; Number of cases is 1, Range of values is 0 to 0
 26194                           ; switch strategies available:
 26195                           ; Name         Instructions Cycles
 26196                           ; simple_byte            4     3 (average)
 26197                           ;	Chosen strategy is simple_byte
 26198  01583E  500C               	movf	(btemp+11)^0,w,c
 26199  015840  0A00               	xorlw	0	; case 0
 26200  015842  A4D8               	btfss	status,2,c
 26201  015844  D7EF               	goto	l10061
 26202                           
 26203                           ; Switch size 1, requested type "simple"
 26204                           ; Number of cases is 2, Range of values is 0 to 1
 26205                           ; switch strategies available:
 26206                           ; Name         Instructions Cycles
 26207                           ; simple_byte            7     4 (average)
 26208                           ;	Chosen strategy is simple_byte
 26209  015846  500B               	movf	(btemp+10)^0,w,c
 26210  015848  0A00               	xorlw	0	; case 0
 26211  01584A  B4D8               	btfsc	status,2,c
 26212  01584C  D5AA               	goto	l10015
 26213  01584E  0A01               	xorlw	1	; case 1
 26214  015850  B4D8               	btfsc	status,2,c
 26215  015852  D72A               	goto	l10047
 26216  015854  D7E7               	goto	l10061
 26217  015856                     l1829:
 26218                           
 26219                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26220  015856  52E5               	movf	postdec1,f,c
 26221  015858  52E5               	movf	postdec1,f,c
 26222  01585A  0012               	return		;funcret
 26223  01585C                     __end_of_conv_raw_result:
 26224                           	opt callstack 0
 26225                           
 26226 ;; *************** function _nanf *****************
 26227 ;; Defined at:
 26228 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 26229 ;; Parameters:    Size  Location     Type
 26230 ;;  s               2  [STACK] PTR const unsigned char 
 26231 ;;		 -> STR_112(1), STR_74(1), 
 26232 ;; Auto vars:     Size  Location     Type
 26233 ;;  u               4  [STACK] struct .
 26234 ;; Return value:  Size  Location     Type
 26235 ;;                  4  [STACK] float 
 26236 ;; Registers used:
 26237 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 26238 ;; Tracked objects:
 26239 ;;		On entry : 0/39
 26240 ;;		On exit  : 0/0
 26241 ;;		Unchanged: 0/0
 26242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26247 ;;Total ram usage:        0 bytes
 26248 ;; Hardware stack levels used:    1
 26249 ;; Hardware stack levels required when called:   15
 26250 ;; This function calls:
 26251 ;;		Nothing
 26252 ;; This function is called by:
 26253 ;;		_conv_raw_result
 26254 ;; This function uses a reentrant model
 26255 ;;
 26256                           
 26257                           	psect	text105
 26258  01B9D0                     __ptext105:
 26259                           	opt callstack 0
 26260  01B9D0                     _nanf:
 26261                           	opt callstack 0
 26262                           
 26263                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26264  01B9D0  52E6               	movf	postinc1,f,c
 26265  01B9D2  52E6               	movf	postinc1,f,c
 26266  01B9D4  52E6               	movf	postinc1,f,c
 26267  01B9D6  52E6               	movf	postinc1,f,c
 26268                           
 26269                           ;incstack = 0
 26270 ;; hardware stack exceeded
 26271  01B9D8  0EFF               	movlw	255
 26272  01B9DA  6E09               	movwf	(btemp+8)^0,c
 26273  01B9DC  0EFF               	movlw	255
 26274  01B9DE  6E0A               	movwf	(btemp+9)^0,c
 26275  01B9E0  0EFF               	movlw	255
 26276  01B9E2  6E0B               	movwf	(btemp+10)^0,c
 26277  01B9E4  0E7F               	movlw	127
 26278  01B9E6  6E0C               	movwf	(btemp+11)^0,c
 26279                           
 26280                           ;stkvar	_u @ sp[(-4)+0]
 26281  01B9E8  0EFC               	movlw	-4
 26282  01B9EA  0060  F027  FFE3   	movff	btemp+8,plusw1
 26283  01B9F0  0EFD               	movlw	-3
 26284  01B9F2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26285  01B9F8  0EFE               	movlw	-2
 26286  01B9FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26287  01BA00  0EFF               	movlw	-1
 26288  01BA02  0060  F033  FFE3   	movff	btemp+11,plusw1
 26289                           
 26290                           ;stkvar	_u @ sp[(-4)+0]
 26291  01BA08  0EFC               	movlw	-4
 26292  01BA0A  006F FF8C  F001    	movff	plusw1,btemp
 26293  01BA10  0EFD               	movlw	-3
 26294  01BA12  006F FF8C  F002    	movff	plusw1,btemp+1
 26295  01BA18  0EFE               	movlw	-2
 26296  01BA1A  006F FF8C  F003    	movff	plusw1,btemp+2
 26297  01BA20  0EFF               	movlw	-1
 26298  01BA22  006F FF8C  F004    	movff	plusw1,btemp+3
 26299                           
 26300                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26301  01BA28  0EFA               	movlw	250
 26302  01BA2A  26E1               	addwf	fsr1l,f,c
 26303  01BA2C  0EFF               	movlw	255
 26304  01BA2E  22E2               	addwfc	fsr1h,f,c
 26305  01BA30  0012               	return		;funcret
 26306  01BA32                     __end_of_nanf:
 26307                           	opt callstack 0
 26308                           
 26309 ;; *************** function _get_raw_result *****************
 26310 ;; Defined at:
 26311 ;;		line 115 in file "daq.c"
 26312 ;; Parameters:    Size  Location     Type
 26313 ;;  index           1  [STACK] const enum E16590
 26314 ;; Auto vars:     Size  Location     Type
 26315 ;;		None
 26316 ;; Return value:  Size  Location     Type
 26317 ;;                  2  [STACK] unsigned short 
 26318 ;; Registers used:
 26319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 26320 ;; Tracked objects:
 26321 ;;		On entry : 0/1
 26322 ;;		On exit  : 0/0
 26323 ;;		Unchanged: 0/0
 26324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26329 ;;Total ram usage:        0 bytes
 26330 ;; Hardware stack levels used:    1
 26331 ;; Hardware stack levels required when called:   15
 26332 ;; This function calls:
 26333 ;;		Nothing
 26334 ;; This function is called by:
 26335 ;;		_main
 26336 ;;		_conv_raw_result
 26337 ;;		_cal_current_zero
 26338 ;; This function uses a reentrant model
 26339 ;;
 26340                           
 26341                           	psect	text106
 26342  01C8AA                     __ptext106:
 26343                           	opt callstack 0
 26344  01C8AA                     _get_raw_result:
 26345                           	opt callstack 0
 26346                           
 26347                           ;daq.c: 115: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 116: {;daq.c
      +                          : 117:  return R.raw_adc[index];
 26348                           ;stkvar	_index @ sp[(0)+-1]
 26349                           
 26350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26351                           ;incstack = 0
 26352 ;; hardware stack exceeded
 26353  01C8AA  0EFF               	movlw	-1
 26354  01C8AC  50E3               	movf	plusw1,w,c
 26355  01C8AE  0D02               	mullw	2
 26356  01C8B0  50F3               	movf	243,w,c
 26357  01C8B2  0FAF               	addlw	low _R
 26358  01C8B4  6ED9               	movwf	fsr2l,c
 26359  01C8B6  6ADA               	clrf	fsr2h,c
 26360  01C8B8  006F FF78  F001    	movff	postinc2,btemp
 26361  01C8BE  006F FF74  F002    	movff	postdec2,btemp+1
 26362                           
 26363                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 26364  01C8C4  52E5               	movf	postdec1,f,c
 26365  01C8C6  0012               	return		;funcret
 26366  01C8C8                     __end_of_get_raw_result:
 26367                           	opt callstack 0
 26368                           
 26369 ;; *************** function ___xxtofl *****************
 26370 ;; Defined at:
 26371 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 26372 ;; Parameters:    Size  Location     Type
 26373 ;;  sign            1  [STACK] unsigned char 
 26374 ;;  val             4  [STACK] long 
 26375 ;; Auto vars:     Size  Location     Type
 26376 ;;  arg             4  [STACK] unsigned long 
 26377 ;;  exp             1  [STACK] unsigned char 
 26378 ;; Return value:  Size  Location     Type
 26379 ;;                  4  [STACK] unsigned char 
 26380 ;; Registers used:
 26381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26382 ;; Tracked objects:
 26383 ;;		On entry : 0/0
 26384 ;;		On exit  : 0/0
 26385 ;;		Unchanged: 0/0
 26386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26391 ;;Total ram usage:        0 bytes
 26392 ;; Hardware stack levels used:    1
 26393 ;; Hardware stack levels required when called:   15
 26394 ;; This function calls:
 26395 ;;		Nothing
 26396 ;; This function is called by:
 26397 ;;		_conv_raw_result
 26398 ;;		_init_bsoc
 26399 ;; This function uses a reentrant model
 26400 ;;
 26401                           
 26402                           	psect	text107
 26403  018976                     __ptext107:
 26404                           	opt callstack 0
 26405  018976                     ___xxtofl:
 26406                           	opt callstack 0
 26407                           
 26408                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26409  018976  0E05               	movlw	5
 26410  018978  26E1               	addwf	fsr1l,f,c
 26411  01897A  0E00               	movlw	0
 26412  01897C  22E2               	addwfc	fsr1h,f,c
 26413                           
 26414                           ;stkvar	_sign @ sp[(-5)+-1]
 26415                           
 26416                           ;incstack = 0
 26417 ;; hardware stack exceeded
 26418  01897E  0EFA               	movlw	-6
 26419  018980  50E3               	movf	plusw1,w,c
 26420  018982  B4D8               	btfsc	status,2,c
 26421  018984  D01D               	goto	l9963
 26422                           
 26423                           ;stkvar	_val @ sp[(-5)+-5]
 26424  018986  0EF9               	movlw	-7
 26425  018988  AEE3               	btfss	plusw1,7,c
 26426  01898A  D01A               	goto	l9963
 26427                           
 26428                           ;stkvar	_val @ sp[(-5)+-5]
 26429  01898C  0EF6               	movlw	-10
 26430  01898E  006F FF8C  F009    	movff	plusw1,btemp+8
 26431  018994  0EF7               	movlw	-9
 26432  018996  006F FF8C  F00A    	movff	plusw1,btemp+9
 26433  01899C  0EF8               	movlw	-8
 26434  01899E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26435  0189A4  0EF9               	movlw	-7
 26436  0189A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26437  0189AC  1E09               	comf	(btemp+8)^0,f,c
 26438  0189AE  1E0A               	comf	(btemp+9)^0,f,c
 26439  0189B0  1E0B               	comf	(btemp+10)^0,f,c
 26440  0189B2  1E0C               	comf	(btemp+11)^0,f,c
 26441  0189B4  2A09               	incf	(btemp+8)^0,f,c
 26442  0189B6  0E00               	movlw	0
 26443  0189B8  220A               	addwfc	(btemp+9)^0,f,c
 26444  0189BA  220B               	addwfc	(btemp+10)^0,f,c
 26445  0189BC  220C               	addwfc	(btemp+11)^0,f,c
 26446  0189BE  D010               	goto	L33
 26447  0189C0                     l9963:
 26448                           
 26449                           ;stkvar	_val @ sp[(-5)+-5]
 26450  0189C0  0EF6               	movlw	-10
 26451  0189C2  006F FF8C  F009    	movff	plusw1,btemp+8
 26452  0189C8  0EF7               	movlw	-9
 26453  0189CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 26454  0189D0  0EF8               	movlw	-8
 26455  0189D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 26456  0189D8  0EF9               	movlw	-7
 26457  0189DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26458  0189E0                     L33:
 26459                           
 26460                           ;stkvar	_arg @ sp[(-5)+0]
 26461  0189E0  0EFB               	movlw	-5
 26462  0189E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26463  0189E8  0EFC               	movlw	-4
 26464  0189EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26465  0189F0  0EFD               	movlw	-3
 26466  0189F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26467  0189F8  0EFE               	movlw	-2
 26468  0189FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26469                           
 26470                           ;stkvar	_val @ sp[(-5)+-5]
 26471  018A00  0EF6               	movlw	-10
 26472  018A02  50E3               	movf	plusw1,w,c
 26473  018A04  E113               	bnz	l9971
 26474  018A06  0EF7               	movlw	-9
 26475  018A08  50E3               	movf	plusw1,w,c
 26476  018A0A  E110               	bnz	l9971
 26477  018A0C  0EF8               	movlw	-8
 26478  018A0E  50E3               	movf	plusw1,w,c
 26479  018A10  E10D               	bnz	l9971
 26480  018A12  0EF9               	movlw	-7
 26481  018A14  50E3               	movf	plusw1,w,c
 26482  018A16  A4D8               	btfss	status,2,c
 26483  018A18  D009               	goto	l9971
 26484  018A1A  0E00               	movlw	0
 26485  018A1C  6E01               	movwf	btemp^0,c
 26486  018A1E  0E00               	movlw	0
 26487  018A20  6E02               	movwf	(btemp+1)^0,c
 26488  018A22  0E00               	movlw	0
 26489  018A24  6E03               	movwf	(btemp+2)^0,c
 26490  018A26  0E00               	movlw	0
 26491  018A28  6E04               	movwf	(btemp+3)^0,c
 26492  018A2A  D0A2               	goto	l3174
 26493  018A2C                     l9971:
 26494  018A2C  0E96               	movlw	150
 26495  018A2E  6E0C               	movwf	(btemp+11)^0,c
 26496                           
 26497                           ;stkvar	_exp @ sp[(-5)+4]
 26498  018A30  0EFF               	movlw	-1
 26499  018A32  0060  F033  FFE3   	movff	btemp+11,plusw1
 26500  018A38  D00B               	goto	l9975
 26501  018A3A                     l9973:
 26502                           
 26503                           ;stkvar	_exp @ sp[(-5)+4]
 26504  018A3A  0EFF               	movlw	-1
 26505  018A3C  2AE3               	incf	plusw1,f,c
 26506                           
 26507                           ;stkvar	_arg @ sp[(-5)+0]
 26508  018A3E  90D8               	bcf	status,0,c
 26509  018A40  0EFE               	movlw	-2
 26510  018A42  32E3               	rrcf	plusw1,f,c
 26511  018A44  0EFD               	movlw	-3
 26512  018A46  32E3               	rrcf	plusw1,f,c
 26513  018A48  0EFC               	movlw	-4
 26514  018A4A  32E3               	rrcf	plusw1,f,c
 26515  018A4C  0EFB               	movlw	-5
 26516  018A4E  32E3               	rrcf	plusw1,f,c
 26517  018A50                     l9975:
 26518                           
 26519                           ;stkvar	_arg @ sp[(-5)+0]
 26520  018A50  50E1               	movf	fsr1l,w,c
 26521  018A52  0FFB               	addlw	-5
 26522  018A54  6ED9               	movwf	fsr2l,c
 26523  018A56  50E2               	movf	fsr1h,w,c
 26524  018A58  6EDA               	movwf	fsr2h,c
 26525  018A5A  0EFF               	movlw	255
 26526  018A5C  22DA               	addwfc	fsr2h,f,c
 26527  018A5E  52DE               	movf	postinc2,f,c
 26528  018A60  52DE               	movf	postinc2,f,c
 26529  018A62  52DE               	movf	postinc2,f,c
 26530  018A64  0EFE               	movlw	254
 26531  018A66  14DD               	andwf	postdec2,w,c
 26532  018A68  B4D8               	btfsc	status,2,c
 26533  018A6A  D018               	goto	l9983
 26534  018A6C  D7E6               	goto	l9973
 26535  018A6E                     l9977:
 26536                           
 26537                           ;stkvar	_exp @ sp[(-5)+4]
 26538  018A6E  0EFF               	movlw	-1
 26539  018A70  2AE3               	incf	plusw1,f,c
 26540                           
 26541                           ;stkvar	_arg @ sp[(-5)+0]
 26542  018A72  50E1               	movf	fsr1l,w,c
 26543  018A74  0FFB               	addlw	-5
 26544  018A76  6ED9               	movwf	fsr2l,c
 26545  018A78  50E2               	movf	fsr1h,w,c
 26546  018A7A  6EDA               	movwf	fsr2h,c
 26547  018A7C  0EFF               	movlw	255
 26548  018A7E  22DA               	addwfc	fsr2h,f,c
 26549  018A80  2ADE               	incf	postinc2,f,c
 26550  018A82  0E00               	movlw	0
 26551  018A84  22DE               	addwfc	postinc2,f,c
 26552  018A86  22DE               	addwfc	postinc2,f,c
 26553  018A88  22DE               	addwfc	postinc2,f,c
 26554                           
 26555                           ;stkvar	_arg @ sp[(-5)+0]
 26556  018A8A  90D8               	bcf	status,0,c
 26557  018A8C  0EFE               	movlw	-2
 26558  018A8E  32E3               	rrcf	plusw1,f,c
 26559  018A90  0EFD               	movlw	-3
 26560  018A92  32E3               	rrcf	plusw1,f,c
 26561  018A94  0EFC               	movlw	-4
 26562  018A96  32E3               	rrcf	plusw1,f,c
 26563  018A98  0EFB               	movlw	-5
 26564  018A9A  32E3               	rrcf	plusw1,f,c
 26565  018A9C                     l9983:
 26566                           
 26567                           ;stkvar	_arg @ sp[(-5)+0]
 26568  018A9C  50E1               	movf	fsr1l,w,c
 26569  018A9E  0FFB               	addlw	-5
 26570  018AA0  6ED9               	movwf	fsr2l,c
 26571  018AA2  50E2               	movf	fsr1h,w,c
 26572  018AA4  6EDA               	movwf	fsr2h,c
 26573  018AA6  0EFF               	movlw	255
 26574  018AA8  22DA               	addwfc	fsr2h,f,c
 26575  018AAA  52DE               	movf	postinc2,f,c
 26576  018AAC  52DE               	movf	postinc2,f,c
 26577  018AAE  52DE               	movf	postinc2,f,c
 26578  018AB0  0EFF               	movlw	255
 26579  018AB2  14DD               	andwf	postdec2,w,c
 26580  018AB4  B4D8               	btfsc	status,2,c
 26581  018AB6  D00C               	goto	l9987
 26582  018AB8  D7DA               	goto	l9977
 26583  018ABA                     l9985:
 26584                           
 26585                           ;stkvar	_exp @ sp[(-5)+4]
 26586  018ABA  0EFF               	movlw	-1
 26587  018ABC  06E3               	decf	plusw1,f,c
 26588                           
 26589                           ;stkvar	_arg @ sp[(-5)+0]
 26590  018ABE  90D8               	bcf	status,0,c
 26591  018AC0  0EFB               	movlw	-5
 26592  018AC2  36E3               	rlcf	plusw1,f,c
 26593  018AC4  0EFC               	movlw	-4
 26594  018AC6  36E3               	rlcf	plusw1,f,c
 26595  018AC8  0EFD               	movlw	-3
 26596  018ACA  36E3               	rlcf	plusw1,f,c
 26597  018ACC  0EFE               	movlw	-2
 26598  018ACE  36E3               	rlcf	plusw1,f,c
 26599  018AD0                     l9987:
 26600                           
 26601                           ;stkvar	_arg @ sp[(-5)+0]
 26602  018AD0  0EFD               	movlw	-3
 26603  018AD2  BEE3               	btfsc	plusw1,7,c
 26604  018AD4  D007               	goto	u9280
 26605                           
 26606                           ;stkvar	_exp @ sp[(-5)+4]
 26607  018AD6  0EFF               	movlw	-1
 26608  018AD8  006F FF8C  F001    	movff	plusw1,btemp
 26609  018ADE  0E02               	movlw	2
 26610  018AE0  6001               	cpfslt	btemp^0,c
 26611  018AE2  D7EB               	goto	l9985
 26612  018AE4                     u9280:
 26613                           
 26614                           ;stkvar	_exp @ sp[(-5)+4]
 26615  018AE4  0EFF               	movlw	-1
 26616  018AE6  B0E3               	btfsc	plusw1,0,c
 26617  018AE8  D002               	goto	l9995
 26618                           
 26619                           ;stkvar	_arg @ sp[(-5)+0]
 26620  018AEA  0EFD               	movlw	-3
 26621  018AEC  9EE3               	bcf	plusw1,7,c
 26622  018AEE                     l9995:
 26623                           
 26624                           ;stkvar	_exp @ sp[(-5)+4]
 26625  018AEE  50E1               	movf	fsr1l,w,c
 26626  018AF0  0FFF               	addlw	-1
 26627  018AF2  6ED9               	movwf	fsr2l,c
 26628  018AF4  50E2               	movf	fsr1h,w,c
 26629  018AF6  6EDA               	movwf	fsr2h,c
 26630  018AF8  0EFF               	movlw	255
 26631  018AFA  22DA               	addwfc	fsr2h,f,c
 26632  018AFC  90D8               	bcf	status,0,c
 26633  018AFE  32DF               	rrcf	indf2,f,c
 26634                           
 26635                           ;stkvar	_exp @ sp[(-5)+4]
 26636  018B00  0EFF               	movlw	-1
 26637  018B02  006F FF8C  F00C    	movff	plusw1,btemp+11
 26638  018B08  0060  F030  F005   	movff	btemp+11,btemp+4
 26639  018B0E  6A06               	clrf	(btemp+5)^0,c
 26640  018B10  6A07               	clrf	(btemp+6)^0,c
 26641  018B12  6A08               	clrf	(btemp+7)^0,c
 26642  018B14  0060  F014  F008   	movff	btemp+4,btemp+7
 26643  018B1A  6A07               	clrf	(btemp+6)^0,c
 26644  018B1C  6A06               	clrf	(btemp+5)^0,c
 26645  018B1E  6A05               	clrf	(btemp+4)^0,c
 26646                           
 26647                           ;stkvar	_arg @ sp[(-5)+0]
 26648  018B20  50E1               	movf	fsr1l,w,c
 26649  018B22  0FFB               	addlw	-5
 26650  018B24  6ED9               	movwf	fsr2l,c
 26651  018B26  50E2               	movf	fsr1h,w,c
 26652  018B28  6EDA               	movwf	fsr2h,c
 26653  018B2A  0EFF               	movlw	255
 26654  018B2C  22DA               	addwfc	fsr2h,f,c
 26655  018B2E  5005               	movf	(btemp+4)^0,w,c
 26656  018B30  12DE               	iorwf	postinc2,f,c
 26657  018B32  5006               	movf	(btemp+5)^0,w,c
 26658  018B34  12DE               	iorwf	postinc2,f,c
 26659  018B36  5007               	movf	(btemp+6)^0,w,c
 26660  018B38  12DE               	iorwf	postinc2,f,c
 26661  018B3A  5008               	movf	(btemp+7)^0,w,c
 26662  018B3C  12DE               	iorwf	postinc2,f,c
 26663                           
 26664                           ;stkvar	_sign @ sp[(-5)+-1]
 26665  018B3E  0EFA               	movlw	-6
 26666  018B40  50E3               	movf	plusw1,w,c
 26667  018B42  B4D8               	btfsc	status,2,c
 26668  018B44  D005               	goto	l10005
 26669                           
 26670                           ;stkvar	_val @ sp[(-5)+-5]
 26671  018B46  0EF9               	movlw	-7
 26672  018B48  AEE3               	btfss	plusw1,7,c
 26673  018B4A  D002               	goto	l10005
 26674                           
 26675                           ;stkvar	_arg @ sp[(-5)+0]
 26676  018B4C  0EFE               	movlw	-2
 26677  018B4E  8EE3               	bsf	plusw1,7,c
 26678  018B50                     l10005:
 26679                           
 26680                           ;stkvar	_arg @ sp[(-5)+0]
 26681  018B50  0EFB               	movlw	-5
 26682  018B52  006F FF8C  F001    	movff	plusw1,btemp
 26683  018B58  0EFC               	movlw	-4
 26684  018B5A  006F FF8C  F002    	movff	plusw1,btemp+1
 26685  018B60  0EFD               	movlw	-3
 26686  018B62  006F FF8C  F003    	movff	plusw1,btemp+2
 26687  018B68  0EFE               	movlw	-2
 26688  018B6A  006F FF8C  F004    	movff	plusw1,btemp+3
 26689  018B70                     l3174:
 26690                           
 26691                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 26692  018B70  0EF6               	movlw	246
 26693  018B72  26E1               	addwf	fsr1l,f,c
 26694  018B74  0EFF               	movlw	255
 26695  018B76  22E2               	addwfc	fsr1h,f,c
 26696  018B78  0012               	return		;funcret
 26697  018B7A                     __end_of___xxtofl:
 26698                           	opt callstack 0
 26699                           
 26700 ;; *************** function ___fldiv *****************
 26701 ;; Defined at:
 26702 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 26703 ;; Parameters:    Size  Location     Type
 26704 ;;  b               4  [STACK] unsigned char 
 26705 ;;  a               4  [STACK] unsigned char 
 26706 ;; Auto vars:     Size  Location     Type
 26707 ;;  grs             4  [STACK] unsigned long 
 26708 ;;  rem             4  [STACK] unsigned long 
 26709 ;;  new_exp         2  [STACK] short 
 26710 ;;  aexp            1  [STACK] unsigned char 
 26711 ;;  bexp            1  [STACK] unsigned char 
 26712 ;;  sign            1  [STACK] unsigned char 
 26713 ;; Return value:  Size  Location     Type
 26714 ;;                  4  [STACK] unsigned char 
 26715 ;; Registers used:
 26716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 26717 ;; Tracked objects:
 26718 ;;		On entry : 0/0
 26719 ;;		On exit  : 0/0
 26720 ;;		Unchanged: 0/0
 26721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26726 ;;Total ram usage:        0 bytes
 26727 ;; Hardware stack levels used:    1
 26728 ;; Hardware stack levels required when called:   15
 26729 ;; This function calls:
 26730 ;;		Nothing
 26731 ;; This function is called by:
 26732 ;;		_conv_raw_result
 26733 ;;		_convert_dac_raw
 26734 ;;		_calc_bsoc
 26735 ;;		_init_bsoc
 26736 ;;		_esr_check
 26737 ;;		_efgtoa
 26738 ;; This function uses a reentrant model
 26739 ;;
 26740                           
 26741                           	psect	text108
 26742  014E26                     __ptext108:
 26743                           	opt callstack 0
 26744  014E26                     ___fldiv:
 26745                           	opt callstack 0
 26746                           
 26747                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26748  014E26  0E0D               	movlw	13
 26749  014E28  26E1               	addwf	fsr1l,f,c
 26750  014E2A  0E00               	movlw	0
 26751  014E2C  22E2               	addwfc	fsr1h,f,c
 26752                           
 26753                           ;stkvar	_b @ sp[(-13)+-4]
 26754                           
 26755                           ;incstack = 0
 26756 ;; hardware stack exceeded
 26757  014E2E  0EF2               	movlw	242
 26758  014E30  24E1               	addwf	fsr1l,w,c
 26759  014E32  6ED9               	movwf	fsr2l,c
 26760  014E34  0EFF               	movlw	255
 26761  014E36  20E2               	addwfc	fsr1h,w,c
 26762  014E38  6EDA               	movwf	fsr2h,c
 26763  014E3A  50DF               	movf	indf2,w,c
 26764  014E3C  6E0C               	movwf	(btemp+11)^0,c
 26765  014E3E  0E80               	movlw	128
 26766  014E40  160C               	andwf	(btemp+11)^0,f,c
 26767                           
 26768                           ;stkvar	_sign @ sp[(-13)+12]
 26769  014E42  0EFF               	movlw	-1
 26770  014E44  0060  F033  FFE3   	movff	btemp+11,plusw1
 26771                           
 26772                           ;stkvar	_b @ sp[(-13)+-4]
 26773  014E4A  0EF2               	movlw	242
 26774  014E4C  24E1               	addwf	fsr1l,w,c
 26775  014E4E  6ED9               	movwf	fsr2l,c
 26776  014E50  0EFF               	movlw	255
 26777  014E52  20E2               	addwfc	fsr1h,w,c
 26778  014E54  6EDA               	movwf	fsr2h,c
 26779  014E56  50DF               	movf	indf2,w,c
 26780  014E58  6E0C               	movwf	(btemp+11)^0,c
 26781  014E5A  90D8               	bcf	status,0,c
 26782  014E5C  340C               	rlcf	(btemp+11)^0,w,c
 26783  014E5E  6E0B               	movwf	(btemp+10)^0,c
 26784                           
 26785                           ;stkvar	_bexp @ sp[(-13)+11]
 26786  014E60  0EFE               	movlw	-2
 26787  014E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26788                           
 26789                           ;stkvar	_b @ sp[(-13)+-4]
 26790  014E68  0EF1               	movlw	241
 26791  014E6A  24E1               	addwf	fsr1l,w,c
 26792  014E6C  6ED9               	movwf	fsr2l,c
 26793  014E6E  0EFF               	movlw	255
 26794  014E70  20E2               	addwfc	fsr1h,w,c
 26795  014E72  6EDA               	movwf	fsr2h,c
 26796  014E74  AEDF               	btfss	indf2,7,c
 26797  014E76  D002               	goto	l8535
 26798                           
 26799                           ;stkvar	_bexp @ sp[(-13)+11]
 26800  014E78  0EFE               	movlw	-2
 26801  014E7A  80E3               	bsf	plusw1,0,c
 26802  014E7C                     l8535:
 26803                           
 26804                           ;stkvar	_bexp @ sp[(-13)+11]
 26805  014E7C  0EFE               	movlw	-2
 26806  014E7E  50E3               	movf	plusw1,w,c
 26807  014E80  B4D8               	btfsc	status,2,c
 26808  014E82  D027               	goto	l8545
 26809                           
 26810                           ;stkvar	_bexp @ sp[(-13)+11]
 26811  014E84  0EFE               	movlw	-2
 26812  014E86  28E3               	incf	plusw1,w,c
 26813  014E88  A4D8               	btfss	status,2,c
 26814  014E8A  D018               	goto	l8541
 26815  014E8C  0E00               	movlw	0
 26816  014E8E  6E09               	movwf	(btemp+8)^0,c
 26817  014E90  0E00               	movlw	0
 26818  014E92  6E0A               	movwf	(btemp+9)^0,c
 26819  014E94  0E00               	movlw	0
 26820  014E96  6E0B               	movwf	(btemp+10)^0,c
 26821  014E98  0E00               	movlw	0
 26822  014E9A  6E0C               	movwf	(btemp+11)^0,c
 26823                           
 26824                           ;stkvar	_b @ sp[(-13)+-4]
 26825  014E9C  0EEF               	movlw	-17
 26826  014E9E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26827  014EA4  0EF0               	movlw	-16
 26828  014EA6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26829  014EAC  0EF1               	movlw	-15
 26830  014EAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26831  014EB4  0EF2               	movlw	-14
 26832  014EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26833  014EBC                     l8541:
 26834                           
 26835                           ;stkvar	_b @ sp[(-13)+-4]
 26836  014EBC  0EF1               	movlw	-15
 26837  014EBE  8EE3               	bsf	plusw1,7,c
 26838                           
 26839                           ;stkvar	_b @ sp[(-13)+-4]
 26840  014EC0  0EF2               	movlw	242
 26841  014EC2  24E1               	addwf	fsr1l,w,c
 26842  014EC4  6ED9               	movwf	fsr2l,c
 26843  014EC6  0EFF               	movlw	255
 26844  014EC8  20E2               	addwfc	fsr1h,w,c
 26845  014ECA  6EDA               	movwf	fsr2h,c
 26846  014ECC  0E00               	movlw	0
 26847  014ECE  6EDF               	movwf	indf2,c
 26848  014ED0  D018               	goto	l8547
 26849  014ED2                     l8545:
 26850  014ED2  0E00               	movlw	0
 26851  014ED4  6E09               	movwf	(btemp+8)^0,c
 26852  014ED6  0E00               	movlw	0
 26853  014ED8  6E0A               	movwf	(btemp+9)^0,c
 26854  014EDA  0E00               	movlw	0
 26855  014EDC  6E0B               	movwf	(btemp+10)^0,c
 26856  014EDE  0E00               	movlw	0
 26857  014EE0  6E0C               	movwf	(btemp+11)^0,c
 26858                           
 26859                           ;stkvar	_b @ sp[(-13)+-4]
 26860  014EE2  0EEF               	movlw	-17
 26861  014EE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 26862  014EEA  0EF0               	movlw	-16
 26863  014EEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26864  014EF2  0EF1               	movlw	-15
 26865  014EF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26866  014EFA  0EF2               	movlw	-14
 26867  014EFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26868  014F02                     l8547:
 26869                           
 26870                           ;stkvar	_a @ sp[(-13)+-8]
 26871  014F02  0EEE               	movlw	238
 26872  014F04  24E1               	addwf	fsr1l,w,c
 26873  014F06  6ED9               	movwf	fsr2l,c
 26874  014F08  0EFF               	movlw	255
 26875  014F0A  20E2               	addwfc	fsr1h,w,c
 26876  014F0C  6EDA               	movwf	fsr2h,c
 26877  014F0E  50DF               	movf	indf2,w,c
 26878  014F10  6E0C               	movwf	(btemp+11)^0,c
 26879  014F12  0E80               	movlw	128
 26880  014F14  160C               	andwf	(btemp+11)^0,f,c
 26881                           
 26882                           ;stkvar	_sign @ sp[(-13)+12]
 26883  014F16  50E1               	movf	fsr1l,w,c
 26884  014F18  0FFF               	addlw	-1
 26885  014F1A  6ED9               	movwf	fsr2l,c
 26886  014F1C  50E2               	movf	fsr1h,w,c
 26887  014F1E  6EDA               	movwf	fsr2h,c
 26888  014F20  0EFF               	movlw	255
 26889  014F22  22DA               	addwfc	fsr2h,f,c
 26890  014F24  500C               	movf	(btemp+11)^0,w,c
 26891  014F26  1ADF               	xorwf	indf2,f,c
 26892                           
 26893                           ;stkvar	_a @ sp[(-13)+-8]
 26894  014F28  0EEE               	movlw	238
 26895  014F2A  24E1               	addwf	fsr1l,w,c
 26896  014F2C  6ED9               	movwf	fsr2l,c
 26897  014F2E  0EFF               	movlw	255
 26898  014F30  20E2               	addwfc	fsr1h,w,c
 26899  014F32  6EDA               	movwf	fsr2h,c
 26900  014F34  50DF               	movf	indf2,w,c
 26901  014F36  6E0C               	movwf	(btemp+11)^0,c
 26902  014F38  90D8               	bcf	status,0,c
 26903  014F3A  340C               	rlcf	(btemp+11)^0,w,c
 26904  014F3C  6E0B               	movwf	(btemp+10)^0,c
 26905                           
 26906                           ;stkvar	_aexp @ sp[(-13)+10]
 26907  014F3E  0EFD               	movlw	-3
 26908  014F40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26909                           
 26910                           ;stkvar	_a @ sp[(-13)+-8]
 26911  014F46  0EED               	movlw	237
 26912  014F48  24E1               	addwf	fsr1l,w,c
 26913  014F4A  6ED9               	movwf	fsr2l,c
 26914  014F4C  0EFF               	movlw	255
 26915  014F4E  20E2               	addwfc	fsr1h,w,c
 26916  014F50  6EDA               	movwf	fsr2h,c
 26917  014F52  AEDF               	btfss	indf2,7,c
 26918  014F54  D002               	goto	l8555
 26919                           
 26920                           ;stkvar	_aexp @ sp[(-13)+10]
 26921  014F56  0EFD               	movlw	-3
 26922  014F58  80E3               	bsf	plusw1,0,c
 26923  014F5A                     l8555:
 26924                           
 26925                           ;stkvar	_aexp @ sp[(-13)+10]
 26926  014F5A  0EFD               	movlw	-3
 26927  014F5C  50E3               	movf	plusw1,w,c
 26928  014F5E  B4D8               	btfsc	status,2,c
 26929  014F60  D027               	goto	l8565
 26930                           
 26931                           ;stkvar	_aexp @ sp[(-13)+10]
 26932  014F62  0EFD               	movlw	-3
 26933  014F64  28E3               	incf	plusw1,w,c
 26934  014F66  A4D8               	btfss	status,2,c
 26935  014F68  D018               	goto	l8561
 26936  014F6A  0E00               	movlw	0
 26937  014F6C  6E09               	movwf	(btemp+8)^0,c
 26938  014F6E  0E00               	movlw	0
 26939  014F70  6E0A               	movwf	(btemp+9)^0,c
 26940  014F72  0E00               	movlw	0
 26941  014F74  6E0B               	movwf	(btemp+10)^0,c
 26942  014F76  0E00               	movlw	0
 26943  014F78  6E0C               	movwf	(btemp+11)^0,c
 26944                           
 26945                           ;stkvar	_a @ sp[(-13)+-8]
 26946  014F7A  0EEB               	movlw	-21
 26947  014F7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26948  014F82  0EEC               	movlw	-20
 26949  014F84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26950  014F8A  0EED               	movlw	-19
 26951  014F8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26952  014F92  0EEE               	movlw	-18
 26953  014F94  0060  F033  FFE3   	movff	btemp+11,plusw1
 26954  014F9A                     l8561:
 26955                           
 26956                           ;stkvar	_a @ sp[(-13)+-8]
 26957  014F9A  0EED               	movlw	-19
 26958  014F9C  8EE3               	bsf	plusw1,7,c
 26959                           
 26960                           ;stkvar	_a @ sp[(-13)+-8]
 26961  014F9E  0EEE               	movlw	238
 26962  014FA0  24E1               	addwf	fsr1l,w,c
 26963  014FA2  6ED9               	movwf	fsr2l,c
 26964  014FA4  0EFF               	movlw	255
 26965  014FA6  20E2               	addwfc	fsr1h,w,c
 26966  014FA8  6EDA               	movwf	fsr2h,c
 26967  014FAA  0E00               	movlw	0
 26968  014FAC  6EDF               	movwf	indf2,c
 26969  014FAE  D018               	goto	l8567
 26970  014FB0                     l8565:
 26971  014FB0  0E00               	movlw	0
 26972  014FB2  6E09               	movwf	(btemp+8)^0,c
 26973  014FB4  0E00               	movlw	0
 26974  014FB6  6E0A               	movwf	(btemp+9)^0,c
 26975  014FB8  0E00               	movlw	0
 26976  014FBA  6E0B               	movwf	(btemp+10)^0,c
 26977  014FBC  0E00               	movlw	0
 26978  014FBE  6E0C               	movwf	(btemp+11)^0,c
 26979                           
 26980                           ;stkvar	_a @ sp[(-13)+-8]
 26981  014FC0  0EEB               	movlw	-21
 26982  014FC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26983  014FC8  0EEC               	movlw	-20
 26984  014FCA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26985  014FD0  0EED               	movlw	-19
 26986  014FD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26987  014FD8  0EEE               	movlw	-18
 26988  014FDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26989  014FE0                     l8567:
 26990                           
 26991                           ;stkvar	_a @ sp[(-13)+-8]
 26992  014FE0  0EEB               	movlw	-21
 26993  014FE2  50E3               	movf	plusw1,w,c
 26994  014FE4  E139               	bnz	l8579
 26995  014FE6  0EEC               	movlw	-20
 26996  014FE8  50E3               	movf	plusw1,w,c
 26997  014FEA  E136               	bnz	l8579
 26998  014FEC  0EED               	movlw	-19
 26999  014FEE  50E3               	movf	plusw1,w,c
 27000  014FF0  E133               	bnz	l8579
 27001  014FF2  0EEE               	movlw	-18
 27002  014FF4  50E3               	movf	plusw1,w,c
 27003  014FF6  A4D8               	btfss	status,2,c
 27004  014FF8  D02F               	goto	l8579
 27005                           
 27006                           ;stkvar	_b @ sp[(-13)+-4]
 27007  014FFA  0EEF               	movlw	-17
 27008  014FFC  6AE3               	clrf	plusw1,c
 27009  014FFE  0EF0               	movlw	-16
 27010  015000  6AE3               	clrf	plusw1,c
 27011  015002  0EF1               	movlw	-15
 27012  015004  6AE3               	clrf	plusw1,c
 27013  015006  0EF2               	movlw	-14
 27014  015008  6AE3               	clrf	plusw1,c
 27015                           
 27016                           ;stkvar	_b @ sp[(-13)+-4]
 27017  01500A  0EF1               	movlw	241
 27018  01500C  24E1               	addwf	fsr1l,w,c
 27019  01500E  6ED9               	movwf	fsr2l,c
 27020  015010  0EFF               	movlw	255
 27021  015012  20E2               	addwfc	fsr1h,w,c
 27022  015014  6EDA               	movwf	fsr2h,c
 27023  015016  0E80               	movlw	128
 27024  015018  12DE               	iorwf	postinc2,f,c
 27025  01501A  0E7F               	movlw	127
 27026  01501C  12DD               	iorwf	postdec2,f,c
 27027  01501E                     l8573:
 27028                           
 27029                           ;stkvar	_sign @ sp[(-13)+12]
 27030  01501E  0EFF               	movlw	-1
 27031  015020  006F FF8C  F00C    	movff	plusw1,btemp+11
 27032                           
 27033                           ;stkvar	_b @ sp[(-13)+-4]
 27034  015026  0EF2               	movlw	242
 27035  015028  24E1               	addwf	fsr1l,w,c
 27036  01502A  6ED9               	movwf	fsr2l,c
 27037  01502C  0EFF               	movlw	255
 27038  01502E  20E2               	addwfc	fsr1h,w,c
 27039  015030  6EDA               	movwf	fsr2h,c
 27040  015032  500C               	movf	(btemp+11)^0,w,c
 27041  015034  12DF               	iorwf	indf2,f,c
 27042                           
 27043                           ;stkvar	_b @ sp[(-13)+-4]
 27044  015036  0EEF               	movlw	-17
 27045  015038  006F FF8C  F001    	movff	plusw1,btemp
 27046  01503E  0EF0               	movlw	-16
 27047  015040  006F FF8C  F002    	movff	plusw1,btemp+1
 27048  015046  0EF1               	movlw	-15
 27049  015048  006F FF8C  F003    	movff	plusw1,btemp+2
 27050  01504E  0EF2               	movlw	-14
 27051  015050  006F FF8C  F004    	movff	plusw1,btemp+3
 27052  015056  D19F               	goto	l3098
 27053  015058                     l8579:
 27054                           
 27055                           ;stkvar	_bexp @ sp[(-13)+11]
 27056  015058  0EFE               	movlw	-2
 27057  01505A  50E3               	movf	plusw1,w,c
 27058  01505C  A4D8               	btfss	status,2,c
 27059  01505E  D009               	goto	l8587
 27060  015060  0E00               	movlw	0
 27061  015062  6E01               	movwf	btemp^0,c
 27062  015064  0E00               	movlw	0
 27063  015066  6E02               	movwf	(btemp+1)^0,c
 27064  015068  0E00               	movlw	0
 27065  01506A  6E03               	movwf	(btemp+2)^0,c
 27066  01506C  0E00               	movlw	0
 27067  01506E  6E04               	movwf	(btemp+3)^0,c
 27068  015070  D192               	goto	l3098
 27069  015072                     l8587:
 27070                           
 27071                           ;stkvar	_bexp @ sp[(-13)+11]
 27072  015072  0EFE               	movlw	-2
 27073  015074  50E3               	movf	plusw1,w,c
 27074  015076  6E0B               	movwf	(btemp+10)^0,c
 27075  015078  6A0C               	clrf	(btemp+11)^0,c
 27076                           
 27077                           ;stkvar	_aexp @ sp[(-13)+10]
 27078  01507A  0EFD               	movlw	-3
 27079  01507C  50E3               	movf	plusw1,w,c
 27080  01507E  5E0B               	subwf	(btemp+10)^0,f,c
 27081  015080  0E00               	movlw	0
 27082  015082  5A0C               	subwfb	(btemp+11)^0,f,c
 27083  015084  0E7F               	movlw	127
 27084  015086  260B               	addwf	(btemp+10)^0,f,c
 27085  015088  0E00               	movlw	0
 27086  01508A  220C               	addwfc	(btemp+11)^0,f,c
 27087                           
 27088                           ;stkvar	_new_exp @ sp[(-13)+8]
 27089  01508C  0EFB               	movlw	-5
 27090  01508E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27091  015094  0EFC               	movlw	-4
 27092  015096  0060  F033  FFE3   	movff	btemp+11,plusw1
 27093                           
 27094                           ;stkvar	_b @ sp[(-13)+-4]
 27095  01509C  0EEF               	movlw	-17
 27096  01509E  006F FF8C  F009    	movff	plusw1,btemp+8
 27097  0150A4  0EF0               	movlw	-16
 27098  0150A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 27099  0150AC  0EF1               	movlw	-15
 27100  0150AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27101  0150B4  0EF2               	movlw	-14
 27102  0150B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27103                           
 27104                           ;stkvar	_rem @ sp[(-13)+4]
 27105  0150BC  0EF7               	movlw	-9
 27106  0150BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27107  0150C4  0EF8               	movlw	-8
 27108  0150C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27109  0150CC  0EF9               	movlw	-7
 27110  0150CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27111  0150D4  0EFA               	movlw	-6
 27112  0150D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27113                           
 27114                           ;stkvar	_b @ sp[(-13)+-4]
 27115  0150DC  0EEF               	movlw	-17
 27116  0150DE  6AE3               	clrf	plusw1,c
 27117  0150E0  0EF0               	movlw	-16
 27118  0150E2  6AE3               	clrf	plusw1,c
 27119  0150E4  0EF1               	movlw	-15
 27120  0150E6  6AE3               	clrf	plusw1,c
 27121  0150E8  0EF2               	movlw	-14
 27122  0150EA  6AE3               	clrf	plusw1,c
 27123                           
 27124                           ;stkvar	_grs @ sp[(-13)+0]
 27125  0150EC  0EF3               	movlw	-13
 27126  0150EE  6AE3               	clrf	plusw1,c
 27127  0150F0  0EF4               	movlw	-12
 27128  0150F2  6AE3               	clrf	plusw1,c
 27129  0150F4  0EF5               	movlw	-11
 27130  0150F6  6AE3               	clrf	plusw1,c
 27131  0150F8  0EF6               	movlw	-10
 27132  0150FA  6AE3               	clrf	plusw1,c
 27133                           
 27134                           ;stkvar	_aexp @ sp[(-13)+10]
 27135  0150FC  0EFD               	movlw	-3
 27136  0150FE  6AE3               	clrf	plusw1,c
 27137  015100  D050               	goto	l8615
 27138  015102                     l8597:
 27139                           
 27140                           ;stkvar	_aexp @ sp[(-13)+10]
 27141  015102  0EFD               	movlw	-3
 27142  015104  50E3               	movf	plusw1,w,c
 27143  015106  B4D8               	btfsc	status,2,c
 27144  015108  D020               	goto	l8607
 27145                           
 27146                           ;stkvar	_rem @ sp[(-13)+4]
 27147  01510A  90D8               	bcf	status,0,c
 27148  01510C  0EF7               	movlw	-9
 27149  01510E  36E3               	rlcf	plusw1,f,c
 27150  015110  0EF8               	movlw	-8
 27151  015112  36E3               	rlcf	plusw1,f,c
 27152  015114  0EF9               	movlw	-7
 27153  015116  36E3               	rlcf	plusw1,f,c
 27154  015118  0EFA               	movlw	-6
 27155  01511A  36E3               	rlcf	plusw1,f,c
 27156                           
 27157                           ;stkvar	_b @ sp[(-13)+-4]
 27158  01511C  90D8               	bcf	status,0,c
 27159  01511E  0EEF               	movlw	-17
 27160  015120  36E3               	rlcf	plusw1,f,c
 27161  015122  0EF0               	movlw	-16
 27162  015124  36E3               	rlcf	plusw1,f,c
 27163  015126  0EF1               	movlw	-15
 27164  015128  36E3               	rlcf	plusw1,f,c
 27165  01512A  0EF2               	movlw	-14
 27166  01512C  36E3               	rlcf	plusw1,f,c
 27167                           
 27168                           ;stkvar	_grs @ sp[(-13)+0]
 27169  01512E  0EF6               	movlw	-10
 27170  015130  AEE3               	btfss	plusw1,7,c
 27171  015132  D002               	goto	l8605
 27172                           
 27173                           ;stkvar	_b @ sp[(-13)+-4]
 27174  015134  0EEF               	movlw	-17
 27175  015136  80E3               	bsf	plusw1,0,c
 27176  015138                     l8605:
 27177                           
 27178                           ;stkvar	_grs @ sp[(-13)+0]
 27179  015138  90D8               	bcf	status,0,c
 27180  01513A  0EF3               	movlw	-13
 27181  01513C  36E3               	rlcf	plusw1,f,c
 27182  01513E  0EF4               	movlw	-12
 27183  015140  36E3               	rlcf	plusw1,f,c
 27184  015142  0EF5               	movlw	-11
 27185  015144  36E3               	rlcf	plusw1,f,c
 27186  015146  0EF6               	movlw	-10
 27187  015148  36E3               	rlcf	plusw1,f,c
 27188  01514A                     l8607:
 27189                           
 27190                           ;stkvar	_a @ sp[(-13)+-8]
 27191                           ;stkvar	_rem @ sp[(-13)+4]
 27192  01514A  50E1               	movf	fsr1l,w,c
 27193  01514C  0FF7               	addlw	-9
 27194  01514E  6ED9               	movwf	fsr2l,c
 27195  015150  50E2               	movf	fsr1h,w,c
 27196  015152  6EDA               	movwf	fsr2h,c
 27197  015154  0EFF               	movlw	255
 27198  015156  22DA               	addwfc	fsr2h,f,c
 27199  015158  0EEB               	movlw	-21
 27200  01515A  50E3               	movf	plusw1,w,c
 27201  01515C  5CDE               	subwf	postinc2,w,c
 27202  01515E  0EEC               	movlw	-20
 27203  015160  50E3               	movf	plusw1,w,c
 27204  015162  58DE               	subwfb	postinc2,w,c
 27205  015164  0EED               	movlw	-19
 27206  015166  50E3               	movf	plusw1,w,c
 27207  015168  58DE               	subwfb	postinc2,w,c
 27208  01516A  0EEE               	movlw	-18
 27209  01516C  50E3               	movf	plusw1,w,c
 27210  01516E  58DE               	subwfb	postinc2,w,c
 27211  015170  A0D8               	btfss	status,0,c
 27212  015172  D015               	goto	l8613
 27213                           
 27214                           ;stkvar	_grs @ sp[(-13)+0]
 27215  015174  0EF6               	movlw	-10
 27216  015176  8CE3               	bsf	plusw1,6,c
 27217                           
 27218                           ;stkvar	_a @ sp[(-13)+-8]
 27219                           ;stkvar	_rem @ sp[(-13)+4]
 27220  015178  50E1               	movf	fsr1l,w,c
 27221  01517A  0FF7               	addlw	-9
 27222  01517C  6ED9               	movwf	fsr2l,c
 27223  01517E  50E2               	movf	fsr1h,w,c
 27224  015180  6EDA               	movwf	fsr2h,c
 27225  015182  0EFF               	movlw	255
 27226  015184  22DA               	addwfc	fsr2h,f,c
 27227  015186  0EEB               	movlw	-21
 27228  015188  50E3               	movf	plusw1,w,c
 27229  01518A  5EDE               	subwf	postinc2,f,c
 27230  01518C  0EEC               	movlw	-20
 27231  01518E  50E3               	movf	plusw1,w,c
 27232  015190  5ADE               	subwfb	postinc2,f,c
 27233  015192  0EED               	movlw	-19
 27234  015194  50E3               	movf	plusw1,w,c
 27235  015196  5ADE               	subwfb	postinc2,f,c
 27236  015198  0EEE               	movlw	-18
 27237  01519A  50E3               	movf	plusw1,w,c
 27238  01519C  5ADE               	subwfb	postinc2,f,c
 27239  01519E                     l8613:
 27240                           
 27241                           ;stkvar	_aexp @ sp[(-13)+10]
 27242  01519E  0EFD               	movlw	-3
 27243  0151A0  2AE3               	incf	plusw1,f,c
 27244  0151A2                     l8615:
 27245                           
 27246                           ;stkvar	_aexp @ sp[(-13)+10]
 27247  0151A2  0EFD               	movlw	-3
 27248  0151A4  006F FF8C  F001    	movff	plusw1,btemp
 27249  0151AA  0E19               	movlw	25
 27250  0151AC  6401               	cpfsgt	btemp^0,c
 27251  0151AE  D7A9               	goto	l8597
 27252                           
 27253                           ;stkvar	_rem @ sp[(-13)+4]
 27254  0151B0  0EF7               	movlw	-9
 27255  0151B2  50E3               	movf	plusw1,w,c
 27256  0151B4  E10A               	bnz	u6870
 27257  0151B6  0EF8               	movlw	-8
 27258  0151B8  50E3               	movf	plusw1,w,c
 27259  0151BA  E107               	bnz	u6870
 27260  0151BC  0EF9               	movlw	-7
 27261  0151BE  50E3               	movf	plusw1,w,c
 27262  0151C0  E104               	bnz	u6870
 27263  0151C2  0EFA               	movlw	-6
 27264  0151C4  50E3               	movf	plusw1,w,c
 27265  0151C6  B4D8               	btfsc	status,2,c
 27266  0151C8  D024               	goto	l8631
 27267  0151CA                     u6870:
 27268                           
 27269                           ;stkvar	_grs @ sp[(-13)+0]
 27270  0151CA  0EF3               	movlw	-13
 27271  0151CC  80E3               	bsf	plusw1,0,c
 27272  0151CE  D021               	goto	l8631
 27273  0151D0                     l8621:
 27274                           
 27275                           ;stkvar	_b @ sp[(-13)+-4]
 27276  0151D0  90D8               	bcf	status,0,c
 27277  0151D2  0EEF               	movlw	-17
 27278  0151D4  36E3               	rlcf	plusw1,f,c
 27279  0151D6  0EF0               	movlw	-16
 27280  0151D8  36E3               	rlcf	plusw1,f,c
 27281  0151DA  0EF1               	movlw	-15
 27282  0151DC  36E3               	rlcf	plusw1,f,c
 27283  0151DE  0EF2               	movlw	-14
 27284  0151E0  36E3               	rlcf	plusw1,f,c
 27285                           
 27286                           ;stkvar	_grs @ sp[(-13)+0]
 27287  0151E2  0EF6               	movlw	-10
 27288  0151E4  AEE3               	btfss	plusw1,7,c
 27289  0151E6  D002               	goto	l8627
 27290                           
 27291                           ;stkvar	_b @ sp[(-13)+-4]
 27292  0151E8  0EEF               	movlw	-17
 27293  0151EA  80E3               	bsf	plusw1,0,c
 27294  0151EC                     l8627:
 27295                           
 27296                           ;stkvar	_grs @ sp[(-13)+0]
 27297  0151EC  90D8               	bcf	status,0,c
 27298  0151EE  0EF3               	movlw	-13
 27299  0151F0  36E3               	rlcf	plusw1,f,c
 27300  0151F2  0EF4               	movlw	-12
 27301  0151F4  36E3               	rlcf	plusw1,f,c
 27302  0151F6  0EF5               	movlw	-11
 27303  0151F8  36E3               	rlcf	plusw1,f,c
 27304  0151FA  0EF6               	movlw	-10
 27305  0151FC  36E3               	rlcf	plusw1,f,c
 27306                           
 27307                           ;stkvar	_new_exp @ sp[(-13)+8]
 27308  0151FE  50E1               	movf	fsr1l,w,c
 27309  015200  0FFB               	addlw	-5
 27310  015202  6ED9               	movwf	fsr2l,c
 27311  015204  50E2               	movf	fsr1h,w,c
 27312  015206  6EDA               	movwf	fsr2h,c
 27313  015208  0EFF               	movlw	255
 27314  01520A  22DA               	addwfc	fsr2h,f,c
 27315  01520C  06DE               	decf	postinc2,f,c
 27316  01520E  0E00               	movlw	0
 27317  015210  5ADD               	subwfb	postdec2,f,c
 27318  015212                     l8631:
 27319                           
 27320                           ;stkvar	_b @ sp[(-13)+-4]
 27321  015212  0EF1               	movlw	-15
 27322  015214  AEE3               	btfss	plusw1,7,c
 27323  015216  D7DC               	goto	l8621
 27324                           
 27325                           ;stkvar	_aexp @ sp[(-13)+10]
 27326  015218  0EFD               	movlw	-3
 27327  01521A  6AE3               	clrf	plusw1,c
 27328                           
 27329                           ;stkvar	_grs @ sp[(-13)+0]
 27330  01521C  0EF6               	movlw	-10
 27331  01521E  AEE3               	btfss	plusw1,7,c
 27332  015220  D020               	goto	l8645
 27333                           
 27334                           ;stkvar	_grs @ sp[(-13)+0]
 27335  015222  50E1               	movf	fsr1l,w,c
 27336  015224  0FF3               	addlw	-13
 27337  015226  6ED9               	movwf	fsr2l,c
 27338  015228  50E2               	movf	fsr1h,w,c
 27339  01522A  6EDA               	movwf	fsr2h,c
 27340  01522C  0EFF               	movlw	255
 27341  01522E  22DA               	addwfc	fsr2h,f,c
 27342  015230  0EFF               	movlw	255
 27343  015232  14DE               	andwf	postinc2,w,c
 27344  015234  6E09               	movwf	(btemp+8)^0,c
 27345  015236  0EFF               	movlw	255
 27346  015238  14DE               	andwf	postinc2,w,c
 27347  01523A  6E0A               	movwf	(btemp+9)^0,c
 27348  01523C  0EFF               	movlw	255
 27349  01523E  14DE               	andwf	postinc2,w,c
 27350  015240  6E0B               	movwf	(btemp+10)^0,c
 27351  015242  0E7F               	movlw	127
 27352  015244  14DE               	andwf	postinc2,w,c
 27353  015246  6E0C               	movwf	(btemp+11)^0,c
 27354  015248  5009               	movf	(btemp+8)^0,w,c
 27355  01524A  100A               	iorwf	(btemp+9)^0,w,c
 27356  01524C  100B               	iorwf	(btemp+10)^0,w,c
 27357  01524E  100C               	iorwf	(btemp+11)^0,w,c
 27358  015250  B4D8               	btfsc	status,2,c
 27359  015252  D004               	goto	l8641
 27360  015254                     u6910:
 27361                           
 27362                           ;stkvar	_aexp @ sp[(-13)+10]
 27363  015254  0EFD               	movlw	-3
 27364  015256  6AE3               	clrf	plusw1,c
 27365  015258  2AE3               	incf	plusw1,f,c
 27366  01525A  D003               	goto	l8645
 27367  01525C                     l8641:
 27368                           
 27369                           ;stkvar	_b @ sp[(-13)+-4]
 27370  01525C  0EEF               	movlw	-17
 27371  01525E  B0E3               	btfsc	plusw1,0,c
 27372  015260  D7F9               	goto	u6910
 27373  015262                     l8645:
 27374                           
 27375                           ;stkvar	_aexp @ sp[(-13)+10]
 27376  015262  0EFD               	movlw	-3
 27377  015264  50E3               	movf	plusw1,w,c
 27378  015266  B4D8               	btfsc	status,2,c
 27379  015268  D036               	goto	l8655
 27380                           
 27381                           ;stkvar	_b @ sp[(-13)+-4]
 27382  01526A  50E1               	movf	fsr1l,w,c
 27383  01526C  0FEF               	addlw	-17
 27384  01526E  6ED9               	movwf	fsr2l,c
 27385  015270  50E2               	movf	fsr1h,w,c
 27386  015272  6EDA               	movwf	fsr2h,c
 27387  015274  0EFF               	movlw	255
 27388  015276  22DA               	addwfc	fsr2h,f,c
 27389  015278  2ADE               	incf	postinc2,f,c
 27390  01527A  0E00               	movlw	0
 27391  01527C  22DE               	addwfc	postinc2,f,c
 27392  01527E  22DE               	addwfc	postinc2,f,c
 27393  015280  22DE               	addwfc	postinc2,f,c
 27394                           
 27395                           ;stkvar	_b @ sp[(-13)+-4]
 27396  015282  0EF2               	movlw	-14
 27397  015284  A0E3               	btfss	plusw1,0,c
 27398  015286  D027               	goto	l8655
 27399  015288  0E01               	movlw	1
 27400  01528A  6E0C               	movwf	(btemp+11)^0,c
 27401                           
 27402                           ;stkvar	_b @ sp[(-13)+-4]
 27403  01528C  50E1               	movf	fsr1l,w,c
 27404  01528E  0FEF               	addlw	-17
 27405  015290  6ED9               	movwf	fsr2l,c
 27406  015292  50E2               	movf	fsr1h,w,c
 27407  015294  6EDA               	movwf	fsr2h,c
 27408  015296  0EFF               	movlw	255
 27409  015298  22DA               	addwfc	fsr2h,f,c
 27410  01529A  280C               	incf	(btemp+11)^0,w,c
 27411  01529C  52DE               	movf	postinc2,f,c
 27412  01529E  D008               	goto	u6950
 27413  0152A0                     u6955:
 27414  0152A0  52DE               	movf	postinc2,f,c
 27415  0152A2  90D8               	bcf	status,0,c
 27416  0152A4  BEDC               	btfsc	preinc2,7,c
 27417  0152A6  80D8               	bsf	status,0,c
 27418  0152A8  32DD               	rrcf	postdec2,f,c
 27419  0152AA  32DD               	rrcf	postdec2,f,c
 27420  0152AC  32DD               	rrcf	postdec2,f,c
 27421  0152AE  32DE               	rrcf	postinc2,f,c
 27422  0152B0                     u6950:
 27423  0152B0  2EE8               	decfsz	wreg,f,c
 27424  0152B2  D7F6               	goto	u6955
 27425                           
 27426                           ;stkvar	_new_exp @ sp[(-13)+8]
 27427  0152B4  0EFB               	movlw	-5
 27428  0152B6  50E3               	movf	plusw1,w,c
 27429  0152B8  0F01               	addlw	1
 27430  0152BA  6E01               	movwf	btemp^0,c
 27431  0152BC  0EFB               	movlw	-5
 27432  0152BE  0060  F007  FFE3   	movff	btemp,plusw1
 27433  0152C4  6A01               	clrf	btemp^0,c
 27434  0152C6  0EFC               	movlw	-4
 27435  0152C8  50E3               	movf	plusw1,w,c
 27436  0152CA  2001               	addwfc	btemp^0,w,c
 27437  0152CC  6E01               	movwf	btemp^0,c
 27438  0152CE  0EFC               	movlw	-4
 27439  0152D0  0060  F007  FFE3   	movff	btemp,plusw1
 27440  0152D6                     l8655:
 27441                           
 27442                           ;stkvar	_new_exp @ sp[(-13)+8]
 27443  0152D6  0EFC               	movlw	-4
 27444  0152D8  BEE3               	btfsc	plusw1,7,c
 27445  0152DA  D01B               	goto	l8661
 27446  0152DC  0EFC               	movlw	-4
 27447  0152DE  50E3               	movf	plusw1,w,c
 27448  0152E0  E104               	bnz	u6960
 27449  0152E2  0EFB               	movlw	-5
 27450  0152E4  28E3               	incf	plusw1,w,c
 27451  0152E6  A0D8               	btfss	status,0,c
 27452  0152E8  D014               	goto	l8661
 27453  0152EA                     u6960:
 27454  0152EA  0EFF               	movlw	255
 27455  0152EC  6E0B               	movwf	(btemp+10)^0,c
 27456  0152EE  0E00               	movlw	0
 27457  0152F0  6E0C               	movwf	(btemp+11)^0,c
 27458                           
 27459                           ;stkvar	_new_exp @ sp[(-13)+8]
 27460  0152F2  0EFB               	movlw	-5
 27461  0152F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27462  0152FA  0EFC               	movlw	-4
 27463  0152FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27464                           
 27465                           ;stkvar	_b @ sp[(-13)+-4]
 27466  015302  0EEF               	movlw	-17
 27467  015304  6AE3               	clrf	plusw1,c
 27468  015306  0EF0               	movlw	-16
 27469  015308  6AE3               	clrf	plusw1,c
 27470  01530A  0EF1               	movlw	-15
 27471  01530C  6AE3               	clrf	plusw1,c
 27472  01530E  0EF2               	movlw	-14
 27473  015310  6AE3               	clrf	plusw1,c
 27474  015312                     l8661:
 27475                           
 27476                           ;stkvar	_new_exp @ sp[(-13)+8]
 27477  015312  0EFC               	movlw	-4
 27478  015314  BEE3               	btfsc	plusw1,7,c
 27479  015316  D007               	goto	u6970
 27480  015318  0EFC               	movlw	-4
 27481  01531A  50E3               	movf	plusw1,w,c
 27482  01531C  E112               	bnz	l8667
 27483  01531E  0EFB               	movlw	-5
 27484  015320  04E3               	decf	plusw1,w,c
 27485  015322  B0D8               	btfsc	status,0,c
 27486  015324  D00E               	goto	l8667
 27487  015326                     u6970:
 27488                           
 27489                           ;stkvar	_new_exp @ sp[(-13)+8]
 27490  015326  0EFB               	movlw	-5
 27491  015328  6AE3               	clrf	plusw1,c
 27492  01532A  0EFC               	movlw	-4
 27493  01532C  6AE3               	clrf	plusw1,c
 27494                           
 27495                           ;stkvar	_b @ sp[(-13)+-4]
 27496  01532E  0EEF               	movlw	-17
 27497  015330  6AE3               	clrf	plusw1,c
 27498  015332  0EF0               	movlw	-16
 27499  015334  6AE3               	clrf	plusw1,c
 27500  015336  0EF1               	movlw	-15
 27501  015338  6AE3               	clrf	plusw1,c
 27502  01533A  0EF2               	movlw	-14
 27503  01533C  6AE3               	clrf	plusw1,c
 27504                           
 27505                           ;stkvar	_sign @ sp[(-13)+12]
 27506  01533E  0EFF               	movlw	-1
 27507  015340  6AE3               	clrf	plusw1,c
 27508  015342                     l8667:
 27509                           
 27510                           ;stkvar	_new_exp @ sp[(-13)+8]
 27511                           ;stkvar	_bexp @ sp[(-13)+11]
 27512  015342  0EFB               	movlw	-5
 27513  015344  006F FF8C  F001    	movff	plusw1,btemp
 27514  01534A  0EFE               	movlw	-2
 27515  01534C  0060  F007  FFE3   	movff	btemp,plusw1
 27516                           
 27517                           ;stkvar	_bexp @ sp[(-13)+11]
 27518  015352  0EFE               	movlw	-2
 27519  015354  A0E3               	btfss	plusw1,0,c
 27520  015356  D009               	goto	l8673
 27521                           
 27522                           ;stkvar	_b @ sp[(-13)+-4]
 27523  015358  0EF1               	movlw	241
 27524  01535A  24E1               	addwf	fsr1l,w,c
 27525  01535C  6ED9               	movwf	fsr2l,c
 27526  01535E  0EFF               	movlw	255
 27527  015360  20E2               	addwfc	fsr1h,w,c
 27528  015362  6EDA               	movwf	fsr2h,c
 27529  015364  0E00               	movlw	0
 27530  015366  8EDB               	bsf	plusw2,7,c
 27531  015368  D008               	goto	l8675
 27532  01536A                     l8673:
 27533                           
 27534                           ;stkvar	_b @ sp[(-13)+-4]
 27535  01536A  0EF1               	movlw	241
 27536  01536C  24E1               	addwf	fsr1l,w,c
 27537  01536E  6ED9               	movwf	fsr2l,c
 27538  015370  0EFF               	movlw	255
 27539  015372  20E2               	addwfc	fsr1h,w,c
 27540  015374  6EDA               	movwf	fsr2h,c
 27541  015376  0E7F               	movlw	127
 27542  015378  16DF               	andwf	indf2,f,c
 27543  01537A                     l8675:
 27544                           
 27545                           ;stkvar	_b @ sp[(-13)+-4]
 27546  01537A  0EF2               	movlw	242
 27547  01537C  24E1               	addwf	fsr1l,w,c
 27548  01537E  6ED9               	movwf	fsr2l,c
 27549  015380  0EFF               	movlw	255
 27550  015382  20E2               	addwfc	fsr1h,w,c
 27551  015384  6EDA               	movwf	fsr2h,c
 27552                           
 27553                           ;stkvar	_bexp @ sp[(-13)+11]
 27554  015386  0EFE               	movlw	-2
 27555  015388  006F FF8C  F00C    	movff	plusw1,btemp+11
 27556  01538E  90D8               	bcf	status,0,c
 27557  015390  300C               	rrcf	(btemp+11)^0,w,c
 27558  015392  6EDF               	movwf	indf2,c
 27559  015394  D644               	goto	l8573
 27560  015396                     l3098:
 27561                           
 27562                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27563  015396  0EEB               	movlw	235
 27564  015398  26E1               	addwf	fsr1l,f,c
 27565  01539A  0EFF               	movlw	255
 27566  01539C  22E2               	addwfc	fsr1h,f,c
 27567  01539E  0012               	return		;funcret
 27568  0153A0                     __end_of___fldiv:
 27569                           	opt callstack 0
 27570                           
 27571 ;; *************** function ___flge *****************
 27572 ;; Defined at:
 27573 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 27574 ;; Parameters:    Size  Location     Type
 27575 ;;  ff1             4  [STACK] unsigned char 
 27576 ;;  ff2             4  [STACK] unsigned char 
 27577 ;; Auto vars:     Size  Location     Type
 27578 ;;		None
 27579 ;; Return value:  Size  Location     Type
 27580 ;;		None               void
 27581 ;; Registers used:
 27582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27583 ;; Tracked objects:
 27584 ;;		On entry : 0/0
 27585 ;;		On exit  : 0/0
 27586 ;;		Unchanged: 0/0
 27587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27592 ;;Total ram usage:        0 bytes
 27593 ;; Hardware stack levels used:    1
 27594 ;; Hardware stack levels required when called:   15
 27595 ;; This function calls:
 27596 ;;		Nothing
 27597 ;; This function is called by:
 27598 ;;		_main
 27599 ;;		_convert_dac_raw
 27600 ;;		_calc_ror_data
 27601 ;;		_check_day_time
 27602 ;;		_calc_bsoc
 27603 ;;		_efgtoa
 27604 ;; This function uses a reentrant model
 27605 ;;
 27606                           
 27607                           	psect	text109
 27608  0194E4                     __ptext109:
 27609                           	opt callstack 0
 27610  0194E4                     ___flge:
 27611                           	opt callstack 0
 27612                           
 27613                           ;stkvar	_ff1 @ sp[(0)+-4]
 27614                           
 27615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27616                           ;incstack = 0
 27617 ;; hardware stack exceeded
 27618  0194E4  50E1               	movf	fsr1l,w,c
 27619  0194E6  0FFC               	addlw	-4
 27620  0194E8  6ED9               	movwf	fsr2l,c
 27621  0194EA  50E2               	movf	fsr1h,w,c
 27622  0194EC  6EDA               	movwf	fsr2h,c
 27623  0194EE  0EFF               	movlw	255
 27624  0194F0  22DA               	addwfc	fsr2h,f,c
 27625  0194F2  0E00               	movlw	0
 27626  0194F4  14DE               	andwf	postinc2,w,c
 27627  0194F6  6E09               	movwf	(btemp+8)^0,c
 27628  0194F8  0E00               	movlw	0
 27629  0194FA  14DE               	andwf	postinc2,w,c
 27630  0194FC  6E0A               	movwf	(btemp+9)^0,c
 27631  0194FE  0E80               	movlw	128
 27632  019500  14DE               	andwf	postinc2,w,c
 27633  019502  6E0B               	movwf	(btemp+10)^0,c
 27634  019504  0E7F               	movlw	127
 27635  019506  14DE               	andwf	postinc2,w,c
 27636  019508  6E0C               	movwf	(btemp+11)^0,c
 27637  01950A  5009               	movf	(btemp+8)^0,w,c
 27638  01950C  100A               	iorwf	(btemp+9)^0,w,c
 27639  01950E  100B               	iorwf	(btemp+10)^0,w,c
 27640  019510  100C               	iorwf	(btemp+11)^0,w,c
 27641  019512  A4D8               	btfss	status,2,c
 27642  019514  D008               	goto	l8949
 27643                           
 27644                           ;stkvar	_ff1 @ sp[(0)+-4]
 27645  019516  0EFC               	movlw	-4
 27646  019518  6AE3               	clrf	plusw1,c
 27647  01951A  0EFD               	movlw	-3
 27648  01951C  6AE3               	clrf	plusw1,c
 27649  01951E  0EFE               	movlw	-2
 27650  019520  6AE3               	clrf	plusw1,c
 27651  019522  0EFF               	movlw	-1
 27652  019524  6AE3               	clrf	plusw1,c
 27653  019526                     l8949:
 27654                           
 27655                           ;stkvar	_ff2 @ sp[(0)+-8]
 27656  019526  50E1               	movf	fsr1l,w,c
 27657  019528  0FF8               	addlw	-8
 27658  01952A  6ED9               	movwf	fsr2l,c
 27659  01952C  50E2               	movf	fsr1h,w,c
 27660  01952E  6EDA               	movwf	fsr2h,c
 27661  019530  0EFF               	movlw	255
 27662  019532  22DA               	addwfc	fsr2h,f,c
 27663  019534  0E00               	movlw	0
 27664  019536  14DE               	andwf	postinc2,w,c
 27665  019538  6E09               	movwf	(btemp+8)^0,c
 27666  01953A  0E00               	movlw	0
 27667  01953C  14DE               	andwf	postinc2,w,c
 27668  01953E  6E0A               	movwf	(btemp+9)^0,c
 27669  019540  0E80               	movlw	128
 27670  019542  14DE               	andwf	postinc2,w,c
 27671  019544  6E0B               	movwf	(btemp+10)^0,c
 27672  019546  0E7F               	movlw	127
 27673  019548  14DE               	andwf	postinc2,w,c
 27674  01954A  6E0C               	movwf	(btemp+11)^0,c
 27675  01954C  5009               	movf	(btemp+8)^0,w,c
 27676  01954E  100A               	iorwf	(btemp+9)^0,w,c
 27677  019550  100B               	iorwf	(btemp+10)^0,w,c
 27678  019552  100C               	iorwf	(btemp+11)^0,w,c
 27679  019554  A4D8               	btfss	status,2,c
 27680  019556  D008               	goto	l2779
 27681                           
 27682                           ;stkvar	_ff2 @ sp[(0)+-8]
 27683  019558  0EF8               	movlw	-8
 27684  01955A  6AE3               	clrf	plusw1,c
 27685  01955C  0EF9               	movlw	-7
 27686  01955E  6AE3               	clrf	plusw1,c
 27687  019560  0EFA               	movlw	-6
 27688  019562  6AE3               	clrf	plusw1,c
 27689  019564  0EFB               	movlw	-5
 27690  019566  6AE3               	clrf	plusw1,c
 27691  019568                     l2779:
 27692                           
 27693                           ;stkvar	_ff1 @ sp[(0)+-4]
 27694  019568  0EFF               	movlw	-1
 27695  01956A  AEE3               	btfss	plusw1,7,c
 27696  01956C  D024               	goto	l8955
 27697                           
 27698                           ;stkvar	_ff1 @ sp[(0)+-4]
 27699  01956E  0E00               	movlw	0
 27700  019570  6E09               	movwf	(btemp+8)^0,c
 27701  019572  0E00               	movlw	0
 27702  019574  6E0A               	movwf	(btemp+9)^0,c
 27703  019576  0E00               	movlw	0
 27704  019578  6E0B               	movwf	(btemp+10)^0,c
 27705  01957A  0E80               	movlw	128
 27706  01957C  6E0C               	movwf	(btemp+11)^0,c
 27707  01957E  0EFC               	movlw	-4
 27708  019580  50E3               	movf	plusw1,w,c
 27709  019582  5E09               	subwf	(btemp+8)^0,f,c
 27710  019584  0EFD               	movlw	-3
 27711  019586  50E3               	movf	plusw1,w,c
 27712  019588  5A0A               	subwfb	(btemp+9)^0,f,c
 27713  01958A  0EFE               	movlw	-2
 27714  01958C  50E3               	movf	plusw1,w,c
 27715  01958E  5A0B               	subwfb	(btemp+10)^0,f,c
 27716  019590  0EFF               	movlw	-1
 27717  019592  50E3               	movf	plusw1,w,c
 27718  019594  5A0C               	subwfb	(btemp+11)^0,f,c
 27719                           
 27720                           ;stkvar	_ff1 @ sp[(0)+-4]
 27721  019596  0EFC               	movlw	-4
 27722  019598  0060  F027  FFE3   	movff	btemp+8,plusw1
 27723  01959E  0EFD               	movlw	-3
 27724  0195A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27725  0195A6  0EFE               	movlw	-2
 27726  0195A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27727  0195AE  0EFF               	movlw	-1
 27728  0195B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27729  0195B6                     l8955:
 27730                           
 27731                           ;stkvar	_ff2 @ sp[(0)+-8]
 27732  0195B6  0EFB               	movlw	-5
 27733  0195B8  AEE3               	btfss	plusw1,7,c
 27734  0195BA  D024               	goto	l8959
 27735                           
 27736                           ;stkvar	_ff2 @ sp[(0)+-8]
 27737  0195BC  0E00               	movlw	0
 27738  0195BE  6E09               	movwf	(btemp+8)^0,c
 27739  0195C0  0E00               	movlw	0
 27740  0195C2  6E0A               	movwf	(btemp+9)^0,c
 27741  0195C4  0E00               	movlw	0
 27742  0195C6  6E0B               	movwf	(btemp+10)^0,c
 27743  0195C8  0E80               	movlw	128
 27744  0195CA  6E0C               	movwf	(btemp+11)^0,c
 27745  0195CC  0EF8               	movlw	-8
 27746  0195CE  50E3               	movf	plusw1,w,c
 27747  0195D0  5E09               	subwf	(btemp+8)^0,f,c
 27748  0195D2  0EF9               	movlw	-7
 27749  0195D4  50E3               	movf	plusw1,w,c
 27750  0195D6  5A0A               	subwfb	(btemp+9)^0,f,c
 27751  0195D8  0EFA               	movlw	-6
 27752  0195DA  50E3               	movf	plusw1,w,c
 27753  0195DC  5A0B               	subwfb	(btemp+10)^0,f,c
 27754  0195DE  0EFB               	movlw	-5
 27755  0195E0  50E3               	movf	plusw1,w,c
 27756  0195E2  5A0C               	subwfb	(btemp+11)^0,f,c
 27757                           
 27758                           ;stkvar	_ff2 @ sp[(0)+-8]
 27759  0195E4  0EF8               	movlw	-8
 27760  0195E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 27761  0195EC  0EF9               	movlw	-7
 27762  0195EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27763  0195F4  0EFA               	movlw	-6
 27764  0195F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27765  0195FC  0EFB               	movlw	-5
 27766  0195FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27767  019604                     l8959:
 27768                           
 27769                           ;stkvar	_ff1 @ sp[(0)+-4]
 27770  019604  0EFF               	movlw	-1
 27771  019606  7EE3               	btg	plusw1,7,c
 27772                           
 27773                           ;stkvar	_ff2 @ sp[(0)+-8]
 27774  019608  0EFB               	movlw	-5
 27775  01960A  7EE3               	btg	plusw1,7,c
 27776                           
 27777                           ;stkvar	_ff2 @ sp[(0)+-8]
 27778                           ;stkvar	_ff1 @ sp[(0)+-4]
 27779  01960C  50E1               	movf	fsr1l,w,c
 27780  01960E  0FFC               	addlw	-4
 27781  019610  6ED9               	movwf	fsr2l,c
 27782  019612  50E2               	movf	fsr1h,w,c
 27783  019614  6EDA               	movwf	fsr2h,c
 27784  019616  0EFF               	movlw	255
 27785  019618  22DA               	addwfc	fsr2h,f,c
 27786  01961A  0EF8               	movlw	-8
 27787  01961C  50E3               	movf	plusw1,w,c
 27788  01961E  5CDE               	subwf	postinc2,w,c
 27789  019620  0EF9               	movlw	-7
 27790  019622  50E3               	movf	plusw1,w,c
 27791  019624  58DE               	subwfb	postinc2,w,c
 27792  019626  0EFA               	movlw	-6
 27793  019628  50E3               	movf	plusw1,w,c
 27794  01962A  58DE               	subwfb	postinc2,w,c
 27795  01962C  0EFB               	movlw	-5
 27796  01962E  50E3               	movf	plusw1,w,c
 27797  019630  58DE               	subwfb	postinc2,w,c
 27798  019632  B0D8               	btfsc	status,0,c
 27799  019634  D002               	goto	l8967
 27800  019636  9001               	bcf	btemp& (0+255),0,c
 27801  019638  D001               	goto	l2786
 27802  01963A                     l8967:
 27803  01963A  8001               	bsf	btemp& (0+255),0,c
 27804  01963C                     l2786:
 27805                           
 27806                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 27807  01963C  0EF8               	movlw	248
 27808  01963E  26E1               	addwf	fsr1l,f,c
 27809  019640  0EFF               	movlw	255
 27810  019642  22E2               	addwfc	fsr1h,f,c
 27811  019644  0012               	return		;funcret
 27812  019646                     __end_of___flge:
 27813                           	opt callstack 0
 27814                           
 27815 ;; *************** function _calc_model_data *****************
 27816 ;; Defined at:
 27817 ;;		line 67 in file "mbmc.c"
 27818 ;; Parameters:    Size  Location     Type
 27819 ;;		None
 27820 ;; Auto vars:     Size  Location     Type
 27821 ;;		None
 27822 ;; Return value:  Size  Location     Type
 27823 ;;                  1  [STACK] void 
 27824 ;; Registers used:
 27825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27826 ;; Tracked objects:
 27827 ;;		On entry : 0/1
 27828 ;;		On exit  : 3F/39
 27829 ;;		Unchanged: 0/0
 27830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27835 ;;Total ram usage:        0 bytes
 27836 ;; Hardware stack levels used:    1
 27837 ;; Hardware stack levels required when called:   18
 27838 ;; This function calls:
 27839 ;;		___fladd
 27840 ;;		___flmul
 27841 ;;		___flsub
 27842 ;;		_lp_filter
 27843 ;;		_start_bsoc
 27844 ;;		_stop_bsoc
 27845 ;; This function is called by:
 27846 ;;		_main
 27847 ;; This function uses a reentrant model
 27848 ;;
 27849                           
 27850                           	psect	text110
 27851  015CDC                     __ptext110:
 27852                           	opt callstack 0
 27853  015CDC                     _calc_model_data:
 27854                           	opt callstack 12
 27855                           
 27856                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 27857                           
 27858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27859                           ;incstack = 0
 27860  015CDC  EC48  F0E5         	call	_stop_bsoc	;wreg free
 27861                           
 27862                           ; BSR set to: 57
 27863                           ;mbmc.c: 72:  if (!V.calib) {
 27864  015CE0  0101               	movlb	1	; () banked
 27865  015CE2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 27866  015CE4  A4D8               	btfss	status,2,c
 27867  015CE6  D219               	goto	l11563
 27868                           
 27869                           ; BSR set to: 1
 27870                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 27871  015CE8  EE21  F2FF         	lfsr	2,_C
 27872  015CEC  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 27873  015CF2  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 27874  015CF8  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 27875  015CFE  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 27876                           
 27877                           ; BSR set to: 1
 27878                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 27879  015D04  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 27880  015D0A  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 27881  015D10  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 27882  015D16  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 27883  015D1C  EE21  F343         	lfsr	2,_C+68	;volatile
 27884  015D20  006F FF7B FFE6     	movff	postinc2,postinc1
 27885  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 27886  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 27887  015D32  006F FF7B FFE6     	movff	postinc2,postinc1
 27888  015D38  EC46  F0DF         	call	___flsub	;wreg free
 27889  015D3C  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 27890  015D42  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 27891  015D48  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 27892  015D4E  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 27893                           
 27894                           ;mbmc.c: 75:   bcror = C.c_bat;
 27895  015D54  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 27896  015D58  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 27897  015D5C  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 27898  015D60  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 27899                           
 27900                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 27901  015D64  EE21  F303         	lfsr	2,_C+4	;volatile
 27902  015D68  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 27903  015D6E  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 27904  015D74  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 27905  015D7A  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 27906                           
 27907                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 27908  015D80  EE21  F30F         	lfsr	2,_C+16	;volatile
 27909  015D84  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 27910  015D8A  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 27911  015D90  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 27912  015D96  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 27913                           
 27914                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 27915  015D9C  EE21  F333         	lfsr	2,_C+52	;volatile
 27916  015DA0  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 27917  015DA6  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 27918  015DAC  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 27919  015DB2  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 27920                           
 27921                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 27922  015DB8  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 27923  015DBE  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 27924  015DC4  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 27925  015DCA  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 27926  015DD0  EE21  F353         	lfsr	2,_C+84	;volatile
 27927  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 27928  015DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 27929  015DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 27930  015DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 27931  015DEC  EC46  F0DF         	call	___flsub	;wreg free
 27932  015DF0  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 27933  015DF6  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 27934  015DFC  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 27935  015E02  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 27936                           
 27937                           ;mbmc.c: 80:   bvror = C.v_bat;
 27938  015E08  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 27939  015E0C  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 27940  015E10  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 27941  015E14  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 27942                           
 27943                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 27944  015E18  EE21  F313         	lfsr	2,_C+20	;volatile
 27945  015E1C  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 27946  015E22  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 27947  015E28  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 27948  015E2E  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 27949                           
 27950                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27951  015E34  EE21  F307         	lfsr	2,_C+8	;volatile
 27952  015E38  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27953  015E3E  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27954  015E44  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27955  015E4A  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27956                           
 27957                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27958  015E50  EE21  F32F         	lfsr	2,_C+48	;volatile
 27959  015E54  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27960  015E5A  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27961  015E60  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27962  015E66  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27963                           
 27964                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 27965  015E6C  0E01               	movlw	1
 27966  015E6E  6EE6               	movwf	postinc1,c
 27967  015E70  0E10               	movlw	16
 27968  015E72  6EE6               	movwf	postinc1,c
 27969  015E74  EE21  F2FF         	lfsr	2,_C
 27970  015E78  006F FF7B FFE6     	movff	postinc2,postinc1
 27971  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 27972  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 27973  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 27974  015E90  EE21  F303         	lfsr	2,_C+4	;volatile
 27975  015E94  006F FF7B FFE6     	movff	postinc2,postinc1
 27976  015E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 27977  015EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 27978  015EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 27979  015EAC  EC46  F0DF         	call	___flsub	;wreg free
 27980  015EB0  0060  F007  FFE6   	movff	btemp,postinc1
 27981  015EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27982  015EBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27983  015EC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 27984  015EC8  ECBD  F0C5         	call	_lp_filter	;wreg free
 27985  015ECC  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27986  015ED2  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27987  015ED8  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27988  015EDE  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27989                           
 27990                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27991  015EE4  0E01               	movlw	1
 27992  015EE6  6EE6               	movwf	postinc1,c
 27993  015EE8  0E11               	movlw	17
 27994  015EEA  6EE6               	movwf	postinc1,c
 27995  015EEC  EE21  F353         	lfsr	2,_C+84	;volatile
 27996  015EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 27997  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 27998  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 27999  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 28000  015F08  EE21  F33F         	lfsr	2,_C+64	;volatile
 28001  015F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 28002  015F12  006F FF7B FFE6     	movff	postinc2,postinc1
 28003  015F18  006F FF7B FFE6     	movff	postinc2,postinc1
 28004  015F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 28005  015F24  EC20  F09F         	call	___flmul	;wreg free
 28006  015F28  0060  F007  FFE6   	movff	btemp,postinc1
 28007  015F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28008  015F34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28009  015F3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28010  015F40  ECBD  F0C5         	call	_lp_filter	;wreg free
 28011  015F44  0060  F004  F773   	movff	btemp,_C+116	;volatile
 28012  015F4A  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 28013  015F50  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 28014  015F56  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 28015                           
 28016                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 28017  015F5C  0E01               	movlw	1
 28018  015F5E  6EE6               	movwf	postinc1,c
 28019  015F60  0E12               	movlw	18
 28020  015F62  6EE6               	movwf	postinc1,c
 28021  015F64  EE21  F34F         	lfsr	2,_C+80	;volatile
 28022  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 28023  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 28024  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 28025  015F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 28026  015F80  EE21  F347         	lfsr	2,_C+72	;volatile
 28027  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 28028  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28029  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 28030  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 28031  015F9C  EC20  F09F         	call	___flmul	;wreg free
 28032  015FA0  0060  F007  FFE6   	movff	btemp,postinc1
 28033  015FA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28034  015FAC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28035  015FB2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28036  015FB8  ECBD  F0C5         	call	_lp_filter	;wreg free
 28037  015FBC  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 28038  015FC2  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 28039  015FC8  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 28040  015FCE  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 28041                           
 28042                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 28043  015FD4  0E01               	movlw	1
 28044  015FD6  6EE6               	movwf	postinc1,c
 28045  015FD8  0E13               	movlw	19
 28046  015FDA  6EE6               	movwf	postinc1,c
 28047  015FDC  0E00               	movlw	0
 28048  015FDE  6EE6               	movwf	postinc1,c
 28049  015FE0  0E00               	movlw	0
 28050  015FE2  6EE6               	movwf	postinc1,c
 28051  015FE4  0E60               	movlw	96
 28052  015FE6  6EE6               	movwf	postinc1,c
 28053  015FE8  0EC1               	movlw	193
 28054  015FEA  6EE6               	movwf	postinc1,c
 28055  015FEC  EE21  F363         	lfsr	2,_C+100	;volatile
 28056  015FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 28057  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 28058  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 28059  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 28060  016008  EE21  F33F         	lfsr	2,_C+64	;volatile
 28061  01600C  006F FF7B FFE6     	movff	postinc2,postinc1
 28062  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 28063  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 28064  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 28065  016024  EC20  F09F         	call	___flmul	;wreg free
 28066  016028  0060  F007  FFE6   	movff	btemp,postinc1
 28067  01602E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28068  016034  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28069  01603A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28070  016040  EC35  F0A3         	call	___fladd	;wreg free
 28071  016044  0060  F007  FFE6   	movff	btemp,postinc1
 28072  01604A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28073  016050  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28074  016056  0060  F013  FFE6   	movff	btemp+3,postinc1
 28075  01605C  ECBD  F0C5         	call	_lp_filter	;wreg free
 28076  016060  0060  F004  F777   	movff	btemp,_C+120	;volatile
 28077  016066  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 28078  01606C  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 28079  016072  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 28080                           
 28081                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 28082  016078  0E01               	movlw	1
 28083  01607A  6EE6               	movwf	postinc1,c
 28084  01607C  0E14               	movlw	20
 28085  01607E  6EE6               	movwf	postinc1,c
 28086  016080  EE21  F353         	lfsr	2,_C+84	;volatile
 28087  016084  006F FF7B FFE6     	movff	postinc2,postinc1
 28088  01608A  006F FF7B FFE6     	movff	postinc2,postinc1
 28089  016090  006F FF7B FFE6     	movff	postinc2,postinc1
 28090  016096  006F FF7B FFE6     	movff	postinc2,postinc1
 28091  01609C  EE21  F343         	lfsr	2,_C+68	;volatile
 28092  0160A0  006F FF7B FFE6     	movff	postinc2,postinc1
 28093  0160A6  006F FF7B FFE6     	movff	postinc2,postinc1
 28094  0160AC  006F FF7B FFE6     	movff	postinc2,postinc1
 28095  0160B2  006F FF7B FFE6     	movff	postinc2,postinc1
 28096  0160B8  EC20  F09F         	call	___flmul	;wreg free
 28097  0160BC  0060  F007  FFE6   	movff	btemp,postinc1
 28098  0160C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28099  0160C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28100  0160CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28101  0160D4  ECBD  F0C5         	call	_lp_filter	;wreg free
 28102  0160D8  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 28103  0160DE  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 28104  0160E4  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 28105  0160EA  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 28106                           
 28107                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 28108  0160F0  EE21  F377         	lfsr	2,_C+120	;volatile
 28109  0160F4  0E03               	movlw	3
 28110  0160F6  AEDB               	btfss	plusw2,7,c
 28111  0160F8  D010               	goto	l11563
 28112                           
 28113                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 28114  0160FA  0E17               	movlw	23
 28115  0160FC  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 28116  016102  0EB7               	movlw	183
 28117  016104  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 28118  01610A  0ED1               	movlw	209
 28119  01610C  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 28120  016112  0E38               	movlw	56
 28121  016114  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 28122  01611A                     l11563:
 28123                           
 28124                           ;mbmc.c: 95:  start_bsoc();
 28125  01611A  ECD7  F0E3         	call	_start_bsoc	;wreg free
 28126                           
 28127                           ; BSR set to: 57
 28128                           ;mbmc.c: 96:  C.update = 1;
 28129  01611E  0E01               	movlw	1
 28130  016120  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 28131                           
 28132                           ; BSR set to: 57
 28133                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28134  016126  0012               	return		;funcret
 28135  016128                     __end_of_calc_model_data:
 28136                           	opt callstack 0
 28137                           
 28138 ;; *************** function _stop_bsoc *****************
 28139 ;; Defined at:
 28140 ;;		line 130 in file "bsoc.c"
 28141 ;; Parameters:    Size  Location     Type
 28142 ;;		None
 28143 ;; Auto vars:     Size  Location     Type
 28144 ;;		None
 28145 ;; Return value:  Size  Location     Type
 28146 ;;                  1  [STACK] void 
 28147 ;; Registers used:
 28148 ;;		None
 28149 ;; Tracked objects:
 28150 ;;		On entry : 0/1
 28151 ;;		On exit  : 3F/39
 28152 ;;		Unchanged: 0/0
 28153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28158 ;;Total ram usage:        0 bytes
 28159 ;; Hardware stack levels used:    1
 28160 ;; Hardware stack levels required when called:   15
 28161 ;; This function calls:
 28162 ;;		Nothing
 28163 ;; This function is called by:
 28164 ;;		_calc_model_data
 28165 ;; This function uses a reentrant model
 28166 ;;
 28167                           
 28168                           	psect	text111
 28169  01CA90                     __ptext111:
 28170                           	opt callstack 0
 28171  01CA90                     _stop_bsoc:
 28172                           	opt callstack 14
 28173                           
 28174                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 28175                           
 28176                           ; BSR set to: 57
 28177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28178                           ;incstack = 0
 28179  01CA90  0139               	movlb	57	; () banked
 28180  01CA92  9D96               	bcf	150,6,b	;volatile
 28181                           
 28182                           ; BSR set to: 57
 28183                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 28184  01CA94  0012               	return		;funcret
 28185  01CA96                     __end_of_stop_bsoc:
 28186                           	opt callstack 0
 28187                           
 28188 ;; *************** function _start_bsoc *****************
 28189 ;; Defined at:
 28190 ;;		line 121 in file "bsoc.c"
 28191 ;; Parameters:    Size  Location     Type
 28192 ;;		None
 28193 ;; Auto vars:     Size  Location     Type
 28194 ;;		None
 28195 ;; Return value:  Size  Location     Type
 28196 ;;                  1  [STACK] void 
 28197 ;; Registers used:
 28198 ;;		wreg, status,2, status,0, btemp+11
 28199 ;; Tracked objects:
 28200 ;;		On entry : 0/1
 28201 ;;		On exit  : 3F/39
 28202 ;;		Unchanged: 0/0
 28203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28208 ;;Total ram usage:        0 bytes
 28209 ;; Hardware stack levels used:    1
 28210 ;; Hardware stack levels required when called:   15
 28211 ;; This function calls:
 28212 ;;		Nothing
 28213 ;; This function is called by:
 28214 ;;		_calc_model_data
 28215 ;; This function uses a reentrant model
 28216 ;;
 28217                           
 28218                           	psect	text112
 28219  01C7AE                     __ptext112:
 28220                           	opt callstack 0
 28221  01C7AE                     _start_bsoc:
 28222                           	opt callstack 14
 28223                           
 28224                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 28225                           
 28226                           ; BSR set to: 57
 28227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28228                           ;incstack = 0
 28229  01C7AE  0139               	movlb	57	; () banked
 28230  01C7B0  8D96               	bsf	150,6,b	;volatile
 28231                           
 28232                           ; BSR set to: 57
 28233  01C7B2  A4BE               	btfss	190,2,c	;volatile
 28234  01C7B4  D002               	goto	u10000
 28235  01C7B6  0E01               	movlw	1
 28236  01C7B8  D001               	goto	u10006
 28237  01C7BA                     u10000:
 28238  01C7BA  0E00               	movlw	0
 28239  01C7BC                     u10006:
 28240  01C7BC  0AFF               	xorlw	255
 28241  01C7BE  6E0C               	movwf	(btemp+11)^0,c
 28242  01C7C0  460C               	rlncf	(btemp+11)^0,f,c
 28243  01C7C2  460C               	rlncf	(btemp+11)^0,f,c
 28244  01C7C4  50BE               	movf	190,w,c	;volatile
 28245  01C7C6  180C               	xorwf	(btemp+11)^0,w,c
 28246  01C7C8  0BFB               	andlw	-5
 28247  01C7CA  180C               	xorwf	(btemp+11)^0,w,c
 28248  01C7CC  6EBE               	movwf	190,c	;volatile
 28249                           
 28250                           ; BSR set to: 57
 28251                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 28252  01C7CE  0012               	return		;funcret
 28253  01C7D0                     __end_of_start_bsoc:
 28254                           	opt callstack 0
 28255                           
 28256 ;; *************** function _lp_filter *****************
 28257 ;; Defined at:
 28258 ;;		line 29 in file "mbmc.c"
 28259 ;; Parameters:    Size  Location     Type
 28260 ;;  new             4  [STACK] const float 
 28261 ;;  bn              1  [STACK] const unsigned char 
 28262 ;;  slow            1  [STACK] const char 
 28263 ;; Auto vars:     Size  Location     Type
 28264 ;;  lp_speed        4  [STACK] float 
 28265 ;; Return value:  Size  Location     Type
 28266 ;;                  4  [STACK] float 
 28267 ;; Registers used:
 28268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28269 ;; Tracked objects:
 28270 ;;		On entry : 0/1
 28271 ;;		On exit  : 0/0
 28272 ;;		Unchanged: 0/0
 28273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28278 ;;Total ram usage:        0 bytes
 28279 ;; Hardware stack levels used:    1
 28280 ;; Hardware stack levels required when called:   17
 28281 ;; This function calls:
 28282 ;;		___fladd
 28283 ;;		___flmul
 28284 ;;		___flsub
 28285 ;; This function is called by:
 28286 ;;		_main
 28287 ;;		_convert_adc_data
 28288 ;;		_calc_model_data
 28289 ;; This function uses a reentrant model
 28290 ;;
 28291                           
 28292                           	psect	text113
 28293  018B7A                     __ptext113:
 28294                           	opt callstack 0
 28295  018B7A                     _lp_filter:
 28296                           	opt callstack 0
 28297                           
 28298                           ; BSR set to: 57
 28299                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28300  018B7A  52E6               	movf	postinc1,f,c
 28301  018B7C  52E6               	movf	postinc1,f,c
 28302  018B7E  52E6               	movf	postinc1,f,c
 28303  018B80  52E6               	movf	postinc1,f,c
 28304                           
 28305                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 28306                           ;stkvar	_bn @ sp[(-4)+-5]
 28307                           
 28308                           ;incstack = 0
 28309  018B82  0EF7               	movlw	-9
 28310  018B84  006F FF8C  F001    	movff	plusw1,btemp
 28311  018B8A  0E14               	movlw	20
 28312  018B8C  6401               	cpfsgt	btemp^0,c
 28313  018B8E  D011               	goto	l10783
 28314  018B90                     u9830:
 28315                           
 28316                           ;mbmc.c: 35:   return new;
 28317                           ;stkvar	_new @ sp[(-4)+-4]
 28318  018B90  0EF8               	movlw	-8
 28319  018B92  006F FF8C  F001    	movff	plusw1,btemp
 28320  018B98  0EF9               	movlw	-7
 28321  018B9A  006F FF8C  F002    	movff	plusw1,btemp+1
 28322  018BA0  0EFA               	movlw	-6
 28323  018BA2  006F FF8C  F003    	movff	plusw1,btemp+2
 28324  018BA8  0EFB               	movlw	-5
 28325  018BAA  006F FF8C  F004    	movff	plusw1,btemp+3
 28326  018BB0  D0BD               	goto	l1945
 28327  018BB2                     l10783:
 28328                           
 28329                           ;mbmc.c: 37:  if (slow == (-1)) {
 28330                           ;stkvar	_slow @ sp[(-4)+-6]
 28331  018BB2  0EF6               	movlw	-10
 28332  018BB4  28E3               	incf	plusw1,w,c
 28333  018BB6  A4D8               	btfss	status,2,c
 28334  018BB8  D012               	goto	l10791
 28335                           
 28336                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 28337                           ;stkvar	_bn @ sp[(-4)+-5]
 28338  018BBA  0EF7               	movlw	-9
 28339  018BBC  50E3               	movf	plusw1,w,c
 28340  018BBE  0D04               	mullw	4
 28341  018BC0  0E00               	movlw	low lp_filter@smooth
 28342  018BC2  24F3               	addwf	243,w,c
 28343  018BC4  6ED9               	movwf	fsr2l,c
 28344  018BC6  0E02               	movlw	high lp_filter@smooth
 28345  018BC8  20F4               	addwfc	prodh,w,c
 28346  018BCA  6EDA               	movwf	fsr2h,c
 28347  018BCC  0E00               	movlw	0
 28348  018BCE  6EDE               	movwf	postinc2,c
 28349  018BD0  0E00               	movlw	0
 28350  018BD2  6EDE               	movwf	postinc2,c
 28351  018BD4  0E00               	movlw	0
 28352  018BD6  6EDE               	movwf	postinc2,c
 28353  018BD8  0E00               	movlw	0
 28354  018BDA  6EDD               	movwf	postdec2,c
 28355  018BDC  D7D9               	goto	u9830
 28356  018BDE                     l10791:
 28357                           
 28358                           ;mbmc.c: 42:  if (slow) {
 28359                           ;stkvar	_slow @ sp[(-4)+-6]
 28360  018BDE  0EF6               	movlw	-10
 28361  018BE0  50E3               	movf	plusw1,w,c
 28362  018BE2  B4D8               	btfsc	status,2,c
 28363  018BE4  D006               	goto	l10795
 28364                           
 28365                           ;mbmc.c: 43:   lp_speed = 0.033;
 28366  018BE6  0E02               	movlw	2
 28367  018BE8  6E09               	movwf	(btemp+8)^0,c
 28368  018BEA  0E2B               	movlw	43
 28369  018BEC  6E0A               	movwf	(btemp+9)^0,c
 28370  018BEE  0E07               	movlw	7
 28371  018BF0  D005               	goto	L34
 28372  018BF2                     l10795:
 28373                           
 28374                           ;mbmc.c: 45:   lp_speed = 0.066;
 28375  018BF2  0E02               	movlw	2
 28376  018BF4  6E09               	movwf	(btemp+8)^0,c
 28377  018BF6  0E2B               	movlw	43
 28378  018BF8  6E0A               	movwf	(btemp+9)^0,c
 28379  018BFA  0E87               	movlw	135
 28380  018BFC                     L34:
 28381  018BFC  6E0B               	movwf	(btemp+10)^0,c
 28382  018BFE  0E3D               	movlw	61
 28383  018C00  6E0C               	movwf	(btemp+11)^0,c
 28384                           
 28385                           ;stkvar	_lp_speed @ sp[(-4)+0]
 28386  018C02  0EFC               	movlw	-4
 28387  018C04  0060  F027  FFE3   	movff	btemp+8,plusw1
 28388  018C0A  0EFD               	movlw	-3
 28389  018C0C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28390  018C12  0EFE               	movlw	-2
 28391  018C14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28392  018C1A  0EFF               	movlw	-1
 28393  018C1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28394                           
 28395                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 28396                           ;stkvar	_bn @ sp[(-4)+-5]
 28397  018C22  0EF7               	movlw	-9
 28398  018C24  50E3               	movf	plusw1,w,c
 28399  018C26  0D04               	mullw	4
 28400  018C28  0E00               	movlw	low lp_filter@smooth
 28401  018C2A  24F3               	addwf	243,w,c
 28402  018C2C  6ED9               	movwf	fsr2l,c
 28403  018C2E  0E02               	movlw	high lp_filter@smooth
 28404  018C30  20F4               	addwfc	prodh,w,c
 28405  018C32  6EDA               	movwf	fsr2h,c
 28406  018C34  006F FF7B FFE6     	movff	postinc2,postinc1
 28407  018C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 28408  018C40  006F FF7B FFE6     	movff	postinc2,postinc1
 28409  018C46  006F FF7B FFE6     	movff	postinc2,postinc1
 28410                           
 28411                           ;stkvar	_lp_speed @ sp[(-8)+0]
 28412  018C4C  0EF8               	movlw	-8
 28413  018C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 28414  018C54  006F FF8F FFE6     	movff	plusw1,postinc1
 28415  018C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 28416  018C60  006F FF8F FFE6     	movff	plusw1,postinc1
 28417                           
 28418                           ;stkvar	_bn @ sp[(-12)+-5]
 28419  018C66  0EEF               	movlw	-17
 28420  018C68  50E3               	movf	plusw1,w,c
 28421  018C6A  0D04               	mullw	4
 28422  018C6C  0E00               	movlw	low lp_filter@smooth
 28423  018C6E  24F3               	addwf	243,w,c
 28424  018C70  6ED9               	movwf	fsr2l,c
 28425  018C72  0E02               	movlw	high lp_filter@smooth
 28426  018C74  20F4               	addwfc	prodh,w,c
 28427  018C76  6EDA               	movwf	fsr2h,c
 28428  018C78  006F FF7B FFE6     	movff	postinc2,postinc1
 28429  018C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 28430  018C84  006F FF7B FFE6     	movff	postinc2,postinc1
 28431  018C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28432                           
 28433                           ;stkvar	_new @ sp[(-16)+-4]
 28434  018C90  0EEC               	movlw	-20
 28435  018C92  006F FF8F FFE6     	movff	plusw1,postinc1
 28436  018C98  006F FF8F FFE6     	movff	plusw1,postinc1
 28437  018C9E  006F FF8F FFE6     	movff	plusw1,postinc1
 28438  018CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 28439  018CAA  EC46  F0DF         	call	___flsub	;wreg free
 28440  018CAE  0060  F007  FFE6   	movff	btemp,postinc1
 28441  018CB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28442  018CBA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28443  018CC0  0060  F013  FFE6   	movff	btemp+3,postinc1
 28444  018CC6  EC20  F09F         	call	___flmul	;wreg free
 28445  018CCA  0060  F007  FFE6   	movff	btemp,postinc1
 28446  018CD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28447  018CD6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28448  018CDC  0060  F013  FFE6   	movff	btemp+3,postinc1
 28449  018CE2  EC35  F0A3         	call	___fladd	;wreg free
 28450                           
 28451                           ;stkvar	_bn @ sp[(-4)+-5]
 28452  018CE6  0EF7               	movlw	-9
 28453  018CE8  50E3               	movf	plusw1,w,c
 28454  018CEA  0D04               	mullw	4
 28455  018CEC  0E00               	movlw	low lp_filter@smooth
 28456  018CEE  24F3               	addwf	243,w,c
 28457  018CF0  6ED9               	movwf	fsr2l,c
 28458  018CF2  0E02               	movlw	high lp_filter@smooth
 28459  018CF4  20F4               	addwfc	prodh,w,c
 28460  018CF6  6EDA               	movwf	fsr2h,c
 28461  018CF8  0060  F007  FFDE   	movff	btemp,postinc2
 28462  018CFE  0060  F00B  FFDE   	movff	btemp+1,postinc2
 28463  018D04  0060  F00F  FFDE   	movff	btemp+2,postinc2
 28464  018D0A  0060  F013  FFDD   	movff	btemp+3,postdec2
 28465  018D10  52DD               	movf	postdec2,f,c
 28466  018D12  52DD               	movf	postdec2,f,c
 28467  018D14  006F FF78  F001    	movff	postinc2,btemp
 28468  018D1A  006F FF78  F002    	movff	postinc2,btemp+1
 28469  018D20  006F FF78  F003    	movff	postinc2,btemp+2
 28470  018D26  006F FF78  F004    	movff	postinc2,btemp+3
 28471  018D2C                     l1945:
 28472                           
 28473                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 28474  018D2C  0EF6               	movlw	246
 28475  018D2E  26E1               	addwf	fsr1l,f,c
 28476  018D30  0EFF               	movlw	255
 28477  018D32  22E2               	addwfc	fsr1h,f,c
 28478  018D34  0012               	return		;funcret
 28479  018D36                     __end_of_lp_filter:
 28480                           	opt callstack 0
 28481                           
 28482 ;; *************** function ___flsub *****************
 28483 ;; Defined at:
 28484 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28485 ;; Parameters:    Size  Location     Type
 28486 ;;  b               4  [STACK] float 
 28487 ;;  a               4  [STACK] float 
 28488 ;; Auto vars:     Size  Location     Type
 28489 ;;		None
 28490 ;; Return value:  Size  Location     Type
 28491 ;;                  4  [STACK] float 
 28492 ;; Registers used:
 28493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28494 ;; Tracked objects:
 28495 ;;		On entry : 0/0
 28496 ;;		On exit  : 0/0
 28497 ;;		Unchanged: 0/0
 28498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28503 ;;Total ram usage:        0 bytes
 28504 ;; Hardware stack levels used:    1
 28505 ;; Hardware stack levels required when called:   16
 28506 ;; This function calls:
 28507 ;;		___fladd
 28508 ;; This function is called by:
 28509 ;;		_conv_raw_result
 28510 ;;		_lp_filter
 28511 ;;		_calc_model_data
 28512 ;;		_calc_ror_data
 28513 ;;		_esr_check
 28514 ;;		_efgtoa
 28515 ;; This function uses a reentrant model
 28516 ;;
 28517                           
 28518                           	psect	text114
 28519  01BE8C                     __ptext114:
 28520                           	opt callstack 0
 28521  01BE8C                     ___flsub:
 28522                           	opt callstack 0
 28523                           
 28524                           ;stkvar	_a @ sp[(0)+-8]
 28525                           
 28526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28527                           ;incstack = 0
 28528 ;; hardware stack exceeded
 28529  01BE8C  0EFB               	movlw	-5
 28530  01BE8E  7EE3               	btg	plusw1,7,c
 28531                           
 28532                           ;stkvar	_a @ sp[(0)+-8]
 28533  01BE90  0EF8               	movlw	-8
 28534  01BE92  006F FF8F FFE6     	movff	plusw1,postinc1
 28535  01BE98  006F FF8F FFE6     	movff	plusw1,postinc1
 28536  01BE9E  006F FF8F FFE6     	movff	plusw1,postinc1
 28537  01BEA4  006F FF8F FFE6     	movff	plusw1,postinc1
 28538                           
 28539                           ;stkvar	_b @ sp[(-4)+-4]
 28540  01BEAA  0EF8               	movlw	-8
 28541  01BEAC  006F FF8F FFE6     	movff	plusw1,postinc1
 28542  01BEB2  006F FF8F FFE6     	movff	plusw1,postinc1
 28543  01BEB8  006F FF8F FFE6     	movff	plusw1,postinc1
 28544  01BEBE  006F FF8F FFE6     	movff	plusw1,postinc1
 28545  01BEC4  EC35  F0A3         	call	___fladd	;wreg free
 28546                           
 28547                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28548  01BEC8  0EF8               	movlw	248
 28549  01BECA  26E1               	addwf	fsr1l,f,c
 28550  01BECC  0EFF               	movlw	255
 28551  01BECE  22E2               	addwfc	fsr1h,f,c
 28552  01BED0  0012               	return		;funcret
 28553  01BED2                     __end_of___flsub:
 28554                           	opt callstack 0
 28555                           
 28556 ;; *************** function ___fladd *****************
 28557 ;; Defined at:
 28558 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28559 ;; Parameters:    Size  Location     Type
 28560 ;;  b               4  [STACK] float 
 28561 ;;  a               4  [STACK] float 
 28562 ;; Auto vars:     Size  Location     Type
 28563 ;;  grs             1  [STACK] unsigned char 
 28564 ;;  bexp            1  [STACK] unsigned char 
 28565 ;;  aexp            1  [STACK] unsigned char 
 28566 ;;  signs           1  [STACK] unsigned char 
 28567 ;; Return value:  Size  Location     Type
 28568 ;;                  4  [STACK] unsigned char 
 28569 ;; Registers used:
 28570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28571 ;; Tracked objects:
 28572 ;;		On entry : 0/0
 28573 ;;		On exit  : 0/0
 28574 ;;		Unchanged: 0/0
 28575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28580 ;;Total ram usage:        0 bytes
 28581 ;; Hardware stack levels used:    1
 28582 ;; Hardware stack levels required when called:   15
 28583 ;; This function calls:
 28584 ;;		Nothing
 28585 ;; This function is called by:
 28586 ;;		_main
 28587 ;;		_lp_filter
 28588 ;;		_calc_model_data
 28589 ;;		_efgtoa
 28590 ;;		___asfladd
 28591 ;;		___flsub
 28592 ;; This function uses a reentrant model
 28593 ;;
 28594                           
 28595                           	psect	text115
 28596  01466A                     __ptext115:
 28597                           	opt callstack 0
 28598  01466A                     ___fladd:
 28599                           	opt callstack 0
 28600                           
 28601                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28602  01466A  52E6               	movf	postinc1,f,c
 28603  01466C  52E6               	movf	postinc1,f,c
 28604  01466E  52E6               	movf	postinc1,f,c
 28605  014670  52E6               	movf	postinc1,f,c
 28606                           
 28607                           ;stkvar	_b @ sp[(-4)+-4]
 28608                           
 28609                           ;incstack = 0
 28610 ;; hardware stack exceeded
 28611  014672  0EFB               	movlw	251
 28612  014674  24E1               	addwf	fsr1l,w,c
 28613  014676  6ED9               	movwf	fsr2l,c
 28614  014678  0EFF               	movlw	255
 28615  01467A  20E2               	addwfc	fsr1h,w,c
 28616  01467C  6EDA               	movwf	fsr2h,c
 28617  01467E  50DF               	movf	indf2,w,c
 28618  014680  6E0C               	movwf	(btemp+11)^0,c
 28619  014682  0E80               	movlw	128
 28620  014684  160C               	andwf	(btemp+11)^0,f,c
 28621                           
 28622                           ;stkvar	_signs @ sp[(-4)+3]
 28623  014686  0EFF               	movlw	-1
 28624  014688  0060  F033  FFE3   	movff	btemp+11,plusw1
 28625                           
 28626                           ;stkvar	_b @ sp[(-4)+-4]
 28627  01468E  0EFB               	movlw	251
 28628  014690  24E1               	addwf	fsr1l,w,c
 28629  014692  6ED9               	movwf	fsr2l,c
 28630  014694  0EFF               	movlw	255
 28631  014696  20E2               	addwfc	fsr1h,w,c
 28632  014698  6EDA               	movwf	fsr2h,c
 28633  01469A  50DF               	movf	indf2,w,c
 28634  01469C  6E0C               	movwf	(btemp+11)^0,c
 28635  01469E  90D8               	bcf	status,0,c
 28636  0146A0  340C               	rlcf	(btemp+11)^0,w,c
 28637  0146A2  6E0B               	movwf	(btemp+10)^0,c
 28638                           
 28639                           ;stkvar	_bexp @ sp[(-4)+1]
 28640  0146A4  0EFD               	movlw	-3
 28641  0146A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28642                           
 28643                           ;stkvar	_b @ sp[(-4)+-4]
 28644  0146AC  0EFA               	movlw	250
 28645  0146AE  24E1               	addwf	fsr1l,w,c
 28646  0146B0  6ED9               	movwf	fsr2l,c
 28647  0146B2  0EFF               	movlw	255
 28648  0146B4  20E2               	addwfc	fsr1h,w,c
 28649  0146B6  6EDA               	movwf	fsr2h,c
 28650  0146B8  AEDF               	btfss	indf2,7,c
 28651  0146BA  D002               	goto	l8057
 28652                           
 28653                           ;stkvar	_bexp @ sp[(-4)+1]
 28654  0146BC  0EFD               	movlw	-3
 28655  0146BE  80E3               	bsf	plusw1,0,c
 28656  0146C0                     l8057:
 28657                           
 28658                           ;stkvar	_bexp @ sp[(-4)+1]
 28659  0146C0  0EFD               	movlw	-3
 28660  0146C2  50E3               	movf	plusw1,w,c
 28661  0146C4  B4D8               	btfsc	status,2,c
 28662  0146C6  D027               	goto	l8067
 28663                           
 28664                           ;stkvar	_bexp @ sp[(-4)+1]
 28665  0146C8  0EFD               	movlw	-3
 28666  0146CA  28E3               	incf	plusw1,w,c
 28667  0146CC  A4D8               	btfss	status,2,c
 28668  0146CE  D018               	goto	l8063
 28669  0146D0  0E00               	movlw	0
 28670  0146D2  6E09               	movwf	(btemp+8)^0,c
 28671  0146D4  0E00               	movlw	0
 28672  0146D6  6E0A               	movwf	(btemp+9)^0,c
 28673  0146D8  0E00               	movlw	0
 28674  0146DA  6E0B               	movwf	(btemp+10)^0,c
 28675  0146DC  0E00               	movlw	0
 28676  0146DE  6E0C               	movwf	(btemp+11)^0,c
 28677                           
 28678                           ;stkvar	_b @ sp[(-4)+-4]
 28679  0146E0  0EF8               	movlw	-8
 28680  0146E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28681  0146E8  0EF9               	movlw	-7
 28682  0146EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28683  0146F0  0EFA               	movlw	-6
 28684  0146F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28685  0146F8  0EFB               	movlw	-5
 28686  0146FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28687  014700                     l8063:
 28688                           
 28689                           ;stkvar	_b @ sp[(-4)+-4]
 28690  014700  0EFA               	movlw	-6
 28691  014702  8EE3               	bsf	plusw1,7,c
 28692                           
 28693                           ;stkvar	_b @ sp[(-4)+-4]
 28694  014704  0EFB               	movlw	251
 28695  014706  24E1               	addwf	fsr1l,w,c
 28696  014708  6ED9               	movwf	fsr2l,c
 28697  01470A  0EFF               	movlw	255
 28698  01470C  20E2               	addwfc	fsr1h,w,c
 28699  01470E  6EDA               	movwf	fsr2h,c
 28700  014710  0E00               	movlw	0
 28701  014712  6EDF               	movwf	indf2,c
 28702  014714  D018               	goto	l8069
 28703  014716                     l8067:
 28704  014716  0E00               	movlw	0
 28705  014718  6E09               	movwf	(btemp+8)^0,c
 28706  01471A  0E00               	movlw	0
 28707  01471C  6E0A               	movwf	(btemp+9)^0,c
 28708  01471E  0E00               	movlw	0
 28709  014720  6E0B               	movwf	(btemp+10)^0,c
 28710  014722  0E00               	movlw	0
 28711  014724  6E0C               	movwf	(btemp+11)^0,c
 28712                           
 28713                           ;stkvar	_b @ sp[(-4)+-4]
 28714  014726  0EF8               	movlw	-8
 28715  014728  0060  F027  FFE3   	movff	btemp+8,plusw1
 28716  01472E  0EF9               	movlw	-7
 28717  014730  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28718  014736  0EFA               	movlw	-6
 28719  014738  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28720  01473E  0EFB               	movlw	-5
 28721  014740  0060  F033  FFE3   	movff	btemp+11,plusw1
 28722  014746                     l8069:
 28723                           
 28724                           ;stkvar	_a @ sp[(-4)+-8]
 28725  014746  0EF7               	movlw	247
 28726  014748  24E1               	addwf	fsr1l,w,c
 28727  01474A  6ED9               	movwf	fsr2l,c
 28728  01474C  0EFF               	movlw	255
 28729  01474E  20E2               	addwfc	fsr1h,w,c
 28730  014750  6EDA               	movwf	fsr2h,c
 28731  014752  50DF               	movf	indf2,w,c
 28732  014754  6E0C               	movwf	(btemp+11)^0,c
 28733  014756  0E80               	movlw	128
 28734  014758  160C               	andwf	(btemp+11)^0,f,c
 28735                           
 28736                           ;stkvar	_aexp @ sp[(-4)+2]
 28737  01475A  0EFE               	movlw	-2
 28738  01475C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28739                           
 28740                           ;stkvar	_signs @ sp[(-4)+3]
 28741                           ;stkvar	_aexp @ sp[(-4)+2]
 28742  014762  50E1               	movf	fsr1l,w,c
 28743  014764  0FFE               	addlw	-2
 28744  014766  6ED9               	movwf	fsr2l,c
 28745  014768  50E2               	movf	fsr1h,w,c
 28746  01476A  6EDA               	movwf	fsr2h,c
 28747  01476C  0EFF               	movlw	255
 28748  01476E  22DA               	addwfc	fsr2h,f,c
 28749  014770  0EFF               	movlw	-1
 28750  014772  50E3               	movf	plusw1,w,c
 28751  014774  18DE               	xorwf	postinc2,w,c
 28752  014776  B4D8               	btfsc	status,2,c
 28753  014778  D002               	goto	l8075
 28754                           
 28755                           ;stkvar	_signs @ sp[(-4)+3]
 28756  01477A  0EFF               	movlw	-1
 28757  01477C  8CE3               	bsf	plusw1,6,c
 28758  01477E                     l8075:
 28759                           
 28760                           ;stkvar	_a @ sp[(-4)+-8]
 28761  01477E  0EF7               	movlw	247
 28762  014780  24E1               	addwf	fsr1l,w,c
 28763  014782  6ED9               	movwf	fsr2l,c
 28764  014784  0EFF               	movlw	255
 28765  014786  20E2               	addwfc	fsr1h,w,c
 28766  014788  6EDA               	movwf	fsr2h,c
 28767  01478A  50DF               	movf	indf2,w,c
 28768  01478C  6E0C               	movwf	(btemp+11)^0,c
 28769  01478E  90D8               	bcf	status,0,c
 28770  014790  340C               	rlcf	(btemp+11)^0,w,c
 28771  014792  6E0B               	movwf	(btemp+10)^0,c
 28772                           
 28773                           ;stkvar	_aexp @ sp[(-4)+2]
 28774  014794  0EFE               	movlw	-2
 28775  014796  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28776                           
 28777                           ;stkvar	_a @ sp[(-4)+-8]
 28778  01479C  0EF6               	movlw	246
 28779  01479E  24E1               	addwf	fsr1l,w,c
 28780  0147A0  6ED9               	movwf	fsr2l,c
 28781  0147A2  0EFF               	movlw	255
 28782  0147A4  20E2               	addwfc	fsr1h,w,c
 28783  0147A6  6EDA               	movwf	fsr2h,c
 28784  0147A8  AEDF               	btfss	indf2,7,c
 28785  0147AA  D002               	goto	l8081
 28786                           
 28787                           ;stkvar	_aexp @ sp[(-4)+2]
 28788  0147AC  0EFE               	movlw	-2
 28789  0147AE  80E3               	bsf	plusw1,0,c
 28790  0147B0                     l8081:
 28791                           
 28792                           ;stkvar	_aexp @ sp[(-4)+2]
 28793  0147B0  0EFE               	movlw	-2
 28794  0147B2  50E3               	movf	plusw1,w,c
 28795  0147B4  B4D8               	btfsc	status,2,c
 28796  0147B6  D027               	goto	l8091
 28797                           
 28798                           ;stkvar	_aexp @ sp[(-4)+2]
 28799  0147B8  0EFE               	movlw	-2
 28800  0147BA  28E3               	incf	plusw1,w,c
 28801  0147BC  A4D8               	btfss	status,2,c
 28802  0147BE  D018               	goto	l8087
 28803  0147C0  0E00               	movlw	0
 28804  0147C2  6E09               	movwf	(btemp+8)^0,c
 28805  0147C4  0E00               	movlw	0
 28806  0147C6  6E0A               	movwf	(btemp+9)^0,c
 28807  0147C8  0E00               	movlw	0
 28808  0147CA  6E0B               	movwf	(btemp+10)^0,c
 28809  0147CC  0E00               	movlw	0
 28810  0147CE  6E0C               	movwf	(btemp+11)^0,c
 28811                           
 28812                           ;stkvar	_a @ sp[(-4)+-8]
 28813  0147D0  0EF4               	movlw	-12
 28814  0147D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28815  0147D8  0EF5               	movlw	-11
 28816  0147DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28817  0147E0  0EF6               	movlw	-10
 28818  0147E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28819  0147E8  0EF7               	movlw	-9
 28820  0147EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28821  0147F0                     l8087:
 28822                           
 28823                           ;stkvar	_a @ sp[(-4)+-8]
 28824  0147F0  0EF6               	movlw	-10
 28825  0147F2  8EE3               	bsf	plusw1,7,c
 28826                           
 28827                           ;stkvar	_a @ sp[(-4)+-8]
 28828  0147F4  0EF7               	movlw	247
 28829  0147F6  24E1               	addwf	fsr1l,w,c
 28830  0147F8  6ED9               	movwf	fsr2l,c
 28831  0147FA  0EFF               	movlw	255
 28832  0147FC  20E2               	addwfc	fsr1h,w,c
 28833  0147FE  6EDA               	movwf	fsr2h,c
 28834  014800  0E00               	movlw	0
 28835  014802  6EDF               	movwf	indf2,c
 28836  014804  D018               	goto	l8093
 28837  014806                     l8091:
 28838  014806  0E00               	movlw	0
 28839  014808  6E09               	movwf	(btemp+8)^0,c
 28840  01480A  0E00               	movlw	0
 28841  01480C  6E0A               	movwf	(btemp+9)^0,c
 28842  01480E  0E00               	movlw	0
 28843  014810  6E0B               	movwf	(btemp+10)^0,c
 28844  014812  0E00               	movlw	0
 28845  014814  6E0C               	movwf	(btemp+11)^0,c
 28846                           
 28847                           ;stkvar	_a @ sp[(-4)+-8]
 28848  014816  0EF4               	movlw	-12
 28849  014818  0060  F027  FFE3   	movff	btemp+8,plusw1
 28850  01481E  0EF5               	movlw	-11
 28851  014820  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28852  014826  0EF6               	movlw	-10
 28853  014828  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28854  01482E  0EF7               	movlw	-9
 28855  014830  0060  F033  FFE3   	movff	btemp+11,plusw1
 28856  014836                     l8093:
 28857                           
 28858                           ;stkvar	_bexp @ sp[(-4)+1]
 28859                           ;stkvar	_aexp @ sp[(-4)+2]
 28860  014836  50E1               	movf	fsr1l,w,c
 28861  014838  0FFE               	addlw	-2
 28862  01483A  6ED9               	movwf	fsr2l,c
 28863  01483C  50E2               	movf	fsr1h,w,c
 28864  01483E  6EDA               	movwf	fsr2h,c
 28865  014840  0EFF               	movlw	255
 28866  014842  22DA               	addwfc	fsr2h,f,c
 28867  014844  0EFD               	movlw	-3
 28868  014846  50E3               	movf	plusw1,w,c
 28869  014848  5CDE               	subwf	postinc2,w,c
 28870  01484A  B0D8               	btfsc	status,0,c
 28871  01484C  D0A4               	goto	l8129
 28872                           
 28873                           ;stkvar	_signs @ sp[(-4)+3]
 28874  01484E  0EFF               	movlw	-1
 28875  014850  ACE3               	btfss	plusw1,6,c
 28876  014852  D002               	goto	l8099
 28877                           
 28878                           ;stkvar	_signs @ sp[(-4)+3]
 28879  014854  0EFF               	movlw	-1
 28880  014856  7EE3               	btg	plusw1,7,c
 28881  014858                     l8099:
 28882                           
 28883                           ;stkvar	_bexp @ sp[(-4)+1]
 28884                           ;stkvar	_grs @ sp[(-4)+0]
 28885  014858  0EFD               	movlw	-3
 28886  01485A  006F FF8C  F001    	movff	plusw1,btemp
 28887  014860  0EFC               	movlw	-4
 28888  014862  0060  F007  FFE3   	movff	btemp,plusw1
 28889                           
 28890                           ;stkvar	_aexp @ sp[(-4)+2]
 28891                           ;stkvar	_bexp @ sp[(-4)+1]
 28892  014868  0EFE               	movlw	-2
 28893  01486A  006F FF8C  F001    	movff	plusw1,btemp
 28894  014870  0EFD               	movlw	-3
 28895  014872  0060  F007  FFE3   	movff	btemp,plusw1
 28896                           
 28897                           ;stkvar	_grs @ sp[(-4)+0]
 28898                           ;stkvar	_aexp @ sp[(-4)+2]
 28899  014878  0EFC               	movlw	-4
 28900  01487A  006F FF8C  F001    	movff	plusw1,btemp
 28901  014880  0EFE               	movlw	-2
 28902  014882  0060  F007  FFE3   	movff	btemp,plusw1
 28903                           
 28904                           ;stkvar	_b @ sp[(-4)+-4]
 28905                           ;stkvar	_grs @ sp[(-4)+0]
 28906  014888  0EF8               	movlw	-8
 28907  01488A  006F FF8C  F001    	movff	plusw1,btemp
 28908  014890  0EFC               	movlw	-4
 28909  014892  0060  F007  FFE3   	movff	btemp,plusw1
 28910                           
 28911                           ;stkvar	_a @ sp[(-4)+-8]
 28912                           ;stkvar	_b @ sp[(-4)+-4]
 28913  014898  0EF4               	movlw	-12
 28914  01489A  006F FF8C  F001    	movff	plusw1,btemp
 28915  0148A0  0EF8               	movlw	-8
 28916  0148A2  0060  F007  FFE3   	movff	btemp,plusw1
 28917                           
 28918                           ;stkvar	_grs @ sp[(-4)+0]
 28919                           ;stkvar	_a @ sp[(-4)+-8]
 28920  0148A8  0EFC               	movlw	-4
 28921  0148AA  006F FF8C  F001    	movff	plusw1,btemp
 28922  0148B0  0EF4               	movlw	-12
 28923  0148B2  0060  F007  FFE3   	movff	btemp,plusw1
 28924                           
 28925                           ;stkvar	_b @ sp[(-4)+-4]
 28926  0148B8  0EF9               	movlw	249
 28927  0148BA  24E1               	addwf	fsr1l,w,c
 28928  0148BC  6ED9               	movwf	fsr2l,c
 28929  0148BE  0EFF               	movlw	255
 28930  0148C0  20E2               	addwfc	fsr1h,w,c
 28931  0148C2  6EDA               	movwf	fsr2h,c
 28932  0148C4  50DF               	movf	indf2,w,c
 28933  0148C6  6E0C               	movwf	(btemp+11)^0,c
 28934                           
 28935                           ;stkvar	_grs @ sp[(-4)+0]
 28936  0148C8  0EFC               	movlw	-4
 28937  0148CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28938                           
 28939                           ;stkvar	_a @ sp[(-4)+-8]
 28940  0148D0  0EF5               	movlw	245
 28941  0148D2  24E1               	addwf	fsr1l,w,c
 28942  0148D4  6ED9               	movwf	fsr2l,c
 28943  0148D6  0EFF               	movlw	255
 28944  0148D8  20E2               	addwfc	fsr1h,w,c
 28945  0148DA  6EDA               	movwf	fsr2h,c
 28946                           
 28947                           ;stkvar	_b @ sp[(-4)+-4]
 28948  0148DC  0EF9               	movlw	249
 28949  0148DE  24E1               	addwf	fsr1l,w,c
 28950  0148E0  6EE9               	movwf	fsr0l,c
 28951  0148E2  0EFF               	movlw	255
 28952  0148E4  20E2               	addwfc	fsr1h,w,c
 28953  0148E6  6EEA               	movwf	fsr0h,c
 28954  0148E8  006F FF7F FFEF     	movff	indf2,indf0
 28955                           
 28956                           ;stkvar	_grs @ sp[(-4)+0]
 28957                           ;stkvar	_a @ sp[(-4)+-8]
 28958  0148EE  0EF5               	movlw	245
 28959  0148F0  24E1               	addwf	fsr1l,w,c
 28960  0148F2  6ED9               	movwf	fsr2l,c
 28961  0148F4  0EFF               	movlw	255
 28962  0148F6  20E2               	addwfc	fsr1h,w,c
 28963  0148F8  6EDA               	movwf	fsr2h,c
 28964  0148FA  0EFC               	movlw	-4
 28965  0148FC  006F FF8F FFDF     	movff	plusw1,indf2
 28966                           
 28967                           ;stkvar	_b @ sp[(-4)+-4]
 28968  014902  0EFA               	movlw	250
 28969  014904  24E1               	addwf	fsr1l,w,c
 28970  014906  6ED9               	movwf	fsr2l,c
 28971  014908  0EFF               	movlw	255
 28972  01490A  20E2               	addwfc	fsr1h,w,c
 28973  01490C  6EDA               	movwf	fsr2h,c
 28974  01490E  50DF               	movf	indf2,w,c
 28975  014910  6E0C               	movwf	(btemp+11)^0,c
 28976                           
 28977                           ;stkvar	_grs @ sp[(-4)+0]
 28978  014912  0EFC               	movlw	-4
 28979  014914  0060  F033  FFE3   	movff	btemp+11,plusw1
 28980                           
 28981                           ;stkvar	_a @ sp[(-4)+-8]
 28982  01491A  0EF6               	movlw	246
 28983  01491C  24E1               	addwf	fsr1l,w,c
 28984  01491E  6ED9               	movwf	fsr2l,c
 28985  014920  0EFF               	movlw	255
 28986  014922  20E2               	addwfc	fsr1h,w,c
 28987  014924  6EDA               	movwf	fsr2h,c
 28988                           
 28989                           ;stkvar	_b @ sp[(-4)+-4]
 28990  014926  0EFA               	movlw	250
 28991  014928  24E1               	addwf	fsr1l,w,c
 28992  01492A  6EE9               	movwf	fsr0l,c
 28993  01492C  0EFF               	movlw	255
 28994  01492E  20E2               	addwfc	fsr1h,w,c
 28995  014930  6EEA               	movwf	fsr0h,c
 28996  014932  006F FF7F FFEF     	movff	indf2,indf0
 28997                           
 28998                           ;stkvar	_grs @ sp[(-4)+0]
 28999                           ;stkvar	_a @ sp[(-4)+-8]
 29000  014938  0EF6               	movlw	246
 29001  01493A  24E1               	addwf	fsr1l,w,c
 29002  01493C  6ED9               	movwf	fsr2l,c
 29003  01493E  0EFF               	movlw	255
 29004  014940  20E2               	addwfc	fsr1h,w,c
 29005  014942  6EDA               	movwf	fsr2h,c
 29006  014944  0EFC               	movlw	-4
 29007  014946  006F FF8F FFDF     	movff	plusw1,indf2
 29008                           
 29009                           ;stkvar	_b @ sp[(-4)+-4]
 29010  01494C  0EFB               	movlw	251
 29011  01494E  24E1               	addwf	fsr1l,w,c
 29012  014950  6ED9               	movwf	fsr2l,c
 29013  014952  0EFF               	movlw	255
 29014  014954  20E2               	addwfc	fsr1h,w,c
 29015  014956  6EDA               	movwf	fsr2h,c
 29016  014958  50DF               	movf	indf2,w,c
 29017  01495A  6E0C               	movwf	(btemp+11)^0,c
 29018                           
 29019                           ;stkvar	_grs @ sp[(-4)+0]
 29020  01495C  0EFC               	movlw	-4
 29021  01495E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29022                           
 29023                           ;stkvar	_a @ sp[(-4)+-8]
 29024  014964  0EF7               	movlw	247
 29025  014966  24E1               	addwf	fsr1l,w,c
 29026  014968  6ED9               	movwf	fsr2l,c
 29027  01496A  0EFF               	movlw	255
 29028  01496C  20E2               	addwfc	fsr1h,w,c
 29029  01496E  6EDA               	movwf	fsr2h,c
 29030                           
 29031                           ;stkvar	_b @ sp[(-4)+-4]
 29032  014970  0EFB               	movlw	251
 29033  014972  24E1               	addwf	fsr1l,w,c
 29034  014974  6EE9               	movwf	fsr0l,c
 29035  014976  0EFF               	movlw	255
 29036  014978  20E2               	addwfc	fsr1h,w,c
 29037  01497A  6EEA               	movwf	fsr0h,c
 29038  01497C  006F FF7F FFEF     	movff	indf2,indf0
 29039                           
 29040                           ;stkvar	_grs @ sp[(-4)+0]
 29041                           ;stkvar	_a @ sp[(-4)+-8]
 29042  014982  0EF7               	movlw	247
 29043  014984  24E1               	addwf	fsr1l,w,c
 29044  014986  6ED9               	movwf	fsr2l,c
 29045  014988  0EFF               	movlw	255
 29046  01498A  20E2               	addwfc	fsr1h,w,c
 29047  01498C  6EDA               	movwf	fsr2h,c
 29048  01498E  0EFC               	movlw	-4
 29049  014990  006F FF8F FFDF     	movff	plusw1,indf2
 29050  014996                     l8129:
 29051                           
 29052                           ;stkvar	_grs @ sp[(-4)+0]
 29053  014996  0EFC               	movlw	-4
 29054  014998  6AE3               	clrf	plusw1,c
 29055                           
 29056                           ;stkvar	_aexp @ sp[(-4)+2]
 29057  01499A  0EFE               	movlw	-2
 29058  01499C  50E3               	movf	plusw1,w,c
 29059  01499E  6E0B               	movwf	(btemp+10)^0,c
 29060  0149A0  6A0C               	clrf	(btemp+11)^0,c
 29061                           
 29062                           ;stkvar	_bexp @ sp[(-4)+1]
 29063  0149A2  0EFD               	movlw	-3
 29064  0149A4  50E3               	movf	plusw1,w,c
 29065  0149A6  5E0B               	subwf	(btemp+10)^0,f,c
 29066  0149A8  0E00               	movlw	0
 29067  0149AA  5A0C               	subwfb	(btemp+11)^0,f,c
 29068  0149AC  BE0C               	btfsc	(btemp+11)^0,7,c
 29069  0149AE  D062               	goto	l8153
 29070  0149B0  500C               	movf	(btemp+11)^0,w,c
 29071  0149B2  E104               	bnz	u5780
 29072  0149B4  0E1A               	movlw	26
 29073  0149B6  5C0B               	subwf	(btemp+10)^0,w,c
 29074  0149B8  A0D8               	btfss	status,0,c
 29075  0149BA  D05C               	goto	l8153
 29076  0149BC                     u5780:
 29077                           
 29078                           ;stkvar	_b @ sp[(-4)+-4]
 29079  0149BC  0EF8               	movlw	-8
 29080  0149BE  50E3               	movf	plusw1,w,c
 29081  0149C0  E10A               	bnz	u5791
 29082  0149C2  0EF9               	movlw	-7
 29083  0149C4  50E3               	movf	plusw1,w,c
 29084  0149C6  E107               	bnz	u5791
 29085  0149C8  0EFA               	movlw	-6
 29086  0149CA  50E3               	movf	plusw1,w,c
 29087  0149CC  E104               	bnz	u5791
 29088  0149CE  0EFB               	movlw	-5
 29089  0149D0  50E3               	movf	plusw1,w,c
 29090  0149D2  B4D8               	btfsc	status,2,c
 29091  0149D4  D003               	goto	u5790
 29092  0149D6                     u5791:
 29093  0149D6  6A0C               	clrf	(btemp+11)^0,c
 29094  0149D8  2A0C               	incf	(btemp+11)^0,f,c
 29095  0149DA  D001               	goto	u5808
 29096  0149DC                     u5790:
 29097  0149DC  6A0C               	clrf	(btemp+11)^0,c
 29098  0149DE                     u5808:
 29099                           
 29100                           ;stkvar	_grs @ sp[(-4)+0]
 29101  0149DE  0EFC               	movlw	-4
 29102  0149E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29103                           
 29104                           ;stkvar	_b @ sp[(-4)+-4]
 29105  0149E6  0EF8               	movlw	-8
 29106  0149E8  6AE3               	clrf	plusw1,c
 29107  0149EA  0EF9               	movlw	-7
 29108  0149EC  6AE3               	clrf	plusw1,c
 29109  0149EE  0EFA               	movlw	-6
 29110  0149F0  6AE3               	clrf	plusw1,c
 29111  0149F2  0EFB               	movlw	-5
 29112  0149F4  6AE3               	clrf	plusw1,c
 29113                           
 29114                           ;stkvar	_aexp @ sp[(-4)+2]
 29115                           ;stkvar	_bexp @ sp[(-4)+1]
 29116  0149F6  0EFE               	movlw	-2
 29117  0149F8  006F FF8C  F001    	movff	plusw1,btemp
 29118  0149FE  0EFD               	movlw	-3
 29119  014A00  0060  F007  FFE3   	movff	btemp,plusw1
 29120  014A06  D042               	goto	u5840
 29121  014A08                     l8139:
 29122                           
 29123                           ;stkvar	_grs @ sp[(-4)+0]
 29124  014A08  0EFC               	movlw	-4
 29125  014A0A  A0E3               	btfss	plusw1,0,c
 29126  014A0C  D00D               	goto	l8143
 29127                           
 29128                           ;stkvar	_grs @ sp[(-4)+0]
 29129  014A0E  0EFC               	movlw	-4
 29130  014A10  006F FF8C  F00C    	movff	plusw1,btemp+11
 29131  014A16  90D8               	bcf	status,0,c
 29132  014A18  320C               	rrcf	(btemp+11)^0,f,c
 29133  014A1A  0E01               	movlw	1
 29134  014A1C  120C               	iorwf	(btemp+11)^0,f,c
 29135                           
 29136                           ;stkvar	_grs @ sp[(-4)+0]
 29137  014A1E  0EFC               	movlw	-4
 29138  014A20  0060  F033  FFE3   	movff	btemp+11,plusw1
 29139  014A26  D009               	goto	l8145
 29140  014A28                     l8143:
 29141                           
 29142                           ;stkvar	_grs @ sp[(-4)+0]
 29143  014A28  50E1               	movf	fsr1l,w,c
 29144  014A2A  0FFC               	addlw	-4
 29145  014A2C  6ED9               	movwf	fsr2l,c
 29146  014A2E  50E2               	movf	fsr1h,w,c
 29147  014A30  6EDA               	movwf	fsr2h,c
 29148  014A32  0EFF               	movlw	255
 29149  014A34  22DA               	addwfc	fsr2h,f,c
 29150  014A36  90D8               	bcf	status,0,c
 29151  014A38  32DF               	rrcf	indf2,f,c
 29152  014A3A                     l8145:
 29153                           
 29154                           ;stkvar	_b @ sp[(-4)+-4]
 29155  014A3A  0EF8               	movlw	-8
 29156  014A3C  A0E3               	btfss	plusw1,0,c
 29157  014A3E  D002               	goto	l8149
 29158                           
 29159                           ;stkvar	_grs @ sp[(-4)+0]
 29160  014A40  0EFC               	movlw	-4
 29161  014A42  8EE3               	bsf	plusw1,7,c
 29162  014A44                     l8149:
 29163  014A44  0E01               	movlw	1
 29164  014A46  6E0C               	movwf	(btemp+11)^0,c
 29165                           
 29166                           ;stkvar	_b @ sp[(-4)+-4]
 29167  014A48  50E1               	movf	fsr1l,w,c
 29168  014A4A  0FF8               	addlw	-8
 29169  014A4C  6ED9               	movwf	fsr2l,c
 29170  014A4E  50E2               	movf	fsr1h,w,c
 29171  014A50  6EDA               	movwf	fsr2h,c
 29172  014A52  0EFF               	movlw	255
 29173  014A54  22DA               	addwfc	fsr2h,f,c
 29174  014A56  280C               	incf	(btemp+11)^0,w,c
 29175  014A58  52DE               	movf	postinc2,f,c
 29176  014A5A  D008               	goto	u5830
 29177  014A5C                     u5835:
 29178  014A5C  52DE               	movf	postinc2,f,c
 29179  014A5E  90D8               	bcf	status,0,c
 29180  014A60  BEDC               	btfsc	preinc2,7,c
 29181  014A62  80D8               	bsf	status,0,c
 29182  014A64  32DD               	rrcf	postdec2,f,c
 29183  014A66  32DD               	rrcf	postdec2,f,c
 29184  014A68  32DD               	rrcf	postdec2,f,c
 29185  014A6A  32DE               	rrcf	postinc2,f,c
 29186  014A6C                     u5830:
 29187  014A6C  2EE8               	decfsz	wreg,f,c
 29188  014A6E  D7F6               	goto	u5835
 29189                           
 29190                           ;stkvar	_bexp @ sp[(-4)+1]
 29191  014A70  0EFD               	movlw	-3
 29192  014A72  2AE3               	incf	plusw1,f,c
 29193  014A74                     l8153:
 29194                           
 29195                           ;stkvar	_aexp @ sp[(-4)+2]
 29196                           ;stkvar	_bexp @ sp[(-4)+1]
 29197  014A74  50E1               	movf	fsr1l,w,c
 29198  014A76  0FFD               	addlw	-3
 29199  014A78  6ED9               	movwf	fsr2l,c
 29200  014A7A  50E2               	movf	fsr1h,w,c
 29201  014A7C  6EDA               	movwf	fsr2h,c
 29202  014A7E  0EFF               	movlw	255
 29203  014A80  22DA               	addwfc	fsr2h,f,c
 29204  014A82  0EFE               	movlw	-2
 29205  014A84  50E3               	movf	plusw1,w,c
 29206  014A86  5CDE               	subwf	postinc2,w,c
 29207  014A88  A0D8               	btfss	status,0,c
 29208  014A8A  D7BE               	goto	l8139
 29209  014A8C                     u5840:
 29210                           
 29211                           ;stkvar	_signs @ sp[(-4)+3]
 29212  014A8C  0EFF               	movlw	-1
 29213  014A8E  BCE3               	btfsc	plusw1,6,c
 29214  014A90  D066               	goto	l8181
 29215                           
 29216                           ;stkvar	_bexp @ sp[(-4)+1]
 29217  014A92  0EFD               	movlw	-3
 29218  014A94  50E3               	movf	plusw1,w,c
 29219  014A96  B4D8               	btfsc	status,2,c
 29220  014A98  D0F2               	goto	u5940
 29221                           
 29222                           ;stkvar	_a @ sp[(-4)+-8]
 29223                           ;stkvar	_b @ sp[(-4)+-4]
 29224  014A9A  0EF8               	movlw	-8
 29225  014A9C  50E3               	movf	plusw1,w,c
 29226  014A9E  6E01               	movwf	btemp^0,c
 29227  014AA0  0EF4               	movlw	-12
 29228  014AA2  50E3               	movf	plusw1,w,c
 29229  014AA4  2601               	addwf	btemp^0,f,c
 29230  014AA6  0EF8               	movlw	-8
 29231  014AA8  0060  F007  FFE3   	movff	btemp,plusw1
 29232  014AAE  0EF9               	movlw	-7
 29233  014AB0  50E3               	movf	plusw1,w,c
 29234  014AB2  6E01               	movwf	btemp^0,c
 29235  014AB4  0EF5               	movlw	-11
 29236  014AB6  50E3               	movf	plusw1,w,c
 29237  014AB8  2201               	addwfc	btemp^0,f,c
 29238  014ABA  0EF9               	movlw	-7
 29239  014ABC  0060  F007  FFE3   	movff	btemp,plusw1
 29240  014AC2  0EFA               	movlw	-6
 29241  014AC4  50E3               	movf	plusw1,w,c
 29242  014AC6  6E01               	movwf	btemp^0,c
 29243  014AC8  0EF6               	movlw	-10
 29244  014ACA  50E3               	movf	plusw1,w,c
 29245  014ACC  2201               	addwfc	btemp^0,f,c
 29246  014ACE  0EFA               	movlw	-6
 29247  014AD0  0060  F007  FFE3   	movff	btemp,plusw1
 29248  014AD6  0EFB               	movlw	-5
 29249  014AD8  50E3               	movf	plusw1,w,c
 29250  014ADA  6E01               	movwf	btemp^0,c
 29251  014ADC  0EF7               	movlw	-9
 29252  014ADE  50E3               	movf	plusw1,w,c
 29253  014AE0  2201               	addwfc	btemp^0,f,c
 29254  014AE2  0EFB               	movlw	-5
 29255  014AE4  0060  F007  FFE3   	movff	btemp,plusw1
 29256                           
 29257                           ;stkvar	_b @ sp[(-4)+-4]
 29258  014AEA  0EFB               	movlw	-5
 29259  014AEC  A0E3               	btfss	plusw1,0,c
 29260  014AEE  D101               	goto	u5980
 29261                           
 29262                           ;stkvar	_grs @ sp[(-4)+0]
 29263  014AF0  0EFC               	movlw	-4
 29264  014AF2  A0E3               	btfss	plusw1,0,c
 29265  014AF4  D00D               	goto	l8171
 29266                           
 29267                           ;stkvar	_grs @ sp[(-4)+0]
 29268  014AF6  0EFC               	movlw	-4
 29269  014AF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29270  014AFE  90D8               	bcf	status,0,c
 29271  014B00  320C               	rrcf	(btemp+11)^0,f,c
 29272  014B02  0E01               	movlw	1
 29273  014B04  120C               	iorwf	(btemp+11)^0,f,c
 29274                           
 29275                           ;stkvar	_grs @ sp[(-4)+0]
 29276  014B06  0EFC               	movlw	-4
 29277  014B08  0060  F033  FFE3   	movff	btemp+11,plusw1
 29278  014B0E  D009               	goto	l8173
 29279  014B10                     l8171:
 29280                           
 29281                           ;stkvar	_grs @ sp[(-4)+0]
 29282  014B10  50E1               	movf	fsr1l,w,c
 29283  014B12  0FFC               	addlw	-4
 29284  014B14  6ED9               	movwf	fsr2l,c
 29285  014B16  50E2               	movf	fsr1h,w,c
 29286  014B18  6EDA               	movwf	fsr2h,c
 29287  014B1A  0EFF               	movlw	255
 29288  014B1C  22DA               	addwfc	fsr2h,f,c
 29289  014B1E  90D8               	bcf	status,0,c
 29290  014B20  32DF               	rrcf	indf2,f,c
 29291  014B22                     l8173:
 29292                           
 29293                           ;stkvar	_b @ sp[(-4)+-4]
 29294  014B22  0EF8               	movlw	-8
 29295  014B24  A0E3               	btfss	plusw1,0,c
 29296  014B26  D002               	goto	l8177
 29297                           
 29298                           ;stkvar	_grs @ sp[(-4)+0]
 29299  014B28  0EFC               	movlw	-4
 29300  014B2A  8EE3               	bsf	plusw1,7,c
 29301  014B2C                     l8177:
 29302  014B2C  0E01               	movlw	1
 29303  014B2E  6E0C               	movwf	(btemp+11)^0,c
 29304                           
 29305                           ;stkvar	_b @ sp[(-4)+-4]
 29306  014B30  50E1               	movf	fsr1l,w,c
 29307  014B32  0FF8               	addlw	-8
 29308  014B34  6ED9               	movwf	fsr2l,c
 29309  014B36  50E2               	movf	fsr1h,w,c
 29310  014B38  6EDA               	movwf	fsr2h,c
 29311  014B3A  0EFF               	movlw	255
 29312  014B3C  22DA               	addwfc	fsr2h,f,c
 29313  014B3E  280C               	incf	(btemp+11)^0,w,c
 29314  014B40  52DE               	movf	postinc2,f,c
 29315  014B42  D008               	goto	u5900
 29316  014B44                     u5905:
 29317  014B44  52DE               	movf	postinc2,f,c
 29318  014B46  90D8               	bcf	status,0,c
 29319  014B48  BEDC               	btfsc	preinc2,7,c
 29320  014B4A  80D8               	bsf	status,0,c
 29321  014B4C  32DD               	rrcf	postdec2,f,c
 29322  014B4E  32DD               	rrcf	postdec2,f,c
 29323  014B50  32DD               	rrcf	postdec2,f,c
 29324  014B52  32DE               	rrcf	postinc2,f,c
 29325  014B54                     u5900:
 29326  014B54  2EE8               	decfsz	wreg,f,c
 29327  014B56  D7F6               	goto	u5905
 29328                           
 29329                           ;stkvar	_bexp @ sp[(-4)+1]
 29330  014B58  0EFD               	movlw	-3
 29331  014B5A  2AE3               	incf	plusw1,f,c
 29332  014B5C  D0CA               	goto	u5980
 29333  014B5E                     l8181:
 29334                           
 29335                           ;stkvar	_a @ sp[(-4)+-8]
 29336                           ;stkvar	_b @ sp[(-4)+-4]
 29337  014B5E  50E1               	movf	fsr1l,w,c
 29338  014B60  0FF8               	addlw	-8
 29339  014B62  6ED9               	movwf	fsr2l,c
 29340  014B64  50E2               	movf	fsr1h,w,c
 29341  014B66  6EDA               	movwf	fsr2h,c
 29342  014B68  0EFF               	movlw	255
 29343  014B6A  22DA               	addwfc	fsr2h,f,c
 29344  014B6C  0EF4               	movlw	-12
 29345  014B6E  50E3               	movf	plusw1,w,c
 29346  014B70  5CDE               	subwf	postinc2,w,c
 29347  014B72  0EF5               	movlw	-11
 29348  014B74  50E3               	movf	plusw1,w,c
 29349  014B76  58DE               	subwfb	postinc2,w,c
 29350  014B78  0EF6               	movlw	-10
 29351  014B7A  50E3               	movf	plusw1,w,c
 29352  014B7C  58DE               	subwfb	postinc2,w,c
 29353  014B7E  50DE               	movf	postinc2,w,c
 29354  014B80  0A80               	xorlw	128
 29355  014B82  6E01               	movwf	btemp^0,c
 29356  014B84  0EF7               	movlw	-9
 29357  014B86  50E3               	movf	plusw1,w,c
 29358  014B88  0A80               	xorlw	128
 29359  014B8A  5801               	subwfb	btemp^0,w,c
 29360  014B8C  B0D8               	btfsc	status,0,c
 29361  014B8E  D053               	goto	l8193
 29362                           
 29363                           ;stkvar	_b @ sp[(-4)+-4]
 29364                           ;stkvar	_a @ sp[(-4)+-8]
 29365  014B90  0EF4               	movlw	-12
 29366  014B92  006F FF8C  F009    	movff	plusw1,btemp+8
 29367  014B98  0EF5               	movlw	-11
 29368  014B9A  006F FF8C  F00A    	movff	plusw1,btemp+9
 29369  014BA0  0EF6               	movlw	-10
 29370  014BA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 29371  014BA8  0EF7               	movlw	-9
 29372  014BAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29373  014BB0  0EF8               	movlw	-8
 29374  014BB2  50E3               	movf	plusw1,w,c
 29375  014BB4  5E09               	subwf	(btemp+8)^0,f,c
 29376  014BB6  0EF9               	movlw	-7
 29377  014BB8  50E3               	movf	plusw1,w,c
 29378  014BBA  5A0A               	subwfb	(btemp+9)^0,f,c
 29379  014BBC  0EFA               	movlw	-6
 29380  014BBE  50E3               	movf	plusw1,w,c
 29381  014BC0  5A0B               	subwfb	(btemp+10)^0,f,c
 29382  014BC2  0EFB               	movlw	-5
 29383  014BC4  50E3               	movf	plusw1,w,c
 29384  014BC6  5A0C               	subwfb	(btemp+11)^0,f,c
 29385  014BC8  0EFF               	movlw	255
 29386  014BCA  2409               	addwf	(btemp+8)^0,w,c
 29387  014BCC  6E05               	movwf	(btemp+4)^0,c
 29388  014BCE  0EFF               	movlw	255
 29389  014BD0  200A               	addwfc	(btemp+9)^0,w,c
 29390  014BD2  6E06               	movwf	(btemp+5)^0,c
 29391  014BD4  0EFF               	movlw	255
 29392  014BD6  200B               	addwfc	(btemp+10)^0,w,c
 29393  014BD8  6E07               	movwf	(btemp+6)^0,c
 29394  014BDA  0EFF               	movlw	255
 29395  014BDC  200C               	addwfc	(btemp+11)^0,w,c
 29396  014BDE  6E08               	movwf	(btemp+7)^0,c
 29397                           
 29398                           ;stkvar	_b @ sp[(-4)+-4]
 29399  014BE0  0EF8               	movlw	-8
 29400  014BE2  0060  F017  FFE3   	movff	btemp+4,plusw1
 29401  014BE8  0EF9               	movlw	-7
 29402  014BEA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29403  014BF0  0EFA               	movlw	-6
 29404  014BF2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29405  014BF8  0EFB               	movlw	-5
 29406  014BFA  0060  F023  FFE3   	movff	btemp+7,plusw1
 29407                           
 29408                           ;stkvar	_signs @ sp[(-4)+3]
 29409  014C00  0EFF               	movlw	-1
 29410  014C02  7EE3               	btg	plusw1,7,c
 29411                           
 29412                           ;stkvar	_grs @ sp[(-4)+0]
 29413  014C04  0EFC               	movlw	-4
 29414  014C06  50E3               	movf	plusw1,w,c
 29415  014C08  0800               	sublw	0
 29416  014C0A  6E0C               	movwf	(btemp+11)^0,c
 29417                           
 29418                           ;stkvar	_grs @ sp[(-4)+0]
 29419  014C0C  0EFC               	movlw	-4
 29420  014C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29421                           
 29422                           ;stkvar	_grs @ sp[(-4)+0]
 29423  014C14  0EFC               	movlw	-4
 29424  014C16  50E3               	movf	plusw1,w,c
 29425  014C18  A4D8               	btfss	status,2,c
 29426  014C1A  D020               	goto	l8195
 29427                           
 29428                           ;stkvar	_b @ sp[(-4)+-4]
 29429  014C1C  50E1               	movf	fsr1l,w,c
 29430  014C1E  0FF8               	addlw	-8
 29431  014C20  6ED9               	movwf	fsr2l,c
 29432  014C22  50E2               	movf	fsr1h,w,c
 29433  014C24  6EDA               	movwf	fsr2h,c
 29434  014C26  0EFF               	movlw	255
 29435  014C28  22DA               	addwfc	fsr2h,f,c
 29436  014C2A  2ADE               	incf	postinc2,f,c
 29437  014C2C  0E00               	movlw	0
 29438  014C2E  22DE               	addwfc	postinc2,f,c
 29439  014C30  22DE               	addwfc	postinc2,f,c
 29440  014C32  22DE               	addwfc	postinc2,f,c
 29441  014C34  D013               	goto	l8195
 29442  014C36                     l8193:
 29443                           
 29444                           ;stkvar	_a @ sp[(-4)+-8]
 29445                           ;stkvar	_b @ sp[(-4)+-4]
 29446  014C36  50E1               	movf	fsr1l,w,c
 29447  014C38  0FF8               	addlw	-8
 29448  014C3A  6ED9               	movwf	fsr2l,c
 29449  014C3C  50E2               	movf	fsr1h,w,c
 29450  014C3E  6EDA               	movwf	fsr2h,c
 29451  014C40  0EFF               	movlw	255
 29452  014C42  22DA               	addwfc	fsr2h,f,c
 29453  014C44  0EF4               	movlw	-12
 29454  014C46  50E3               	movf	plusw1,w,c
 29455  014C48  5EDE               	subwf	postinc2,f,c
 29456  014C4A  0EF5               	movlw	-11
 29457  014C4C  50E3               	movf	plusw1,w,c
 29458  014C4E  5ADE               	subwfb	postinc2,f,c
 29459  014C50  0EF6               	movlw	-10
 29460  014C52  50E3               	movf	plusw1,w,c
 29461  014C54  5ADE               	subwfb	postinc2,f,c
 29462  014C56  0EF7               	movlw	-9
 29463  014C58  50E3               	movf	plusw1,w,c
 29464  014C5A  5ADE               	subwfb	postinc2,f,c
 29465  014C5C                     l8195:
 29466                           
 29467                           ;stkvar	_b @ sp[(-4)+-4]
 29468  014C5C  0EF8               	movlw	-8
 29469  014C5E  50E3               	movf	plusw1,w,c
 29470  014C60  E145               	bnz	l8217
 29471  014C62  0EF9               	movlw	-7
 29472  014C64  50E3               	movf	plusw1,w,c
 29473  014C66  E142               	bnz	l8217
 29474  014C68  0EFA               	movlw	-6
 29475  014C6A  50E3               	movf	plusw1,w,c
 29476  014C6C  E13F               	bnz	l8217
 29477  014C6E  0EFB               	movlw	-5
 29478  014C70  50E3               	movf	plusw1,w,c
 29479  014C72  A4D8               	btfss	status,2,c
 29480  014C74  D03B               	goto	l8217
 29481                           
 29482                           ;stkvar	_grs @ sp[(-4)+0]
 29483  014C76  0EFC               	movlw	-4
 29484  014C78  50E3               	movf	plusw1,w,c
 29485  014C7A  A4D8               	btfss	status,2,c
 29486  014C7C  D037               	goto	l8217
 29487  014C7E                     u5940:
 29488  014C7E  0E00               	movlw	0
 29489  014C80  6E01               	movwf	btemp^0,c
 29490  014C82  0E00               	movlw	0
 29491  014C84  6E02               	movwf	(btemp+1)^0,c
 29492  014C86  0E00               	movlw	0
 29493  014C88  6E03               	movwf	(btemp+2)^0,c
 29494  014C8A  0E00               	movlw	0
 29495  014C8C  6E04               	movwf	(btemp+3)^0,c
 29496  014C8E  D0C6               	goto	l3053
 29497  014C90                     l8203:
 29498                           
 29499                           ;stkvar	_b @ sp[(-4)+-4]
 29500  014C90  90D8               	bcf	status,0,c
 29501  014C92  0EF8               	movlw	-8
 29502  014C94  36E3               	rlcf	plusw1,f,c
 29503  014C96  0EF9               	movlw	-7
 29504  014C98  36E3               	rlcf	plusw1,f,c
 29505  014C9A  0EFA               	movlw	-6
 29506  014C9C  36E3               	rlcf	plusw1,f,c
 29507  014C9E  0EFB               	movlw	-5
 29508  014CA0  36E3               	rlcf	plusw1,f,c
 29509                           
 29510                           ;stkvar	_grs @ sp[(-4)+0]
 29511  014CA2  0EFC               	movlw	-4
 29512  014CA4  AEE3               	btfss	plusw1,7,c
 29513  014CA6  D002               	goto	l3065
 29514                           
 29515                           ;stkvar	_b @ sp[(-4)+-4]
 29516  014CA8  0EF8               	movlw	-8
 29517  014CAA  80E3               	bsf	plusw1,0,c
 29518  014CAC                     l3065:
 29519                           
 29520                           ;stkvar	_grs @ sp[(-4)+0]
 29521  014CAC  0EFC               	movlw	-4
 29522  014CAE  A0E3               	btfss	plusw1,0,c
 29523  014CB0  D00E               	goto	l8211
 29524                           
 29525                           ;stkvar	_grs @ sp[(-4)+0]
 29526  014CB2  0EFC               	movlw	-4
 29527  014CB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29528  014CBA  90D8               	bcf	status,0,c
 29529  014CBC  340C               	rlcf	(btemp+11)^0,w,c
 29530  014CBE  6E0B               	movwf	(btemp+10)^0,c
 29531  014CC0  0E01               	movlw	1
 29532  014CC2  120B               	iorwf	(btemp+10)^0,f,c
 29533                           
 29534                           ;stkvar	_grs @ sp[(-4)+0]
 29535  014CC4  0EFC               	movlw	-4
 29536  014CC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29537  014CCC  D009               	goto	l8213
 29538  014CCE                     l8211:
 29539                           
 29540                           ;stkvar	_grs @ sp[(-4)+0]
 29541  014CCE  50E1               	movf	fsr1l,w,c
 29542  014CD0  0FFC               	addlw	-4
 29543  014CD2  6ED9               	movwf	fsr2l,c
 29544  014CD4  50E2               	movf	fsr1h,w,c
 29545  014CD6  6EDA               	movwf	fsr2h,c
 29546  014CD8  0EFF               	movlw	255
 29547  014CDA  22DA               	addwfc	fsr2h,f,c
 29548  014CDC  90D8               	bcf	status,0,c
 29549  014CDE  36DF               	rlcf	indf2,f,c
 29550  014CE0                     l8213:
 29551                           
 29552                           ;stkvar	_bexp @ sp[(-4)+1]
 29553  014CE0  0EFD               	movlw	-3
 29554  014CE2  50E3               	movf	plusw1,w,c
 29555  014CE4  B4D8               	btfsc	status,2,c
 29556  014CE6  D002               	goto	l8217
 29557                           
 29558                           ;stkvar	_bexp @ sp[(-4)+1]
 29559  014CE8  0EFD               	movlw	-3
 29560  014CEA  06E3               	decf	plusw1,f,c
 29561  014CEC                     l8217:
 29562                           
 29563                           ;stkvar	_b @ sp[(-4)+-4]
 29564  014CEC  0EFA               	movlw	-6
 29565  014CEE  AEE3               	btfss	plusw1,7,c
 29566  014CF0  D7CF               	goto	l8203
 29567  014CF2                     u5980:
 29568                           
 29569                           ;stkvar	_aexp @ sp[(-4)+2]
 29570  014CF2  0EFE               	movlw	-2
 29571  014CF4  6AE3               	clrf	plusw1,c
 29572                           
 29573                           ;stkvar	_grs @ sp[(-4)+0]
 29574  014CF6  0EFC               	movlw	-4
 29575  014CF8  AEE3               	btfss	plusw1,7,c
 29576  014CFA  D00F               	goto	l8231
 29577                           
 29578                           ;stkvar	_grs @ sp[(-4)+0]
 29579  014CFC  0EFC               	movlw	-4
 29580  014CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29581  014D04  0E7F               	movlw	127
 29582  014D06  160C               	andwf	(btemp+11)^0,f,c
 29583  014D08  B4D8               	btfsc	status,2,c
 29584  014D0A  D004               	goto	l8227
 29585  014D0C                     u6000:
 29586                           
 29587                           ;stkvar	_aexp @ sp[(-4)+2]
 29588  014D0C  0EFE               	movlw	-2
 29589  014D0E  6AE3               	clrf	plusw1,c
 29590  014D10  2AE3               	incf	plusw1,f,c
 29591  014D12  D003               	goto	l8231
 29592  014D14                     l8227:
 29593                           
 29594                           ;stkvar	_b @ sp[(-4)+-4]
 29595  014D14  0EF8               	movlw	-8
 29596  014D16  B0E3               	btfsc	plusw1,0,c
 29597  014D18  D7F9               	goto	u6000
 29598  014D1A                     l8231:
 29599                           
 29600                           ;stkvar	_aexp @ sp[(-4)+2]
 29601  014D1A  0EFE               	movlw	-2
 29602  014D1C  50E3               	movf	plusw1,w,c
 29603  014D1E  B4D8               	btfsc	status,2,c
 29604  014D20  D02B               	goto	l8243
 29605                           
 29606                           ;stkvar	_b @ sp[(-4)+-4]
 29607  014D22  50E1               	movf	fsr1l,w,c
 29608  014D24  0FF8               	addlw	-8
 29609  014D26  6ED9               	movwf	fsr2l,c
 29610  014D28  50E2               	movf	fsr1h,w,c
 29611  014D2A  6EDA               	movwf	fsr2h,c
 29612  014D2C  0EFF               	movlw	255
 29613  014D2E  22DA               	addwfc	fsr2h,f,c
 29614  014D30  2ADE               	incf	postinc2,f,c
 29615  014D32  0E00               	movlw	0
 29616  014D34  22DE               	addwfc	postinc2,f,c
 29617  014D36  22DE               	addwfc	postinc2,f,c
 29618  014D38  22DE               	addwfc	postinc2,f,c
 29619                           
 29620                           ;stkvar	_b @ sp[(-4)+-4]
 29621  014D3A  0EFB               	movlw	-5
 29622  014D3C  A0E3               	btfss	plusw1,0,c
 29623  014D3E  D01C               	goto	l8243
 29624  014D40  0E01               	movlw	1
 29625  014D42  6E0C               	movwf	(btemp+11)^0,c
 29626                           
 29627                           ;stkvar	_b @ sp[(-4)+-4]
 29628  014D44  50E1               	movf	fsr1l,w,c
 29629  014D46  0FF8               	addlw	-8
 29630  014D48  6ED9               	movwf	fsr2l,c
 29631  014D4A  50E2               	movf	fsr1h,w,c
 29632  014D4C  6EDA               	movwf	fsr2h,c
 29633  014D4E  0EFF               	movlw	255
 29634  014D50  22DA               	addwfc	fsr2h,f,c
 29635  014D52  280C               	incf	(btemp+11)^0,w,c
 29636  014D54  52DE               	movf	postinc2,f,c
 29637  014D56  D008               	goto	u6040
 29638  014D58                     u6045:
 29639  014D58  52DE               	movf	postinc2,f,c
 29640  014D5A  90D8               	bcf	status,0,c
 29641  014D5C  BEDC               	btfsc	preinc2,7,c
 29642  014D5E  80D8               	bsf	status,0,c
 29643  014D60  32DD               	rrcf	postdec2,f,c
 29644  014D62  32DD               	rrcf	postdec2,f,c
 29645  014D64  32DD               	rrcf	postdec2,f,c
 29646  014D66  32DE               	rrcf	postinc2,f,c
 29647  014D68                     u6040:
 29648  014D68  2EE8               	decfsz	wreg,f,c
 29649  014D6A  D7F6               	goto	u6045
 29650                           
 29651                           ;stkvar	_bexp @ sp[(-4)+1]
 29652  014D6C  0EFD               	movlw	-3
 29653  014D6E  28E3               	incf	plusw1,w,c
 29654  014D70  B4D8               	btfsc	status,2,c
 29655  014D72  D002               	goto	l8243
 29656                           
 29657                           ;stkvar	_bexp @ sp[(-4)+1]
 29658  014D74  0EFD               	movlw	-3
 29659  014D76  2AE3               	incf	plusw1,f,c
 29660  014D78                     l8243:
 29661                           
 29662                           ;stkvar	_bexp @ sp[(-4)+1]
 29663  014D78  0EFD               	movlw	-3
 29664  014D7A  28E3               	incf	plusw1,w,c
 29665  014D7C  B4D8               	btfsc	status,2,c
 29666  014D7E  D004               	goto	u6070
 29667                           
 29668                           ;stkvar	_bexp @ sp[(-4)+1]
 29669  014D80  0EFD               	movlw	-3
 29670  014D82  50E3               	movf	plusw1,w,c
 29671  014D84  A4D8               	btfss	status,2,c
 29672  014D86  D00E               	goto	l8253
 29673  014D88                     u6070:
 29674                           
 29675                           ;stkvar	_b @ sp[(-4)+-4]
 29676  014D88  0EF8               	movlw	-8
 29677  014D8A  6AE3               	clrf	plusw1,c
 29678  014D8C  0EF9               	movlw	-7
 29679  014D8E  6AE3               	clrf	plusw1,c
 29680  014D90  0EFA               	movlw	-6
 29681  014D92  6AE3               	clrf	plusw1,c
 29682  014D94  0EFB               	movlw	-5
 29683  014D96  6AE3               	clrf	plusw1,c
 29684                           
 29685                           ;stkvar	_bexp @ sp[(-4)+1]
 29686  014D98  0EFD               	movlw	-3
 29687  014D9A  50E3               	movf	plusw1,w,c
 29688  014D9C  A4D8               	btfss	status,2,c
 29689  014D9E  D002               	goto	l8253
 29690                           
 29691                           ;stkvar	_signs @ sp[(-4)+3]
 29692  014DA0  0EFF               	movlw	-1
 29693  014DA2  6AE3               	clrf	plusw1,c
 29694  014DA4                     l8253:
 29695                           
 29696                           ;stkvar	_bexp @ sp[(-4)+1]
 29697  014DA4  0EFD               	movlw	-3
 29698  014DA6  A0E3               	btfss	plusw1,0,c
 29699  014DA8  D009               	goto	l8257
 29700                           
 29701                           ;stkvar	_b @ sp[(-4)+-4]
 29702  014DAA  0EFA               	movlw	250
 29703  014DAC  24E1               	addwf	fsr1l,w,c
 29704  014DAE  6ED9               	movwf	fsr2l,c
 29705  014DB0  0EFF               	movlw	255
 29706  014DB2  20E2               	addwfc	fsr1h,w,c
 29707  014DB4  6EDA               	movwf	fsr2h,c
 29708  014DB6  0E00               	movlw	0
 29709  014DB8  8EDB               	bsf	plusw2,7,c
 29710  014DBA  D008               	goto	l8259
 29711  014DBC                     l8257:
 29712                           
 29713                           ;stkvar	_b @ sp[(-4)+-4]
 29714  014DBC  0EFA               	movlw	250
 29715  014DBE  24E1               	addwf	fsr1l,w,c
 29716  014DC0  6ED9               	movwf	fsr2l,c
 29717  014DC2  0EFF               	movlw	255
 29718  014DC4  20E2               	addwfc	fsr1h,w,c
 29719  014DC6  6EDA               	movwf	fsr2h,c
 29720  014DC8  0E7F               	movlw	127
 29721  014DCA  16DF               	andwf	indf2,f,c
 29722  014DCC                     l8259:
 29723                           
 29724                           ;stkvar	_b @ sp[(-4)+-4]
 29725  014DCC  0EFB               	movlw	251
 29726  014DCE  24E1               	addwf	fsr1l,w,c
 29727  014DD0  6ED9               	movwf	fsr2l,c
 29728  014DD2  0EFF               	movlw	255
 29729  014DD4  20E2               	addwfc	fsr1h,w,c
 29730  014DD6  6EDA               	movwf	fsr2h,c
 29731                           
 29732                           ;stkvar	_bexp @ sp[(-4)+1]
 29733  014DD8  0EFD               	movlw	-3
 29734  014DDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29735  014DE0  90D8               	bcf	status,0,c
 29736  014DE2  300C               	rrcf	(btemp+11)^0,w,c
 29737  014DE4  6EDF               	movwf	indf2,c
 29738                           
 29739                           ;stkvar	_signs @ sp[(-4)+3]
 29740  014DE6  0EFF               	movlw	-1
 29741  014DE8  AEE3               	btfss	plusw1,7,c
 29742  014DEA  D008               	goto	l8265
 29743                           
 29744                           ;stkvar	_b @ sp[(-4)+-4]
 29745  014DEC  0EFB               	movlw	251
 29746  014DEE  24E1               	addwf	fsr1l,w,c
 29747  014DF0  6ED9               	movwf	fsr2l,c
 29748  014DF2  0EFF               	movlw	255
 29749  014DF4  20E2               	addwfc	fsr1h,w,c
 29750  014DF6  6EDA               	movwf	fsr2h,c
 29751  014DF8  0E00               	movlw	0
 29752  014DFA  8EDB               	bsf	plusw2,7,c
 29753  014DFC                     l8265:
 29754                           
 29755                           ;stkvar	_b @ sp[(-4)+-4]
 29756  014DFC  0EF8               	movlw	-8
 29757  014DFE  006F FF8C  F001    	movff	plusw1,btemp
 29758  014E04  0EF9               	movlw	-7
 29759  014E06  006F FF8C  F002    	movff	plusw1,btemp+1
 29760  014E0C  0EFA               	movlw	-6
 29761  014E0E  006F FF8C  F003    	movff	plusw1,btemp+2
 29762  014E14  0EFB               	movlw	-5
 29763  014E16  006F FF8C  F004    	movff	plusw1,btemp+3
 29764  014E1C                     l3053:
 29765                           
 29766                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 29767  014E1C  0EF4               	movlw	244
 29768  014E1E  26E1               	addwf	fsr1l,f,c
 29769  014E20  0EFF               	movlw	255
 29770  014E22  22E2               	addwfc	fsr1h,f,c
 29771  014E24  0012               	return		;funcret
 29772  014E26                     __end_of___fladd:
 29773                           	opt callstack 0
 29774                           
 29775 ;; *************** function ___flmul *****************
 29776 ;; Defined at:
 29777 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 29778 ;; Parameters:    Size  Location     Type
 29779 ;;  b               4  [STACK] unsigned char 
 29780 ;;  a               4  [STACK] unsigned char 
 29781 ;; Auto vars:     Size  Location     Type
 29782 ;;  prod            4  [STACK] struct .
 29783 ;;  grs             4  [STACK] unsigned long 
 29784 ;;  temp            2  [STACK] struct .
 29785 ;;  bexp            1  [STACK] unsigned char 
 29786 ;;  aexp            1  [STACK] unsigned char 
 29787 ;;  sign            1  [STACK] unsigned char 
 29788 ;; Return value:  Size  Location     Type
 29789 ;;                  4  [STACK] unsigned char 
 29790 ;; Registers used:
 29791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29792 ;; Tracked objects:
 29793 ;;		On entry : 0/0
 29794 ;;		On exit  : 0/0
 29795 ;;		Unchanged: 0/0
 29796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29801 ;;Total ram usage:        0 bytes
 29802 ;; Hardware stack levels used:    1
 29803 ;; Hardware stack levels required when called:   15
 29804 ;; This function calls:
 29805 ;;		Nothing
 29806 ;; This function is called by:
 29807 ;;		_conv_raw_result
 29808 ;;		_lp_filter
 29809 ;;		_calc_model_data
 29810 ;;		_calc_bsoc
 29811 ;;		_init_bsoc
 29812 ;;		_efgtoa
 29813 ;; This function uses a reentrant model
 29814 ;;
 29815                           
 29816                           	psect	text116
 29817  013E40                     __ptext116:
 29818                           	opt callstack 0
 29819  013E40                     ___flmul:
 29820                           	opt callstack 0
 29821                           
 29822                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29823  013E40  0E0D               	movlw	13
 29824  013E42  26E1               	addwf	fsr1l,f,c
 29825  013E44  0E00               	movlw	0
 29826  013E46  22E2               	addwfc	fsr1h,f,c
 29827                           
 29828                           ;stkvar	_b @ sp[(-13)+-4]
 29829                           
 29830                           ;incstack = 0
 29831 ;; hardware stack exceeded
 29832  013E48  0EF2               	movlw	242
 29833  013E4A  24E1               	addwf	fsr1l,w,c
 29834  013E4C  6ED9               	movwf	fsr2l,c
 29835  013E4E  0EFF               	movlw	255
 29836  013E50  20E2               	addwfc	fsr1h,w,c
 29837  013E52  6EDA               	movwf	fsr2h,c
 29838  013E54  50DF               	movf	indf2,w,c
 29839  013E56  6E0C               	movwf	(btemp+11)^0,c
 29840  013E58  0E80               	movlw	128
 29841  013E5A  160C               	andwf	(btemp+11)^0,f,c
 29842                           
 29843                           ;stkvar	_sign @ sp[(-13)+12]
 29844  013E5C  0EFF               	movlw	-1
 29845  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29846                           
 29847                           ;stkvar	_b @ sp[(-13)+-4]
 29848  013E64  0EF2               	movlw	242
 29849  013E66  24E1               	addwf	fsr1l,w,c
 29850  013E68  6ED9               	movwf	fsr2l,c
 29851  013E6A  0EFF               	movlw	255
 29852  013E6C  20E2               	addwfc	fsr1h,w,c
 29853  013E6E  6EDA               	movwf	fsr2h,c
 29854  013E70  50DF               	movf	indf2,w,c
 29855  013E72  6E0C               	movwf	(btemp+11)^0,c
 29856  013E74  90D8               	bcf	status,0,c
 29857  013E76  340C               	rlcf	(btemp+11)^0,w,c
 29858  013E78  6E0B               	movwf	(btemp+10)^0,c
 29859                           
 29860                           ;stkvar	_bexp @ sp[(-13)+10]
 29861  013E7A  0EFD               	movlw	-3
 29862  013E7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29863                           
 29864                           ;stkvar	_b @ sp[(-13)+-4]
 29865  013E82  0EF1               	movlw	241
 29866  013E84  24E1               	addwf	fsr1l,w,c
 29867  013E86  6ED9               	movwf	fsr2l,c
 29868  013E88  0EFF               	movlw	255
 29869  013E8A  20E2               	addwfc	fsr1h,w,c
 29870  013E8C  6EDA               	movwf	fsr2h,c
 29871  013E8E  AEDF               	btfss	indf2,7,c
 29872  013E90  D002               	goto	l8691
 29873                           
 29874                           ;stkvar	_bexp @ sp[(-13)+10]
 29875  013E92  0EFD               	movlw	-3
 29876  013E94  80E3               	bsf	plusw1,0,c
 29877  013E96                     l8691:
 29878                           
 29879                           ;stkvar	_bexp @ sp[(-13)+10]
 29880  013E96  0EFD               	movlw	-3
 29881  013E98  50E3               	movf	plusw1,w,c
 29882  013E9A  B4D8               	btfsc	status,2,c
 29883  013E9C  D01F               	goto	l8699
 29884                           
 29885                           ;stkvar	_bexp @ sp[(-13)+10]
 29886  013E9E  0EFD               	movlw	-3
 29887  013EA0  28E3               	incf	plusw1,w,c
 29888  013EA2  A4D8               	btfss	status,2,c
 29889  013EA4  D018               	goto	l8697
 29890  013EA6  0E00               	movlw	0
 29891  013EA8  6E09               	movwf	(btemp+8)^0,c
 29892  013EAA  0E00               	movlw	0
 29893  013EAC  6E0A               	movwf	(btemp+9)^0,c
 29894  013EAE  0E00               	movlw	0
 29895  013EB0  6E0B               	movwf	(btemp+10)^0,c
 29896  013EB2  0E00               	movlw	0
 29897  013EB4  6E0C               	movwf	(btemp+11)^0,c
 29898                           
 29899                           ;stkvar	_b @ sp[(-13)+-4]
 29900  013EB6  0EEF               	movlw	-17
 29901  013EB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 29902  013EBE  0EF0               	movlw	-16
 29903  013EC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29904  013EC6  0EF1               	movlw	-15
 29905  013EC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29906  013ECE  0EF2               	movlw	-14
 29907  013ED0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29908  013ED6                     l8697:
 29909                           
 29910                           ;stkvar	_b @ sp[(-13)+-4]
 29911  013ED6  0EF1               	movlw	-15
 29912  013ED8  8EE3               	bsf	plusw1,7,c
 29913  013EDA  D018               	goto	l8701
 29914  013EDC                     l8699:
 29915  013EDC  0E00               	movlw	0
 29916  013EDE  6E09               	movwf	(btemp+8)^0,c
 29917  013EE0  0E00               	movlw	0
 29918  013EE2  6E0A               	movwf	(btemp+9)^0,c
 29919  013EE4  0E00               	movlw	0
 29920  013EE6  6E0B               	movwf	(btemp+10)^0,c
 29921  013EE8  0E00               	movlw	0
 29922  013EEA  6E0C               	movwf	(btemp+11)^0,c
 29923                           
 29924                           ;stkvar	_b @ sp[(-13)+-4]
 29925  013EEC  0EEF               	movlw	-17
 29926  013EEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29927  013EF4  0EF0               	movlw	-16
 29928  013EF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29929  013EFC  0EF1               	movlw	-15
 29930  013EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29931  013F04  0EF2               	movlw	-14
 29932  013F06  0060  F033  FFE3   	movff	btemp+11,plusw1
 29933  013F0C                     l8701:
 29934                           
 29935                           ;stkvar	_a @ sp[(-13)+-8]
 29936  013F0C  0EEE               	movlw	238
 29937  013F0E  24E1               	addwf	fsr1l,w,c
 29938  013F10  6ED9               	movwf	fsr2l,c
 29939  013F12  0EFF               	movlw	255
 29940  013F14  20E2               	addwfc	fsr1h,w,c
 29941  013F16  6EDA               	movwf	fsr2h,c
 29942  013F18  50DF               	movf	indf2,w,c
 29943  013F1A  6E0C               	movwf	(btemp+11)^0,c
 29944  013F1C  0E80               	movlw	128
 29945  013F1E  160C               	andwf	(btemp+11)^0,f,c
 29946                           
 29947                           ;stkvar	_sign @ sp[(-13)+12]
 29948  013F20  50E1               	movf	fsr1l,w,c
 29949  013F22  0FFF               	addlw	-1
 29950  013F24  6ED9               	movwf	fsr2l,c
 29951  013F26  50E2               	movf	fsr1h,w,c
 29952  013F28  6EDA               	movwf	fsr2h,c
 29953  013F2A  0EFF               	movlw	255
 29954  013F2C  22DA               	addwfc	fsr2h,f,c
 29955  013F2E  500C               	movf	(btemp+11)^0,w,c
 29956  013F30  1ADF               	xorwf	indf2,f,c
 29957                           
 29958                           ;stkvar	_a @ sp[(-13)+-8]
 29959  013F32  0EEE               	movlw	238
 29960  013F34  24E1               	addwf	fsr1l,w,c
 29961  013F36  6ED9               	movwf	fsr2l,c
 29962  013F38  0EFF               	movlw	255
 29963  013F3A  20E2               	addwfc	fsr1h,w,c
 29964  013F3C  6EDA               	movwf	fsr2h,c
 29965  013F3E  50DF               	movf	indf2,w,c
 29966  013F40  6E0C               	movwf	(btemp+11)^0,c
 29967  013F42  90D8               	bcf	status,0,c
 29968  013F44  340C               	rlcf	(btemp+11)^0,w,c
 29969  013F46  6E0B               	movwf	(btemp+10)^0,c
 29970                           
 29971                           ;stkvar	_aexp @ sp[(-13)+11]
 29972  013F48  0EFE               	movlw	-2
 29973  013F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29974                           
 29975                           ;stkvar	_a @ sp[(-13)+-8]
 29976  013F50  0EED               	movlw	237
 29977  013F52  24E1               	addwf	fsr1l,w,c
 29978  013F54  6ED9               	movwf	fsr2l,c
 29979  013F56  0EFF               	movlw	255
 29980  013F58  20E2               	addwfc	fsr1h,w,c
 29981  013F5A  6EDA               	movwf	fsr2h,c
 29982  013F5C  AEDF               	btfss	indf2,7,c
 29983  013F5E  D002               	goto	l8709
 29984                           
 29985                           ;stkvar	_aexp @ sp[(-13)+11]
 29986  013F60  0EFE               	movlw	-2
 29987  013F62  80E3               	bsf	plusw1,0,c
 29988  013F64                     l8709:
 29989                           
 29990                           ;stkvar	_aexp @ sp[(-13)+11]
 29991  013F64  0EFE               	movlw	-2
 29992  013F66  50E3               	movf	plusw1,w,c
 29993  013F68  B4D8               	btfsc	status,2,c
 29994  013F6A  D01F               	goto	l8717
 29995                           
 29996                           ;stkvar	_aexp @ sp[(-13)+11]
 29997  013F6C  0EFE               	movlw	-2
 29998  013F6E  28E3               	incf	plusw1,w,c
 29999  013F70  A4D8               	btfss	status,2,c
 30000  013F72  D018               	goto	l8715
 30001  013F74  0E00               	movlw	0
 30002  013F76  6E09               	movwf	(btemp+8)^0,c
 30003  013F78  0E00               	movlw	0
 30004  013F7A  6E0A               	movwf	(btemp+9)^0,c
 30005  013F7C  0E00               	movlw	0
 30006  013F7E  6E0B               	movwf	(btemp+10)^0,c
 30007  013F80  0E00               	movlw	0
 30008  013F82  6E0C               	movwf	(btemp+11)^0,c
 30009                           
 30010                           ;stkvar	_a @ sp[(-13)+-8]
 30011  013F84  0EEB               	movlw	-21
 30012  013F86  0060  F027  FFE3   	movff	btemp+8,plusw1
 30013  013F8C  0EEC               	movlw	-20
 30014  013F8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30015  013F94  0EED               	movlw	-19
 30016  013F96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30017  013F9C  0EEE               	movlw	-18
 30018  013F9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30019  013FA4                     l8715:
 30020                           
 30021                           ;stkvar	_a @ sp[(-13)+-8]
 30022  013FA4  0EED               	movlw	-19
 30023  013FA6  8EE3               	bsf	plusw1,7,c
 30024  013FA8  D018               	goto	l8719
 30025  013FAA                     l8717:
 30026  013FAA  0E00               	movlw	0
 30027  013FAC  6E09               	movwf	(btemp+8)^0,c
 30028  013FAE  0E00               	movlw	0
 30029  013FB0  6E0A               	movwf	(btemp+9)^0,c
 30030  013FB2  0E00               	movlw	0
 30031  013FB4  6E0B               	movwf	(btemp+10)^0,c
 30032  013FB6  0E00               	movlw	0
 30033  013FB8  6E0C               	movwf	(btemp+11)^0,c
 30034                           
 30035                           ;stkvar	_a @ sp[(-13)+-8]
 30036  013FBA  0EEB               	movlw	-21
 30037  013FBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 30038  013FC2  0EEC               	movlw	-20
 30039  013FC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30040  013FCA  0EED               	movlw	-19
 30041  013FCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30042  013FD2  0EEE               	movlw	-18
 30043  013FD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 30044  013FDA                     l8719:
 30045                           
 30046                           ;stkvar	_aexp @ sp[(-13)+11]
 30047  013FDA  0EFE               	movlw	-2
 30048  013FDC  50E3               	movf	plusw1,w,c
 30049  013FDE  B4D8               	btfsc	status,2,c
 30050  013FE0  D004               	goto	u7060
 30051                           
 30052                           ;stkvar	_bexp @ sp[(-13)+10]
 30053  013FE2  0EFD               	movlw	-3
 30054  013FE4  50E3               	movf	plusw1,w,c
 30055  013FE6  A4D8               	btfss	status,2,c
 30056  013FE8  D009               	goto	l8727
 30057  013FEA                     u7060:
 30058  013FEA  0E00               	movlw	0
 30059  013FEC  6E01               	movwf	btemp^0,c
 30060  013FEE  0E00               	movlw	0
 30061  013FF0  6E02               	movwf	(btemp+1)^0,c
 30062  013FF2  0E00               	movlw	0
 30063  013FF4  6E03               	movwf	(btemp+2)^0,c
 30064  013FF6  0E00               	movlw	0
 30065  013FF8  6E04               	movwf	(btemp+3)^0,c
 30066  013FFA  D332               	goto	l3134
 30067  013FFC                     l8727:
 30068                           
 30069                           ;stkvar	_b @ sp[(-13)+-4]
 30070  013FFC  0EEF               	movlw	-17
 30071  013FFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 30072                           
 30073                           ;stkvar	_a @ sp[(-13)+-8]
 30074  014004  0EED               	movlw	237
 30075  014006  24E1               	addwf	fsr1l,w,c
 30076  014008  6ED9               	movwf	fsr2l,c
 30077  01400A  0EFF               	movlw	255
 30078  01400C  20E2               	addwfc	fsr1h,w,c
 30079  01400E  6EDA               	movwf	fsr2h,c
 30080  014010  50DF               	movf	indf2,w,c
 30081  014012  020C               	mulwf	(btemp+11)^0,c
 30082                           
 30083                           ;stkvar	_temp @ sp[(-13)+8]
 30084  014014  0EFB               	movlw	-5
 30085  014016  006F FFCF FFE3     	movff	prodl,plusw1
 30086  01401C  0EFC               	movlw	-4
 30087  01401E  006F FFD3 FFE3     	movff	prodh,plusw1
 30088                           
 30089                           ;stkvar	_temp @ sp[(-13)+8]
 30090  014024  0EFB               	movlw	-5
 30091  014026  006F FF8C  F00C    	movff	plusw1,btemp+11
 30092  01402C  0060  F030  F005   	movff	btemp+11,btemp+4
 30093  014032  6A06               	clrf	(btemp+5)^0,c
 30094  014034  6A07               	clrf	(btemp+6)^0,c
 30095  014036  6A08               	clrf	(btemp+7)^0,c
 30096                           
 30097                           ;stkvar	_grs @ sp[(-13)+4]
 30098  014038  0EF7               	movlw	-9
 30099  01403A  0060  F017  FFE3   	movff	btemp+4,plusw1
 30100  014040  0EF8               	movlw	-8
 30101  014042  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30102  014048  0EF9               	movlw	-7
 30103  01404A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30104  014050  0EFA               	movlw	-6
 30105  014052  0060  F023  FFE3   	movff	btemp+7,plusw1
 30106                           
 30107                           ;stkvar	_temp @ sp[(-13)+8]
 30108  014058  0EFC               	movlw	252
 30109  01405A  24E1               	addwf	fsr1l,w,c
 30110  01405C  6ED9               	movwf	fsr2l,c
 30111  01405E  0EFF               	movlw	255
 30112  014060  20E2               	addwfc	fsr1h,w,c
 30113  014062  6EDA               	movwf	fsr2h,c
 30114  014064  50DF               	movf	indf2,w,c
 30115  014066  6E0C               	movwf	(btemp+11)^0,c
 30116  014068  0060  F030  F005   	movff	btemp+11,btemp+4
 30117  01406E  6A06               	clrf	(btemp+5)^0,c
 30118  014070  6A07               	clrf	(btemp+6)^0,c
 30119  014072  6A08               	clrf	(btemp+7)^0,c
 30120                           
 30121                           ;stkvar	_prod @ sp[(-13)+0]
 30122  014074  0EF3               	movlw	-13
 30123  014076  0060  F017  FFE3   	movff	btemp+4,plusw1
 30124  01407C  0EF4               	movlw	-12
 30125  01407E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30126  014084  0EF5               	movlw	-11
 30127  014086  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30128  01408C  0EF6               	movlw	-10
 30129  01408E  0060  F023  FFE3   	movff	btemp+7,plusw1
 30130                           
 30131                           ;stkvar	_b @ sp[(-13)+-4]
 30132  014094  0EF0               	movlw	240
 30133  014096  24E1               	addwf	fsr1l,w,c
 30134  014098  6ED9               	movwf	fsr2l,c
 30135  01409A  0EFF               	movlw	255
 30136  01409C  20E2               	addwfc	fsr1h,w,c
 30137  01409E  6EDA               	movwf	fsr2h,c
 30138  0140A0  50DF               	movf	indf2,w,c
 30139  0140A2  6E0C               	movwf	(btemp+11)^0,c
 30140                           
 30141                           ;stkvar	_a @ sp[(-13)+-8]
 30142  0140A4  0EEC               	movlw	236
 30143  0140A6  24E1               	addwf	fsr1l,w,c
 30144  0140A8  6ED9               	movwf	fsr2l,c
 30145  0140AA  0EFF               	movlw	255
 30146  0140AC  20E2               	addwfc	fsr1h,w,c
 30147  0140AE  6EDA               	movwf	fsr2h,c
 30148  0140B0  50DF               	movf	indf2,w,c
 30149  0140B2  020C               	mulwf	(btemp+11)^0,c
 30150                           
 30151                           ;stkvar	_temp @ sp[(-13)+8]
 30152  0140B4  0EFB               	movlw	-5
 30153  0140B6  006F FFCF FFE3     	movff	prodl,plusw1
 30154  0140BC  0EFC               	movlw	-4
 30155  0140BE  006F FFD3 FFE3     	movff	prodh,plusw1
 30156                           
 30157                           ;stkvar	_grs @ sp[(-13)+4]
 30158  0140C4  50E1               	movf	fsr1l,w,c
 30159  0140C6  0FF7               	addlw	-9
 30160  0140C8  6ED9               	movwf	fsr2l,c
 30161  0140CA  50E2               	movf	fsr1h,w,c
 30162  0140CC  6EDA               	movwf	fsr2h,c
 30163  0140CE  0EFF               	movlw	255
 30164  0140D0  22DA               	addwfc	fsr2h,f,c
 30165                           
 30166                           ;stkvar	_temp @ sp[(-13)+8]
 30167  0140D2  0EFB               	movlw	-5
 30168  0140D4  50E3               	movf	plusw1,w,c
 30169  0140D6  26DE               	addwf	postinc2,f,c
 30170  0140D8  0E00               	movlw	0
 30171  0140DA  22DE               	addwfc	postinc2,f,c
 30172  0140DC  22DE               	addwfc	postinc2,f,c
 30173  0140DE  22DE               	addwfc	postinc2,f,c
 30174                           
 30175                           ;stkvar	_prod @ sp[(-13)+0]
 30176  0140E0  50E1               	movf	fsr1l,w,c
 30177  0140E2  0FF3               	addlw	-13
 30178  0140E4  6ED9               	movwf	fsr2l,c
 30179  0140E6  50E2               	movf	fsr1h,w,c
 30180  0140E8  6EDA               	movwf	fsr2h,c
 30181  0140EA  0EFF               	movlw	255
 30182  0140EC  22DA               	addwfc	fsr2h,f,c
 30183                           
 30184                           ;stkvar	_temp @ sp[(-13)+8]
 30185  0140EE  0EFC               	movlw	252
 30186  0140F0  24E1               	addwf	fsr1l,w,c
 30187  0140F2  6EE9               	movwf	fsr0l,c
 30188  0140F4  0EFF               	movlw	255
 30189  0140F6  20E2               	addwfc	fsr1h,w,c
 30190  0140F8  6EEA               	movwf	fsr0h,c
 30191  0140FA  50EF               	movf	indf0,w,c
 30192  0140FC  26DE               	addwf	postinc2,f,c
 30193  0140FE  0E00               	movlw	0
 30194  014100  22DE               	addwfc	postinc2,f,c
 30195  014102  22DE               	addwfc	postinc2,f,c
 30196  014104  22DE               	addwfc	postinc2,f,c
 30197                           
 30198                           ;stkvar	_b @ sp[(-13)+-4]
 30199  014106  0EF1               	movlw	241
 30200  014108  24E1               	addwf	fsr1l,w,c
 30201  01410A  6ED9               	movwf	fsr2l,c
 30202  01410C  0EFF               	movlw	255
 30203  01410E  20E2               	addwfc	fsr1h,w,c
 30204  014110  6EDA               	movwf	fsr2h,c
 30205  014112  50DF               	movf	indf2,w,c
 30206  014114  6E0C               	movwf	(btemp+11)^0,c
 30207                           
 30208                           ;stkvar	_a @ sp[(-13)+-8]
 30209  014116  0EEB               	movlw	-21
 30210  014118  50E3               	movf	plusw1,w,c
 30211  01411A  020C               	mulwf	(btemp+11)^0,c
 30212                           
 30213                           ;stkvar	_temp @ sp[(-13)+8]
 30214  01411C  0EFB               	movlw	-5
 30215  01411E  006F FFCF FFE3     	movff	prodl,plusw1
 30216  014124  0EFC               	movlw	-4
 30217  014126  006F FFD3 FFE3     	movff	prodh,plusw1
 30218                           
 30219                           ;stkvar	_grs @ sp[(-13)+4]
 30220  01412C  50E1               	movf	fsr1l,w,c
 30221  01412E  0FF7               	addlw	-9
 30222  014130  6ED9               	movwf	fsr2l,c
 30223  014132  50E2               	movf	fsr1h,w,c
 30224  014134  6EDA               	movwf	fsr2h,c
 30225  014136  0EFF               	movlw	255
 30226  014138  22DA               	addwfc	fsr2h,f,c
 30227                           
 30228                           ;stkvar	_temp @ sp[(-13)+8]
 30229  01413A  0EFB               	movlw	-5
 30230  01413C  50E3               	movf	plusw1,w,c
 30231  01413E  26DE               	addwf	postinc2,f,c
 30232  014140  0E00               	movlw	0
 30233  014142  22DE               	addwfc	postinc2,f,c
 30234  014144  22DE               	addwfc	postinc2,f,c
 30235  014146  22DE               	addwfc	postinc2,f,c
 30236                           
 30237                           ;stkvar	_prod @ sp[(-13)+0]
 30238  014148  50E1               	movf	fsr1l,w,c
 30239  01414A  0FF3               	addlw	-13
 30240  01414C  6ED9               	movwf	fsr2l,c
 30241  01414E  50E2               	movf	fsr1h,w,c
 30242  014150  6EDA               	movwf	fsr2h,c
 30243  014152  0EFF               	movlw	255
 30244  014154  22DA               	addwfc	fsr2h,f,c
 30245                           
 30246                           ;stkvar	_temp @ sp[(-13)+8]
 30247  014156  0EFC               	movlw	252
 30248  014158  24E1               	addwf	fsr1l,w,c
 30249  01415A  6EE9               	movwf	fsr0l,c
 30250  01415C  0EFF               	movlw	255
 30251  01415E  20E2               	addwfc	fsr1h,w,c
 30252  014160  6EEA               	movwf	fsr0h,c
 30253  014162  50EF               	movf	indf0,w,c
 30254  014164  26DE               	addwf	postinc2,f,c
 30255  014166  0E00               	movlw	0
 30256  014168  22DE               	addwfc	postinc2,f,c
 30257  01416A  22DE               	addwfc	postinc2,f,c
 30258  01416C  22DE               	addwfc	postinc2,f,c
 30259                           
 30260                           ;stkvar	_grs @ sp[(-13)+4]
 30261  01416E  50E1               	movf	fsr1l,w,c
 30262  014170  0FF7               	addlw	-9
 30263  014172  6ED9               	movwf	fsr2l,c
 30264  014174  50E2               	movf	fsr1h,w,c
 30265  014176  6EDA               	movwf	fsr2h,c
 30266  014178  0EFF               	movlw	255
 30267  01417A  22DA               	addwfc	fsr2h,f,c
 30268  01417C  0E08               	movlw	8
 30269  01417E                     u7075:
 30270  01417E  90D8               	bcf	status,0,c
 30271  014180  36DE               	rlcf	postinc2,f,c
 30272  014182  36DE               	rlcf	postinc2,f,c
 30273  014184  36DE               	rlcf	postinc2,f,c
 30274  014186  36DD               	rlcf	postdec2,f,c
 30275  014188  52DD               	movf	postdec2,f,c
 30276  01418A  52DD               	movf	postdec2,f,c
 30277  01418C  2EE8               	decfsz	wreg,f,c
 30278  01418E  D7F7               	goto	u7075
 30279                           
 30280                           ;stkvar	_b @ sp[(-13)+-4]
 30281  014190  0EF0               	movlw	240
 30282  014192  24E1               	addwf	fsr1l,w,c
 30283  014194  6ED9               	movwf	fsr2l,c
 30284  014196  0EFF               	movlw	255
 30285  014198  20E2               	addwfc	fsr1h,w,c
 30286  01419A  6EDA               	movwf	fsr2h,c
 30287  01419C  50DF               	movf	indf2,w,c
 30288  01419E  6E0C               	movwf	(btemp+11)^0,c
 30289                           
 30290                           ;stkvar	_a @ sp[(-13)+-8]
 30291  0141A0  0EEB               	movlw	-21
 30292  0141A2  50E3               	movf	plusw1,w,c
 30293  0141A4  020C               	mulwf	(btemp+11)^0,c
 30294                           
 30295                           ;stkvar	_temp @ sp[(-13)+8]
 30296  0141A6  0EFB               	movlw	-5
 30297  0141A8  006F FFCF FFE3     	movff	prodl,plusw1
 30298  0141AE  0EFC               	movlw	-4
 30299  0141B0  006F FFD3 FFE3     	movff	prodh,plusw1
 30300                           
 30301                           ;stkvar	_temp @ sp[(-13)+8]
 30302  0141B6  0EFB               	movlw	-5
 30303  0141B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 30304  0141BE  0EFC               	movlw	-4
 30305  0141C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 30306                           
 30307                           ;stkvar	_grs @ sp[(-13)+4]
 30308  0141C6  50E1               	movf	fsr1l,w,c
 30309  0141C8  0FF7               	addlw	-9
 30310  0141CA  6ED9               	movwf	fsr2l,c
 30311  0141CC  50E2               	movf	fsr1h,w,c
 30312  0141CE  6EDA               	movwf	fsr2h,c
 30313  0141D0  0EFF               	movlw	255
 30314  0141D2  22DA               	addwfc	fsr2h,f,c
 30315  0141D4  500B               	movf	(btemp+10)^0,w,c
 30316  0141D6  26DE               	addwf	postinc2,f,c
 30317  0141D8  500C               	movf	(btemp+11)^0,w,c
 30318  0141DA  22DE               	addwfc	postinc2,f,c
 30319  0141DC  0E00               	movlw	0
 30320  0141DE  22DE               	addwfc	postinc2,f,c
 30321  0141E0  22DE               	addwfc	postinc2,f,c
 30322                           
 30323                           ;stkvar	_b @ sp[(-13)+-4]
 30324  0141E2  0EEF               	movlw	-17
 30325  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 30326                           
 30327                           ;stkvar	_a @ sp[(-13)+-8]
 30328  0141EA  0EEC               	movlw	236
 30329  0141EC  24E1               	addwf	fsr1l,w,c
 30330  0141EE  6ED9               	movwf	fsr2l,c
 30331  0141F0  0EFF               	movlw	255
 30332  0141F2  20E2               	addwfc	fsr1h,w,c
 30333  0141F4  6EDA               	movwf	fsr2h,c
 30334  0141F6  50DF               	movf	indf2,w,c
 30335  0141F8  020C               	mulwf	(btemp+11)^0,c
 30336                           
 30337                           ;stkvar	_temp @ sp[(-13)+8]
 30338  0141FA  0EFB               	movlw	-5
 30339  0141FC  006F FFCF FFE3     	movff	prodl,plusw1
 30340  014202  0EFC               	movlw	-4
 30341  014204  006F FFD3 FFE3     	movff	prodh,plusw1
 30342                           
 30343                           ;stkvar	_temp @ sp[(-13)+8]
 30344  01420A  0EFB               	movlw	-5
 30345  01420C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30346  014212  0EFC               	movlw	-4
 30347  014214  006F FF8C  F00C    	movff	plusw1,btemp+11
 30348                           
 30349                           ;stkvar	_grs @ sp[(-13)+4]
 30350  01421A  50E1               	movf	fsr1l,w,c
 30351  01421C  0FF7               	addlw	-9
 30352  01421E  6ED9               	movwf	fsr2l,c
 30353  014220  50E2               	movf	fsr1h,w,c
 30354  014222  6EDA               	movwf	fsr2h,c
 30355  014224  0EFF               	movlw	255
 30356  014226  22DA               	addwfc	fsr2h,f,c
 30357  014228  500B               	movf	(btemp+10)^0,w,c
 30358  01422A  26DE               	addwf	postinc2,f,c
 30359  01422C  500C               	movf	(btemp+11)^0,w,c
 30360  01422E  22DE               	addwfc	postinc2,f,c
 30361  014230  0E00               	movlw	0
 30362  014232  22DE               	addwfc	postinc2,f,c
 30363  014234  22DE               	addwfc	postinc2,f,c
 30364                           
 30365                           ;stkvar	_grs @ sp[(-13)+4]
 30366  014236  50E1               	movf	fsr1l,w,c
 30367  014238  0FF7               	addlw	-9
 30368  01423A  6ED9               	movwf	fsr2l,c
 30369  01423C  50E2               	movf	fsr1h,w,c
 30370  01423E  6EDA               	movwf	fsr2h,c
 30371  014240  0EFF               	movlw	255
 30372  014242  22DA               	addwfc	fsr2h,f,c
 30373  014244  0E08               	movlw	8
 30374  014246                     u7085:
 30375  014246  90D8               	bcf	status,0,c
 30376  014248  36DE               	rlcf	postinc2,f,c
 30377  01424A  36DE               	rlcf	postinc2,f,c
 30378  01424C  36DE               	rlcf	postinc2,f,c
 30379  01424E  36DD               	rlcf	postdec2,f,c
 30380  014250  52DD               	movf	postdec2,f,c
 30381  014252  52DD               	movf	postdec2,f,c
 30382  014254  2EE8               	decfsz	wreg,f,c
 30383  014256  D7F7               	goto	u7085
 30384                           
 30385                           ;stkvar	_b @ sp[(-13)+-4]
 30386  014258  0EEF               	movlw	-17
 30387  01425A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30388                           
 30389                           ;stkvar	_a @ sp[(-13)+-8]
 30390  014260  0EEB               	movlw	-21
 30391  014262  50E3               	movf	plusw1,w,c
 30392  014264  020C               	mulwf	(btemp+11)^0,c
 30393                           
 30394                           ;stkvar	_temp @ sp[(-13)+8]
 30395  014266  0EFB               	movlw	-5
 30396  014268  006F FFCF FFE3     	movff	prodl,plusw1
 30397  01426E  0EFC               	movlw	-4
 30398  014270  006F FFD3 FFE3     	movff	prodh,plusw1
 30399                           
 30400                           ;stkvar	_temp @ sp[(-13)+8]
 30401  014276  0EFB               	movlw	-5
 30402  014278  006F FF8C  F00B    	movff	plusw1,btemp+10
 30403  01427E  0EFC               	movlw	-4
 30404  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 30405                           
 30406                           ;stkvar	_grs @ sp[(-13)+4]
 30407  014286  50E1               	movf	fsr1l,w,c
 30408  014288  0FF7               	addlw	-9
 30409  01428A  6ED9               	movwf	fsr2l,c
 30410  01428C  50E2               	movf	fsr1h,w,c
 30411  01428E  6EDA               	movwf	fsr2h,c
 30412  014290  0EFF               	movlw	255
 30413  014292  22DA               	addwfc	fsr2h,f,c
 30414  014294  500B               	movf	(btemp+10)^0,w,c
 30415  014296  26DE               	addwf	postinc2,f,c
 30416  014298  500C               	movf	(btemp+11)^0,w,c
 30417  01429A  22DE               	addwfc	postinc2,f,c
 30418  01429C  0E00               	movlw	0
 30419  01429E  22DE               	addwfc	postinc2,f,c
 30420  0142A0  22DE               	addwfc	postinc2,f,c
 30421                           
 30422                           ;stkvar	_b @ sp[(-13)+-4]
 30423  0142A2  0EF0               	movlw	240
 30424  0142A4  24E1               	addwf	fsr1l,w,c
 30425  0142A6  6ED9               	movwf	fsr2l,c
 30426  0142A8  0EFF               	movlw	255
 30427  0142AA  20E2               	addwfc	fsr1h,w,c
 30428  0142AC  6EDA               	movwf	fsr2h,c
 30429  0142AE  50DF               	movf	indf2,w,c
 30430  0142B0  6E0C               	movwf	(btemp+11)^0,c
 30431                           
 30432                           ;stkvar	_a @ sp[(-13)+-8]
 30433  0142B2  0EED               	movlw	237
 30434  0142B4  24E1               	addwf	fsr1l,w,c
 30435  0142B6  6ED9               	movwf	fsr2l,c
 30436  0142B8  0EFF               	movlw	255
 30437  0142BA  20E2               	addwfc	fsr1h,w,c
 30438  0142BC  6EDA               	movwf	fsr2h,c
 30439  0142BE  50DF               	movf	indf2,w,c
 30440  0142C0  020C               	mulwf	(btemp+11)^0,c
 30441                           
 30442                           ;stkvar	_temp @ sp[(-13)+8]
 30443  0142C2  0EFB               	movlw	-5
 30444  0142C4  006F FFCF FFE3     	movff	prodl,plusw1
 30445  0142CA  0EFC               	movlw	-4
 30446  0142CC  006F FFD3 FFE3     	movff	prodh,plusw1
 30447                           
 30448                           ;stkvar	_temp @ sp[(-13)+8]
 30449  0142D2  0EFB               	movlw	-5
 30450  0142D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 30451  0142DA  0EFC               	movlw	-4
 30452  0142DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30453                           
 30454                           ;stkvar	_prod @ sp[(-13)+0]
 30455  0142E2  50E1               	movf	fsr1l,w,c
 30456  0142E4  0FF3               	addlw	-13
 30457  0142E6  6ED9               	movwf	fsr2l,c
 30458  0142E8  50E2               	movf	fsr1h,w,c
 30459  0142EA  6EDA               	movwf	fsr2h,c
 30460  0142EC  0EFF               	movlw	255
 30461  0142EE  22DA               	addwfc	fsr2h,f,c
 30462  0142F0  500B               	movf	(btemp+10)^0,w,c
 30463  0142F2  26DE               	addwf	postinc2,f,c
 30464  0142F4  500C               	movf	(btemp+11)^0,w,c
 30465  0142F6  22DE               	addwfc	postinc2,f,c
 30466  0142F8  0E00               	movlw	0
 30467  0142FA  22DE               	addwfc	postinc2,f,c
 30468  0142FC  22DE               	addwfc	postinc2,f,c
 30469                           
 30470                           ;stkvar	_b @ sp[(-13)+-4]
 30471  0142FE  0EF1               	movlw	241
 30472  014300  24E1               	addwf	fsr1l,w,c
 30473  014302  6ED9               	movwf	fsr2l,c
 30474  014304  0EFF               	movlw	255
 30475  014306  20E2               	addwfc	fsr1h,w,c
 30476  014308  6EDA               	movwf	fsr2h,c
 30477  01430A  50DF               	movf	indf2,w,c
 30478  01430C  6E0C               	movwf	(btemp+11)^0,c
 30479                           
 30480                           ;stkvar	_a @ sp[(-13)+-8]
 30481  01430E  0EEC               	movlw	236
 30482  014310  24E1               	addwf	fsr1l,w,c
 30483  014312  6ED9               	movwf	fsr2l,c
 30484  014314  0EFF               	movlw	255
 30485  014316  20E2               	addwfc	fsr1h,w,c
 30486  014318  6EDA               	movwf	fsr2h,c
 30487  01431A  50DF               	movf	indf2,w,c
 30488  01431C  020C               	mulwf	(btemp+11)^0,c
 30489                           
 30490                           ;stkvar	_temp @ sp[(-13)+8]
 30491  01431E  0EFB               	movlw	-5
 30492  014320  006F FFCF FFE3     	movff	prodl,plusw1
 30493  014326  0EFC               	movlw	-4
 30494  014328  006F FFD3 FFE3     	movff	prodh,plusw1
 30495                           
 30496                           ;stkvar	_temp @ sp[(-13)+8]
 30497  01432E  0EFB               	movlw	-5
 30498  014330  006F FF8C  F00B    	movff	plusw1,btemp+10
 30499  014336  0EFC               	movlw	-4
 30500  014338  006F FF8C  F00C    	movff	plusw1,btemp+11
 30501                           
 30502                           ;stkvar	_prod @ sp[(-13)+0]
 30503  01433E  50E1               	movf	fsr1l,w,c
 30504  014340  0FF3               	addlw	-13
 30505  014342  6ED9               	movwf	fsr2l,c
 30506  014344  50E2               	movf	fsr1h,w,c
 30507  014346  6EDA               	movwf	fsr2h,c
 30508  014348  0EFF               	movlw	255
 30509  01434A  22DA               	addwfc	fsr2h,f,c
 30510  01434C  500B               	movf	(btemp+10)^0,w,c
 30511  01434E  26DE               	addwf	postinc2,f,c
 30512  014350  500C               	movf	(btemp+11)^0,w,c
 30513  014352  22DE               	addwfc	postinc2,f,c
 30514  014354  0E00               	movlw	0
 30515  014356  22DE               	addwfc	postinc2,f,c
 30516  014358  22DE               	addwfc	postinc2,f,c
 30517                           
 30518                           ;stkvar	_b @ sp[(-13)+-4]
 30519  01435A  0EF1               	movlw	241
 30520  01435C  24E1               	addwf	fsr1l,w,c
 30521  01435E  6ED9               	movwf	fsr2l,c
 30522  014360  0EFF               	movlw	255
 30523  014362  20E2               	addwfc	fsr1h,w,c
 30524  014364  6EDA               	movwf	fsr2h,c
 30525  014366  50DF               	movf	indf2,w,c
 30526  014368  6E0C               	movwf	(btemp+11)^0,c
 30527                           
 30528                           ;stkvar	_a @ sp[(-13)+-8]
 30529  01436A  0EED               	movlw	237
 30530  01436C  24E1               	addwf	fsr1l,w,c
 30531  01436E  6ED9               	movwf	fsr2l,c
 30532  014370  0EFF               	movlw	255
 30533  014372  20E2               	addwfc	fsr1h,w,c
 30534  014374  6EDA               	movwf	fsr2h,c
 30535  014376  50DF               	movf	indf2,w,c
 30536  014378  020C               	mulwf	(btemp+11)^0,c
 30537                           
 30538                           ;stkvar	_temp @ sp[(-13)+8]
 30539  01437A  0EFB               	movlw	-5
 30540  01437C  006F FFCF FFE3     	movff	prodl,plusw1
 30541  014382  0EFC               	movlw	-4
 30542  014384  006F FFD3 FFE3     	movff	prodh,plusw1
 30543                           
 30544                           ;stkvar	_temp @ sp[(-13)+8]
 30545  01438A  0EFB               	movlw	-5
 30546  01438C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30547  014392  0EFC               	movlw	-4
 30548  014394  006F FF8C  F00C    	movff	plusw1,btemp+11
 30549  01439A  500B               	movf	(btemp+10)^0,w,c
 30550  01439C  6E05               	movwf	(btemp+4)^0,c
 30551  01439E  500C               	movf	(btemp+11)^0,w,c
 30552  0143A0  6E06               	movwf	(btemp+5)^0,c
 30553  0143A2  6A07               	clrf	(btemp+6)^0,c
 30554  0143A4  6A08               	clrf	(btemp+7)^0,c
 30555  0143A6  0060  F01C  F008   	movff	btemp+6,btemp+7
 30556  0143AC  0060  F018  F007   	movff	btemp+5,btemp+6
 30557  0143B2  0060  F014  F006   	movff	btemp+4,btemp+5
 30558  0143B8  6A05               	clrf	(btemp+4)^0,c
 30559                           
 30560                           ;stkvar	_prod @ sp[(-13)+0]
 30561  0143BA  50E1               	movf	fsr1l,w,c
 30562  0143BC  0FF3               	addlw	-13
 30563  0143BE  6ED9               	movwf	fsr2l,c
 30564  0143C0  50E2               	movf	fsr1h,w,c
 30565  0143C2  6EDA               	movwf	fsr2h,c
 30566  0143C4  0EFF               	movlw	255
 30567  0143C6  22DA               	addwfc	fsr2h,f,c
 30568  0143C8  5005               	movf	(btemp+4)^0,w,c
 30569  0143CA  26DE               	addwf	postinc2,f,c
 30570  0143CC  5006               	movf	(btemp+5)^0,w,c
 30571  0143CE  22DE               	addwfc	postinc2,f,c
 30572  0143D0  5007               	movf	(btemp+6)^0,w,c
 30573  0143D2  22DE               	addwfc	postinc2,f,c
 30574  0143D4  5008               	movf	(btemp+7)^0,w,c
 30575  0143D6  22DE               	addwfc	postinc2,f,c
 30576                           
 30577                           ;stkvar	_prod @ sp[(-13)+0]
 30578  0143D8  50E1               	movf	fsr1l,w,c
 30579  0143DA  0FF3               	addlw	-13
 30580  0143DC  6ED9               	movwf	fsr2l,c
 30581  0143DE  50E2               	movf	fsr1h,w,c
 30582  0143E0  6EDA               	movwf	fsr2h,c
 30583  0143E2  0EFF               	movlw	255
 30584  0143E4  22DA               	addwfc	fsr2h,f,c
 30585                           
 30586                           ;stkvar	_grs @ sp[(-13)+4]
 30587  0143E6  0EFA               	movlw	250
 30588  0143E8  24E1               	addwf	fsr1l,w,c
 30589  0143EA  6EE9               	movwf	fsr0l,c
 30590  0143EC  0EFF               	movlw	255
 30591  0143EE  20E2               	addwfc	fsr1h,w,c
 30592  0143F0  6EEA               	movwf	fsr0h,c
 30593  0143F2  50EF               	movf	indf0,w,c
 30594  0143F4  26DE               	addwf	postinc2,f,c
 30595  0143F6  0E00               	movlw	0
 30596  0143F8  22DE               	addwfc	postinc2,f,c
 30597  0143FA  22DE               	addwfc	postinc2,f,c
 30598  0143FC  22DE               	addwfc	postinc2,f,c
 30599                           
 30600                           ;stkvar	_grs @ sp[(-13)+4]
 30601  0143FE  50E1               	movf	fsr1l,w,c
 30602  014400  0FF7               	addlw	-9
 30603  014402  6ED9               	movwf	fsr2l,c
 30604  014404  50E2               	movf	fsr1h,w,c
 30605  014406  6EDA               	movwf	fsr2h,c
 30606  014408  0EFF               	movlw	255
 30607  01440A  22DA               	addwfc	fsr2h,f,c
 30608  01440C  0E08               	movlw	8
 30609  01440E                     u7095:
 30610  01440E  90D8               	bcf	status,0,c
 30611  014410  36DE               	rlcf	postinc2,f,c
 30612  014412  36DE               	rlcf	postinc2,f,c
 30613  014414  36DE               	rlcf	postinc2,f,c
 30614  014416  36DD               	rlcf	postdec2,f,c
 30615  014418  52DD               	movf	postdec2,f,c
 30616  01441A  52DD               	movf	postdec2,f,c
 30617  01441C  2EE8               	decfsz	wreg,f,c
 30618  01441E  D7F7               	goto	u7095
 30619  014420  0E82               	movlw	130
 30620  014422  6E0B               	movwf	(btemp+10)^0,c
 30621  014424  0EFF               	movlw	255
 30622  014426  6E0C               	movwf	(btemp+11)^0,c
 30623                           
 30624                           ;stkvar	_bexp @ sp[(-13)+10]
 30625  014428  0EFD               	movlw	-3
 30626  01442A  50E3               	movf	plusw1,w,c
 30627  01442C  6E09               	movwf	(btemp+8)^0,c
 30628  01442E  6A0A               	clrf	(btemp+9)^0,c
 30629                           
 30630                           ;stkvar	_aexp @ sp[(-13)+11]
 30631  014430  0EFE               	movlw	-2
 30632  014432  50E3               	movf	plusw1,w,c
 30633  014434  2609               	addwf	(btemp+8)^0,f,c
 30634  014436  0E00               	movlw	0
 30635  014438  220A               	addwfc	(btemp+9)^0,f,c
 30636  01443A  500B               	movf	(btemp+10)^0,w,c
 30637  01443C  2609               	addwf	(btemp+8)^0,f,c
 30638  01443E  500C               	movf	(btemp+11)^0,w,c
 30639  014440  220A               	addwfc	(btemp+9)^0,f,c
 30640                           
 30641                           ;stkvar	_temp @ sp[(-13)+8]
 30642  014442  0EFB               	movlw	-5
 30643  014444  0060  F027  FFE3   	movff	btemp+8,plusw1
 30644  01444A  0EFC               	movlw	-4
 30645  01444C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30646  014452  D021               	goto	l8789
 30647  014454                     l8779:
 30648                           
 30649                           ;stkvar	_prod @ sp[(-13)+0]
 30650  014454  90D8               	bcf	status,0,c
 30651  014456  0EF3               	movlw	-13
 30652  014458  36E3               	rlcf	plusw1,f,c
 30653  01445A  0EF4               	movlw	-12
 30654  01445C  36E3               	rlcf	plusw1,f,c
 30655  01445E  0EF5               	movlw	-11
 30656  014460  36E3               	rlcf	plusw1,f,c
 30657  014462  0EF6               	movlw	-10
 30658  014464  36E3               	rlcf	plusw1,f,c
 30659                           
 30660                           ;stkvar	_grs @ sp[(-13)+4]
 30661  014466  0EFA               	movlw	-6
 30662  014468  AEE3               	btfss	plusw1,7,c
 30663  01446A  D002               	goto	l8785
 30664                           
 30665                           ;stkvar	_prod @ sp[(-13)+0]
 30666  01446C  0EF3               	movlw	-13
 30667  01446E  80E3               	bsf	plusw1,0,c
 30668  014470                     l8785:
 30669                           
 30670                           ;stkvar	_grs @ sp[(-13)+4]
 30671  014470  90D8               	bcf	status,0,c
 30672  014472  0EF7               	movlw	-9
 30673  014474  36E3               	rlcf	plusw1,f,c
 30674  014476  0EF8               	movlw	-8
 30675  014478  36E3               	rlcf	plusw1,f,c
 30676  01447A  0EF9               	movlw	-7
 30677  01447C  36E3               	rlcf	plusw1,f,c
 30678  01447E  0EFA               	movlw	-6
 30679  014480  36E3               	rlcf	plusw1,f,c
 30680                           
 30681                           ;stkvar	_temp @ sp[(-13)+8]
 30682  014482  50E1               	movf	fsr1l,w,c
 30683  014484  0FFB               	addlw	-5
 30684  014486  6ED9               	movwf	fsr2l,c
 30685  014488  50E2               	movf	fsr1h,w,c
 30686  01448A  6EDA               	movwf	fsr2h,c
 30687  01448C  0EFF               	movlw	255
 30688  01448E  22DA               	addwfc	fsr2h,f,c
 30689  014490  06DE               	decf	postinc2,f,c
 30690  014492  0E00               	movlw	0
 30691  014494  5ADD               	subwfb	postdec2,f,c
 30692  014496                     l8789:
 30693                           
 30694                           ;stkvar	_prod @ sp[(-13)+0]
 30695  014496  0EF5               	movlw	-11
 30696  014498  AEE3               	btfss	plusw1,7,c
 30697  01449A  D7DC               	goto	l8779
 30698                           
 30699                           ;stkvar	_aexp @ sp[(-13)+11]
 30700  01449C  0EFE               	movlw	-2
 30701  01449E  6AE3               	clrf	plusw1,c
 30702                           
 30703                           ;stkvar	_grs @ sp[(-13)+4]
 30704  0144A0  0EFA               	movlw	-6
 30705  0144A2  AEE3               	btfss	plusw1,7,c
 30706  0144A4  D020               	goto	l8803
 30707                           
 30708                           ;stkvar	_grs @ sp[(-13)+4]
 30709  0144A6  50E1               	movf	fsr1l,w,c
 30710  0144A8  0FF7               	addlw	-9
 30711  0144AA  6ED9               	movwf	fsr2l,c
 30712  0144AC  50E2               	movf	fsr1h,w,c
 30713  0144AE  6EDA               	movwf	fsr2h,c
 30714  0144B0  0EFF               	movlw	255
 30715  0144B2  22DA               	addwfc	fsr2h,f,c
 30716  0144B4  0EFF               	movlw	255
 30717  0144B6  14DE               	andwf	postinc2,w,c
 30718  0144B8  6E09               	movwf	(btemp+8)^0,c
 30719  0144BA  0EFF               	movlw	255
 30720  0144BC  14DE               	andwf	postinc2,w,c
 30721  0144BE  6E0A               	movwf	(btemp+9)^0,c
 30722  0144C0  0EFF               	movlw	255
 30723  0144C2  14DE               	andwf	postinc2,w,c
 30724  0144C4  6E0B               	movwf	(btemp+10)^0,c
 30725  0144C6  0E7F               	movlw	127
 30726  0144C8  14DE               	andwf	postinc2,w,c
 30727  0144CA  6E0C               	movwf	(btemp+11)^0,c
 30728  0144CC  5009               	movf	(btemp+8)^0,w,c
 30729  0144CE  100A               	iorwf	(btemp+9)^0,w,c
 30730  0144D0  100B               	iorwf	(btemp+10)^0,w,c
 30731  0144D2  100C               	iorwf	(btemp+11)^0,w,c
 30732  0144D4  B4D8               	btfsc	status,2,c
 30733  0144D6  D004               	goto	l8799
 30734  0144D8                     u7130:
 30735                           
 30736                           ;stkvar	_aexp @ sp[(-13)+11]
 30737  0144D8  0EFE               	movlw	-2
 30738  0144DA  6AE3               	clrf	plusw1,c
 30739  0144DC  2AE3               	incf	plusw1,f,c
 30740  0144DE  D003               	goto	l8803
 30741  0144E0                     l8799:
 30742                           
 30743                           ;stkvar	_prod @ sp[(-13)+0]
 30744  0144E0  0EF3               	movlw	-13
 30745  0144E2  B0E3               	btfsc	plusw1,0,c
 30746  0144E4  D7F9               	goto	u7130
 30747  0144E6                     l8803:
 30748                           
 30749                           ;stkvar	_aexp @ sp[(-13)+11]
 30750  0144E6  0EFE               	movlw	-2
 30751  0144E8  50E3               	movf	plusw1,w,c
 30752  0144EA  B4D8               	btfsc	status,2,c
 30753  0144EC  D036               	goto	l8813
 30754                           
 30755                           ;stkvar	_prod @ sp[(-13)+0]
 30756  0144EE  50E1               	movf	fsr1l,w,c
 30757  0144F0  0FF3               	addlw	-13
 30758  0144F2  6ED9               	movwf	fsr2l,c
 30759  0144F4  50E2               	movf	fsr1h,w,c
 30760  0144F6  6EDA               	movwf	fsr2h,c
 30761  0144F8  0EFF               	movlw	255
 30762  0144FA  22DA               	addwfc	fsr2h,f,c
 30763  0144FC  2ADE               	incf	postinc2,f,c
 30764  0144FE  0E00               	movlw	0
 30765  014500  22DE               	addwfc	postinc2,f,c
 30766  014502  22DE               	addwfc	postinc2,f,c
 30767  014504  22DE               	addwfc	postinc2,f,c
 30768                           
 30769                           ;stkvar	_prod @ sp[(-13)+0]
 30770  014506  0EF6               	movlw	-10
 30771  014508  A0E3               	btfss	plusw1,0,c
 30772  01450A  D027               	goto	l8813
 30773  01450C  0E01               	movlw	1
 30774  01450E  6E0C               	movwf	(btemp+11)^0,c
 30775                           
 30776                           ;stkvar	_prod @ sp[(-13)+0]
 30777  014510  50E1               	movf	fsr1l,w,c
 30778  014512  0FF3               	addlw	-13
 30779  014514  6ED9               	movwf	fsr2l,c
 30780  014516  50E2               	movf	fsr1h,w,c
 30781  014518  6EDA               	movwf	fsr2h,c
 30782  01451A  0EFF               	movlw	255
 30783  01451C  22DA               	addwfc	fsr2h,f,c
 30784  01451E  280C               	incf	(btemp+11)^0,w,c
 30785  014520  52DE               	movf	postinc2,f,c
 30786  014522  D008               	goto	u7170
 30787  014524                     u7175:
 30788  014524  52DE               	movf	postinc2,f,c
 30789  014526  90D8               	bcf	status,0,c
 30790  014528  BEDC               	btfsc	preinc2,7,c
 30791  01452A  80D8               	bsf	status,0,c
 30792  01452C  32DD               	rrcf	postdec2,f,c
 30793  01452E  32DD               	rrcf	postdec2,f,c
 30794  014530  32DD               	rrcf	postdec2,f,c
 30795  014532  32DE               	rrcf	postinc2,f,c
 30796  014534                     u7170:
 30797  014534  2EE8               	decfsz	wreg,f,c
 30798  014536  D7F6               	goto	u7175
 30799                           
 30800                           ;stkvar	_temp @ sp[(-13)+8]
 30801  014538  0EFB               	movlw	-5
 30802  01453A  50E3               	movf	plusw1,w,c
 30803  01453C  0F01               	addlw	1
 30804  01453E  6E01               	movwf	btemp^0,c
 30805  014540  0EFB               	movlw	-5
 30806  014542  0060  F007  FFE3   	movff	btemp,plusw1
 30807  014548  6A01               	clrf	btemp^0,c
 30808  01454A  0EFC               	movlw	-4
 30809  01454C  50E3               	movf	plusw1,w,c
 30810  01454E  2001               	addwfc	btemp^0,w,c
 30811  014550  6E01               	movwf	btemp^0,c
 30812  014552  0EFC               	movlw	-4
 30813  014554  0060  F007  FFE3   	movff	btemp,plusw1
 30814  01455A                     l8813:
 30815                           
 30816                           ;stkvar	_temp @ sp[(-13)+8]
 30817  01455A  0EFC               	movlw	-4
 30818  01455C  BEE3               	btfsc	plusw1,7,c
 30819  01455E  D020               	goto	l8817
 30820  014560  0EFC               	movlw	-4
 30821  014562  50E3               	movf	plusw1,w,c
 30822  014564  E104               	bnz	u7180
 30823  014566  0EFB               	movlw	-5
 30824  014568  28E3               	incf	plusw1,w,c
 30825  01456A  A0D8               	btfss	status,0,c
 30826  01456C  D019               	goto	l8817
 30827  01456E                     u7180:
 30828  01456E  0E00               	movlw	0
 30829  014570  6E09               	movwf	(btemp+8)^0,c
 30830  014572  0E00               	movlw	0
 30831  014574  6E0A               	movwf	(btemp+9)^0,c
 30832  014576  0E80               	movlw	128
 30833  014578  6E0B               	movwf	(btemp+10)^0,c
 30834  01457A  0E7F               	movlw	127
 30835  01457C  6E0C               	movwf	(btemp+11)^0,c
 30836                           
 30837                           ;stkvar	_prod @ sp[(-13)+0]
 30838  01457E  0EF3               	movlw	-13
 30839  014580  0060  F027  FFE3   	movff	btemp+8,plusw1
 30840  014586  0EF4               	movlw	-12
 30841  014588  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30842  01458E  0EF5               	movlw	-11
 30843  014590  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30844  014596  0EF6               	movlw	-10
 30845  014598  0060  F033  FFE3   	movff	btemp+11,plusw1
 30846  01459E  D044               	goto	l8833
 30847  0145A0                     l8817:
 30848                           
 30849                           ;stkvar	_temp @ sp[(-13)+8]
 30850  0145A0  0EFC               	movlw	-4
 30851  0145A2  BEE3               	btfsc	plusw1,7,c
 30852  0145A4  D007               	goto	u7190
 30853  0145A6  0EFC               	movlw	-4
 30854  0145A8  50E3               	movf	plusw1,w,c
 30855  0145AA  E10F               	bnz	l8823
 30856  0145AC  0EFB               	movlw	-5
 30857  0145AE  04E3               	decf	plusw1,w,c
 30858  0145B0  B0D8               	btfsc	status,0,c
 30859  0145B2  D00B               	goto	l8823
 30860  0145B4                     u7190:
 30861                           
 30862                           ;stkvar	_prod @ sp[(-13)+0]
 30863  0145B4  0EF3               	movlw	-13
 30864  0145B6  6AE3               	clrf	plusw1,c
 30865  0145B8  0EF4               	movlw	-12
 30866  0145BA  6AE3               	clrf	plusw1,c
 30867  0145BC  0EF5               	movlw	-11
 30868  0145BE  6AE3               	clrf	plusw1,c
 30869  0145C0  0EF6               	movlw	-10
 30870  0145C2  6AE3               	clrf	plusw1,c
 30871                           
 30872                           ;stkvar	_sign @ sp[(-13)+12]
 30873  0145C4  0EFF               	movlw	-1
 30874  0145C6  6AE3               	clrf	plusw1,c
 30875  0145C8  D02F               	goto	l8833
 30876  0145CA                     l8823:
 30877                           
 30878                           ;stkvar	_temp @ sp[(-13)+8]
 30879                           ;stkvar	_bexp @ sp[(-13)+10]
 30880  0145CA  0EFB               	movlw	-5
 30881  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 30882  0145D2  0EFD               	movlw	-3
 30883  0145D4  0060  F007  FFE3   	movff	btemp,plusw1
 30884                           
 30885                           ;stkvar	_prod @ sp[(-13)+0]
 30886  0145DA  50E1               	movf	fsr1l,w,c
 30887  0145DC  0FF3               	addlw	-13
 30888  0145DE  6ED9               	movwf	fsr2l,c
 30889  0145E0  50E2               	movf	fsr1h,w,c
 30890  0145E2  6EDA               	movwf	fsr2h,c
 30891  0145E4  0EFF               	movlw	255
 30892  0145E6  22DA               	addwfc	fsr2h,f,c
 30893  0145E8  0EFF               	movlw	255
 30894  0145EA  16DE               	andwf	postinc2,f,c
 30895  0145EC  0EFF               	movlw	255
 30896  0145EE  16DE               	andwf	postinc2,f,c
 30897  0145F0  0E7F               	movlw	127
 30898  0145F2  16DE               	andwf	postinc2,f,c
 30899  0145F4  0E00               	movlw	0
 30900  0145F6  16DE               	andwf	postinc2,f,c
 30901                           
 30902                           ;stkvar	_bexp @ sp[(-13)+10]
 30903  0145F8  0EFD               	movlw	-3
 30904  0145FA  A0E3               	btfss	plusw1,0,c
 30905  0145FC  D008               	goto	l8831
 30906                           
 30907                           ;stkvar	_prod @ sp[(-13)+0]
 30908  0145FE  0EF5               	movlw	245
 30909  014600  24E1               	addwf	fsr1l,w,c
 30910  014602  6ED9               	movwf	fsr2l,c
 30911  014604  0EFF               	movlw	255
 30912  014606  20E2               	addwfc	fsr1h,w,c
 30913  014608  6EDA               	movwf	fsr2h,c
 30914  01460A  0E00               	movlw	0
 30915  01460C  8EDB               	bsf	plusw2,7,c
 30916  01460E                     l8831:
 30917                           
 30918                           ;stkvar	_prod @ sp[(-13)+0]
 30919  01460E  0EF6               	movlw	246
 30920  014610  24E1               	addwf	fsr1l,w,c
 30921  014612  6ED9               	movwf	fsr2l,c
 30922  014614  0EFF               	movlw	255
 30923  014616  20E2               	addwfc	fsr1h,w,c
 30924  014618  6EDA               	movwf	fsr2h,c
 30925                           
 30926                           ;stkvar	_bexp @ sp[(-13)+10]
 30927  01461A  0EFD               	movlw	-3
 30928  01461C  006F FF8C  F00C    	movff	plusw1,btemp+11
 30929  014622  90D8               	bcf	status,0,c
 30930  014624  300C               	rrcf	(btemp+11)^0,w,c
 30931  014626  6EDF               	movwf	indf2,c
 30932  014628                     l8833:
 30933                           
 30934                           ;stkvar	_sign @ sp[(-13)+12]
 30935  014628  0EFF               	movlw	-1
 30936  01462A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30937                           
 30938                           ;stkvar	_prod @ sp[(-13)+0]
 30939  014630  0EF6               	movlw	246
 30940  014632  24E1               	addwf	fsr1l,w,c
 30941  014634  6ED9               	movwf	fsr2l,c
 30942  014636  0EFF               	movlw	255
 30943  014638  20E2               	addwfc	fsr1h,w,c
 30944  01463A  6EDA               	movwf	fsr2h,c
 30945  01463C  500C               	movf	(btemp+11)^0,w,c
 30946  01463E  12DF               	iorwf	indf2,f,c
 30947                           
 30948                           ;stkvar	_prod @ sp[(-13)+0]
 30949  014640  0EF3               	movlw	-13
 30950  014642  006F FF8C  F001    	movff	plusw1,btemp
 30951  014648  0EF4               	movlw	-12
 30952  01464A  006F FF8C  F002    	movff	plusw1,btemp+1
 30953  014650  0EF5               	movlw	-11
 30954  014652  006F FF8C  F003    	movff	plusw1,btemp+2
 30955  014658  0EF6               	movlw	-10
 30956  01465A  006F FF8C  F004    	movff	plusw1,btemp+3
 30957  014660                     l3134:
 30958                           
 30959                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30960  014660  0EEB               	movlw	235
 30961  014662  26E1               	addwf	fsr1l,f,c
 30962  014664  0EFF               	movlw	255
 30963  014666  22E2               	addwfc	fsr1h,f,c
 30964  014668  0012               	return		;funcret
 30965  01466A                     __end_of___flmul:
 30966                           	opt callstack 0
 30967                           
 30968 ;; *************** function _SYSTEM_Initialize *****************
 30969 ;; Defined at:
 30970 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30971 ;; Parameters:    Size  Location     Type
 30972 ;;		None
 30973 ;; Auto vars:     Size  Location     Type
 30974 ;;		None
 30975 ;; Return value:  Size  Location     Type
 30976 ;;                  1  [STACK] void 
 30977 ;; Registers used:
 30978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30979 ;; Tracked objects:
 30980 ;;		On entry : 0/0
 30981 ;;		On exit  : 3F/3C
 30982 ;;		Unchanged: 0/0
 30983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30988 ;;Total ram usage:        0 bytes
 30989 ;; Hardware stack levels used:    1
 30990 ;; Hardware stack levels required when called:   17
 30991 ;; This function calls:
 30992 ;;		_ADCC_Initialize
 30993 ;;		_CLKREF_Initialize
 30994 ;;		_DMA1_Initialize
 30995 ;;		_DMA2_Initialize
 30996 ;;		_EXT_INT_Initialize
 30997 ;;		_FVR_Initialize
 30998 ;;		_INTERRUPT_Initialize
 30999 ;;		_OSCILLATOR_Initialize
 31000 ;;		_PIN_MANAGER_Initialize
 31001 ;;		_PMD_Initialize
 31002 ;;		_PWM8_Initialize
 31003 ;;		_SPI1_Initialize
 31004 ;;		_TMR2_Initialize
 31005 ;;		_TMR3_Initialize
 31006 ;;		_TMR5_Initialize
 31007 ;;		_TMR6_Initialize
 31008 ;;		_UART1_Initialize
 31009 ;;		_UART2_Initialize
 31010 ;; This function is called by:
 31011 ;;		_main
 31012 ;; This function uses a reentrant model
 31013 ;;
 31014                           
 31015                           	psect	text117
 31016  01BCDC                     __ptext117:
 31017                           	opt callstack 0
 31018  01BCDC                     _SYSTEM_Initialize:
 31019                           	opt callstack 13
 31020                           
 31021                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 31022                           
 31023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31024                           ;incstack = 0
 31025  01BCDC  EC52  F0DC         	call	_INTERRUPT_Initialize	;wreg free
 31026                           
 31027                           ; BSR set to: 57
 31028                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 31029  01BCE0  ECB8  F0E4         	call	_PMD_Initialize	;wreg free
 31030                           
 31031                           ; BSR set to: 57
 31032                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 31033  01BCE4  EC3D  F0D9         	call	_PIN_MANAGER_Initialize	;wreg free
 31034                           
 31035                           ; BSR set to: 58
 31036                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 31037  01BCE8  ECAD  F0E4         	call	_OSCILLATOR_Initialize	;wreg free
 31038                           
 31039                           ; BSR set to: 57
 31040                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 31041  01BCEC  EC3B  F0E5         	call	_FVR_Initialize	;wreg free
 31042                           
 31043                           ; BSR set to: 62
 31044                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 31045  01BCF0  ECB4  F0DB         	call	_ADCC_Initialize	;wreg free
 31046                           
 31047                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 31048  01BCF4  ECA2  F0E4         	call	_PWM8_Initialize	;wreg free
 31049                           
 31050                           ; BSR set to: 63
 31051                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 31052  01BCF8  EC8B  F0E4         	call	_TMR2_Initialize	;wreg free
 31053                           
 31054                           ; BSR set to: 57
 31055                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 31056  01BCFC  EC44  F0E1         	call	_EXT_INT_Initialize	;wreg free
 31057                           
 31058                           ; BSR set to: 57
 31059                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 31060  01BD00  EC18  F0E2         	call	_TMR6_Initialize	;wreg free
 31061                           
 31062                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 31063  01BD04  ECFF  F0DE         	call	_TMR3_Initialize	;wreg free
 31064                           
 31065                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 31066  01BD08  ECDB  F0DE         	call	_TMR5_Initialize	;wreg free
 31067                           
 31068                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 31069  01BD0C  ECB7  F0DE         	call	_UART1_Initialize	;wreg free
 31070                           
 31071                           ; BSR set to: 57
 31072                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 31073  01BD10  EC19  F0DD         	call	_UART2_Initialize	;wreg free
 31074                           
 31075                           ; BSR set to: 57
 31076                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 31077  01BD14  EC97  F0E4         	call	_SPI1_Initialize	;wreg free
 31078                           
 31079                           ; BSR set to: 61
 31080                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 31081  01BD18  ECA3  F0DD         	call	_DMA2_Initialize	;wreg free
 31082                           
 31083                           ; BSR set to: 59
 31084                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 31085  01BD1C  EC7F  F0DB         	call	_DMA1_Initialize	;wreg free
 31086                           
 31087                           ; BSR set to: 59
 31088                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 31089  01BD20  EC0F  F0E5         	call	_CLKREF_Initialize	;wreg free
 31090                           
 31091                           ; BSR set to: 60
 31092                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31093  01BD24  0012               	return		;funcret
 31094  01BD26                     __end_of_SYSTEM_Initialize:
 31095                           	opt callstack 0
 31096                           
 31097 ;; *************** function _UART2_Initialize *****************
 31098 ;; Defined at:
 31099 ;;		line 78 in file "mcc_generated_files/uart2.c"
 31100 ;; Parameters:    Size  Location     Type
 31101 ;;		None
 31102 ;; Auto vars:     Size  Location     Type
 31103 ;;		None
 31104 ;; Return value:  Size  Location     Type
 31105 ;;                  1  [STACK] void 
 31106 ;; Registers used:
 31107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31108 ;; Tracked objects:
 31109 ;;		On entry : 3F/39
 31110 ;;		On exit  : 3F/39
 31111 ;;		Unchanged: 0/0
 31112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31117 ;;Total ram usage:        0 bytes
 31118 ;; Hardware stack levels used:    1
 31119 ;; Hardware stack levels required when called:   16
 31120 ;; This function calls:
 31121 ;;		_UART2_SetRxInterruptHandler
 31122 ;;		_UART2_SetTxInterruptHandler
 31123 ;; This function is called by:
 31124 ;;		_SYSTEM_Initialize
 31125 ;; This function uses a reentrant model
 31126 ;;
 31127                           
 31128                           	psect	text118
 31129  01BA32                     __ptext118:
 31130                           	opt callstack 0
 31131  01BA32                     _UART2_Initialize:
 31132                           	opt callstack 13
 31133                           
 31134                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 31135                           
 31136                           ; BSR set to: 60
 31137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31138                           ;incstack = 0
 31139  01BA32  0139               	movlb	57	; () banked
 31140  01BA34  9596               	bcf	150,2,b	;volatile
 31141                           
 31142                           ; BSR set to: 57
 31143                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 31144  01BA36  0E12               	movlw	low _UART2_Receive_ISR
 31145  01BA38  6EE6               	movwf	postinc1,c
 31146  01BA3A  0EC8               	movlw	high _UART2_Receive_ISR
 31147  01BA3C  6EE6               	movwf	postinc1,c
 31148  01BA3E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 31149  01BA40  6EE6               	movwf	postinc1,c
 31150  01BA42  EC69  F0E2         	call	_UART2_SetRxInterruptHandler	;wreg free
 31151                           
 31152                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 31153  01BA46  0139               	movlb	57	; () banked
 31154  01BA48  9796               	bcf	150,3,b	;volatile
 31155                           
 31156                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 31157  01BA4A  0E04               	movlw	low _UART2_Transmit_ISR
 31158  01BA4C  6EE6               	movwf	postinc1,c
 31159  01BA4E  0EC4               	movlw	high _UART2_Transmit_ISR
 31160  01BA50  6EE6               	movwf	postinc1,c
 31161  01BA52  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 31162  01BA54  6EE6               	movwf	postinc1,c
 31163  01BA56  EC55  F0E2         	call	_UART2_SetTxInterruptHandler	;wreg free
 31164                           
 31165                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 31166  01BA5A  013D               	movlb	61	; () banked
 31167  01BA5C  6BD4               	clrf	212,b	;volatile
 31168                           
 31169                           ; BSR set to: 61
 31170                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 31171  01BA5E  6BD6               	clrf	214,b	;volatile
 31172                           
 31173                           ; BSR set to: 61
 31174                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 31175  01BA60  6BD8               	clrf	216,b	;volatile
 31176                           
 31177                           ; BSR set to: 61
 31178                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 31179  01BA62  0EB0               	movlw	176
 31180  01BA64  6FDA               	movwf	218,b	;volatile
 31181                           
 31182                           ; BSR set to: 61
 31183                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 31184  01BA66  0E80               	movlw	128
 31185  01BA68  6FDB               	movwf	219,b	;volatile
 31186                           
 31187                           ; BSR set to: 61
 31188                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 31189  01BA6A  6BDC               	clrf	220,b	;volatile
 31190                           
 31191                           ; BSR set to: 61
 31192                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 31193  01BA6C  0E82               	movlw	130
 31194  01BA6E  6FDD               	movwf	221,b	;volatile
 31195                           
 31196                           ; BSR set to: 61
 31197                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 31198  01BA70  0E06               	movlw	6
 31199  01BA72  6FDE               	movwf	222,b	;volatile
 31200                           
 31201                           ; BSR set to: 61
 31202                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 31203  01BA74  6BDF               	clrf	223,b	;volatile
 31204                           
 31205                           ; BSR set to: 61
 31206                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 31207  01BA76  6BE0               	clrf	224,b	;volatile
 31208                           
 31209                           ; BSR set to: 61
 31210                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 31211  01BA78  6BE1               	clrf	225,b	;volatile
 31212                           
 31213                           ; BSR set to: 61
 31214                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 31215  01BA7A  6BE2               	clrf	226,b	;volatile
 31216                           
 31217                           ; BSR set to: 61
 31218                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 31219  01BA7C  0100               	movlb	0	; () banked
 31220  01BA7E  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 31221                           
 31222                           ; BSR set to: 0
 31223                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 31224  01BA80  6A46               	clrf	_uart2TxTail^0,c	;volatile
 31225                           
 31226                           ; BSR set to: 0
 31227                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 31228  01BA82  0E40               	movlw	64
 31229  01BA84  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 31230                           
 31231                           ; BSR set to: 0
 31232                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 31233  01BA86  6A44               	clrf	_uart2RxHead^0,c	;volatile
 31234                           
 31235                           ; BSR set to: 0
 31236                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 31237  01BA88  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 31238                           
 31239                           ; BSR set to: 0
 31240                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 31241  01BA8A  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 31242                           
 31243                           ; BSR set to: 0
 31244                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 31245  01BA8C  0139               	movlb	57	; () banked
 31246  01BA8E  8596               	bsf	150,2,b	;volatile
 31247                           
 31248                           ; BSR set to: 57
 31249                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31250  01BA90  0012               	return		;funcret
 31251  01BA92                     __end_of_UART2_Initialize:
 31252                           	opt callstack 0
 31253                           
 31254 ;; *************** function _UART2_SetTxInterruptHandler *****************
 31255 ;; Defined at:
 31256 ;;		line 252 in file "mcc_generated_files/uart2.c"
 31257 ;; Parameters:    Size  Location     Type
 31258 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31259 ;;		 -> UART2_Transmit_ISR(1), 
 31260 ;; Auto vars:     Size  Location     Type
 31261 ;;		None
 31262 ;; Return value:  Size  Location     Type
 31263 ;;                  1  [STACK] void 
 31264 ;; Registers used:
 31265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31266 ;; Tracked objects:
 31267 ;;		On entry : 3F/39
 31268 ;;		On exit  : 0/0
 31269 ;;		Unchanged: 0/0
 31270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31275 ;;Total ram usage:        0 bytes
 31276 ;; Hardware stack levels used:    1
 31277 ;; Hardware stack levels required when called:   15
 31278 ;; This function calls:
 31279 ;;		Nothing
 31280 ;; This function is called by:
 31281 ;;		_UART2_Initialize
 31282 ;; This function uses a reentrant model
 31283 ;;
 31284                           
 31285                           	psect	text119
 31286  01C4AA                     __ptext119:
 31287                           	opt callstack 0
 31288  01C4AA                     _UART2_SetTxInterruptHandler:
 31289                           	opt callstack 13
 31290                           
 31291                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 31292                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31293                           
 31294                           ; BSR set to: 57
 31295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31296                           ;incstack = 0
 31297  01C4AA  50E1               	movf	fsr1l,w,c
 31298  01C4AC  0FFD               	addlw	-3
 31299  01C4AE  6ED9               	movwf	fsr2l,c
 31300  01C4B0  50E2               	movf	fsr1h,w,c
 31301  01C4B2  6EDA               	movwf	fsr2h,c
 31302  01C4B4  0EFF               	movlw	255
 31303  01C4B6  22DA               	addwfc	fsr2h,f,c
 31304  01C4B8  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 31305  01C4BE  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 31306  01C4C4  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 31307                           
 31308                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31309  01C4CA  52E5               	movf	postdec1,f,c
 31310  01C4CC  52E5               	movf	postdec1,f,c
 31311  01C4CE  52E5               	movf	postdec1,f,c
 31312  01C4D0  0012               	return		;funcret
 31313  01C4D2                     __end_of_UART2_SetTxInterruptHandler:
 31314                           	opt callstack 0
 31315                           
 31316 ;; *************** function _UART2_SetRxInterruptHandler *****************
 31317 ;; Defined at:
 31318 ;;		line 248 in file "mcc_generated_files/uart2.c"
 31319 ;; Parameters:    Size  Location     Type
 31320 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31321 ;;		 -> UART2_Receive_ISR(1), 
 31322 ;; Auto vars:     Size  Location     Type
 31323 ;;		None
 31324 ;; Return value:  Size  Location     Type
 31325 ;;                  1  [STACK] void 
 31326 ;; Registers used:
 31327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31328 ;; Tracked objects:
 31329 ;;		On entry : 3F/39
 31330 ;;		On exit  : 0/0
 31331 ;;		Unchanged: 0/0
 31332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31337 ;;Total ram usage:        0 bytes
 31338 ;; Hardware stack levels used:    1
 31339 ;; Hardware stack levels required when called:   15
 31340 ;; This function calls:
 31341 ;;		Nothing
 31342 ;; This function is called by:
 31343 ;;		_UART2_Initialize
 31344 ;; This function uses a reentrant model
 31345 ;;
 31346                           
 31347                           	psect	text120
 31348  01C4D2                     __ptext120:
 31349                           	opt callstack 0
 31350  01C4D2                     _UART2_SetRxInterruptHandler:
 31351                           	opt callstack 13
 31352                           
 31353                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 31354                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31355                           
 31356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31357                           ;incstack = 0
 31358  01C4D2  50E1               	movf	fsr1l,w,c
 31359  01C4D4  0FFD               	addlw	-3
 31360  01C4D6  6ED9               	movwf	fsr2l,c
 31361  01C4D8  50E2               	movf	fsr1h,w,c
 31362  01C4DA  6EDA               	movwf	fsr2h,c
 31363  01C4DC  0EFF               	movlw	255
 31364  01C4DE  22DA               	addwfc	fsr2h,f,c
 31365  01C4E0  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 31366  01C4E6  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 31367  01C4EC  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 31368                           
 31369                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31370  01C4F2  52E5               	movf	postdec1,f,c
 31371  01C4F4  52E5               	movf	postdec1,f,c
 31372  01C4F6  52E5               	movf	postdec1,f,c
 31373  01C4F8  0012               	return		;funcret
 31374  01C4FA                     __end_of_UART2_SetRxInterruptHandler:
 31375                           	opt callstack 0
 31376                           
 31377 ;; *************** function _UART1_Initialize *****************
 31378 ;; Defined at:
 31379 ;;		line 75 in file "mcc_generated_files/uart1.c"
 31380 ;; Parameters:    Size  Location     Type
 31381 ;;		None
 31382 ;; Auto vars:     Size  Location     Type
 31383 ;;		None
 31384 ;; Return value:  Size  Location     Type
 31385 ;;                  1  [STACK] void 
 31386 ;; Registers used:
 31387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31388 ;; Tracked objects:
 31389 ;;		On entry : 0/39
 31390 ;;		On exit  : 3F/39
 31391 ;;		Unchanged: 0/0
 31392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31397 ;;Total ram usage:        0 bytes
 31398 ;; Hardware stack levels used:    1
 31399 ;; Hardware stack levels required when called:   16
 31400 ;; This function calls:
 31401 ;;		_UART1_SetRxInterruptHandler
 31402 ;; This function is called by:
 31403 ;;		_SYSTEM_Initialize
 31404 ;; This function uses a reentrant model
 31405 ;;
 31406                           
 31407                           	psect	text121
 31408  01BD6E                     __ptext121:
 31409                           	opt callstack 0
 31410  01BD6E                     _UART1_Initialize:
 31411                           	opt callstack 13
 31412                           
 31413                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 31414                           
 31415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31416                           ;incstack = 0
 31417  01BD6E  0139               	movlb	57	; () banked
 31418  01BD70  9793               	bcf	147,3,b	;volatile
 31419                           
 31420                           ; BSR set to: 57
 31421                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 31422  01BD72  0ED0               	movlw	low _UART1_Receive_ISR
 31423  01BD74  6EE6               	movwf	postinc1,c
 31424  01BD76  0EC7               	movlw	high _UART1_Receive_ISR
 31425  01BD78  6EE6               	movwf	postinc1,c
 31426  01BD7A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 31427  01BD7C  6EE6               	movwf	postinc1,c
 31428  01BD7E  EC7D  F0E2         	call	_UART1_SetRxInterruptHandler	;wreg free
 31429                           
 31430                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 31431  01BD82  013D               	movlb	61	; () banked
 31432  01BD84  6BEC               	clrf	236,b	;volatile
 31433                           
 31434                           ; BSR set to: 61
 31435                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 31436  01BD86  6BED               	clrf	237,b	;volatile
 31437                           
 31438                           ; BSR set to: 61
 31439                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 31440  01BD88  6BEE               	clrf	238,b	;volatile
 31441                           
 31442                           ; BSR set to: 61
 31443                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 31444  01BD8A  6BEF               	clrf	239,b	;volatile
 31445                           
 31446                           ; BSR set to: 61
 31447                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 31448  01BD8C  6BF0               	clrf	240,b	;volatile
 31449                           
 31450                           ; BSR set to: 61
 31451                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 31452  01BD8E  6BF1               	clrf	241,b	;volatile
 31453                           
 31454                           ; BSR set to: 61
 31455                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 31456  01BD90  0EB0               	movlw	176
 31457  01BD92  6FF2               	movwf	242,b	;volatile
 31458                           
 31459                           ; BSR set to: 61
 31460                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 31461  01BD94  0E80               	movlw	128
 31462  01BD96  6FF3               	movwf	243,b	;volatile
 31463                           
 31464                           ; BSR set to: 61
 31465                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 31466  01BD98  6BF4               	clrf	244,b	;volatile
 31467                           
 31468                           ; BSR set to: 61
 31469                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 31470  01BD9A  0E8A               	movlw	138
 31471  01BD9C  6FF5               	movwf	245,b	;volatile
 31472                           
 31473                           ; BSR set to: 61
 31474                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 31475  01BD9E  6BF6               	clrf	246,b	;volatile
 31476                           
 31477                           ; BSR set to: 61
 31478                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 31479  01BDA0  6BF7               	clrf	247,b	;volatile
 31480                           
 31481                           ; BSR set to: 61
 31482                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 31483  01BDA2  6BF8               	clrf	248,b	;volatile
 31484                           
 31485                           ; BSR set to: 61
 31486                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 31487  01BDA4  6BF9               	clrf	249,b	;volatile
 31488                           
 31489                           ; BSR set to: 61
 31490                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 31491  01BDA6  6BFA               	clrf	250,b	;volatile
 31492                           
 31493                           ; BSR set to: 61
 31494                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 31495  01BDA8  6A47               	clrf	_uart1RxHead^0,c	;volatile
 31496                           
 31497                           ; BSR set to: 61
 31498                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 31499  01BDAA  0100               	movlb	0	; () banked
 31500  01BDAC  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 31501                           
 31502                           ; BSR set to: 0
 31503                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 31504  01BDAE  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 31505                           
 31506                           ; BSR set to: 0
 31507                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 31508  01BDB0  0139               	movlb	57	; () banked
 31509  01BDB2  8793               	bsf	147,3,b	;volatile
 31510                           
 31511                           ; BSR set to: 57
 31512                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31513  01BDB4  0012               	return		;funcret
 31514  01BDB6                     __end_of_UART1_Initialize:
 31515                           	opt callstack 0
 31516                           
 31517 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31518 ;; Defined at:
 31519 ;;		line 207 in file "mcc_generated_files/uart1.c"
 31520 ;; Parameters:    Size  Location     Type
 31521 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31522 ;;		 -> UART1_Receive_ISR(1), 
 31523 ;; Auto vars:     Size  Location     Type
 31524 ;;		None
 31525 ;; Return value:  Size  Location     Type
 31526 ;;                  1  [STACK] void 
 31527 ;; Registers used:
 31528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31529 ;; Tracked objects:
 31530 ;;		On entry : 3F/39
 31531 ;;		On exit  : 0/0
 31532 ;;		Unchanged: 0/0
 31533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31538 ;;Total ram usage:        0 bytes
 31539 ;; Hardware stack levels used:    1
 31540 ;; Hardware stack levels required when called:   15
 31541 ;; This function calls:
 31542 ;;		Nothing
 31543 ;; This function is called by:
 31544 ;;		_UART1_Initialize
 31545 ;; This function uses a reentrant model
 31546 ;;
 31547                           
 31548                           	psect	text122
 31549  01C4FA                     __ptext122:
 31550                           	opt callstack 0
 31551  01C4FA                     _UART1_SetRxInterruptHandler:
 31552                           	opt callstack 13
 31553                           
 31554                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 31555                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31556                           
 31557                           ; BSR set to: 57
 31558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31559                           ;incstack = 0
 31560  01C4FA  50E1               	movf	fsr1l,w,c
 31561  01C4FC  0FFD               	addlw	-3
 31562  01C4FE  6ED9               	movwf	fsr2l,c
 31563  01C500  50E2               	movf	fsr1h,w,c
 31564  01C502  6EDA               	movwf	fsr2h,c
 31565  01C504  0EFF               	movlw	255
 31566  01C506  22DA               	addwfc	fsr2h,f,c
 31567  01C508  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 31568  01C50E  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 31569  01C514  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 31570                           
 31571                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31572  01C51A  52E5               	movf	postdec1,f,c
 31573  01C51C  52E5               	movf	postdec1,f,c
 31574  01C51E  52E5               	movf	postdec1,f,c
 31575  01C520  0012               	return		;funcret
 31576  01C522                     __end_of_UART1_SetRxInterruptHandler:
 31577                           	opt callstack 0
 31578                           
 31579 ;; *************** function _TMR6_Initialize *****************
 31580 ;; Defined at:
 31581 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 31582 ;; Parameters:    Size  Location     Type
 31583 ;;		None
 31584 ;; Auto vars:     Size  Location     Type
 31585 ;;		None
 31586 ;; Return value:  Size  Location     Type
 31587 ;;                  1  [STACK] void 
 31588 ;; Registers used:
 31589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31590 ;; Tracked objects:
 31591 ;;		On entry : 3F/39
 31592 ;;		On exit  : 0/0
 31593 ;;		Unchanged: 0/0
 31594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31599 ;;Total ram usage:        0 bytes
 31600 ;; Hardware stack levels used:    1
 31601 ;; Hardware stack levels required when called:   16
 31602 ;; This function calls:
 31603 ;;		_TMR6_SetInterruptHandler
 31604 ;; This function is called by:
 31605 ;;		_SYSTEM_Initialize
 31606 ;; This function uses a reentrant model
 31607 ;;
 31608                           
 31609                           	psect	text123
 31610  01C430                     __ptext123:
 31611                           	opt callstack 0
 31612  01C430                     _TMR6_Initialize:
 31613                           	opt callstack 13
 31614                           
 31615                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 31616                           
 31617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31618                           ;incstack = 0
 31619  01C430  0E01               	movlw	1
 31620  01C432  6E96               	movwf	150,c	;volatile
 31621                           
 31622                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 31623  01C434  6A95               	clrf	149,c	;volatile
 31624                           
 31625                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 31626  01C436  6A97               	clrf	151,c	;volatile
 31627                           
 31628                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 31629  01C438  0E7C               	movlw	124
 31630  01C43A  6E93               	movwf	147,c	;volatile
 31631                           
 31632                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 31633  01C43C  6A92               	clrf	146,c	;volatile
 31634                           
 31635                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 31636  01C43E  0139               	movlb	57	; () banked
 31637  01C440  91A9               	bcf	169,0,b	;volatile
 31638                           
 31639                           ; BSR set to: 57
 31640                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 31641  01C442  8199               	bsf	153,0,b	;volatile
 31642                           
 31643                           ; BSR set to: 57
 31644                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 31645  01C444  0E44               	movlw	low _TMR6_DefaultInterruptHandler
 31646  01C446  6EE6               	movwf	postinc1,c
 31647  01C448  0EBC               	movlw	high _TMR6_DefaultInterruptHandler
 31648  01C44A  6EE6               	movwf	postinc1,c
 31649  01C44C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 31650  01C44E  6EE6               	movwf	postinc1,c
 31651  01C450  EC91  F0E2         	call	_TMR6_SetInterruptHandler	;wreg free
 31652                           
 31653                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 31654  01C454  0EE0               	movlw	224
 31655  01C456  6E94               	movwf	148,c	;volatile
 31656                           
 31657                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31658  01C458  0012               	return		;funcret
 31659  01C45A                     __end_of_TMR6_Initialize:
 31660                           	opt callstack 0
 31661                           
 31662 ;; *************** function _TMR6_SetInterruptHandler *****************
 31663 ;; Defined at:
 31664 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 31665 ;; Parameters:    Size  Location     Type
 31666 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31667 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 31668 ;; Auto vars:     Size  Location     Type
 31669 ;;		None
 31670 ;; Return value:  Size  Location     Type
 31671 ;;                  1  [STACK] void 
 31672 ;; Registers used:
 31673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31674 ;; Tracked objects:
 31675 ;;		On entry : 3F/39
 31676 ;;		On exit  : 0/0
 31677 ;;		Unchanged: 0/0
 31678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31683 ;;Total ram usage:        0 bytes
 31684 ;; Hardware stack levels used:    1
 31685 ;; Hardware stack levels required when called:   15
 31686 ;; This function calls:
 31687 ;;		Nothing
 31688 ;; This function is called by:
 31689 ;;		_TMR6_Initialize
 31690 ;; This function uses a reentrant model
 31691 ;;
 31692                           
 31693                           	psect	text124
 31694  01C522                     __ptext124:
 31695                           	opt callstack 0
 31696  01C522                     _TMR6_SetInterruptHandler:
 31697                           	opt callstack 13
 31698                           
 31699                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 31700                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31701                           
 31702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31703                           ;incstack = 0
 31704  01C522  50E1               	movf	fsr1l,w,c
 31705  01C524  0FFD               	addlw	-3
 31706  01C526  6ED9               	movwf	fsr2l,c
 31707  01C528  50E2               	movf	fsr1h,w,c
 31708  01C52A  6EDA               	movwf	fsr2h,c
 31709  01C52C  0EFF               	movlw	255
 31710  01C52E  22DA               	addwfc	fsr2h,f,c
 31711  01C530  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 31712  01C536  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 31713  01C53C  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 31714                           
 31715                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31716  01C542  52E5               	movf	postdec1,f,c
 31717  01C544  52E5               	movf	postdec1,f,c
 31718  01C546  52E5               	movf	postdec1,f,c
 31719  01C548  0012               	return		;funcret
 31720  01C54A                     __end_of_TMR6_SetInterruptHandler:
 31721                           	opt callstack 0
 31722                           
 31723 ;; *************** function _TMR5_Initialize *****************
 31724 ;; Defined at:
 31725 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 31726 ;; Parameters:    Size  Location     Type
 31727 ;;		None
 31728 ;; Auto vars:     Size  Location     Type
 31729 ;;		None
 31730 ;; Return value:  Size  Location     Type
 31731 ;;                  1  [STACK] void 
 31732 ;; Registers used:
 31733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31734 ;; Tracked objects:
 31735 ;;		On entry : 0/39
 31736 ;;		On exit  : 0/0
 31737 ;;		Unchanged: 0/0
 31738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31743 ;;Total ram usage:        0 bytes
 31744 ;; Hardware stack levels used:    1
 31745 ;; Hardware stack levels required when called:   16
 31746 ;; This function calls:
 31747 ;;		_TMR5_SetInterruptHandler
 31748 ;; This function is called by:
 31749 ;;		_SYSTEM_Initialize
 31750 ;; This function uses a reentrant model
 31751 ;;
 31752                           
 31753                           	psect	text125
 31754  01BDB6                     __ptext125:
 31755                           	opt callstack 0
 31756  01BDB6                     _TMR5_Initialize:
 31757                           	opt callstack 13
 31758                           
 31759                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 31760                           
 31761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31762                           ;incstack = 0
 31763  01BDB6  6A9B               	clrf	155,c	;volatile
 31764                           
 31765                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 31766  01BDB8  6A9C               	clrf	156,c	;volatile
 31767                           
 31768                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 31769  01BDBA  0E01               	movlw	1
 31770  01BDBC  6E9D               	movwf	157,c	;volatile
 31771                           
 31772                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 31773  01BDBE  0E63               	movlw	99
 31774  01BDC0  6E99               	movwf	153,c	;volatile
 31775                           
 31776                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 31777  01BDC2  0EC0               	movlw	192
 31778  01BDC4  6E98               	movwf	152,c	;volatile
 31779                           
 31780                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 31781  01BDC6  5098               	movf	152,w,c	;volatile
 31782  01BDC8  006F FE64  F001    	movff	16281,btemp	;volatile
 31783  01BDCE  6A02               	clrf	(btemp+1)^0,c
 31784  01BDD0  0060  F004  F002   	movff	btemp,btemp+1
 31785  01BDD6  6A01               	clrf	btemp^0,c
 31786  01BDD8  1001               	iorwf	btemp^0,w,c
 31787  01BDDA  0100               	movlb	0	; () banked
 31788  01BDDC  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 31789  01BDDE  5002               	movf	(btemp+1)^0,w,c
 31790  01BDE0  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 31791                           
 31792                           ; BSR set to: 0
 31793                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 31794  01BDE2  0139               	movlb	57	; () banked
 31795  01BDE4  9DA8               	bcf	168,6,b	;volatile
 31796                           
 31797                           ; BSR set to: 57
 31798                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 31799  01BDE6  8D98               	bsf	152,6,b	;volatile
 31800                           
 31801                           ; BSR set to: 57
 31802                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 31803  01BDE8  0E48               	movlw	low _TMR5_DefaultInterruptHandler
 31804  01BDEA  6EE6               	movwf	postinc1,c
 31805  01BDEC  0EC1               	movlw	high _TMR5_DefaultInterruptHandler
 31806  01BDEE  6EE6               	movwf	postinc1,c
 31807  01BDF0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 31808  01BDF2  6EE6               	movwf	postinc1,c
 31809  01BDF4  ECA5  F0E2         	call	_TMR5_SetInterruptHandler	;wreg free
 31810                           
 31811                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 31812  01BDF8  0E31               	movlw	49
 31813  01BDFA  6E9A               	movwf	154,c	;volatile
 31814                           
 31815                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31816  01BDFC  0012               	return		;funcret
 31817  01BDFE                     __end_of_TMR5_Initialize:
 31818                           	opt callstack 0
 31819                           
 31820 ;; *************** function _TMR5_SetInterruptHandler *****************
 31821 ;; Defined at:
 31822 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 31823 ;; Parameters:    Size  Location     Type
 31824 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31825 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 31826 ;; Auto vars:     Size  Location     Type
 31827 ;;		None
 31828 ;; Return value:  Size  Location     Type
 31829 ;;                  1  [STACK] void 
 31830 ;; Registers used:
 31831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31832 ;; Tracked objects:
 31833 ;;		On entry : 3F/39
 31834 ;;		On exit  : 0/0
 31835 ;;		Unchanged: 0/0
 31836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31841 ;;Total ram usage:        0 bytes
 31842 ;; Hardware stack levels used:    1
 31843 ;; Hardware stack levels required when called:   15
 31844 ;; This function calls:
 31845 ;;		Nothing
 31846 ;; This function is called by:
 31847 ;;		_TMR5_Initialize
 31848 ;; This function uses a reentrant model
 31849 ;;
 31850                           
 31851                           	psect	text126
 31852  01C54A                     __ptext126:
 31853                           	opt callstack 0
 31854  01C54A                     _TMR5_SetInterruptHandler:
 31855                           	opt callstack 13
 31856                           
 31857                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 31858                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31859                           
 31860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31861                           ;incstack = 0
 31862  01C54A  50E1               	movf	fsr1l,w,c
 31863  01C54C  0FFD               	addlw	-3
 31864  01C54E  6ED9               	movwf	fsr2l,c
 31865  01C550  50E2               	movf	fsr1h,w,c
 31866  01C552  6EDA               	movwf	fsr2h,c
 31867  01C554  0EFF               	movlw	255
 31868  01C556  22DA               	addwfc	fsr2h,f,c
 31869  01C558  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 31870  01C55E  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 31871  01C564  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 31872                           
 31873                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31874  01C56A  52E5               	movf	postdec1,f,c
 31875  01C56C  52E5               	movf	postdec1,f,c
 31876  01C56E  52E5               	movf	postdec1,f,c
 31877  01C570  0012               	return		;funcret
 31878  01C572                     __end_of_TMR5_SetInterruptHandler:
 31879                           	opt callstack 0
 31880                           
 31881 ;; *************** function _TMR3_Initialize *****************
 31882 ;; Defined at:
 31883 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 31884 ;; Parameters:    Size  Location     Type
 31885 ;;		None
 31886 ;; Auto vars:     Size  Location     Type
 31887 ;;		None
 31888 ;; Return value:  Size  Location     Type
 31889 ;;                  1  [STACK] void 
 31890 ;; Registers used:
 31891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31892 ;; Tracked objects:
 31893 ;;		On entry : 0/39
 31894 ;;		On exit  : 0/0
 31895 ;;		Unchanged: 0/0
 31896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31901 ;;Total ram usage:        0 bytes
 31902 ;; Hardware stack levels used:    1
 31903 ;; Hardware stack levels required when called:   16
 31904 ;; This function calls:
 31905 ;;		_TMR3_SetInterruptHandler
 31906 ;; This function is called by:
 31907 ;;		_SYSTEM_Initialize
 31908 ;; This function uses a reentrant model
 31909 ;;
 31910                           
 31911                           	psect	text127
 31912  01BDFE                     __ptext127:
 31913                           	opt callstack 0
 31914  01BDFE                     _TMR3_Initialize:
 31915                           	opt callstack 13
 31916                           
 31917                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 31918                           
 31919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31920                           ;incstack = 0
 31921  01BDFE  6AA7               	clrf	167,c	;volatile
 31922                           
 31923                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 31924  01BE00  6AA8               	clrf	168,c	;volatile
 31925                           
 31926                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 31927  01BE02  0E01               	movlw	1
 31928  01BE04  6EA9               	movwf	169,c	;volatile
 31929                           
 31930                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 31931  01BE06  0E3C               	movlw	60
 31932  01BE08  6EA5               	movwf	165,c	;volatile
 31933                           
 31934                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 31935  01BE0A  0EB0               	movlw	176
 31936  01BE0C  6EA4               	movwf	164,c	;volatile
 31937                           
 31938                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 31939  01BE0E  50A4               	movf	164,w,c	;volatile
 31940  01BE10  006F FE94  F001    	movff	16293,btemp	;volatile
 31941  01BE16  6A02               	clrf	(btemp+1)^0,c
 31942  01BE18  0060  F004  F002   	movff	btemp,btemp+1
 31943  01BE1E  6A01               	clrf	btemp^0,c
 31944  01BE20  1001               	iorwf	btemp^0,w,c
 31945  01BE22  0100               	movlb	0	; () banked
 31946  01BE24  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 31947  01BE26  5002               	movf	(btemp+1)^0,w,c
 31948  01BE28  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 31949                           
 31950                           ; BSR set to: 0
 31951                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31952  01BE2A  0139               	movlb	57	; () banked
 31953  01BE2C  9DA6               	bcf	166,6,b	;volatile
 31954                           
 31955                           ; BSR set to: 57
 31956                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31957  01BE2E  8D96               	bsf	150,6,b	;volatile
 31958                           
 31959                           ; BSR set to: 57
 31960                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31961  01BE30  0EA0               	movlw	low _TMR3_DefaultInterruptHandler
 31962  01BE32  6EE6               	movwf	postinc1,c
 31963  01BE34  0ECA               	movlw	high _TMR3_DefaultInterruptHandler
 31964  01BE36  6EE6               	movwf	postinc1,c
 31965  01BE38  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 31966  01BE3A  6EE6               	movwf	postinc1,c
 31967  01BE3C  ECB9  F0E2         	call	_TMR3_SetInterruptHandler	;wreg free
 31968                           
 31969                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31970  01BE40  0E31               	movlw	49
 31971  01BE42  6EA6               	movwf	166,c	;volatile
 31972                           
 31973                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31974  01BE44  0012               	return		;funcret
 31975  01BE46                     __end_of_TMR3_Initialize:
 31976                           	opt callstack 0
 31977                           
 31978 ;; *************** function _TMR3_SetInterruptHandler *****************
 31979 ;; Defined at:
 31980 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31981 ;; Parameters:    Size  Location     Type
 31982 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31983 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31984 ;; Auto vars:     Size  Location     Type
 31985 ;;		None
 31986 ;; Return value:  Size  Location     Type
 31987 ;;                  1  [STACK] void 
 31988 ;; Registers used:
 31989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31990 ;; Tracked objects:
 31991 ;;		On entry : 0/0
 31992 ;;		On exit  : 0/0
 31993 ;;		Unchanged: 0/0
 31994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31999 ;;Total ram usage:        0 bytes
 32000 ;; Hardware stack levels used:    1
 32001 ;; Hardware stack levels required when called:   15
 32002 ;; This function calls:
 32003 ;;		Nothing
 32004 ;; This function is called by:
 32005 ;;		_TMR3_Initialize
 32006 ;;		_init_bsoc
 32007 ;; This function uses a reentrant model
 32008 ;;
 32009                           
 32010                           	psect	text128
 32011  01C572                     __ptext128:
 32012                           	opt callstack 0
 32013  01C572                     _TMR3_SetInterruptHandler:
 32014                           	opt callstack 14
 32015                           
 32016                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 32017                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32018                           
 32019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32020                           ;incstack = 0
 32021  01C572  50E1               	movf	fsr1l,w,c
 32022  01C574  0FFD               	addlw	-3
 32023  01C576  6ED9               	movwf	fsr2l,c
 32024  01C578  50E2               	movf	fsr1h,w,c
 32025  01C57A  6EDA               	movwf	fsr2h,c
 32026  01C57C  0EFF               	movlw	255
 32027  01C57E  22DA               	addwfc	fsr2h,f,c
 32028  01C580  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 32029  01C586  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 32030  01C58C  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 32031                           
 32032                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32033  01C592  52E5               	movf	postdec1,f,c
 32034  01C594  52E5               	movf	postdec1,f,c
 32035  01C596  52E5               	movf	postdec1,f,c
 32036  01C598  0012               	return		;funcret
 32037  01C59A                     __end_of_TMR3_SetInterruptHandler:
 32038                           	opt callstack 0
 32039                           
 32040 ;; *************** function _TMR2_Initialize *****************
 32041 ;; Defined at:
 32042 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 32043 ;; Parameters:    Size  Location     Type
 32044 ;;		None
 32045 ;; Auto vars:     Size  Location     Type
 32046 ;;		None
 32047 ;; Return value:  Size  Location     Type
 32048 ;;                  1  [STACK] void 
 32049 ;; Registers used:
 32050 ;;		wreg, status,2
 32051 ;; Tracked objects:
 32052 ;;		On entry : 3F/3F
 32053 ;;		On exit  : 3F/39
 32054 ;;		Unchanged: 0/0
 32055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32060 ;;Total ram usage:        0 bytes
 32061 ;; Hardware stack levels used:    1
 32062 ;; Hardware stack levels required when called:   15
 32063 ;; This function calls:
 32064 ;;		Nothing
 32065 ;; This function is called by:
 32066 ;;		_SYSTEM_Initialize
 32067 ;; This function uses a reentrant model
 32068 ;;
 32069                           
 32070                           	psect	text129
 32071  01C916                     __ptext129:
 32072                           	opt callstack 0
 32073  01C916                     _TMR2_Initialize:
 32074                           	opt callstack 14
 32075                           
 32076                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 32077                           
 32078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32079                           ;incstack = 0
 32080  01C916  0E01               	movlw	1
 32081  01C918  6EAE               	movwf	174,c	;volatile
 32082                           
 32083                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 32084  01C91A  6AAD               	clrf	173,c	;volatile
 32085                           
 32086                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 32087  01C91C  6AAF               	clrf	175,c	;volatile
 32088                           
 32089                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 32090  01C91E  0E63               	movlw	99
 32091  01C920  6EAB               	movwf	171,c	;volatile
 32092                           
 32093                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 32094  01C922  6AAA               	clrf	170,c	;volatile
 32095                           
 32096                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 32097  01C924  0139               	movlb	57	; () banked
 32098  01C926  95A4               	bcf	164,2,b	;volatile
 32099                           
 32100                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 32101  01C928  0EC0               	movlw	192
 32102  01C92A  6EAC               	movwf	172,c	;volatile
 32103                           
 32104                           ; BSR set to: 57
 32105                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32106  01C92C  0012               	return		;funcret
 32107  01C92E                     __end_of_TMR2_Initialize:
 32108                           	opt callstack 0
 32109                           
 32110 ;; *************** function _SPI1_Initialize *****************
 32111 ;; Defined at:
 32112 ;;		line 64 in file "mcc_generated_files/spi1.c"
 32113 ;; Parameters:    Size  Location     Type
 32114 ;;		None
 32115 ;; Auto vars:     Size  Location     Type
 32116 ;;		None
 32117 ;; Return value:  Size  Location     Type
 32118 ;;                  1  [STACK] void 
 32119 ;; Registers used:
 32120 ;;		wreg, status,2
 32121 ;; Tracked objects:
 32122 ;;		On entry : 3F/39
 32123 ;;		On exit  : 3F/3D
 32124 ;;		Unchanged: 0/0
 32125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32130 ;;Total ram usage:        0 bytes
 32131 ;; Hardware stack levels used:    1
 32132 ;; Hardware stack levels required when called:   15
 32133 ;; This function calls:
 32134 ;;		Nothing
 32135 ;; This function is called by:
 32136 ;;		_SYSTEM_Initialize
 32137 ;; This function uses a reentrant model
 32138 ;;
 32139                           
 32140                           	psect	text130
 32141  01C92E                     __ptext130:
 32142                           	opt callstack 0
 32143  01C92E                     _SPI1_Initialize:
 32144                           	opt callstack 14
 32145                           
 32146                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 32147                           
 32148                           ; BSR set to: 57
 32149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32150                           ;incstack = 0
 32151  01C92E  0E40               	movlw	64
 32152  01C930  013D               	movlb	61	; () banked
 32153  01C932  6F15               	movwf	21,b	;volatile
 32154                           
 32155                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 32156  01C934  0E03               	movlw	3
 32157  01C936  6F16               	movwf	22,b	;volatile
 32158                           
 32159                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 32160  01C938  0E4F               	movlw	79
 32161  01C93A  6F19               	movwf	25,b	;volatile
 32162                           
 32163                           ; BSR set to: 61
 32164                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 32165  01C93C  6B1C               	clrf	28,b	;volatile
 32166                           
 32167                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 32168  01C93E  0E83               	movlw	131
 32169  01C940  6F14               	movwf	20,b	;volatile
 32170                           
 32171                           ; BSR set to: 61
 32172                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32173  01C942  0012               	return		;funcret
 32174  01C944                     __end_of_SPI1_Initialize:
 32175                           	opt callstack 0
 32176                           
 32177 ;; *************** function _PWM8_Initialize *****************
 32178 ;; Defined at:
 32179 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 32180 ;; Parameters:    Size  Location     Type
 32181 ;;		None
 32182 ;; Auto vars:     Size  Location     Type
 32183 ;;		None
 32184 ;; Return value:  Size  Location     Type
 32185 ;;                  1  [STACK] void 
 32186 ;; Registers used:
 32187 ;;		wreg, status,2
 32188 ;; Tracked objects:
 32189 ;;		On entry : 0/3E
 32190 ;;		On exit  : 3F/3F
 32191 ;;		Unchanged: 0/0
 32192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32197 ;;Total ram usage:        0 bytes
 32198 ;; Hardware stack levels used:    1
 32199 ;; Hardware stack levels required when called:   15
 32200 ;; This function calls:
 32201 ;;		Nothing
 32202 ;; This function is called by:
 32203 ;;		_SYSTEM_Initialize
 32204 ;; This function uses a reentrant model
 32205 ;;
 32206                           
 32207                           	psect	text131
 32208  01C944                     __ptext131:
 32209                           	opt callstack 0
 32210  01C944                     _PWM8_Initialize:
 32211                           	opt callstack 14
 32212                           
 32213                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 32214                           
 32215                           ; BSR set to: 61
 32216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32217                           ;incstack = 0
 32218  01C944  0E80               	movlw	128
 32219  01C946  6E62               	movwf	98,c	;volatile
 32220                           
 32221                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 32222  01C948  6A61               	clrf	97,c	;volatile
 32223                           
 32224                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 32225  01C94A  0E40               	movlw	64
 32226  01C94C  6E60               	movwf	96,c	;volatile
 32227                           
 32228                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 32229  01C94E  013F               	movlb	63	; () banked
 32230  01C950  515F               	movf	95,w,b	;volatile
 32231  01C952  0B3F               	andlw	-193
 32232  01C954  0940               	iorlw	64
 32233  01C956  6F5F               	movwf	95,b	;volatile
 32234                           
 32235                           ; BSR set to: 63
 32236                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32237  01C958  0012               	return		;funcret
 32238  01C95A                     __end_of_PWM8_Initialize:
 32239                           	opt callstack 0
 32240                           
 32241 ;; *************** function _PMD_Initialize *****************
 32242 ;; Defined at:
 32243 ;;		line 90 in file "mcc_generated_files/mcc.c"
 32244 ;; Parameters:    Size  Location     Type
 32245 ;;		None
 32246 ;; Auto vars:     Size  Location     Type
 32247 ;;		None
 32248 ;; Return value:  Size  Location     Type
 32249 ;;                  1  [STACK] void 
 32250 ;; Registers used:
 32251 ;;		None
 32252 ;; Tracked objects:
 32253 ;;		On entry : 3F/39
 32254 ;;		On exit  : 3F/39
 32255 ;;		Unchanged: 0/0
 32256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32261 ;;Total ram usage:        0 bytes
 32262 ;; Hardware stack levels used:    1
 32263 ;; Hardware stack levels required when called:   15
 32264 ;; This function calls:
 32265 ;;		Nothing
 32266 ;; This function is called by:
 32267 ;;		_SYSTEM_Initialize
 32268 ;; This function uses a reentrant model
 32269 ;;
 32270                           
 32271                           	psect	text132
 32272  01C970                     __ptext132:
 32273                           	opt callstack 0
 32274  01C970                     _PMD_Initialize:
 32275                           	opt callstack 14
 32276                           
 32277                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 32278                           
 32279                           ; BSR set to: 63
 32280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32281                           ;incstack = 0
 32282  01C970  0139               	movlb	57	; () banked
 32283  01C972  6BC0               	clrf	192,b	;volatile
 32284                           
 32285                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 32286  01C974  6BC1               	clrf	193,b	;volatile
 32287                           
 32288                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 32289  01C976  6BC2               	clrf	194,b	;volatile
 32290                           
 32291                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 32292  01C978  6BC3               	clrf	195,b	;volatile
 32293                           
 32294                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 32295  01C97A  6BC4               	clrf	196,b	;volatile
 32296                           
 32297                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 32298  01C97C  6BC5               	clrf	197,b	;volatile
 32299                           
 32300                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 32301  01C97E  6BC6               	clrf	198,b	;volatile
 32302                           
 32303                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 32304  01C980  6BC7               	clrf	199,b	;volatile
 32305                           
 32306                           ; BSR set to: 57
 32307                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32308  01C982  0012               	return		;funcret
 32309  01C984                     __end_of_PMD_Initialize:
 32310                           	opt callstack 0
 32311                           
 32312 ;; *************** function _PIN_MANAGER_Initialize *****************
 32313 ;; Defined at:
 32314 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 32315 ;; Parameters:    Size  Location     Type
 32316 ;;		None
 32317 ;; Auto vars:     Size  Location     Type
 32318 ;;		None
 32319 ;; Return value:  Size  Location     Type
 32320 ;;                  1  [STACK] void 
 32321 ;; Registers used:
 32322 ;;		wreg, status,2
 32323 ;; Tracked objects:
 32324 ;;		On entry : 3F/39
 32325 ;;		On exit  : 3F/3A
 32326 ;;		Unchanged: 0/0
 32327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32332 ;;Total ram usage:        0 bytes
 32333 ;; Hardware stack levels used:    1
 32334 ;; Hardware stack levels required when called:   15
 32335 ;; This function calls:
 32336 ;;		Nothing
 32337 ;; This function is called by:
 32338 ;;		_SYSTEM_Initialize
 32339 ;; This function uses a reentrant model
 32340 ;;
 32341                           
 32342                           	psect	text133
 32343  01B27A                     __ptext133:
 32344                           	opt callstack 0
 32345  01B27A                     _PIN_MANAGER_Initialize:
 32346                           	opt callstack 14
 32347                           
 32348                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 32349                           
 32350                           ; BSR set to: 57
 32351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32352                           ;incstack = 0
 32353  01B27A  0E07               	movlw	7
 32354  01B27C  6EBE               	movwf	190,c	;volatile
 32355                           
 32356                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 32357  01B27E  6ABD               	clrf	189,c	;volatile
 32358                           
 32359                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 32360  01B280  6ABA               	clrf	186,c	;volatile
 32361                           
 32362                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 32363  01B282  0E23               	movlw	35
 32364  01B284  6EBF               	movwf	191,c	;volatile
 32365                           
 32366                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 32367  01B286  6ABB               	clrf	187,c	;volatile
 32368                           
 32369                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 32370  01B288  0E07               	movlw	7
 32371  01B28A  6EBC               	movwf	188,c	;volatile
 32372                           
 32373                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 32374  01B28C  6AC6               	clrf	198,c	;volatile
 32375                           
 32376                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 32377  01B28E  0E0C               	movlw	12
 32378  01B290  6EC7               	movwf	199,c	;volatile
 32379                           
 32380                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 32381  01B292  68C2               	setf	194,c	;volatile
 32382                           
 32383                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 32384  01B294  0EBF               	movlw	191
 32385  01B296  6EC3               	movwf	195,c	;volatile
 32386                           
 32387                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 32388  01B298  0E90               	movlw	144
 32389  01B29A  6EC4               	movwf	196,c	;volatile
 32390                           
 32391                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 32392  01B29C  0E0C               	movlw	12
 32393  01B29E  6EC5               	movwf	197,c	;volatile
 32394                           
 32395                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 32396  01B2A0  013A               	movlb	58	; () banked
 32397  01B2A2  6B70               	clrf	112,b	;volatile
 32398                           
 32399                           ; BSR set to: 58
 32400                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 32401  01B2A4  6B60               	clrf	96,b	;volatile
 32402                           
 32403                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 32404  01B2A6  0E3C               	movlw	60
 32405  01B2A8  6F50               	movwf	80,b	;volatile
 32406                           
 32407                           ; BSR set to: 58
 32408                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 32409  01B2AA  6B80               	clrf	128,b	;volatile
 32410                           
 32411                           ; BSR set to: 58
 32412                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 32413  01B2AC  6B90               	clrf	144,b	;volatile
 32414                           
 32415                           ; BSR set to: 58
 32416                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 32417  01B2AE  6940               	setf	64,b	;volatile
 32418                           
 32419                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 32420  01B2B0  0E0C               	movlw	12
 32421  01B2B2  6F71               	movwf	113,b	;volatile
 32422                           
 32423                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 32424  01B2B4  0E0C               	movlw	12
 32425  01B2B6  6F91               	movwf	145,b	;volatile
 32426                           
 32427                           ; BSR set to: 58
 32428                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 32429  01B2B8  6B81               	clrf	129,b	;volatile
 32430                           
 32431                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 32432  01B2BA  0E83               	movlw	131
 32433  01B2BC  6F51               	movwf	81,b	;volatile
 32434                           
 32435                           ; BSR set to: 58
 32436                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 32437  01B2BE  6B41               	clrf	65,b	;volatile
 32438                           
 32439                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 32440  01B2C0  0E97               	movlw	151
 32441  01B2C2  6F61               	movwf	97,b	;volatile
 32442                           
 32443                           ; BSR set to: 58
 32444                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 32445  01B2C4  6B82               	clrf	130,b	;volatile
 32446                           
 32447                           ; BSR set to: 58
 32448                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 32449  01B2C6  6B92               	clrf	146,b	;volatile
 32450                           
 32451                           ; BSR set to: 58
 32452                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 32453  01B2C8  6B42               	clrf	66,b	;volatile
 32454                           
 32455                           ; BSR set to: 58
 32456                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 32457  01B2CA  6B52               	clrf	82,b	;volatile
 32458                           
 32459                           ; BSR set to: 58
 32460                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 32461  01B2CC  6B62               	clrf	98,b	;volatile
 32462                           
 32463                           ; BSR set to: 58
 32464                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 32465  01B2CE  6B72               	clrf	114,b	;volatile
 32466                           
 32467                           ; BSR set to: 58
 32468                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 32469  01B2D0  6943               	setf	67,b	;volatile
 32470                           
 32471                           ; BSR set to: 58
 32472                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 32473  01B2D2  6953               	setf	83,b	;volatile
 32474                           
 32475                           ; BSR set to: 58
 32476                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 32477  01B2D4  6963               	setf	99,b	;volatile
 32478                           
 32479                           ; BSR set to: 58
 32480                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 32481  01B2D6  6973               	setf	115,b	;volatile
 32482                           
 32483                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 32484  01B2D8  0E07               	movlw	7
 32485  01B2DA  6F83               	movwf	131,b	;volatile
 32486                           
 32487                           ; BSR set to: 58
 32488                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 32489  01B2DC  6993               	setf	147,b	;volatile
 32490                           
 32491                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 32492  01B2DE  0E0F               	movlw	15
 32493  01B2E0  6FE8               	movwf	232,b	;volatile
 32494                           
 32495                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 32496  01B2E2  0E13               	movlw	19
 32497  01B2E4  6FDE               	movwf	222,b	;volatile
 32498                           
 32499                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 32500  01B2E6  0E16               	movlw	22
 32501  01B2E8  6F0E               	movwf	14,b	;volatile
 32502                           
 32503                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 32504  01B2EA  0E1E               	movlw	30
 32505  01B2EC  6F13               	movwf	19,b	;volatile
 32506                           
 32507                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 32508  01B2EE  0E08               	movlw	8
 32509  01B2F0  6FC0               	movwf	192,b	;volatile
 32510                           
 32511                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 32512  01B2F2  0E10               	movlw	16
 32513  01B2F4  6F19               	movwf	25,b	;volatile
 32514                           
 32515                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 32516  01B2F6  0E09               	movlw	9
 32517  01B2F8  6FC1               	movwf	193,b	;volatile
 32518                           
 32519                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 32520  01B2FA  0E1F               	movlw	31
 32521  01B2FC  6F15               	movwf	21,b	;volatile
 32522                           
 32523                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 32524  01B2FE  0E13               	movlw	19
 32525  01B300  6F16               	movwf	22,b	;volatile
 32526                           
 32527                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 32528  01B302  0E17               	movlw	23
 32529  01B304  6FE5               	movwf	229,b	;volatile
 32530                           
 32531                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 32532  01B306  0E14               	movlw	20
 32533  01B308  6FDF               	movwf	223,b	;volatile
 32534                           
 32535                           ; BSR set to: 58
 32536                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 32537  01B30A  0012               	return		;funcret
 32538  01B30C                     __end_of_PIN_MANAGER_Initialize:
 32539                           	opt callstack 0
 32540                           
 32541 ;; *************** function _OSCILLATOR_Initialize *****************
 32542 ;; Defined at:
 32543 ;;		line 72 in file "mcc_generated_files/mcc.c"
 32544 ;; Parameters:    Size  Location     Type
 32545 ;;		None
 32546 ;; Auto vars:     Size  Location     Type
 32547 ;;		None
 32548 ;; Return value:  Size  Location     Type
 32549 ;;                  1  [STACK] void 
 32550 ;; Registers used:
 32551 ;;		wreg, status,2
 32552 ;; Tracked objects:
 32553 ;;		On entry : 3F/3A
 32554 ;;		On exit  : 3F/39
 32555 ;;		Unchanged: 0/0
 32556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32561 ;;Total ram usage:        0 bytes
 32562 ;; Hardware stack levels used:    1
 32563 ;; Hardware stack levels required when called:   15
 32564 ;; This function calls:
 32565 ;;		Nothing
 32566 ;; This function is called by:
 32567 ;;		_SYSTEM_Initialize
 32568 ;; This function uses a reentrant model
 32569 ;;
 32570                           
 32571                           	psect	text134
 32572  01C95A                     __ptext134:
 32573                           	opt callstack 0
 32574  01C95A                     _OSCILLATOR_Initialize:
 32575                           	opt callstack 14
 32576                           
 32577                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 32578                           
 32579                           ; BSR set to: 58
 32580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32581                           ;incstack = 0
 32582  01C95A  0E20               	movlw	32
 32583  01C95C  0139               	movlb	57	; () banked
 32584  01C95E  6FD9               	movwf	217,b	;volatile
 32585                           
 32586                           ; BSR set to: 57
 32587                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 32588  01C960  6BDB               	clrf	219,b	;volatile
 32589                           
 32590                           ; BSR set to: 57
 32591                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 32592  01C962  6BDD               	clrf	221,b	;volatile
 32593                           
 32594                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 32595  01C964  0E02               	movlw	2
 32596  01C966  6FDF               	movwf	223,b	;volatile
 32597                           
 32598                           ; BSR set to: 57
 32599                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 32600  01C968  6BDE               	clrf	222,b	;volatile
 32601  01C96A                     l169:
 32602                           
 32603                           ; BSR set to: 57
 32604                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 32605  01C96A  B1DC               	btfsc	220,0,b	;volatile
 32606  01C96C  0012               	return	
 32607  01C96E  D7FD               	goto	l169
 32608  01C970                     __end_of_OSCILLATOR_Initialize:
 32609                           	opt callstack 0
 32610                           
 32611 ;; *************** function _INTERRUPT_Initialize *****************
 32612 ;; Defined at:
 32613 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 32614 ;; Parameters:    Size  Location     Type
 32615 ;;		None
 32616 ;; Auto vars:     Size  Location     Type
 32617 ;;  state           1  [STACK] _Bool 
 32618 ;; Return value:  Size  Location     Type
 32619 ;;                  1  [STACK] void 
 32620 ;; Registers used:
 32621 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 32622 ;; Tracked objects:
 32623 ;;		On entry : 0/0
 32624 ;;		On exit  : 3F/39
 32625 ;;		Unchanged: 0/0
 32626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32631 ;;Total ram usage:        0 bytes
 32632 ;; Hardware stack levels used:    1
 32633 ;; Hardware stack levels required when called:   15
 32634 ;; This function calls:
 32635 ;;		Nothing
 32636 ;; This function is called by:
 32637 ;;		_SYSTEM_Initialize
 32638 ;; This function uses a reentrant model
 32639 ;;
 32640                           
 32641                           	psect	text135
 32642  01B8A4                     __ptext135:
 32643                           	opt callstack 0
 32644  01B8A4                     _INTERRUPT_Initialize:
 32645                           	opt callstack 0
 32646                           
 32647                           ; BSR set to: 57
 32648                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32649  01B8A4  52E6               	movf	postinc1,f,c
 32650                           
 32651                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 32652                           
 32653                           ;incstack = 0
 32654  01B8A6  8AD2               	bsf	210,5,c	;volatile
 32655                           
 32656                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 32657  01B8A8  AED2               	btfss	16338,7,c	;volatile
 32658  01B8AA  D003               	goto	u9680
 32659  01B8AC  6A0C               	clrf	(btemp+11)^0,c
 32660  01B8AE  2A0C               	incf	(btemp+11)^0,f,c
 32661  01B8B0  D001               	goto	u9698
 32662  01B8B2                     u9680:
 32663  01B8B2  6A0C               	clrf	(btemp+11)^0,c
 32664  01B8B4                     u9698:
 32665                           
 32666                           ;stkvar	_state @ sp[(-1)+0]
 32667  01B8B4  0EFF               	movlw	-1
 32668  01B8B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 32669                           
 32670                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 32671  01B8BC  9ED2               	bcf	16338,7,c	;volatile
 32672                           
 32673                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 32674  01B8BE  0E55               	movlw	85
 32675  01B8C0  6ED4               	movwf	212,c	;volatile
 32676                           
 32677                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 32678  01B8C2  0EAA               	movlw	170
 32679  01B8C4  6ED4               	movwf	212,c	;volatile
 32680                           
 32681                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 32682  01B8C6  90D4               	bcf	212,0,c	;volatile
 32683                           
 32684                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 32685  01B8C8  0138               	movlb	56	; () banked
 32686  01B8CA  6B9F               	clrf	159,b	;volatile
 32687                           
 32688                           ; BSR set to: 56
 32689                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 32690  01B8CC  6B9E               	clrf	158,b	;volatile
 32691                           
 32692                           ; BSR set to: 56
 32693                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 32694  01B8CE  0E08               	movlw	8
 32695  01B8D0  6F9D               	movwf	157,b	;volatile
 32696                           
 32697                           ; BSR set to: 56
 32698                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 32699  01B8D2  0E55               	movlw	85
 32700  01B8D4  6ED4               	movwf	212,c	;volatile
 32701                           
 32702                           ; BSR set to: 56
 32703                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 32704  01B8D6  0EAA               	movlw	170
 32705  01B8D8  6ED4               	movwf	212,c	;volatile
 32706                           
 32707                           ; BSR set to: 56
 32708                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 32709  01B8DA  80D4               	bsf	212,0,c	;volatile
 32710                           
 32711                           ; BSR set to: 56
 32712                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 32713                           ;stkvar	_state @ sp[(-1)+0]
 32714  01B8DC  0EFF               	movlw	-1
 32715  01B8DE  B0E3               	btfsc	plusw1,0,c
 32716  01B8E0  D002               	bra	u9705
 32717  01B8E2  9ED2               	bcf	16338,7,c	;volatile
 32718  01B8E4  D001               	bra	u9706
 32719  01B8E6                     u9705:
 32720  01B8E6  8ED2               	bsf	16338,7,c	;volatile
 32721  01B8E8                     u9706:
 32722                           
 32723                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 32724  01B8E8  0139               	movlb	57	; () banked
 32725  01B8EA  8782               	bsf	130,3,b	;volatile
 32726                           
 32727                           ; BSR set to: 57
 32728                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 32729  01B8EC  8382               	bsf	130,1,b	;volatile
 32730                           
 32731                           ; BSR set to: 57
 32732                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 32733  01B8EE  8182               	bsf	130,0,b	;volatile
 32734                           
 32735                           ; BSR set to: 57
 32736                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 32737  01B8F0  8582               	bsf	130,2,b	;volatile
 32738                           
 32739                           ; BSR set to: 57
 32740                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 32741  01B8F2  8786               	bsf	134,3,b	;volatile
 32742                           
 32743                           ; BSR set to: 57
 32744                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 32745  01B8F4  8586               	bsf	134,2,b	;volatile
 32746                           
 32747                           ; BSR set to: 57
 32748                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 32749  01B8F6  8783               	bsf	131,3,b	;volatile
 32750                           
 32751                           ; BSR set to: 57
 32752                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 32753  01B8F8  8181               	bsf	129,0,b	;volatile
 32754                           
 32755                           ; BSR set to: 57
 32756                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 32757  01B8FA  9185               	bcf	133,0,b	;volatile
 32758                           
 32759                           ; BSR set to: 57
 32760                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 32761  01B8FC  8189               	bsf	137,0,b	;volatile
 32762                           
 32763                           ; BSR set to: 57
 32764                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 32765  01B8FE  9D88               	bcf	136,6,b	;volatile
 32766                           
 32767                           ; BSR set to: 57
 32768                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 32769  01B900  9D86               	bcf	134,6,b	;volatile
 32770                           
 32771                           ; BSR set to: 57
 32772                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 32773  01B902  8581               	bsf	129,2,b	;volatile
 32774                           
 32775                           ; BSR set to: 57
 32776                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 32777  01B904  8781               	bsf	129,3,b	;volatile
 32778                           
 32779                           ; BSR set to: 57
 32780                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32781  01B906  52E5               	movf	postdec1,f,c
 32782  01B908  0012               	return		;funcret
 32783  01B90A                     __end_of_INTERRUPT_Initialize:
 32784                           	opt callstack 0
 32785                           
 32786 ;; *************** function _FVR_Initialize *****************
 32787 ;; Defined at:
 32788 ;;		line 58 in file "mcc_generated_files/fvr.c"
 32789 ;; Parameters:    Size  Location     Type
 32790 ;;		None
 32791 ;; Auto vars:     Size  Location     Type
 32792 ;;		None
 32793 ;; Return value:  Size  Location     Type
 32794 ;;                  1  [STACK] void 
 32795 ;; Registers used:
 32796 ;;		wreg, status,2
 32797 ;; Tracked objects:
 32798 ;;		On entry : 3F/39
 32799 ;;		On exit  : 3F/3E
 32800 ;;		Unchanged: 0/0
 32801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32806 ;;Total ram usage:        0 bytes
 32807 ;; Hardware stack levels used:    1
 32808 ;; Hardware stack levels required when called:   15
 32809 ;; This function calls:
 32810 ;;		Nothing
 32811 ;; This function is called by:
 32812 ;;		_SYSTEM_Initialize
 32813 ;; This function uses a reentrant model
 32814 ;;
 32815                           
 32816                           	psect	text136
 32817  01CA76                     __ptext136:
 32818                           	opt callstack 0
 32819  01CA76                     _FVR_Initialize:
 32820                           	opt callstack 14
 32821                           
 32822                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 32823                           
 32824                           ; BSR set to: 57
 32825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32826                           ;incstack = 0
 32827  01CA76  0EAF               	movlw	175
 32828  01CA78  013E               	movlb	62	; () banked
 32829  01CA7A  6FC1               	movwf	193,b	;volatile
 32830                           
 32831                           ; BSR set to: 62
 32832                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32833  01CA7C  0012               	return		;funcret
 32834  01CA7E                     __end_of_FVR_Initialize:
 32835                           	opt callstack 0
 32836                           
 32837 ;; *************** function _EXT_INT_Initialize *****************
 32838 ;; Defined at:
 32839 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 32840 ;; Parameters:    Size  Location     Type
 32841 ;;		None
 32842 ;; Auto vars:     Size  Location     Type
 32843 ;;		None
 32844 ;; Return value:  Size  Location     Type
 32845 ;;                  1  [STACK] void 
 32846 ;; Registers used:
 32847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32848 ;; Tracked objects:
 32849 ;;		On entry : 3F/39
 32850 ;;		On exit  : 3F/39
 32851 ;;		Unchanged: 0/0
 32852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32857 ;;Total ram usage:        0 bytes
 32858 ;; Hardware stack levels used:    1
 32859 ;; Hardware stack levels required when called:   16
 32860 ;; This function calls:
 32861 ;;		_INT0_SetInterruptHandler
 32862 ;;		_INT1_SetInterruptHandler
 32863 ;; This function is called by:
 32864 ;;		_SYSTEM_Initialize
 32865 ;; This function uses a reentrant model
 32866 ;;
 32867                           
 32868                           	psect	text137
 32869  01C288                     __ptext137:
 32870                           	opt callstack 0
 32871  01C288                     _EXT_INT_Initialize:
 32872                           	opt callstack 13
 32873                           
 32874                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 32875                           
 32876                           ; BSR set to: 62
 32877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32878                           ;incstack = 0
 32879  01C288  0139               	movlb	57	; () banked
 32880  01C28A  91A1               	bcf	161,0,b	;volatile
 32881                           
 32882                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 32883  01C28C  90D2               	bcf	210,0,c	;volatile
 32884                           
 32885                           ; BSR set to: 57
 32886                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 32887  01C28E  0EA2               	movlw	low _INT0_DefaultInterruptHandler
 32888  01C290  6EE6               	movwf	postinc1,c
 32889  01C292  0ECA               	movlw	high _INT0_DefaultInterruptHandler
 32890  01C294  6EE6               	movwf	postinc1,c
 32891  01C296  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 32892  01C298  6EE6               	movwf	postinc1,c
 32893  01C29A  ECE1  F0E2         	call	_INT0_SetInterruptHandler	;wreg free
 32894                           
 32895                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 32896  01C29E  0139               	movlb	57	; () banked
 32897  01C2A0  8191               	bsf	145,0,b	;volatile
 32898                           
 32899                           ; BSR set to: 57
 32900                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 32901  01C2A2  91A5               	bcf	165,0,b	;volatile
 32902                           
 32903                           ; BSR set to: 57
 32904                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 32905  01C2A4  92D2               	bcf	210,1,c	;volatile
 32906                           
 32907                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 32908  01C2A6  0E9E               	movlw	low _INT1_DefaultInterruptHandler
 32909  01C2A8  6EE6               	movwf	postinc1,c
 32910  01C2AA  0ECA               	movlw	high _INT1_DefaultInterruptHandler
 32911  01C2AC  6EE6               	movwf	postinc1,c
 32912  01C2AE  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 32913  01C2B0  6EE6               	movwf	postinc1,c
 32914  01C2B2  ECCD  F0E2         	call	_INT1_SetInterruptHandler	;wreg free
 32915                           
 32916                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 32917  01C2B6  0139               	movlb	57	; () banked
 32918  01C2B8  8195               	bsf	149,0,b	;volatile
 32919                           
 32920                           ; BSR set to: 57
 32921                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 32922  01C2BA  0012               	return		;funcret
 32923  01C2BC                     __end_of_EXT_INT_Initialize:
 32924                           	opt callstack 0
 32925                           
 32926 ;; *************** function _INT1_SetInterruptHandler *****************
 32927 ;; Defined at:
 32928 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 32929 ;; Parameters:    Size  Location     Type
 32930 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32931 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 32932 ;; Auto vars:     Size  Location     Type
 32933 ;;		None
 32934 ;; Return value:  Size  Location     Type
 32935 ;;                  1  [STACK] void 
 32936 ;; Registers used:
 32937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32938 ;; Tracked objects:
 32939 ;;		On entry : 3F/39
 32940 ;;		On exit  : 0/0
 32941 ;;		Unchanged: 0/0
 32942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32947 ;;Total ram usage:        0 bytes
 32948 ;; Hardware stack levels used:    1
 32949 ;; Hardware stack levels required when called:   15
 32950 ;; This function calls:
 32951 ;;		Nothing
 32952 ;; This function is called by:
 32953 ;;		_EXT_INT_Initialize
 32954 ;;		_start_switch_handler
 32955 ;; This function uses a reentrant model
 32956 ;;
 32957                           
 32958                           	psect	text138
 32959  01C59A                     __ptext138:
 32960                           	opt callstack 0
 32961  01C59A                     _INT1_SetInterruptHandler:
 32962                           	opt callstack 14
 32963                           
 32964                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 32965                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32966                           
 32967                           ; BSR set to: 57
 32968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32969                           ;incstack = 0
 32970  01C59A  50E1               	movf	fsr1l,w,c
 32971  01C59C  0FFD               	addlw	-3
 32972  01C59E  6ED9               	movwf	fsr2l,c
 32973  01C5A0  50E2               	movf	fsr1h,w,c
 32974  01C5A2  6EDA               	movwf	fsr2h,c
 32975  01C5A4  0EFF               	movlw	255
 32976  01C5A6  22DA               	addwfc	fsr2h,f,c
 32977  01C5A8  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32978  01C5AE  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32979  01C5B4  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32980                           
 32981                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32982  01C5BA  52E5               	movf	postdec1,f,c
 32983  01C5BC  52E5               	movf	postdec1,f,c
 32984  01C5BE  52E5               	movf	postdec1,f,c
 32985  01C5C0  0012               	return		;funcret
 32986  01C5C2                     __end_of_INT1_SetInterruptHandler:
 32987                           	opt callstack 0
 32988                           
 32989 ;; *************** function _INT0_SetInterruptHandler *****************
 32990 ;; Defined at:
 32991 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32992 ;; Parameters:    Size  Location     Type
 32993 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32994 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32995 ;; Auto vars:     Size  Location     Type
 32996 ;;		None
 32997 ;; Return value:  Size  Location     Type
 32998 ;;                  1  [STACK] void 
 32999 ;; Registers used:
 33000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33001 ;; Tracked objects:
 33002 ;;		On entry : 3F/39
 33003 ;;		On exit  : 0/0
 33004 ;;		Unchanged: 0/0
 33005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33010 ;;Total ram usage:        0 bytes
 33011 ;; Hardware stack levels used:    1
 33012 ;; Hardware stack levels required when called:   15
 33013 ;; This function calls:
 33014 ;;		Nothing
 33015 ;; This function is called by:
 33016 ;;		_EXT_INT_Initialize
 33017 ;; This function uses a reentrant model
 33018 ;;
 33019                           
 33020                           	psect	text139
 33021  01C5C2                     __ptext139:
 33022                           	opt callstack 0
 33023  01C5C2                     _INT0_SetInterruptHandler:
 33024                           	opt callstack 13
 33025                           
 33026                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 33027                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33028                           
 33029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33030                           ;incstack = 0
 33031  01C5C2  50E1               	movf	fsr1l,w,c
 33032  01C5C4  0FFD               	addlw	-3
 33033  01C5C6  6ED9               	movwf	fsr2l,c
 33034  01C5C8  50E2               	movf	fsr1h,w,c
 33035  01C5CA  6EDA               	movwf	fsr2h,c
 33036  01C5CC  0EFF               	movlw	255
 33037  01C5CE  22DA               	addwfc	fsr2h,f,c
 33038  01C5D0  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 33039  01C5D6  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 33040  01C5DC  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 33041                           
 33042                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33043  01C5E2  52E5               	movf	postdec1,f,c
 33044  01C5E4  52E5               	movf	postdec1,f,c
 33045  01C5E6  52E5               	movf	postdec1,f,c
 33046  01C5E8  0012               	return		;funcret
 33047  01C5EA                     __end_of_INT0_SetInterruptHandler:
 33048                           	opt callstack 0
 33049                           
 33050 ;; *************** function _DMA2_Initialize *****************
 33051 ;; Defined at:
 33052 ;;		line 61 in file "mcc_generated_files/dma2.c"
 33053 ;; Parameters:    Size  Location     Type
 33054 ;;		None
 33055 ;; Auto vars:     Size  Location     Type
 33056 ;;		None
 33057 ;; Return value:  Size  Location     Type
 33058 ;;                  1  [STACK] void 
 33059 ;; Registers used:
 33060 ;;		wreg, status,2
 33061 ;; Tracked objects:
 33062 ;;		On entry : 3F/3D
 33063 ;;		On exit  : 3F/3B
 33064 ;;		Unchanged: 0/0
 33065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33070 ;;Total ram usage:        0 bytes
 33071 ;; Hardware stack levels used:    1
 33072 ;; Hardware stack levels required when called:   15
 33073 ;; This function calls:
 33074 ;;		Nothing
 33075 ;; This function is called by:
 33076 ;;		_SYSTEM_Initialize
 33077 ;; This function uses a reentrant model
 33078 ;;
 33079                           
 33080                           	psect	text140
 33081  01BB46                     __ptext140:
 33082                           	opt callstack 0
 33083  01BB46                     _DMA2_Initialize:
 33084                           	opt callstack 14
 33085                           
 33086                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 33087                           
 33088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33089                           ;incstack = 0
 33090  01BB46  0E00               	movlw	0
 33091  01BB48  013B               	movlb	59	; () banked
 33092  01BB4A  6FD9               	movwf	217,b	;volatile
 33093  01BB4C  0E10               	movlw	16
 33094  01BB4E  6FDA               	movwf	218,b	;volatile
 33095  01BB50  0E00               	movlw	0
 33096  01BB52  6FDB               	movwf	219,b	;volatile
 33097                           
 33098                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 33099  01BB54  0E3F               	movlw	63
 33100  01BB56  6FD1               	movwf	209,b	;volatile
 33101  01BB58  0EBB               	movlw	187
 33102  01BB5A  6FD0               	movwf	208,b	;volatile
 33103                           
 33104                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 33105  01BB5C  0E03               	movlw	3
 33106  01BB5E  6FDD               	movwf	221,b	;volatile
 33107                           
 33108                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 33109  01BB60  0E00               	movlw	0
 33110  01BB62  6FD8               	movwf	216,b	;volatile
 33111  01BB64  0E01               	movlw	1
 33112  01BB66  6FD7               	movwf	215,b	;volatile
 33113                           
 33114                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 33115  01BB68  0E00               	movlw	0
 33116  01BB6A  6FCF               	movwf	207,b	;volatile
 33117  01BB6C  0E01               	movlw	1
 33118  01BB6E  6FCE               	movwf	206,b	;volatile
 33119                           
 33120                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 33121  01BB70  0E1C               	movlw	28
 33122  01BB72  6FDF               	movwf	223,b	;volatile
 33123                           
 33124                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 33125  01BB74  0E3D               	movlw	61
 33126  01BB76  6FDE               	movwf	222,b	;volatile
 33127                           
 33128                           ; BSR set to: 59
 33129                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 33130  01BB78  0139               	movlb	57	; () banked
 33131  01BB7A  97A5               	bcf	165,3,b	;volatile
 33132                           
 33133                           ; BSR set to: 57
 33134                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 33135  01BB7C  95A5               	bcf	165,2,b	;volatile
 33136                           
 33137                           ; BSR set to: 57
 33138                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 33139  01BB7E  9BA5               	bcf	165,5,b	;volatile
 33140                           
 33141                           ; BSR set to: 57
 33142                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 33143  01BB80  99A5               	bcf	165,4,b	;volatile
 33144                           
 33145                           ; BSR set to: 57
 33146                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 33147  01BB82  9795               	bcf	149,3,b	;volatile
 33148                           
 33149                           ; BSR set to: 57
 33150                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 33151  01BB84  9595               	bcf	149,2,b	;volatile
 33152                           
 33153                           ; BSR set to: 57
 33154                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 33155  01BB86  9B95               	bcf	149,5,b	;volatile
 33156                           
 33157                           ; BSR set to: 57
 33158                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 33159  01BB88  9995               	bcf	149,4,b	;volatile
 33160  01BB8A  9ED2               	bcf	16338,7,c	;# 
 33161  01BB8C  0139               	banksel	14831	;# 
 33162  01BB8E  0E55               	movlw	85	;# 
 33163  01BB90  6FEF               	movwf	14831,b	;# 
 33164  01BB92  0EAA               	movlw	170	;# 
 33165  01BB94  6FEF               	movwf	14831,b	;# 
 33166  01BB96  81EF               	bsf	14831,0,b	;# 
 33167  01BB98  8ED2               	bsf	16338,7,c	;# 
 33168                           
 33169                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 33170  01BB9A  013B               	movlb	59	; () banked
 33171  01BB9C  6BDC               	clrf	220,b	;volatile
 33172                           
 33173                           ; BSR set to: 59
 33174                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33175  01BB9E  0012               	return		;funcret
 33176  01BBA0                     __end_of_DMA2_Initialize:
 33177                           	opt callstack 0
 33178                           
 33179 ;; *************** function _DMA1_Initialize *****************
 33180 ;; Defined at:
 33181 ;;		line 86 in file "mcc_generated_files/dma1.c"
 33182 ;; Parameters:    Size  Location     Type
 33183 ;;		None
 33184 ;; Auto vars:     Size  Location     Type
 33185 ;;		None
 33186 ;; Return value:  Size  Location     Type
 33187 ;;                  1  [STACK] void 
 33188 ;; Registers used:
 33189 ;;		wreg, status,2
 33190 ;; Tracked objects:
 33191 ;;		On entry : 3F/3B
 33192 ;;		On exit  : 3F/3B
 33193 ;;		Unchanged: 0/0
 33194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33199 ;;Total ram usage:        0 bytes
 33200 ;; Hardware stack levels used:    1
 33201 ;; Hardware stack levels required when called:   15
 33202 ;; This function calls:
 33203 ;;		Nothing
 33204 ;; This function is called by:
 33205 ;;		_SYSTEM_Initialize
 33206 ;; This function uses a reentrant model
 33207 ;;
 33208                           
 33209                           	psect	text141
 33210  01B6FE                     __ptext141:
 33211                           	opt callstack 0
 33212  01B6FE                     _DMA1_Initialize:
 33213                           	opt callstack 14
 33214                           
 33215                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 33216                           
 33217                           ; BSR set to: 59
 33218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33219                           ;incstack = 0
 33220  01B6FE  0E00               	movlw	0
 33221  01B700  013B               	movlb	59	; () banked
 33222  01B702  6FF9               	movwf	249,b	;volatile
 33223  01B704  0E10               	movlw	16
 33224  01B706  6FFA               	movwf	250,b	;volatile
 33225  01B708  0E00               	movlw	0
 33226  01B70A  6FFB               	movwf	251,b	;volatile
 33227                           
 33228                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 33229  01B70C  0E3D               	movlw	61
 33230  01B70E  6FF1               	movwf	241,b	;volatile
 33231  01B710  0E11               	movlw	17
 33232  01B712  6FF0               	movwf	240,b	;volatile
 33233                           
 33234                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 33235  01B714  0E03               	movlw	3
 33236  01B716  6FFD               	movwf	253,b	;volatile
 33237                           
 33238                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 33239  01B718  0E00               	movlw	0
 33240  01B71A  6FF8               	movwf	248,b	;volatile
 33241  01B71C  0E01               	movlw	1
 33242  01B71E  6FF7               	movwf	247,b	;volatile
 33243                           
 33244                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 33245  01B720  0E00               	movlw	0
 33246  01B722  6FEF               	movwf	239,b	;volatile
 33247  01B724  0E01               	movlw	1
 33248  01B726  6FEE               	movwf	238,b	;volatile
 33249                           
 33250                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 33251  01B728  0E15               	movlw	21
 33252  01B72A  6FFF               	movwf	255,b	;volatile
 33253                           
 33254                           ; BSR set to: 59
 33255                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 33256  01B72C  6BFE               	clrf	254,b	;volatile
 33257                           
 33258                           ; BSR set to: 59
 33259                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 33260  01B72E  0139               	movlb	57	; () banked
 33261  01B730  93A2               	bcf	162,1,b	;volatile
 33262                           
 33263                           ; BSR set to: 57
 33264                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 33265  01B732  91A2               	bcf	162,0,b	;volatile
 33266                           
 33267                           ; BSR set to: 57
 33268                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 33269  01B734  97A2               	bcf	162,3,b	;volatile
 33270                           
 33271                           ; BSR set to: 57
 33272                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 33273  01B736  95A2               	bcf	162,2,b	;volatile
 33274                           
 33275                           ; BSR set to: 57
 33276                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 33277  01B738  8392               	bsf	146,1,b	;volatile
 33278                           
 33279                           ; BSR set to: 57
 33280                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 33281  01B73A  8192               	bsf	146,0,b	;volatile
 33282                           
 33283                           ; BSR set to: 57
 33284                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 33285  01B73C  8792               	bsf	146,3,b	;volatile
 33286                           
 33287                           ; BSR set to: 57
 33288                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 33289  01B73E  8592               	bsf	146,2,b	;volatile
 33290                           
 33291                           ; BSR set to: 57
 33292                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 33293  01B740  6BF1               	clrf	241,b	;volatile
 33294                           
 33295                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 33296  01B742  0E01               	movlw	1
 33297  01B744  6FF2               	movwf	242,b	;volatile
 33298                           
 33299                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 33300  01B746  0E04               	movlw	4
 33301  01B748  6FF3               	movwf	243,b	;volatile
 33302                           
 33303                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 33304  01B74A  0E02               	movlw	2
 33305  01B74C  6FF4               	movwf	244,b	;volatile
 33306                           
 33307                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 33308  01B74E  0E03               	movlw	3
 33309  01B750  6FF7               	movwf	247,b	;volatile
 33310  01B752  9ED2               	bcf	16338,7,c	;# 
 33311  01B754  0139               	banksel	14831	;# 
 33312  01B756  0E55               	movlw	85	;# 
 33313  01B758  6FEF               	movwf	14831,b	;# 
 33314  01B75A  0EAA               	movlw	170	;# 
 33315  01B75C  6FEF               	movwf	14831,b	;# 
 33316  01B75E  81EF               	bsf	14831,0,b	;# 
 33317  01B760  8ED2               	bsf	16338,7,c	;# 
 33318                           
 33319                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 33320  01B762  013B               	movlb	59	; () banked
 33321  01B764  6BFC               	clrf	252,b	;volatile
 33322                           
 33323                           ; BSR set to: 59
 33324                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33325  01B766  0012               	return		;funcret
 33326  01B768                     __end_of_DMA1_Initialize:
 33327                           	opt callstack 0
 33328                           
 33329 ;; *************** function _CLKREF_Initialize *****************
 33330 ;; Defined at:
 33331 ;;		line 58 in file "mcc_generated_files/clkref.c"
 33332 ;; Parameters:    Size  Location     Type
 33333 ;;		None
 33334 ;; Auto vars:     Size  Location     Type
 33335 ;;		None
 33336 ;; Return value:  Size  Location     Type
 33337 ;;                  1  [STACK] void 
 33338 ;; Registers used:
 33339 ;;		wreg, status,2
 33340 ;; Tracked objects:
 33341 ;;		On entry : 3F/3B
 33342 ;;		On exit  : 3F/3C
 33343 ;;		Unchanged: 0/0
 33344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33349 ;;Total ram usage:        0 bytes
 33350 ;; Hardware stack levels used:    1
 33351 ;; Hardware stack levels required when called:   15
 33352 ;; This function calls:
 33353 ;;		Nothing
 33354 ;; This function is called by:
 33355 ;;		_SYSTEM_Initialize
 33356 ;; This function uses a reentrant model
 33357 ;;
 33358                           
 33359                           	psect	text142
 33360  01CA1E                     __ptext142:
 33361                           	opt callstack 0
 33362  01CA1E                     _CLKREF_Initialize:
 33363                           	opt callstack 14
 33364                           
 33365                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 33366                           
 33367                           ; BSR set to: 59
 33368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33369                           ;incstack = 0
 33370  01CA1E  013C               	movlb	60	; () banked
 33371  01CA20  6BE6               	clrf	230,b	;volatile
 33372                           
 33373                           ; BSR set to: 60
 33374                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 33375  01CA22  0E94               	movlw	148
 33376  01CA24  6FE5               	movwf	229,b	;volatile
 33377                           
 33378                           ; BSR set to: 60
 33379                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33380  01CA26  0012               	return		;funcret
 33381  01CA28                     __end_of_CLKREF_Initialize:
 33382                           	opt callstack 0
 33383                           
 33384 ;; *************** function _ADCC_Initialize *****************
 33385 ;; Defined at:
 33386 ;;		line 65 in file "mcc_generated_files/adcc.c"
 33387 ;; Parameters:    Size  Location     Type
 33388 ;;		None
 33389 ;; Auto vars:     Size  Location     Type
 33390 ;;		None
 33391 ;; Return value:  Size  Location     Type
 33392 ;;                  1  [STACK] void 
 33393 ;; Registers used:
 33394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33395 ;; Tracked objects:
 33396 ;;		On entry : 3F/3E
 33397 ;;		On exit  : 0/0
 33398 ;;		Unchanged: 0/0
 33399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33404 ;;Total ram usage:        0 bytes
 33405 ;; Hardware stack levels used:    1
 33406 ;; Hardware stack levels required when called:   16
 33407 ;; This function calls:
 33408 ;;		_ADCC_SetADIInterruptHandler
 33409 ;;		_ADCC_SetADTIInterruptHandler
 33410 ;; This function is called by:
 33411 ;;		_SYSTEM_Initialize
 33412 ;; This function uses a reentrant model
 33413 ;;
 33414                           
 33415                           	psect	text143
 33416  01B768                     __ptext143:
 33417                           	opt callstack 0
 33418  01B768                     _ADCC_Initialize:
 33419                           	opt callstack 13
 33420                           
 33421                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 33422                           
 33423                           ; BSR set to: 60
 33424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33425                           ;incstack = 0
 33426  01B768  013E               	movlb	62	; () banked
 33427  01B76A  6BDE               	clrf	222,b	;volatile
 33428                           
 33429                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 33430  01B76C  6BDF               	clrf	223,b	;volatile
 33431                           
 33432                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 33433  01B76E  6BE0               	clrf	224,b	;volatile
 33434                           
 33435                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 33436  01B770  6BE1               	clrf	225,b	;volatile
 33437                           
 33438                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 33439  01B772  6BE4               	clrf	228,b	;volatile
 33440                           
 33441                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 33442  01B774  6BE5               	clrf	229,b	;volatile
 33443                           
 33444                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 33445  01B776  6BEA               	clrf	234,b	;volatile
 33446                           
 33447                           ; BSR set to: 62
 33448                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 33449  01B778  0E40               	movlw	64
 33450  01B77A  6FEC               	movwf	236,b	;volatile
 33451                           
 33452                           ; BSR set to: 62
 33453                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 33454  01B77C  6BF1               	clrf	241,b	;volatile
 33455                           
 33456                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 33457  01B77E  0E20               	movlw	32
 33458  01B780  6FF3               	movwf	243,b	;volatile
 33459                           
 33460                           ; BSR set to: 62
 33461                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 33462  01B782  6BF4               	clrf	244,b	;volatile
 33463                           
 33464                           ; BSR set to: 62
 33465                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 33466  01B784  6BF5               	clrf	245,b	;volatile
 33467                           
 33468                           ; BSR set to: 62
 33469                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 33470  01B786  6BF6               	clrf	246,b	;volatile
 33471                           
 33472                           ; BSR set to: 62
 33473                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 33474  01B788  6BF7               	clrf	247,b	;volatile
 33475                           
 33476                           ; BSR set to: 62
 33477                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 33478  01B78A  6BF9               	clrf	249,b	;volatile
 33479                           
 33480                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 33481  01B78C  0E5B               	movlw	91
 33482  01B78E  6FFA               	movwf	250,b	;volatile
 33483                           
 33484                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 33485  01B790  0E27               	movlw	39
 33486  01B792  6FFB               	movwf	251,b	;volatile
 33487                           
 33488                           ; BSR set to: 62
 33489                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 33490  01B794  6BFC               	clrf	252,b	;volatile
 33491                           
 33492                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 33493  01B796  0E02               	movlw	2
 33494  01B798  6FFD               	movwf	253,b	;volatile
 33495                           
 33496                           ; BSR set to: 62
 33497                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 33498  01B79A  6BFE               	clrf	254,b	;volatile
 33499                           
 33500                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 33501  01B79C  0E07               	movlw	7
 33502  01B79E  6FFF               	movwf	255,b	;volatile
 33503                           
 33504                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 33505  01B7A0  0E84               	movlw	132
 33506  01B7A2  6FF8               	movwf	248,b	;volatile
 33507                           
 33508                           ; BSR set to: 62
 33509                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 33510  01B7A4  0139               	movlb	57	; () banked
 33511  01B7A6  95A1               	bcf	161,2,b	;volatile
 33512                           
 33513                           ; BSR set to: 57
 33514                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 33515  01B7A8  8591               	bsf	145,2,b	;volatile
 33516                           
 33517                           ; BSR set to: 57
 33518                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 33519  01B7AA  0EA4               	movlw	low _ADCC_DefaultInterruptHandler
 33520  01B7AC  6EE6               	movwf	postinc1,c
 33521  01B7AE  0ECA               	movlw	high _ADCC_DefaultInterruptHandler
 33522  01B7B0  6EE6               	movwf	postinc1,c
 33523  01B7B2  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33524  01B7B4  6EE6               	movwf	postinc1,c
 33525  01B7B6  EC09  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 33526                           
 33527                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 33528  01B7BA  0139               	movlb	57	; () banked
 33529  01B7BC  97A1               	bcf	161,3,b	;volatile
 33530                           
 33531                           ; BSR set to: 57
 33532                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 33533  01B7BE  8791               	bsf	145,3,b	;volatile
 33534                           
 33535                           ; BSR set to: 57
 33536                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 33537  01B7C0  0EA4               	movlw	low _ADCC_DefaultInterruptHandler
 33538  01B7C2  6EE6               	movwf	postinc1,c
 33539  01B7C4  0ECA               	movlw	high _ADCC_DefaultInterruptHandler
 33540  01B7C6  6EE6               	movwf	postinc1,c
 33541  01B7C8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33542  01B7CA  6EE6               	movwf	postinc1,c
 33543  01B7CC  ECF5  F0E2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 33544                           
 33545                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33546  01B7D0  0012               	return		;funcret
 33547  01B7D2                     __end_of_ADCC_Initialize:
 33548                           	opt callstack 0
 33549                           
 33550 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 33551 ;; Defined at:
 33552 ;;		line 336 in file "mcc_generated_files/adcc.c"
 33553 ;; Parameters:    Size  Location     Type
 33554 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33555 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 33556 ;; Auto vars:     Size  Location     Type
 33557 ;;		None
 33558 ;; Return value:  Size  Location     Type
 33559 ;;                  1  [STACK] void 
 33560 ;; Registers used:
 33561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33562 ;; Tracked objects:
 33563 ;;		On entry : 0/0
 33564 ;;		On exit  : 0/0
 33565 ;;		Unchanged: 0/0
 33566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33571 ;;Total ram usage:        0 bytes
 33572 ;; Hardware stack levels used:    1
 33573 ;; Hardware stack levels required when called:   15
 33574 ;; This function calls:
 33575 ;;		Nothing
 33576 ;; This function is called by:
 33577 ;;		_ADCC_Initialize
 33578 ;;		_start_adc_scan
 33579 ;; This function uses a reentrant model
 33580 ;;
 33581                           
 33582                           	psect	text144
 33583  01C5EA                     __ptext144:
 33584                           	opt callstack 0
 33585  01C5EA                     _ADCC_SetADTIInterruptHandler:
 33586                           	opt callstack 14
 33587                           
 33588                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 33589                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33590                           
 33591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33592                           ;incstack = 0
 33593  01C5EA  50E1               	movf	fsr1l,w,c
 33594  01C5EC  0FFD               	addlw	-3
 33595  01C5EE  6ED9               	movwf	fsr2l,c
 33596  01C5F0  50E2               	movf	fsr1h,w,c
 33597  01C5F2  6EDA               	movwf	fsr2h,c
 33598  01C5F4  0EFF               	movlw	255
 33599  01C5F6  22DA               	addwfc	fsr2h,f,c
 33600  01C5F8  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 33601  01C5FE  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 33602  01C604  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 33603                           
 33604                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 33605  01C60A  52E5               	movf	postdec1,f,c
 33606  01C60C  52E5               	movf	postdec1,f,c
 33607  01C60E  52E5               	movf	postdec1,f,c
 33608  01C610  0012               	return		;funcret
 33609  01C612                     __end_of_ADCC_SetADTIInterruptHandler:
 33610                           	opt callstack 0
 33611                           
 33612 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 33613 ;; Defined at:
 33614 ;;		line 323 in file "mcc_generated_files/adcc.c"
 33615 ;; Parameters:    Size  Location     Type
 33616 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33617 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 33618 ;; Auto vars:     Size  Location     Type
 33619 ;;		None
 33620 ;; Return value:  Size  Location     Type
 33621 ;;                  1  [STACK] void 
 33622 ;; Registers used:
 33623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33624 ;; Tracked objects:
 33625 ;;		On entry : 6/0
 33626 ;;		On exit  : 0/0
 33627 ;;		Unchanged: 0/0
 33628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33633 ;;Total ram usage:        0 bytes
 33634 ;; Hardware stack levels used:    1
 33635 ;; Hardware stack levels required when called:   15
 33636 ;; This function calls:
 33637 ;;		Nothing
 33638 ;; This function is called by:
 33639 ;;		_ADCC_Initialize
 33640 ;;		_start_adc_scan
 33641 ;; This function uses a reentrant model
 33642 ;;
 33643                           
 33644                           	psect	text145
 33645  01C612                     __ptext145:
 33646                           	opt callstack 0
 33647  01C612                     _ADCC_SetADIInterruptHandler:
 33648                           	opt callstack 14
 33649                           
 33650                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 33651                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33652                           
 33653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33654                           ;incstack = 0
 33655  01C612  50E1               	movf	fsr1l,w,c
 33656  01C614  0FFD               	addlw	-3
 33657  01C616  6ED9               	movwf	fsr2l,c
 33658  01C618  50E2               	movf	fsr1h,w,c
 33659  01C61A  6EDA               	movwf	fsr2h,c
 33660  01C61C  0EFF               	movlw	255
 33661  01C61E  22DA               	addwfc	fsr2h,f,c
 33662  01C620  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 33663  01C626  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 33664  01C62C  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 33665                           
 33666                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33667  01C632  52E5               	movf	postdec1,f,c
 33668  01C634  52E5               	movf	postdec1,f,c
 33669  01C636  52E5               	movf	postdec1,f,c
 33670  01C638  0012               	return		;funcret
 33671  01C63A                     __end_of_ADCC_SetADIInterruptHandler:
 33672                           	opt callstack 0
 33673                           
 33674 ;; *************** function _INT1_ISR *****************
 33675 ;; Defined at:
 33676 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 33677 ;; Parameters:    Size  Location     Type
 33678 ;;		None
 33679 ;; Auto vars:     Size  Location     Type
 33680 ;;		None
 33681 ;; Return value:  Size  Location     Type
 33682 ;;                  1    wreg      void 
 33683 ;; Registers used:
 33684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33685 ;; Tracked objects:
 33686 ;;		On entry : 0/0
 33687 ;;		On exit  : 0/0
 33688 ;;		Unchanged: 0/0
 33689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33694 ;;Total ram usage:        4 bytes
 33695 ;; Hardware stack levels used:    1
 33696 ;; Hardware stack levels required when called:    5
 33697 ;; This function calls:
 33698 ;;		_INT1_CallBack
 33699 ;; This function is called by:
 33700 ;;		Interrupt level 1
 33701 ;; This function uses a non-reentrant model
 33702 ;;
 33703                           
 33704                           	psect	text146
 33705  01C098                     __ptext146:
 33706                           	opt callstack 0
 33707  01C098                     _INT1_ISR:
 33708                           	opt callstack 11
 33709                           
 33710                           ;incstack = 0
 33711  01C098  006F FF60  F027    	movff	status,??_INT1_ISR
 33712  01C09E  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 33713  01C0A4  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 33714  01C0AA  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 33715  01C0B0  EE16  F0AF         	lfsr	1,___intlo_sp
 33716                           
 33717                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 33718  01C0B4  0139               	movlb	57	; () banked
 33719  01C0B6  91A5               	bcf	165,0,b	;volatile
 33720                           
 33721                           ; BSR set to: 57
 33722                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 33723  01C0B8  EC6C  F0E3         	call	_INT1_CallBack	;wreg free
 33724  01C0BC  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 33725  01C0C2  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 33726  01C0C8  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 33727  01C0CE  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 33728  01C0D4  0011               	retfie		f
 33729  01C0D6                     __end_of_INT1_ISR:
 33730                           	opt callstack 0
 33731                           
 33732 ;; *************** function _INT1_CallBack *****************
 33733 ;; Defined at:
 33734 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 33735 ;; Parameters:    Size  Location     Type
 33736 ;;		None
 33737 ;; Auto vars:     Size  Location     Type
 33738 ;;		None
 33739 ;; Return value:  Size  Location     Type
 33740 ;;                  1  [STACK] void 
 33741 ;; Registers used:
 33742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33743 ;; Tracked objects:
 33744 ;;		On entry : 3F/39
 33745 ;;		On exit  : 0/0
 33746 ;;		Unchanged: 0/0
 33747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33752 ;;Total ram usage:        0 bytes
 33753 ;; Hardware stack levels used:    1
 33754 ;; Hardware stack levels required when called:    4
 33755 ;; This function calls:
 33756 ;;		Absolute function
 33757 ;;		_INT1_DefaultInterruptHandler
 33758 ;;		_switch_handler
 33759 ;; This function is called by:
 33760 ;;		_INT1_ISR
 33761 ;; This function uses a reentrant model
 33762 ;;
 33763                           
 33764                           	psect	text147
 33765  01C6D8                     __ptext147:
 33766                           	opt callstack 0
 33767  01C6D8                     _INT1_CallBack:
 33768                           	opt callstack 11
 33769                           
 33770                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 33771                           
 33772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33773                           ;incstack = 0
 33774  01C6D8  0100               	movlb	0	; () banked
 33775  01C6DA  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33776  01C6DC  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33777  01C6DE  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33778  01C6E0  B4D8               	btfsc	status,2,c
 33779  01C6E2  0012               	return	
 33780                           
 33781                           ; BSR set to: 0
 33782                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 33783  01C6E4  D801               	call	u1037_28
 33784  01C6E6  0012               	return	
 33785  01C6E8                     u1037_28:
 33786  01C6E8  0005               	push	
 33787  01C6EA  6EFA               	movwf	pclath,c
 33788  01C6EC  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33789  01C6EE  6EFD               	movwf	tosl,c
 33790  01C6F0  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33791  01C6F2  6EFE               	movwf	tosh,c
 33792  01C6F4  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33793  01C6F6  6EFF               	movwf	tosu,c
 33794  01C6F8  50FA               	movf	pclath,w,c
 33795  01C6FA  0012               	return		;indir
 33796  01C6FC                     __end_of_INT1_CallBack:
 33797                           	opt callstack 0
 33798                           
 33799 ;; *************** function _INT1_DefaultInterruptHandler *****************
 33800 ;; Defined at:
 33801 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 33802 ;; Parameters:    Size  Location     Type
 33803 ;;		None
 33804 ;; Auto vars:     Size  Location     Type
 33805 ;;		None
 33806 ;; Return value:  Size  Location     Type
 33807 ;;                  1  [STACK] void 
 33808 ;; Registers used:
 33809 ;;		None
 33810 ;; Tracked objects:
 33811 ;;		On entry : 3F/0
 33812 ;;		On exit  : 0/0
 33813 ;;		Unchanged: 0/0
 33814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33819 ;;Total ram usage:        0 bytes
 33820 ;; Hardware stack levels used:    1
 33821 ;; Hardware stack levels required when called:    3
 33822 ;; This function calls:
 33823 ;;		Nothing
 33824 ;; This function is called by:
 33825 ;;		_EXT_INT_Initialize
 33826 ;;		_INT1_CallBack
 33827 ;; This function uses a reentrant model
 33828 ;;
 33829                           
 33830                           	psect	text148
 33831  01CA9E                     __ptext148:
 33832                           	opt callstack 0
 33833  01CA9E                     _INT1_DefaultInterruptHandler:
 33834                           	opt callstack 11
 33835                           
 33836                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33837                           
 33838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33839                           ;incstack = 0
 33840  01CA9E  0012               	return		;funcret
 33841  01CAA0                     __end_of_INT1_DefaultInterruptHandler:
 33842                           	opt callstack 0
 33843                           
 33844 ;; *************** function _switch_handler *****************
 33845 ;; Defined at:
 33846 ;;		line 58 in file "dio.c"
 33847 ;; Parameters:    Size  Location     Type
 33848 ;;		None
 33849 ;; Auto vars:     Size  Location     Type
 33850 ;;  i               1  [STACK] unsigned char 
 33851 ;;  sw_value        1  [STACK] unsigned char 
 33852 ;; Return value:  Size  Location     Type
 33853 ;;                  1  [STACK] void 
 33854 ;; Registers used:
 33855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 33856 ;; Tracked objects:
 33857 ;;		On entry : 3F/0
 33858 ;;		On exit  : 0/0
 33859 ;;		Unchanged: 0/0
 33860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33865 ;;Total ram usage:        0 bytes
 33866 ;; Hardware stack levels used:    1
 33867 ;; Hardware stack levels required when called:    3
 33868 ;; This function calls:
 33869 ;;		Nothing
 33870 ;; This function is called by:
 33871 ;;		_start_switch_handler
 33872 ;;		_INT1_CallBack
 33873 ;; This function uses a reentrant model
 33874 ;;
 33875                           
 33876                           	psect	text149
 33877  0198F8                     __ptext149:
 33878                           	opt callstack 0
 33879  0198F8                     _switch_handler:
 33880                           	opt callstack 0
 33881                           
 33882                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33883  0198F8  52E6               	movf	postinc1,f,c
 33884  0198FA  52E6               	movf	postinc1,f,c
 33885                           
 33886                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 33887                           ;stkvar	_i @ sp[(-2)+0]
 33888                           
 33889                           ;incstack = 0
 33890  0198FC  0EFE               	movlw	-2
 33891  0198FE  6AE3               	clrf	plusw1,c
 33892  019900  9ABF               	bcf	191,5,c	;volatile
 33893                           
 33894                           ;dio.c: 72:  __nop();
 33895  019902  F000               	nop	
 33896                           
 33897                           ;dio.c: 73:  __nop();
 33898  019904  F000               	nop	
 33899                           
 33900                           ;dio.c: 74:  __nop();
 33901  019906  F000               	nop	
 33902                           
 33903                           ;dio.c: 75:  __nop();
 33904  019908  F000               	nop	
 33905                           
 33906                           ;dio.c: 76:  __nop();
 33907  01990A  F000               	nop	
 33908                           
 33909                           ;dio.c: 77:  __nop();
 33910  01990C  F000               	nop	
 33911  01990E  D016               	goto	l10991
 33912  019910                     l10977:
 33913                           
 33914                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 33915  019910  A6CF               	btfss	207,3,c	;volatile
 33916  019912  D00E               	goto	u1003_20
 33917  019914  D00A               	goto	u1003_21
 33918  019916                     u1001_28:
 33919                           
 33920                           ;stkvar	_sw_value @ sp[(-2)+1]
 33921  019916  0EFF               	movlw	-1
 33922  019918  0060  F033  FFE3   	movff	btemp+11,plusw1
 33923                           
 33924                           ;dio.c: 83:    break;
 33925  01991E  D027               	goto	l10993
 33926  019920                     l10979:
 33927                           
 33928                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 33929  019920  A4CF               	btfss	207,2,c	;volatile
 33930  019922  D006               	goto	u1003_20
 33931  019924  D002               	goto	u1003_21
 33932  019926                     l10981:
 33933                           
 33934                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 33935  019926  A6CD               	btfss	205,3,c	;volatile
 33936  019928  D003               	goto	u1003_20
 33937  01992A                     u1003_21:
 33938  01992A  6A0C               	clrf	(btemp+11)^0,c
 33939  01992C  2A0C               	incf	(btemp+11)^0,f,c
 33940  01992E  D7F3               	goto	u1001_28
 33941  019930                     u1003_20:
 33942  019930  6A0C               	clrf	(btemp+11)^0,c
 33943  019932  D7F1               	goto	u1001_28
 33944  019934                     l10983:
 33945                           
 33946                           ;dio.c: 91:    sw_value = 1;
 33947                           ;stkvar	_sw_value @ sp[(-2)+1]
 33948  019934  0EFF               	movlw	-1
 33949  019936  6AE3               	clrf	plusw1,c
 33950  019938  2AE3               	incf	plusw1,f,c
 33951                           
 33952                           ;dio.c: 92:    break;
 33953  01993A  D019               	goto	l10993
 33954  01993C                     l10991:
 33955                           
 33956                           ;stkvar	_i @ sp[(-2)+0]
 33957  01993C  0EFE               	movlw	-2
 33958  01993E  50E3               	movf	plusw1,w,c
 33959  019940  6E0B               	movwf	(btemp+10)^0,c
 33960  019942  6A0C               	clrf	(btemp+11)^0,c
 33961                           
 33962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33963                           ; Switch size 1, requested type "simple"
 33964                           ; Number of cases is 1, Range of values is 0 to 0
 33965                           ; switch strategies available:
 33966                           ; Name         Instructions Cycles
 33967                           ; simple_byte            4     3 (average)
 33968                           ;	Chosen strategy is simple_byte
 33969  019944  500C               	movf	(btemp+11)^0,w,c
 33970  019946  0A00               	xorlw	0	; case 0
 33971  019948  A4D8               	btfss	status,2,c
 33972  01994A  D7F4               	goto	l10983
 33973                           
 33974                           ; Switch size 1, requested type "simple"
 33975                           ; Number of cases is 5, Range of values is 0 to 4
 33976                           ; switch strategies available:
 33977                           ; Name         Instructions Cycles
 33978                           ; simple_byte           16     9 (average)
 33979                           ;	Chosen strategy is simple_byte
 33980  01994C  500B               	movf	(btemp+10)^0,w,c
 33981  01994E  0A00               	xorlw	0	; case 0
 33982  019950  B4D8               	btfsc	status,2,c
 33983  019952  D7F0               	goto	l10983
 33984  019954  0A01               	xorlw	1	; case 1
 33985  019956  B4D8               	btfsc	status,2,c
 33986  019958  D7ED               	goto	l10983
 33987  01995A  0A03               	xorlw	3	; case 2
 33988  01995C  B4D8               	btfsc	status,2,c
 33989  01995E  D7E0               	goto	l10979
 33990  019960  0A01               	xorlw	1	; case 3
 33991  019962  B4D8               	btfsc	status,2,c
 33992  019964  D7D5               	goto	l10977
 33993  019966  0A07               	xorlw	7	; case 4
 33994  019968  B4D8               	btfsc	status,2,c
 33995  01996A  D7DD               	goto	l10981
 33996  01996C  D7E3               	goto	l10983
 33997  01996E                     l10993:
 33998                           
 33999                           ;dio.c: 102:   if (sw_value) {
 34000                           ;stkvar	_sw_value @ sp[(-2)+1]
 34001  01996E  0EFF               	movlw	-1
 34002  019970  50E3               	movf	plusw1,w,c
 34003  019972  B4D8               	btfsc	status,2,c
 34004  019974  D018               	goto	l10999
 34005                           
 34006                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 34007                           ;stkvar	_i @ sp[(-2)+0]
 34008  019976  0EFE               	movlw	-2
 34009  019978  50E3               	movf	plusw1,w,c
 34010  01997A  0D05               	mullw	5
 34011  01997C  0E54               	movlw	low _S
 34012  01997E  24F3               	addwf	243,w,c
 34013  019980  6ED9               	movwf	fsr2l,c
 34014  019982  0E02               	movlw	high _S
 34015  019984  20F4               	addwfc	prodh,w,c
 34016  019986  6EDA               	movwf	fsr2h,c
 34017  019988  04DE               	decf	postinc2,w,c
 34018  01998A  A4D8               	btfss	status,2,c
 34019  01998C  D049               	goto	l11007
 34020                           
 34021                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 34022                           ;stkvar	_i @ sp[(-2)+0]
 34023  01998E  0EFE               	movlw	-2
 34024  019990  50E3               	movf	plusw1,w,c
 34025  019992  0D05               	mullw	5
 34026  019994  0E54               	movlw	low _S
 34027  019996  24F3               	addwf	243,w,c
 34028  019998  6ED9               	movwf	fsr2l,c
 34029  01999A  0E02               	movlw	high _S
 34030  01999C  20F4               	addwfc	prodh,w,c
 34031  01999E  6EDA               	movwf	fsr2h,c
 34032  0199A0  0E00               	movlw	0
 34033  0199A2  6EDF               	movwf	indf2,c
 34034  0199A4  D03D               	goto	l11007
 34035  0199A6                     l10999:
 34036                           
 34037                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 34038                           ;stkvar	_i @ sp[(-2)+0]
 34039  0199A6  0EFE               	movlw	-2
 34040  0199A8  50E3               	movf	plusw1,w,c
 34041  0199AA  0D05               	mullw	5
 34042  0199AC  0E54               	movlw	low _S
 34043  0199AE  24F3               	addwf	243,w,c
 34044  0199B0  6ED9               	movwf	fsr2l,c
 34045  0199B2  0E02               	movlw	high _S
 34046  0199B4  20F4               	addwfc	prodh,w,c
 34047  0199B6  6EDA               	movwf	fsr2h,c
 34048  0199B8  50DF               	movf	indf2,w,c
 34049  0199BA  A4D8               	btfss	status,2,c
 34050  0199BC  D031               	goto	l11007
 34051                           
 34052                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 34053                           ;stkvar	_i @ sp[(-2)+0]
 34054  0199BE  0EFE               	movlw	-2
 34055  0199C0  50E3               	movf	plusw1,w,c
 34056  0199C2  0D05               	mullw	5
 34057  0199C4  0E54               	movlw	low _S
 34058  0199C6  24F3               	addwf	243,w,c
 34059  0199C8  6ED9               	movwf	fsr2l,c
 34060  0199CA  0E02               	movlw	high _S
 34061  0199CC  20F4               	addwfc	prodh,w,c
 34062  0199CE  6EDA               	movwf	fsr2h,c
 34063  0199D0  0E01               	movlw	1
 34064  0199D2  6EDF               	movwf	indf2,c
 34065                           
 34066                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 34067  0199D4  EE20  F1C3         	lfsr	2,_V+188	;volatile
 34068                           
 34069                           ;stkvar	_i @ sp[(-2)+0]
 34070  0199D8  0EFE               	movlw	-2
 34071  0199DA  50E3               	movf	plusw1,w,c
 34072  0199DC  0D05               	mullw	5
 34073  0199DE  0E55               	movlw	low (_S+1)
 34074  0199E0  24F3               	addwf	243,w,c
 34075  0199E2  6EE9               	movwf	fsr0l,c
 34076  0199E4  0E02               	movlw	high (_S+1)
 34077  0199E6  20F4               	addwfc	prodh,w,c
 34078  0199E8  6EEA               	movwf	fsr0h,c
 34079  0199EA  006F FF7B FFEE     	movff	postinc2,postinc0
 34080  0199F0  006F FF7B FFEE     	movff	postinc2,postinc0
 34081  0199F6  006F FF7B FFEE     	movff	postinc2,postinc0
 34082  0199FC  006F FF7B FFEE     	movff	postinc2,postinc0
 34083                           
 34084                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 34085                           ;stkvar	_i @ sp[(-2)+0]
 34086  019A02  0EFE               	movlw	-2
 34087  019A04  006F FF8C  F00C    	movff	plusw1,btemp+11
 34088  019A0A  0E01               	movlw	1
 34089  019A0C  6E0B               	movwf	(btemp+10)^0,c
 34090  019A0E  2A0C               	incf	(btemp+11)^0,f,c
 34091  019A10  D002               	goto	u1007_24
 34092  019A12                     u1007_25:
 34093  019A12  90D8               	bcf	status,0,c
 34094  019A14  360B               	rlcf	(btemp+10)^0,f,c
 34095  019A16                     u1007_24:
 34096  019A16  2E0C               	decfsz	(btemp+11)^0,f,c
 34097  019A18  D7FC               	goto	u1007_25
 34098  019A1A  500B               	movf	(btemp+10)^0,w,c
 34099  019A1C  0102               	movlb	2	; () banked
 34100  019A1E  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 34101  019A20                     l11007:
 34102                           
 34103                           ;dio.c: 113:  } while (++i < 6);
 34104                           ;stkvar	_i @ sp[(-2)+0]
 34105  019A20  0EFE               	movlw	-2
 34106  019A22  2AE3               	incf	plusw1,f,c
 34107  019A24  0EFE               	movlw	-2
 34108  019A26  006F FF8C  F001    	movff	plusw1,btemp
 34109  019A2C  0E05               	movlw	5
 34110  019A2E  6401               	cpfsgt	btemp^0,c
 34111  019A30  D785               	goto	l10991
 34112                           
 34113                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 34114  019A32  8ABF               	bsf	191,5,c	;volatile
 34115                           
 34116                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34117  019A34  52E5               	movf	postdec1,f,c
 34118  019A36  52E5               	movf	postdec1,f,c
 34119  019A38  0012               	return		;funcret
 34120  019A3A                     __end_of_switch_handler:
 34121                           	opt callstack 0
 34122                           
 34123 ;; *************** function _TMR5_ISR *****************
 34124 ;; Defined at:
 34125 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 34126 ;; Parameters:    Size  Location     Type
 34127 ;;		None
 34128 ;; Auto vars:     Size  Location     Type
 34129 ;;		None
 34130 ;; Return value:  Size  Location     Type
 34131 ;;                  1    wreg      void 
 34132 ;; Registers used:
 34133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34134 ;; Tracked objects:
 34135 ;;		On entry : 0/0
 34136 ;;		On exit  : 3F/0
 34137 ;;		Unchanged: 0/0
 34138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34141 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34142 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34143 ;;Total ram usage:       15 bytes
 34144 ;; Hardware stack levels used:    1
 34145 ;; Hardware stack levels required when called:    9
 34146 ;; This function calls:
 34147 ;;		_TMR5_CallBack
 34148 ;;		_TMR5_WriteTimer
 34149 ;; This function is called by:
 34150 ;;		Interrupt level 1
 34151 ;; This function uses a non-reentrant model
 34152 ;;
 34153                           
 34154                           	psect	text150
 34155  01A644                     __ptext150:
 34156                           	opt callstack 0
 34157  01A644                     _TMR5_ISR:
 34158                           	opt callstack 7
 34159                           
 34160                           ;incstack = 0
 34161  01A644  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 34162  01A64A  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 34163  01A650  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 34164  01A656  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 34165  01A65C  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 34166  01A662  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 34167  01A668  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 34168  01A66E  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 34169  01A674  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 34170  01A67A  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 34171  01A680  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 34172  01A686  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 34173  01A68C  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 34174  01A692  EE16  F0AF         	lfsr	1,___intlo_sp
 34175                           
 34176                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 34177  01A696  0139               	movlb	57	; () banked
 34178  01A698  9DA8               	bcf	168,6,b	;volatile
 34179                           
 34180                           ; BSR set to: 57
 34181                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 34182  01A69A  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 34183  01A6A0  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 34184  01A6A6  EC0C  F0E0         	call	_TMR5_WriteTimer	;wreg free
 34185                           
 34186                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 34187  01A6AA  0101               	movlb	1	; () banked
 34188  01A6AC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 34189  01A6AE  6E2B               	movwf	??_TMR5_ISR^0,c
 34190  01A6B0  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 34191  01A6B2  0E05               	movlw	5
 34192  01A6B4  262B               	addwf	??_TMR5_ISR^0,f,c
 34193  01A6B6  0E00               	movlw	0
 34194  01A6B8  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 34195  01A6BA  0100               	movlb	0	; () banked
 34196  01A6BC  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 34197  01A6BE  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34198  01A6C0  502B               	movf	??_TMR5_ISR^0,w,c
 34199  01A6C2  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 34200  01A6C4  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 34201  01A6C6  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34202  01A6C8  A0D8               	btfss	status,0,c
 34203  01A6CA  D005               	goto	i1l1019
 34204                           
 34205                           ; BSR set to: 0
 34206                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 34207  01A6CC  EC7E  F0E3         	call	_TMR5_CallBack	;wreg free
 34208                           
 34209                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 34210  01A6D0  0100               	movlb	0	; () banked
 34211  01A6D2  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 34212  01A6D4  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 34213  01A6D6                     i1l1019:
 34214                           
 34215                           ; BSR set to: 0
 34216  01A6D6  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 34217  01A6DC  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 34218  01A6E2  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 34219  01A6E8  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 34220  01A6EE  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 34221  01A6F4  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 34222  01A6FA  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 34223  01A700  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 34224  01A706  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 34225  01A70C  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 34226  01A712  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 34227  01A718  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 34228  01A71E  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 34229  01A724  0011               	retfie		f
 34230  01A726                     __end_of_TMR5_ISR:
 34231                           	opt callstack 0
 34232                           
 34233 ;; *************** function _TMR5_WriteTimer *****************
 34234 ;; Defined at:
 34235 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 34236 ;; Parameters:    Size  Location     Type
 34237 ;;  timerVal        2  [STACK] unsigned short 
 34238 ;; Auto vars:     Size  Location     Type
 34239 ;;		None
 34240 ;; Return value:  Size  Location     Type
 34241 ;;                  1  [STACK] void 
 34242 ;; Registers used:
 34243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34244 ;; Tracked objects:
 34245 ;;		On entry : 3F/39
 34246 ;;		On exit  : 0/0
 34247 ;;		Unchanged: 0/0
 34248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34253 ;;Total ram usage:        0 bytes
 34254 ;; Hardware stack levels used:    1
 34255 ;; Hardware stack levels required when called:    3
 34256 ;; This function calls:
 34257 ;;		Nothing
 34258 ;; This function is called by:
 34259 ;;		_TMR5_ISR
 34260 ;; This function uses a reentrant model
 34261 ;;
 34262                           
 34263                           	psect	text151
 34264  01C018                     __ptext151:
 34265                           	opt callstack 0
 34266  01C018                     _TMR5_WriteTimer:
 34267                           	opt callstack 12
 34268                           
 34269                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 34270                           
 34271                           ; BSR set to: 0
 34272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34273                           ;incstack = 0
 34274  01C018  A49A               	btfss	154,2,c	;volatile
 34275  01C01A  D00F               	goto	l11217
 34276                           
 34277                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 34278  01C01C  909A               	bcf	154,0,c	;volatile
 34279                           
 34280                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 34281                           ;stkvar	_timerVal @ sp[(0)+-2]
 34282  01C01E  0EFF               	movlw	255
 34283  01C020  24E1               	addwf	fsr1l,w,c
 34284  01C022  6ED9               	movwf	fsr2l,c
 34285  01C024  0EFF               	movlw	255
 34286  01C026  20E2               	addwfc	fsr1h,w,c
 34287  01C028  6EDA               	movwf	fsr2h,c
 34288  01C02A  50DF               	movf	indf2,w,c
 34289  01C02C  6E99               	movwf	153,c	;volatile
 34290                           
 34291                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 34292                           ;stkvar	_timerVal @ sp[(0)+-2]
 34293  01C02E  0EFE               	movlw	-2
 34294  01C030  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34295                           
 34296                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 34297  01C036  809A               	bsf	154,0,c	;volatile
 34298                           
 34299                           ;mcc_generated_files/tmr5.c: 144:  } else {
 34300  01C038  D00C               	goto	l1002
 34301  01C03A                     l11217:
 34302                           
 34303                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 34304                           ;stkvar	_timerVal @ sp[(0)+-2]
 34305  01C03A  0EFF               	movlw	255
 34306  01C03C  24E1               	addwf	fsr1l,w,c
 34307  01C03E  6ED9               	movwf	fsr2l,c
 34308  01C040  0EFF               	movlw	255
 34309  01C042  20E2               	addwfc	fsr1h,w,c
 34310  01C044  6EDA               	movwf	fsr2h,c
 34311  01C046  50DF               	movf	indf2,w,c
 34312  01C048  6E99               	movwf	153,c	;volatile
 34313                           
 34314                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 34315                           ;stkvar	_timerVal @ sp[(0)+-2]
 34316  01C04A  0EFE               	movlw	-2
 34317  01C04C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34318  01C052                     l1002:
 34319                           
 34320                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34321  01C052  52E5               	movf	postdec1,f,c
 34322  01C054  52E5               	movf	postdec1,f,c
 34323  01C056  0012               	return		;funcret
 34324  01C058                     __end_of_TMR5_WriteTimer:
 34325                           	opt callstack 0
 34326                           
 34327 ;; *************** function _TMR5_CallBack *****************
 34328 ;; Defined at:
 34329 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 34330 ;; Parameters:    Size  Location     Type
 34331 ;;		None
 34332 ;; Auto vars:     Size  Location     Type
 34333 ;;		None
 34334 ;; Return value:  Size  Location     Type
 34335 ;;                  1  [STACK] void 
 34336 ;; Registers used:
 34337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34338 ;; Tracked objects:
 34339 ;;		On entry : 3F/0
 34340 ;;		On exit  : 0/0
 34341 ;;		Unchanged: 0/0
 34342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34347 ;;Total ram usage:        0 bytes
 34348 ;; Hardware stack levels used:    1
 34349 ;; Hardware stack levels required when called:    8
 34350 ;; This function calls:
 34351 ;;		Absolute function
 34352 ;;		_TMR5_DefaultInterruptHandler
 34353 ;; This function is called by:
 34354 ;;		_TMR5_ISR
 34355 ;; This function uses a reentrant model
 34356 ;;
 34357                           
 34358                           	psect	text152
 34359  01C6FC                     __ptext152:
 34360                           	opt callstack 0
 34361  01C6FC                     _TMR5_CallBack:
 34362                           	opt callstack 7
 34363                           
 34364                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 34365                           
 34366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34367                           ;incstack = 0
 34368  01C6FC  0100               	movlb	0	; () banked
 34369  01C6FE  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34370  01C700  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34371  01C702  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34372  01C704  B4D8               	btfsc	status,2,c
 34373  01C706  0012               	return	
 34374                           
 34375                           ; BSR set to: 0
 34376                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 34377  01C708  D801               	call	u1046_28
 34378  01C70A  0012               	return	
 34379  01C70C                     u1046_28:
 34380  01C70C  0005               	push	
 34381  01C70E  6EFA               	movwf	pclath,c
 34382  01C710  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34383  01C712  6EFD               	movwf	tosl,c
 34384  01C714  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34385  01C716  6EFE               	movwf	tosh,c
 34386  01C718  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34387  01C71A  6EFF               	movwf	tosu,c
 34388  01C71C  50FA               	movf	pclath,w,c
 34389  01C71E  0012               	return		;indir
 34390  01C720                     __end_of_TMR5_CallBack:
 34391                           	opt callstack 0
 34392                           
 34393 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 34394 ;; Defined at:
 34395 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 34396 ;; Parameters:    Size  Location     Type
 34397 ;;		None
 34398 ;; Auto vars:     Size  Location     Type
 34399 ;;		None
 34400 ;; Return value:  Size  Location     Type
 34401 ;;                  1  [STACK] void 
 34402 ;; Registers used:
 34403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34404 ;; Tracked objects:
 34405 ;;		On entry : 3F/0
 34406 ;;		On exit  : 0/0
 34407 ;;		Unchanged: 0/0
 34408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34413 ;;Total ram usage:        0 bytes
 34414 ;; Hardware stack levels used:    1
 34415 ;; Hardware stack levels required when called:    7
 34416 ;; This function calls:
 34417 ;;		_check_day_time
 34418 ;; This function is called by:
 34419 ;;		_TMR5_Initialize
 34420 ;;		_TMR5_CallBack
 34421 ;; This function uses a reentrant model
 34422 ;;
 34423                           
 34424                           	psect	text153
 34425  01C148                     __ptext153:
 34426                           	opt callstack 0
 34427  01C148                     _TMR5_DefaultInterruptHandler:
 34428                           	opt callstack 7
 34429                           
 34430                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 34431                           
 34432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34433                           ;incstack = 0
 34434  01C148  A0BE               	btfss	190,0,c	;volatile
 34435  01C14A  D002               	goto	u974_20
 34436  01C14C  0E01               	movlw	1
 34437  01C14E  D001               	goto	u974_26
 34438  01C150                     u974_20:
 34439  01C150  0E00               	movlw	0
 34440  01C152                     u974_26:
 34441  01C152  0AFF               	xorlw	255
 34442  01C154  6E0C               	movwf	(btemp+11)^0,c
 34443  01C156  50BE               	movf	190,w,c	;volatile
 34444  01C158  180C               	xorwf	(btemp+11)^0,w,c
 34445  01C15A  0BFE               	andlw	-2
 34446  01C15C  180C               	xorwf	(btemp+11)^0,w,c
 34447  01C15E  6EBE               	movwf	190,c	;volatile
 34448                           
 34449                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 34450  01C160  0E01               	movlw	1
 34451  01C162  0101               	movlb	1	; () banked
 34452  01C164  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 34453  01C166  0E00               	movlw	0
 34454  01C168  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 34455  01C16A  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 34456  01C16C  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 34457                           
 34458                           ; BSR set to: 1
 34459                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 34460  01C16E  0E01               	movlw	1
 34461  01C170  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 34462  01C172  0E00               	movlw	0
 34463  01C174  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 34464  01C176  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 34465  01C178  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 34466                           
 34467                           ; BSR set to: 1
 34468                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 34469  01C17A  EC9B  F0C6         	call	_check_day_time	;wreg free
 34470                           
 34471                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34472  01C17E  0012               	return		;funcret
 34473  01C180                     __end_of_TMR5_DefaultInterruptHandler:
 34474                           	opt callstack 0
 34475                           
 34476 ;; *************** function _check_day_time *****************
 34477 ;; Defined at:
 34478 ;;		line 165 in file "mbmc.c"
 34479 ;; Parameters:    Size  Location     Type
 34480 ;;		None
 34481 ;; Auto vars:     Size  Location     Type
 34482 ;;  light           4  [STACK] float 
 34483 ;; Return value:  Size  Location     Type
 34484 ;;                  1  [STACK] _Bool 
 34485 ;; Registers used:
 34486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34487 ;; Tracked objects:
 34488 ;;		On entry : 3F/1
 34489 ;;		On exit  : 0/0
 34490 ;;		Unchanged: 0/0
 34491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34496 ;;Total ram usage:        0 bytes
 34497 ;; Hardware stack levels used:    1
 34498 ;; Hardware stack levels required when called:    6
 34499 ;; This function calls:
 34500 ;;		___flge
 34501 ;;		_conv_raw_result
 34502 ;;		_get_ac_charger_relay
 34503 ;;		_set_ac_charger_relay
 34504 ;; This function is called by:
 34505 ;;		_TMR5_DefaultInterruptHandler
 34506 ;; This function uses a reentrant model
 34507 ;;
 34508                           
 34509                           	psect	text154
 34510  018D36                     __ptext154:
 34511                           	opt callstack 0
 34512  018D36                     _check_day_time:
 34513                           	opt callstack 0
 34514                           
 34515                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34516  018D36  52E6               	movf	postinc1,f,c
 34517  018D38  52E6               	movf	postinc1,f,c
 34518  018D3A  52E6               	movf	postinc1,f,c
 34519  018D3C  52E6               	movf	postinc1,f,c
 34520                           
 34521                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 34522                           
 34523                           ;incstack = 0
 34524  018D3E  0E00               	movlw	0
 34525  018D40  6EE6               	movwf	postinc1,c
 34526  018D42  0E0D               	movlw	13
 34527  018D44  6EE6               	movwf	postinc1,c
 34528  018D46  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 34529                           
 34530                           ;stkvar	_light @ sp[(-4)+0]
 34531  018D4A  0EFC               	movlw	-4
 34532  018D4C  0060  F007  FFE3   	movff	btemp,plusw1
 34533  018D52  0EFD               	movlw	-3
 34534  018D54  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34535  018D5A  0EFE               	movlw	-2
 34536  018D5C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 34537  018D62  0EFF               	movlw	-1
 34538  018D64  0060  F013  FFE3   	movff	btemp+3,plusw1
 34539                           
 34540                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 34541  018D6A  2A41               	incf	check_day_time@day_delay^0,f,c
 34542  018D6C  0441               	decf	check_day_time@day_delay^0,w,c
 34543  018D6E  A4D8               	btfss	status,2,c
 34544  018D70  D0A9               	goto	l2009
 34545  018D72  0101               	movlb	1	; () banked
 34546  018D74  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 34547  018D76  B4D8               	btfsc	status,2,c
 34548  018D78  D0A5               	goto	l2009
 34549                           
 34550                           ; BSR set to: 1
 34551                           ;mbmc.c: 173:   if (C.soc > 3) {
 34552  018D7A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34553  018D7E  0E01               	movlw	1
 34554  018D80  50DB               	movf	plusw2,w,c
 34555  018D82  E104               	bnz	u951_20
 34556  018D84  0E04               	movlw	4
 34557  018D86  5CDE               	subwf	postinc2,w,c
 34558  018D88  A0D8               	btfss	status,0,c
 34559  018D8A  D073               	goto	l10187
 34560  018D8C                     u951_20:
 34561                           
 34562                           ; BSR set to: 1
 34563                           ;mbmc.c: 174:    if (!C.day) {
 34564  018D8C  EE22  F021         	lfsr	2,_C+290	;volatile
 34565  018D90  50DF               	movf	indf2,w,c
 34566  018D92  A4D8               	btfss	status,2,c
 34567  018D94  D035               	goto	l10175
 34568                           
 34569                           ; BSR set to: 1
 34570                           ;mbmc.c: 175:     if (light > 22.0) {
 34571                           ;stkvar	_light @ sp[(-4)+0]
 34572  018D96  0EFC               	movlw	-4
 34573  018D98  006F FF8F FFE6     	movff	plusw1,postinc1
 34574  018D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 34575  018DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 34576  018DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 34577  018DB0  0E00               	movlw	0
 34578  018DB2  6EE6               	movwf	postinc1,c
 34579  018DB4  0E00               	movlw	0
 34580  018DB6  6EE6               	movwf	postinc1,c
 34581  018DB8  0EB0               	movlw	176
 34582  018DBA  6EE6               	movwf	postinc1,c
 34583  018DBC  0E41               	movlw	65
 34584  018DBE  6EE6               	movwf	postinc1,c
 34585  018DC0  EC72  F0CA         	call	___flge	;wreg free
 34586  018DC4  B001               	btfsc	btemp& (0+255),0,c
 34587  018DC6  D07E               	goto	l2009
 34588                           
 34589                           ;mbmc.c: 176:      C.day = 1;
 34590  018DC8  0E01               	movlw	1
 34591  018DCA  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34592                           
 34593                           ;mbmc.c: 177:      C.day_start = V.ticks;
 34594  018DD0  EE20  F188         	lfsr	2,_V+129	;volatile
 34595  018DD4  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 34596  018DDA  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 34597  018DE0  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 34598  018DE6  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 34599                           
 34600                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 34601  018DEC  ECF9  F0E4         	call	_get_ac_charger_relay	;wreg free
 34602  018DF0  5001               	movf	btemp^0,w,c
 34603  018DF2  B4D8               	btfsc	status,2,c
 34604  018DF4  D06B               	goto	l2005
 34605                           
 34606                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 34607  018DF6  0E00               	movlw	0
 34608  018DF8  6EE6               	movwf	postinc1,c
 34609  018DFA  ECE3  F0E4         	call	_set_ac_charger_relay	;wreg free
 34610  018DFE  D066               	goto	l2005
 34611  018E00                     l10175:
 34612                           
 34613                           ; BSR set to: 1
 34614                           ;mbmc.c: 184:     if (light < 12.0) {
 34615  018E00  0E00               	movlw	0
 34616  018E02  6EE6               	movwf	postinc1,c
 34617  018E04  0E00               	movlw	0
 34618  018E06  6EE6               	movwf	postinc1,c
 34619  018E08  0E40               	movlw	64
 34620  018E0A  6EE6               	movwf	postinc1,c
 34621  018E0C  0E41               	movlw	65
 34622  018E0E  6EE6               	movwf	postinc1,c
 34623                           
 34624                           ;stkvar	_light @ sp[(-8)+0]
 34625  018E10  0EF8               	movlw	-8
 34626  018E12  006F FF8F FFE6     	movff	plusw1,postinc1
 34627  018E18  006F FF8F FFE6     	movff	plusw1,postinc1
 34628  018E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 34629  018E24  006F FF8F FFE6     	movff	plusw1,postinc1
 34630  018E2A  EC72  F0CA         	call	___flge	;wreg free
 34631  018E2E  B001               	btfsc	btemp& (0+255),0,c
 34632  018E30  D049               	goto	l2009
 34633                           
 34634                           ;mbmc.c: 185:      C.day = 0;
 34635  018E32  0E00               	movlw	0
 34636  018E34  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34637                           
 34638                           ;mbmc.c: 186:      C.day_end = V.ticks;
 34639  018E3A  EE20  F188         	lfsr	2,_V+129	;volatile
 34640  018E3E  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 34641  018E44  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 34642  018E4A  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 34643  018E50  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 34644                           
 34645                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 34646  018E56  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34647  018E5A  0E01               	movlw	1
 34648  018E5C  50DB               	movf	plusw2,w,c
 34649  018E5E  E136               	bnz	l2005
 34650  018E60  0E14               	movlw	20
 34651  018E62  5CDE               	subwf	postinc2,w,c
 34652  018E64  B0D8               	btfsc	status,0,c
 34653  018E66  D032               	goto	l2005
 34654                           
 34655                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 34656  018E68  0E01               	movlw	1
 34657  018E6A  6EE6               	movwf	postinc1,c
 34658  018E6C  ECE3  F0E4         	call	_set_ac_charger_relay	;wreg free
 34659  018E70  D02D               	goto	l2005
 34660  018E72                     l10187:
 34661                           
 34662                           ; BSR set to: 1
 34663                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 34664  018E72  EE21  F377         	lfsr	2,_C+120	;volatile
 34665  018E76  006F FF7B FFE6     	movff	postinc2,postinc1
 34666  018E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34667  018E82  006F FF7B FFE6     	movff	postinc2,postinc1
 34668  018E88  006F FF7B FFE6     	movff	postinc2,postinc1
 34669  018E8E  EE21  F37B         	lfsr	2,_C+124	;volatile
 34670  018E92  006F FF7B FFE6     	movff	postinc2,postinc1
 34671  018E98  006F FF7B FFE6     	movff	postinc2,postinc1
 34672  018E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 34673  018EA4  006F FF7B FFE6     	movff	postinc2,postinc1
 34674  018EAA  EC72  F0CA         	call	___flge	;wreg free
 34675  018EAE  B001               	btfsc	btemp& (0+255),0,c
 34676  018EB0  D009               	goto	l2009
 34677                           
 34678                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 34679  018EB2  ECF9  F0E4         	call	_get_ac_charger_relay	;wreg free
 34680  018EB6  5001               	movf	btemp^0,w,c
 34681  018EB8  A4D8               	btfss	status,2,c
 34682  018EBA  D004               	goto	l2009
 34683                           
 34684                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 34685  018EBC  0E01               	movlw	1
 34686  018EBE  6EE6               	movwf	postinc1,c
 34687  018EC0  ECE3  F0E4         	call	_set_ac_charger_relay	;wreg free
 34688  018EC4                     l2009:
 34689                           
 34690                           ;mbmc.c: 204:  if (day_delay >= 240)
 34691  018EC4  0EEF               	movlw	239
 34692  018EC6  6441               	cpfsgt	check_day_time@day_delay^0,c
 34693  018EC8  D001               	goto	l2005
 34694                           
 34695                           ;mbmc.c: 205:   day_delay = 0;
 34696  018ECA  6A41               	clrf	check_day_time@day_delay^0,c
 34697  018ECC                     l2005:
 34698                           
 34699                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34700  018ECC  52E5               	movf	postdec1,f,c
 34701  018ECE  52E5               	movf	postdec1,f,c
 34702  018ED0  52E5               	movf	postdec1,f,c
 34703  018ED2  52E5               	movf	postdec1,f,c
 34704  018ED4  0012               	return		;funcret
 34705  018ED6                     __end_of_check_day_time:
 34706                           	opt callstack 0
 34707                           
 34708 ;; *************** function _set_ac_charger_relay *****************
 34709 ;; Defined at:
 34710 ;;		line 135 in file "mbmc.c"
 34711 ;; Parameters:    Size  Location     Type
 34712 ;;  mode            1  [STACK] const _Bool 
 34713 ;; Auto vars:     Size  Location     Type
 34714 ;;		None
 34715 ;; Return value:  Size  Location     Type
 34716 ;;                  1  [STACK] void 
 34717 ;; Registers used:
 34718 ;;		wreg, fsr1l, fsr1h
 34719 ;; Tracked objects:
 34720 ;;		On entry : 0/1
 34721 ;;		On exit  : 0/0
 34722 ;;		Unchanged: 0/0
 34723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34728 ;;Total ram usage:        0 bytes
 34729 ;; Hardware stack levels used:    1
 34730 ;; Hardware stack levels required when called:    3
 34731 ;; This function calls:
 34732 ;;		Nothing
 34733 ;; This function is called by:
 34734 ;;		_check_day_time
 34735 ;; This function uses a reentrant model
 34736 ;;
 34737                           
 34738                           	psect	text155
 34739  01C9C6                     __ptext155:
 34740                           	opt callstack 0
 34741  01C9C6                     _set_ac_charger_relay:
 34742                           	opt callstack 9
 34743                           
 34744                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 34745                           ;stkvar	_mode @ sp[(0)+-1]
 34746                           
 34747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34748                           ;incstack = 0
 34749  01C9C6  0EFF               	movlw	-1
 34750  01C9C8  B0E3               	btfsc	plusw1,0,c
 34751  01C9CA  D002               	bra	u946_25
 34752  01C9CC  9CBD               	bcf	189,6,c	;volatile
 34753  01C9CE  D001               	bra	u946_26
 34754  01C9D0                     u946_25:
 34755  01C9D0  8CBD               	bsf	189,6,c	;volatile
 34756  01C9D2                     u946_26:
 34757                           
 34758                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 34759  01C9D2  52E5               	movf	postdec1,f,c
 34760  01C9D4  0012               	return		;funcret
 34761  01C9D6                     __end_of_set_ac_charger_relay:
 34762                           	opt callstack 0
 34763                           
 34764 ;; *************** function _get_ac_charger_relay *****************
 34765 ;; Defined at:
 34766 ;;		line 140 in file "mbmc.c"
 34767 ;; Parameters:    Size  Location     Type
 34768 ;;		None
 34769 ;; Auto vars:     Size  Location     Type
 34770 ;;		None
 34771 ;; Return value:  Size  Location     Type
 34772 ;;                  1  [STACK] _Bool 
 34773 ;; Registers used:
 34774 ;;		btemp
 34775 ;; Tracked objects:
 34776 ;;		On entry : 0/1
 34777 ;;		On exit  : 0/0
 34778 ;;		Unchanged: 0/0
 34779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34784 ;;Total ram usage:        0 bytes
 34785 ;; Hardware stack levels used:    1
 34786 ;; Hardware stack levels required when called:    3
 34787 ;; This function calls:
 34788 ;;		Nothing
 34789 ;; This function is called by:
 34790 ;;		_check_day_time
 34791 ;;		_calc_bsoc
 34792 ;; This function uses a reentrant model
 34793 ;;
 34794                           
 34795                           	psect	text156
 34796  01C9F2                     __ptext156:
 34797                           	opt callstack 0
 34798  01C9F2                     _get_ac_charger_relay:
 34799                           	opt callstack 10
 34800                           
 34801                           ;mbmc.c: 142:  return LATDbits.LATD6;
 34802                           
 34803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34804                           ;incstack = 0
 34805  01C9F2  ACBD               	btfss	189,6,c	;volatile
 34806  01C9F4  D003               	goto	u967_20
 34807  01C9F6  6A01               	clrf	btemp^0,c
 34808  01C9F8  2A01               	incf	btemp^0,f,c
 34809  01C9FA  0012               	return	
 34810  01C9FC                     u967_20:
 34811  01C9FC  6A01               	clrf	btemp^0,c
 34812                           
 34813                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34814  01C9FE  0012               	return		;funcret
 34815  01CA00                     __end_of_get_ac_charger_relay:
 34816                           	opt callstack 0
 34817                           
 34818 ;; *************** function _TMR3_ISR *****************
 34819 ;; Defined at:
 34820 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 34821 ;; Parameters:    Size  Location     Type
 34822 ;;		None
 34823 ;; Auto vars:     Size  Location     Type
 34824 ;;		None
 34825 ;; Return value:  Size  Location     Type
 34826 ;;                  1    wreg      void 
 34827 ;; Registers used:
 34828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34829 ;; Tracked objects:
 34830 ;;		On entry : 0/0
 34831 ;;		On exit  : 3F/0
 34832 ;;		Unchanged: 0/0
 34833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34836 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34837 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34838 ;;Total ram usage:       25 bytes
 34839 ;; Hardware stack levels used:    1
 34840 ;; Hardware stack levels required when called:   14
 34841 ;; This function calls:
 34842 ;;		_TMR3_CallBack
 34843 ;;		_TMR3_WriteTimer
 34844 ;; This function is called by:
 34845 ;;		Interrupt level 1
 34846 ;; This function uses a non-reentrant model
 34847 ;;
 34848                           
 34849                           	psect	text157
 34850  019648                     __ptext157:
 34851                           	opt callstack 0
 34852  019648                     _TMR3_ISR:
 34853                           	opt callstack 2
 34854                           
 34855                           ;incstack = 0
 34856  019648  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 34857  01964E  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 34858  019654  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 34859  01965A  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 34860  019660  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 34861  019666  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 34862  01966C  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 34863  019672  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 34864  019678  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 34865  01967E  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 34866  019684  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 34867  01968A  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 34868  019690  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 34869  019696  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 34870  01969C  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 34871  0196A2  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 34872  0196A8  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 34873  0196AE  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 34874  0196B4  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 34875  0196BA  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 34876  0196C0  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 34877  0196C6  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 34878  0196CC  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 34879  0196D2  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 34880  0196D8  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 34881  0196DE  EE16  F0AF         	lfsr	1,___intlo_sp
 34882                           
 34883                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 34884  0196E2  0139               	movlb	57	; () banked
 34885  0196E4  9DA6               	bcf	166,6,b	;volatile
 34886                           
 34887                           ; BSR set to: 57
 34888                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 34889  0196E6  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 34890  0196EC  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 34891  0196F2  EC2C  F0E0         	call	_TMR3_WriteTimer	;wreg free
 34892                           
 34893                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 34894  0196F6  0100               	movlb	0	; () banked
 34895  0196F8  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 34896  0196FA  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34897  0196FC  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34898  0196FE  E104               	bnz	i1u1316_20
 34899  019700  0E28               	movlw	40
 34900  019702  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 34901  019704  A0D8               	btfss	status,0,c
 34902  019706  D005               	goto	i1l1207
 34903  019708                     i1u1316_20:
 34904                           
 34905                           ; BSR set to: 0
 34906                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 34907  019708  EC90  F0E3         	call	_TMR3_CallBack	;wreg free
 34908                           
 34909                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 34910  01970C  0100               	movlb	0	; () banked
 34911  01970E  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 34912  019710  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 34913  019712                     i1l1207:
 34914                           
 34915                           ; BSR set to: 0
 34916  019712  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 34917  019718  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 34918  01971E  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 34919  019724  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 34920  01972A  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 34921  019730  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 34922  019736  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 34923  01973C  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 34924  019742  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 34925  019748  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 34926  01974E  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 34927  019754  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 34928  01975A  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 34929  019760  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 34930  019766  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 34931  01976C  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 34932  019772  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 34933  019778  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 34934  01977E  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 34935  019784  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 34936  01978A  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 34937  019790  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 34938  019796  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 34939  01979C  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 34940  0197A2  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 34941  0197A8  0011               	retfie		f
 34942  0197AA                     __end_of_TMR3_ISR:
 34943                           	opt callstack 0
 34944                           
 34945 ;; *************** function _TMR3_WriteTimer *****************
 34946 ;; Defined at:
 34947 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 34948 ;; Parameters:    Size  Location     Type
 34949 ;;  timerVal        2  [STACK] unsigned short 
 34950 ;; Auto vars:     Size  Location     Type
 34951 ;;		None
 34952 ;; Return value:  Size  Location     Type
 34953 ;;                  1  [STACK] void 
 34954 ;; Registers used:
 34955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34956 ;; Tracked objects:
 34957 ;;		On entry : 3F/39
 34958 ;;		On exit  : 0/0
 34959 ;;		Unchanged: 0/0
 34960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34965 ;;Total ram usage:        0 bytes
 34966 ;; Hardware stack levels used:    1
 34967 ;; Hardware stack levels required when called:    3
 34968 ;; This function calls:
 34969 ;;		Nothing
 34970 ;; This function is called by:
 34971 ;;		_TMR3_ISR
 34972 ;; This function uses a reentrant model
 34973 ;;
 34974                           
 34975                           	psect	text158
 34976  01C058                     __ptext158:
 34977                           	opt callstack 0
 34978  01C058                     _TMR3_WriteTimer:
 34979                           	opt callstack 12
 34980                           
 34981                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34982                           
 34983                           ; BSR set to: 0
 34984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34985                           ;incstack = 0
 34986  01C058  A4A6               	btfss	166,2,c	;volatile
 34987  01C05A  D00F               	goto	l11235
 34988                           
 34989                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34990  01C05C  90A6               	bcf	166,0,c	;volatile
 34991                           
 34992                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34993                           ;stkvar	_timerVal @ sp[(0)+-2]
 34994  01C05E  0EFF               	movlw	255
 34995  01C060  24E1               	addwf	fsr1l,w,c
 34996  01C062  6ED9               	movwf	fsr2l,c
 34997  01C064  0EFF               	movlw	255
 34998  01C066  20E2               	addwfc	fsr1h,w,c
 34999  01C068  6EDA               	movwf	fsr2h,c
 35000  01C06A  50DF               	movf	indf2,w,c
 35001  01C06C  6EA5               	movwf	165,c	;volatile
 35002                           
 35003                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 35004                           ;stkvar	_timerVal @ sp[(0)+-2]
 35005  01C06E  0EFE               	movlw	-2
 35006  01C070  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35007                           
 35008                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 35009  01C076  80A6               	bsf	166,0,c	;volatile
 35010                           
 35011                           ;mcc_generated_files/tmr3.c: 141:     }
 35012  01C078  D00C               	goto	l1190
 35013  01C07A                     l11235:
 35014                           
 35015                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 35016                           ;stkvar	_timerVal @ sp[(0)+-2]
 35017  01C07A  0EFF               	movlw	255
 35018  01C07C  24E1               	addwf	fsr1l,w,c
 35019  01C07E  6ED9               	movwf	fsr2l,c
 35020  01C080  0EFF               	movlw	255
 35021  01C082  20E2               	addwfc	fsr1h,w,c
 35022  01C084  6EDA               	movwf	fsr2h,c
 35023  01C086  50DF               	movf	indf2,w,c
 35024  01C088  6EA5               	movwf	165,c	;volatile
 35025                           
 35026                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 35027                           ;stkvar	_timerVal @ sp[(0)+-2]
 35028  01C08A  0EFE               	movlw	-2
 35029  01C08C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35030  01C092                     l1190:
 35031                           
 35032                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 35033  01C092  52E5               	movf	postdec1,f,c
 35034  01C094  52E5               	movf	postdec1,f,c
 35035  01C096  0012               	return		;funcret
 35036  01C098                     __end_of_TMR3_WriteTimer:
 35037                           	opt callstack 0
 35038                           
 35039 ;; *************** function _TMR3_CallBack *****************
 35040 ;; Defined at:
 35041 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 35042 ;; Parameters:    Size  Location     Type
 35043 ;;		None
 35044 ;; Auto vars:     Size  Location     Type
 35045 ;;		None
 35046 ;; Return value:  Size  Location     Type
 35047 ;;                  1  [STACK] void 
 35048 ;; Registers used:
 35049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35050 ;; Tracked objects:
 35051 ;;		On entry : 3F/0
 35052 ;;		On exit  : 0/0
 35053 ;;		Unchanged: 0/0
 35054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35059 ;;Total ram usage:        0 bytes
 35060 ;; Hardware stack levels used:    1
 35061 ;; Hardware stack levels required when called:   13
 35062 ;; This function calls:
 35063 ;;		Absolute function
 35064 ;;		_TMR3_DefaultInterruptHandler
 35065 ;;		_calc_bsoc
 35066 ;; This function is called by:
 35067 ;;		_TMR3_ISR
 35068 ;; This function uses a reentrant model
 35069 ;;
 35070                           
 35071                           	psect	text159
 35072  01C720                     __ptext159:
 35073                           	opt callstack 0
 35074  01C720                     _TMR3_CallBack:
 35075                           	opt callstack 2
 35076                           
 35077                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 35078                           
 35079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35080                           ;incstack = 0
 35081  01C720  0100               	movlb	0	; () banked
 35082  01C722  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35083  01C724  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35084  01C726  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35085  01C728  B4D8               	btfsc	status,2,c
 35086  01C72A  0012               	return	
 35087                           
 35088                           ; BSR set to: 0
 35089                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 35090  01C72C  D801               	call	u1300_28
 35091  01C72E  0012               	return	
 35092  01C730                     u1300_28:
 35093  01C730  0005               	push	
 35094  01C732  6EFA               	movwf	pclath,c
 35095  01C734  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35096  01C736  6EFD               	movwf	tosl,c
 35097  01C738  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35098  01C73A  6EFE               	movwf	tosh,c
 35099  01C73C  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35100  01C73E  6EFF               	movwf	tosu,c
 35101  01C740  50FA               	movf	pclath,w,c
 35102  01C742  0012               	return		;indir
 35103  01C744                     __end_of_TMR3_CallBack:
 35104                           	opt callstack 0
 35105                           
 35106 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 35107 ;; Defined at:
 35108 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 35109 ;; Parameters:    Size  Location     Type
 35110 ;;		None
 35111 ;; Auto vars:     Size  Location     Type
 35112 ;;		None
 35113 ;; Return value:  Size  Location     Type
 35114 ;;                  1  [STACK] void 
 35115 ;; Registers used:
 35116 ;;		None
 35117 ;; Tracked objects:
 35118 ;;		On entry : 3F/0
 35119 ;;		On exit  : 0/0
 35120 ;;		Unchanged: 0/0
 35121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35126 ;;Total ram usage:        0 bytes
 35127 ;; Hardware stack levels used:    1
 35128 ;; Hardware stack levels required when called:    3
 35129 ;; This function calls:
 35130 ;;		Nothing
 35131 ;; This function is called by:
 35132 ;;		_TMR3_Initialize
 35133 ;;		_TMR3_CallBack
 35134 ;; This function uses a reentrant model
 35135 ;;
 35136                           
 35137                           	psect	text160
 35138  01CAA0                     __ptext160:
 35139                           	opt callstack 0
 35140  01CAA0                     _TMR3_DefaultInterruptHandler:
 35141                           	opt callstack 11
 35142                           
 35143                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35144                           
 35145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35146                           ;incstack = 0
 35147  01CAA0  0012               	return		;funcret
 35148  01CAA2                     __end_of_TMR3_DefaultInterruptHandler:
 35149                           	opt callstack 0
 35150                           
 35151 ;; *************** function _calc_bsoc *****************
 35152 ;; Defined at:
 35153 ;;		line 39 in file "bsoc.c"
 35154 ;; Parameters:    Size  Location     Type
 35155 ;;		None
 35156 ;; Auto vars:     Size  Location     Type
 35157 ;;  adj             4  [STACK] float 
 35158 ;;  log_ptr         2  [STACK] PTR unsigned char 
 35159 ;;		 -> port_data(512), 
 35160 ;; Return value:  Size  Location     Type
 35161 ;;                  1  [STACK] void 
 35162 ;; Registers used:
 35163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 35164 ;; Tracked objects:
 35165 ;;		On entry : 3F/0
 35166 ;;		On exit  : 5/1
 35167 ;;		Unchanged: 0/0
 35168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35173 ;;Total ram usage:        0 bytes
 35174 ;; Hardware stack levels used:    1
 35175 ;; Hardware stack levels required when called:   12
 35176 ;; This function calls:
 35177 ;;		_StartTimer
 35178 ;;		___asfladd
 35179 ;;		___fldiv
 35180 ;;		___flge
 35181 ;;		___flmul
 35182 ;;		___flneg
 35183 ;;		___fltol
 35184 ;;		_fabsf
 35185 ;;		_get_ac_charger_relay
 35186 ;;		_port_data_dma_ptr
 35187 ;;		_send_port_data_dma
 35188 ;;		_sprintf
 35189 ;;		_strlen
 35190 ;; This function is called by:
 35191 ;;		_init_bsoc
 35192 ;;		_TMR3_CallBack
 35193 ;; This function uses a reentrant model
 35194 ;;
 35195                           
 35196                           	psect	text161
 35197  0133D2                     __ptext161:
 35198                           	opt callstack 0
 35199  0133D2                     _calc_bsoc:
 35200                           	opt callstack 0
 35201                           
 35202                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35203  0133D2  0E06               	movlw	6
 35204  0133D4  26E1               	addwf	fsr1l,f,c
 35205  0133D6  0E00               	movlw	0
 35206  0133D8  22E2               	addwfc	fsr1h,f,c
 35207                           
 35208                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 35209                           
 35210                           ;incstack = 0
 35211  0133DA  0E00               	movlw	0
 35212  0133DC  6E09               	movwf	(btemp+8)^0,c
 35213  0133DE  0E00               	movlw	0
 35214  0133E0  6E0A               	movwf	(btemp+9)^0,c
 35215  0133E2  0E80               	movlw	128
 35216  0133E4  6E0B               	movwf	(btemp+10)^0,c
 35217  0133E6  0E3F               	movlw	63
 35218  0133E8  6E0C               	movwf	(btemp+11)^0,c
 35219                           
 35220                           ;stkvar	_adj @ sp[(-6)+0]
 35221  0133EA  0EFA               	movlw	-6
 35222  0133EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 35223  0133F2  0EFB               	movlw	-5
 35224  0133F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35225  0133FA  0EFC               	movlw	-4
 35226  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35227  013402  0EFD               	movlw	-3
 35228  013404  0060  F033  FFE3   	movff	btemp+11,plusw1
 35229  01340A  82BE               	bsf	190,1,c	;volatile
 35230                           
 35231                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 35232  01340C  0E00               	movlw	0
 35233  01340E  6EE6               	movwf	postinc1,c
 35234  013410  0E00               	movlw	0
 35235  013412  6EE6               	movwf	postinc1,c
 35236  013414  0E61               	movlw	97
 35237  013416  6EE6               	movwf	postinc1,c
 35238  013418  0E45               	movlw	69
 35239  01341A  6EE6               	movwf	postinc1,c
 35240  01341C  EE21  F343         	lfsr	2,_C+68	;volatile
 35241  013420  006F FF7B FFE6     	movff	postinc2,postinc1
 35242  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 35243  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 35244  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 35245  013438  EC13  F0A7         	call	___fldiv	;wreg free
 35246  01343C  0060  F007  FFE6   	movff	btemp,postinc1
 35247  013442  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35248  013448  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35249  01344E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35250  013454  0E8F               	movlw	low (_C+144)
 35251  013456  6EE6               	movwf	postinc1,c
 35252  013458  0E07               	movlw	high (_C+144)
 35253  01345A  6EE6               	movwf	postinc1,c
 35254  01345C  EC0A  F0DB         	call	___asfladd	;wreg free
 35255                           
 35256                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 35257  013460  EE21  F38F         	lfsr	2,_C+144	;volatile
 35258  013464  006F FF7B FFE6     	movff	postinc2,postinc1
 35259  01346A  006F FF7B FFE6     	movff	postinc2,postinc1
 35260  013470  006F FF7B FFE6     	movff	postinc2,postinc1
 35261  013476  006F FF7B FFE6     	movff	postinc2,postinc1
 35262  01347C  EE21  F38B         	lfsr	2,_C+140	;volatile
 35263  013480  006F FF7B FFE6     	movff	postinc2,postinc1
 35264  013486  006F FF7B FFE6     	movff	postinc2,postinc1
 35265  01348C  006F FF7B FFE6     	movff	postinc2,postinc1
 35266  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 35267  013498  EC72  F0CA         	call	___flge	;wreg free
 35268  01349C  B001               	btfsc	btemp& (0+255),0,c
 35269  01349E  D00E               	goto	l13395
 35270                           
 35271                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 35272  0134A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35273  0134A4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 35274  0134AA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 35275  0134B0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 35276  0134B6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 35277  0134BC                     l13395:
 35278                           
 35279                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 35280  0134BC  0ECD               	movlw	205
 35281  0134BE  6EE6               	movwf	postinc1,c
 35282  0134C0  0ECC               	movlw	204
 35283  0134C2  6EE6               	movwf	postinc1,c
 35284  0134C4  0ECC               	movlw	204
 35285  0134C6  6EE6               	movwf	postinc1,c
 35286  0134C8  0E3D               	movlw	61
 35287  0134CA  6EE6               	movwf	postinc1,c
 35288  0134CC  EE21  F38F         	lfsr	2,_C+144	;volatile
 35289  0134D0  006F FF7B FFE6     	movff	postinc2,postinc1
 35290  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35291  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35292  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35293  0134E8  EC72  F0CA         	call	___flge	;wreg free
 35294  0134EC  B001               	btfsc	btemp& (0+255),0,c
 35295  0134EE  D010               	goto	l13399
 35296                           
 35297                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 35298  0134F0  0ECD               	movlw	205
 35299  0134F2  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 35300  0134F8  0ECC               	movlw	204
 35301  0134FA  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 35302  013500  0ECC               	movlw	204
 35303  013502  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 35304  013508  0E3D               	movlw	61
 35305  01350A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 35306  013510                     l13399:
 35307                           
 35308                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 35309  013510  EE21  F343         	lfsr	2,_C+68	;volatile
 35310  013514  006F FF7B FFE6     	movff	postinc2,postinc1
 35311  01351A  006F FF7B FFE6     	movff	postinc2,postinc1
 35312  013520  006F FF7B FFE6     	movff	postinc2,postinc1
 35313  013526  006F FF7B FFE6     	movff	postinc2,postinc1
 35314  01352C  0E0A               	movlw	10
 35315  01352E  6EE6               	movwf	postinc1,c
 35316  013530  0ED7               	movlw	215
 35317  013532  6EE6               	movwf	postinc1,c
 35318  013534  0E23               	movlw	35
 35319  013536  6EE6               	movwf	postinc1,c
 35320  013538  0E3C               	movlw	60
 35321  01353A  6EE6               	movwf	postinc1,c
 35322  01353C  EC72  F0CA         	call	___flge	;wreg free
 35323  013540  B001               	btfsc	btemp& (0+255),0,c
 35324  013542  D01C               	goto	l13403
 35325                           
 35326                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 35327  013544  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 35328  01354A  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 35329  013550  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 35330  013556  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 35331                           
 35332                           ;stkvar	_adj @ sp[(-6)+0]
 35333  01355C  0EFA               	movlw	-6
 35334  01355E  0060  F027  FFE3   	movff	btemp+8,plusw1
 35335  013564  0EFB               	movlw	-5
 35336  013566  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35337  01356C  0EFC               	movlw	-4
 35338  01356E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35339  013574  0EFD               	movlw	-3
 35340  013576  0060  F033  FFE3   	movff	btemp+11,plusw1
 35341  01357C                     l13403:
 35342                           
 35343                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 35344  01357C  0E0A               	movlw	10
 35345  01357E  6EE6               	movwf	postinc1,c
 35346  013580  0ED7               	movlw	215
 35347  013582  6EE6               	movwf	postinc1,c
 35348  013584  0E23               	movlw	35
 35349  013586  6EE6               	movwf	postinc1,c
 35350  013588  0E3C               	movlw	60
 35351  01358A  6EE6               	movwf	postinc1,c
 35352  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 35353  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 35354  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 35355  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 35356  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 35357  0135A8  EC72  F0CA         	call	___flge	;wreg free
 35358  0135AC  B001               	btfsc	btemp& (0+255),0,c
 35359  0135AE  D01C               	goto	l13407
 35360                           
 35361                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 35362  0135B0  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 35363  0135B6  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 35364  0135BC  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 35365  0135C2  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 35366                           
 35367                           ;stkvar	_adj @ sp[(-6)+0]
 35368  0135C8  0EFA               	movlw	-6
 35369  0135CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 35370  0135D0  0EFB               	movlw	-5
 35371  0135D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35372  0135D8  0EFC               	movlw	-4
 35373  0135DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35374  0135E0  0EFD               	movlw	-3
 35375  0135E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 35376  0135E8                     l13407:
 35377                           
 35378                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 35379  0135E8  0E00               	movlw	0
 35380  0135EA  6EE6               	movwf	postinc1,c
 35381  0135EC  0E00               	movlw	0
 35382  0135EE  6EE6               	movwf	postinc1,c
 35383  0135F0  0E61               	movlw	97
 35384  0135F2  6EE6               	movwf	postinc1,c
 35385  0135F4  0E45               	movlw	69
 35386  0135F6  6EE6               	movwf	postinc1,c
 35387                           
 35388                           ;stkvar	_adj @ sp[(-10)+0]
 35389  0135F8  0EF6               	movlw	-10
 35390  0135FA  006F FF8F FFE6     	movff	plusw1,postinc1
 35391  013600  006F FF8F FFE6     	movff	plusw1,postinc1
 35392  013606  006F FF8F FFE6     	movff	plusw1,postinc1
 35393  01360C  006F FF8F FFE6     	movff	plusw1,postinc1
 35394  013612  EE21  F343         	lfsr	2,_C+68	;volatile
 35395  013616  006F FF7B FFE6     	movff	postinc2,postinc1
 35396  01361C  006F FF7B FFE6     	movff	postinc2,postinc1
 35397  013622  006F FF7B FFE6     	movff	postinc2,postinc1
 35398  013628  006F FF7B FFE6     	movff	postinc2,postinc1
 35399  01362E  EC20  F09F         	call	___flmul	;wreg free
 35400  013632  0060  F007  FFE6   	movff	btemp,postinc1
 35401  013638  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35402  01363E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35403  013644  0060  F013  FFE6   	movff	btemp+3,postinc1
 35404  01364A  EC13  F0A7         	call	___fldiv	;wreg free
 35405  01364E  0060  F007  FFE6   	movff	btemp,postinc1
 35406  013654  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35407  01365A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35408  013660  0060  F013  FFE6   	movff	btemp+3,postinc1
 35409  013666  0E8F               	movlw	low (_C+144)
 35410  013668  6EE6               	movwf	postinc1,c
 35411  01366A  0E07               	movlw	high (_C+144)
 35412  01366C  6EE6               	movwf	postinc1,c
 35413  01366E  EC0A  F0DB         	call	___asfladd	;wreg free
 35414                           
 35415                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 35416  013672  EE21  F38F         	lfsr	2,_C+144	;volatile
 35417  013676  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35418  01367C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35419  013682  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35420  013688  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35421                           
 35422                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 35423  01368E  EE21  F39B         	lfsr	2,_C+156	;volatile
 35424  013692  006F FF7B FFE6     	movff	postinc2,postinc1
 35425  013698  006F FF7B FFE6     	movff	postinc2,postinc1
 35426  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
 35427  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35428  0136AA  EE21  F38B         	lfsr	2,_C+140	;volatile
 35429  0136AE  006F FF7B FFE6     	movff	postinc2,postinc1
 35430  0136B4  006F FF7B FFE6     	movff	postinc2,postinc1
 35431  0136BA  006F FF7B FFE6     	movff	postinc2,postinc1
 35432  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35433  0136C6  EC72  F0CA         	call	___flge	;wreg free
 35434  0136CA  B001               	btfsc	btemp& (0+255),0,c
 35435  0136CC  D00E               	goto	l13415
 35436                           
 35437                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 35438  0136CE  EE21  F38B         	lfsr	2,_C+140	;volatile
 35439  0136D2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35440  0136D8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35441  0136DE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35442  0136E4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35443  0136EA                     l13415:
 35444                           
 35445                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 35446  0136EA  0ECD               	movlw	205
 35447  0136EC  6EE6               	movwf	postinc1,c
 35448  0136EE  0ECC               	movlw	204
 35449  0136F0  6EE6               	movwf	postinc1,c
 35450  0136F2  0ECC               	movlw	204
 35451  0136F4  6EE6               	movwf	postinc1,c
 35452  0136F6  0E3D               	movlw	61
 35453  0136F8  6EE6               	movwf	postinc1,c
 35454  0136FA  EE21  F39B         	lfsr	2,_C+156	;volatile
 35455  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 35456  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 35457  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 35458  013710  006F FF7B FFE6     	movff	postinc2,postinc1
 35459  013716  EC72  F0CA         	call	___flge	;wreg free
 35460  01371A  B001               	btfsc	btemp& (0+255),0,c
 35461  01371C  D010               	goto	l13419
 35462                           
 35463                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 35464  01371E  0ECD               	movlw	205
 35465  013720  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 35466  013726  0ECC               	movlw	204
 35467  013728  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 35468  01372E  0ECC               	movlw	204
 35469  013730  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 35470  013736  0E3D               	movlw	61
 35471  013738  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 35472  01373E                     l13419:
 35473                           
 35474                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 35475  01373E  0E00               	movlw	0
 35476  013740  6EE6               	movwf	postinc1,c
 35477  013742  0E00               	movlw	0
 35478  013744  6EE6               	movwf	postinc1,c
 35479  013746  0E61               	movlw	97
 35480  013748  6EE6               	movwf	postinc1,c
 35481  01374A  0E45               	movlw	69
 35482  01374C  6EE6               	movwf	postinc1,c
 35483  01374E  EE21  F347         	lfsr	2,_C+72	;volatile
 35484  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 35485  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 35486  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 35487  013764  006F FF7B FFE6     	movff	postinc2,postinc1
 35488  01376A  EC13  F0A7         	call	___fldiv	;wreg free
 35489  01376E  0060  F007  FFE6   	movff	btemp,postinc1
 35490  013774  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35491  01377A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35492  013780  0060  F013  FFE6   	movff	btemp+3,postinc1
 35493  013786  0E93               	movlw	low (_C+148)
 35494  013788  6EE6               	movwf	postinc1,c
 35495  01378A  0E07               	movlw	high (_C+148)
 35496  01378C  6EE6               	movwf	postinc1,c
 35497  01378E  EC0A  F0DB         	call	___asfladd	;wreg free
 35498                           
 35499                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 35500  013792  0E00               	movlw	0
 35501  013794  6EE6               	movwf	postinc1,c
 35502  013796  0E00               	movlw	0
 35503  013798  6EE6               	movwf	postinc1,c
 35504  01379A  0E61               	movlw	97
 35505  01379C  6EE6               	movwf	postinc1,c
 35506  01379E  0E45               	movlw	69
 35507  0137A0  6EE6               	movwf	postinc1,c
 35508  0137A2  EE21  F37B         	lfsr	2,_C+124	;volatile
 35509  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 35510  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 35511  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 35512  0137B8  006F FF7B FFE6     	movff	postinc2,postinc1
 35513  0137BE  EC13  F0A7         	call	___fldiv	;wreg free
 35514  0137C2  0060  F007  FFE6   	movff	btemp,postinc1
 35515  0137C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35516  0137CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35517  0137D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 35518  0137DA  0EA7               	movlw	low (_C+168)
 35519  0137DC  6EE6               	movwf	postinc1,c
 35520  0137DE  0E07               	movlw	high (_C+168)
 35521  0137E0  6EE6               	movwf	postinc1,c
 35522  0137E2  EC0A  F0DB         	call	___asfladd	;wreg free
 35523                           
 35524                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 35525  0137E6  0E00               	movlw	0
 35526  0137E8  6EE6               	movwf	postinc1,c
 35527  0137EA  0E00               	movlw	0
 35528  0137EC  6EE6               	movwf	postinc1,c
 35529  0137EE  0E61               	movlw	97
 35530  0137F0  6EE6               	movwf	postinc1,c
 35531  0137F2  0E45               	movlw	69
 35532  0137F4  6EE6               	movwf	postinc1,c
 35533  0137F6  EE21  F377         	lfsr	2,_C+120	;volatile
 35534  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 35535  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 35536  013806  006F FF7B FFE6     	movff	postinc2,postinc1
 35537  01380C  006F FF7B FFE6     	movff	postinc2,postinc1
 35538  013812  EC13  F0A7         	call	___fldiv	;wreg free
 35539  013816  0060  F007  FFE6   	movff	btemp,postinc1
 35540  01381C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35541  013822  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35542  013828  0060  F013  FFE6   	movff	btemp+3,postinc1
 35543  01382E  0EAB               	movlw	low (_C+172)
 35544  013830  6EE6               	movwf	postinc1,c
 35545  013832  0E07               	movlw	high (_C+172)
 35546  013834  6EE6               	movwf	postinc1,c
 35547  013836  EC0A  F0DB         	call	___asfladd	;wreg free
 35548                           
 35549                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 35550  01383A  0E00               	movlw	0
 35551  01383C  6EE6               	movwf	postinc1,c
 35552  01383E  0E00               	movlw	0
 35553  013840  6EE6               	movwf	postinc1,c
 35554  013842  0E61               	movlw	97
 35555  013844  6EE6               	movwf	postinc1,c
 35556  013846  0E45               	movlw	69
 35557  013848  6EE6               	movwf	postinc1,c
 35558  01384A  EE21  F373         	lfsr	2,_C+116	;volatile
 35559  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 35560  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 35561  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 35562  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 35563  013866  EC13  F0A7         	call	___fldiv	;wreg free
 35564  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 35565  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35566  013876  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35567  01387C  0060  F013  FFE6   	movff	btemp+3,postinc1
 35568  013882  0EAF               	movlw	low (_C+176)
 35569  013884  6EE6               	movwf	postinc1,c
 35570  013886  0E07               	movlw	high (_C+176)
 35571  013888  6EE6               	movwf	postinc1,c
 35572  01388A  EC0A  F0DB         	call	___asfladd	;wreg free
 35573                           
 35574                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 35575  01388E  EE21  F37F         	lfsr	2,_C+128	;volatile
 35576  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 35577  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 35578  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 35579  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35580  0138AA  0E00               	movlw	0
 35581  0138AC  6EE6               	movwf	postinc1,c
 35582  0138AE  0E00               	movlw	0
 35583  0138B0  6EE6               	movwf	postinc1,c
 35584  0138B2  0E00               	movlw	0
 35585  0138B4  6EE6               	movwf	postinc1,c
 35586  0138B6  0E00               	movlw	0
 35587  0138B8  6EE6               	movwf	postinc1,c
 35588  0138BA  EC72  F0CA         	call	___flge	;wreg free
 35589  0138BE  B001               	btfsc	btemp& (0+255),0,c
 35590  0138C0  D02A               	goto	l13425
 35591                           
 35592                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 35593  0138C2  0E00               	movlw	0
 35594  0138C4  6EE6               	movwf	postinc1,c
 35595  0138C6  0E00               	movlw	0
 35596  0138C8  6EE6               	movwf	postinc1,c
 35597  0138CA  0E61               	movlw	97
 35598  0138CC  6EE6               	movwf	postinc1,c
 35599  0138CE  0E45               	movlw	69
 35600  0138D0  6EE6               	movwf	postinc1,c
 35601  0138D2  EE21  F37F         	lfsr	2,_C+128	;volatile
 35602  0138D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35603  0138DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35604  0138E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35605  0138E8  006F FF7B FFE6     	movff	postinc2,postinc1
 35606  0138EE  EC13  F0A7         	call	___fldiv	;wreg free
 35607  0138F2  0060  F007  FFE6   	movff	btemp,postinc1
 35608  0138F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35609  0138FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35610  013904  0060  F013  FFE6   	movff	btemp+3,postinc1
 35611  01390A  0E9F               	movlw	low (_C+160)
 35612  01390C  6EE6               	movwf	postinc1,c
 35613  01390E  0E07               	movlw	high (_C+160)
 35614  013910  6EE6               	movwf	postinc1,c
 35615  013912  EC0A  F0DB         	call	___asfladd	;wreg free
 35616  013916                     l13425:
 35617                           
 35618                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 35619  013916  EE21  F37F         	lfsr	2,_C+128	;volatile
 35620  01391A  0E03               	movlw	3
 35621  01391C  AEDB               	btfss	plusw2,7,c
 35622  01391E  D038               	goto	l13429
 35623                           
 35624                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 35625  013920  0E00               	movlw	0
 35626  013922  6EE6               	movwf	postinc1,c
 35627  013924  0E00               	movlw	0
 35628  013926  6EE6               	movwf	postinc1,c
 35629  013928  0E61               	movlw	97
 35630  01392A  6EE6               	movwf	postinc1,c
 35631  01392C  0E45               	movlw	69
 35632  01392E  6EE6               	movwf	postinc1,c
 35633  013930  EE21  F37F         	lfsr	2,_C+128	;volatile
 35634  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 35635  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 35636  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 35637  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 35638  01394C  EC13  F0A7         	call	___fldiv	;wreg free
 35639  013950  0060  F007  FFE6   	movff	btemp,postinc1
 35640  013956  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35641  01395C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35642  013962  0060  F013  FFE6   	movff	btemp+3,postinc1
 35643  013968  ECAE  F0D6         	call	_fabsf	;wreg free
 35644  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 35645  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35646  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35647  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35648  013984  0EA3               	movlw	low (_C+164)
 35649  013986  6EE6               	movwf	postinc1,c
 35650  013988  0E07               	movlw	high (_C+164)
 35651  01398A  6EE6               	movwf	postinc1,c
 35652  01398C  EC0A  F0DB         	call	___asfladd	;wreg free
 35653  013990                     l13429:
 35654                           
 35655                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 35656  013990  0E00               	movlw	0
 35657  013992  6EE6               	movwf	postinc1,c
 35658  013994  0E00               	movlw	0
 35659  013996  6EE6               	movwf	postinc1,c
 35660  013998  0EC8               	movlw	200
 35661  01399A  6EE6               	movwf	postinc1,c
 35662  01399C  0E42               	movlw	66
 35663  01399E  6EE6               	movwf	postinc1,c
 35664  0139A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35665  0139A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35666  0139AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35667  0139B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35668  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 35669  0139BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 35670  0139C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35671  0139C6  006F FF7B FFE6     	movff	postinc2,postinc1
 35672  0139CC  006F FF7B FFE6     	movff	postinc2,postinc1
 35673  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 35674  0139D8  EC13  F0A7         	call	___fldiv	;wreg free
 35675  0139DC  0060  F007  FFE6   	movff	btemp,postinc1
 35676  0139E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35677  0139E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35678  0139EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35679  0139F4  EC20  F09F         	call	___flmul	;wreg free
 35680  0139F8  0060  F007  FFE6   	movff	btemp,postinc1
 35681  0139FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35682  013A04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35683  013A0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 35684  013A10  ECB9  F0C9         	call	___fltol	;wreg free
 35685  013A14  0060  F004  F00B   	movff	btemp,btemp+10
 35686  013A1A  0060  F008  F00C   	movff	btemp+1,btemp+11
 35687  013A20  0E01               	movlw	1
 35688  013A22  260B               	addwf	(btemp+10)^0,f,c
 35689  013A24  0E00               	movlw	0
 35690  013A26  220C               	addwfc	(btemp+11)^0,f,c
 35691  013A28  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 35692  013A2E  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 35693                           
 35694                           ;bsoc.c: 76:  if (C.soc > 100)
 35695  013A34  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35696  013A38  0E01               	movlw	1
 35697  013A3A  50DB               	movf	plusw2,w,c
 35698  013A3C  E104               	bnz	u1293_20
 35699  013A3E  0E65               	movlw	101
 35700  013A40  5CDE               	subwf	postinc2,w,c
 35701  013A42  A0D8               	btfss	status,0,c
 35702  013A44  D008               	goto	l13435
 35703  013A46                     u1293_20:
 35704                           
 35705                           ;bsoc.c: 77:   C.soc = 100;
 35706  013A46  0E64               	movlw	100
 35707  013A48  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 35708  013A4E  0E00               	movlw	0
 35709  013A50  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 35710  013A56                     l13435:
 35711                           
 35712                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 35713  013A56  EE21  F343         	lfsr	2,_C+68	;volatile
 35714  013A5A  0E03               	movlw	3
 35715  013A5C  AEDB               	btfss	plusw2,7,c
 35716  013A5E  D047               	goto	l2154
 35717                           
 35718                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 35719  013A60  EE21  F343         	lfsr	2,_C+68	;volatile
 35720  013A64  006F FF7B FFE6     	movff	postinc2,postinc1
 35721  013A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35722  013A70  006F FF7B FFE6     	movff	postinc2,postinc1
 35723  013A76  006F FF7B FFE6     	movff	postinc2,postinc1
 35724  013A7C  EE21  F39B         	lfsr	2,_C+156	;volatile
 35725  013A80  006F FF7B FFE6     	movff	postinc2,postinc1
 35726  013A86  006F FF7B FFE6     	movff	postinc2,postinc1
 35727  013A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35728  013A92  006F FF7B FFE6     	movff	postinc2,postinc1
 35729  013A98  EC13  F0A7         	call	___fldiv	;wreg free
 35730  013A9C  0060  F007  FFE6   	movff	btemp,postinc1
 35731  013AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35732  013AA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35733  013AAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35734  013AB4  EC93  F0DE         	call	___flneg	;wreg free
 35735  013AB8  0060  F007  FFE6   	movff	btemp,postinc1
 35736  013ABE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35737  013AC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35738  013ACA  0060  F013  FFE6   	movff	btemp+3,postinc1
 35739  013AD0  ECB9  F0C9         	call	___fltol	;wreg free
 35740  013AD4  0060  F004  F00B   	movff	btemp,btemp+10
 35741  013ADA  0060  F008  F00C   	movff	btemp+1,btemp+11
 35742  013AE0  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 35743  013AE6  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 35744                           
 35745                           ;bsoc.c: 81:  } else {
 35746  013AEC  D008               	goto	l13439
 35747  013AEE                     l2154:
 35748                           
 35749                           ;bsoc.c: 82:   C.runtime = 99;
 35750  013AEE  0E63               	movlw	99
 35751  013AF0  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35752  013AF6  0E00               	movlw	0
 35753  013AF8  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35754  013AFE                     l13439:
 35755                           
 35756                           ;bsoc.c: 84:  if (C.runtime > 99)
 35757  013AFE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35758  013B02  0E01               	movlw	1
 35759  013B04  50DB               	movf	plusw2,w,c
 35760  013B06  E104               	bnz	u1295_20
 35761  013B08  0E64               	movlw	100
 35762  013B0A  5CDE               	subwf	postinc2,w,c
 35763  013B0C  A0D8               	btfss	status,0,c
 35764  013B0E  D008               	goto	l13443
 35765  013B10                     u1295_20:
 35766                           
 35767                           ;bsoc.c: 85:   C.runtime = 99;
 35768  013B10  0E63               	movlw	99
 35769  013B12  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35770  013B18  0E00               	movlw	0
 35771  013B1A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35772  013B20                     l13443:
 35773                           
 35774                           ;bsoc.c: 87:  V.lowint_count++;
 35775  013B20  0E01               	movlw	1
 35776  013B22  0101               	movlb	1	; () banked
 35777  013B24  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 35778  013B26  0E00               	movlw	0
 35779  013B28  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 35780  013B2A  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 35781  013B2C  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 35782                           
 35783                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 35784  013B2E  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 35785  013B30  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 35786  013B32  A4D8               	btfss	status,2,c
 35787  013B34  D177               	goto	l13455
 35788                           
 35789                           ; BSR set to: 1
 35790  013B36  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 35791  013B38  B4D8               	btfsc	status,2,c
 35792  013B3A  D174               	goto	l13455
 35793                           
 35794                           ; BSR set to: 1
 35795                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 35796  013B3C  EC14  F0E5         	call	_port_data_dma_ptr	;wreg free
 35797                           
 35798                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35799  013B40  0EFF               	movlw	-1
 35800  013B42  0060  F00B  FFE3   	movff	btemp+1,plusw1
 35801  013B48  0EFE               	movlw	-2
 35802  013B4A  0060  F007  FFE3   	movff	btemp,plusw1
 35803                           
 35804                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 35805  013B50  EE21  F3B9         	lfsr	2,_C+186	;volatile
 35806  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 35807  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 35808  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 35809  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 35810  013B6C  EE21  F3BD         	lfsr	2,_C+190	;volatile
 35811  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 35812  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 35813  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 35814  013B82  006F FF7B FFE6     	movff	postinc2,postinc1
 35815  013B88  EE21  F39B         	lfsr	2,_C+156	;volatile
 35816  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35817  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 35818  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 35819  013B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 35820  013BA4  EE22  F026         	lfsr	2,_C+295	;volatile
 35821  013BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 35822  013BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 35823  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 35824  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 35825  013BC0  EE22  F022         	lfsr	2,_C+291	;volatile
 35826  013BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 35827  013BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 35828  013BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 35829  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 35830  013BDC  EE22  F021         	lfsr	2,_C+290	;volatile
 35831  013BE0  50DF               	movf	indf2,w,c
 35832  013BE2  6EE6               	movwf	postinc1,c
 35833  013BE4  0E00               	movlw	0
 35834  013BE6  6EE6               	movwf	postinc1,c
 35835  013BE8  ECF9  F0E4         	call	_get_ac_charger_relay	;wreg free
 35836  013BEC  5001               	movf	btemp^0,w,c
 35837  013BEE  6EE6               	movwf	postinc1,c
 35838  013BF0  0E00               	movlw	0
 35839  013BF2  6EE6               	movwf	postinc1,c
 35840  013BF4  EE21  F367         	lfsr	2,_C+104	;volatile
 35841  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 35842  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 35843  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 35844  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 35845  013C10  EE21  F387         	lfsr	2,_C+136	;volatile
 35846  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 35847  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 35848  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 35849  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 35850  013C2C  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35851  013C30  006F FF78  F00B    	movff	postinc2,btemp+10
 35852  013C36  006F FF74  F00C    	movff	postdec2,btemp+11
 35853  013C3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 35854  013C42  0060  F033  FFE6   	movff	btemp+11,postinc1
 35855  013C48  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35856  013C4C  006F FF78  F00B    	movff	postinc2,btemp+10
 35857  013C52  006F FF74  F00C    	movff	postdec2,btemp+11
 35858  013C58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 35859  013C5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 35860  013C64  EE21  F393         	lfsr	2,_C+148	;volatile
 35861  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 35862  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 35863  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 35864  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 35865  013C80  EE21  F38F         	lfsr	2,_C+144	;volatile
 35866  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 35867  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 35868  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 35869  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 35870  013C9C  EE21  F377         	lfsr	2,_C+120	;volatile
 35871  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 35872  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 35873  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 35874  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 35875  013CB8  EE21  F373         	lfsr	2,_C+116	;volatile
 35876  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 35877  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 35878  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 35879  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 35880  013CD4  EE21  F37B         	lfsr	2,_C+124	;volatile
 35881  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 35882  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 35883  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 35884  013CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 35885  013CF0  EE21  F37F         	lfsr	2,_C+128	;volatile
 35886  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 35887  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 35888  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 35889  013D06  006F FF7B FFE6     	movff	postinc2,postinc1
 35890  013D0C  EE21  F347         	lfsr	2,_C+72	;volatile
 35891  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 35892  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 35893  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 35894  013D22  006F FF7B FFE6     	movff	postinc2,postinc1
 35895  013D28  EE21  F343         	lfsr	2,_C+68	;volatile
 35896  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 35897  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 35898  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 35899  013D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 35900  013D44  EE21  F363         	lfsr	2,_C+100	;volatile
 35901  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 35902  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 35903  013D54  006F FF7B FFE6     	movff	postinc2,postinc1
 35904  013D5A  006F FF7B FFE6     	movff	postinc2,postinc1
 35905  013D60  EE21  F34B         	lfsr	2,_C+76	;volatile
 35906  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 35907  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35908  013D70  006F FF7B FFE6     	movff	postinc2,postinc1
 35909  013D76  006F FF7B FFE6     	movff	postinc2,postinc1
 35910  013D7C  EE21  F34F         	lfsr	2,_C+80	;volatile
 35911  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 35912  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 35913  013D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35914  013D92  006F FF7B FFE6     	movff	postinc2,postinc1
 35915  013D98  EE21  F353         	lfsr	2,_C+84	;volatile
 35916  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 35917  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 35918  013DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 35919  013DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 35920  013DB4  0060  F623  FFE6   	movff	_V+129,postinc1
 35921  013DBA  0060  F627  FFE6   	movff	_V+130,postinc1
 35922  013DC0  0060  F62B  FFE6   	movff	_V+131,postinc1
 35923  013DC6  0060  F62F  FFE6   	movff	_V+132,postinc1
 35924  013DCC  0E32               	movlw	50
 35925  013DCE  6EE6               	movwf	postinc1,c
 35926  013DD0  0E00               	movlw	0
 35927  013DD2  6EE6               	movwf	postinc1,c
 35928  013DD4  0E39               	movlw	low STR_75
 35929  013DD6  6EE6               	movwf	postinc1,c
 35930  013DD8  0EFB               	movlw	high STR_75
 35931  013DDA  6EE6               	movwf	postinc1,c
 35932                           
 35933                           ;stkvar	_log_ptr @ sp[(-98)+4]
 35934  013DDC  0EA2               	movlw	-94
 35935  013DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 35936  013DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 35937  013DEA  0E5E               	movlw	94
 35938  013DEC  6EE6               	movwf	postinc1,c
 35939  013DEE  ECAC  F0D1         	call	_sprintf	;wreg free
 35940                           
 35941                           ; BSR set to: 0
 35942                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 35943  013DF2  0E7D               	movlw	125
 35944  013DF4  6EE6               	movwf	postinc1,c
 35945  013DF6  0E00               	movlw	0
 35946  013DF8  6EE6               	movwf	postinc1,c
 35947  013DFA  0E0A               	movlw	10
 35948  013DFC  6EE6               	movwf	postinc1,c
 35949  013DFE  ECEC  F0DF         	call	_StartTimer	;wreg free
 35950                           
 35951                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 35952                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35953  013E02  0EFE               	movlw	-2
 35954  013E04  006F FF8F FFE6     	movff	plusw1,postinc1
 35955  013E0A  006F FF8F FFE6     	movff	plusw1,postinc1
 35956  013E10  EC57  F0D8         	call	_strlen	;wreg free
 35957  013E14  0060  F007  FFE6   	movff	btemp,postinc1
 35958  013E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35959  013E20  ECF9  F0DD         	call	_send_port_data_dma	;wreg free
 35960  013E24                     l13455:
 35961                           
 35962                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 35963  013E24  0E09               	movlw	9
 35964  013E26  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 35965  013E28  D001               	goto	l2158
 35966                           
 35967                           ;bsoc.c: 102:   log_update_wait = 0;
 35968  013E2A  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 35969  013E2C                     l2158:
 35970                           
 35971                           ;bsoc.c: 104:  C.update = 0;
 35972  013E2C  0E00               	movlw	0
 35973  013E2E  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 35974                           
 35975                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 35976  013E34  92BE               	bcf	190,1,c	;volatile
 35977                           
 35978                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 35979  013E36  0EFA               	movlw	250
 35980  013E38  26E1               	addwf	fsr1l,f,c
 35981  013E3A  0EFF               	movlw	255
 35982  013E3C  22E2               	addwfc	fsr1h,f,c
 35983  013E3E  0012               	return		;funcret
 35984  013E40                     __end_of_calc_bsoc:
 35985                           	opt callstack 0
 35986                           
 35987 ;; *************** function _send_port_data_dma *****************
 35988 ;; Defined at:
 35989 ;;		line 398 in file "eadog.c"
 35990 ;; Parameters:    Size  Location     Type
 35991 ;;  dsize           2  [STACK] unsigned short 
 35992 ;; Auto vars:     Size  Location     Type
 35993 ;;		None
 35994 ;; Return value:  Size  Location     Type
 35995 ;;                  1  [STACK] void 
 35996 ;; Registers used:
 35997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35998 ;; Tracked objects:
 35999 ;;		On entry : 0/0
 36000 ;;		On exit  : 3F/3B
 36001 ;;		Unchanged: 0/0
 36002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36007 ;;Total ram usage:        0 bytes
 36008 ;; Hardware stack levels used:    1
 36009 ;; Hardware stack levels required when called:    3
 36010 ;; This function calls:
 36011 ;;		Nothing
 36012 ;; This function is called by:
 36013 ;;		_calc_bsoc
 36014 ;; This function uses a reentrant model
 36015 ;;
 36016                           
 36017                           	psect	text162
 36018  01BBF2                     __ptext162:
 36019                           	opt callstack 0
 36020  01BBF2                     _send_port_data_dma:
 36021                           	opt callstack 10
 36022                           
 36023                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 36024                           ;stkvar	_dsize @ sp[(0)+-2]
 36025                           
 36026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36027                           ;incstack = 0
 36028  01BBF2  0EFE               	movlw	-2
 36029  01BBF4  04E3               	decf	plusw1,w,c
 36030  01BBF6  0EFF               	movlw	-1
 36031  01BBF8  006F FF8C  F001    	movff	plusw1,btemp
 36032  01BBFE  0E02               	movlw	2
 36033  01BC00  5A01               	subwfb	btemp^0,f,c
 36034  01BC02  A0D8               	btfss	status,0,c
 36035  01BC04  D00C               	goto	l10297
 36036                           
 36037                           ;eadog.c: 401:   dsize = 512;
 36038  01BC06  0E00               	movlw	0
 36039  01BC08  6E0B               	movwf	(btemp+10)^0,c
 36040  01BC0A  0E02               	movlw	2
 36041  01BC0C  6E0C               	movwf	(btemp+11)^0,c
 36042                           
 36043                           ;stkvar	_dsize @ sp[(0)+-2]
 36044  01BC0E  0EFE               	movlw	-2
 36045  01BC10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36046  01BC16  0EFF               	movlw	-1
 36047  01BC18  0060  F033  FFE3   	movff	btemp+11,plusw1
 36048  01BC1E                     l10297:
 36049                           
 36050                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 36051  01BC1E  013B               	movlb	59	; () banked
 36052  01BC20  9FDC               	bcf	220,7,b	;volatile
 36053                           
 36054                           ; BSR set to: 59
 36055                           ;eadog.c: 404:  DMA2SSZ = dsize;
 36056                           ;stkvar	_dsize @ sp[(0)+-2]
 36057  01BC22  0EFE               	movlw	-2
 36058  01BC24  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 36059  01BC2A  0EFF               	movlw	-1
 36060  01BC2C  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 36061                           
 36062                           ; BSR set to: 59
 36063                           ;eadog.c: 405:  DMA2DSZ = 1;
 36064  01BC32  0E00               	movlw	0
 36065  01BC34  6FCF               	movwf	207,b	;volatile
 36066  01BC36  0E01               	movlw	1
 36067  01BC38  6FCE               	movwf	206,b	;volatile
 36068                           
 36069                           ; BSR set to: 59
 36070                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 36071  01BC3A  8FDC               	bsf	220,7,b	;volatile
 36072                           
 36073                           ; BSR set to: 59
 36074                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 36075  01BC3C  8DDC               	bsf	220,6,b	;volatile
 36076                           
 36077                           ; BSR set to: 59
 36078                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36079  01BC3E  52E5               	movf	postdec1,f,c
 36080  01BC40  52E5               	movf	postdec1,f,c
 36081  01BC42  0012               	return		;funcret
 36082  01BC44                     __end_of_send_port_data_dma:
 36083                           	opt callstack 0
 36084                           
 36085 ;; *************** function _port_data_dma_ptr *****************
 36086 ;; Defined at:
 36087 ;;		line 413 in file "eadog.c"
 36088 ;; Parameters:    Size  Location     Type
 36089 ;;		None
 36090 ;; Auto vars:     Size  Location     Type
 36091 ;;		None
 36092 ;; Return value:  Size  Location     Type
 36093 ;;                  2  [STACK] PTR unsigned char 
 36094 ;; Registers used:
 36095 ;;		wreg, status,2, status,0, btemp, btemp+1
 36096 ;; Tracked objects:
 36097 ;;		On entry : 3F/1
 36098 ;;		On exit  : 0/0
 36099 ;;		Unchanged: 0/0
 36100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36105 ;;Total ram usage:        0 bytes
 36106 ;; Hardware stack levels used:    1
 36107 ;; Hardware stack levels required when called:    3
 36108 ;; This function calls:
 36109 ;;		Nothing
 36110 ;; This function is called by:
 36111 ;;		_calc_bsoc
 36112 ;; This function uses a reentrant model
 36113 ;;
 36114                           
 36115                           	psect	text163
 36116  01CA28                     __ptext163:
 36117                           	opt callstack 0
 36118  01CA28                     _port_data_dma_ptr:
 36119                           	opt callstack 10
 36120                           
 36121                           ;eadog.c: 415:  return port_data;
 36122                           
 36123                           ; BSR set to: 59
 36124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36125                           ;incstack = 0
 36126  01CA28  0EFF               	movlw	low _port_data
 36127  01CA2A  6E01               	movwf	btemp^0,c
 36128  01CA2C  0E04               	movlw	high _port_data
 36129  01CA2E  6E02               	movwf	(btemp+1)^0,c
 36130                           
 36131                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36132  01CA30  0012               	return		;funcret
 36133  01CA32                     __end_of_port_data_dma_ptr:
 36134                           	opt callstack 0
 36135                           
 36136 ;; *************** function ___asfladd *****************
 36137 ;; Defined at:
 36138 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 36139 ;; Parameters:    Size  Location     Type
 36140 ;;  f1p             2  [STACK] PTR 
 36141 ;;		 -> C(299), 
 36142 ;;  f2              4  [STACK] PTR 
 36143 ;; Auto vars:     Size  Location     Type
 36144 ;;		None
 36145 ;; Return value:  Size  Location     Type
 36146 ;;                  4  [STACK] PTR 
 36147 ;; Registers used:
 36148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 36149 ;; Tracked objects:
 36150 ;;		On entry : 0/0
 36151 ;;		On exit  : 0/0
 36152 ;;		Unchanged: 0/0
 36153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36158 ;;Total ram usage:        0 bytes
 36159 ;; Hardware stack levels used:    1
 36160 ;; Hardware stack levels required when called:    4
 36161 ;; This function calls:
 36162 ;;		___fladd
 36163 ;; This function is called by:
 36164 ;;		_calc_bsoc
 36165 ;; This function uses a reentrant model
 36166 ;;
 36167                           
 36168                           	psect	text164
 36169  01B614                     __ptext164:
 36170                           	opt callstack 0
 36171  01B614                     ___asfladd:
 36172                           	opt callstack 9
 36173                           
 36174                           ;	Return value of ___asfladd is never used
 36175                           ;stkvar	_f2 @ sp[(0)+-6]
 36176                           
 36177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36178                           ;incstack = 0
 36179  01B614  0EFA               	movlw	-6
 36180  01B616  006F FF8F FFE6     	movff	plusw1,postinc1
 36181  01B61C  006F FF8F FFE6     	movff	plusw1,postinc1
 36182  01B622  006F FF8F FFE6     	movff	plusw1,postinc1
 36183  01B628  006F FF8F FFE6     	movff	plusw1,postinc1
 36184                           
 36185                           ;stkvar	_f1p @ sp[(-4)+-2]
 36186  01B62E  0EFA               	movlw	-6
 36187  01B630  006F FF8F FFD9     	movff	plusw1,fsr2l
 36188  01B636  0EFB               	movlw	-5
 36189  01B638  006F FF8F FFDA     	movff	plusw1,fsr2h
 36190  01B63E  006F FF7B FFE6     	movff	postinc2,postinc1
 36191  01B644  006F FF7B FFE6     	movff	postinc2,postinc1
 36192  01B64A  006F FF7B FFE6     	movff	postinc2,postinc1
 36193  01B650  006F FF7B FFE6     	movff	postinc2,postinc1
 36194  01B656  EC35  F0A3         	call	___fladd	;wreg free
 36195                           
 36196                           ;stkvar	_f1p @ sp[(0)+-2]
 36197  01B65A  0EFE               	movlw	-2
 36198  01B65C  006F FF8F FFD9     	movff	plusw1,fsr2l
 36199  01B662  0EFF               	movlw	-1
 36200  01B664  006F FF8F FFDA     	movff	plusw1,fsr2h
 36201  01B66A  0060  F007  FFDE   	movff	btemp,postinc2
 36202  01B670  0060  F00B  FFDE   	movff	btemp+1,postinc2
 36203  01B676  0060  F00F  FFDE   	movff	btemp+2,postinc2
 36204  01B67C  0060  F013  FFDE   	movff	btemp+3,postinc2
 36205                           
 36206                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 36207  01B682  0EFA               	movlw	250
 36208  01B684  26E1               	addwf	fsr1l,f,c
 36209  01B686  0EFF               	movlw	255
 36210  01B688  22E2               	addwfc	fsr1h,f,c
 36211  01B68A  0012               	return		;funcret
 36212  01B68C                     __end_of___asfladd:
 36213                           	opt callstack 0
 36214                           
 36215 ;; *************** function _INT0_ISR *****************
 36216 ;; Defined at:
 36217 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 36218 ;; Parameters:    Size  Location     Type
 36219 ;;		None
 36220 ;; Auto vars:     Size  Location     Type
 36221 ;;		None
 36222 ;; Return value:  Size  Location     Type
 36223 ;;                  1    wreg      void 
 36224 ;; Registers used:
 36225 ;;		wreg, status,2, status,0, pclath, tosl
 36226 ;; Tracked objects:
 36227 ;;		On entry : 0/0
 36228 ;;		On exit  : 0/0
 36229 ;;		Unchanged: 0/0
 36230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36235 ;;Total ram usage:        0 bytes
 36236 ;; Hardware stack levels used:    1
 36237 ;; Hardware stack levels required when called:    2
 36238 ;; This function calls:
 36239 ;;		_INT0_CallBack
 36240 ;; This function is called by:
 36241 ;;		Interrupt level 2
 36242 ;; This function uses a non-reentrant model
 36243 ;;
 36244                           
 36245                           	psect	text165
 36246  01CA00                     __ptext165:
 36247                           	opt callstack 0
 36248  01CA00                     _INT0_ISR:
 36249                           	opt callstack 2
 36250                           
 36251                           ;incstack = 0
 36252  01CA00  EE14  F15E         	lfsr	1,___inthi_sp
 36253                           
 36254                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 36255  01CA04  0139               	movlb	57	; () banked
 36256  01CA06  91A1               	bcf	161,0,b	;volatile
 36257                           
 36258                           ; BSR set to: 57
 36259                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 36260  01CA08  ECA2  F0E3         	call	_INT0_CallBack	;wreg free
 36261  01CA0C  0011               	retfie		f
 36262  01CA0E                     __end_of_INT0_ISR:
 36263                           	opt callstack 0
 36264                           
 36265 ;; *************** function _INT0_CallBack *****************
 36266 ;; Defined at:
 36267 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 36268 ;; Parameters:    Size  Location     Type
 36269 ;;		None
 36270 ;; Auto vars:     Size  Location     Type
 36271 ;;		None
 36272 ;; Return value:  Size  Location     Type
 36273 ;;                  1  [STACK] void 
 36274 ;; Registers used:
 36275 ;;		wreg, status,2, status,0, pclath, tosl
 36276 ;; Tracked objects:
 36277 ;;		On entry : 3F/39
 36278 ;;		On exit  : 0/0
 36279 ;;		Unchanged: 0/0
 36280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36285 ;;Total ram usage:        0 bytes
 36286 ;; Hardware stack levels used:    1
 36287 ;; Hardware stack levels required when called:    1
 36288 ;; This function calls:
 36289 ;;		Absolute function
 36290 ;;		_INT0_DefaultInterruptHandler
 36291 ;; This function is called by:
 36292 ;;		_INT0_ISR
 36293 ;; This function uses a reentrant model
 36294 ;;
 36295                           
 36296                           	psect	text166
 36297  01C744                     __ptext166:
 36298                           	opt callstack 0
 36299  01C744                     _INT0_CallBack:
 36300                           	opt callstack 2
 36301                           
 36302                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 36303                           
 36304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36305                           ;incstack = 0
 36306  01C744  0100               	movlb	0	; () banked
 36307  01C746  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36308  01C748  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36309  01C74A  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36310  01C74C  B4D8               	btfsc	status,2,c
 36311  01C74E  0012               	return	
 36312                           
 36313                           ; BSR set to: 0
 36314                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 36315  01C750  D801               	call	u1035_48
 36316  01C752  0012               	return	
 36317  01C754                     u1035_48:
 36318  01C754  0005               	push	
 36319  01C756  6EFA               	movwf	pclath,c
 36320  01C758  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36321  01C75A  6EFD               	movwf	tosl,c
 36322  01C75C  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36323  01C75E  6EFE               	movwf	tosh,c
 36324  01C760  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36325  01C762  6EFF               	movwf	tosu,c
 36326  01C764  50FA               	movf	pclath,w,c
 36327  01C766  0012               	return		;indir
 36328  01C768                     __end_of_INT0_CallBack:
 36329                           	opt callstack 0
 36330                           
 36331 ;; *************** function _INT0_DefaultInterruptHandler *****************
 36332 ;; Defined at:
 36333 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 36334 ;; Parameters:    Size  Location     Type
 36335 ;;		None
 36336 ;; Auto vars:     Size  Location     Type
 36337 ;;		None
 36338 ;; Return value:  Size  Location     Type
 36339 ;;                  1  [STACK] void 
 36340 ;; Registers used:
 36341 ;;		None
 36342 ;; Tracked objects:
 36343 ;;		On entry : 3F/0
 36344 ;;		On exit  : 0/0
 36345 ;;		Unchanged: 0/0
 36346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36351 ;;Total ram usage:        0 bytes
 36352 ;; Hardware stack levels used:    1
 36353 ;; This function calls:
 36354 ;;		Nothing
 36355 ;; This function is called by:
 36356 ;;		_EXT_INT_Initialize
 36357 ;;		_INT0_CallBack
 36358 ;; This function uses a reentrant model
 36359 ;;
 36360                           
 36361                           	psect	text167
 36362  01CAA2                     __ptext167:
 36363                           	opt callstack 0
 36364  01CAA2                     _INT0_DefaultInterruptHandler:
 36365                           	opt callstack 2
 36366                           
 36367                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36368                           
 36369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36370                           ;incstack = 0
 36371  01CAA2  0012               	return		;funcret
 36372  01CAA4                     __end_of_INT0_DefaultInterruptHandler:
 36373                           	opt callstack 0
 36374                           
 36375 ;; *************** function _Default_ISR *****************
 36376 ;; Defined at:
 36377 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 36378 ;; Parameters:    Size  Location     Type
 36379 ;;		None
 36380 ;; Auto vars:     Size  Location     Type
 36381 ;;		None
 36382 ;; Return value:  Size  Location     Type
 36383 ;;                  1    wreg      void 
 36384 ;; Registers used:
 36385 ;;		None
 36386 ;; Tracked objects:
 36387 ;;		On entry : 0/0
 36388 ;;		On exit  : 0/0
 36389 ;;		Unchanged: 0/0
 36390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36395 ;;Total ram usage:        0 bytes
 36396 ;; Hardware stack levels used:    1
 36397 ;; This function calls:
 36398 ;;		Nothing
 36399 ;; This function is called by:
 36400 ;;		Interrupt level 2
 36401 ;; This function uses a non-reentrant model
 36402 ;;
 36403                           
 36404                           	psect	text168
 36405  01CA98                     __ptext168:
 36406                           	opt callstack 0
 36407  01CA98                     _Default_ISR:
 36408                           	opt callstack 4
 36409                           
 36410                           ;incstack = 0
 36411  01CA98  EE14  F15E         	lfsr	1,___inthi_sp
 36412  01CA9C  0011               	retfie		f
 36413  01CA9E                     __end_of_Default_ISR:
 36414                           	opt callstack 0
 36415                           
 36416 ;; *************** function _ADCC_ISR *****************
 36417 ;; Defined at:
 36418 ;;		line 314 in file "mcc_generated_files/adcc.c"
 36419 ;; Parameters:    Size  Location     Type
 36420 ;;		None
 36421 ;; Auto vars:     Size  Location     Type
 36422 ;;		None
 36423 ;; Return value:  Size  Location     Type
 36424 ;;                  1    wreg      void 
 36425 ;; Registers used:
 36426 ;;		wreg, status,2, status,0, pclath, tosl
 36427 ;; Tracked objects:
 36428 ;;		On entry : 0/0
 36429 ;;		On exit  : 0/0
 36430 ;;		Unchanged: 0/0
 36431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36436 ;;Total ram usage:        0 bytes
 36437 ;; Hardware stack levels used:    1
 36438 ;; Hardware stack levels required when called:    1
 36439 ;; This function calls:
 36440 ;;		Absolute function
 36441 ;;		_ADCC_DefaultInterruptHandler
 36442 ;;		_adc_int_handler
 36443 ;; This function is called by:
 36444 ;;		Interrupt level 2
 36445 ;; This function uses a non-reentrant model
 36446 ;;
 36447                           
 36448                           	psect	text169
 36449  01C3D8                     __ptext169:
 36450                           	opt callstack 0
 36451  01C3D8                     _ADCC_ISR:
 36452                           	opt callstack 3
 36453                           
 36454                           ;incstack = 0
 36455  01C3D8  EE14  F15E         	lfsr	1,___inthi_sp
 36456                           
 36457                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 36458  01C3DC  0139               	movlb	57	; () banked
 36459  01C3DE  95A1               	bcf	161,2,b	;volatile
 36460                           
 36461                           ; BSR set to: 57
 36462                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 36463  01C3E0  0100               	movlb	0	; () banked
 36464  01C3E2  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36465  01C3E4  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36466  01C3E6  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36467  01C3E8  B4D8               	btfsc	status,2,c
 36468  01C3EA  0011               	retfie		f
 36469                           
 36470                           ; BSR set to: 0
 36471                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 36472  01C3EC  D801               	call	i2u1080_48
 36473  01C3EE  0011               	retfie		f
 36474  01C3F0                     i2u1080_48:
 36475  01C3F0  0005               	push	
 36476  01C3F2  6EFA               	movwf	pclath,c
 36477  01C3F4  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36478  01C3F6  6EFD               	movwf	tosl,c
 36479  01C3F8  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36480  01C3FA  6EFE               	movwf	tosh,c
 36481  01C3FC  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36482  01C3FE  6EFF               	movwf	tosu,c
 36483  01C400  50FA               	movf	pclath,w,c
 36484  01C402  0012               	return		;indir
 36485  01C404                     __end_of_ADCC_ISR:
 36486                           	opt callstack 0
 36487                           
 36488 ;; *************** function _adc_int_t_handler *****************
 36489 ;; Defined at:
 36490 ;;		line 171 in file "daq.c"
 36491 ;; Parameters:    Size  Location     Type
 36492 ;;		None
 36493 ;; Auto vars:     Size  Location     Type
 36494 ;;		None
 36495 ;; Return value:  Size  Location     Type
 36496 ;;                  1  [STACK] void 
 36497 ;; Registers used:
 36498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 36499 ;; Tracked objects:
 36500 ;;		On entry : 3F/0
 36501 ;;		On exit  : 1/0
 36502 ;;		Unchanged: 0/0
 36503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36508 ;;Total ram usage:        0 bytes
 36509 ;; Hardware stack levels used:    1
 36510 ;; Hardware stack levels required when called:    1
 36511 ;; This function calls:
 36512 ;;		_ADCC_DischargeSampleCapacitor
 36513 ;;		_ADCC_StartConversion
 36514 ;; This function is called by:
 36515 ;;		_start_adc_scan
 36516 ;;		_ADCC_ThresholdISR
 36517 ;; This function uses a reentrant model
 36518 ;;
 36519                           
 36520                           	psect	text170
 36521  01B51C                     __ptext170:
 36522                           	opt callstack 0
 36523  01B51C                     _adc_int_t_handler:
 36524                           	opt callstack 2
 36525                           
 36526                           ;daq.c: 176:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 36527                           
 36528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36529                           ;incstack = 0
 36530  01B51C  013E               	movlb	62	; () banked
 36531  01B51E  51E6               	movf	230,w,b	;volatile
 36532  01B520  006F FB9C  F001    	movff	16103,btemp	;volatile
 36533  01B526  6A02               	clrf	(btemp+1)^0,c
 36534  01B528  0060  F004  F002   	movff	btemp,btemp+1
 36535  01B52E  6A01               	clrf	btemp^0,c
 36536  01B530  2601               	addwf	btemp^0,f,c
 36537  01B532  0E00               	movlw	0
 36538  01B534  2202               	addwfc	(btemp+1)^0,f,c
 36539  01B536  0100               	movlb	0	; () banked
 36540  01B538  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36541  01B53A  0D02               	mullw	2
 36542  01B53C  50F3               	movf	243,w,c
 36543  01B53E  0FAF               	addlw	low _R
 36544  01B540  6ED9               	movwf	fsr2l,c
 36545  01B542  6ADA               	clrf	fsr2h,c
 36546  01B544  0060  F007  FFDE   	movff	btemp,postinc2
 36547  01B54A  0060  F00B  FFDD   	movff	btemp+1,postdec2
 36548  01B550                     l11685:
 36549                           
 36550                           ;daq.c: 178:   if (++R.scan_index > 0XD) {
 36551  01B550  0100               	movlb	0	; () banked
 36552  01B552  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 36553  01B554  0E0D               	movlw	13
 36554  01B556  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 36555  01B558  D003               	goto	l11691
 36556                           
 36557                           ; BSR set to: 0
 36558                           ;daq.c: 179:    R.done = 1;
 36559  01B55A  0E01               	movlw	1
 36560  01B55C  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 36561  01B55E  0012               	return	
 36562  01B560                     l11691:
 36563                           
 36564                           ; BSR set to: 0
 36565                           ;daq.c: 185:  } while (!((R.scan_select >> R.scan_index) &0x1));
 36566  01B560  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 36567  01B566  EE20  F0E2         	lfsr	2,_R+51	;volatile
 36568  01B56A  006F FF78  F009    	movff	postinc2,btemp+8
 36569  01B570  006F FF74  F00A    	movff	postdec2,btemp+9
 36570  01B576  2A0C               	incf	(btemp+11)^0,f,c
 36571  01B578  D003               	goto	u1077_44
 36572  01B57A                     u1077_45:
 36573  01B57A  90D8               	bcf	status,0,c
 36574  01B57C  320A               	rrcf	(btemp+9)^0,f,c
 36575  01B57E  3209               	rrcf	(btemp+8)^0,f,c
 36576  01B580                     u1077_44:
 36577  01B580  2E0C               	decfsz	(btemp+11)^0,f,c
 36578  01B582  D7FB               	goto	u1077_45
 36579  01B584  A009               	btfss	(btemp+8)^0,0,c
 36580  01B586  D7E4               	goto	l11685
 36581                           
 36582                           ;daq.c: 186:  ADCC_DischargeSampleCapacitor();
 36583  01B588  EC2B  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 36584                           
 36585                           ; BSR set to: 62
 36586                           ;daq.c: 187:  ADCC_StartConversion(R.scan_index & 0xf);
 36587  01B58C  0100               	movlb	0	; () banked
 36588  01B58E  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36589  01B590  0B0F               	andlw	15
 36590  01B592  6EE6               	movwf	postinc1,c
 36591  01B594  ECC2  F0E4         	call	_ADCC_StartConversion	;wreg free
 36592                           
 36593                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36594  01B598  0012               	return		;funcret
 36595  01B59A                     __end_of_adc_int_t_handler:
 36596                           	opt callstack 0
 36597                           
 36598 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 36599 ;; Defined at:
 36600 ;;		line 339 in file "mcc_generated_files/adcc.c"
 36601 ;; Parameters:    Size  Location     Type
 36602 ;;		None
 36603 ;; Auto vars:     Size  Location     Type
 36604 ;;		None
 36605 ;; Return value:  Size  Location     Type
 36606 ;;                  1  [STACK] void 
 36607 ;; Registers used:
 36608 ;;		None
 36609 ;; Tracked objects:
 36610 ;;		On entry : 3F/0
 36611 ;;		On exit  : 0/0
 36612 ;;		Unchanged: 0/0
 36613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36618 ;;Total ram usage:        0 bytes
 36619 ;; Hardware stack levels used:    1
 36620 ;; This function calls:
 36621 ;;		Nothing
 36622 ;; This function is called by:
 36623 ;;		_ADCC_Initialize
 36624 ;;		_ADCC_ISR
 36625 ;;		_ADCC_ThresholdISR
 36626 ;; This function uses a reentrant model
 36627 ;;
 36628                           
 36629                           	psect	text171
 36630  01CAA4                     __ptext171:
 36631                           	opt callstack 0
 36632  01CAA4                     _ADCC_DefaultInterruptHandler:
 36633                           	opt callstack 3
 36634                           
 36635                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36636                           
 36637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36638                           ;incstack = 0
 36639  01CAA4  0012               	return		;funcret
 36640  01CAA6                     __end_of_ADCC_DefaultInterruptHandler:
 36641                           	opt callstack 0
 36642                           
 36643 ;; *************** function _adc_int_handler *****************
 36644 ;; Defined at:
 36645 ;;		line 161 in file "daq.c"
 36646 ;; Parameters:    Size  Location     Type
 36647 ;;		None
 36648 ;; Auto vars:     Size  Location     Type
 36649 ;;		None
 36650 ;; Return value:  Size  Location     Type
 36651 ;;                  1  [STACK] void 
 36652 ;; Registers used:
 36653 ;;		None
 36654 ;; Tracked objects:
 36655 ;;		On entry : 3F/0
 36656 ;;		On exit  : 0/0
 36657 ;;		Unchanged: 0/0
 36658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36663 ;;Total ram usage:        0 bytes
 36664 ;; Hardware stack levels used:    1
 36665 ;; This function calls:
 36666 ;;		Nothing
 36667 ;; This function is called by:
 36668 ;;		_start_adc_scan
 36669 ;;		_ADCC_ISR
 36670 ;; This function uses a reentrant model
 36671 ;;
 36672                           
 36673                           	psect	text172
 36674  01CAA6                     __ptext172:
 36675                           	opt callstack 0
 36676  01CAA6                     _adc_int_handler:
 36677                           	opt callstack 3
 36678                           
 36679                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36680                           
 36681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36682                           ;incstack = 0
 36683  01CAA6  0012               	return		;funcret
 36684  01CAA8                     __end_of_adc_int_handler:
 36685                           	opt callstack 0
 36686                           
 36687 ;; *************** function _ADCC_ThresholdISR *****************
 36688 ;; Defined at:
 36689 ;;		line 327 in file "mcc_generated_files/adcc.c"
 36690 ;; Parameters:    Size  Location     Type
 36691 ;;		None
 36692 ;; Auto vars:     Size  Location     Type
 36693 ;;		None
 36694 ;; Return value:  Size  Location     Type
 36695 ;;                  1    wreg      void 
 36696 ;; Registers used:
 36697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 36698 ;; Tracked objects:
 36699 ;;		On entry : 0/0
 36700 ;;		On exit  : 0/0
 36701 ;;		Unchanged: 0/0
 36702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36705 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36706 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36707 ;;Total ram usage:        5 bytes
 36708 ;; Hardware stack levels used:    1
 36709 ;; Hardware stack levels required when called:    2
 36710 ;; This function calls:
 36711 ;;		Absolute function
 36712 ;;		_ADCC_DefaultInterruptHandler
 36713 ;;		_adc_int_t_handler
 36714 ;; This function is called by:
 36715 ;;		Interrupt level 2
 36716 ;; This function uses a non-reentrant model
 36717 ;;
 36718                           
 36719                           	psect	text173
 36720  01B7D4                     __ptext173:
 36721                           	opt callstack 0
 36722  01B7D4                     _ADCC_ThresholdISR:
 36723                           	opt callstack 2
 36724                           
 36725                           ;incstack = 0
 36726  01B7D4  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 36727  01B7DA  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 36728  01B7E0  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 36729  01B7E6  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 36730  01B7EC  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 36731  01B7F2  EE14  F15E         	lfsr	1,___inthi_sp
 36732                           
 36733                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 36734  01B7F6  0139               	movlb	57	; () banked
 36735  01B7F8  97A1               	bcf	161,3,b	;volatile
 36736                           
 36737                           ; BSR set to: 57
 36738                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 36739  01B7FA  0100               	movlb	0	; () banked
 36740  01B7FC  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36741  01B7FE  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36742  01B800  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36743  01B802  B4D8               	btfsc	status,2,c
 36744  01B804  D00C               	goto	i2u1082_49
 36745                           
 36746                           ; BSR set to: 0
 36747                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 36748  01B806  D801               	call	i2u1082_48
 36749  01B808  D00A               	goto	i2u1082_49
 36750  01B80A                     i2u1082_48:
 36751  01B80A  0005               	push	
 36752  01B80C  6EFA               	movwf	pclath,c
 36753  01B80E  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36754  01B810  6EFD               	movwf	tosl,c
 36755  01B812  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36756  01B814  6EFE               	movwf	tosh,c
 36757  01B816  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36758  01B818  6EFF               	movwf	tosu,c
 36759  01B81A  50FA               	movf	pclath,w,c
 36760  01B81C  0012               	return		;indir
 36761  01B81E                     i2u1082_49:
 36762  01B81E  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 36763  01B824  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 36764  01B82A  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 36765  01B830  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 36766  01B836  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 36767  01B83C  0011               	retfie		f
 36768  01B83E                     __end_of_ADCC_ThresholdISR:
 36769                           	opt callstack 0
 36770                           
 36771 ;; *************** function _UART1_rx_vect_isr *****************
 36772 ;; Defined at:
 36773 ;;		line 181 in file "mcc_generated_files/uart1.c"
 36774 ;; Parameters:    Size  Location     Type
 36775 ;;		None
 36776 ;; Auto vars:     Size  Location     Type
 36777 ;;		None
 36778 ;; Return value:  Size  Location     Type
 36779 ;;                  1    wreg      void 
 36780 ;; Registers used:
 36781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36782 ;; Tracked objects:
 36783 ;;		On entry : 0/0
 36784 ;;		On exit  : 0/0
 36785 ;;		Unchanged: 0/0
 36786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36791 ;;Total ram usage:        0 bytes
 36792 ;; Hardware stack levels used:    1
 36793 ;; Hardware stack levels required when called:    1
 36794 ;; This function calls:
 36795 ;;		Absolute function
 36796 ;;		_UART1_Receive_ISR
 36797 ;; This function is called by:
 36798 ;;		Interrupt level 2
 36799 ;; This function uses a non-reentrant model
 36800 ;;
 36801                           
 36802                           	psect	text174
 36803  01C63C                     __ptext174:
 36804                           	opt callstack 0
 36805  01C63C                     _UART1_rx_vect_isr:
 36806                           	opt callstack 3
 36807                           
 36808                           ;incstack = 0
 36809  01C63C  EE14  F15E         	lfsr	1,___inthi_sp
 36810                           
 36811                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 36812  01C640  0100               	movlb	0	; () banked
 36813  01C642  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 36814  01C644  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 36815  01C646  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 36816  01C648  B4D8               	btfsc	status,2,c
 36817  01C64A  0011               	retfie		f
 36818                           
 36819                           ; BSR set to: 0
 36820                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 36821  01C64C  D801               	call	i2u1084_48
 36822  01C64E  0011               	retfie		f
 36823  01C650                     i2u1084_48:
 36824  01C650  0005               	push	
 36825  01C652  6EFA               	movwf	pclath,c
 36826  01C654  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 36827  01C656  6EFD               	movwf	tosl,c
 36828  01C658  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 36829  01C65A  6EFE               	movwf	tosh,c
 36830  01C65C  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 36831  01C65E  6EFF               	movwf	tosu,c
 36832  01C660  50FA               	movf	pclath,w,c
 36833  01C662  0012               	return		;indir
 36834  01C664                     __end_of_UART1_rx_vect_isr:
 36835                           	opt callstack 0
 36836                           
 36837 ;; *************** function _UART1_Receive_ISR *****************
 36838 ;; Defined at:
 36839 ;;		line 192 in file "mcc_generated_files/uart1.c"
 36840 ;; Parameters:    Size  Location     Type
 36841 ;;		None
 36842 ;; Auto vars:     Size  Location     Type
 36843 ;;		None
 36844 ;; Return value:  Size  Location     Type
 36845 ;;                  1  [STACK] void 
 36846 ;; Registers used:
 36847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36848 ;; Tracked objects:
 36849 ;;		On entry : 3F/0
 36850 ;;		On exit  : 3F/0
 36851 ;;		Unchanged: 0/0
 36852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36857 ;;Total ram usage:        0 bytes
 36858 ;; Hardware stack levels used:    1
 36859 ;; This function calls:
 36860 ;;		Nothing
 36861 ;; This function is called by:
 36862 ;;		_UART1_Initialize
 36863 ;;		_UART1_rx_vect_isr
 36864 ;; This function uses a reentrant model
 36865 ;;
 36866                           
 36867                           	psect	text175
 36868  01C7D0                     __ptext175:
 36869                           	opt callstack 0
 36870  01C7D0                     _UART1_Receive_ISR:
 36871                           	opt callstack 3
 36872                           
 36873                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 36874                           
 36875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36876                           ;incstack = 0
 36877  01C7D0  0EDC               	movlw	low _uart1RxBuffer
 36878  01C7D2  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 36879  01C7D4  6ED9               	movwf	fsr2l,c
 36880  01C7D6  6ADA               	clrf	fsr2h,c
 36881  01C7D8  0E01               	movlw	high _uart1RxBuffer
 36882  01C7DA  22DA               	addwfc	fsr2h,f,c
 36883  01C7DC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 36884  01C7E2  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 36885                           
 36886                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 36887  01C7E4  0E07               	movlw	7
 36888  01C7E6  6447               	cpfsgt	_uart1RxHead^0,c
 36889  01C7E8  D001               	goto	l11179
 36890                           
 36891                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 36892  01C7EA  6A47               	clrf	_uart1RxHead^0,c	;volatile
 36893  01C7EC                     l11179:
 36894                           
 36895                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 36896  01C7EC  0100               	movlb	0	; () banked
 36897  01C7EE  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 36898                           
 36899                           ; BSR set to: 0
 36900                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36901  01C7F0  0012               	return		;funcret
 36902  01C7F2                     __end_of_UART1_Receive_ISR:
 36903                           	opt callstack 0
 36904                           
 36905 ;; *************** function _UART2_tx_vect_isr *****************
 36906 ;; Defined at:
 36907 ;;		line 195 in file "mcc_generated_files/uart2.c"
 36908 ;; Parameters:    Size  Location     Type
 36909 ;;		None
 36910 ;; Auto vars:     Size  Location     Type
 36911 ;;		None
 36912 ;; Return value:  Size  Location     Type
 36913 ;;                  1    wreg      void 
 36914 ;; Registers used:
 36915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36916 ;; Tracked objects:
 36917 ;;		On entry : 0/0
 36918 ;;		On exit  : 0/0
 36919 ;;		Unchanged: 0/0
 36920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36925 ;;Total ram usage:        0 bytes
 36926 ;; Hardware stack levels used:    1
 36927 ;; Hardware stack levels required when called:    1
 36928 ;; This function calls:
 36929 ;;		Absolute function
 36930 ;;		_UART2_Transmit_ISR
 36931 ;; This function is called by:
 36932 ;;		Interrupt level 2
 36933 ;; This function uses a non-reentrant model
 36934 ;;
 36935                           
 36936                           	psect	text176
 36937  01C664                     __ptext176:
 36938                           	opt callstack 0
 36939  01C664                     _UART2_tx_vect_isr:
 36940                           	opt callstack 3
 36941                           
 36942                           ; BSR set to: 0
 36943                           ;incstack = 0
 36944  01C664  EE14  F15E         	lfsr	1,___inthi_sp
 36945                           
 36946                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 36947  01C668  0100               	movlb	0	; () banked
 36948  01C66A  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36949  01C66C  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36950  01C66E  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36951  01C670  B4D8               	btfsc	status,2,c
 36952  01C672  0011               	retfie		f
 36953                           
 36954                           ; BSR set to: 0
 36955                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 36956  01C674  D801               	call	i2u1086_48
 36957  01C676  0011               	retfie		f
 36958  01C678                     i2u1086_48:
 36959  01C678  0005               	push	
 36960  01C67A  6EFA               	movwf	pclath,c
 36961  01C67C  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36962  01C67E  6EFD               	movwf	tosl,c
 36963  01C680  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36964  01C682  6EFE               	movwf	tosh,c
 36965  01C684  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36966  01C686  6EFF               	movwf	tosu,c
 36967  01C688  50FA               	movf	pclath,w,c
 36968  01C68A  0012               	return		;indir
 36969  01C68C                     __end_of_UART2_tx_vect_isr:
 36970                           	opt callstack 0
 36971                           
 36972 ;; *************** function _UART2_Transmit_ISR *****************
 36973 ;; Defined at:
 36974 ;;		line 213 in file "mcc_generated_files/uart2.c"
 36975 ;; Parameters:    Size  Location     Type
 36976 ;;		None
 36977 ;; Auto vars:     Size  Location     Type
 36978 ;;		None
 36979 ;; Return value:  Size  Location     Type
 36980 ;;                  1  [STACK] void 
 36981 ;; Registers used:
 36982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36983 ;; Tracked objects:
 36984 ;;		On entry : 3F/0
 36985 ;;		On exit  : 3B/39
 36986 ;;		Unchanged: 0/0
 36987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36992 ;;Total ram usage:        0 bytes
 36993 ;; Hardware stack levels used:    1
 36994 ;; This function calls:
 36995 ;;		Nothing
 36996 ;; This function is called by:
 36997 ;;		_UART2_Initialize
 36998 ;;		_UART2_tx_vect_isr
 36999 ;; This function uses a reentrant model
 37000 ;;
 37001                           
 37002                           	psect	text177
 37003  01C404                     __ptext177:
 37004                           	opt callstack 0
 37005  01C404                     _UART2_Transmit_ISR:
 37006                           	opt callstack 3
 37007                           
 37008                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 37009                           
 37010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37011                           ;incstack = 0
 37012  01C404  0E40               	movlw	64
 37013  01C406  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 37014  01C408  D010               	goto	l673
 37015                           
 37016                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 37017  01C40A  0E00               	movlw	low _uart2TxBuffer
 37018  01C40C  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 37019  01C40E  6ED9               	movwf	fsr2l,c
 37020  01C410  6ADA               	clrf	fsr2h,c
 37021  01C412  0E03               	movlw	high _uart2TxBuffer
 37022  01C414  22DA               	addwfc	fsr2h,f,c
 37023  01C416  50DF               	movf	indf2,w,c
 37024  01C418  013D               	movlb	61	; () banked
 37025  01C41A  6FD2               	movwf	210,b	;volatile
 37026                           
 37027                           ; BSR set to: 61
 37028  01C41C  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 37029                           
 37030                           ; BSR set to: 61
 37031                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 37032  01C41E  0E3F               	movlw	63
 37033  01C420  6446               	cpfsgt	_uart2TxTail^0,c
 37034  01C422  D001               	goto	l11191
 37035                           
 37036                           ; BSR set to: 61
 37037                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 37038  01C424  6A46               	clrf	_uart2TxTail^0,c	;volatile
 37039  01C426                     l11191:
 37040                           
 37041                           ; BSR set to: 61
 37042                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 37043  01C426  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 37044                           
 37045                           ;mcc_generated_files/uart2.c: 224:     }
 37046  01C428  0012               	return	
 37047  01C42A                     l673:
 37048                           
 37049                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 37050  01C42A  0139               	movlb	57	; () banked
 37051  01C42C  9796               	bcf	150,3,b	;volatile
 37052                           
 37053                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37054  01C42E  0012               	return		;funcret
 37055  01C430                     __end_of_UART2_Transmit_ISR:
 37056                           	opt callstack 0
 37057                           
 37058 ;; *************** function _UART2_rx_vect_isr *****************
 37059 ;; Defined at:
 37060 ;;		line 203 in file "mcc_generated_files/uart2.c"
 37061 ;; Parameters:    Size  Location     Type
 37062 ;;		None
 37063 ;; Auto vars:     Size  Location     Type
 37064 ;;		None
 37065 ;; Return value:  Size  Location     Type
 37066 ;;                  1    wreg      void 
 37067 ;; Registers used:
 37068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37069 ;; Tracked objects:
 37070 ;;		On entry : 0/0
 37071 ;;		On exit  : 0/0
 37072 ;;		Unchanged: 0/0
 37073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37078 ;;Total ram usage:        0 bytes
 37079 ;; Hardware stack levels used:    1
 37080 ;; Hardware stack levels required when called:    1
 37081 ;; This function calls:
 37082 ;;		Absolute function
 37083 ;;		_UART2_Receive_ISR
 37084 ;; This function is called by:
 37085 ;;		Interrupt level 2
 37086 ;; This function uses a non-reentrant model
 37087 ;;
 37088                           
 37089                           	psect	text178
 37090  01C68C                     __ptext178:
 37091                           	opt callstack 0
 37092  01C68C                     _UART2_rx_vect_isr:
 37093                           	opt callstack 3
 37094                           
 37095                           ;incstack = 0
 37096  01C68C  EE14  F15E         	lfsr	1,___inthi_sp
 37097                           
 37098                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 37099  01C690  0100               	movlb	0	; () banked
 37100  01C692  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37101  01C694  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37102  01C696  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37103  01C698  B4D8               	btfsc	status,2,c
 37104  01C69A  0011               	retfie		f
 37105                           
 37106                           ; BSR set to: 0
 37107                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 37108  01C69C  D801               	call	i2u1088_48
 37109  01C69E  0011               	retfie		f
 37110  01C6A0                     i2u1088_48:
 37111  01C6A0  0005               	push	
 37112  01C6A2  6EFA               	movwf	pclath,c
 37113  01C6A4  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37114  01C6A6  6EFD               	movwf	tosl,c
 37115  01C6A8  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37116  01C6AA  6EFE               	movwf	tosh,c
 37117  01C6AC  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37118  01C6AE  6EFF               	movwf	tosu,c
 37119  01C6B0  50FA               	movf	pclath,w,c
 37120  01C6B2  0012               	return		;indir
 37121  01C6B4                     __end_of_UART2_rx_vect_isr:
 37122                           	opt callstack 0
 37123                           
 37124 ;; *************** function _UART2_Receive_ISR *****************
 37125 ;; Defined at:
 37126 ;;		line 233 in file "mcc_generated_files/uart2.c"
 37127 ;; Parameters:    Size  Location     Type
 37128 ;;		None
 37129 ;; Auto vars:     Size  Location     Type
 37130 ;;		None
 37131 ;; Return value:  Size  Location     Type
 37132 ;;                  1  [STACK] void 
 37133 ;; Registers used:
 37134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37135 ;; Tracked objects:
 37136 ;;		On entry : 3F/0
 37137 ;;		On exit  : 3F/0
 37138 ;;		Unchanged: 0/0
 37139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37144 ;;Total ram usage:        0 bytes
 37145 ;; Hardware stack levels used:    1
 37146 ;; This function calls:
 37147 ;;		Nothing
 37148 ;; This function is called by:
 37149 ;;		_UART2_Initialize
 37150 ;;		_UART2_rx_vect_isr
 37151 ;; This function uses a reentrant model
 37152 ;;
 37153                           
 37154                           	psect	text179
 37155  01C812                     __ptext179:
 37156                           	opt callstack 0
 37157  01C812                     _UART2_Receive_ISR:
 37158                           	opt callstack 3
 37159                           
 37160                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 37161                           
 37162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37163                           ;incstack = 0
 37164  01C812  0E00               	movlw	low _uart2RxBuffer
 37165  01C814  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 37166  01C816  6ED9               	movwf	fsr2l,c
 37167  01C818  6ADA               	clrf	fsr2h,c
 37168  01C81A  0E04               	movlw	high _uart2RxBuffer
 37169  01C81C  22DA               	addwfc	fsr2h,f,c
 37170  01C81E  006F F743 FFDF     	movff	15824,indf2	;volatile
 37171  01C824  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 37172                           
 37173                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 37174  01C826  2844               	incf	_uart2RxHead^0,w,c
 37175  01C828  B4D8               	btfsc	status,2,c
 37176                           
 37177                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 37178  01C82A  6A44               	clrf	_uart2RxHead^0,c	;volatile
 37179                           
 37180                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 37181  01C82C  0100               	movlb	0	; () banked
 37182  01C82E  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 37183                           
 37184                           ; BSR set to: 0
 37185                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37186  01C830  0012               	return		;funcret
 37187  01C832                     __end_of_UART2_Receive_ISR:
 37188                           	opt callstack 0
 37189                           
 37190 ;; *************** function _TMR6_ISR *****************
 37191 ;; Defined at:
 37192 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 37193 ;; Parameters:    Size  Location     Type
 37194 ;;		None
 37195 ;; Auto vars:     Size  Location     Type
 37196 ;;		None
 37197 ;; Return value:  Size  Location     Type
 37198 ;;                  1    wreg      void 
 37199 ;; Registers used:
 37200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37201 ;; Tracked objects:
 37202 ;;		On entry : 0/0
 37203 ;;		On exit  : 0/0
 37204 ;;		Unchanged: 0/0
 37205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37210 ;;Total ram usage:        1 bytes
 37211 ;; Hardware stack levels used:    1
 37212 ;; Hardware stack levels required when called:    2
 37213 ;; This function calls:
 37214 ;;		_TMR6_CallBack
 37215 ;; This function is called by:
 37216 ;;		Interrupt level 2
 37217 ;; This function uses a non-reentrant model
 37218 ;;
 37219                           
 37220                           	psect	text180
 37221  01C8E4                     __ptext180:
 37222                           	opt callstack 0
 37223  01C8E4                     _TMR6_ISR:
 37224                           	opt callstack 2
 37225                           
 37226                           ; BSR set to: 0
 37227                           ;incstack = 0
 37228  01C8E4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 37229  01C8EA  EE14  F15E         	lfsr	1,___inthi_sp
 37230                           
 37231                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 37232  01C8EE  0139               	movlb	57	; () banked
 37233  01C8F0  91A9               	bcf	169,0,b	;volatile
 37234                           
 37235                           ; BSR set to: 57
 37236                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 37237  01C8F2  ECB4  F0E3         	call	_TMR6_CallBack	;wreg free
 37238  01C8F6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 37239  01C8FC  0011               	retfie		f
 37240  01C8FE                     __end_of_TMR6_ISR:
 37241                           	opt callstack 0
 37242                           
 37243 ;; *************** function _TMR6_CallBack *****************
 37244 ;; Defined at:
 37245 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 37246 ;; Parameters:    Size  Location     Type
 37247 ;;		None
 37248 ;; Auto vars:     Size  Location     Type
 37249 ;;		None
 37250 ;; Return value:  Size  Location     Type
 37251 ;;                  1  [STACK] void 
 37252 ;; Registers used:
 37253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37254 ;; Tracked objects:
 37255 ;;		On entry : 3F/39
 37256 ;;		On exit  : 0/0
 37257 ;;		Unchanged: 0/0
 37258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37263 ;;Total ram usage:        0 bytes
 37264 ;; Hardware stack levels used:    1
 37265 ;; Hardware stack levels required when called:    1
 37266 ;; This function calls:
 37267 ;;		Absolute function
 37268 ;;		_TMR6_DefaultInterruptHandler
 37269 ;; This function is called by:
 37270 ;;		_TMR6_ISR
 37271 ;; This function uses a reentrant model
 37272 ;;
 37273                           
 37274                           	psect	text181
 37275  01C768                     __ptext181:
 37276                           	opt callstack 0
 37277  01C768                     _TMR6_CallBack:
 37278                           	opt callstack 2
 37279                           
 37280                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 37281                           
 37282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37283                           ;incstack = 0
 37284  01C768  0100               	movlb	0	; () banked
 37285  01C76A  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37286  01C76C  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37287  01C76E  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37288  01C770  B4D8               	btfsc	status,2,c
 37289  01C772  0012               	return	
 37290                           
 37291                           ; BSR set to: 0
 37292                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 37293  01C774  D801               	call	u1043_48
 37294  01C776  0012               	return	
 37295  01C778                     u1043_48:
 37296  01C778  0005               	push	
 37297  01C77A  6EFA               	movwf	pclath,c
 37298  01C77C  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37299  01C77E  6EFD               	movwf	tosl,c
 37300  01C780  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37301  01C782  6EFE               	movwf	tosh,c
 37302  01C784  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37303  01C786  6EFF               	movwf	tosu,c
 37304  01C788  50FA               	movf	pclath,w,c
 37305  01C78A  0012               	return		;indir
 37306  01C78C                     __end_of_TMR6_CallBack:
 37307                           	opt callstack 0
 37308                           
 37309 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 37310 ;; Defined at:
 37311 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 37312 ;; Parameters:    Size  Location     Type
 37313 ;;		None
 37314 ;; Auto vars:     Size  Location     Type
 37315 ;;  i               1  [STACK] unsigned char 
 37316 ;; Return value:  Size  Location     Type
 37317 ;;                  1  [STACK] void 
 37318 ;; Registers used:
 37319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37320 ;; Tracked objects:
 37321 ;;		On entry : 3F/0
 37322 ;;		On exit  : 0/0
 37323 ;;		Unchanged: 0/0
 37324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37329 ;;Total ram usage:        0 bytes
 37330 ;; Hardware stack levels used:    1
 37331 ;; This function calls:
 37332 ;;		Nothing
 37333 ;; This function is called by:
 37334 ;;		_TMR6_Initialize
 37335 ;;		_TMR6_CallBack
 37336 ;; This function uses a reentrant model
 37337 ;;
 37338                           
 37339                           	psect	text182
 37340  01BC44                     __ptext182:
 37341                           	opt callstack 0
 37342  01BC44                     _TMR6_DefaultInterruptHandler:
 37343                           	opt callstack 0
 37344                           
 37345                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37346  01BC44  52E6               	movf	postinc1,f,c
 37347                           
 37348                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 37349                           ;stkvar	_i @ sp[(-1)+0]
 37350                           
 37351                           ;incstack = 0
 37352  01BC46  0EFF               	movlw	-1
 37353  01BC48  6AE3               	clrf	plusw1,c
 37354  01BC4A                     l10703:
 37355                           
 37356                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 37357                           ;stkvar	_i @ sp[(-1)+0]
 37358  01BC4A  0EFF               	movlw	-1
 37359  01BC4C  50E3               	movf	plusw1,w,c
 37360  01BC4E  0D02               	mullw	2
 37361  01BC50  0E7D               	movlw	low _tickCount
 37362  01BC52  24F3               	addwf	243,w,c
 37363  01BC54  6ED9               	movwf	fsr2l,c
 37364  01BC56  0E02               	movlw	high _tickCount
 37365  01BC58  20F4               	addwfc	prodh,w,c
 37366  01BC5A  6EDA               	movwf	fsr2h,c
 37367  01BC5C  50DE               	movf	postinc2,w,c
 37368  01BC5E  10DE               	iorwf	postinc2,w,c
 37369  01BC60  B4D8               	btfsc	status,2,c
 37370  01BC62  D00C               	goto	l10707
 37371                           
 37372                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 37373                           ;stkvar	_i @ sp[(-1)+0]
 37374  01BC64  0EFF               	movlw	-1
 37375  01BC66  50E3               	movf	plusw1,w,c
 37376  01BC68  0D02               	mullw	2
 37377  01BC6A  0E7D               	movlw	low _tickCount
 37378  01BC6C  24F3               	addwf	243,w,c
 37379  01BC6E  6ED9               	movwf	fsr2l,c
 37380  01BC70  0E02               	movlw	high _tickCount
 37381  01BC72  20F4               	addwfc	prodh,w,c
 37382  01BC74  6EDA               	movwf	fsr2h,c
 37383  01BC76  06DE               	decf	postinc2,f,c
 37384  01BC78  0E00               	movlw	0
 37385  01BC7A  5ADD               	subwfb	postdec2,f,c
 37386  01BC7C                     l10707:
 37387                           
 37388                           ;mcc_generated_files/tmr6.c: 207:  }
 37389                           ;stkvar	_i @ sp[(-1)+0]
 37390  01BC7C  0EFF               	movlw	-1
 37391  01BC7E  2AE3               	incf	plusw1,f,c
 37392                           
 37393                           ;stkvar	_i @ sp[(-1)+0]
 37394  01BC80  0EFF               	movlw	-1
 37395  01BC82  006F FF8C  F001    	movff	plusw1,btemp
 37396  01BC88  0E0C               	movlw	12
 37397  01BC8A  6401               	cpfsgt	btemp^0,c
 37398  01BC8C  D7DE               	goto	l10703
 37399                           
 37400                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37401  01BC8E  52E5               	movf	postdec1,f,c
 37402  01BC90  0012               	return		;funcret
 37403  01BC92                     __end_of_TMR6_DefaultInterruptHandler:
 37404                           	opt callstack 0
 37405                           
 37406 ;; *************** function _DMA1_DMASCNT_ISR *****************
 37407 ;; Defined at:
 37408 ;;		line 126 in file "mcc_generated_files/dma1.c"
 37409 ;; Parameters:    Size  Location     Type
 37410 ;;		None
 37411 ;; Auto vars:     Size  Location     Type
 37412 ;;		None
 37413 ;; Return value:  Size  Location     Type
 37414 ;;                  1    wreg      void 
 37415 ;; Registers used:
 37416 ;;		None
 37417 ;; Tracked objects:
 37418 ;;		On entry : 0/0
 37419 ;;		On exit  : 3F/1
 37420 ;;		Unchanged: 0/0
 37421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37426 ;;Total ram usage:        0 bytes
 37427 ;; Hardware stack levels used:    1
 37428 ;; This function calls:
 37429 ;;		Nothing
 37430 ;; This function is called by:
 37431 ;;		Interrupt level 2
 37432 ;; This function uses a non-reentrant model
 37433 ;;
 37434                           
 37435                           	psect	text183
 37436  01CA10                     __ptext183:
 37437                           	opt callstack 0
 37438  01CA10                     _DMA1_DMASCNT_ISR:
 37439                           	opt callstack 4
 37440                           
 37441                           ;incstack = 0
 37442  01CA10  EE14  F15E         	lfsr	1,___inthi_sp
 37443                           
 37444                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 37445  01CA14  0139               	movlb	57	; () banked
 37446  01CA16  91A2               	bcf	162,0,b	;volatile
 37447                           
 37448                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 37449  01CA18  0101               	movlb	1	; () banked
 37450  01CA1A  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 37451                           
 37452                           ; BSR set to: 1
 37453  01CA1C  0011               	retfie		f
 37454  01CA1E                     __end_of_DMA1_DMASCNT_ISR:
 37455                           	opt callstack 0
 37456                           
 37457 ;; *************** function _DMA1_DMADCNT_ISR *****************
 37458 ;; Defined at:
 37459 ;;		line 133 in file "mcc_generated_files/dma1.c"
 37460 ;; Parameters:    Size  Location     Type
 37461 ;;		None
 37462 ;; Auto vars:     Size  Location     Type
 37463 ;;		None
 37464 ;; Return value:  Size  Location     Type
 37465 ;;                  1    wreg      void 
 37466 ;; Registers used:
 37467 ;;		None
 37468 ;; Tracked objects:
 37469 ;;		On entry : 0/0
 37470 ;;		On exit  : 3F/39
 37471 ;;		Unchanged: 0/0
 37472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37477 ;;Total ram usage:        0 bytes
 37478 ;; Hardware stack levels used:    1
 37479 ;; This function calls:
 37480 ;;		Nothing
 37481 ;; This function is called by:
 37482 ;;		Interrupt level 2
 37483 ;; This function uses a non-reentrant model
 37484 ;;
 37485                           
 37486                           	psect	text184
 37487  01CA34                     __ptext184:
 37488                           	opt callstack 0
 37489  01CA34                     _DMA1_DMADCNT_ISR:
 37490                           	opt callstack 4
 37491                           
 37492                           ; BSR set to: 1
 37493                           ;incstack = 0
 37494  01CA34  EE14  F15E         	lfsr	1,___inthi_sp
 37495                           
 37496                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 37497  01CA38  0139               	movlb	57	; () banked
 37498  01CA3A  93A2               	bcf	162,1,b	;volatile
 37499                           
 37500                           ; BSR set to: 57
 37501  01CA3C  0011               	retfie		f
 37502  01CA3E                     __end_of_DMA1_DMADCNT_ISR:
 37503                           	opt callstack 0
 37504                           
 37505 ;; *************** function _DMA1_DMAA_ISR *****************
 37506 ;; Defined at:
 37507 ;;		line 143 in file "mcc_generated_files/dma1.c"
 37508 ;; Parameters:    Size  Location     Type
 37509 ;;		None
 37510 ;; Auto vars:     Size  Location     Type
 37511 ;;		None
 37512 ;; Return value:  Size  Location     Type
 37513 ;;                  1    wreg      void 
 37514 ;; Registers used:
 37515 ;;		None
 37516 ;; Tracked objects:
 37517 ;;		On entry : 0/0
 37518 ;;		On exit  : 3F/39
 37519 ;;		Unchanged: 0/0
 37520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37525 ;;Total ram usage:        0 bytes
 37526 ;; Hardware stack levels used:    1
 37527 ;; This function calls:
 37528 ;;		Nothing
 37529 ;; This function is called by:
 37530 ;;		Interrupt level 2
 37531 ;; This function uses a non-reentrant model
 37532 ;;
 37533                           
 37534                           	psect	text185
 37535  01CA40                     __ptext185:
 37536                           	opt callstack 0
 37537  01CA40                     _DMA1_DMAA_ISR:
 37538                           	opt callstack 4
 37539                           
 37540                           ; BSR set to: 57
 37541                           ;incstack = 0
 37542  01CA40  EE14  F15E         	lfsr	1,___inthi_sp
 37543                           
 37544                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 37545  01CA44  0139               	movlb	57	; () banked
 37546  01CA46  97A2               	bcf	162,3,b	;volatile
 37547                           
 37548                           ; BSR set to: 57
 37549  01CA48  0011               	retfie		f
 37550  01CA4A                     __end_of_DMA1_DMAA_ISR:
 37551                           	opt callstack 0
 37552                           
 37553 ;; *************** function _DMA1_DMAOR_ISR *****************
 37554 ;; Defined at:
 37555 ;;		line 154 in file "mcc_generated_files/dma1.c"
 37556 ;; Parameters:    Size  Location     Type
 37557 ;;		None
 37558 ;; Auto vars:     Size  Location     Type
 37559 ;;		None
 37560 ;; Return value:  Size  Location     Type
 37561 ;;                  1    wreg      void 
 37562 ;; Registers used:
 37563 ;;		None
 37564 ;; Tracked objects:
 37565 ;;		On entry : 0/0
 37566 ;;		On exit  : 3F/39
 37567 ;;		Unchanged: 0/0
 37568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37573 ;;Total ram usage:        0 bytes
 37574 ;; Hardware stack levels used:    1
 37575 ;; This function calls:
 37576 ;;		Nothing
 37577 ;; This function is called by:
 37578 ;;		Interrupt level 2
 37579 ;; This function uses a non-reentrant model
 37580 ;;
 37581                           
 37582                           	psect	text186
 37583  01CA4C                     __ptext186:
 37584                           	opt callstack 0
 37585  01CA4C                     _DMA1_DMAOR_ISR:
 37586                           	opt callstack 4
 37587                           
 37588                           ; BSR set to: 57
 37589                           ;incstack = 0
 37590  01CA4C  EE14  F15E         	lfsr	1,___inthi_sp
 37591                           
 37592                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 37593  01CA50  0139               	movlb	57	; () banked
 37594  01CA52  95A2               	bcf	162,2,b	;volatile
 37595                           
 37596                           ; BSR set to: 57
 37597  01CA54  0011               	retfie		f
 37598  01CA56                     __end_of_DMA1_DMAOR_ISR:
 37599                           	opt callstack 0
 37600                           
 37601                           ;
 37602                           ; Interrupt Vector Table @ 0x8
 37603                           ;
 37604                           
 37605                           	psect	ivt0x8
 37606  000008                     __pivt0x8:
 37607                           	opt callstack 0
 37608  000008                     ivt0x8_base:
 37609                           	opt callstack 0
 37610                           
 37611                           ; Vector 0 : SWINT
 37612  000008  72A6               	dw	_Default_ISR shr (0+2)
 37613                           
 37614                           ; Vector 1 : HLVD
 37615  00000A  72A6               	dw	_Default_ISR shr (0+2)
 37616                           
 37617                           ; Vector 2 : OSF
 37618  00000C  72A6               	dw	_Default_ISR shr (0+2)
 37619                           
 37620                           ; Vector 3 : CSW
 37621  00000E  72A6               	dw	_Default_ISR shr (0+2)
 37622                           
 37623                           ; Vector 4 : NVM
 37624  000010  72A6               	dw	_Default_ISR shr (0+2)
 37625                           
 37626                           ; Vector 5 : SCAN
 37627  000012  72A6               	dw	_Default_ISR shr (0+2)
 37628                           
 37629                           ; Vector 6 : CRC
 37630  000014  72A6               	dw	_Default_ISR shr (0+2)
 37631                           
 37632                           ; Vector 7 : IOC
 37633  000016  72A6               	dw	_Default_ISR shr (0+2)
 37634                           
 37635                           ; Vector 8 : INT0
 37636  000018  7280               	dw	_INT0_ISR shr (0+2)
 37637                           
 37638                           ; Vector 9 : ZCD
 37639  00001A  72A6               	dw	_Default_ISR shr (0+2)
 37640                           
 37641                           ; Vector 10 : AD
 37642  00001C  70F6               	dw	_ADCC_ISR shr (0+2)
 37643                           
 37644                           ; Vector 11 : ADT
 37645  00001E  6DF5               	dw	_ADCC_ThresholdISR shr (0+2)
 37646                           
 37647                           ; Vector 12 : CMP1
 37648  000020  72A6               	dw	_Default_ISR shr (0+2)
 37649                           
 37650                           ; Vector 13 : SMT1
 37651  000022  72A6               	dw	_Default_ISR shr (0+2)
 37652                           
 37653                           ; Vector 14 : SMT1PRA
 37654  000024  72A6               	dw	_Default_ISR shr (0+2)
 37655                           
 37656                           ; Vector 15 : SMT1PRW
 37657  000026  72A6               	dw	_Default_ISR shr (0+2)
 37658                           
 37659                           ; Vector 16 : DMA1SCNT
 37660  000028  7284               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 37661                           
 37662                           ; Vector 17 : DMA1DCNT
 37663  00002A  728D               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 37664                           
 37665                           ; Vector 18 : DMA1OR
 37666  00002C  7293               	dw	_DMA1_DMAOR_ISR shr (0+2)
 37667                           
 37668                           ; Vector 19 : DMA1A
 37669  00002E  7290               	dw	_DMA1_DMAA_ISR shr (0+2)
 37670                           
 37671                           ; Vector 20 : SPI1RX
 37672  000030  72A6               	dw	_Default_ISR shr (0+2)
 37673                           
 37674                           ; Vector 21 : SPI1TX
 37675  000032  72A6               	dw	_Default_ISR shr (0+2)
 37676                           
 37677                           ; Vector 22 : SPI1
 37678  000034  72A6               	dw	_Default_ISR shr (0+2)
 37679                           
 37680                           ; Vector 23 : I2C1RX
 37681  000036  72A6               	dw	_Default_ISR shr (0+2)
 37682                           
 37683                           ; Vector 24 : I2C1TX
 37684  000038  72A6               	dw	_Default_ISR shr (0+2)
 37685                           
 37686                           ; Vector 25 : I2C1
 37687  00003A  72A6               	dw	_Default_ISR shr (0+2)
 37688                           
 37689                           ; Vector 26 : I2C1E
 37690  00003C  72A6               	dw	_Default_ISR shr (0+2)
 37691                           
 37692                           ; Vector 27 : U1RX
 37693  00003E  718F               	dw	_UART1_rx_vect_isr shr (0+2)
 37694                           
 37695                           ; Vector 28 : U1TX
 37696  000040  72A6               	dw	_Default_ISR shr (0+2)
 37697                           
 37698                           ; Vector 29 : U1E
 37699  000042  72A6               	dw	_Default_ISR shr (0+2)
 37700                           
 37701                           ; Vector 30 : U1
 37702  000044  72A6               	dw	_Default_ISR shr (0+2)
 37703                           
 37704                           ; Vector 31 : TMR0
 37705  000046  72A6               	dw	_Default_ISR shr (0+2)
 37706                           
 37707                           ; Vector 32 : TMR1
 37708  000048  72A6               	dw	_Default_ISR shr (0+2)
 37709                           
 37710                           ; Vector 33 : TMR1G
 37711  00004A  72A6               	dw	_Default_ISR shr (0+2)
 37712                           
 37713                           ; Vector 34 : TMR2
 37714  00004C  72A6               	dw	_Default_ISR shr (0+2)
 37715                           
 37716                           ; Vector 35 : CCP1
 37717  00004E  72A6               	dw	_Default_ISR shr (0+2)
 37718                           
 37719                           ; Vector 36 : Undefined
 37720  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 37721                           
 37722                           ; Vector 37 : NCO1
 37723  000052  72A6               	dw	_Default_ISR shr (0+2)
 37724                           
 37725                           ; Vector 38 : CWG1
 37726  000054  72A6               	dw	_Default_ISR shr (0+2)
 37727                           
 37728                           ; Vector 39 : CLC1
 37729  000056  72A6               	dw	_Default_ISR shr (0+2)
 37730                           
 37731                           ; Vector 40 : INT1
 37732  000058  7026               	dw	_INT1_ISR shr (0+2)
 37733                           
 37734                           ; Vector 41 : CMP2
 37735  00005A  72A6               	dw	_Default_ISR shr (0+2)
 37736                           
 37737                           ; Vector 42 : DMA2SCNT
 37738  00005C  72A6               	dw	_Default_ISR shr (0+2)
 37739                           
 37740                           ; Vector 43 : DMA2DCNT
 37741  00005E  72A6               	dw	_Default_ISR shr (0+2)
 37742                           
 37743                           ; Vector 44 : DMA2OR
 37744  000060  72A6               	dw	_Default_ISR shr (0+2)
 37745                           
 37746                           ; Vector 45 : DMA2A
 37747  000062  72A6               	dw	_Default_ISR shr (0+2)
 37748                           
 37749                           ; Vector 46 : I2C2RX
 37750  000064  72A6               	dw	_Default_ISR shr (0+2)
 37751                           
 37752                           ; Vector 47 : I2C2TX
 37753  000066  72A6               	dw	_Default_ISR shr (0+2)
 37754                           
 37755                           ; Vector 48 : I2C2
 37756  000068  72A6               	dw	_Default_ISR shr (0+2)
 37757                           
 37758                           ; Vector 49 : I2C2E
 37759  00006A  72A6               	dw	_Default_ISR shr (0+2)
 37760                           
 37761                           ; Vector 50 : U2RX
 37762  00006C  71A3               	dw	_UART2_rx_vect_isr shr (0+2)
 37763                           
 37764                           ; Vector 51 : U2TX
 37765  00006E  7199               	dw	_UART2_tx_vect_isr shr (0+2)
 37766                           
 37767                           ; Vector 52 : U2E
 37768  000070  72A6               	dw	_Default_ISR shr (0+2)
 37769                           
 37770                           ; Vector 53 : U2
 37771  000072  72A6               	dw	_Default_ISR shr (0+2)
 37772                           
 37773                           ; Vector 54 : TMR3
 37774  000074  6592               	dw	_TMR3_ISR shr (0+2)
 37775                           
 37776                           ; Vector 55 : TMR3G
 37777  000076  72A6               	dw	_Default_ISR shr (0+2)
 37778                           
 37779                           ; Vector 56 : TMR4
 37780  000078  72A6               	dw	_Default_ISR shr (0+2)
 37781                           
 37782                           ; Vector 57 : CCP2
 37783  00007A  72A6               	dw	_Default_ISR shr (0+2)
 37784                           
 37785                           ; Vector 58 : Undefined
 37786  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 37787                           
 37788                           ; Vector 59 : CWG2
 37789  00007E  72A6               	dw	_Default_ISR shr (0+2)
 37790                           
 37791                           ; Vector 60 : CLC2
 37792  000080  72A6               	dw	_Default_ISR shr (0+2)
 37793                           
 37794                           ; Vector 61 : INT2
 37795  000082  72A6               	dw	_Default_ISR shr (0+2)
 37796                           
 37797                           ; Vector 62 : Undefined
 37798  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 37799                           
 37800                           ; Vector 63 : Undefined
 37801  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 37802                           
 37803                           ; Vector 64 : Undefined
 37804  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 37805                           
 37806                           ; Vector 65 : Undefined
 37807  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 37808                           
 37809                           ; Vector 66 : Undefined
 37810  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 37811                           
 37812                           ; Vector 67 : Undefined
 37813  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 37814                           
 37815                           ; Vector 68 : Undefined
 37816  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 37817                           
 37818                           ; Vector 69 : Undefined
 37819  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 37820                           
 37821                           ; Vector 70 : TMR5
 37822  000094  6991               	dw	_TMR5_ISR shr (0+2)
 37823                           
 37824                           ; Vector 71 : TMR5G
 37825  000096  72A6               	dw	_Default_ISR shr (0+2)
 37826                           
 37827                           ; Vector 72 : TMR6
 37828  000098  7239               	dw	_TMR6_ISR shr (0+2)
 37829                           
 37830                           ; Vector 73 : CCP3
 37831  00009A  72A6               	dw	_Default_ISR shr (0+2)
 37832                           
 37833                           ; Vector 74 : CWG3
 37834  00009C  72A6               	dw	_Default_ISR shr (0+2)
 37835                           
 37836                           ; Vector 75 : CLC3
 37837  00009E  72A6               	dw	_Default_ISR shr (0+2)
 37838                           
 37839                           ; Vector 76 : Undefined
 37840  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 37841                           
 37842                           ; Vector 77 : Undefined
 37843  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 37844                           
 37845                           ; Vector 78 : Undefined
 37846  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 37847                           
 37848                           ; Vector 79 : Undefined
 37849  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 37850                           
 37851                           ; Vector 80 : CCP4
 37852  0000A8  72A6               	dw	_Default_ISR shr (0+2)
 37853                           
 37854                           ; Vector 81 : CLC4
 37855  0000AA  72A6               	dw	_Default_ISR shr (0+2)
 37856  0000AC                     ivt0x8_undefint:
 37857                           	opt callstack 0
 37858  0000AC  00FF               	reset	
 37859                           
 37860                           	psect	text187
 37861  000000                     __ptext187:
 37862                           	opt callstack 0
 37863                           
 37864                           	psect	rparam
 37865  0000                     
 37866                           	psect	temp
 37867  000001                     btemp:
 37868                           	opt callstack 0
 37869  000001                     	ds	32
 37870  0000                     wtemp0	set	btemp
 37871  0000                     wtemp1	set	btemp+2
 37872  0000                     wtemp2	set	btemp+4
 37873  0000                     wtemp3	set	btemp+6
 37874  0000                     wtemp4	set	btemp+8
 37875  0000                     wtemp5	set	btemp+10
 37876  0000                     wtemp8	set	btemp+1
 37877  0000                     ttemp0	set	btemp
 37878  0000                     ttemp1	set	btemp+3
 37879  0000                     ttemp2	set	btemp+6
 37880  0000                     ttemp3	set	btemp+9
 37881  0000                     ttemp5	set	btemp+1
 37882  0000                     ttemp6	set	btemp+4
 37883  0000                     ttemp7	set	btemp+8
 37884  0000                     ltemp0	set	btemp
 37885  0000                     ltemp1	set	btemp+4
 37886  0000                     ltemp2	set	btemp+8
 37887  0000                     lltemp0	set	btemp
 37888  0000                     lltemp1	set	btemp+8
 37889  0000                     lltemp2	set	btemp+16
 37890  0000                     lltemp3	set	btemp+24
 37891                           tosu	equ	0x3FFF
 37892                           tosh	equ	0x3FFE
 37893                           tosl	equ	0x3FFD
 37894                           stkptr	equ	0x3FFC
 37895                           pclatu	equ	0x3FFB
 37896                           pclath	equ	0x3FFA
 37897                           pcl	equ	0x3FF9
 37898                           tblptru	equ	0x3FF8
 37899                           tblptrh	equ	0x3FF7
 37900                           tblptrl	equ	0x3FF6
 37901                           tablat	equ	0x3FF5
 37902                           prodh	equ	0x3FF4
 37903                           prodl	equ	0x3FF3
 37904                           indf0	equ	0x3FEF
 37905                           postinc0	equ	0x3FEE
 37906                           postdec0	equ	0x3FED
 37907                           preinc0	equ	0x3FEC
 37908                           plusw0	equ	0x3FEB
 37909                           fsr0h	equ	0x3FEA
 37910                           fsr0l	equ	0x3FE9
 37911                           wreg	equ	0x3FE8
 37912                           indf1	equ	0x3FE7
 37913                           postinc1	equ	0x3FE6
 37914                           postdec1	equ	0x3FE5
 37915                           preinc1	equ	0x3FE4
 37916                           plusw1	equ	0x3FE3
 37917                           fsr1h	equ	0x3FE2
 37918                           fsr1l	equ	0x3FE1
 37919                           bsr	equ	0x3FE0
 37920                           indf2	equ	0x3FDF
 37921                           postinc2	equ	0x3FDE
 37922                           postdec2	equ	0x3FDD
 37923                           preinc2	equ	0x3FDC
 37924                           plusw2	equ	0x3FDB
 37925                           fsr2h	equ	0x3FDA
 37926                           fsr2l	equ	0x3FD9
 37927                           status	equ	0x3FD8


Data Sizes:
    Strings     1222
    Constant    492
    Data        1073
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     254
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_112(CODE[1]), STR_74(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_109(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), STR_95(CODE[3]), 
		 -> STR_90(CODE[3]), STR_86(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_109(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), STR_95(CODE[3]), 
		 -> STR_90(CODE[3]), STR_86(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[19]), STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), 
		 -> STR_67(CODE[19]), STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), 
		 -> STR_63(CODE[15]), STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[19]), STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), 
		 -> STR_67(CODE[19]), STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), 
		 -> STR_63(CODE[15]), STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_57(CODE[9]), STR_56(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_57(CODE[9]), STR_56(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_81(CODE[4]), STR_80(CODE[4]), STR_77(CODE[4]), STR_76(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_81(CODE[4]), STR_80(CODE[4]), STR_77(CODE[4]), STR_76(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_55(CODE[3]), STR_54(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), 
		 -> STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6492_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_57(CODE[9]), STR_56(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_57(CODE[9]), STR_56(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_57(CODE[9]), 
		 -> STR_56(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S4896tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_57(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_56(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  596721
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   1     1      0  124997
                             _WaitMs
                   _cal_current_zero
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     4      1     266
                        _check_range
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
       _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46F      58        0.0%
DATA                 0      0     97C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb  7 00:47:54 2020

                     _SPI1_Exchange8bit C832                __end_of_set_display_info C8AA  
                                     _C 06FF                                       _D 082A  
                                     _H 01C7                                       _P 01F2  
                                     _R 00AF                                       _S 0254  
                                     _T FA1D                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C572            __end_of_start_switch_handler C812  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FB25                  __end_of_FVR_Initialize CA7E  
                        _check_day_time 8D36                             __CFG_LVP$ON 000000  
                                   l169 C96A                                     l807 C840  
                                   l673 C42A                                     _GIE 01FE97  
                                   _abs BE46                                     _pad A134  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C916  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C744  
                     _update_adc_result C0D6                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C6D8  
                          __CFG_ZCD$OFF 000000                                    l1002 C052  
                                  l2005 8ECC                                    l2200 747A  
                                  l2009 8EC4                                    l1190 C092  
                                  l1336 12A2                                    l1353 194E  
                                  l2154 3AEE                                    l1610 AF58  
                                  l2315 123A                                    l2075 9CAC  
                                  l1363 19F2                                    l1355 1952  
                       _timer3ReloadVal 009E                                    l2084 875E  
                                  l3053 4E1C                                    l3205 BE86  
                                  l1373 1BF6                                    l2158 3E2C  
                                  l3134 4660                                    l1614 B272  
                                  l1374 1E1E                                    l2344 066A  
                                  l3065 4CAC                                    l3305 9EFA  
                                  l2433 616C                                    l1705 A354  
                                  l2418 6892                                    l1482 BAF6  
                                  l2259 A190                                    l1379 23E6  
                                  l3236 7C26                                    l1629 C1CE  
                                  l3174 8B70                                    l1910 AA66  
                                  l1398 7E9E                                    l2279 593A  
                                  l2359 0B1A                                    l3600 B40E  
                                  l1745 C8A6                                    l3098 5396  
                                  l2483 33C8                                    l1829 5856  
                                  l2813 94DA                                    l3197 9062  
                                  l2397 7568                    _ADCC_StartConversion C984  
                                  l1688 C12C                                    l1945 8D2C  
                                  l1697 8816                                    l1698 8972  
                                  l3572 853E                                    l1869 B610  
                                  l1885 AD4A                                    l2775 AB2A  
                                  l1992 A476                                    l2786 963C  
                                  l2779 9568                                    l3587 B492  
                                  l8031 B0F6                                    l9001 9446  
                                  l8211 4CCE                                    l8203 4C90  
                                  l9011 9488                                    l9003 9462  
                                  l8213 4CE0                                    l8029 B0D4  
                                  l8231 4D1A                                    l8143 4A28  
                                  l8063 4700                                    l8217 4CEC  
                                  l8145 4A3A                                    l8153 4A74  
                                  l8129 4996                                    l8081 47B0  
                                  l8057 46C0                                    l9009 9472  
                                  l9025 9240                                    l8243 4D78  
                                  l8227 4D14                                    l8171 4B10  
                                  l8139 4A08                                    l8091 4806  
                                  l8075 477E                                    l8067 4716  
                                  l8411 671E                                    l8253 4DA4  
                                  l8173 4B22                                    l8181 4B5E  
                                  l8149 4A44                                    l8093 4836  
                                  l8069 4746                                    l8341 BE76  
                                  l8421 6824                                    l8413 676E  
                                  l9037 9312                                    l8087 47F0  
                                  l8265 4DFC                                    l8257 4DBC  
                                  l8193 4C36                                    l8177 4B2C  
                                  l9073 BBE2                                    l8417 67B6  
                                  l9057 9B20                                    l9049 9A74  
                                  l8259 4DCC                                    l8195 4C5C  
                                  l8099 4858                                    l8515 827A  
                                  l8507 81CE                                    l8355 9000  
                                  l8701 3F0C                                    l8621 51D0  
                                  l8613 519E                                    l8605 5138  
                                  l8541 4EBC                                    l8461 77F2  
                                  l8365 905A                                    l8631 5212  
                                  l8607 514A                                    l8615 51A2  
                                  l8535 4E7C                                    l8455 779E  
                                  l8359 9004                                    l8383 B482  
                                  l8439 B3FE                                    l8641 525C  
                                  l8561 4F9A                                    l8545 4ED2  
                                  l8803 44E6                                    l8715 3FA4  
                                  l8627 51EC                                    l8555 4F5A  
                                  l8547 4F02                                    l8467 7838  
                                  l8813 455A                                    l8717 3FAA  
                                  l8709 3F64                                    l8661 5312  
                                  l8645 5262                                    l8573 501E  
                                  l8565 4FB0                                    l8397 6600  
                                  l8831 460E                                    l8823 45CA  
                                  l8727 3FFC                                    l8719 3FDA  
                                  l8655 52D6                                    l8567 4FE0  
                                  l8479 790A                                    l8903 A04E  
                                  l8833 4628                                    l8817 45A0  
                                  l8673 536A                                    l9705 83B0  
                                  l8691 3E96                                    l8675 537A  
                                  l8667 5342                                    l8587 5072  
                                  l8579 5058                                    l8499 8146  
                                  l8907 A066                                    l9707 841C  
                                  l8597 5102                                    l9653 79D6  
                                  l8853 97CE                                    l8925 A11A  
                                  l8917 A0E6                                    l8941 AB28  
                                  l8933 AAB2                                    l9671 7AB0  
                                  l9663 7A6C                                    l9655 79F8  
                                  l8785 4470                                    l8697 3ED6  
                                  l9673 7AD4                                    l8865 9804  
                                  l8937 AAF4                                    l8779 4454  
                                  l8699 3EDC                                    l8955 95B6  
                                  l9675 7B12                                    l8859 97E4  
                                  l8789 4496                                    l8949 9526  
                                  l9669 7A98                                    l8799 44E0  
                                  l8967 963A                                    l8959 9604  
                                  l9679 7B7A                                    l8887 98DE  
                                  l8879 98AA                                    l8975 BD44  
                                  STR_1 FEF5                                    STR_2 FEB6  
                                  l9689 7C16                                    l8985 93C4  
                                  STR_3 FFD2                                    STR_4 FE62  
                                  l9971 8A2C                                    l9963 89C0  
                                  l8899 A03C                                    STR_5 FE0E  
                                  STR_6 FE0E                                    l9973 8A3A  
                                  STR_7 FE0E                                    STR_8 FE4D  
                                  l9983 8A9C                                    l9975 8A50  
                                  STR_9 FC09                                    l9985 8ABA  
                                  l9977 8A6E                                    l9995 8AEE  
                                  l9987 8AD0                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 4D0C                                    u6110 C310  
                                  u6040 4D68                                    u6120 C312  
                                  _T6PR 003F93                                    u6220 BE5A  
                                  _PMD0 0039C0                                    u6045 4D58  
                                  _PMD1 0039C1                                    u6070 4D88  
                                  u6230 8F84                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u6400 66C4  
                                  u6320 B440                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u7130 44D8  
                                  u6330 B442                                    _PMD6 0039C6  
                                  u6235 8F7A                                    _PMD7 0039C7  
                                  u7060 3FEA                                    u6500 C370  
                                  u6420 679C                                    u6405 66BA  
                                  u6510 C372                                    u7310 A092  
                                  u6350 6598                                    u5640 B124  
                                  u6600 7942                                    u7240 9830  
                                  u6280 9052                                    u6360 65E4  
                                  u6425 6792                                    u7170 4534  
                                  u6530 7798                                    u7330 A106  
                                  u6290 9054                                    u6450 BF0A  
                                  u7075 417E                                    u6275 9034  
                                  u6355 658E                                    u7180 456E  
                                  u5900 4B54                                    u6620 7994  
                                  u7260 98CA                                    u6460 BF0C  
                                  u7085 4246                                    u7190 45B4  
                                  u5830 4A6C                                    u6550 77EE  
                                  u6710 82B2                                    u7430 BD40  
                                  u7510 9490                                    u5670 C340  
                                  u6470 B3BC                                    u7175 4524  
                                  u7095 440E                                    u5647 B116  
                                  u5840 4A8C                                    u5808 49DE  
                                  u7440 93A4                                    u5680 C342  
                                  u7600 9A6E                                    u6480 B3BE  
                                  u5905 4B44                                    u6561 77F8  
                                  u6385 661E                                    u6570 7832  
                                  u6730 8304                                    u6650 8140  
                                  u7370 AB24                                    u7530 94BA  
                                  u7450 93B8                                    u6386 6624  
                                  u7610 9AA0                                    u5835 4A5C  
                                  u6387 6632                                    u5940 4C7E  
                                  u5780 49BC                                    u6580 7864  
                                  u7460 93F2                                    u7445 939A  
                                  u7541 9200                                    u5790 49DC  
                                  u6910 5254                                    u6670 8196  
                                  u7550 923A                                    u7630 9B58  
                                  u5791 49D6                                    u6680 81C8  
                                  u7560 926C                                    u7465 93E8  
                                  u7650 BBBE                                    u6690 81FA  
                                  u5980 4CF2                                    u9404 56C2  
                                  u9324 53BC                                    u7660 BBDE  
                                  u7580 934A                                    u9405 56BC  
                                  u9325 53B6                                    u6950 52B0  
                                  u6870 51CA                                    u9430 56EC  
                                  u6960 52EA                                    u9280 8AE4  
                                  u9424 56E4                                    u9344 53EC  
                                  u9425 56DE                                    u9345 53E6  
                                  u6970 5326                                    u6955 52A0  
                                  u9364 540E                                    u9365 5408  
                                  u9605 BF46                                    u8830 844A  
                                  u9384 55F4                                    u8760 7A68  
                                  u9705 B8E6                                    u9385 55EE  
                                  u9706 B8E8                                    u9650 B4D0  
                                  _PLLR 01CEE0                                    u8780 7BC0  
                                  u8837 843C                                    u9830 8B90  
                                  u8790 7BC2                                    u8870 84E4  
                                  u9680 B8B2                                    u8880 8512  
                                  u8890 C792                                    u8875 84DE  
                                  u9755 C9B0                                    u9860 A9F2  
                                  u9756 C9B2                                    u8877 84D0  
                                  u9765 C9A0                                    u9766 C9A2  
                                  u8887 8504                                    u9880 AA3E  
                                  u9698 B8B4                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR C404  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FB35                                    _cp_l FB31  
                                  _atoi 79BC                                    _ctoa B30C  
                                  _main 1244                                    _dtoa 585C  
                                  _nanf B9D0                                    _seed 01F6  
                                  _prec 003C                                    _nout 009A  
                                  _spin FAAD                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 747E                                    btemp 0001  
                                  _utoa 684E                                    _xtoa 6128  
                __end_of_check_adc_scan CA66                           ___fpclassifyf 8ED6  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C850               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize BDFE             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr C63C  
                          ___param_bank 000000                  __end_of_check_day_time 8ED6  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR CA0E  
                      __end_of_INT1_ISR C0D6          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma AF60           __end_of_OSCILLATOR_Initialize C970  
                                 l10005 8B50                                   l10021 53D2  
                                 l10031 54F8                                   l10015 53A2  
                                 l10043 560C                                   l10035 55DA  
                                 l10061 5824                                   l10205 C1D8  
                                 l11007 9A20                                   l10055 5788  
                                 l10047 56A8                                   l11115 AB46  
                                 l10069 5836                                   l10317 B4D4  
                                 l10175 8E00                                   l10087 C4A2  
                                 l11119 ABC2                                   l11217 C03A  
                                 l11401 7214                                   l11235 C07A  
                                 l10187 8E72                                   l10259 C3BC  
                                 l13013 6498                                   l11413 7266  
                                 l10703 BC4A                                   l11191 C426  
                                 l13111 29C2                                   l13103 28D6  
                                 l11407 723E                                   l10297 BC1E  
                                 l11433 72E6                                   l11425 72C0  
                                 l11417 7272                                   l10707 BC7C  
                                 l11179 C7EC                                   l13203 31BE  
                                 l13115 2A16                                   l13051 2508  
                                 l12403 6F52                                   l11515 ABF4  
                                 l13053 2542                                   l13301 AF84  
                                 l11367 91CC                                   l12511 5992  
                                 l13223 3350                                   l13135 2C28  
                                 l13127 2B70                                   l13055 2558  
                                 l12423 7128                                   l12415 707A  
                                 l11519 AC32                                   l10823 AA44  
                                 l10903 C0F6                                   l11391 71D8  
                                 l11455 7440                                   l12441 A19A  
                                 l12521 5BA4                                   l13217 32F6  
                                 l13073 268A                                   l13233 3374  
                                 l12409 7010                                   l10809 A9F6  
                                 l11457 746A                                   l13403 357C  
                                 l11563 611A                                   l12371 9E10  
                                 l12435 A160                                   l12507 5974  
                                 l13227 3354                                   l13139 2C5C  
                                 l13075 26C4                                   l13251 B060  
                                 l13307 AF8C                                   l13331 A26C  
                                 l11387 71C2                                   l10861 C142  
                                 l12445 A1D6                                   l12541 5C56  
                                 l13093 283E                                   l13077 26DA  
                                 l13309 AFB8                                   l10765 A548  
                                 l11397 7208                                   l11389 71D2  
                                 PRLOCK 0039EF                                   l13415 36EA  
                                 l13407 35E8                                   l10791 8BDE  
                                 l10783 8BB2                                   l12383 B160  
                                 l12439 A188                                   l12455 A84E  
                                 l12703 0926                                   l12623 0396  
                                 l12607 02FC                                   l12615 032A  
                                 l13159 2DBC                                   l13271 AE36  
                                 l10759 A496                                   l10927 B5CE  
                                 l10951 9FC8                                   l13425 3916  
                                 l12449 A220                                   l12473 B32A  
                                 l12545 5C92                                   l12633 04D2  
                                 l13169 2E6A                                   l13273 AE78  
                                 l11691 B560                                   l13443 3B20  
                                 l13435 3A56                                   l13419 373E  
                                 l10795 8BF2                                   l12387 B19E  
                                 l12475 B356                                   l12803 0FD6  
                                 l12651 058E                                   l12627 0406  
                                 l12571 00F0                                   l13179 2F8C  
                                 l13371 9BE0                                   l10939 B5E6  
                                 l10947 9F66                                   l11685 B550  
                                 l13429 3990                                   l10981 9926  
                                 l12805 0FF0                                   l12741 0C32  
                                 l12725 0B12                                   l12717 0A48  
                                 l12645 0554                                   l12629 0470  
                                 l13189 3042                                   l13455 3E24  
                                 l13439 3AFE                                   l10983 9934  
                                 l10991 993C                                   l12815 1092  
                                 l12727 0B34                                   l12591 0216  
                                 l12559 00AC                                   l13295 AF64  
                                 l13551 7D06                                   l10993 996E  
                                 l10977 9910                                   l12841 119A  
                                 l12825 10E2                                   l12753 0CBA  
                                 l12761 0D24                                   l12665 05F6  
                                 l12657 0594                                   l12649 057C  
                                 l12593 022C                                   l12921 68DE  
                                 l12913 6882                                   l13297 AF6C  
                                 l13377 9C46                                   l13609 8728  
                                 l13721 12AA                                   l13395 34BC  
                                 l10979 9920                                   l13627 B6F4  
                                 l12499 592A                                   l12683 06B8  
                                 l12667 0602                                   l12579 0146  
                                 l12931 6AD4                                   l13299 AF76  
                                 l13555 7D1A                                   l13723 12BC  
                                 l13715 1284                                   l12693 077A  
                                 l12589 01EA                                   l12597 0258  
                                 l12861 74EA                                   l13653 87E6  
                                 l13573 7E0E                                   l13901 1B02  
                                 l13821 16DA                                   l13717 128C  
                                 l13399 3510                                   l10999 99A6  
                                 l12687 06F0                                   l13575 7E1C  
                                 l13583 855C                                   l12769 0D90  
                                 l12777 0EA2                                   l12881 75DA  
                                 l12953 615C                                   l13913 205A  
                                 l13833 17B4                                   l12891 7694  
                                 l13667 890E                                   l13851 1944  
                                 l12789 0F3A                                   l12885 760A  
                                 l12877 759E                                   l12973 6232  
                                 l12965 61D2                                   l13917 20BA  
                                 l12895 76C0                                   l12959 6196  
                                 l13599 8650                                   l13943 22BE  
                                 l13927 223C                                   l13871 19B8  
                                 l13775 1472                                   l13929 2268  
                                 l13857 1956                                   l12899 76FC  
                                 l13971 2360                                   l13955 2310  
                                 l13859 1984                                   l12989 6328  
                                 l12997 63AE                                   l13973 2378  
                                 l13965 234E                                   l13983 23BC  
                                 l13879 19DE                                   l13993 2412  
                                 l13889 1A02                                   l13979 2396  
                       __end_of___aodiv 79BC                            _Volts_to_SOC AB34  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4E26                                   _ADCLK 003EFF  
                       __end_of___aomod 8328                                   _ADPCH 003EF1  
                       __end_of___fldiv 53A0                                   _ADREF 003EFD  
                       __end_of___awdiv 98F8                         __end_of___flneg BD6E  
                                 STR_10 FCC4                                   STR_11 FDA0  
                                 STR_12 FE77                                   STR_21 FF83  
                                 STR_13 FE8C                                   STR_14 FF34  
                                 STR_30 FDCC                                   STR_22 FD8A  
                                 STR_15 FF1F                                   STR_23 FD74  
                                 STR_31 FCDA                                   STR_40 FDF8  
                                 STR_24 FD5E                                   STR_32 FCF0  
                                 STR_16 FCAE                                   STR_41 FDF8  
                                 STR_25 FD48                                   STR_33 FD06  
                                 STR_17 FBD5                           __CFG_WDTE$OFF 000000  
                                 STR_42 FDF8                                   STR_50 FEE0  
                                 STR_26 FD32                                   STR_34 FC52  
                                 STR_18 FBEF                                   STR_51 FF0A  
                                 STR_19 FF94                                   STR_43 FF0A  
                                 STR_27 FD1C                                   STR_35 FC97  
                                 STR_52 FE38                                   STR_60 FFBF  
                                 STR_44 FE23                                   STR_28 FDE2  
                                 STR_36 FBB8                         __end_of___awmod A134  
                                 STR_61 FFBF                                   STR_53 FECB  
                                 STR_45 FEA1                                   STR_29 FDB6  
                                 STR_37 FC3B                                   STR_54 FFFC  
                                 STR_62 FFA4                                   STR_46 FF49  
                                 STR_38 FC69                                   STR_63 FFA4  
                                 STR_47 FF49                                   STR_55 FFF9  
                                 STR_39 FC80                                   STR_48 FF0A  
                                 STR_64 FFA4                                   STR_80 FFDB  
                                 STR_56 FFB3                                   _ADRPT 003EEC  
                                 STR_81 FFE3                                   STR_57 FFC9  
                                 STR_49 FE38                                   STR_65 FC23  
                                 STR_74 FBB7                                   STR_90 FFF0  
                                 STR_58 FF5D                                   STR_59 FF5D  
                                 STR_67 FF70                                   STR_75 FB39  
                                 STR_84 FFEA                                   STR_76 FFD7  
                                 STR_93 FFED                                   STR_77 FFDF  
                                 STR_86 FFEA                                   STR_95 FFED  
                                 STR_88 FFF0                         __end_of___flmul 466A  
                                 STR_98 FFF3                         __end_of___flsub BED2  
                       __end_of___fltol 94E4                                   u10000 C7BA  
                                 u10006 C7BC                                   u12000 10B8  
                                 u11210 9E80                                   u12020 116E  
                                 u12100 7600                                   u12030 1170  
                                 u12110 7646                                   u11400 58FE  
                                 u11320 A8C8                                   u12200 6B2C  
                                 u12201 6B2A                                   u12210 6B40  
                       __end_of___lodiv 9372                                   u11420 5910  
                                 u12140 7722                                   u12220 6B44  
                                 u12117 7638                                   u11190 9E04  
                                 u11510 5C2C                                   u12310 62DE  
                                 u11270 719C                                   u11327 A8BA  
                                 u11440 5960                                   u12160 6868  
                                 u12320 62E0                                   u12240 6142  
                                 u13200 158C                                   u11450 5BB8  
                                 u11370 588C                                   _U1P1H 003DED  
                                 u11380 588E                                   u11700 0562  
                                 u11620 02A6                                   u12340 63AA  
                                 u12500 2724                                   u13140 895E  
                                 u13220 17E2                                   _U1P2H 003DEF  
                                 u11461 5BE8                                   u11470 5BFE  
                                 u11630 02A8                                   u11550 00DA  
                                 u12350 63CA                                   u12270 622A  
                                 u12510 274A                                   u13150 8960  
                                 u13230 190C                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u11471 5BFC  
                                 u12191 6B16                                   _T3CLK 003FA9  
                                 u11480 5C12                                   u12280 627E  
                                 u12440 25A0                                   u13240 190E  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u12361 63FA                                   u12345 638C  
                                 u11490 5C16                                   u11730 05C6  
                                 u12370 6410                                   u12290 6280  
                                 u12610 2D16                                   u12450 25A2  
                                 _U1P3L 003DF0                                   u12371 640E  
                                 u11580 0194                                   u12380 6424  
                                 u12700 3246                                   u12620 2D18  
                                 u12460 25C8                                   u11670 050E  
                                 u11590 0196                                   u12390 6428  
                                 _U2P1L 003DD4                                   u11840 0A18  
                                 u12560 292A                                   u12720 B040  
                                 u12800 9C22                                   u13360 22AE  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11770 0648                                   u12490 2722  
                                 u13370 22C6                                   _U2P3L 003DD8  
                                 u11940 0EE4                                   u12580 2A9E  
                                 u13380 22D8                                   u12830 9C88  
                                 u13366 22B0                                   _T5CLK 003F9D  
                                 u12680 3096                                   u13376 22C8  
                       __end_of___lomod 9B7A                                   u12818 9C24  
                                 u12770 9BBC                                   u13386 22DA  
                                 _T2HLT 003FAD                                   u12848 9C8A  
                                 _T5CON 003F9A                                   u12788 9BBE  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result C110                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR CA98  
               __size_of_clear_adc_scan 0006                      _current_sensor_cal 7C30  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 97AA  
                         __CFG_WRTC$OFF 000000                        _cal_current_zero A9AA  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A726  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR C8FE  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                                 _fabsf AD5C                                   _flags 003E  
                  __size_of_check_range 0080                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay CA00                                   _fputc 9DE0  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha BF16  
                                 _fputs B150                         __end_of_isdigit C37C  
                       __end_of_ivln2_h FB31                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand C1EC                                   _width 003A  
                                 _putch C8C8            __end_of_set_ac_charger_relay C9D6  
                       __end_of_islower C31C                         __end_of_isspace BBF2  
              _INT1_SetInterruptHandler C59A                         __end_of_set_dac AD5C  
                       __end_of_isupper C34C                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler C522  
           _UART1_SetRxInterruptHandler C4FA                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf A462                         __end_of_tolower B49C  
                       __end_of_strncmp 8548                         __end_of_toupper B418  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr C664  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize BDB6  
                 __end_of_ringBufS_init C482                         __initialization A726  
                     _UART2_rx_vect_isr C68C                            __end_of_cp_h FB39  
                          __end_of_cp_l FB35                            __end_of_atoi 7C30  
                          __end_of_ctoa B394                            __end_of_main 2426  
                          __end_of_dtoa 5CDC                            __end_of_nanf BA32  
                          __end_of_spin FB25                            __end_of_stoa 773C  
                          __end_of_utoa 6B8E                            __end_of_xtoa 64E2  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize C92E                   __end_of_send_lcd_data C6D8  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B6FE  
              _TMR5_SetInterruptHandler C54A                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 007C  
                     _port_data_dma_ptr CA28                      esr_check@esr_state 00A4  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize C430                         _PWM8_Initialize C944  
                      _UART1_Initialize BD6E                       _UART2_tx_vect_isr C664  
                    _UART2_Transmit_ISR C404                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan B90A                                  _ADLTHH 003EDF  
                                STR_100 FFF3                                  _ADLTHL 003EDE  
                                STR_103 FFF6                                  STR_105 FFF6  
                                STR_107 FFE7                                  STR_109 FFE7  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue BF16  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A6D6                                  _RB6PPS 003A0E  
                                i1l1207 9712                    _start_switch_handler C7F2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize BE46                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C9E4  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u951_20 8D8C                                  u946_25 C9D0  
                                u946_26 C9D2                    __size_of_hid_display 021C  
                                u974_20 C150                                  u974_26 C152  
                                u967_20 C9FC                        __end_of___xxtofl 8B7A  
 __end_of_ADCC_DischargeSampleCapacitor CA5E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor CA56                __end_of_send_lcd_cmd_dma C86E  
                       _TMR3_WriteTimer C058                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr C6B4              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize CA1E                        _UART2_Initialize BA32  
                                _WaitMs C1B6                         _conv_raw_result 53A0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 94E4                                  ___fleq AA70  
                     _ADCC_ThresholdISR B7D4                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush B1E8                                  _efgtoa 0000  
                                _floorf 64E2                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A8                       dac_spi_control@S2 00A7  
                     dac_spi_control@SB 00A5                       dac_spi_control@SC 00A6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6EBA  
                  __size_of_help_button 0038                                  clear_0 A798  
                                clear_1 A7AC                                  clear_2 A7BE  
                                clear_3 A7CA                                  clear_4 A7D6  
                                clear_5 A7E2                                  clear_6 A7EE  
             __end_of_port_data_dma_ptr CA32                                  _printf B96E  
                    _eaDogM_WriteString B008                                  _strcpy A806  
                             ?_ADCC_ISR 0021                                  _strlen B0AE  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize B768                          _PMD_Initialize C970  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr C68C  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan B96E  
                          __mediumconst F94C                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay BB46                        __end_of_spinners A558  
                      __end_of_vfprintf AEB6                              _StartTimer BFD8  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize BDFE                       _SYSTEM_Initialize BCDC  
                            __accesstop 0060                 __end_of__initialization A800  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help CA76                    __end_of_display_info CA6E  
             __end_of_CLKREF_Initialize CA28                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer C018  
                 _set_temp_display_help C9B6                        _clear_hid_pflags B83E  
                 __end_of_TMR3_CallBack C744               __end_of_ADCC_ThresholdISR B83E  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush B27A  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 C180  
                          __pidataBANK1 A8DA             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf AE0A                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 9F04  
                         __end_of_fputs B1E8                    _get_ac_charger_relay C9F2  
                         __end_of_srand C220                   __end_of_TMR5_CallBack C720  
                         __end_of_putch C8E2                    _set_ac_charger_relay C9C6  
               __end_of_PWM8_Initialize C95A                 __end_of_TMR6_Initialize C45A  
                     _adc_int_t_handler B51C                  __end_of_PMD_Initialize C984  
                            __end_of_bp FB2D                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack C78C             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR CA40                   TMR3_ISR@CountCallBack 009C  
                        _clear_adc_scan CA7E                      __size_of_hid_input 0138  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0091  
             __end_of_SYSTEM_Initialize BD26                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer C098  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 8764  
               __end_of_conv_raw_result 585C                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0097                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone C4AA  
                      _DMA1_DMADCNT_ISR CA34                         _convert_dac_raw 9F04  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma C2BC                   __end_of_wait_lcd_done C7AE  
              __end_of_cal_current_zero AA70        __end_of_TMR3_SetInterruptHandler C59A  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C54A  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B7D2  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B59A  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B68C  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C612   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C5EA                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C7D0                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan CA84  
                               u1001_28 9916                                 u1003_20 9930  
                               u1003_21 992A                                 u1007_24 9A16  
                               u1007_25 9A12                                 u1043_48 C778  
                               u1035_48 C754                                 u1300_28 C730  
                               u1037_28 C6E8                                 u1046_28 C70C  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR CA10  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               u1077_44 B580                                 u1077_45 B57A  
                               _U2ERRIR 003DE1                                 u1293_20 3A46  
                               u1295_20 3B10                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B59A                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3E40  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch C3AA  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer C058  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C9B6              __end_of_set_load_relay_two C9A6  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 906C                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C8FE                                 __Lparam 0000  
              __end_of_UART1_Initialize BDB6                       __end_of_hid_input 9CB2  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 773C  
                               ___fladd 466A                                 ___aomod 80E8  
                               ___fldiv 4E26                                 ___awdiv 97AA  
                               ___flneg BD26                                 ___awmod A01C  
                               ___flmul 3E40                                 ___flsub BE8C  
                               ___fltol 9372                                 ___lodiv 91F2  
                               ___lomod 9A3A               __end_of_UART1_Receive_ISR C7F2  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A642                                 __pcinit A726  
              __end_of_mode_lamp_bright C9F2                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C9D6  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 BA92                                 __ptext2 C7F2  
                               __ptext3 C1EC                                 __ptext4 C220  
                               __ptext5 C254                                 __ptext6 9F04  
                               __ptext7 ACA6                                 __ptext8 B59A  
                               __ptext9 C2BC                       __end_of_esr_check 747E  
                     _UART2_Receive_ISR C812                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C95A  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 80E8                                 _isalpha BED2  
                               us663999 79A6                                 _isdigit C34C  
                               _ivln2_h FB2D                                 us674999 8316  
                               us764999 9B6A                               _T3CONbits 003FA6  
                               us759999 935C                                 _mode_sw 00A9  
                     __end_of_lp_filter 8D36                                 _islower C2EC  
                               _isspace BBA0                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac ACA6  
              __end_of_UART2_Initialize BA92                                 _isupper C31C  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf A358  
                               _tolower B418                   __size_of_display_help 0008  
                               _utctime 01EE                 __end_of_convert_dac_raw A01C  
                 __size_of_display_info 0008                                 _strncmp 8328  
                               _toupper B394                    end_of_initialization A800  
             __size_of_convert_adc_data 00B8                      _check_enter_button B68C  
                     __end_of_set_dac_a C288                       __end_of_set_dac_b C254  
                             i1u1316_20 9708     __end_of_UART2_SetRxInterruptHandler C4FA  
           _UART2_SetRxInterruptHandler C4D2                               i2u1080_48 C3F0  
                             i2u1082_48 B80A                               i2u1082_49 B81E  
                             i2u1084_48 C650                 check_day_time@day_delay 0041  
                             i2u1086_48 C678                               i2u1088_48 C6A0  
                     __end_of_set_vterm C88C                       __end_of_vfpfcnvrt 33D2  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd CA90  
             __end_of_UART2_Receive_ISR C832                          wdtdelay@dcount 0078  
               __end_of_dac_spi_control B614             __size_of_current_sensor_cal 0272  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc CA96                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler C572                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler C522                            _display_help CA6E  
                 _TMR5_InterruptHandler 007F                            _display_info CA66  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B8A4  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler C63A  
           _ADCC_SetADIInterruptHandler C612                              _update_lcd A248  
                       _calc_model_data 5CDC                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc BA92  
                       _DMA1_Initialize B6FE                     __end_of_check_range B51C  
                            _start_bsoc C7AE                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C92E                   __end_of_get_vterm_ptr C3AA  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs C1EC            __end_of_INTERRUPT_Initialize B90A  
                            _vterm_dump 9CB2                          __end_of___flge 9646  
                        __end_of___fleq AB34    __end_of_INT0_DefaultInterruptHandler CAA4  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler CAA2  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize BB46  
                         __pidataBIGRAM 6B8E                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 684E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 71A6  
                        __end_of_printf B9D0                __end_of_DMA1_DMADCNT_ISR CA3E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C768  
                        __end_of_strcpy A8DA                          __end_of_strlen B150  
                   start_initialization A726    __end_of_TMR5_DefaultInterruptHandler C180  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler C148  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs BE8C  
                 __end_of_INT1_CallBack C6FC               __size_of_set_display_info 001E  
                           __end_of_pad A248                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BFD8                          _switch_handler 98F8  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 906C  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR CA1E  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR CA4C  
                   __end_of_hid_display 8764              __end_of_send_port_data_dma BC44  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone C482  
                         _ringBufS_init C45A                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize C2BC  
               __end_of_calc_model_data 6128                           _send_lcd_data C6B4  
                   __end_of_help_button C148         __end_of_eaDogM_WriteStringAtPos B008  
                   __end_of_BVSOC_TABLE FA1D                               ___asfladd B614  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B768                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A                             _check_range B49C  
      __end_of_INT0_SetInterruptHandler C5EA                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9A3A                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize C944                _UART1_RxInterruptHandler 008B  
              _UART2_TxInterruptHandler 008E                               __end_of_T FAAD  
                      _convert_adc_data ABEE                               _calc_bsoc 33D2  
             __size_of_ringBufS_put_dma 00AA                            _init_display A558  
                __end_of_DMA1_DMAOR_ISR CA56                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0082                      calc_ror_data@bcror 0068  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize BBA0  
                    calc_ror_data@bvror 006C                  _PIN_MANAGER_Initialize B27A  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set CA8A  
                         __pmediumconst F94C                               __ptext100 CA6E  
                             __ptext101 B68C                               __ptext110 5CDC  
                             __ptext102 906C                               __ptext111 CA90  
                             __ptext103 AD5C                               __ptext120 C4D2  
                             __ptext112 C7AE                               __ptext104 53A0  
                             __ptext121 BD6E                               __ptext113 8B7A  
                             __ptext105 B9D0                               __ptext130 C92E  
                             __ptext122 C4FA                               __ptext114 BE8C  
                             __ptext106 C8AA                               __ptext131 C944  
                             __ptext123 C430                               __ptext115 466A  
                             __ptext107 8976                               __ptext140 BB46  
                             __ptext132 C970                               __ptext124 C522  
                             __ptext116 3E40                               __ptext108 4E26  
                             __ptext141 B6FE                               __ptext133 B27A  
                             __ptext125 BDB6                               __ptext117 BCDC  
                             __ptext109 94E4                               __ptext150 A644  
                             __ptext142 CA1E                               __ptext134 C95A  
                             __ptext126 C54A                               __ptext118 BA32  
                             __ptext151 C018                               __ptext143 B768  
                             __ptext135 B8A4                               __ptext127 BDFE  
                             __ptext119 C4AA                               __ptext160 CAA0  
                             __ptext152 C6FC                               __ptext144 C5EA  
                             __ptext136 CA76                               __ptext128 C572  
                             __ptext161 33D2                               __ptext153 C148  
                             __ptext145 C612                               __ptext137 C288  
                             __ptext129 C916                               __ptext170 B51C  
                             __ptext162 BBF2                               __ptext154 8D36  
                             __ptext146 C098                               __ptext138 C59A  
                             __ptext171 CAA4                               __ptext163 CA28  
                             __ptext155 C9C6                               __ptext147 C6D8  
                             __ptext139 C5C2                               __ptext180 C8E4  
                             __ptext172 CAA6                               __ptext164 B614  
                             __ptext156 C9F2                               __ptext148 CA9E  
                             __ptext181 C768                               __ptext173 B7D4  
                             __ptext165 CA00                               __ptext157 9648  
                             __ptext149 98F8                               __ptext182 BC44  
                             __ptext174 C63C                               __ptext166 C744  
                             __ptext158 C058                               __ptext183 CA10  
                             __ptext175 C7D0                               __ptext167 CAA2  
                             __ptext159 C720                               __ptext184 CA34  
                             __ptext176 C664                               __ptext168 CA98  
                             __ptext185 CA40                               __ptext177 C404  
                             __ptext169 C3D8                               __ptext186 CA4C  
                             __ptext178 C68C                               __ptext187 0000  
                             __ptext179 C812                               _hid_input 9B7A  
                    __end_of_StartTimer C018                      _set_load_relay_one C9A6  
                    _set_load_relay_two C996                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR C3D8                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 71A6  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7EA2                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 8B7A  
                           _hid_display 8548                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B8A4  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR CA00  
                              _INT1_ISR C098                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a C254                               _set_dac_b C220  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack C720  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm C86E  
                   __size_of_update_lcd 0110                             _help_button C110  
                              _TMR3_ISR 9648                             _BVSOC_TABLE F94D  
                              _TMR5_ISR A644                                _TMR6_ISR C8E4  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 2426                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack C6FC  
                            _ADCON0bits 003EF8                      __end_of_check_help 8976  
                             _start_lcd CA8A                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack C768  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc CA90                        _set_display_info C88C  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A73A  
                             copy_data1 A760                               copy_data2 A782  
              _INT0_SetInterruptHandler C5C2                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler C4D2             _UART2_SetTxInterruptHandler C4AA  
                          _uart1RxCount 00AD                            _uart2RxCount 00AA  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 7EA2  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done C78C  
                          _send_lcd_cmd BF98                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler CAA6  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch C3D6                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR CA4A                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 8976                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand C9E4                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 A558                                __ptext11 C6B4  
                              __ptext20 71A6                                __ptext12 BF58  
                              __ptext21 C0D6                                __ptext13 BF98  
                              __ptext30 7C30                                __ptext22 B90A  
                              __ptext14 C832                                __ptext31 A462  
                              __ptext23 C984                                __ptext15 C45A  
                              __ptext40 C37C                                __ptext32 C3AA  
                              __ptext24 CA56                                __ptext16 7EA2  
                              __ptext41 C1B6                                __ptext33 A9AA  
                              __ptext25 CA7E                                __ptext17 AB34  
                              __ptext50 CA8A                                __ptext42 A248  
                              __ptext34 B49C                                __ptext26 CA5E  
                              __ptext18 8548                                __ptext51 B1E8  
                              __ptext43 AF60                                __ptext35 ABEE  
                              __ptext27 C996                                __ptext19 9B7A  
                              __ptext60 684E                                __ptext52 6EBA  
                              __ptext44 C850                                __ptext36 B83E  
                              __ptext28 C9A6                                __ptext61 9A3A  
                              __ptext53 B96E                                __ptext45 C78C  
                              __ptext37 8764                                __ptext29 C9D6  
                              __ptext70 8ED6                                __ptext62 91F2  
                              __ptext54 AE0A                                __ptext46 BAEC  
                              __ptext38 9CB2                                __ptext71 9372  
                              __ptext63 8328                                __ptext55 2426  
                              __ptext47 BC92                                __ptext39 A358  
                              __ptext80 B30C                                __ptext72 BD26  
                              __ptext64 747E                                __ptext56 6128  
                              __ptext48 B008                                __ptext81 A134  
                              __ptext73 AA70                                __ptext65 0000  
                              __ptext57 B394                                __ptext49 CA84  
                              __ptext90 C86E                                __ptext82 B0AE  
                              __ptext74 A01C                                __ptext66 B418  
                              __ptext58 C2EC                                __ptext91 C9B6  
                              __ptext83 B150                                __ptext75 97AA  
                              __ptext67 C31C                                __ptext59 BED2  
                              __ptext92 C88C                                __ptext84 9DE0  
                              __ptext76 585C                                __ptext68 A806  
                              __ptext93 C8FE                                __ptext85 C8C8  
                              __ptext77 BE46                                __ptext69 64E2  
                              __ptext94 C9E4                                __ptext86 AEB6  
                              __ptext78 80E8                                __ptext95 BF16  
                              __ptext87 79BC                                __ptext79 773C  
                              __ptext96 C110                                __ptext88 BBA0  
                              __ptext97 C482                                __ptext89 C34C  
                              __ptext98 BFD8                                __ptext99 CA66  
                      __size_of_isupper 0030                                us1205999 7490  
                              us1136999 5876                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1217999 68B4  
                              us1226999 61A8                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma AEB6  
                  __end_of_Volts_to_SOC ABEE                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11E2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma C2EC  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion C996  
                              _spi_link 01D0                                _wdtdelay BAEC  
            __end_of_UART2_Transmit_ISR C430                                _spinners A462  
                              _vfprintf AE0A                __end_of_convert_adc_data ACA6  
            __end_of_PWM8_LoadDutyValue BF58    __end_of_TMR3_DefaultInterruptHandler CAA2  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler CAA0  
  __end_of_INT1_DefaultInterruptHandler CAA0   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler CA9E                      _send_port_data_dma BBF2  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C8AA  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E4                             _uart2TxTail 0046  
             __size_of_cal_current_zero 00C6                            _wait_lcd_set CA84  
                    _EXT_INT_Initialize C288    __end_of_TMR6_DefaultInterruptHandler BC92  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler BC44  
                     _send_lcd_data_dma BC92    __end_of_ADCC_DefaultInterruptHandler CAA6  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler CAA4  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long BF58          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C9C6                   __end_of_calc_ror_data 91F2  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString B0AE  
                 __end_of_mode_lamp_dim C916                 __end_of_adc_int_handler CAA8  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A358  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc BAEC  
                    __end_of_start_bsoc C7D0                          _FVR_Initialize CA76  
                __end_of_get_raw_result C8C8                        _send_lcd_cmd_dma C850  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00A0  
      __end_of_INT1_SetInterruptHandler C5C2               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma BCDC  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long BF98  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR CA9E  
        __end_of_PIN_MANAGER_Initialize B30C               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9DE0                 _eaDogM_WriteStringAtPos AF60  
                         _get_vterm_ptr C37C                          _check_adc_scan CA5E  
             __size_of_UART2_Initialize 0060  
