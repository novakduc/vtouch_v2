

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 22:18:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text179,global,reloc=4,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=4,class=CODE,delta=1
   208                           	psect	text183,global,reloc=4,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=4,class=CODE,delta=1
   213                           	psect	text188,global,reloc=4,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=4,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=4,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=4,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=4,class=CODE,delta=1
   223                           	psect	text198,global,reloc=4,class=CODE,delta=1
   224                           	psect	text199,global,reloc=4,class=CODE,delta=1
   225                           	psect	text200,global,reloc=4,class=CODE,delta=1
   226                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	text201,global,reloc=4,class=CODE,delta=1
   229                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   230                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   231  0000                     
   232                           ; Version 2.10
   233                           ; Generated 31/07/2019 GMT
   234                           ; 
   235                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   236                           ; All rights reserved.
   237                           ; 
   238                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   239                           ; 
   240                           ; Redistribution and use in source and binary forms, with or without modification, are
   241                           ; permitted provided that the following conditions are met:
   242                           ; 
   243                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   244                           ;        conditions and the following disclaimer.
   245                           ; 
   246                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   247                           ;        of conditions and the following disclaimer in the documentation and/or other
   248                           ;        materials provided with the distribution.
   249                           ; 
   250                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   251                           ;        software without specific prior written permission.
   252                           ; 
   253                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   254                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   255                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   256                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   257                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   258                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   259                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   260                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   261                           ; 
   262                           ; 
   263                           ; Code-generator required, PIC18F57K42 Definitions
   264                           ; 
   265                           ; SFR Addresses
   266  0000                     
   267 ;;_main$4007	offset	0
   268 ;;_main$4003	offset	2
   269 ;;_esr_temp	offset	4
   270 ;;_i_esr	offset	8
   271 ;;_shape	offset	10
   272 ;;_inp_index	offset	11
   273 ;;_k	offset	12
   274 ;;_j	offset	13
   275 ;;_i	offset	14
   276 ;;_mode	offset	15
   277 ;;_i_ror	offset	16
   278 ;;_mode	offset=-1 (param)
   279 ;;_hist	offset=-3 (param)
   280 ;;_s	offset=-2 (param)
   281 ;;_voltage	offset=-4 (param)
   282 ;;_voltage	offset=-4 (param)
   283 ;;_voltage	offset=-4 (param)
   284 ;;_set	offset=-1 (param)
   285 ;;_x	offset	0
   286 ;;_r_cal_ptr	offset	2
   287 ;;_y	offset	4
   288 ;;_crcVal_save	offset	6
   289 ;;_bAdd	offset=-2 (param)
   290 ;;_data	offset=-1 (param)
   291 ;;_cmd	offset=-1 (param)
   292 ;;_cmd	offset=-1 (param)
   293 ;;_data	offset=-1 (param)
   294 ;;__this	offset=-2 (param)
   295 ;;_soc	offset	0
   296 ;;_slot	offset	2
   297 ;;_cvoltage	offset=-4 (param)
   298 ;;_h	offset=-1 (param)
   299 ;;_h	offset=-1 (param)
   300 ;;_fsm	offset=-1 (param)
   301 ;;_mode	offset=-1 (param)
   302 ;;_mode	offset=-1 (param)
   303 ;;_cmd	offset=-1 (param)
   304 ;;_cp	offset	0
   305 ;;_cb	offset	4
   306 ;;_cpz	offset	8
   307 ;;_cbz	offset	12
   308 ;;_x	offset	16
   309 ;;_x	offset	0
   310 ;;_r_cal_ptr	offset	2
   311 ;;_y	offset	4
   312 ;;_crcVal	offset	6
   313 ;;_GIEBitValue	offset	0
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_bData	offset=-3 (param)
   316 ;;_result	offset	0
   317 ;;_mask	offset	2
   318 ;;_reverse	offset=-1 (param)
   319 ;;_xorValue	offset=-3 (param)
   320 ;;_mask	offset	0
   321 ;;_reverse	offset	2
   322 ;;_crc	offset=-2 (param)
   323 ;;_data	offset=-1 (param)
   324 ;;_channel	offset=-1 (param)
   325 ;;_c	offset	0
   326 ;;_shape	offset=-1 (param)
   327 ;;_reset	offset=-2 (param)
   328 ;;_i	offset=-1 (param)
   329 ;;_i	offset=-1 (param)
   330 ;;_mode	offset=-1 (param)
   331 ;;_cb	offset=-3 (param)
   332 ;;_cp	offset=-5 (param)
   333 ;;_mode	offset=-1 (param)
   334 ;;_cb	offset=-3 (param)
   335 ;;_cp	offset=-5 (param)
   336 ;;_scaleb	offset=-9 (param)
   337 ;;_scalep	offset=-13 (param)
   338 ;;_value	offset=-2 (param)
   339 ;;_window	offset=-4 (param)
   340 ;;_standard	offset=-6 (param)
   341 ;;_i	offset	0
   342 ;;_h	offset=-1 (param)
   343 ;;_flipper	offset=-1 (param)
   344 ;;_f	offset	0
   345 ;;_ap	offset	6
   346 ;;_s	offset=-3 (param)
   347 ;;_fmt	offset=-5 (param)
   348 ;;_line	offset=-1 (param)
   349 ;;_vterm	offset=-2 (param)
   350 ;;_numMilliseconds	offset=-2 (param)
   351 ;;_vterm	offset=-1 (param)
   352 ;;_row	offset	0
   353 ;;_r	offset=-1 (param)
   354 ;;_c	offset=-2 (param)
   355 ;;_strPtr	offset=-4 (param)
   356 ;;_strPtr	offset=-1 (param)
   357 ;;_delay	offset=-4 (param)
   358 ;;_strPtr	offset=-1 (param)
   359 ;;_strPtr	offset=-2 (param)
   360 ;;__this	offset=-2 (param)
   361 ;;_clearBuffer	offset=-3 (param)
   362 ;;_s	offset	0
   363 ;;_k	offset	2
   364 ;;_dest	offset=-2 (param)
   365 ;;_c	offset=-4 (param)
   366 ;;_n	offset=-6 (param)
   367 ;;_ap	offset	0
   368 ;;_fmt	offset=-3 (param)
   369 ;;_cfmt	offset	0
   370 ;;_fp	offset=-2 (param)
   371 ;;_fmt	offset=-4 (param)
   372 ;;_ap	offset=-6 (param)
   373 ;;_vfpfcnvrt$6839	offset	0
   374 ;;_vfpfcnvrt$6850	offset	2
   375 ;;_vfpfcnvrt$6838	offset	4
   376 ;;_llu	offset	6
   377 ;;_ll	offset	14
   378 ;;_f	offset	22
   379 ;;_ct	offset	26
   380 ;;_cp	offset	29
   381 ;;_c	offset	31
   382 ;;_fp	offset=-2 (param)
   383 ;;_fmt	offset=-4 (param)
   384 ;;_ap	offset=-6 (param)
   385 ;;_xtoa$6824	offset	0
   386 ;;_xtoa$6823	offset	2
   387 ;;_n	offset	4
   388 ;;_c	offset	12
   389 ;;_i	offset	14
   390 ;;_w	offset	16
   391 ;;_p	offset	18
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_x	offset=-11 (param)
   395 ;;_toupper$7630	offset	0
   396 ;;_c	offset=-2 (param)
   397 ;;_c	offset=-2 (param)
   398 ;;_c	offset=-2 (param)
   399 ;;_n	offset	0
   400 ;;_i	offset	8
   401 ;;_w	offset	10
   402 ;;_p	offset	12
   403 ;;_fp	offset=-2 (param)
   404 ;;_d	offset=-10 (param)
   405 ;;_counter	offset	0
   406 ;;_dividend	offset=-8 (param)
   407 ;;_divisor	offset=-16 (param)
   408 ;;_quotient	offset	0
   409 ;;_counter	offset	8
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_r	offset	0
   413 ;;_l	offset	2
   414 ;;__l	offset=-2 (param)
   415 ;;__r	offset=-4 (param)
   416 ;;_n	offset=-6 (param)
   417 ;;_nuls	offset	0
   418 ;;_l	offset	7
   419 ;;_p	offset	9
   420 ;;_cp	offset	11
   421 ;;_w	offset	13
   422 ;;_i	offset	15
   423 ;;_fp	offset=-2 (param)
   424 ;;_s	offset=-4 (param)
   425 ;;_efgtoa$6796	offset	0
   426 ;;_efgtoa$6795	offset	2
   427 ;;_efgtoa$6794	offset	4
   428 ;;_efgtoa$6790	offset	6
   429 ;;_efgtoa$6786	offset	8
   430 ;;_efgtoa$6785	offset	10
   431 ;;_u	offset	12
   432 ;;_g	offset	16
   433 ;;_l	offset	20
   434 ;;_h	offset	24
   435 ;;_ou	offset	28
   436 ;;_n	offset	32
   437 ;;_e	offset	34
   438 ;;_i	offset	36
   439 ;;_w	offset	38
   440 ;;_p	offset	40
   441 ;;_sign	offset	42
   442 ;;_d	offset	44
   443 ;;_ne	offset	46
   444 ;;_m	offset	48
   445 ;;_pp	offset	50
   446 ;;_t	offset	52
   447 ;;_mode	offset	54
   448 ;;_nmode	offset	55
   449 ;;_fp	offset=-2 (param)
   450 ;;_f	offset=-6 (param)
   451 ;;_c	offset=-7 (param)
   452 ;;_tolower$7615	offset	0
   453 ;;_c	offset=-2 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_d	offset	0
   456 ;;_s	offset	2
   457 ;;_dest	offset=-2 (param)
   458 ;;_src	offset=-4 (param)
   459 ;;_u	offset	0
   460 ;;_m	offset	4
   461 ;;_e	offset	8
   462 ;;_x	offset=-4 (param)
   463 ;;_u	offset	0
   464 ;;_e	offset	4
   465 ;;_x	offset=-4 (param)
   466 ;;_exp1	offset	0
   467 ;;_sign1	offset	1
   468 ;;_f1	offset=-4 (param)
   469 ;;_f1	offset=-4 (param)
   470 ;;_ff1	offset=-4 (param)
   471 ;;_ff2	offset=-8 (param)
   472 ;;_sign	offset	0
   473 ;;_counter	offset	1
   474 ;;_dividend	offset=-2 (param)
   475 ;;_divisor	offset=-4 (param)
   476 ;;_quotient	offset	0
   477 ;;_sign	offset	2
   478 ;;_counter	offset	3
   479 ;;_dividend	offset=-2 (param)
   480 ;;_divisor	offset=-4 (param)
   481 ;;_dtoa$6762	offset	0
   482 ;;_n	offset	2
   483 ;;_i	offset	10
   484 ;;_s	offset	12
   485 ;;_w	offset	14
   486 ;;_p	offset	16
   487 ;;_fp	offset=-2 (param)
   488 ;;_d	offset=-10 (param)
   489 ;;_a	offset=-2 (param)
   490 ;;_sign	offset	0
   491 ;;_counter	offset	1
   492 ;;_dividend	offset=-8 (param)
   493 ;;_divisor	offset=-16 (param)
   494 ;;_quotient	offset	0
   495 ;;_sign	offset	8
   496 ;;_counter	offset	9
   497 ;;_dividend	offset=-8 (param)
   498 ;;_divisor	offset=-16 (param)
   499 ;;_w	offset	0
   500 ;;_fp	offset=-2 (param)
   501 ;;_c	offset=-3 (param)
   502 ;;_w	offset	0
   503 ;;_i	offset	2
   504 ;;_fp	offset=-2 (param)
   505 ;;_buf	offset=-4 (param)
   506 ;;_p	offset=-6 (param)
   507 ;;_a	offset	0
   508 ;;_s	offset=-2 (param)
   509 ;;_i	offset	0
   510 ;;_c	offset	2
   511 ;;_s	offset=-2 (param)
   512 ;;_fp	offset=-4 (param)
   513 ;;_c	offset=-2 (param)
   514 ;;_fp	offset=-4 (param)
   515 ;;_c	offset=-1 (param)
   516 ;;__this	offset=-2 (param)
   517 ;;_c	offset=-3 (param)
   518 ;;_atoi$7346	offset	0
   519 ;;_atoi$7344	offset	2
   520 ;;_atoi$7345	offset	4
   521 ;;_n	offset	5
   522 ;;_neg	offset	7
   523 ;;_s	offset=-2 (param)
   524 ;;_isspace$7395	offset	0
   525 ;;_c	offset=-2 (param)
   526 ;;_c	offset=-2 (param)
   527 ;;_vterm	offset=-1 (param)
   528 ;;_new_response_info	offset=-1 (param)
   529 ;;_new_response_info	offset=-1 (param)
   530 ;;_level	offset=-2 (param)
   531 ;;_dutyValue	offset=-2 (param)
   532 ;;_timer	offset=-1 (param)
   533 ;;_timer	offset=-1 (param)
   534 ;;_count	offset=-3 (param)
   535 ;;_h	offset=-1 (param)
   536 ;;_u	offset	0
   537 ;;_x	offset=-4 (param)
   538 ;;_chan	offset=-1 (param)
   539 ;;_to_what	offset=-2 (param)
   540 ;;_u	offset	0
   541 ;;_s	offset=-2 (param)
   542 ;;_index	offset=-1 (param)
   543 ;;_arg	offset	0
   544 ;;_exp	offset	4
   545 ;;_sign	offset=-1 (param)
   546 ;;_val	offset=-5 (param)
   547 ;;_grs	offset	0
   548 ;;_rem	offset	4
   549 ;;_new_exp	offset	8
   550 ;;_aexp	offset	10
   551 ;;_bexp	offset	11
   552 ;;_sign	offset	12
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_ff1	offset=-4 (param)
   556 ;;_ff2	offset=-8 (param)
   557 ;;_lp_speed	offset	0
   558 ;;_new	offset=-4 (param)
   559 ;;_bn	offset=-5 (param)
   560 ;;_slow	offset=-6 (param)
   561 ;;_b	offset=-4 (param)
   562 ;;_a	offset=-8 (param)
   563 ;;_grs	offset	0
   564 ;;_bexp	offset	1
   565 ;;_aexp	offset	2
   566 ;;_signs	offset	3
   567 ;;_b	offset=-4 (param)
   568 ;;_a	offset=-8 (param)
   569 ;;_prod	offset	0
   570 ;;_grs	offset	4
   571 ;;_temp	offset	8
   572 ;;_bexp	offset	10
   573 ;;_aexp	offset	11
   574 ;;_sign	offset	12
   575 ;;_b	offset=-4 (param)
   576 ;;_a	offset=-8 (param)
   577 ;;_InterruptHandler	offset=-3 (param)
   578 ;;_InterruptHandler	offset=-3 (param)
   579 ;;_InterruptHandler	offset=-3 (param)
   580 ;;_InterruptHandler	offset=-3 (param)
   581 ;;_InterruptHandler	offset=-3 (param)
   582 ;;_InterruptHandler	offset=-3 (param)
   583 ;;_state	offset	0
   584 ;;_InterruptHandler	offset=-3 (param)
   585 ;;_InterruptHandler	offset=-3 (param)
   586 ;;_seed	offset	0
   587 ;;_poly	offset	2
   588 ;;_InterruptHandler	offset=-3 (param)
   589 ;;_InterruptHandler	offset=-3 (param)
   590 ;;_i	offset	0
   591 ;;_sw_value	offset	1
   592 ;;_timerVal	offset=-2 (param)
   593 ;;_light	offset	0
   594 ;;_mode	offset=-1 (param)
   595 ;;_chan	offset=-1 (param)
   596 ;;_to_what	offset=-2 (param)
   597 ;;_u	offset	0
   598 ;;_s	offset=-2 (param)
   599 ;;_index	offset=-1 (param)
   600 ;;_arg	offset	0
   601 ;;_exp	offset	4
   602 ;;_sign	offset=-1 (param)
   603 ;;_val	offset=-5 (param)
   604 ;;_b	offset=-4 (param)
   605 ;;_a	offset=-8 (param)
   606 ;;_grs	offset	0
   607 ;;_bexp	offset	1
   608 ;;_aexp	offset	2
   609 ;;_signs	offset	3
   610 ;;_b	offset=-4 (param)
   611 ;;_a	offset=-8 (param)
   612 ;;_prod	offset	0
   613 ;;_grs	offset	4
   614 ;;_temp	offset	8
   615 ;;_bexp	offset	10
   616 ;;_aexp	offset	11
   617 ;;_sign	offset	12
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_grs	offset	0
   621 ;;_rem	offset	4
   622 ;;_new_exp	offset	8
   623 ;;_aexp	offset	10
   624 ;;_bexp	offset	11
   625 ;;_sign	offset	12
   626 ;;_b	offset=-4 (param)
   627 ;;_a	offset=-8 (param)
   628 ;;_ff1	offset=-4 (param)
   629 ;;_ff2	offset=-8 (param)
   630 ;;_timerVal	offset=-2 (param)
   631 ;;_adj	offset	0
   632 ;;_log_ptr	offset	4
   633 ;;_f	offset	0
   634 ;;_ap	offset	6
   635 ;;_s	offset=-3 (param)
   636 ;;_fmt	offset=-5 (param)
   637 ;;_cfmt	offset	0
   638 ;;_fp	offset=-2 (param)
   639 ;;_fmt	offset=-4 (param)
   640 ;;_ap	offset=-6 (param)
   641 ;;_vfpfcnvrt$6839	offset	0
   642 ;;_vfpfcnvrt$6850	offset	2
   643 ;;_vfpfcnvrt$6838	offset	4
   644 ;;_llu	offset	6
   645 ;;_ll	offset	14
   646 ;;_f	offset	22
   647 ;;_ct	offset	26
   648 ;;_cp	offset	29
   649 ;;_c	offset	31
   650 ;;_fp	offset=-2 (param)
   651 ;;_fmt	offset=-4 (param)
   652 ;;_ap	offset=-6 (param)
   653 ;;_xtoa$6824	offset	0
   654 ;;_xtoa$6823	offset	2
   655 ;;_n	offset	4
   656 ;;_c	offset	12
   657 ;;_i	offset	14
   658 ;;_w	offset	16
   659 ;;_p	offset	18
   660 ;;_fp	offset=-2 (param)
   661 ;;_d	offset=-10 (param)
   662 ;;_x	offset=-11 (param)
   663 ;;_toupper$7630	offset	0
   664 ;;_c	offset=-2 (param)
   665 ;;_c	offset=-2 (param)
   666 ;;_c	offset=-2 (param)
   667 ;;_n	offset	0
   668 ;;_i	offset	8
   669 ;;_w	offset	10
   670 ;;_p	offset	12
   671 ;;_fp	offset=-2 (param)
   672 ;;_d	offset=-10 (param)
   673 ;;_counter	offset	0
   674 ;;_dividend	offset=-8 (param)
   675 ;;_divisor	offset=-16 (param)
   676 ;;_quotient	offset	0
   677 ;;_counter	offset	8
   678 ;;_dividend	offset=-8 (param)
   679 ;;_divisor	offset=-16 (param)
   680 ;;_r	offset	0
   681 ;;_l	offset	2
   682 ;;__l	offset=-2 (param)
   683 ;;__r	offset=-4 (param)
   684 ;;_n	offset=-6 (param)
   685 ;;_nuls	offset	0
   686 ;;_l	offset	7
   687 ;;_p	offset	9
   688 ;;_cp	offset	11
   689 ;;_w	offset	13
   690 ;;_i	offset	15
   691 ;;_fp	offset=-2 (param)
   692 ;;_s	offset=-4 (param)
   693 ;;_efgtoa$6796	offset	0
   694 ;;_efgtoa$6795	offset	2
   695 ;;_efgtoa$6794	offset	4
   696 ;;_efgtoa$6790	offset	6
   697 ;;_efgtoa$6786	offset	8
   698 ;;_efgtoa$6785	offset	10
   699 ;;_u	offset	12
   700 ;;_g	offset	16
   701 ;;_l	offset	20
   702 ;;_h	offset	24
   703 ;;_ou	offset	28
   704 ;;_n	offset	32
   705 ;;_e	offset	34
   706 ;;_i	offset	36
   707 ;;_w	offset	38
   708 ;;_p	offset	40
   709 ;;_sign	offset	42
   710 ;;_d	offset	44
   711 ;;_ne	offset	46
   712 ;;_m	offset	48
   713 ;;_pp	offset	50
   714 ;;_t	offset	52
   715 ;;_mode	offset	54
   716 ;;_nmode	offset	55
   717 ;;_fp	offset=-2 (param)
   718 ;;_f	offset=-6 (param)
   719 ;;_c	offset=-7 (param)
   720 ;;_tolower$7615	offset	0
   721 ;;_c	offset=-2 (param)
   722 ;;_c	offset=-2 (param)
   723 ;;_d	offset	0
   724 ;;_s	offset	2
   725 ;;_dest	offset=-2 (param)
   726 ;;_src	offset=-4 (param)
   727 ;;_u	offset	0
   728 ;;_m	offset	4
   729 ;;_e	offset	8
   730 ;;_x	offset=-4 (param)
   731 ;;_u	offset	0
   732 ;;_e	offset	4
   733 ;;_x	offset=-4 (param)
   734 ;;_exp1	offset	0
   735 ;;_sign1	offset	1
   736 ;;_f1	offset=-4 (param)
   737 ;;_f1	offset=-4 (param)
   738 ;;_ff1	offset=-4 (param)
   739 ;;_ff2	offset=-8 (param)
   740 ;;_sign	offset	0
   741 ;;_counter	offset	1
   742 ;;_dividend	offset=-2 (param)
   743 ;;_divisor	offset=-4 (param)
   744 ;;_quotient	offset	0
   745 ;;_sign	offset	2
   746 ;;_counter	offset	3
   747 ;;_dividend	offset=-2 (param)
   748 ;;_divisor	offset=-4 (param)
   749 ;;_dtoa$6762	offset	0
   750 ;;_n	offset	2
   751 ;;_i	offset	10
   752 ;;_s	offset	12
   753 ;;_w	offset	14
   754 ;;_p	offset	16
   755 ;;_fp	offset=-2 (param)
   756 ;;_d	offset=-10 (param)
   757 ;;_a	offset=-2 (param)
   758 ;;_sign	offset	0
   759 ;;_counter	offset	1
   760 ;;_dividend	offset=-8 (param)
   761 ;;_divisor	offset=-16 (param)
   762 ;;_quotient	offset	0
   763 ;;_sign	offset	8
   764 ;;_counter	offset	9
   765 ;;_dividend	offset=-8 (param)
   766 ;;_divisor	offset=-16 (param)
   767 ;;_w	offset	0
   768 ;;_fp	offset=-2 (param)
   769 ;;_c	offset=-3 (param)
   770 ;;_w	offset	0
   771 ;;_i	offset	2
   772 ;;_fp	offset=-2 (param)
   773 ;;_buf	offset=-4 (param)
   774 ;;_p	offset=-6 (param)
   775 ;;_a	offset	0
   776 ;;_s	offset=-2 (param)
   777 ;;_i	offset	0
   778 ;;_c	offset	2
   779 ;;_s	offset=-2 (param)
   780 ;;_fp	offset=-4 (param)
   781 ;;_c	offset=-2 (param)
   782 ;;_fp	offset=-4 (param)
   783 ;;_c	offset=-1 (param)
   784 ;;__this	offset=-2 (param)
   785 ;;_c	offset=-3 (param)
   786 ;;_atoi$7346	offset	0
   787 ;;_atoi$7344	offset	2
   788 ;;_atoi$7345	offset	4
   789 ;;_n	offset	5
   790 ;;_neg	offset	7
   791 ;;_s	offset=-2 (param)
   792 ;;_isspace$7395	offset	0
   793 ;;_c	offset=-2 (param)
   794 ;;_c	offset=-2 (param)
   795 ;;_dsize	offset=-2 (param)
   796 ;;_u	offset	0
   797 ;;_x	offset=-4 (param)
   798 ;;_f1p	offset=-2 (param)
   799 ;;_f2	offset=-6 (param)
   800 ;;_timer	offset=-1 (param)
   801 ;;_count	offset=-3 (param)
   802 ;;_channel	offset=-1 (param)
   803 ;;_i	offset	0
   804                           
   805                           	psect	idataBIGRAM
   806  0174B2                     __pidataBIGRAM:
   807                           	opt callstack 0
   808                           
   809                           ;initializer for _port_data
   810  0174B2  FF                 	db	255
   811  0174B3  00                 	db	0
   812  0174B4  FF                 	db	255
   813  0174B5  00                 	db	0
   814  0174B6  FF                 	db	255
   815  0174B7  00                 	db	0
   816  0174B8  FF                 	db	255
   817  0174B9  00                 	db	0
   818  0174BA  FF                 	db	255
   819  0174BB  00                 	db	0
   820  0174BC  FF                 	db	255
   821  0174BD  00                 	db	0
   822  0174BE  FF                 	db	255
   823  0174BF  00                 	db	0
   824  0174C0  FF                 	db	255
   825  0174C1  00                 	db	0
   826  0174C2  00                 	db	0
   827  0174C3  00                 	db	0
   828  0174C4  00                 	db	0
   829  0174C5  00                 	db	0
   830  0174C6  00                 	db	0
   831  0174C7  00                 	db	0
   832  0174C8  00                 	db	0
   833  0174C9  00                 	db	0
   834  0174CA  00                 	db	0
   835  0174CB  00                 	db	0
   836  0174CC  00                 	db	0
   837  0174CD  00                 	db	0
   838  0174CE  00                 	db	0
   839  0174CF  00                 	db	0
   840  0174D0  00                 	db	0
   841  0174D1  00                 	db	0
   842  0174D2  00                 	db	0
   843  0174D3  00                 	db	0
   844  0174D4  00                 	db	0
   845  0174D5  00                 	db	0
   846  0174D6  00                 	db	0
   847  0174D7  00                 	db	0
   848  0174D8  00                 	db	0
   849  0174D9  00                 	db	0
   850  0174DA  00                 	db	0
   851  0174DB  00                 	db	0
   852  0174DC  00                 	db	0
   853  0174DD  00                 	db	0
   854  0174DE  00                 	db	0
   855  0174DF  00                 	db	0
   856  0174E0  00                 	db	0
   857  0174E1  00                 	db	0
   858  0174E2  00                 	db	0
   859  0174E3  00                 	db	0
   860  0174E4  00                 	db	0
   861  0174E5  00                 	db	0
   862  0174E6  00                 	db	0
   863  0174E7  00                 	db	0
   864  0174E8  00                 	db	0
   865  0174E9  00                 	db	0
   866  0174EA  00                 	db	0
   867  0174EB  00                 	db	0
   868  0174EC  00                 	db	0
   869  0174ED  00                 	db	0
   870  0174EE  00                 	db	0
   871  0174EF  00                 	db	0
   872  0174F0  00                 	db	0
   873  0174F1  00                 	db	0
   874  0174F2  00                 	db	0
   875  0174F3  00                 	db	0
   876  0174F4  00                 	db	0
   877  0174F5  00                 	db	0
   878  0174F6  00                 	db	0
   879  0174F7  00                 	db	0
   880  0174F8  00                 	db	0
   881  0174F9  00                 	db	0
   882  0174FA  00                 	db	0
   883  0174FB  00                 	db	0
   884  0174FC  00                 	db	0
   885  0174FD  00                 	db	0
   886  0174FE  00                 	db	0
   887  0174FF  00                 	db	0
   888  017500  00                 	db	0
   889  017501  00                 	db	0
   890  017502  00                 	db	0
   891  017503  00                 	db	0
   892  017504  00                 	db	0
   893  017505  00                 	db	0
   894  017506  00                 	db	0
   895  017507  00                 	db	0
   896  017508  00                 	db	0
   897  017509  00                 	db	0
   898  01750A  00                 	db	0
   899  01750B  00                 	db	0
   900  01750C  00                 	db	0
   901  01750D  00                 	db	0
   902  01750E  00                 	db	0
   903  01750F  00                 	db	0
   904  017510  00                 	db	0
   905  017511  00                 	db	0
   906  017512  00                 	db	0
   907  017513  00                 	db	0
   908  017514  00                 	db	0
   909  017515  00                 	db	0
   910  017516  00                 	db	0
   911  017517  00                 	db	0
   912  017518  00                 	db	0
   913  017519  00                 	db	0
   914  01751A  00                 	db	0
   915  01751B  00                 	db	0
   916  01751C  00                 	db	0
   917  01751D  00                 	db	0
   918  01751E  00                 	db	0
   919  01751F  00                 	db	0
   920  017520  00                 	db	0
   921  017521  00                 	db	0
   922  017522  00                 	db	0
   923  017523  00                 	db	0
   924  017524  00                 	db	0
   925  017525  00                 	db	0
   926  017526  00                 	db	0
   927  017527  00                 	db	0
   928  017528  00                 	db	0
   929  017529  00                 	db	0
   930  01752A  00                 	db	0
   931  01752B  00                 	db	0
   932  01752C  00                 	db	0
   933  01752D  00                 	db	0
   934  01752E  00                 	db	0
   935  01752F  00                 	db	0
   936  017530  00                 	db	0
   937  017531  00                 	db	0
   938  017532  00                 	db	0
   939  017533  00                 	db	0
   940  017534  00                 	db	0
   941  017535  00                 	db	0
   942  017536  00                 	db	0
   943  017537  00                 	db	0
   944  017538  00                 	db	0
   945  017539  00                 	db	0
   946  01753A  00                 	db	0
   947  01753B  00                 	db	0
   948  01753C  00                 	db	0
   949  01753D  00                 	db	0
   950  01753E  00                 	db	0
   951  01753F  00                 	db	0
   952  017540  00                 	db	0
   953  017541  00                 	db	0
   954  017542  00                 	db	0
   955  017543  00                 	db	0
   956  017544  00                 	db	0
   957  017545  00                 	db	0
   958  017546  00                 	db	0
   959  017547  00                 	db	0
   960  017548  00                 	db	0
   961  017549  00                 	db	0
   962  01754A  00                 	db	0
   963  01754B  00                 	db	0
   964  01754C  00                 	db	0
   965  01754D  00                 	db	0
   966  01754E  00                 	db	0
   967  01754F  00                 	db	0
   968  017550  00                 	db	0
   969  017551  00                 	db	0
   970  017552  00                 	db	0
   971  017553  00                 	db	0
   972  017554  00                 	db	0
   973  017555  00                 	db	0
   974  017556  00                 	db	0
   975  017557  00                 	db	0
   976  017558  00                 	db	0
   977  017559  00                 	db	0
   978  01755A  00                 	db	0
   979  01755B  00                 	db	0
   980  01755C  00                 	db	0
   981  01755D  00                 	db	0
   982  01755E  00                 	db	0
   983  01755F  00                 	db	0
   984  017560  00                 	db	0
   985  017561  00                 	db	0
   986  017562  00                 	db	0
   987  017563  00                 	db	0
   988  017564  00                 	db	0
   989  017565  00                 	db	0
   990  017566  00                 	db	0
   991  017567  00                 	db	0
   992  017568  00                 	db	0
   993  017569  00                 	db	0
   994  01756A  00                 	db	0
   995  01756B  00                 	db	0
   996  01756C  00                 	db	0
   997  01756D  00                 	db	0
   998  01756E  00                 	db	0
   999  01756F  00                 	db	0
  1000  017570  00                 	db	0
  1001  017571  00                 	db	0
  1002  017572  00                 	db	0
  1003  017573  00                 	db	0
  1004  017574  00                 	db	0
  1005  017575  00                 	db	0
  1006  017576  00                 	db	0
  1007  017577  00                 	db	0
  1008  017578  00                 	db	0
  1009  017579  00                 	db	0
  1010  01757A  00                 	db	0
  1011  01757B  00                 	db	0
  1012  01757C  00                 	db	0
  1013  01757D  00                 	db	0
  1014  01757E  00                 	db	0
  1015  01757F  00                 	db	0
  1016  017580  00                 	db	0
  1017  017581  00                 	db	0
  1018  017582  00                 	db	0
  1019  017583  00                 	db	0
  1020  017584  00                 	db	0
  1021  017585  00                 	db	0
  1022  017586  00                 	db	0
  1023  017587  00                 	db	0
  1024  017588  00                 	db	0
  1025  017589  00                 	db	0
  1026  01758A  00                 	db	0
  1027  01758B  00                 	db	0
  1028  01758C  00                 	db	0
  1029  01758D  00                 	db	0
  1030  01758E  00                 	db	0
  1031  01758F  00                 	db	0
  1032  017590  00                 	db	0
  1033  017591  00                 	db	0
  1034  017592  00                 	db	0
  1035  017593  00                 	db	0
  1036  017594  00                 	db	0
  1037  017595  00                 	db	0
  1038  017596  00                 	db	0
  1039  017597  00                 	db	0
  1040  017598  00                 	db	0
  1041  017599  00                 	db	0
  1042  01759A  00                 	db	0
  1043  01759B  00                 	db	0
  1044  01759C  00                 	db	0
  1045  01759D  00                 	db	0
  1046  01759E  00                 	db	0
  1047  01759F  00                 	db	0
  1048  0175A0  00                 	db	0
  1049  0175A1  00                 	db	0
  1050  0175A2  00                 	db	0
  1051  0175A3  00                 	db	0
  1052  0175A4  00                 	db	0
  1053  0175A5  00                 	db	0
  1054  0175A6  00                 	db	0
  1055  0175A7  00                 	db	0
  1056  0175A8  00                 	db	0
  1057  0175A9  00                 	db	0
  1058  0175AA  00                 	db	0
  1059  0175AB  00                 	db	0
  1060  0175AC  00                 	db	0
  1061  0175AD  00                 	db	0
  1062  0175AE  00                 	db	0
  1063  0175AF  00                 	db	0
  1064  0175B0  00                 	db	0
  1065  0175B1  00                 	db	0
  1066  0175B2  00                 	db	0
  1067  0175B3  00                 	db	0
  1068  0175B4  00                 	db	0
  1069  0175B5  00                 	db	0
  1070  0175B6  00                 	db	0
  1071  0175B7  00                 	db	0
  1072  0175B8  00                 	db	0
  1073  0175B9  00                 	db	0
  1074  0175BA  00                 	db	0
  1075  0175BB  00                 	db	0
  1076  0175BC  00                 	db	0
  1077  0175BD  00                 	db	0
  1078  0175BE  00                 	db	0
  1079  0175BF  00                 	db	0
  1080  0175C0  00                 	db	0
  1081  0175C1  00                 	db	0
  1082  0175C2  00                 	db	0
  1083  0175C3  00                 	db	0
  1084  0175C4  00                 	db	0
  1085  0175C5  00                 	db	0
  1086  0175C6  00                 	db	0
  1087  0175C7  00                 	db	0
  1088  0175C8  00                 	db	0
  1089  0175C9  00                 	db	0
  1090  0175CA  00                 	db	0
  1091  0175CB  00                 	db	0
  1092  0175CC  00                 	db	0
  1093  0175CD  00                 	db	0
  1094  0175CE  00                 	db	0
  1095  0175CF  00                 	db	0
  1096  0175D0  00                 	db	0
  1097  0175D1  00                 	db	0
  1098  0175D2  00                 	db	0
  1099  0175D3  00                 	db	0
  1100  0175D4  00                 	db	0
  1101  0175D5  00                 	db	0
  1102  0175D6  00                 	db	0
  1103  0175D7  00                 	db	0
  1104  0175D8  00                 	db	0
  1105  0175D9  00                 	db	0
  1106  0175DA  00                 	db	0
  1107  0175DB  00                 	db	0
  1108  0175DC  00                 	db	0
  1109  0175DD  00                 	db	0
  1110  0175DE  00                 	db	0
  1111  0175DF  00                 	db	0
  1112  0175E0  00                 	db	0
  1113  0175E1  00                 	db	0
  1114  0175E2  00                 	db	0
  1115  0175E3  00                 	db	0
  1116  0175E4  00                 	db	0
  1117  0175E5  00                 	db	0
  1118  0175E6  00                 	db	0
  1119  0175E7  00                 	db	0
  1120  0175E8  00                 	db	0
  1121  0175E9  00                 	db	0
  1122  0175EA  00                 	db	0
  1123  0175EB  00                 	db	0
  1124  0175EC  00                 	db	0
  1125  0175ED  00                 	db	0
  1126  0175EE  00                 	db	0
  1127  0175EF  00                 	db	0
  1128  0175F0  00                 	db	0
  1129  0175F1  00                 	db	0
  1130  0175F2  00                 	db	0
  1131  0175F3  00                 	db	0
  1132  0175F4  00                 	db	0
  1133  0175F5  00                 	db	0
  1134  0175F6  00                 	db	0
  1135  0175F7  00                 	db	0
  1136  0175F8  00                 	db	0
  1137  0175F9  00                 	db	0
  1138  0175FA  00                 	db	0
  1139  0175FB  00                 	db	0
  1140  0175FC  00                 	db	0
  1141  0175FD  00                 	db	0
  1142  0175FE  00                 	db	0
  1143  0175FF  00                 	db	0
  1144  017600  00                 	db	0
  1145  017601  00                 	db	0
  1146  017602  00                 	db	0
  1147  017603  00                 	db	0
  1148  017604  00                 	db	0
  1149  017605  00                 	db	0
  1150  017606  00                 	db	0
  1151  017607  00                 	db	0
  1152  017608  00                 	db	0
  1153  017609  00                 	db	0
  1154  01760A  00                 	db	0
  1155  01760B  00                 	db	0
  1156  01760C  00                 	db	0
  1157  01760D  00                 	db	0
  1158  01760E  00                 	db	0
  1159  01760F  00                 	db	0
  1160  017610  00                 	db	0
  1161  017611  00                 	db	0
  1162  017612  00                 	db	0
  1163  017613  00                 	db	0
  1164  017614  00                 	db	0
  1165  017615  00                 	db	0
  1166  017616  00                 	db	0
  1167  017617  00                 	db	0
  1168  017618  00                 	db	0
  1169  017619  00                 	db	0
  1170  01761A  00                 	db	0
  1171  01761B  00                 	db	0
  1172  01761C  00                 	db	0
  1173  01761D  00                 	db	0
  1174  01761E  00                 	db	0
  1175  01761F  00                 	db	0
  1176  017620  00                 	db	0
  1177  017621  00                 	db	0
  1178  017622  00                 	db	0
  1179  017623  00                 	db	0
  1180  017624  00                 	db	0
  1181  017625  00                 	db	0
  1182  017626  00                 	db	0
  1183  017627  00                 	db	0
  1184  017628  00                 	db	0
  1185  017629  00                 	db	0
  1186  01762A  00                 	db	0
  1187  01762B  00                 	db	0
  1188  01762C  00                 	db	0
  1189  01762D  00                 	db	0
  1190  01762E  00                 	db	0
  1191  01762F  00                 	db	0
  1192  017630  00                 	db	0
  1193  017631  00                 	db	0
  1194  017632  00                 	db	0
  1195  017633  00                 	db	0
  1196  017634  00                 	db	0
  1197  017635  00                 	db	0
  1198  017636  00                 	db	0
  1199  017637  00                 	db	0
  1200  017638  00                 	db	0
  1201  017639  00                 	db	0
  1202  01763A  00                 	db	0
  1203  01763B  00                 	db	0
  1204  01763C  00                 	db	0
  1205  01763D  00                 	db	0
  1206  01763E  00                 	db	0
  1207  01763F  00                 	db	0
  1208  017640  00                 	db	0
  1209  017641  00                 	db	0
  1210  017642  00                 	db	0
  1211  017643  00                 	db	0
  1212  017644  00                 	db	0
  1213  017645  00                 	db	0
  1214  017646  00                 	db	0
  1215  017647  00                 	db	0
  1216  017648  00                 	db	0
  1217  017649  00                 	db	0
  1218  01764A  00                 	db	0
  1219  01764B  00                 	db	0
  1220  01764C  00                 	db	0
  1221  01764D  00                 	db	0
  1222  01764E  00                 	db	0
  1223  01764F  00                 	db	0
  1224  017650  00                 	db	0
  1225  017651  00                 	db	0
  1226  017652  00                 	db	0
  1227  017653  00                 	db	0
  1228  017654  00                 	db	0
  1229  017655  00                 	db	0
  1230  017656  00                 	db	0
  1231  017657  00                 	db	0
  1232  017658  00                 	db	0
  1233  017659  00                 	db	0
  1234  01765A  00                 	db	0
  1235  01765B  00                 	db	0
  1236  01765C  00                 	db	0
  1237  01765D  00                 	db	0
  1238  01765E  00                 	db	0
  1239  01765F  00                 	db	0
  1240  017660  00                 	db	0
  1241  017661  00                 	db	0
  1242  017662  00                 	db	0
  1243  017663  00                 	db	0
  1244  017664  00                 	db	0
  1245  017665  00                 	db	0
  1246  017666  00                 	db	0
  1247  017667  00                 	db	0
  1248  017668  00                 	db	0
  1249  017669  00                 	db	0
  1250  01766A  00                 	db	0
  1251  01766B  00                 	db	0
  1252  01766C  00                 	db	0
  1253  01766D  00                 	db	0
  1254  01766E  00                 	db	0
  1255  01766F  00                 	db	0
  1256  017670  00                 	db	0
  1257  017671  00                 	db	0
  1258  017672  00                 	db	0
  1259  017673  00                 	db	0
  1260  017674  00                 	db	0
  1261  017675  00                 	db	0
  1262  017676  00                 	db	0
  1263  017677  00                 	db	0
  1264  017678  00                 	db	0
  1265  017679  00                 	db	0
  1266  01767A  00                 	db	0
  1267  01767B  00                 	db	0
  1268  01767C  00                 	db	0
  1269  01767D  00                 	db	0
  1270  01767E  00                 	db	0
  1271  01767F  00                 	db	0
  1272  017680  00                 	db	0
  1273  017681  00                 	db	0
  1274  017682  00                 	db	0
  1275  017683  00                 	db	0
  1276  017684  00                 	db	0
  1277  017685  00                 	db	0
  1278  017686  00                 	db	0
  1279  017687  00                 	db	0
  1280  017688  00                 	db	0
  1281  017689  00                 	db	0
  1282  01768A  00                 	db	0
  1283  01768B  00                 	db	0
  1284  01768C  00                 	db	0
  1285  01768D  00                 	db	0
  1286  01768E  00                 	db	0
  1287  01768F  00                 	db	0
  1288  017690  00                 	db	0
  1289  017691  00                 	db	0
  1290  017692  00                 	db	0
  1291  017693  00                 	db	0
  1292  017694  00                 	db	0
  1293  017695  00                 	db	0
  1294  017696  00                 	db	0
  1295  017697  00                 	db	0
  1296  017698  00                 	db	0
  1297  017699  00                 	db	0
  1298  01769A  00                 	db	0
  1299  01769B  00                 	db	0
  1300  01769C  00                 	db	0
  1301  01769D  00                 	db	0
  1302  01769E  00                 	db	0
  1303  01769F  00                 	db	0
  1304  0176A0  00                 	db	0
  1305  0176A1  00                 	db	0
  1306  0176A2  00                 	db	0
  1307  0176A3  00                 	db	0
  1308  0176A4  00                 	db	0
  1309  0176A5  00                 	db	0
  1310  0176A6  00                 	db	0
  1311  0176A7  00                 	db	0
  1312  0176A8  00                 	db	0
  1313  0176A9  00                 	db	0
  1314  0176AA  00                 	db	0
  1315  0176AB  00                 	db	0
  1316  0176AC  00                 	db	0
  1317  0176AD  00                 	db	0
  1318  0176AE  00                 	db	0
  1319  0176AF  00                 	db	0
  1320  0176B0  00                 	db	0
  1321  0176B1  00                 	db	0
  1322                           
  1323                           ;initializer for _C
  1324  0176B2  0000               	dw	0
  1325  0176B4  0000               	dw	0
  1326  0176B6  0000               	dw	0
  1327  0176B8  0000               	dw	0
  1328  0176BA  0000               	dw	0
  1329  0176BC  0000               	dw	0
  1330  0176BE  0000               	dw	0
  1331  0176C0  0000               	dw	0
  1332  0176C2  0000               	dw	0
  1333  0176C4  0000               	dw	0
  1334  0176C6  0000               	dw	0
  1335  0176C8  0000               	dw	0
  1336  0176CA  0000               	dw	0
  1337  0176CC  0000               	dw	0
  1338  0176CE  0000               	dw	0
  1339  0176D0  0000               	dw	0
  1340  0176D2  0000               	dw	0
  1341  0176D4  0000               	dw	0
  1342  0176D6  0000               	dw	0
  1343  0176D8  0000               	dw	0
  1344  0176DA  0000               	dw	0
  1345  0176DC  0000               	dw	0
  1346  0176DE  0000               	dw	0
  1347  0176E0  0000               	dw	0
  1348  0176E2  0000               	dw	0
  1349  0176E4  0000               	dw	0
  1350  0176E6  0000               	dw	0
  1351  0176E8  0000               	dw	0
  1352  0176EA  0000               	dw	0
  1353  0176EC  0000               	dw	0
  1354  0176EE  0000               	dw	0
  1355  0176F0  0000               	dw	0
  1356  0176F2  0000               	dw	0
  1357  0176F4  0000               	dw	0
  1358  0176F6  0000               	dw	0
  1359  0176F8  0000               	dw	0
  1360  0176FA  0000               	dw	0
  1361  0176FC  0000               	dw	0
  1362  0176FE  0000               	dw	0
  1363  017700  0000               	dw	0
  1364  017702  0000               	dw	0
  1365  017704  0000               	dw	0
  1366  017706  0000               	dw	0
  1367  017708  0000               	dw	0
  1368  01770A  0000               	dw	0
  1369  01770C  0000               	dw	0
  1370  01770E  0000               	dw	0
  1371  017710  0000               	dw	0
  1372  017712  0000               	dw	0
  1373  017714  0000               	dw	0
  1374  017716  0000               	dw	0
  1375  017718  0000               	dw	0
  1376  01771A  0000               	dw	0
  1377  01771C  0000               	dw	0
  1378  01771E  0000               	dw	0
  1379  017720  0000               	dw	0
  1380  017722  0000               	dw	0
  1381  017724  0000               	dw	0
  1382  017726  0000               	dw	0
  1383  017728  0000               	dw	0
  1384  01772A  0000               	dw	0
  1385  01772C  0000               	dw	0
  1386  01772E  0000               	dw	0
  1387  017730  0000               	dw	0
  1388  017732  0000               	dw	0
  1389  017734  0000               	dw	0
  1390  017736  0000               	dw	0
  1391  017738  0000               	dw	0
  1392  01773A  0000               	dw	0
  1393  01773C  0000               	dw	0
  1394  01773E  0000               	dw	0
  1395  017740  42FA               	dw	17146
  1396  017742  0000               	dw	0
  1397  017744  0000               	dw	0
  1398  017746  0000               	dw	0
  1399  017748  0000               	dw	0
  1400  01774A  0000               	dw	0
  1401  01774C  0000               	dw	0
  1402  01774E  0000               	dw	0
  1403  017750  0000               	dw	0
  1404  017752  0000               	dw	0
  1405  017754  0000               	dw	0
  1406  017756  0000               	dw	0
  1407  017758  0000               	dw	0
  1408  01775A  0000               	dw	0
  1409  01775C  0000               	dw	0
  1410  01775E  0000               	dw	0
  1411  017760  0000               	dw	0
  1412  017762  0000               	dw	0
  1413  017764  0000               	dw	0
  1414  017766  0000               	dw	0
  1415  017768  0000               	dw	0
  1416  01776A  00                 	db	0
  1417  01776B  01                 	db	1
  1418  01776C  0000               	dw	0
  1419  01776E  0000               	dw	0
  1420  017770  0000               	dw	0
  1421  017772  0000               	dw	0
  1422  017774  0000               	dw	0
  1423  017776  0000               	dw	0
  1424  017778  0000               	dw	0
  1425  01777A  0000               	dw	0
  1426  01777C  0000               	dw	0
  1427  01777E  0000               	dw	0
  1428  017780  0000               	dw	0
  1429  017782  00                 	db	0
  1430  017783  00                 	db	0
  1431  017784  0000               	dw	0
  1432  017786  3F80               	dw	16256
  1433  017788  0000               	dw	0
  1434  01778A  3F80               	dw	16256
  1435  01778C  00                 	db	0
  1436  01778D  00                 	db	0
  1437  01778E  00                 	db	0
  1438  01778F  00                 	db	0
  1439  017790  00                 	db	0
  1440  017791  00                 	db	0
  1441  017792  00                 	db	0
  1442  017793  00                 	db	0
  1443  017794  00                 	db	0
  1444  017795  00                 	db	0
  1445  017796  00                 	db	0
  1446  017797  00                 	db	0
  1447  017798  00                 	db	0
  1448  017799  00                 	db	0
  1449  01779A  00                 	db	0
  1450  01779B  00                 	db	0
  1451  01779C  00                 	db	0
  1452  01779D  00                 	db	0
  1453  01779E  00                 	db	0
  1454  01779F  00                 	db	0
  1455  0177A0  00                 	db	0
  1456  0177A1  00                 	db	0
  1457  0177A2  00                 	db	0
  1458  0177A3  00                 	db	0
  1459  0177A4  00                 	db	0
  1460  0177A5  00                 	db	0
  1461  0177A6  00                 	db	0
  1462  0177A7  00                 	db	0
  1463  0177A8  00                 	db	0
  1464  0177A9  00                 	db	0
  1465  0177AA  00                 	db	0
  1466  0177AB  00                 	db	0
  1467  0177AC  00                 	db	0
  1468  0177AD  00                 	db	0
  1469  0177AE  00                 	db	0
  1470  0177AF  00                 	db	0
  1471  0177B0  00                 	db	0
  1472  0177B1  00                 	db	0
  1473  0177B2  00                 	db	0
  1474  0177B3  00                 	db	0
  1475  0177B4  00                 	db	0
  1476  0177B5  00                 	db	0
  1477  0177B6  00                 	db	0
  1478  0177B7  00                 	db	0
  1479  0177B8  00                 	db	0
  1480  0177B9  00                 	db	0
  1481  0177BA  00                 	db	0
  1482  0177BB  00                 	db	0
  1483  0177BC  00                 	db	0
  1484  0177BD  00                 	db	0
  1485  0177BE  00                 	db	0
  1486  0177BF  00                 	db	0
  1487  0177C0  00                 	db	0
  1488  0177C1  00                 	db	0
  1489  0177C2  00                 	db	0
  1490  0177C3  00                 	db	0
  1491  0177C4  00                 	db	0
  1492  0177C5  00                 	db	0
  1493  0177C6  00                 	db	0
  1494  0177C7  00                 	db	0
  1495  0177C8  00                 	db	0
  1496  0177C9  00                 	db	0
  1497  0177CA  00                 	db	0
  1498  0177CB  00                 	db	0
  1499  0177CC  00                 	db	0
  1500  0177CD  00                 	db	0
  1501  0177CE  00                 	db	0
  1502  0177CF  00                 	db	0
  1503  0177D0  00                 	db	0
  1504  0177D1  00                 	db	0
  1505  0177D2  00                 	db	0
  1506  0177D3  00                 	db	0
  1507  0177D4  00                 	db	0
  1508  0177D5  00                 	db	0
  1509  0177D6  00                 	db	0
  1510  0177D7  00                 	db	0
  1511  0177D8  0000               	dw	0
  1512  0177DA  0000               	dw	0
  1513  0177DC  0000               	dw	0
  1514  0177DE  0000               	dw	0
  1515  0177E0  0000               	dw	0
  1516  0177E2  0000               	dw	0
  1517  0177E4  0000               	dw	0
  1518  0177E6  0000               	dw	0
  1519  0177E8  0000               	dw	0
  1520  0177EA  0000               	dw	0
  1521  0177EC  01                 	db	1
  1522  0177ED  00                 	db	0
  1523  0177EE  00                 	db	0
  1524  0177EF  00                 	db	0
  1525  0177F0  00                 	db	0
  1526  0177F1  00                 	db	0
  1527  0177F2  00                 	db	0
  1528  0177F3  00                 	db	0
  1529  0177F4  00                 	db	0
  1530                           
  1531                           	psect	idataBANK0
  1532  01DB7A                     __pidataBANK0:
  1533                           	opt callstack 0
  1534                           
  1535                           ;initializer for _H
  1536  01DB7A  00                 	db	0
  1537  01DB7B  00                 	db	0
  1538  01DB7C  01                 	db	1
  1539  01DB7D  00                 	db	0
  1540  01DB7E  01                 	db	1
  1541  01DB7F  00                 	db	0
  1542  01DB80  01                 	db	1
  1543  01DB81  00                 	db	0
  1544  01DB82  00                 	db	0
  1545                           
  1546                           	psect	idataBANK1
  1547  01BB70                     __pidataBANK1:
  1548                           	opt callstack 0
  1549                           
  1550                           ;initializer for stoa@F1166
  1551  01BB70  28                 	db	40
  1552  01BB71  6E                 	db	110
  1553  01BB72  75                 	db	117
  1554  01BB73  6C                 	db	108
  1555  01BB74  6C                 	db	108
  1556  01BB75  29                 	db	41
  1557  01BB76  00                 	db	0
  1558                           
  1559                           ;initializer for _R
  1560  01BB77  0000               	dw	0
  1561  01BB79  0000               	dw	0
  1562  01BB7B  0000               	dw	0
  1563  01BB7D  0000               	dw	0
  1564  01BB7F  0000               	dw	0
  1565  01BB81  0000               	dw	0
  1566  01BB83  0000               	dw	0
  1567  01BB85  0000               	dw	0
  1568  01BB87  0000               	dw	0
  1569  01BB89  0000               	dw	0
  1570  01BB8B  0000               	dw	0
  1571  01BB8D  0000               	dw	0
  1572  01BB8F  0000               	dw	0
  1573  01BB91  0000               	dw	0
  1574  01BB93  0000               	dw	0
  1575  01BB95  0000               	dw	0
  1576  01BB97  0000               	dw	0
  1577  01BB99  0000               	dw	0
  1578  01BB9B  0000               	dw	0
  1579  01BB9D  0F62               	dw	3938
  1580  01BB9F  0FA4               	dw	4004
  1581  01BBA1  89A0               	dw	35232
  1582  01BBA3  3DB0               	dw	15792
  1583  01BBA5  DEA4               	dw	56996
  1584  01BBA7  3D13               	dw	15635
  1585  01BBA9  00                 	db	0
  1586  01BBAA  0000               	dw	0
  1587  01BBAC  00                 	db	0
  1588  01BBAD  00                 	db	0
  1589  01BBAE  0000               	dw	0
  1590  01BBB0  0000               	dw	0
  1591  01BBB2  0000               	dw	0
  1592  01BBB4  0000               	dw	0
  1593  01BBB6  0000               	dw	0
  1594  01BBB8  0000               	dw	0
  1595  01BBBA  0000               	dw	0
  1596  01BBBC  0000               	dw	0
  1597  01BBBE  0000               	dw	0
  1598  01BBC0  0000               	dw	0
  1599  01BBC2  0000               	dw	0
  1600  01BBC4  00                 	db	0
  1601  01BBC5  00                 	db	0
  1602  01BBC6  0000               	dw	0
  1603  01BBC8  0000               	dw	0
  1604  01BBCA  0000               	dw	0
  1605  01BBCC  0000               	dw	0
  1606  01BBCE  0000               	dw	0
  1607  01BBD0  0000               	dw	0
  1608  01BBD2  0000               	dw	0
  1609  01BBD4  0000               	dw	0
  1610  01BBD6  0000               	dw	0
  1611  01BBD8  0000               	dw	0
  1612  01BBDA  0000               	dw	0
  1613  01BBDC  0000               	dw	0
  1614  01BBDE  0000               	dw	0
  1615  01BBE0  0000               	dw	0
  1616  01BBE2  0000               	dw	0
  1617  01BBE4  0000               	dw	0
  1618  01BBE6  0000               	dw	0
  1619  01BBE8  0000               	dw	0
  1620  01BBEA  0000               	dw	0
  1621  01BBEC  0000               	dw	0
  1622  01BBEE  0000               	dw	0
  1623  01BBF0  0000               	dw	0
  1624  01BBF2  0000               	dw	0
  1625  01BBF4  0000               	dw	0
  1626  01BBF6  0000               	dw	0
  1627  01BBF8  0000               	dw	0
  1628  01BBFA  0000               	dw	0
  1629  01BBFC  0000               	dw	0
  1630  01BBFE  0000               	dw	0
  1631  01BC00  0000               	dw	0
  1632  01BC02  0000               	dw	0
  1633  01BC04  0000               	dw	0
  1634  01BC06  0000               	dw	0
  1635  01BC08  0000               	dw	0
  1636  01BC0A  0000               	dw	0
  1637  01BC0C  0000               	dw	0
  1638  01BC0E  0000               	dw	0
  1639  01BC10  0000               	dw	0
  1640  01BC12  0000               	dw	0
  1641  01BC14  0000               	dw	0
  1642  01BC16  0000               	dw	0
  1643  01BC18  0000               	dw	0
  1644  01BC1A  00                 	db	0
  1645  01BC1B  1957               	dw	6487
  1646  01BC1D  42                 	db	66
  1647                           
  1648                           	psect	idataBANK2
  1649  01B7CA                     __pidataBANK2:
  1650                           	opt callstack 0
  1651                           
  1652                           ;initializer for _V
  1653  01B7CA  00                 	db	0
  1654  01B7CB  00                 	db	0
  1655  01B7CC  00                 	db	0
  1656  01B7CD  00                 	db	0
  1657  01B7CE  00                 	db	0
  1658  01B7CF  00                 	db	0
  1659  01B7D0  00                 	db	0
  1660  01B7D1  00                 	db	0
  1661  01B7D2  00                 	db	0
  1662  01B7D3  00                 	db	0
  1663  01B7D4  00                 	db	0
  1664  01B7D5  00                 	db	0
  1665  01B7D6  00                 	db	0
  1666  01B7D7  00                 	db	0
  1667  01B7D8  00                 	db	0
  1668  01B7D9  00                 	db	0
  1669  01B7DA  00                 	db	0
  1670  01B7DB  00                 	db	0
  1671  01B7DC  00                 	db	0
  1672  01B7DD  00                 	db	0
  1673  01B7DE  00                 	db	0
  1674  01B7DF  00                 	db	0
  1675  01B7E0  00                 	db	0
  1676  01B7E1  00                 	db	0
  1677  01B7E2  00                 	db	0
  1678  01B7E3  00                 	db	0
  1679  01B7E4  00                 	db	0
  1680  01B7E5  00                 	db	0
  1681  01B7E6  00                 	db	0
  1682  01B7E7  00                 	db	0
  1683  01B7E8  00                 	db	0
  1684  01B7E9  00                 	db	0
  1685  01B7EA  00                 	db	0
  1686  01B7EB  00                 	db	0
  1687  01B7EC  00                 	db	0
  1688  01B7ED  00                 	db	0
  1689  01B7EE  00                 	db	0
  1690  01B7EF  00                 	db	0
  1691  01B7F0  00                 	db	0
  1692  01B7F1  00                 	db	0
  1693  01B7F2  00                 	db	0
  1694  01B7F3  00                 	db	0
  1695  01B7F4  00                 	db	0
  1696  01B7F5  00                 	db	0
  1697  01B7F6  00                 	db	0
  1698  01B7F7  00                 	db	0
  1699  01B7F8  00                 	db	0
  1700  01B7F9  00                 	db	0
  1701  01B7FA  00                 	db	0
  1702  01B7FB  00                 	db	0
  1703  01B7FC  00                 	db	0
  1704  01B7FD  00                 	db	0
  1705  01B7FE  00                 	db	0
  1706  01B7FF  00                 	db	0
  1707  01B800  00                 	db	0
  1708  01B801  00                 	db	0
  1709  01B802  00                 	db	0
  1710  01B803  00                 	db	0
  1711  01B804  00                 	db	0
  1712  01B805  00                 	db	0
  1713  01B806  00                 	db	0
  1714  01B807  00                 	db	0
  1715  01B808  00                 	db	0
  1716  01B809  00                 	db	0
  1717  01B80A  00                 	db	0
  1718  01B80B  00                 	db	0
  1719  01B80C  00                 	db	0
  1720  01B80D  00                 	db	0
  1721  01B80E  00                 	db	0
  1722  01B80F  00                 	db	0
  1723  01B810  00                 	db	0
  1724  01B811  00                 	db	0
  1725  01B812  00                 	db	0
  1726  01B813  00                 	db	0
  1727  01B814  00                 	db	0
  1728  01B815  00                 	db	0
  1729  01B816  00                 	db	0
  1730  01B817  00                 	db	0
  1731  01B818  00                 	db	0
  1732  01B819  00                 	db	0
  1733  01B81A  00                 	db	0
  1734  01B81B  00                 	db	0
  1735  01B81C  00                 	db	0
  1736  01B81D  00                 	db	0
  1737  01B81E  00                 	db	0
  1738  01B81F  00                 	db	0
  1739  01B820  00                 	db	0
  1740  01B821  00                 	db	0
  1741  01B822  00                 	db	0
  1742  01B823  00                 	db	0
  1743  01B824  00                 	db	0
  1744  01B825  00                 	db	0
  1745  01B826  00                 	db	0
  1746  01B827  00                 	db	0
  1747  01B828  00                 	db	0
  1748  01B829  00                 	db	0
  1749  01B82A  00                 	db	0
  1750  01B82B  00                 	db	0
  1751  01B82C  00                 	db	0
  1752  01B82D  00                 	db	0
  1753  01B82E  00                 	db	0
  1754  01B82F  00                 	db	0
  1755  01B830  00                 	db	0
  1756  01B831  00                 	db	0
  1757  01B832  00                 	db	0
  1758  01B833  00                 	db	0
  1759  01B834  00                 	db	0
  1760  01B835  00                 	db	0
  1761  01B836  00                 	db	0
  1762  01B837  00                 	db	0
  1763  01B838  00                 	db	0
  1764  01B839  00                 	db	0
  1765  01B83A  00                 	db	0
  1766  01B83B  00                 	db	0
  1767  01B83C  00                 	db	0
  1768  01B83D  00                 	db	0
  1769  01B83E  00                 	db	0
  1770  01B83F  00                 	db	0
  1771  01B840  00                 	db	0
  1772  01B841  00                 	db	0
  1773  01B842  00                 	db	0
  1774  01B843  00                 	db	0
  1775  01B844  00                 	db	0
  1776  01B845  00                 	db	0
  1777  01B846  00                 	db	0
  1778  01B847  00                 	db	0
  1779  01B848  00                 	db	0
  1780  01B849  00                 	db	0
  1781  01B84A  00                 	db	0
  1782  01B84B  0000               	dw	0
  1783  01B84D  0000               	dw	0
  1784  01B84F  0000               	dw	0
  1785  01B851  0000               	dw	0
  1786  01B853  00                 	db	0
  1787  01B854  00                 	db	0
  1788  01B855  00                 	db	0
  1789  01B856  00                 	db	0
  1790  01B857  00                 	db	0
  1791  01B858  00                 	db	0
  1792  01B859  0000               	dw	0
  1793  01B85B  0000               	dw	0
  1794  01B85D  0000               	dw	0
  1795  01B85F  0000               	dw	0
  1796  01B861  0000               	dw	0
  1797  01B863  0000               	dw	0
  1798  01B865  00                 	db	0
  1799  01B866  00                 	db	0
  1800  01B867  00                 	db	0
  1801  01B868  00                 	db	0
  1802  01B869  00                 	db	0
  1803  01B86A  00                 	db	0
  1804  01B86B  00                 	db	0
  1805  01B86C  00                 	db	0
  1806  01B86D  00                 	db	0
  1807  01B86E  00                 	db	0
  1808  01B86F  00                 	db	0
  1809  01B870  0000               	dw	0
  1810  01B872  0000               	dw	0
  1811  01B874  2D                 	db	45
  1812  01B875  00                 	db	0
  1813  01B876  00                 	db	0
  1814  01B877  00                 	db	0
  1815  01B878  00                 	db	0
  1816  01B879  00                 	db	0
  1817  01B87A  0000               	dw	0
  1818  01B87C  0000               	dw	0
  1819  01B87E  0000               	dw	0
  1820  01B880  0000               	dw	0
  1821  01B882  0000               	dw	0
  1822  01B884  0000               	dw	0
  1823  01B886  0000               	dw	0
  1824  01B888  0000               	dw	0
  1825                           
  1826                           	psect	mediumconst
  1827  00F87C                     __pmediumconst:
  1828                           	opt callstack 0
  1829  00F87C  00                 	db	0
  1830  00F87D                     _BVSOC_TABLE:
  1831                           	opt callstack 0
  1832  00F87D  59D8               	dw	23000
  1833  00F87F  0000               	dw	0
  1834  00F881  0005               	dw	5
  1835  00F883  0000               	dw	0
  1836  00F885  5B68               	dw	23400
  1837  00F887  0000               	dw	0
  1838  00F889  000A               	dw	10
  1839  00F88B  0000               	dw	0
  1840  00F88D  5C30               	dw	23600
  1841  00F88F  0000               	dw	0
  1842  00F891  0014               	dw	20
  1843  00F893  0000               	dw	0
  1844  00F895  5E38               	dw	24120
  1845  00F897  0000               	dw	0
  1846  00F899  0019               	dw	25
  1847  00F89B  0000               	dw	0
  1848  00F89D  5E88               	dw	24200
  1849  00F89F  0000               	dw	0
  1850  00F8A1  001E               	dw	30
  1851  00F8A3  0000               	dw	0
  1852  00F8A5  5F78               	dw	24440
  1853  00F8A7  0000               	dw	0
  1854  00F8A9  0028               	dw	40
  1855  00F8AB  0000               	dw	0
  1856  00F8AD  5FDC               	dw	24540
  1857  00F8AF  0000               	dw	0
  1858  00F8B1  002D               	dw	45
  1859  00F8B3  0000               	dw	0
  1860  00F8B5  6018               	dw	24600
  1861  00F8B7  0000               	dw	0
  1862  00F8B9  0032               	dw	50
  1863  00F8BB  0000               	dw	0
  1864  00F8BD  6046               	dw	24646
  1865  00F8BF  0000               	dw	0
  1866  00F8C1  0035               	dw	53
  1867  00F8C3  0000               	dw	0
  1868  00F8C5  607C               	dw	24700
  1869  00F8C7  0000               	dw	0
  1870  00F8C9  0037               	dw	55
  1871  00F8CB  0000               	dw	0
  1872  00F8CD  60AE               	dw	24750
  1873  00F8CF  0000               	dw	0
  1874  00F8D1  0039               	dw	57
  1875  00F8D3  0000               	dw	0
  1876  00F8D5  60E0               	dw	24800
  1877  00F8D7  0000               	dw	0
  1878  00F8D9  003C               	dw	60
  1879  00F8DB  0000               	dw	0
  1880  00F8DD  6112               	dw	24850
  1881  00F8DF  0000               	dw	0
  1882  00F8E1  003F               	dw	63
  1883  00F8E3  0000               	dw	0
  1884  00F8E5  615D               	dw	24925
  1885  00F8E7  0000               	dw	0
  1886  00F8E9  0043               	dw	67
  1887  00F8EB  0000               	dw	0
  1888  00F8ED  61A8               	dw	25000
  1889  00F8EF  0000               	dw	0
  1890  00F8F1  0046               	dw	70
  1891  00F8F3  0000               	dw	0
  1892  00F8F5  61BC               	dw	25020
  1893  00F8F7  0000               	dw	0
  1894  00F8F9  0048               	dw	72
  1895  00F8FB  0000               	dw	0
  1896  00F8FD  61D0               	dw	25040
  1897  00F8FF  0000               	dw	0
  1898  00F901  004B               	dw	75
  1899  00F903  0000               	dw	0
  1900  00F905  61DA               	dw	25050
  1901  00F907  0000               	dw	0
  1902  00F909  0050               	dw	80
  1903  00F90B  0000               	dw	0
  1904  00F90D  61E4               	dw	25060
  1905  00F90F  0000               	dw	0
  1906  00F911  0055               	dw	85
  1907  00F913  0000               	dw	0
  1908  00F915  61F8               	dw	25080
  1909  00F917  0000               	dw	0
  1910  00F919  005A               	dw	90
  1911  00F91B  0000               	dw	0
  1912  00F91D  6208               	dw	25096
  1913  00F91F  0000               	dw	0
  1914  00F921  005C               	dw	92
  1915  00F923  0000               	dw	0
  1916  00F925  6222               	dw	25122
  1917  00F927  0000               	dw	0
  1918  00F929  005D               	dw	93
  1919  00F92B  0000               	dw	0
  1920  00F92D  6234               	dw	25140
  1921  00F92F  0000               	dw	0
  1922  00F931  005F               	dw	95
  1923  00F933  0000               	dw	0
  1924  00F935  6248               	dw	25160
  1925  00F937  0000               	dw	0
  1926  00F939  0061               	dw	97
  1927  00F93B  0000               	dw	0
  1928  00F93D  625C               	dw	25180
  1929  00F93F  0000               	dw	0
  1930  00F941  0064               	dw	100
  1931  00F943  0000               	dw	0
  1932  00F945  6784               	dw	26500
  1933  00F947  0000               	dw	0
  1934  00F949  0062               	dw	98
  1935  00F94B  0000               	dw	0
  1936  00F94D                     __end_of_BVSOC_TABLE:
  1937                           	opt callstack 0
  1938  00F94D                     _T:
  1939                           	opt callstack 0
  1940  00F94D  63                 	db	99
  1941  00F94E  6F                 	db	111
  1942  00F94F  6D                 	db	109
  1943  00F950  6D                 	db	109
  1944  00F951  61                 	db	97
  1945  00F952  6E                 	db	110
  1946  00F953  64                 	db	100
  1947  00F954  73                 	db	115
  1948  00F955  20                 	db	32
  1949  00F956  31                 	db	49
  1950  00F957  00                 	db	0
  1951  00F958  00                 	db	0
  1952  00F959  00                 	db	0
  1953  00F95A  00                 	db	0
  1954  00F95B  00                 	db	0
  1955  00F95C  00                 	db	0
  1956  00F95D  00                 	db	0
  1957  00F95E  00                 	db	0
  1958  00F95F  64                 	db	100
  1959  00F960  69                 	db	105
  1960  00F961  73                 	db	115
  1961  00F962  70                 	db	112
  1962  00F963  6C                 	db	108
  1963  00F964  61                 	db	97
  1964  00F965  79                 	db	121
  1965  00F966  73                 	db	115
  1966  00F967  20                 	db	32
  1967  00F968  31                 	db	49
  1968  00F969  00                 	db	0
  1969  00F96A  00                 	db	0
  1970  00F96B  00                 	db	0
  1971  00F96C  00                 	db	0
  1972  00F96D  00                 	db	0
  1973  00F96E  00                 	db	0
  1974  00F96F  00                 	db	0
  1975  00F970  00                 	db	0
  1976  00F971  63                 	db	99
  1977  00F972  6F                 	db	111
  1978  00F973  6D                 	db	109
  1979  00F974  6D                 	db	109
  1980  00F975  61                 	db	97
  1981  00F976  6E                 	db	110
  1982  00F977  64                 	db	100
  1983  00F978  73                 	db	115
  1984  00F979  20                 	db	32
  1985  00F97A  32                 	db	50
  1986  00F97B  00                 	db	0
  1987  00F97C  00                 	db	0
  1988  00F97D  00                 	db	0
  1989  00F97E  00                 	db	0
  1990  00F97F  00                 	db	0
  1991  00F980  00                 	db	0
  1992  00F981  00                 	db	0
  1993  00F982  00                 	db	0
  1994  00F983  64                 	db	100
  1995  00F984  69                 	db	105
  1996  00F985  73                 	db	115
  1997  00F986  70                 	db	112
  1998  00F987  6C                 	db	108
  1999  00F988  61                 	db	97
  2000  00F989  79                 	db	121
  2001  00F98A  73                 	db	115
  2002  00F98B  20                 	db	32
  2003  00F98C  32                 	db	50
  2004  00F98D  00                 	db	0
  2005  00F98E  00                 	db	0
  2006  00F98F  00                 	db	0
  2007  00F990  00                 	db	0
  2008  00F991  00                 	db	0
  2009  00F992  00                 	db	0
  2010  00F993  00                 	db	0
  2011  00F994  00                 	db	0
  2012  00F995  63                 	db	99
  2013  00F996  6F                 	db	111
  2014  00F997  6D                 	db	109
  2015  00F998  6D                 	db	109
  2016  00F999  61                 	db	97
  2017  00F99A  6E                 	db	110
  2018  00F99B  64                 	db	100
  2019  00F99C  73                 	db	115
  2020  00F99D  20                 	db	32
  2021  00F99E  33                 	db	51
  2022  00F99F  00                 	db	0
  2023  00F9A0  00                 	db	0
  2024  00F9A1  00                 	db	0
  2025  00F9A2  00                 	db	0
  2026  00F9A3  00                 	db	0
  2027  00F9A4  00                 	db	0
  2028  00F9A5  00                 	db	0
  2029  00F9A6  00                 	db	0
  2030  00F9A7  64                 	db	100
  2031  00F9A8  69                 	db	105
  2032  00F9A9  73                 	db	115
  2033  00F9AA  70                 	db	112
  2034  00F9AB  6C                 	db	108
  2035  00F9AC  61                 	db	97
  2036  00F9AD  79                 	db	121
  2037  00F9AE  73                 	db	115
  2038  00F9AF  20                 	db	32
  2039  00F9B0  33                 	db	51
  2040  00F9B1  00                 	db	0
  2041  00F9B2  00                 	db	0
  2042  00F9B3  00                 	db	0
  2043  00F9B4  00                 	db	0
  2044  00F9B5  00                 	db	0
  2045  00F9B6  00                 	db	0
  2046  00F9B7  00                 	db	0
  2047  00F9B8  00                 	db	0
  2048  00F9B9  63                 	db	99
  2049  00F9BA  6F                 	db	111
  2050  00F9BB  6D                 	db	109
  2051  00F9BC  6D                 	db	109
  2052  00F9BD  61                 	db	97
  2053  00F9BE  6E                 	db	110
  2054  00F9BF  64                 	db	100
  2055  00F9C0  73                 	db	115
  2056  00F9C1  20                 	db	32
  2057  00F9C2  34                 	db	52
  2058  00F9C3  00                 	db	0
  2059  00F9C4  00                 	db	0
  2060  00F9C5  00                 	db	0
  2061  00F9C6  00                 	db	0
  2062  00F9C7  00                 	db	0
  2063  00F9C8  00                 	db	0
  2064  00F9C9  00                 	db	0
  2065  00F9CA  00                 	db	0
  2066  00F9CB  64                 	db	100
  2067  00F9CC  69                 	db	105
  2068  00F9CD  73                 	db	115
  2069  00F9CE  70                 	db	112
  2070  00F9CF  6C                 	db	108
  2071  00F9D0  61                 	db	97
  2072  00F9D1  79                 	db	121
  2073  00F9D2  73                 	db	115
  2074  00F9D3  20                 	db	32
  2075  00F9D4  34                 	db	52
  2076  00F9D5  00                 	db	0
  2077  00F9D6  00                 	db	0
  2078  00F9D7  00                 	db	0
  2079  00F9D8  00                 	db	0
  2080  00F9D9  00                 	db	0
  2081  00F9DA  00                 	db	0
  2082  00F9DB  00                 	db	0
  2083  00F9DC  00                 	db	0
  2084  00F9DD                     __end_of_T:
  2085                           	opt callstack 0
  2086  00F9DD                     _spin:
  2087                           	opt callstack 0
  2088  00F9DD  7C                 	db	124
  2089  00F9DE  7C                 	db	124
  2090  00F9DF  2F                 	db	47
  2091  00F9E0  2F                 	db	47
  2092  00F9E1  2D                 	db	45
  2093  00F9E2  2D                 	db	45
  2094  00F9E3  00                 	db	0
  2095  00F9E4  00                 	db	0
  2096  00F9E5  00                 	db	0
  2097  00F9E6  00                 	db	0
  2098  00F9E7  00                 	db	0
  2099  00F9E8  00                 	db	0
  2100  00F9E9  00                 	db	0
  2101  00F9EA  00                 	db	0
  2102  00F9EB  00                 	db	0
  2103  00F9EC  00                 	db	0
  2104  00F9ED  00                 	db	0
  2105  00F9EE  00                 	db	0
  2106  00F9EF  00                 	db	0
  2107  00F9F0  00                 	db	0
  2108  00F9F1  7C                 	db	124
  2109  00F9F2  7C                 	db	124
  2110  00F9F3  2F                 	db	47
  2111  00F9F4  2F                 	db	47
  2112  00F9F5  2D                 	db	45
  2113  00F9F6  2D                 	db	45
  2114  00F9F7  5C                 	db	92
  2115  00F9F8  5C                 	db	92
  2116  00F9F9  00                 	db	0
  2117  00F9FA  00                 	db	0
  2118  00F9FB  00                 	db	0
  2119  00F9FC  00                 	db	0
  2120  00F9FD  00                 	db	0
  2121  00F9FE  00                 	db	0
  2122  00F9FF  00                 	db	0
  2123  00FA00  00                 	db	0
  2124  00FA01  00                 	db	0
  2125  00FA02  00                 	db	0
  2126  00FA03  00                 	db	0
  2127  00FA04  00                 	db	0
  2128  00FA05  4F                 	db	79
  2129  00FA06  4F                 	db	79
  2130  00FA07  4F                 	db	79
  2131  00FA08  4F                 	db	79
  2132  00FA09  4F                 	db	79
  2133  00FA0A  4F                 	db	79
  2134  00FA0B  2D                 	db	45
  2135  00FA0C  2D                 	db	45
  2136  00FA0D  5F                 	db	95
  2137  00FA0E  5F                 	db	95
  2138  00FA0F  2D                 	db	45
  2139  00FA10  00                 	db	0
  2140  00FA11  00                 	db	0
  2141  00FA12  00                 	db	0
  2142  00FA13  00                 	db	0
  2143  00FA14  00                 	db	0
  2144  00FA15  00                 	db	0
  2145  00FA16  00                 	db	0
  2146  00FA17  00                 	db	0
  2147  00FA18  00                 	db	0
  2148  00FA19  76                 	db	118
  2149  00FA1A  76                 	db	118
  2150  00FA1B  3C                 	db	60
  2151  00FA1C  3C                 	db	60
  2152  00FA1D  5E                 	db	94
  2153  00FA1E  5E                 	db	94
  2154  00FA1F  3E                 	db	62
  2155  00FA20  3E                 	db	62
  2156  00FA21  00                 	db	0
  2157  00FA22  00                 	db	0
  2158  00FA23  00                 	db	0
  2159  00FA24  00                 	db	0
  2160  00FA25  00                 	db	0
  2161  00FA26  00                 	db	0
  2162  00FA27  00                 	db	0
  2163  00FA28  00                 	db	0
  2164  00FA29  00                 	db	0
  2165  00FA2A  00                 	db	0
  2166  00FA2B  00                 	db	0
  2167  00FA2C  00                 	db	0
  2168  00FA2D  2E                 	db	46
  2169  00FA2E  2E                 	db	46
  2170  00FA2F  2A                 	db	42
  2171  00FA30  2A                 	db	42
  2172  00FA31  78                 	db	120
  2173  00FA32  23                 	db	35
  2174  00FA33  78                 	db	120
  2175  00FA34  23                 	db	35
  2176  00FA35  58                 	db	88
  2177  00FA36  58                 	db	88
  2178  00FA37  7C                 	db	124
  2179  00FA38  7C                 	db	124
  2180  00FA39  2D                 	db	45
  2181  00FA3A  2D                 	db	45
  2182  00FA3B  00                 	db	0
  2183  00FA3C  00                 	db	0
  2184  00FA3D  00                 	db	0
  2185  00FA3E  00                 	db	0
  2186  00FA3F  00                 	db	0
  2187  00FA40  00                 	db	0
  2188  00FA41  2E                 	db	46
  2189  00FA42  2E                 	db	46
  2190  00FA43  6F                 	db	111
  2191  00FA44  6F                 	db	111
  2192  00FA45  4F                 	db	79
  2193  00FA46  4F                 	db	79
  2194  00FA47  6F                 	db	111
  2195  00FA48  6F                 	db	111
  2196  00FA49  00                 	db	0
  2197  00FA4A  00                 	db	0
  2198  00FA4B  00                 	db	0
  2199  00FA4C  00                 	db	0
  2200  00FA4D  00                 	db	0
  2201  00FA4E  00                 	db	0
  2202  00FA4F  00                 	db	0
  2203  00FA50  00                 	db	0
  2204  00FA51  00                 	db	0
  2205  00FA52  00                 	db	0
  2206  00FA53  00                 	db	0
  2207  00FA54  00                 	db	0
  2208  00FA55                     __end_of_spin:
  2209                           	opt callstack 0
  2210  00FA55  0000               	dw	0
  2211  00FA57  3F80               	dw	16256
  2212  00FA59  0000               	dw	0
  2213  00FA5B  3FC0               	dw	16320
  2214  00FA5D                     __end_of_bp:
  2215                           	opt callstack 0
  2216  00FA5D  AA00               	dw	43520
  2217  00FA5F  3FB8               	dw	16312
  2218  00FA61                     __end_of_ivln2_h:
  2219                           	opt callstack 0
  2220  00FA61  23C6               	dw	9158
  2221  00FA63  B8F6               	dw	47350
  2222  00FA65                     __end_of_cp_l:
  2223                           	opt callstack 0
  2224  00FA65  4000               	dw	16384
  2225  00FA67  3F76               	dw	16246
  2226  00FA69                     __end_of_cp_h:
  2227                           	opt callstack 0
  2228  0000                     _IVTADL	set	14493
  2229  0000                     _IVTADH	set	14494
  2230  0000                     _IVTADU	set	14495
  2231  0000                     _CRCDATH	set	14689
  2232  0000                     _CRCDATL	set	14688
  2233  0000                     _CRCCON0bits	set	14696
  2234  0000                     _CRCCON1bits	set	14697
  2235  0000                     _CRCXORL	set	14694
  2236  0000                     _CRCXORH	set	14695
  2237  0000                     _SCANTRIG	set	14717
  2238  0000                     _SCANHADRL	set	14713
  2239  0000                     _SCANHADRH	set	14714
  2240  0000                     _SCANHADRU	set	14715
  2241  0000                     _SCANLADRL	set	14710
  2242  0000                     _SCANLADRH	set	14711
  2243  0000                     _SCANLADRU	set	14712
  2244  0000                     _SCANCON0	set	14716
  2245  0000                     _CRCACCH	set	14691
  2246  0000                     _CRCACCL	set	14690
  2247  0000                     _CRCCON1	set	14697
  2248  0000                     _CRCCON0	set	14696
  2249  0000                     _PIR6bits	set	14758
  2250  0000                     _PIR4bits	set	14756
  2251  0000                     _PIE8bits	set	14744
  2252  0000                     _PIR8bits	set	14760
  2253  0000                     _PIR0bits	set	14752
  2254  0000                     _NVMCON2	set	14822
  2255  0000                     _NVMDAT	set	14819
  2256  0000                     _NVMADRL	set	14816
  2257  0000                     _NVMADRH	set	14817
  2258  0000                     _NVMCON1bits	set	14821
  2259  0000                     _SCANPR	set	14839
  2260  0000                     _DMA2PR	set	14836
  2261  0000                     _DMA1PR	set	14835
  2262  0000                     _MAINPR	set	14834
  2263  0000                     _ISRPR	set	14833
  2264  0000                     _PIE2bits	set	14738
  2265  0000                     _PIR2bits	set	14754
  2266  0000                     _PIE9bits	set	14745
  2267  0000                     _PIR9bits	set	14761
  2268  0000                     _PIE6bits	set	14742
  2269  0000                     _PIE3bits	set	14739
  2270  0000                     _PMD7	set	14791
  2271  0000                     _PMD6	set	14790
  2272  0000                     _PMD5	set	14789
  2273  0000                     _PMD4	set	14788
  2274  0000                     _PMD3	set	14787
  2275  0000                     _PMD2	set	14786
  2276  0000                     _PMD1	set	14785
  2277  0000                     _PMD0	set	14784
  2278  0000                     _OSCTUNE	set	14814
  2279  0000                     _OSCFRQ	set	14815
  2280  0000                     _OSCEN	set	14813
  2281  0000                     _OSCCON3	set	14811
  2282  0000                     _OSCCON1	set	14809
  2283  0000                     _IPR8bits	set	14728
  2284  0000                     _IPR9bits	set	14729
  2285  0000                     _IPR5bits	set	14725
  2286  0000                     _IPR1bits	set	14721
  2287  0000                     _IPR3bits	set	14723
  2288  0000                     _IPR6bits	set	14726
  2289  0000                     _IPR2bits	set	14722
  2290  0000                     _PIE5bits	set	14741
  2291  0000                     _PIE1bits	set	14737
  2292  0000                     _PIR5bits	set	14757
  2293  0000                     _PIR1bits	set	14753
  2294  0000                     _PLLR	set	118496
  2295  0000                     _SPI1SDIPPS	set	15071
  2296  0000                     _U1RXPPS	set	15077
  2297  0000                     _RC6PPS	set	14870
  2298  0000                     _RC5PPS	set	14869
  2299  0000                     _INT1PPS	set	15041
  2300  0000                     _RD1PPS	set	14873
  2301  0000                     _INT0PPS	set	15040
  2302  0000                     _RC3PPS	set	14867
  2303  0000                     _RB6PPS	set	14862
  2304  0000                     _SPI1SCKPPS	set	15070
  2305  0000                     _U2RXPPS	set	15080
  2306  0000                     _SLRCONF	set	14995
  2307  0000                     _SLRCONE	set	14979
  2308  0000                     _SLRCOND	set	14963
  2309  0000                     _SLRCONC	set	14947
  2310  0000                     _SLRCONB	set	14931
  2311  0000                     _SLRCONA	set	14915
  2312  0000                     _ODCOND	set	14962
  2313  0000                     _ODCONC	set	14946
  2314  0000                     _ODCONB	set	14930
  2315  0000                     _ODCONA	set	14914
  2316  0000                     _ODCONF	set	14994
  2317  0000                     _ODCONE	set	14978
  2318  0000                     _WPUC	set	14945
  2319  0000                     _WPUA	set	14913
  2320  0000                     _WPUB	set	14929
  2321  0000                     _WPUE	set	14977
  2322  0000                     _WPUF	set	14993
  2323  0000                     _WPUD	set	14961
  2324  0000                     _ANSELA	set	14912
  2325  0000                     _ANSELF	set	14992
  2326  0000                     _ANSELE	set	14976
  2327  0000                     _ANSELB	set	14928
  2328  0000                     _ANSELC	set	14944
  2329  0000                     _ANSELD	set	14960
  2330  0000                     _DMA2SSA	set	15321
  2331  0000                     _DMA1SSA	set	15353
  2332  0000                     _DMA2DSZ	set	15310
  2333  0000                     _DMA2SSZ	set	15319
  2334  0000                     _DMA2DSA	set	15312
  2335  0000                     _DMA1DSZ	set	15342
  2336  0000                     _DMA1SSZ	set	15351
  2337  0000                     _DMA1DSA	set	15344
  2338  0000                     _DMA2CON0bits	set	15324
  2339  0000                     _DMA2CON1bits	set	15325
  2340  0000                     _DMA1CON0bits	set	15356
  2341  0000                     _DMA1CON1bits	set	15357
  2342  0000                     _DMA2CON0	set	15324
  2343  0000                     _DMA2AIRQ	set	15326
  2344  0000                     _DMA2SIRQ	set	15327
  2345  0000                     _DMA2CON1	set	15325
  2346  0000                     _DMA1CON0	set	15356
  2347  0000                     _DMA1AIRQ	set	15358
  2348  0000                     _DMA1SIRQ	set	15359
  2349  0000                     _DMA1CON1	set	15357
  2350  0000                     _CLKRCON	set	15589
  2351  0000                     _CLKRCLK	set	15590
  2352  0000                     _SPI1CON1bits	set	15637
  2353  0000                     _SPI1STATUSbits	set	15639
  2354  0000                     _SPI1INTFbits	set	15642
  2355  0000                     _SPI1CON0bits	set	15636
  2356  0000                     _SPI1RXB	set	15632
  2357  0000                     _SPI1TXB	set	15633
  2358  0000                     _SPI1TCNTL	set	15634
  2359  0000                     _SPI1CON0	set	15636
  2360  0000                     _SPI1CLK	set	15644
  2361  0000                     _SPI1BAUD	set	15641
  2362  0000                     _SPI1CON2	set	15638
  2363  0000                     _SPI1CON1	set	15637
  2364  0000                     _U2RXB	set	15824
  2365  0000                     _U2TXB	set	15826
  2366  0000                     _U2ERRIE	set	15842
  2367  0000                     _U2ERRIR	set	15841
  2368  0000                     _U2UIR	set	15840
  2369  0000                     _U2FIFO	set	15839
  2370  0000                     _U2BRGH	set	15838
  2371  0000                     _U2BRGL	set	15837
  2372  0000                     _U2CON2	set	15836
  2373  0000                     _U2CON1	set	15835
  2374  0000                     _U2CON0	set	15834
  2375  0000                     _U2P3L	set	15832
  2376  0000                     _U2P2L	set	15830
  2377  0000                     _U2P1L	set	15828
  2378  0000                     _U1RXB	set	15848
  2379  0000                     _U1ERRIE	set	15866
  2380  0000                     _U1ERRIR	set	15865
  2381  0000                     _U1UIR	set	15864
  2382  0000                     _U1FIFO	set	15863
  2383  0000                     _U1BRGH	set	15862
  2384  0000                     _U1BRGL	set	15861
  2385  0000                     _U1CON2	set	15860
  2386  0000                     _U1CON1	set	15859
  2387  0000                     _U1CON0	set	15858
  2388  0000                     _U1P3H	set	15857
  2389  0000                     _U1P3L	set	15856
  2390  0000                     _U1P2H	set	15855
  2391  0000                     _U1P2L	set	15854
  2392  0000                     _U1P1H	set	15853
  2393  0000                     _U1P1L	set	15852
  2394  0000                     _FVRCON	set	16065
  2395  0000                     _ADFLTRL	set	16102
  2396  0000                     _ADFLTRH	set	16103
  2397  0000                     _ADCON0bits	set	16120
  2398  0000                     _ADCON0	set	16120
  2399  0000                     _ADCLK	set	16127
  2400  0000                     _ADACT	set	16126
  2401  0000                     _ADREF	set	16125
  2402  0000                     _ADSTAT	set	16124
  2403  0000                     _ADCON3	set	16123
  2404  0000                     _ADCON2	set	16122
  2405  0000                     _ADCON1	set	16121
  2406  0000                     _ADPREH	set	16119
  2407  0000                     _ADPREL	set	16118
  2408  0000                     _ADCAP	set	16117
  2409  0000                     _ADACQH	set	16116
  2410  0000                     _ADACQL	set	16115
  2411  0000                     _ADPCH	set	16113
  2412  0000                     _ADRPT	set	16108
  2413  0000                     _ADACCU	set	16106
  2414  0000                     _ADSTPTH	set	16101
  2415  0000                     _ADSTPTL	set	16100
  2416  0000                     _ADUTHH	set	16097
  2417  0000                     _ADUTHL	set	16096
  2418  0000                     _ADLTHH	set	16095
  2419  0000                     _ADLTHL	set	16094
  2420  0000                     _CCPTMRS1bits	set	16223
  2421  0000                     _PORTDbits	set	16333
  2422  0000                     _PORTFbits	set	16335
  2423  0000                     _LATFbits	set	16319
  2424  0000                     _LATCbits	set	16316
  2425  0000                     _LATDbits	set	16317
  2426  0000                     _PORTBbits	set	16331
  2427  0000                     _T3CONbits	set	16294
  2428  0000                     _T3CON	set	16294
  2429  0000                     _TMR3L	set	16292
  2430  0000                     _TMR3H	set	16293
  2431  0000                     _T3CLK	set	16297
  2432  0000                     _T3GATE	set	16296
  2433  0000                     _T3GCON	set	16295
  2434  0000                     _T2CON	set	16300
  2435  0000                     _T2TMR	set	16298
  2436  0000                     _T2PR	set	16299
  2437  0000                     _T2RST	set	16303
  2438  0000                     _T2HLT	set	16301
  2439  0000                     _T2CLKCON	set	16302
  2440  0000                     _PWM8DCL	set	16224
  2441  0000                     _PWM8DCH	set	16225
  2442  0000                     _PWM8CON	set	16226
  2443  0000                     _LATEbits	set	16318
  2444  0000                     _T5CONbits	set	16282
  2445  0000                     _T5CON	set	16282
  2446  0000                     _TMR5L	set	16280
  2447  0000                     _TMR5H	set	16281
  2448  0000                     _T5CLK	set	16285
  2449  0000                     _T5GATE	set	16284
  2450  0000                     _T5GCON	set	16283
  2451  0000                     _T6CON	set	16276
  2452  0000                     _T6TMR	set	16274
  2453  0000                     _T6PR	set	16275
  2454  0000                     _T6RST	set	16279
  2455  0000                     _T6HLT	set	16277
  2456  0000                     _T6CLKCON	set	16278
  2457  0000                     _TRISD	set	16325
  2458  0000                     _TRISC	set	16324
  2459  0000                     _TRISB	set	16323
  2460  0000                     _TRISA	set	16322
  2461  0000                     _TRISF	set	16327
  2462  0000                     _TRISE	set	16326
  2463  0000                     _LATC	set	16316
  2464  0000                     _LATB	set	16315
  2465  0000                     _LATF	set	16319
  2466  0000                     _LATA	set	16314
  2467  0000                     _LATD	set	16317
  2468  0000                     _LATE	set	16318
  2469  0000                     _IVTLOCKbits	set	16340
  2470  0000                     _IVTLOCK	set	16340
  2471  0000                     _INTCON0bits	set	16338
  2472  0000                     _GIE	set	130711
  2473  00FA69                     STR_93:
  2474                           
  2475                           ; BSR set to: 57
  2476  00FA69  20                 	db	32
  2477  00FA6A  25                 	db	37
  2478  00FA6B  63                 	db	99	;'c'
  2479  00FA6C  20                 	db	32
  2480  00FA6D  2C                 	db	44
  2481  00FA6E  25                 	db	37
  2482  00FA6F  6C                 	db	108	;'l'
  2483  00FA70  75                 	db	117	;'u'
  2484  00FA71  2C                 	db	44
  2485  00FA72  25                 	db	37
  2486  00FA73  34                 	db	52	;'4'
  2487  00FA74  2E                 	db	46
  2488  00FA75  34                 	db	52	;'4'
  2489  00FA76  66                 	db	102	;'f'
  2490  00FA77  2C                 	db	44
  2491  00FA78  25                 	db	37
  2492  00FA79  34                 	db	52	;'4'
  2493  00FA7A  2E                 	db	46
  2494  00FA7B  34                 	db	52	;'4'
  2495  00FA7C  66                 	db	102	;'f'
  2496  00FA7D  2C                 	db	44
  2497  00FA7E  25                 	db	37
  2498  00FA7F  34                 	db	52	;'4'
  2499  00FA80  2E                 	db	46
  2500  00FA81  34                 	db	52	;'4'
  2501  00FA82  66                 	db	102	;'f'
  2502  00FA83  2C                 	db	44
  2503  00FA84  25                 	db	37
  2504  00FA85  34                 	db	52	;'4'
  2505  00FA86  2E                 	db	46
  2506  00FA87  34                 	db	52	;'4'
  2507  00FA88  66                 	db	102	;'f'
  2508  00FA89  2C                 	db	44
  2509  00FA8A  25                 	db	37
  2510  00FA8B  34                 	db	52	;'4'
  2511  00FA8C  2E                 	db	46
  2512  00FA8D  34                 	db	52	;'4'
  2513  00FA8E  66                 	db	102	;'f'
  2514  00FA8F  2C                 	db	44
  2515  00FA90  25                 	db	37
  2516  00FA91  34                 	db	52	;'4'
  2517  00FA92  2E                 	db	46
  2518  00FA93  33                 	db	51	;'3'
  2519  00FA94  66                 	db	102	;'f'
  2520  00FA95  2C                 	db	44
  2521  00FA96  25                 	db	37
  2522  00FA97  34                 	db	52	;'4'
  2523  00FA98  2E                 	db	46
  2524  00FA99  33                 	db	51	;'3'
  2525  00FA9A  66                 	db	102	;'f'
  2526  00FA9B  2C                 	db	44
  2527  00FA9C  25                 	db	37
  2528  00FA9D  34                 	db	52	;'4'
  2529  00FA9E  2E                 	db	46
  2530  00FA9F  33                 	db	51	;'3'
  2531  00FAA0  66                 	db	102	;'f'
  2532  00FAA1  2C                 	db	44
  2533  00FAA2  25                 	db	37
  2534  00FAA3  34                 	db	52	;'4'
  2535  00FAA4  2E                 	db	46
  2536  00FAA5  33                 	db	51	;'3'
  2537  00FAA6  66                 	db	102	;'f'
  2538  00FAA7  2C                 	db	44
  2539  00FAA8  25                 	db	37
  2540  00FAA9  34                 	db	52	;'4'
  2541  00FAAA  2E                 	db	46
  2542  00FAAB  33                 	db	51	;'3'
  2543  00FAAC  66                 	db	102	;'f'
  2544  00FAAD  2C                 	db	44
  2545  00FAAE  25                 	db	37
  2546  00FAAF  34                 	db	52	;'4'
  2547  00FAB0  2E                 	db	46
  2548  00FAB1  33                 	db	51	;'3'
  2549  00FAB2  66                 	db	102	;'f'
  2550  00FAB3  2C                 	db	44
  2551  00FAB4  25                 	db	37
  2552  00FAB5  64                 	db	100	;'d'
  2553  00FAB6  2C                 	db	44
  2554  00FAB7  25                 	db	37
  2555  00FAB8  64                 	db	100	;'d'
  2556  00FAB9  2C                 	db	44
  2557  00FABA  25                 	db	37
  2558  00FABB  32                 	db	50	;'2'
  2559  00FABC  2E                 	db	46
  2560  00FABD  36                 	db	54	;'6'
  2561  00FABE  66                 	db	102	;'f'
  2562  00FABF  2C                 	db	44
  2563  00FAC0  25                 	db	37
  2564  00FAC1  34                 	db	52	;'4'
  2565  00FAC2  2E                 	db	46
  2566  00FAC3  33                 	db	51	;'3'
  2567  00FAC4  66                 	db	102	;'f'
  2568  00FAC5  2C                 	db	44
  2569  00FAC6  25                 	db	37
  2570  00FAC7  64                 	db	100	;'d'
  2571  00FAC8  2C                 	db	44
  2572  00FAC9  25                 	db	37
  2573  00FACA  64                 	db	100	;'d'
  2574  00FACB  2C                 	db	44
  2575  00FACC  25                 	db	37
  2576  00FACD  6C                 	db	108	;'l'
  2577  00FACE  75                 	db	117	;'u'
  2578  00FACF  2C                 	db	44
  2579  00FAD0  25                 	db	37
  2580  00FAD1  6C                 	db	108	;'l'
  2581  00FAD2  75                 	db	117	;'u'
  2582  00FAD3  2C                 	db	44
  2583  00FAD4  25                 	db	37
  2584  00FAD5  34                 	db	52	;'4'
  2585  00FAD6  2E                 	db	46
  2586  00FAD7  33                 	db	51	;'3'
  2587  00FAD8  66                 	db	102	;'f'
  2588  00FAD9  2C                 	db	44
  2589  00FADA  25                 	db	37
  2590  00FADB  34                 	db	52	;'4'
  2591  00FADC  2E                 	db	46
  2592  00FADD  33                 	db	51	;'3'
  2593  00FADE  66                 	db	102	;'f'
  2594  00FADF  2C                 	db	44
  2595  00FAE0  25                 	db	37
  2596  00FAE1  34                 	db	52	;'4'
  2597  00FAE2  2E                 	db	46
  2598  00FAE3  33                 	db	51	;'3'
  2599  00FAE4  66                 	db	102	;'f'
  2600  00FAE5  0D                 	db	13
  2601  00FAE6  0A                 	db	10
  2602  00FAE7  00                 	db	0
  2603  00FAE8                     STR_39:
  2604                           
  2605                           ; BSR set to: 57
  2606  00FAE8  53                 	db	83	;'S'
  2607  00FAE9  25                 	db	37
  2608  00FAEA  63                 	db	99	;'c'
  2609  00FAEB  43                 	db	67	;'C'
  2610  00FAEC  20                 	db	32
  2611  00FAED  25                 	db	37
  2612  00FAEE  64                 	db	100	;'d'
  2613  00FAEF  20                 	db	32
  2614  00FAF0  52                 	db	82	;'R'
  2615  00FAF1  55                 	db	85	;'U'
  2616  00FAF2  4E                 	db	78	;'N'
  2617  00FAF3  20                 	db	32
  2618  00FAF4  25                 	db	37
  2619  00FAF5  64                 	db	100	;'d'
  2620  00FAF6  20                 	db	32
  2621  00FAF7  56                 	db	86	;'V'
  2622  00FAF8  25                 	db	37
  2623  00FAF9  32                 	db	50	;'2'
  2624  00FAFA  2E                 	db	46
  2625  00FAFB  32                 	db	50	;'2'
  2626  00FAFC  66                 	db	102	;'f'
  2627  00FAFD  20                 	db	32
  2628  00FAFE  20                 	db	32
  2629  00FAFF  20                 	db	32
  2630  00FB00  20                 	db	32
  2631  00FB01  20                 	db	32
  2632  00FB02  20                 	db	32
  2633  00FB03  20                 	db	32
  2634  00FB04  00                 	db	0
  2635  00FB05                     STR_20:
  2636                           
  2637                           ; BSR set to: 57
  2638  00FB05  52                 	db	82	;'R'
  2639  00FB06  31                 	db	49	;'1'
  2640  00FB07  20                 	db	32
  2641  00FB08  25                 	db	37
  2642  00FB09  32                 	db	50	;'2'
  2643  00FB0A  2E                 	db	46
  2644  00FB0B  33                 	db	51	;'3'
  2645  00FB0C  66                 	db	102	;'f'
  2646  00FB0D  20                 	db	32
  2647  00FB0E  25                 	db	37
  2648  00FB0F  33                 	db	51	;'3'
  2649  00FB10  2E                 	db	46
  2650  00FB11  34                 	db	52	;'4'
  2651  00FB12  66                 	db	102	;'f'
  2652  00FB13  20                 	db	32
  2653  00FB14  20                 	db	32
  2654  00FB15  20                 	db	32
  2655  00FB16  20                 	db	32
  2656  00FB17  20                 	db	32
  2657  00FB18  20                 	db	32
  2658  00FB19  20                 	db	32
  2659  00FB1A  20                 	db	32
  2660  00FB1B  20                 	db	32
  2661  00FB1C  20                 	db	32
  2662  00FB1D  20                 	db	32
  2663  00FB1E  00                 	db	0
  2664  00FB1F                     STR_21:
  2665                           
  2666                           ; BSR set to: 57
  2667  00FB1F  52                 	db	82	;'R'
  2668  00FB20  32                 	db	50	;'2'
  2669  00FB21  20                 	db	32
  2670  00FB22  25                 	db	37
  2671  00FB23  32                 	db	50	;'2'
  2672  00FB24  2E                 	db	46
  2673  00FB25  33                 	db	51	;'3'
  2674  00FB26  66                 	db	102	;'f'
  2675  00FB27  20                 	db	32
  2676  00FB28  25                 	db	37
  2677  00FB29  33                 	db	51	;'3'
  2678  00FB2A  2E                 	db	46
  2679  00FB2B  34                 	db	52	;'4'
  2680  00FB2C  66                 	db	102	;'f'
  2681  00FB2D  20                 	db	32
  2682  00FB2E  20                 	db	32
  2683  00FB2F  20                 	db	32
  2684  00FB30  20                 	db	32
  2685  00FB31  20                 	db	32
  2686  00FB32  20                 	db	32
  2687  00FB33  20                 	db	32
  2688  00FB34  20                 	db	32
  2689  00FB35  20                 	db	32
  2690  00FB36  20                 	db	32
  2691  00FB37  20                 	db	32
  2692  00FB38  00                 	db	0
  2693  00FB39                     STR_11:
  2694                           
  2695                           ; BSR set to: 57
  2696  00FB39  53                 	db	83	;'S'
  2697  00FB3A  20                 	db	32
  2698  00FB3B  53                 	db	83	;'S'
  2699  00FB3C  25                 	db	37
  2700  00FB3D  63                 	db	99	;'c'
  2701  00FB3E  43                 	db	67	;'C'
  2702  00FB3F  20                 	db	32
  2703  00FB40  25                 	db	37
  2704  00FB41  64                 	db	100	;'d'
  2705  00FB42  20                 	db	32
  2706  00FB43  25                 	db	37
  2707  00FB44  32                 	db	50	;'2'
  2708  00FB45  2E                 	db	46
  2709  00FB46  34                 	db	52	;'4'
  2710  00FB47  66                 	db	102	;'f'
  2711  00FB48  20                 	db	32
  2712  00FB49  20                 	db	32
  2713  00FB4A  20                 	db	32
  2714  00FB4B  20                 	db	32
  2715  00FB4C  20                 	db	32
  2716  00FB4D  20                 	db	32
  2717  00FB4E  20                 	db	32
  2718  00FB4F  20                 	db	32
  2719  00FB50  20                 	db	32
  2720  00FB51  20                 	db	32
  2721  00FB52  00                 	db	0
  2722  00FB53                     
  2723                           ; BSR set to: 57
  2724  00FB53  20                 	db	32
  2725  00FB54  4D                 	db	77	;'M'
  2726  00FB55  65                 	db	101	;'e'
  2727  00FB56  73                 	db	115	;'s'
  2728  00FB57  67                 	db	103	;'g'
  2729  00FB58  20                 	db	32
  2730  00FB59  25                 	db	37
  2731  00FB5A  64                 	db	100	;'d'
  2732  00FB5B  20                 	db	32
  2733  00FB5C  53                 	db	83	;'S'
  2734  00FB5D  74                 	db	116	;'t'
  2735  00FB5E  61                 	db	97	;'a'
  2736  00FB5F  63                 	db	99	;'c'
  2737  00FB60  6B                 	db	107	;'k'
  2738  00FB61  20                 	db	32
  2739  00FB62  25                 	db	37
  2740  00FB63  64                 	db	100	;'d'
  2741  00FB64  20                 	db	32
  2742  00FB65  20                 	db	32
  2743  00FB66  20                 	db	32
  2744  00FB67  20                 	db	32
  2745  00FB68  20                 	db	32
  2746  00FB69  20                 	db	32
  2747  00FB6A  00                 	db	0
  2748  00FB6B                     STR_40:
  2749                           
  2750                           ; BSR set to: 57
  2751  00FB6B  45                 	db	69	;'E'
  2752  00FB6C  53                 	db	83	;'S'
  2753  00FB6D  52                 	db	82	;'R'
  2754  00FB6E  20                 	db	32
  2755  00FB6F  20                 	db	32
  2756  00FB70  25                 	db	37
  2757  00FB71  32                 	db	50	;'2'
  2758  00FB72  2E                 	db	46
  2759  00FB73  36                 	db	54	;'6'
  2760  00FB74  66                 	db	102	;'f'
  2761  00FB75  20                 	db	32
  2762  00FB76  20                 	db	32
  2763  00FB77  20                 	db	32
  2764  00FB78  20                 	db	32
  2765  00FB79  20                 	db	32
  2766  00FB7A  20                 	db	32
  2767  00FB7B  20                 	db	32
  2768  00FB7C  20                 	db	32
  2769  00FB7D  20                 	db	32
  2770  00FB7E  20                 	db	32
  2771  00FB7F  20                 	db	32
  2772  00FB80  20                 	db	32
  2773  00FB81  00                 	db	0
  2774  00FB82                     STR_37:
  2775                           
  2776                           ; BSR set to: 57
  2777  00FB82  42                 	db	66	;'B'
  2778  00FB83  41                 	db	65	;'A'
  2779  00FB84  54                 	db	84	;'T'
  2780  00FB85  54                 	db	84	;'T'
  2781  00FB86  20                 	db	32
  2782  00FB87  50                 	db	80	;'P'
  2783  00FB88  57                 	db	87	;'W'
  2784  00FB89  52                 	db	82	;'R'
  2785  00FB8A  20                 	db	32
  2786  00FB8B  25                 	db	37
  2787  00FB8C  33                 	db	51	;'3'
  2788  00FB8D  2E                 	db	46
  2789  00FB8E  32                 	db	50	;'2'
  2790  00FB8F  66                 	db	102	;'f'
  2791  00FB90  20                 	db	32
  2792  00FB91  20                 	db	32
  2793  00FB92  20                 	db	32
  2794  00FB93  20                 	db	32
  2795  00FB94  20                 	db	32
  2796  00FB95  20                 	db	32
  2797  00FB96  20                 	db	32
  2798  00FB97  20                 	db	32
  2799  00FB98  00                 	db	0
  2800  00FB99                     STR_41:
  2801                           
  2802                           ; BSR set to: 57
  2803  00FB99  52                 	db	82	;'R'
  2804  00FB9A  31                 	db	49	;'1'
  2805  00FB9B  20                 	db	32
  2806  00FB9C  25                 	db	37
  2807  00FB9D  32                 	db	50	;'2'
  2808  00FB9E  2E                 	db	46
  2809  00FB9F  33                 	db	51	;'3'
  2810  00FBA0  66                 	db	102	;'f'
  2811  00FBA1  20                 	db	32
  2812  00FBA2  25                 	db	37
  2813  00FBA3  33                 	db	51	;'3'
  2814  00FBA4  2E                 	db	46
  2815  00FBA5  34                 	db	52	;'4'
  2816  00FBA6  66                 	db	102	;'f'
  2817  00FBA7  20                 	db	32
  2818  00FBA8  20                 	db	32
  2819  00FBA9  20                 	db	32
  2820  00FBAA  20                 	db	32
  2821  00FBAB  20                 	db	32
  2822  00FBAC  20                 	db	32
  2823  00FBAD  20                 	db	32
  2824  00FBAE  20                 	db	32
  2825  00FBAF  00                 	db	0
  2826  00FBB0                     STR_42:
  2827                           
  2828                           ; BSR set to: 57
  2829  00FBB0  52                 	db	82	;'R'
  2830  00FBB1  32                 	db	50	;'2'
  2831  00FBB2  20                 	db	32
  2832  00FBB3  25                 	db	37
  2833  00FBB4  32                 	db	50	;'2'
  2834  00FBB5  2E                 	db	46
  2835  00FBB6  33                 	db	51	;'3'
  2836  00FBB7  66                 	db	102	;'f'
  2837  00FBB8  20                 	db	32
  2838  00FBB9  25                 	db	37
  2839  00FBBA  33                 	db	51	;'3'
  2840  00FBBB  2E                 	db	46
  2841  00FBBC  34                 	db	52	;'4'
  2842  00FBBD  66                 	db	102	;'f'
  2843  00FBBE  20                 	db	32
  2844  00FBBF  20                 	db	32
  2845  00FBC0  20                 	db	32
  2846  00FBC1  20                 	db	32
  2847  00FBC2  20                 	db	32
  2848  00FBC3  20                 	db	32
  2849  00FBC4  20                 	db	32
  2850  00FBC5  20                 	db	32
  2851  00FBC6  00                 	db	0
  2852  00FBC7                     STR_38:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FBC7  42                 	db	66	;'B'
  2856  00FBC8  41                 	db	65	;'A'
  2857  00FBC9  48                 	db	72	;'H'
  2858  00FBCA  20                 	db	32
  2859  00FBCB  25                 	db	37
  2860  00FBCC  33                 	db	51	;'3'
  2861  00FBCD  2E                 	db	46
  2862  00FBCE  32                 	db	50	;'2'
  2863  00FBCF  66                 	db	102	;'f'
  2864  00FBD0  20                 	db	32
  2865  00FBD1  50                 	db	80	;'P'
  2866  00FBD2  25                 	db	37
  2867  00FBD3  33                 	db	51	;'3'
  2868  00FBD4  2E                 	db	46
  2869  00FBD5  32                 	db	50	;'2'
  2870  00FBD6  66                 	db	102	;'f'
  2871  00FBD7  20                 	db	32
  2872  00FBD8  20                 	db	32
  2873  00FBD9  20                 	db	32
  2874  00FBDA  20                 	db	32
  2875  00FBDB  20                 	db	32
  2876  00FBDC  20                 	db	32
  2877  00FBDD  00                 	db	0
  2878  00FBDE                     STR_14:
  2879                           
  2880                           ; BSR set to: 57
  2881  00FBDE  20                 	db	32
  2882  00FBDF  20                 	db	32
  2883  00FBE0  20                 	db	32
  2884  00FBE1  20                 	db	32
  2885  00FBE2  20                 	db	32
  2886  00FBE3  20                 	db	32
  2887  00FBE4  20                 	db	32
  2888  00FBE5  20                 	db	32
  2889  00FBE6  20                 	db	32
  2890  00FBE7  20                 	db	32
  2891  00FBE8  20                 	db	32
  2892  00FBE9  20                 	db	32
  2893  00FBEA  20                 	db	32
  2894  00FBEB  20                 	db	32
  2895  00FBEC  20                 	db	32
  2896  00FBED  20                 	db	32
  2897  00FBEE  20                 	db	32
  2898  00FBEF  20                 	db	32
  2899  00FBF0  20                 	db	32
  2900  00FBF1  20                 	db	32
  2901  00FBF2  20                 	db	32
  2902  00FBF3  00                 	db	0
  2903  00FBF4                     STR_19:
  2904                           
  2905                           ; BSR set to: 57
  2906  00FBF4  45                 	db	69	;'E'
  2907  00FBF5  53                 	db	83	;'S'
  2908  00FBF6  52                 	db	82	;'R'
  2909  00FBF7  20                 	db	32
  2910  00FBF8  20                 	db	32
  2911  00FBF9  25                 	db	37
  2912  00FBFA  32                 	db	50	;'2'
  2913  00FBFB  2E                 	db	46
  2914  00FBFC  36                 	db	54	;'6'
  2915  00FBFD  66                 	db	102	;'f'
  2916  00FBFE  20                 	db	32
  2917  00FBFF  20                 	db	32
  2918  00FC00  20                 	db	32
  2919  00FC01  20                 	db	32
  2920  00FC02  20                 	db	32
  2921  00FC03  20                 	db	32
  2922  00FC04  20                 	db	32
  2923  00FC05  20                 	db	32
  2924  00FC06  20                 	db	32
  2925  00FC07  20                 	db	32
  2926  00FC08  20                 	db	32
  2927  00FC09  00                 	db	0
  2928  00FC0A                     STR_12:
  2929                           
  2930                           ; BSR set to: 57
  2931  00FC0A  53                 	db	83	;'S'
  2932  00FC0B  74                 	db	116	;'t'
  2933  00FC0C  61                 	db	97	;'a'
  2934  00FC0D  74                 	db	116	;'t'
  2935  00FC0E  69                 	db	105	;'i'
  2936  00FC0F  63                 	db	99	;'c'
  2937  00FC10  20                 	db	32
  2938  00FC11  53                 	db	83	;'S'
  2939  00FC12  4F                 	db	79	;'O'
  2940  00FC13  43                 	db	67	;'C'
  2941  00FC14  20                 	db	32
  2942  00FC15  25                 	db	37
  2943  00FC16  64                 	db	100	;'d'
  2944  00FC17  20                 	db	32
  2945  00FC18  20                 	db	32
  2946  00FC19  20                 	db	32
  2947  00FC1A  20                 	db	32
  2948  00FC1B  20                 	db	32
  2949  00FC1C  20                 	db	32
  2950  00FC1D  20                 	db	32
  2951  00FC1E  20                 	db	32
  2952  00FC1F  00                 	db	0
  2953  00FC20                     STR_34:
  2954                           
  2955                           ; BSR set to: 57
  2956  00FC20  42                 	db	66	;'B'
  2957  00FC21  41                 	db	65	;'A'
  2958  00FC22  54                 	db	84	;'T'
  2959  00FC23  20                 	db	32
  2960  00FC24  49                 	db	73	;'I'
  2961  00FC25  57                 	db	87	;'W'
  2962  00FC26  48                 	db	72	;'H'
  2963  00FC27  20                 	db	32
  2964  00FC28  25                 	db	37
  2965  00FC29  34                 	db	52	;'4'
  2966  00FC2A  2E                 	db	46
  2967  00FC2B  31                 	db	49	;'1'
  2968  00FC2C  66                 	db	102	;'f'
  2969  00FC2D  20                 	db	32
  2970  00FC2E  20                 	db	32
  2971  00FC2F  20                 	db	32
  2972  00FC30  20                 	db	32
  2973  00FC31  20                 	db	32
  2974  00FC32  20                 	db	32
  2975  00FC33  20                 	db	32
  2976  00FC34  20                 	db	32
  2977  00FC35  00                 	db	0
  2978  00FC36                     STR_35:
  2979                           
  2980                           ; BSR set to: 57
  2981  00FC36  42                 	db	66	;'B'
  2982  00FC37  41                 	db	65	;'A'
  2983  00FC38  54                 	db	84	;'T'
  2984  00FC39  20                 	db	32
  2985  00FC3A  4F                 	db	79	;'O'
  2986  00FC3B  57                 	db	87	;'W'
  2987  00FC3C  48                 	db	72	;'H'
  2988  00FC3D  20                 	db	32
  2989  00FC3E  25                 	db	37
  2990  00FC3F  34                 	db	52	;'4'
  2991  00FC40  2E                 	db	46
  2992  00FC41  31                 	db	49	;'1'
  2993  00FC42  66                 	db	102	;'f'
  2994  00FC43  20                 	db	32
  2995  00FC44  20                 	db	32
  2996  00FC45  20                 	db	32
  2997  00FC46  20                 	db	32
  2998  00FC47  20                 	db	32
  2999  00FC48  20                 	db	32
  3000  00FC49  20                 	db	32
  3001  00FC4A  20                 	db	32
  3002  00FC4B  00                 	db	0
  3003  00FC4C                     STR_36:
  3004                           
  3005                           ; BSR set to: 57
  3006  00FC4C  42                 	db	66	;'B'
  3007  00FC4D  41                 	db	65	;'A'
  3008  00FC4E  54                 	db	84	;'T'
  3009  00FC4F  20                 	db	32
  3010  00FC50  54                 	db	84	;'T'
  3011  00FC51  57                 	db	87	;'W'
  3012  00FC52  48                 	db	72	;'H'
  3013  00FC53  20                 	db	32
  3014  00FC54  25                 	db	37
  3015  00FC55  34                 	db	52	;'4'
  3016  00FC56  2E                 	db	46
  3017  00FC57  31                 	db	49	;'1'
  3018  00FC58  66                 	db	102	;'f'
  3019  00FC59  20                 	db	32
  3020  00FC5A  20                 	db	32
  3021  00FC5B  20                 	db	32
  3022  00FC5C  20                 	db	32
  3023  00FC5D  20                 	db	32
  3024  00FC5E  20                 	db	32
  3025  00FC5F  20                 	db	32
  3026  00FC60  20                 	db	32
  3027  00FC61  00                 	db	0
  3028  00FC62                     STR_30:
  3029                           
  3030                           ; BSR set to: 57
  3031  00FC62  49                 	db	73	;'I'
  3032  00FC63  4E                 	db	78	;'N'
  3033  00FC64  56                 	db	86	;'V'
  3034  00FC65  20                 	db	32
  3035  00FC66  20                 	db	32
  3036  00FC67  57                 	db	87	;'W'
  3037  00FC68  48                 	db	72	;'H'
  3038  00FC69  20                 	db	32
  3039  00FC6A  25                 	db	37
  3040  00FC6B  33                 	db	51	;'3'
  3041  00FC6C  2E                 	db	46
  3042  00FC6D  32                 	db	50	;'2'
  3043  00FC6E  66                 	db	102	;'f'
  3044  00FC6F  20                 	db	32
  3045  00FC70  20                 	db	32
  3046  00FC71  20                 	db	32
  3047  00FC72  20                 	db	32
  3048  00FC73  20                 	db	32
  3049  00FC74  20                 	db	32
  3050  00FC75  20                 	db	32
  3051  00FC76  20                 	db	32
  3052  00FC77  00                 	db	0
  3053  00FC78                     STR_29:
  3054                           
  3055                           ; BSR set to: 57
  3056  00FC78  4C                 	db	76	;'L'
  3057  00FC79  4F                 	db	79	;'O'
  3058  00FC7A  41                 	db	65	;'A'
  3059  00FC7B  44                 	db	68	;'D'
  3060  00FC7C  20                 	db	32
  3061  00FC7D  57                 	db	87	;'W'
  3062  00FC7E  48                 	db	72	;'H'
  3063  00FC7F  20                 	db	32
  3064  00FC80  25                 	db	37
  3065  00FC81  33                 	db	51	;'3'
  3066  00FC82  2E                 	db	46
  3067  00FC83  32                 	db	50	;'2'
  3068  00FC84  66                 	db	102	;'f'
  3069  00FC85  20                 	db	32
  3070  00FC86  20                 	db	32
  3071  00FC87  20                 	db	32
  3072  00FC88  20                 	db	32
  3073  00FC89  20                 	db	32
  3074  00FC8A  20                 	db	32
  3075  00FC8B  20                 	db	32
  3076  00FC8C  20                 	db	32
  3077  00FC8D  00                 	db	0
  3078  00FC8E                     STR_28:
  3079                           
  3080                           ; BSR set to: 57
  3081  00FC8E  50                 	db	80	;'P'
  3082  00FC8F  56                 	db	86	;'V'
  3083  00FC90  20                 	db	32
  3084  00FC91  25                 	db	37
  3085  00FC92  63                 	db	99	;'c'
  3086  00FC93  20                 	db	32
  3087  00FC94  57                 	db	87	;'W'
  3088  00FC95  48                 	db	72	;'H'
  3089  00FC96  20                 	db	32
  3090  00FC97  25                 	db	37
  3091  00FC98  33                 	db	51	;'3'
  3092  00FC99  2E                 	db	46
  3093  00FC9A  32                 	db	50	;'2'
  3094  00FC9B  66                 	db	102	;'f'
  3095  00FC9C  20                 	db	32
  3096  00FC9D  20                 	db	32
  3097  00FC9E  20                 	db	32
  3098  00FC9F  20                 	db	32
  3099  00FCA0  20                 	db	32
  3100  00FCA1  20                 	db	32
  3101  00FCA2  20                 	db	32
  3102  00FCA3  00                 	db	0
  3103  00FCA4                     STR_27:
  3104                           
  3105                           ; BSR set to: 57
  3106  00FCA4  49                 	db	73	;'I'
  3107  00FCA5  4E                 	db	78	;'N'
  3108  00FCA6  56                 	db	86	;'V'
  3109  00FCA7  20                 	db	32
  3110  00FCA8  20                 	db	32
  3111  00FCA9  50                 	db	80	;'P'
  3112  00FCAA  57                 	db	87	;'W'
  3113  00FCAB  52                 	db	82	;'R'
  3114  00FCAC  20                 	db	32
  3115  00FCAD  25                 	db	37
  3116  00FCAE  33                 	db	51	;'3'
  3117  00FCAF  2E                 	db	46
  3118  00FCB0  32                 	db	50	;'2'
  3119  00FCB1  66                 	db	102	;'f'
  3120  00FCB2  20                 	db	32
  3121  00FCB3  20                 	db	32
  3122  00FCB4  20                 	db	32
  3123  00FCB5  20                 	db	32
  3124  00FCB6  20                 	db	32
  3125  00FCB7  20                 	db	32
  3126  00FCB8  20                 	db	32
  3127  00FCB9  00                 	db	0
  3128  00FCBA                     STR_26:
  3129                           
  3130                           ; BSR set to: 57
  3131  00FCBA  4C                 	db	76	;'L'
  3132  00FCBB  4F                 	db	79	;'O'
  3133  00FCBC  41                 	db	65	;'A'
  3134  00FCBD  44                 	db	68	;'D'
  3135  00FCBE  20                 	db	32
  3136  00FCBF  50                 	db	80	;'P'
  3137  00FCC0  57                 	db	87	;'W'
  3138  00FCC1  52                 	db	82	;'R'
  3139  00FCC2  20                 	db	32
  3140  00FCC3  25                 	db	37
  3141  00FCC4  33                 	db	51	;'3'
  3142  00FCC5  2E                 	db	46
  3143  00FCC6  32                 	db	50	;'2'
  3144  00FCC7  66                 	db	102	;'f'
  3145  00FCC8  20                 	db	32
  3146  00FCC9  20                 	db	32
  3147  00FCCA  20                 	db	32
  3148  00FCCB  20                 	db	32
  3149  00FCCC  20                 	db	32
  3150  00FCCD  20                 	db	32
  3151  00FCCE  20                 	db	32
  3152  00FCCF  00                 	db	0
  3153  00FCD0                     STR_25:
  3154                           
  3155                           ; BSR set to: 57
  3156  00FCD0  50                 	db	80	;'P'
  3157  00FCD1  56                 	db	86	;'V'
  3158  00FCD2  20                 	db	32
  3159  00FCD3  25                 	db	37
  3160  00FCD4  63                 	db	99	;'c'
  3161  00FCD5  20                 	db	32
  3162  00FCD6  50                 	db	80	;'P'
  3163  00FCD7  57                 	db	87	;'W'
  3164  00FCD8  52                 	db	82	;'R'
  3165  00FCD9  20                 	db	32
  3166  00FCDA  25                 	db	37
  3167  00FCDB  33                 	db	51	;'3'
  3168  00FCDC  2E                 	db	46
  3169  00FCDD  32                 	db	50	;'2'
  3170  00FCDE  66                 	db	102	;'f'
  3171  00FCDF  20                 	db	32
  3172  00FCE0  20                 	db	32
  3173  00FCE1  20                 	db	32
  3174  00FCE2  20                 	db	32
  3175  00FCE3  20                 	db	32
  3176  00FCE4  20                 	db	32
  3177  00FCE5  00                 	db	0
  3178  00FCE6                     STR_13:
  3179                           
  3180                           ; BSR set to: 57
  3181  00FCE6  42                 	db	66	;'B'
  3182  00FCE7  61                 	db	97	;'a'
  3183  00FCE8  74                 	db	116	;'t'
  3184  00FCE9  74                 	db	116	;'t'
  3185  00FCEA  65                 	db	101	;'e'
  3186  00FCEB  72                 	db	114	;'r'
  3187  00FCEC  79                 	db	121	;'y'
  3188  00FCED  20                 	db	32
  3189  00FCEE  41                 	db	65	;'A'
  3190  00FCEF  68                 	db	104	;'h'
  3191  00FCF0  20                 	db	32
  3192  00FCF1  25                 	db	37
  3193  00FCF2  33                 	db	51	;'3'
  3194  00FCF3  2E                 	db	46
  3195  00FCF4  32                 	db	50	;'2'
  3196  00FCF5  66                 	db	102	;'f'
  3197  00FCF6  20                 	db	32
  3198  00FCF7  20                 	db	32
  3199  00FCF8  20                 	db	32
  3200  00FCF9  20                 	db	32
  3201  00FCFA  20                 	db	32
  3202  00FCFB  00                 	db	0
  3203  00FCFC                     STR_32:
  3204                           
  3205                           ; BSR set to: 57
  3206  00FCFC  42                 	db	66	;'B'
  3207  00FCFD  56                 	db	86	;'V'
  3208  00FCFE  20                 	db	32
  3209  00FCFF  25                 	db	37
  3210  00FD00  32                 	db	50	;'2'
  3211  00FD01  2E                 	db	46
  3212  00FD02  32                 	db	50	;'2'
  3213  00FD03  66                 	db	102	;'f'
  3214  00FD04  20                 	db	32
  3215  00FD05  42                 	db	66	;'B'
  3216  00FD06  41                 	db	65	;'A'
  3217  00FD07  20                 	db	32
  3218  00FD08  25                 	db	37
  3219  00FD09  32                 	db	50	;'2'
  3220  00FD0A  2E                 	db	46
  3221  00FD0B  32                 	db	50	;'2'
  3222  00FD0C  66                 	db	102	;'f'
  3223  00FD0D  20                 	db	32
  3224  00FD0E  20                 	db	32
  3225  00FD0F  20                 	db	32
  3226  00FD10  20                 	db	32
  3227  00FD11  00                 	db	0
  3228  00FD12                     STR_33:
  3229                           
  3230                           ; BSR set to: 57
  3231  00FD12  43                 	db	67	;'C'
  3232  00FD13  56                 	db	86	;'V'
  3233  00FD14  20                 	db	32
  3234  00FD15  25                 	db	37
  3235  00FD16  32                 	db	50	;'2'
  3236  00FD17  2E                 	db	46
  3237  00FD18  32                 	db	50	;'2'
  3238  00FD19  66                 	db	102	;'f'
  3239  00FD1A  20                 	db	32
  3240  00FD1B  4C                 	db	76	;'L'
  3241  00FD1C  41                 	db	65	;'A'
  3242  00FD1D  20                 	db	32
  3243  00FD1E  25                 	db	37
  3244  00FD1F  32                 	db	50	;'2'
  3245  00FD20  2E                 	db	46
  3246  00FD21  32                 	db	50	;'2'
  3247  00FD22  66                 	db	102	;'f'
  3248  00FD23  20                 	db	32
  3249  00FD24  20                 	db	32
  3250  00FD25  20                 	db	32
  3251  00FD26  20                 	db	32
  3252  00FD27  00                 	db	0
  3253  00FD28                     STR_31:
  3254                           
  3255                           ; BSR set to: 57
  3256  00FD28  50                 	db	80	;'P'
  3257  00FD29  56                 	db	86	;'V'
  3258  00FD2A  20                 	db	32
  3259  00FD2B  25                 	db	37
  3260  00FD2C  32                 	db	50	;'2'
  3261  00FD2D  2E                 	db	46
  3262  00FD2E  32                 	db	50	;'2'
  3263  00FD2F  66                 	db	102	;'f'
  3264  00FD30  20                 	db	32
  3265  00FD31  50                 	db	80	;'P'
  3266  00FD32  41                 	db	65	;'A'
  3267  00FD33  20                 	db	32
  3268  00FD34  25                 	db	37
  3269  00FD35  32                 	db	50	;'2'
  3270  00FD36  2E                 	db	46
  3271  00FD37  32                 	db	50	;'2'
  3272  00FD38  66                 	db	102	;'f'
  3273  00FD39  20                 	db	32
  3274  00FD3A  20                 	db	32
  3275  00FD3B  20                 	db	32
  3276  00FD3C  20                 	db	32
  3277  00FD3D  00                 	db	0
  3278  00FD3E                     STR_43:
  3279                           
  3280                           ; BSR set to: 57
  3281  00FD3E  25                 	db	37
  3282  00FD3F  64                 	db	100	;'d'
  3283  00FD40  20                 	db	32
  3284  00FD41  25                 	db	37
  3285  00FD42  32                 	db	50	;'2'
  3286  00FD43  2E                 	db	46
  3287  00FD44  34                 	db	52	;'4'
  3288  00FD45  66                 	db	102	;'f'
  3289  00FD46  2C                 	db	44
  3290  00FD47  20                 	db	32
  3291  00FD48  25                 	db	37
  3292  00FD49  64                 	db	100	;'d'
  3293  00FD4A  20                 	db	32
  3294  00FD4B  20                 	db	32
  3295  00FD4C  54                 	db	84	;'T'
  3296  00FD4D  52                 	db	82	;'R'
  3297  00FD4E  49                 	db	73	;'I'
  3298  00FD4F  4D                 	db	77	;'M'
  3299  00FD50  20                 	db	32
  3300  00FD51  20                 	db	32
  3301  00FD52  20                 	db	32
  3302  00FD53  00                 	db	0
  3303  00FD54                     STR_51:
  3304                           
  3305                           ; BSR set to: 57
  3306  00FD54  20                 	db	32
  3307  00FD55  25                 	db	37
  3308  00FD56  64                 	db	100	;'d'
  3309  00FD57  20                 	db	32
  3310  00FD58  25                 	db	37
  3311  00FD59  64                 	db	100	;'d'
  3312  00FD5A  20                 	db	32
  3313  00FD5B  20                 	db	32
  3314  00FD5C  20                 	db	32
  3315  00FD5D  20                 	db	32
  3316  00FD5E  20                 	db	32
  3317  00FD5F  20                 	db	32
  3318  00FD60  20                 	db	32
  3319  00FD61  20                 	db	32
  3320  00FD62  20                 	db	32
  3321  00FD63  20                 	db	32
  3322  00FD64  20                 	db	32
  3323  00FD65  20                 	db	32
  3324  00FD66  20                 	db	32
  3325  00FD67  20                 	db	32
  3326  00FD68  00                 	db	0
  3327  00FD69                     STR_67:
  3328                           
  3329                           ; BSR set to: 57
  3330  00FD69  20                 	db	32
  3331  00FD6A  25                 	db	37
  3332  00FD6B  66                 	db	102	;'f'
  3333  00FD6C  20                 	db	32
  3334  00FD6D  25                 	db	37
  3335  00FD6E  66                 	db	102	;'f'
  3336  00FD6F  20                 	db	32
  3337  00FD70  20                 	db	32
  3338  00FD71  20                 	db	32
  3339  00FD72  20                 	db	32
  3340  00FD73  20                 	db	32
  3341  00FD74  20                 	db	32
  3342  00FD75  20                 	db	32
  3343  00FD76  20                 	db	32
  3344  00FD77  20                 	db	32
  3345  00FD78  20                 	db	32
  3346  00FD79  20                 	db	32
  3347  00FD7A  20                 	db	32
  3348  00FD7B  20                 	db	32
  3349  00FD7C  20                 	db	32
  3350  00FD7D  00                 	db	0
  3351  00FD7E                     STR_54:
  3352                           
  3353                           ; BSR set to: 57
  3354  00FD7E  20                 	db	32
  3355  00FD7F  25                 	db	37
  3356  00FD80  6C                 	db	108	;'l'
  3357  00FD81  64                 	db	100	;'d'
  3358  00FD82  20                 	db	32
  3359  00FD83  25                 	db	37
  3360  00FD84  6C                 	db	108	;'l'
  3361  00FD85  64                 	db	100	;'d'
  3362  00FD86  20                 	db	32
  3363  00FD87  20                 	db	32
  3364  00FD88  20                 	db	32
  3365  00FD89  20                 	db	32
  3366  00FD8A  20                 	db	32
  3367  00FD8B  20                 	db	32
  3368  00FD8C  20                 	db	32
  3369  00FD8D  20                 	db	32
  3370  00FD8E  20                 	db	32
  3371  00FD8F  20                 	db	32
  3372  00FD90  20                 	db	32
  3373  00FD91  20                 	db	32
  3374  00FD92  00                 	db	0
  3375  00FD93                     STR_10:
  3376                           
  3377                           ; BSR set to: 57
  3378  00FD93  42                 	db	66	;'B'
  3379  00FD94  56                 	db	86	;'V'
  3380  00FD95  20                 	db	32
  3381  00FD96  25                 	db	37
  3382  00FD97  32                 	db	50	;'2'
  3383  00FD98  2E                 	db	46
  3384  00FD99  34                 	db	52	;'4'
  3385  00FD9A  66                 	db	102	;'f'
  3386  00FD9B  20                 	db	32
  3387  00FD9C  20                 	db	32
  3388  00FD9D  20                 	db	32
  3389  00FD9E  20                 	db	32
  3390  00FD9F  20                 	db	32
  3391  00FDA0  20                 	db	32
  3392  00FDA1  20                 	db	32
  3393  00FDA2  20                 	db	32
  3394  00FDA3  20                 	db	32
  3395  00FDA4  20                 	db	32
  3396  00FDA5  20                 	db	32
  3397  00FDA6  20                 	db	32
  3398  00FDA7  00                 	db	0
  3399  00FDA8                     STR_4:
  3400                           
  3401                           ; BSR set to: 57
  3402  00FDA8  20                 	db	32
  3403  00FDA9  4E                 	db	78	;'N'
  3404  00FDAA  53                 	db	83	;'S'
  3405  00FDAB  41                 	db	65	;'A'
  3406  00FDAC  53                 	db	83	;'S'
  3407  00FDAD  50                 	db	80	;'P'
  3408  00FDAE  4F                 	db	79	;'O'
  3409  00FDAF  4F                 	db	79	;'O'
  3410  00FDB0  4B                 	db	75	;'K'
  3411  00FDB1  20                 	db	32
  3412  00FDB2  20                 	db	32
  3413  00FDB3  20                 	db	32
  3414  00FDB4  20                 	db	32
  3415  00FDB5  20                 	db	32
  3416  00FDB6  20                 	db	32
  3417  00FDB7  20                 	db	32
  3418  00FDB8  20                 	db	32
  3419  00FDB9  20                 	db	32
  3420  00FDBA  20                 	db	32
  3421  00FDBB  20                 	db	32
  3422  00FDBC  00                 	db	0
  3423  00FDBD                     STR_15:
  3424                           
  3425                           ; BSR set to: 57
  3426  00FDBD  42                 	db	66	;'B'
  3427  00FDBE  61                 	db	97	;'a'
  3428  00FDBF  74                 	db	116	;'t'
  3429  00FDC0  74                 	db	116	;'t'
  3430  00FDC1  65                 	db	101	;'e'
  3431  00FDC2  72                 	db	114	;'r'
  3432  00FDC3  79                 	db	121	;'y'
  3433  00FDC4  20                 	db	32
  3434  00FDC5  45                 	db	69	;'E'
  3435  00FDC6  53                 	db	83	;'S'
  3436  00FDC7  52                 	db	82	;'R'
  3437  00FDC8  20                 	db	32
  3438  00FDC9  20                 	db	32
  3439  00FDCA  20                 	db	32
  3440  00FDCB  20                 	db	32
  3441  00FDCC  20                 	db	32
  3442  00FDCD  20                 	db	32
  3443  00FDCE  20                 	db	32
  3444  00FDCF  20                 	db	32
  3445  00FDD0  20                 	db	32
  3446  00FDD1  00                 	db	0
  3447  00FDD2                     STR_16:
  3448                           
  3449                           ; BSR set to: 57
  3450  00FDD2  43                 	db	67	;'C'
  3451  00FDD3  61                 	db	97	;'a'
  3452  00FDD4  6C                 	db	108	;'l'
  3453  00FDD5  63                 	db	99	;'c'
  3454  00FDD6  75                 	db	117	;'u'
  3455  00FDD7  6C                 	db	108	;'l'
  3456  00FDD8  61                 	db	97	;'a'
  3457  00FDD9  74                 	db	116	;'t'
  3458  00FDDA  69                 	db	105	;'i'
  3459  00FDDB  6F                 	db	111	;'o'
  3460  00FDDC  6E                 	db	110	;'n'
  3461  00FDDD  20                 	db	32
  3462  00FDDE  20                 	db	32
  3463  00FDDF  20                 	db	32
  3464  00FDE0  20                 	db	32
  3465  00FDE1  20                 	db	32
  3466  00FDE2  20                 	db	32
  3467  00FDE3  20                 	db	32
  3468  00FDE4  20                 	db	32
  3469  00FDE5  20                 	db	32
  3470  00FDE6  00                 	db	0
  3471  00FDE7                     STR_48:
  3472                           
  3473                           ; BSR set to: 57
  3474  00FDE7  43                 	db	67	;'C'
  3475  00FDE8  61                 	db	97	;'a'
  3476  00FDE9  6C                 	db	108	;'l'
  3477  00FDEA  69                 	db	105	;'i'
  3478  00FDEB  62                 	db	98	;'b'
  3479  00FDEC  72                 	db	114	;'r'
  3480  00FDED  61                 	db	97	;'a'
  3481  00FDEE  74                 	db	116	;'t'
  3482  00FDEF  69                 	db	105	;'i'
  3483  00FDF0  6F                 	db	111	;'o'
  3484  00FDF1  6E                 	db	110	;'n'
  3485  00FDF2  20                 	db	32
  3486  00FDF3  20                 	db	32
  3487  00FDF4  20                 	db	32
  3488  00FDF5  20                 	db	32
  3489  00FDF6  20                 	db	32
  3490  00FDF7  20                 	db	32
  3491  00FDF8  20                 	db	32
  3492  00FDF9  20                 	db	32
  3493  00FDFA  20                 	db	32
  3494  00FDFB  00                 	db	0
  3495  00FDFC                     STR_47:
  3496                           
  3497                           ; BSR set to: 57
  3498  00FDFC  53                 	db	83	;'S'
  3499  00FDFD  65                 	db	101	;'e'
  3500  00FDFE  6E                 	db	110	;'n'
  3501  00FDFF  73                 	db	115	;'s'
  3502  00FE00  6F                 	db	111	;'o'
  3503  00FE01  72                 	db	114	;'r'
  3504  00FE02  20                 	db	32
  3505  00FE03  5A                 	db	90	;'Z'
  3506  00FE04  65                 	db	101	;'e'
  3507  00FE05  72                 	db	114	;'r'
  3508  00FE06  6F                 	db	111	;'o'
  3509  00FE07  20                 	db	32
  3510  00FE08  20                 	db	32
  3511  00FE09  20                 	db	32
  3512  00FE0A  20                 	db	32
  3513  00FE0B  20                 	db	32
  3514  00FE0C  20                 	db	32
  3515  00FE0D  20                 	db	32
  3516  00FE0E  20                 	db	32
  3517  00FE0F  20                 	db	32
  3518  00FE10  00                 	db	0
  3519  00FE11                     STR_2:
  3520                           
  3521                           ; BSR set to: 57
  3522  00FE11  20                 	db	32
  3523  00FE12  56                 	db	86	;'V'
  3524  00FE13  65                 	db	101	;'e'
  3525  00FE14  72                 	db	114	;'r'
  3526  00FE15  73                 	db	115	;'s'
  3527  00FE16  69                 	db	105	;'i'
  3528  00FE17  6F                 	db	111	;'o'
  3529  00FE18  6E                 	db	110	;'n'
  3530  00FE19  20                 	db	32
  3531  00FE1A  25                 	db	37
  3532  00FE1B  73                 	db	115	;'s'
  3533  00FE1C  20                 	db	32
  3534  00FE1D  20                 	db	32
  3535  00FE1E  20                 	db	32
  3536  00FE1F  20                 	db	32
  3537  00FE20  20                 	db	32
  3538  00FE21  20                 	db	32
  3539  00FE22  20                 	db	32
  3540  00FE23  20                 	db	32
  3541  00FE24  20                 	db	32
  3542  00FE25  00                 	db	0
  3543  00FE26                     STR_68:
  3544                           
  3545                           ; BSR set to: 57
  3546  00FE26  31                 	db	49	;'1'
  3547  00FE27  30                 	db	48	;'0'
  3548  00FE28  41                 	db	65	;'A'
  3549  00FE29  20                 	db	32
  3550  00FE2A  43                 	db	67	;'C'
  3551  00FE2B  61                 	db	97	;'a'
  3552  00FE2C  6C                 	db	108	;'l'
  3553  00FE2D  20                 	db	32
  3554  00FE2E  53                 	db	83	;'S'
  3555  00FE2F  65                 	db	101	;'e'
  3556  00FE30  74                 	db	116	;'t'
  3557  00FE31  20                 	db	32
  3558  00FE32  20                 	db	32
  3559  00FE33  20                 	db	32
  3560  00FE34  20                 	db	32
  3561  00FE35  20                 	db	32
  3562  00FE36  20                 	db	32
  3563  00FE37  20                 	db	32
  3564  00FE38  20                 	db	32
  3565  00FE39  20                 	db	32
  3566  00FE3A  00                 	db	0
  3567  00FE3B                     STR_55:
  3568                           
  3569                           ; BSR set to: 57
  3570  00FE3B  5A                 	db	90	;'Z'
  3571  00FE3C  65                 	db	101	;'e'
  3572  00FE3D  72                 	db	114	;'r'
  3573  00FE3E  6F                 	db	111	;'o'
  3574  00FE3F  20                 	db	32
  3575  00FE40  43                 	db	67	;'C'
  3576  00FE41  61                 	db	97	;'a'
  3577  00FE42  6C                 	db	108	;'l'
  3578  00FE43  20                 	db	32
  3579  00FE44  53                 	db	83	;'S'
  3580  00FE45  65                 	db	101	;'e'
  3581  00FE46  74                 	db	116	;'t'
  3582  00FE47  20                 	db	32
  3583  00FE48  20                 	db	32
  3584  00FE49  20                 	db	32
  3585  00FE4A  20                 	db	32
  3586  00FE4B  20                 	db	32
  3587  00FE4C  20                 	db	32
  3588  00FE4D  20                 	db	32
  3589  00FE4E  20                 	db	32
  3590  00FE4F  00                 	db	0
  3591  00FE50                     STR_60:
  3592                           
  3593                           ; BSR set to: 57
  3594  00FE50  31                 	db	49	;'1'
  3595  00FE51  30                 	db	48	;'0'
  3596  00FE52  20                 	db	32
  3597  00FE53  41                 	db	65	;'A'
  3598  00FE54  6D                 	db	109	;'m'
  3599  00FE55  70                 	db	112	;'p'
  3600  00FE56  20                 	db	32
  3601  00FE57  53                 	db	83	;'S'
  3602  00FE58  65                 	db	101	;'e'
  3603  00FE59  6E                 	db	110	;'n'
  3604  00FE5A  73                 	db	115	;'s'
  3605  00FE5B  6F                 	db	111	;'o'
  3606  00FE5C  72                 	db	114	;'r'
  3607  00FE5D  20                 	db	32
  3608  00FE5E  20                 	db	32
  3609  00FE5F  20                 	db	32
  3610  00FE60  20                 	db	32
  3611  00FE61  20                 	db	32
  3612  00FE62  20                 	db	32
  3613  00FE63  20                 	db	32
  3614  00FE64  00                 	db	0
  3615  00FE65                     STR_1:
  3616                           
  3617                           ; BSR set to: 57
  3618  00FE65  20                 	db	32
  3619  00FE66  4D                 	db	77	;'M'
  3620  00FE67  42                 	db	66	;'B'
  3621  00FE68  4D                 	db	77	;'M'
  3622  00FE69  43                 	db	67	;'C'
  3623  00FE6A  20                 	db	32
  3624  00FE6B  53                 	db	83	;'S'
  3625  00FE6C  4F                 	db	79	;'O'
  3626  00FE6D  4C                 	db	76	;'L'
  3627  00FE6E  41                 	db	65	;'A'
  3628  00FE6F  52                 	db	82	;'R'
  3629  00FE70  4D                 	db	77	;'M'
  3630  00FE71  4F                 	db	79	;'O'
  3631  00FE72  4E                 	db	78	;'N'
  3632  00FE73  20                 	db	32
  3633  00FE74  20                 	db	32
  3634  00FE75  20                 	db	32
  3635  00FE76  20                 	db	32
  3636  00FE77  20                 	db	32
  3637  00FE78  20                 	db	32
  3638  00FE79  00                 	db	0
  3639  00FE7A                     STR_46:
  3640                           
  3641                           ; BSR set to: 57
  3642  00FE7A  42                 	db	66	;'B'
  3643  00FE7B  61                 	db	97	;'a'
  3644  00FE7C  74                 	db	116	;'t'
  3645  00FE7D  74                 	db	116	;'t'
  3646  00FE7E  65                 	db	101	;'e'
  3647  00FE7F  72                 	db	114	;'r'
  3648  00FE80  79                 	db	121	;'y'
  3649  00FE81  20                 	db	32
  3650  00FE82  61                 	db	97	;'a'
  3651  00FE83  6E                 	db	110	;'n'
  3652  00FE84  64                 	db	100	;'d'
  3653  00FE85  20                 	db	32
  3654  00FE86  50                 	db	80	;'P'
  3655  00FE87  56                 	db	86	;'V'
  3656  00FE88  20                 	db	32
  3657  00FE89  20                 	db	32
  3658  00FE8A  20                 	db	32
  3659  00FE8B  20                 	db	32
  3660  00FE8C  20                 	db	32
  3661  00FE8D  20                 	db	32
  3662  00FE8E  00                 	db	0
  3663  00FE8F                     STR_18:
  3664                           
  3665                           ; BSR set to: 57
  3666  00FE8F  43                 	db	67	;'C'
  3667  00FE90  68                 	db	104	;'h'
  3668  00FE91  65                 	db	101	;'e'
  3669  00FE92  63                 	db	99	;'c'
  3670  00FE93  6B                 	db	107	;'k'
  3671  00FE94  69                 	db	105	;'i'
  3672  00FE95  6E                 	db	110	;'n'
  3673  00FE96  67                 	db	103	;'g'
  3674  00FE97  20                 	db	32
  3675  00FE98  25                 	db	37
  3676  00FE99  63                 	db	99	;'c'
  3677  00FE9A  20                 	db	32
  3678  00FE9B  25                 	db	37
  3679  00FE9C  63                 	db	99	;'c'
  3680  00FE9D  20                 	db	32
  3681  00FE9E  20                 	db	32
  3682  00FE9F  20                 	db	32
  3683  00FEA0  20                 	db	32
  3684  00FEA1  20                 	db	32
  3685  00FEA2  20                 	db	32
  3686  00FEA3  00                 	db	0
  3687  00FEA4                     STR_50:
  3688                           
  3689                           ; BSR set to: 57
  3690  00FEA4  53                 	db	83	;'S'
  3691  00FEA5  65                 	db	101	;'e'
  3692  00FEA6  6E                 	db	110	;'n'
  3693  00FEA7  73                 	db	115	;'s'
  3694  00FEA8  6F                 	db	111	;'o'
  3695  00FEA9  72                 	db	114	;'r'
  3696  00FEAA  20                 	db	32
  3697  00FEAB  52                 	db	82	;'R'
  3698  00FEAC  65                 	db	101	;'e'
  3699  00FEAD  61                 	db	97	;'a'
  3700  00FEAE  64                 	db	100	;'d'
  3701  00FEAF  69                 	db	105	;'i'
  3702  00FEB0  6E                 	db	110	;'n'
  3703  00FEB1  67                 	db	103	;'g'
  3704  00FEB2  73                 	db	115	;'s'
  3705  00FEB3  20                 	db	32
  3706  00FEB4  20                 	db	32
  3707  00FEB5  20                 	db	32
  3708  00FEB6  20                 	db	32
  3709  00FEB7  20                 	db	32
  3710  00FEB8  00                 	db	0
  3711  00FEB9                     STR_8:
  3712                           
  3713                           ; BSR set to: 57
  3714  00FEB9  52                 	db	82	;'R'
  3715  00FEBA  65                 	db	101	;'e'
  3716  00FEBB  61                 	db	97	;'a'
  3717  00FEBC  64                 	db	100	;'d'
  3718  00FEBD  20                 	db	32
  3719  00FEBE  45                 	db	69	;'E'
  3720  00FEBF  45                 	db	69	;'E'
  3721  00FEC0  50                 	db	80	;'P'
  3722  00FEC1  52                 	db	82	;'R'
  3723  00FEC2  4F                 	db	79	;'O'
  3724  00FEC3  4D                 	db	77	;'M'
  3725  00FEC4  20                 	db	32
  3726  00FEC5  44                 	db	68	;'D'
  3727  00FEC6  41                 	db	65	;'A'
  3728  00FEC7  54                 	db	84	;'T'
  3729  00FEC8  41                 	db	65	;'A'
  3730  00FEC9  20                 	db	32
  3731  00FECA  20                 	db	32
  3732  00FECB  20                 	db	32
  3733  00FECC  20                 	db	32
  3734  00FECD  00                 	db	0
  3735  00FECE                     STR_71:
  3736                           
  3737                           ; BSR set to: 57
  3738  00FECE  31                 	db	49	;'1'
  3739  00FECF  30                 	db	48	;'0'
  3740  00FED0  41                 	db	65	;'A'
  3741  00FED1  20                 	db	32
  3742  00FED2  4F                 	db	79	;'O'
  3743  00FED3  75                 	db	117	;'u'
  3744  00FED4  74                 	db	116	;'t'
  3745  00FED5  20                 	db	32
  3746  00FED6  4F                 	db	79	;'O'
  3747  00FED7  66                 	db	102	;'f'
  3748  00FED8  20                 	db	32
  3749  00FED9  52                 	db	82	;'R'
  3750  00FEDA  61                 	db	97	;'a'
  3751  00FEDB  6E                 	db	110	;'n'
  3752  00FEDC  67                 	db	103	;'g'
  3753  00FEDD  65                 	db	101	;'e'
  3754  00FEDE  20                 	db	32
  3755  00FEDF  20                 	db	32
  3756  00FEE0  20                 	db	32
  3757  00FEE1  20                 	db	32
  3758  00FEE2  00                 	db	0
  3759  00FEE3                     STR_17:
  3760                           
  3761                           ; BSR set to: 57
  3762  00FEE3  43                 	db	67	;'C'
  3763  00FEE4  68                 	db	104	;'h'
  3764  00FEE5  65                 	db	101	;'e'
  3765  00FEE6  63                 	db	99	;'c'
  3766  00FEE7  6B                 	db	107	;'k'
  3767  00FEE8  20                 	db	32
  3768  00FEE9  33                 	db	51	;'3'
  3769  00FEEA  30                 	db	48	;'0'
  3770  00FEEB  20                 	db	32
  3771  00FEEC  73                 	db	115	;'s'
  3772  00FEED  65                 	db	101	;'e'
  3773  00FEEE  63                 	db	99	;'c'
  3774  00FEEF  6F                 	db	111	;'o'
  3775  00FEF0  6E                 	db	110	;'n'
  3776  00FEF1  64                 	db	100	;'d'
  3777  00FEF2  73                 	db	115	;'s'
  3778  00FEF3  20                 	db	32
  3779  00FEF4  20                 	db	32
  3780  00FEF5  20                 	db	32
  3781  00FEF6  20                 	db	32
  3782  00FEF7  00                 	db	0
  3783  00FEF8                     STR_58:
  3784                           
  3785                           ; BSR set to: 57
  3786  00FEF8  5A                 	db	90	;'Z'
  3787  00FEF9  65                 	db	101	;'e'
  3788  00FEFA  72                 	db	114	;'r'
  3789  00FEFB  6F                 	db	111	;'o'
  3790  00FEFC  20                 	db	32
  3791  00FEFD  4F                 	db	79	;'O'
  3792  00FEFE  75                 	db	117	;'u'
  3793  00FEFF  74                 	db	116	;'t'
  3794  00FF00  20                 	db	32
  3795  00FF01  4F                 	db	79	;'O'
  3796  00FF02  66                 	db	102	;'f'
  3797  00FF03  20                 	db	32
  3798  00FF04  52                 	db	82	;'R'
  3799  00FF05  61                 	db	97	;'a'
  3800  00FF06  6E                 	db	110	;'n'
  3801  00FF07  67                 	db	103	;'g'
  3802  00FF08  65                 	db	101	;'e'
  3803  00FF09  20                 	db	32
  3804  00FF0A  20                 	db	32
  3805  00FF0B  20                 	db	32
  3806  00FF0C  00                 	db	0
  3807  00FF0D                     STR_52:
  3808                           
  3809                           ; BSR set to: 57
  3810  00FF0D  53                 	db	83	;'S'
  3811  00FF0E  74                 	db	116	;'t'
  3812  00FF0F  61                 	db	97	;'a'
  3813  00FF10  62                 	db	98	;'b'
  3814  00FF11  69                 	db	105	;'i'
  3815  00FF12  6C                 	db	108	;'l'
  3816  00FF13  69                 	db	105	;'i'
  3817  00FF14  74                 	db	116	;'t'
  3818  00FF15  79                 	db	121	;'y'
  3819  00FF16  20                 	db	32
  3820  00FF17  63                 	db	99	;'c'
  3821  00FF18  6C                 	db	108	;'l'
  3822  00FF19  6F                 	db	111	;'o'
  3823  00FF1A  63                 	db	99	;'c'
  3824  00FF1B  6B                 	db	107	;'k'
  3825  00FF1C  20                 	db	32
  3826  00FF1D  25                 	db	37
  3827  00FF1E  64                 	db	100	;'d'
  3828  00FF1F  20                 	db	32
  3829  00FF20  20                 	db	32
  3830  00FF21  00                 	db	0
  3831  00FF22                     STR_9:
  3832                           
  3833                           ; BSR set to: 57
  3834  00FF22  49                 	db	73	;'I'
  3835  00FF23  6E                 	db	110	;'n'
  3836  00FF24  76                 	db	118	;'v'
  3837  00FF25  61                 	db	97	;'a'
  3838  00FF26  6C                 	db	108	;'l'
  3839  00FF27  69                 	db	105	;'i'
  3840  00FF28  64                 	db	100	;'d'
  3841  00FF29  20                 	db	32
  3842  00FF2A  45                 	db	69	;'E'
  3843  00FF2B  45                 	db	69	;'E'
  3844  00FF2C  50                 	db	80	;'P'
  3845  00FF2D  52                 	db	82	;'R'
  3846  00FF2E  4F                 	db	79	;'O'
  3847  00FF2F  4D                 	db	77	;'M'
  3848  00FF30  20                 	db	32
  3849  00FF31  44                 	db	68	;'D'
  3850  00FF32  41                 	db	65	;'A'
  3851  00FF33  54                 	db	84	;'T'
  3852  00FF34  41                 	db	65	;'A'
  3853  00FF35  20                 	db	32
  3854  00FF36  00                 	db	0
  3855  00FF37                     STR_49:
  3856                           
  3857                           ; BSR set to: 57
  3858  00FF37  52                 	db	82	;'R'
  3859  00FF38  65                 	db	101	;'e'
  3860  00FF39  6C                 	db	108	;'l'
  3861  00FF3A  65                 	db	101	;'e'
  3862  00FF3B  61                 	db	97	;'a'
  3863  00FF3C  73                 	db	115	;'s'
  3864  00FF3D  65                 	db	101	;'e'
  3865  00FF3E  20                 	db	32
  3866  00FF3F  62                 	db	98	;'b'
  3867  00FF40  75                 	db	117	;'u'
  3868  00FF41  74                 	db	116	;'t'
  3869  00FF42  74                 	db	116	;'t'
  3870  00FF43  6F                 	db	111	;'o'
  3871  00FF44  6E                 	db	110	;'n'
  3872  00FF45  20                 	db	32
  3873  00FF46  25                 	db	37
  3874  00FF47  63                 	db	99	;'c'
  3875  00FF48  20                 	db	32
  3876  00FF49  20                 	db	32
  3877  00FF4A  00                 	db	0
  3878  00FF4B                     STR_76:
  3879                           
  3880                           ; BSR set to: 57
  3881  00FF4B  48                 	db	72	;'H'
  3882  00FF4C  45                 	db	69	;'E'
  3883  00FF4D  4C                 	db	76	;'L'
  3884  00FF4E  50                 	db	80	;'P'
  3885  00FF4F  20                 	db	32
  3886  00FF50  25                 	db	37
  3887  00FF51  73                 	db	115	;'s'
  3888  00FF52  20                 	db	32
  3889  00FF53  20                 	db	32
  3890  00FF54  20                 	db	32
  3891  00FF55  20                 	db	32
  3892  00FF56  20                 	db	32
  3893  00FF57  20                 	db	32
  3894  00FF58  20                 	db	32
  3895  00FF59  20                 	db	32
  3896  00FF5A  20                 	db	32
  3897  00FF5B  20                 	db	32
  3898  00FF5C  20                 	db	32
  3899  00FF5D  00                 	db	0
  3900  00FF5E                     
  3901                           ; BSR set to: 57
  3902  00FF5E  44                 	db	68	;'D'
  3903  00FF5F  49                 	db	73	;'I'
  3904  00FF60  53                 	db	83	;'S'
  3905  00FF61  50                 	db	80	;'P'
  3906  00FF62  4C                 	db	76	;'L'
  3907  00FF63  41                 	db	65	;'A'
  3908  00FF64  59                 	db	89	;'Y'
  3909  00FF65  20                 	db	32
  3910  00FF66  25                 	db	37
  3911  00FF67  73                 	db	115	;'s'
  3912  00FF68  20                 	db	32
  3913  00FF69  20                 	db	32
  3914  00FF6A  20                 	db	32
  3915  00FF6B  20                 	db	32
  3916  00FF6C  20                 	db	32
  3917  00FF6D  20                 	db	32
  3918  00FF6E  20                 	db	32
  3919  00FF6F  20                 	db	32
  3920  00FF70  00                 	db	0
  3921  00FF71                     STR_62:
  3922                           
  3923                           ; BSR set to: 57
  3924  00FF71  50                 	db	80	;'P'
  3925  00FF72  72                 	db	114	;'r'
  3926  00FF73  65                 	db	101	;'e'
  3927  00FF74  73                 	db	115	;'s'
  3928  00FF75  73                 	db	115	;'s'
  3929  00FF76  20                 	db	32
  3930  00FF77  62                 	db	98	;'b'
  3931  00FF78  75                 	db	117	;'u'
  3932  00FF79  74                 	db	116	;'t'
  3933  00FF7A  74                 	db	116	;'t'
  3934  00FF7B  6F                 	db	111	;'o'
  3935  00FF7C  6E                 	db	110	;'n'
  3936  00FF7D  20                 	db	32
  3937  00FF7E  25                 	db	37
  3938  00FF7F  63                 	db	99	;'c'
  3939  00FF80  20                 	db	32
  3940  00FF81  20                 	db	32
  3941  00FF82  00                 	db	0
  3942  00FF83                     
  3943                           ; BSR set to: 57
  3944  00FF83  25                 	db	37
  3945  00FF84  64                 	db	100	;'d'
  3946  00FF85  20                 	db	32
  3947  00FF86  25                 	db	37
  3948  00FF87  32                 	db	50	;'2'
  3949  00FF88  2E                 	db	46
  3950  00FF89  34                 	db	52	;'4'
  3951  00FF8A  66                 	db	102	;'f'
  3952  00FF8B  2C                 	db	44
  3953  00FF8C  20                 	db	32
  3954  00FF8D  25                 	db	37
  3955  00FF8E  64                 	db	100	;'d'
  3956  00FF8F  20                 	db	32
  3957  00FF90  20                 	db	32
  3958  00FF91  20                 	db	32
  3959  00FF92  23                 	db	35
  3960  00FF93  00                 	db	0
  3961  00FF94                     STR_22:
  3962                           
  3963                           ; BSR set to: 57
  3964  00FF94  25                 	db	37
  3965  00FF95  64                 	db	100	;'d'
  3966  00FF96  20                 	db	32
  3967  00FF97  25                 	db	37
  3968  00FF98  32                 	db	50	;'2'
  3969  00FF99  2E                 	db	46
  3970  00FF9A  34                 	db	52	;'4'
  3971  00FF9B  66                 	db	102	;'f'
  3972  00FF9C  20                 	db	32
  3973  00FF9D  20                 	db	32
  3974  00FF9E  20                 	db	32
  3975  00FF9F  25                 	db	37
  3976  00FFA0  64                 	db	100	;'d'
  3977  00FFA1  20                 	db	32
  3978  00FFA2  20                 	db	32
  3979  00FFA3  00                 	db	0
  3980  00FFA4                     STR_80:
  3981                           
  3982                           ; BSR set to: 57
  3983  00FFA4  76                 	db	118	;'v'
  3984  00FFA5  74                 	db	116	;'t'
  3985  00FFA6  65                 	db	101	;'e'
  3986  00FFA7  72                 	db	114	;'r'
  3987  00FFA8  6D                 	db	109	;'m'
  3988  00FFA9  20                 	db	32
  3989  00FFAA  25                 	db	37
  3990  00FFAB  78                 	db	120	;'x'
  3991  00FFAC  3A                 	db	58	;':'
  3992  00FFAD  25                 	db	37
  3993  00FFAE  78                 	db	120	;'x'
  3994  00FFAF  20                 	db	32
  3995  00FFB0  20                 	db	32
  3996  00FFB1  20                 	db	32
  3997  00FFB2  00                 	db	0
  3998  00FFB3                     STR_74:
  3999                           
  4000                           ; BSR set to: 57
  4001  00FFB3  46                 	db	70	;'F'
  4002  00FFB4  65                 	db	101	;'e'
  4003  00FFB5  62                 	db	98	;'b'
  4004  00FFB6  20                 	db	32
  4005  00FFB7  31                 	db	49	;'1'
  4006  00FFB8  32                 	db	50	;'2'
  4007  00FFB9  20                 	db	32
  4008  00FFBA  32                 	db	50	;'2'
  4009  00FFBB  30                 	db	48	;'0'
  4010  00FFBC  32                 	db	50	;'2'
  4011  00FFBD  30                 	db	48	;'0'
  4012  00FFBE  00                 	db	0
  4013  00FFBF                     STR_78:
  4014                           
  4015                           ; BSR set to: 57
  4016  00FFBF  25                 	db	37
  4017  00FFC0  73                 	db	115	;'s'
  4018  00FFC1  20                 	db	32
  4019  00FFC2  20                 	db	32
  4020  00FFC3  20                 	db	32
  4021  00FFC4  20                 	db	32
  4022  00FFC5  20                 	db	32
  4023  00FFC6  20                 	db	32
  4024  00FFC7  20                 	db	32
  4025  00FFC8  00                 	db	0
  4026  00FFC9                     STR_75:
  4027                           
  4028                           ; BSR set to: 57
  4029  00FFC9  31                 	db	49	;'1'
  4030  00FFCA  34                 	db	52	;'4'
  4031  00FFCB  3A                 	db	58	;':'
  4032  00FFCC  31                 	db	49	;'1'
  4033  00FFCD  38                 	db	56	;'8'
  4034  00FFCE  3A                 	db	58	;':'
  4035  00FFCF  32                 	db	50	;'2'
  4036  00FFD0  31                 	db	49	;'1'
  4037  00FFD1  00                 	db	0
  4038  00FFD2                     STR_3:
  4039                           
  4040                           ; BSR set to: 57
  4041  00FFD2  31                 	db	49	;'1'
  4042  00FFD3  2E                 	db	46
  4043  00FFD4  32                 	db	50	;'2'
  4044  00FFD5  31                 	db	49	;'1'
  4045  00FFD6  00                 	db	0
  4046  00FFD7                     STR_94:
  4047                           
  4048                           ; BSR set to: 57
  4049  00FFD7  49                 	db	73	;'I'
  4050  00FFD8  4E                 	db	78	;'N'
  4051  00FFD9  46                 	db	70	;'F'
  4052  00FFDA  00                 	db	0
  4053  00FFDB                     STR_98:
  4054                           
  4055                           ; BSR set to: 57
  4056  00FFDB  4E                 	db	78	;'N'
  4057  00FFDC  41                 	db	65	;'A'
  4058  00FFDD  4E                 	db	78	;'N'
  4059  00FFDE  00                 	db	0
  4060  00FFDF                     STR_95:
  4061                           
  4062                           ; BSR set to: 57
  4063  00FFDF  69                 	db	105	;'i'
  4064  00FFE0  6E                 	db	110	;'n'
  4065  00FFE1  66                 	db	102	;'f'
  4066  00FFE2  00                 	db	0
  4067  00FFE3                     STR_99:
  4068                           
  4069                           ; BSR set to: 57
  4070  00FFE3  6E                 	db	110	;'n'
  4071  00FFE4  61                 	db	97	;'a'
  4072  00FFE5  6E                 	db	110	;'n'
  4073  00FFE6  00                 	db	0
  4074  00FFE7                     STR_125:
  4075                           
  4076                           ; BSR set to: 57
  4077  00FFE7  6C                 	db	108	;'l'
  4078  00FFE8  58                 	db	88	;'X'
  4079  00FFE9  00                 	db	0
  4080  00FFEA                     STR_102:
  4081                           
  4082                           ; BSR set to: 57
  4083  00FFEA  6C                 	db	108	;'l'
  4084  00FFEB  64                 	db	100	;'d'
  4085  00FFEC  00                 	db	0
  4086  00FFED                     STR_111:
  4087                           
  4088                           ; BSR set to: 57
  4089  00FFED  6C                 	db	108	;'l'
  4090  00FFEE  66                 	db	102	;'f'
  4091  00FFEF  00                 	db	0
  4092  00FFF0                     STR_106:
  4093                           
  4094                           ; BSR set to: 57
  4095  00FFF0  6C                 	db	108	;'l'
  4096  00FFF1  69                 	db	105	;'i'
  4097  00FFF2  00                 	db	0
  4098  00FFF3                     STR_116:
  4099                           
  4100                           ; BSR set to: 57
  4101  00FFF3  6C                 	db	108	;'l'
  4102  00FFF4  75                 	db	117	;'u'
  4103  00FFF5  00                 	db	0
  4104  00FFF6                     STR_121:
  4105                           
  4106                           ; BSR set to: 57
  4107  00FFF6  6C                 	db	108	;'l'
  4108  00FFF7  78                 	db	120	;'x'
  4109  00FFF8  00                 	db	0
  4110  00FFF9                     STR_73:
  4111                           
  4112                           ; BSR set to: 57
  4113  00FFF9  25                 	db	37
  4114  00FFFA  63                 	db	99	;'c'
  4115  00FFFB  00                 	db	0
  4116  00FFFC                     STR_72:
  4117                           
  4118                           ; BSR set to: 57
  4119  00FFFC  25                 	db	37
  4120  00FFFD  73                 	db	115	;'s'
  4121  00FFFE  00                 	db	0
  4122  0000                     
  4123                           ; #config settings
  4124  00FFFF  00                 	db	0	; dummy byte at the end
  4125  0000                     
  4126                           	psect	cinit
  4127  01AFC2                     __pcinit:
  4128                           	opt callstack 0
  4129  01AFC2                     start_initialization:
  4130                           	opt callstack 0
  4131  01AFC2                     __initialization:
  4132                           	opt callstack 0
  4133                           
  4134                           ; Initialize objects allocated to BIGRAM (835 bytes)
  4135                           ; load TBLPTR registers with __pidataBIGRAM
  4136  01AFC2  0EB2               	movlw	low __pidataBIGRAM
  4137  01AFC4  6EF6               	movwf	tblptrl,c
  4138  01AFC6  0E74               	movlw	high __pidataBIGRAM
  4139  01AFC8  6EF7               	movwf	tblptrh,c
  4140  01AFCA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4141  01AFCC  6EF8               	movwf	tblptru,c
  4142  01AFCE  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  4143  01AFD2  EE20 F343          	lfsr	2,835
  4144  01AFD6                     copy_data0:
  4145  01AFD6  0009               	tblrd		*+
  4146  01AFD8  006F FFD7 FFEE     	movff	tablat,postinc0
  4147  01AFDE  50DD               	movf	postdec2,w,c
  4148  01AFE0  50D9               	movf	fsr2l,w,c
  4149  01AFE2  E1F9               	bnz	copy_data0
  4150  01AFE4  50DA               	movf	fsr2h,w,c
  4151  01AFE6  E1F7               	bnz	copy_data0
  4152                           
  4153                           ; Initialize objects allocated to BANK2 (192 bytes)
  4154                           ; load TBLPTR registers with __pidataBANK2
  4155  01AFE8  0ECA               	movlw	low __pidataBANK2
  4156  01AFEA  6EF6               	movwf	tblptrl,c
  4157  01AFEC  0EB7               	movlw	high __pidataBANK2
  4158  01AFEE  6EF7               	movwf	tblptrh,c
  4159  01AFF0  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4160  01AFF2  6EF8               	movwf	tblptru,c
  4161  01AFF4  EE00  F200         	lfsr	0,__pdataBANK2
  4162  01AFF8  EE20 F0C0          	lfsr	2,192
  4163  01AFFC                     copy_data1:
  4164  01AFFC  0009               	tblrd		*+
  4165  01AFFE  006F FFD7 FFEE     	movff	tablat,postinc0
  4166  01B004  50DD               	movf	postdec2,w,c
  4167  01B006  50D9               	movf	fsr2l,w,c
  4168  01B008  E1F9               	bnz	copy_data1
  4169                           
  4170                           ; Initialize objects allocated to BANK1 (174 bytes)
  4171                           ; load TBLPTR registers with __pidataBANK1
  4172  01B00A  0E70               	movlw	low __pidataBANK1
  4173  01B00C  6EF6               	movwf	tblptrl,c
  4174  01B00E  0EBB               	movlw	high __pidataBANK1
  4175  01B010  6EF7               	movwf	tblptrh,c
  4176  01B012  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4177  01B014  6EF8               	movwf	tblptru,c
  4178  01B016  EE00  F100         	lfsr	0,__pdataBANK1
  4179  01B01A  EE20 F0AE          	lfsr	2,174
  4180  01B01E                     copy_data2:
  4181  01B01E  0009               	tblrd		*+
  4182  01B020  006F FFD7 FFEE     	movff	tablat,postinc0
  4183  01B026  50DD               	movf	postdec2,w,c
  4184  01B028  50D9               	movf	fsr2l,w,c
  4185  01B02A  E1F9               	bnz	copy_data2
  4186                           
  4187                           ; Initialize objects allocated to BANK0 (9 bytes)
  4188                           ; load TBLPTR registers with __pidataBANK0
  4189  01B02C  0E7A               	movlw	low __pidataBANK0
  4190  01B02E  6EF6               	movwf	tblptrl,c
  4191  01B030  0EDB               	movlw	high __pidataBANK0
  4192  01B032  6EF7               	movwf	tblptrh,c
  4193  01B034  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  4194  01B036  6EF8               	movwf	tblptru,c
  4195  01B038  EE00  F0F1         	lfsr	0,__pdataBANK0
  4196  01B03C  EE20 F009          	lfsr	2,9
  4197  01B040                     copy_data3:
  4198  01B040  0009               	tblrd		*+
  4199  01B042  006F FFD7 FFEE     	movff	tablat,postinc0
  4200  01B048  50DD               	movf	postdec2,w,c
  4201  01B04A  50D9               	movf	fsr2l,w,c
  4202  01B04C  E1F9               	bnz	copy_data3
  4203                           
  4204                           ; Clear objects allocated to BIGRAM (482 bytes)
  4205  01B04E  EE02  F142         	lfsr	0,__pbssBIGRAM
  4206  01B052  EE20 F1E2          	lfsr	2,482
  4207  01B056                     clear_0:
  4208  01B056  6AEE               	clrf	postinc0,c
  4209  01B058  50DD               	movf	postdec2,w,c
  4210  01B05A  50D9               	movf	fsr2l,w,c
  4211  01B05C  E1FC               	bnz	clear_0
  4212  01B05E  50DA               	movf	fsr2h,w,c
  4213  01B060  E1FA               	bnz	clear_0
  4214                           
  4215                           ; Clear objects allocated to BANK5 (255 bytes)
  4216  01B062  EE01  F100         	lfsr	0,__pbssBANK5
  4217  01B066  EE20 F0FF          	lfsr	2,255
  4218  01B06A                     clear_1:
  4219  01B06A  6AEE               	clrf	postinc0,c
  4220  01B06C  50DD               	movf	postdec2,w,c
  4221  01B06E  50D9               	movf	fsr2l,w,c
  4222  01B070  E1FC               	bnz	clear_1
  4223  01B072  50DA               	movf	fsr2h,w,c
  4224  01B074  E1FA               	bnz	clear_1
  4225                           
  4226                           ; Clear objects allocated to BANK4 (234 bytes)
  4227  01B076  EE01  F000         	lfsr	0,__pbssBANK4
  4228  01B07A  0EEA               	movlw	234
  4229  01B07C                     clear_2:
  4230  01B07C  6AEE               	clrf	postinc0,c
  4231  01B07E  06E8               	decf	wreg,f,c
  4232  01B080  E1FD               	bnz	clear_2
  4233                           
  4234                           ; Clear objects allocated to BANK3 (231 bytes)
  4235  01B082  EE00  F300         	lfsr	0,__pbssBANK3
  4236  01B086  0EE7               	movlw	231
  4237  01B088                     clear_3:
  4238  01B088  6AEE               	clrf	postinc0,c
  4239  01B08A  06E8               	decf	wreg,f,c
  4240  01B08C  E1FD               	bnz	clear_3
  4241                           
  4242                           ; Clear objects allocated to BANK2 (64 bytes)
  4243  01B08E  EE00  F2C0         	lfsr	0,__pbssBANK2
  4244  01B092  0E40               	movlw	64
  4245  01B094                     clear_4:
  4246  01B094  6AEE               	clrf	postinc0,c
  4247  01B096  06E8               	decf	wreg,f,c
  4248  01B098  E1FD               	bnz	clear_4
  4249                           
  4250                           ; Clear objects allocated to BANK1 (75 bytes)
  4251  01B09A  EE00  F1AE         	lfsr	0,__pbssBANK1
  4252  01B09E  0E4B               	movlw	75
  4253  01B0A0                     clear_5:
  4254  01B0A0  6AEE               	clrf	postinc0,c
  4255  01B0A2  06E8               	decf	wreg,f,c
  4256  01B0A4  E1FD               	bnz	clear_5
  4257                           
  4258                           ; Clear objects allocated to BANK0 (120 bytes)
  4259  01B0A6  EE00  F060         	lfsr	0,__pbssBANK0
  4260  01B0AA  0E78               	movlw	120
  4261  01B0AC                     clear_6:
  4262  01B0AC  6AEE               	clrf	postinc0,c
  4263  01B0AE  06E8               	decf	wreg,f,c
  4264  01B0B0  E1FD               	bnz	clear_6
  4265                           
  4266                           ; Clear objects allocated to COMRAM (14 bytes)
  4267  01B0B2  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4268  01B0B6  0E0E               	movlw	14
  4269  01B0B8                     clear_7:
  4270  01B0B8  6AEE               	clrf	postinc0,c
  4271  01B0BA  06E8               	decf	wreg,f,c
  4272  01B0BC  E1FD               	bnz	clear_7
  4273                           
  4274                           ;
  4275                           ; Setup IVTBASE
  4276                           ;
  4277  01B0BE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4278  01B0C0  6ED5               	movwf	213,c
  4279  01B0C2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4280  01B0C4  6ED6               	movwf	214,c
  4281  01B0C6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4282  01B0C8  6ED7               	movwf	215,c
  4283  01B0CA                     end_of_initialization:
  4284                           	opt callstack 0
  4285  01B0CA                     __end_of__initialization:
  4286                           	opt callstack 0
  4287  01B0CA  0100               	movlb	0
  4288  01B0CC  EF00  F080         	goto	_main	;jump to C main() function
  4289                           
  4290                           	psect	bssCOMRAM
  4291  00003A                     __pbssCOMRAM:
  4292                           	opt callstack 0
  4293  00003A                     _width:
  4294                           	opt callstack 0
  4295  00003A                     	ds	2
  4296  00003C                     _prec:
  4297                           	opt callstack 0
  4298  00003C                     	ds	2
  4299  00003E                     _flags:
  4300                           	opt callstack 0
  4301  00003E                     	ds	2
  4302  000040                     calc_bsoc@log_update_wait:
  4303                           	opt callstack 0
  4304  000040                     	ds	1
  4305  000041                     check_day_time@day_delay:
  4306                           	opt callstack 0
  4307  000041                     	ds	1
  4308  000042                     dac_spi_control@S0:
  4309                           	opt callstack 0
  4310  000042                     	ds	1
  4311  000043                     dac_spi_control@init:
  4312                           	opt callstack 0
  4313  000043                     	ds	1
  4314  000044                     _uart2RxHead:
  4315                           	opt callstack 0
  4316  000044                     	ds	1
  4317  000045                     _uart2TxBufferRemaining:
  4318                           	opt callstack 0
  4319  000045                     	ds	1
  4320  000046                     _uart2TxTail:
  4321                           	opt callstack 0
  4322  000046                     	ds	1
  4323  000047                     _uart1RxHead:
  4324                           	opt callstack 0
  4325  000047                     	ds	1
  4326                           
  4327                           	psect	bssBANK0
  4328  000060                     __pbssBANK0:
  4329                           	opt callstack 0
  4330  000060                     _spi_link:
  4331                           	opt callstack 0
  4332  000060                     	ds	12
  4333  00006C                     _uart1RxBuffer:
  4334                           	opt callstack 0
  4335  00006C                     	ds	8
  4336  000074                     spinners@s:
  4337                           	opt callstack 0
  4338  000074                     	ds	6
  4339  00007A                     floorf@F524:
  4340                           	opt callstack 0
  4341  00007A                     	ds	4
  4342  00007E                     fabsf@F463:
  4343                           	opt callstack 0
  4344  00007E                     	ds	4
  4345  000082                     ___fpclassifyf@F463:
  4346                           	opt callstack 0
  4347  000082                     	ds	4
  4348  000086                     calc_ror_data@bcror:
  4349                           	opt callstack 0
  4350  000086                     	ds	4
  4351  00008A                     calc_ror_data@bvror:
  4352                           	opt callstack 0
  4353  00008A                     	ds	4
  4354  00008E                     calc_model_data@bcror:
  4355                           	opt callstack 0
  4356  00008E                     	ds	4
  4357  000092                     calc_model_data@bvror:
  4358                           	opt callstack 0
  4359  000092                     	ds	4
  4360  000096                     _utctime:
  4361                           	opt callstack 0
  4362  000096                     	ds	4
  4363  00009A                     wdtdelay@dcount:
  4364                           	opt callstack 0
  4365  00009A                     	ds	4
  4366  00009E                     _P:
  4367                           	opt callstack 0
  4368  00009E                     	ds	4
  4369  0000A2                     _TMR3_InterruptHandler:
  4370                           	opt callstack 0
  4371  0000A2                     	ds	3
  4372  0000A5                     _TMR5_InterruptHandler:
  4373                           	opt callstack 0
  4374  0000A5                     	ds	3
  4375  0000A8                     _TMR6_InterruptHandler:
  4376                           	opt callstack 0
  4377  0000A8                     	ds	3
  4378  0000AB                     _ADCC_ADTI_InterruptHandler:
  4379                           	opt callstack 0
  4380  0000AB                     	ds	3
  4381  0000AE                     _ADCC_ADI_InterruptHandler:
  4382                           	opt callstack 0
  4383  0000AE                     	ds	3
  4384  0000B1                     _UART1_RxInterruptHandler:
  4385                           	opt callstack 0
  4386  0000B1                     	ds	3
  4387  0000B4                     _UART2_TxInterruptHandler:
  4388                           	opt callstack 0
  4389  0000B4                     	ds	3
  4390  0000B7                     _UART2_RxInterruptHandler:
  4391                           	opt callstack 0
  4392  0000B7                     	ds	3
  4393  0000BA                     _INT1_InterruptHandler:
  4394                           	opt callstack 0
  4395  0000BA                     	ds	3
  4396  0000BD                     _INT0_InterruptHandler:
  4397                           	opt callstack 0
  4398  0000BD                     	ds	3
  4399  0000C0                     _nout:
  4400                           	opt callstack 0
  4401  0000C0                     	ds	2
  4402  0000C2                     TMR3_ISR@CountCallBack:
  4403                           	opt callstack 0
  4404  0000C2                     	ds	2
  4405  0000C4                     _timer3ReloadVal:
  4406                           	opt callstack 0
  4407  0000C4                     	ds	2
  4408  0000C6                     TMR5_ISR@CountCallBack:
  4409                           	opt callstack 0
  4410  0000C6                     	ds	2
  4411  0000C8                     _timer5ReloadVal:
  4412                           	opt callstack 0
  4413  0000C8                     	ds	2
  4414  0000CA                     esr_check@esr_state:
  4415                           	opt callstack 0
  4416  0000CA                     	ds	1
  4417  0000CB                     dac_spi_control@SB:
  4418                           	opt callstack 0
  4419  0000CB                     	ds	1
  4420  0000CC                     dac_spi_control@SC:
  4421                           	opt callstack 0
  4422  0000CC                     	ds	1
  4423  0000CD                     dac_spi_control@S2:
  4424                           	opt callstack 0
  4425  0000CD                     	ds	1
  4426  0000CE                     dac_spi_control@S1:
  4427                           	opt callstack 0
  4428  0000CE                     	ds	1
  4429  0000CF                     _mode_sw:
  4430                           	opt callstack 0
  4431  0000CF                     	ds	1
  4432  0000D0                     _uart2RxCount:
  4433                           	opt callstack 0
  4434  0000D0                     	ds	1
  4435  0000D1                     _uart2RxTail:
  4436                           	opt callstack 0
  4437  0000D1                     	ds	1
  4438  0000D2                     _uart2TxHead:
  4439                           	opt callstack 0
  4440  0000D2                     	ds	1
  4441  0000D3                     _uart1RxCount:
  4442                           	opt callstack 0
  4443  0000D3                     	ds	1
  4444  0000D4                     _uart1RxTail:
  4445                           	opt callstack 0
  4446  0000D4                     	ds	1
  4447  0000D5                     _crcObj:
  4448                           	opt callstack 0
  4449  0000D5                     	ds	3
  4450                           
  4451                           	psect	dataBANK0
  4452  0000F1                     __pdataBANK0:
  4453                           	opt callstack 0
  4454  0000F1                     _H:
  4455                           	opt callstack 0
  4456  0000F1                     	ds	9
  4457                           
  4458                           	psect	bssBANK1
  4459  0001AE                     __pbssBANK1:
  4460                           	opt callstack 0
  4461  0001AE                     _S:
  4462                           	opt callstack 0
  4463  0001AE                     	ds	41
  4464  0001D7                     _tickCount:
  4465                           	opt callstack 0
  4466  0001D7                     	ds	26
  4467  0001F1                     _seed:
  4468                           	opt callstack 0
  4469  0001F1                     	ds	8
  4470                           
  4471                           	psect	dataBANK1
  4472  000100                     __pdataBANK1:
  4473                           	opt callstack 0
  4474  000100                     stoa@F1166:
  4475                           	opt callstack 0
  4476  000100                     	ds	7
  4477  000107                     _R:
  4478                           	opt callstack 0
  4479  000107                     	ds	167
  4480                           
  4481                           	psect	bssBANK2
  4482  0002C0                     __pbssBANK2:
  4483                           	opt callstack 0
  4484  0002C0                     _uart2TxBuffer:
  4485                           	opt callstack 0
  4486  0002C0                     	ds	64
  4487                           
  4488                           	psect	dataBANK2
  4489  000200                     __pdataBANK2:
  4490                           	opt callstack 0
  4491  000200                     _V:
  4492                           	opt callstack 0
  4493  000200                     	ds	192
  4494                           
  4495                           	psect	bssBANK3
  4496  000300                     __pbssBANK3:
  4497                           	opt callstack 0
  4498  000300                     lp_filter@smooth:
  4499                           	opt callstack 0
  4500  000300                     	ds	84
  4501  000354                     _dbuf:
  4502                           	opt callstack 0
  4503  000354                     	ds	80
  4504  0003A4                     _ring_buf1:
  4505                           	opt callstack 0
  4506  0003A4                     	ds	67
  4507                           
  4508                           	psect	bssBANK4
  4509  000400                     __pbssBANK4:
  4510                           	opt callstack 0
  4511  000400                     _r_cal:
  4512                           	opt callstack 0
  4513  000400                     	ds	167
  4514  0004A7                     _ring_buf2:
  4515                           	opt callstack 0
  4516  0004A7                     	ds	67
  4517                           
  4518                           	psect	bssBANK5
  4519  000500                     __pbssBANK5:
  4520                           	opt callstack 0
  4521  000500                     _uart2RxBuffer:
  4522                           	opt callstack 0
  4523  000500                     	ds	255
  4524                           
  4525                           	psect	bssBIGRAM
  4526  000942                     __pbssBIGRAM:
  4527                           	opt callstack 0
  4528  000942                     _D:
  4529                           	opt callstack 0
  4530  000942                     	ds	482
  4531                           
  4532                           	psect	dataBIGRAM
  4533  0005FF                     __pdataBIGRAM:
  4534                           	opt callstack 0
  4535  0005FF                     _port_data:
  4536                           	opt callstack 0
  4537  0005FF                     	ds	512
  4538  0007FF                     _C:
  4539                           	opt callstack 0
  4540  0007FF                     	ds	323
  4541                           
  4542                           	psect	cstackBANK0
  4543  0000D8                     __pcstackBANK0:
  4544                           	opt callstack 0
  4545  0000D8                     ??_TMR3_ISR:
  4546                           
  4547                           ; 1 bytes @ 0x0
  4548  0000D8                     	ds	25
  4549                           
  4550                           	psect	cstackCOMRAM
  4551  000021                     __pcstackCOMRAM:
  4552                           	opt callstack 0
  4553  000021                     ??_ADCC_ThresholdISR:
  4554  000021                     
  4555                           ; 1 bytes @ 0x0
  4556  000021                     	ds	5
  4557  000026                     ??_TMR6_ISR:
  4558                           
  4559                           ; 1 bytes @ 0x5
  4560  000026                     	ds	1
  4561  000027                     ??_INT1_ISR:
  4562  000027                     
  4563                           ; 1 bytes @ 0x6
  4564  000027                     	ds	4
  4565  00002B                     ??_TMR5_ISR:
  4566                           
  4567                           ; 1 bytes @ 0xA
  4568  00002B                     	ds	15
  4569                           
  4570 ;;
  4571 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4572 ;;
  4573 ;; *************** function _main *****************
  4574 ;; Defined at:
  4575 ;;		line 189 in file "main.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;		None
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  esr_temp        4  [STACK] float 
  4580 ;;  i_esr           2  [STACK] unsigned short 
  4581 ;;  shape           1  [STACK] unsigned char 
  4582 ;;  inp_index       1  [STACK] unsigned char 
  4583 ;;  k               1  [STACK] unsigned char 
  4584 ;;  j               1  [STACK] unsigned char 
  4585 ;;  i               1  [STACK] unsigned char 
  4586 ;;  mode            1  [STACK] enum E17179
  4587 ;;  i_ror           1  [STACK] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1  [STACK] void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels required when called:   29
  4603 ;; This function calls:
  4604 ;;		_SYSTEM_Initialize
  4605 ;;		_StartTimer
  4606 ;;		_TimerDone
  4607 ;;		_WaitMs
  4608 ;;		___fladd
  4609 ;;		___flge
  4610 ;;		___fltol
  4611 ;;		_calc_model_data
  4612 ;;		_calc_ror_data
  4613 ;;		_check_adc_scan
  4614 ;;		_check_enter_button
  4615 ;;		_check_help
  4616 ;;		_clear_adc_scan
  4617 ;;		_clear_hid_pflags
  4618 ;;		_conv_raw_result
  4619 ;;		_convert_adc_data
  4620 ;;		_current_sensor_cal
  4621 ;;		_eaDogM_WriteCommand
  4622 ;;		_esr_check
  4623 ;;		_fabsf
  4624 ;;		_get_raw_result
  4625 ;;		_get_switch
  4626 ;;		_get_vterm_ptr
  4627 ;;		_hid_display
  4628 ;;		_init_bsoc
  4629 ;;		_init_display
  4630 ;;		_init_port_dma
  4631 ;;		_lp_filter
  4632 ;;		_mode_lamp_dim
  4633 ;;		_read_cal_data
  4634 ;;		_set_dac
  4635 ;;		_set_dac_a
  4636 ;;		_set_dac_b
  4637 ;;		_set_display_info
  4638 ;;		_set_load_relay_one
  4639 ;;		_set_load_relay_two
  4640 ;;		_set_vterm
  4641 ;;		_spinners
  4642 ;;		_sprintf
  4643 ;;		_srand
  4644 ;;		_start_adc_scan
  4645 ;;		_start_switch_handler
  4646 ;;		_static_soc
  4647 ;;		_update_cal_data
  4648 ;;		_update_hist_data
  4649 ;;		_update_lcd
  4650 ;;		_wait_lcd_done
  4651 ;; This function is called by:
  4652 ;;		Startup code after reset
  4653 ;; This function uses a reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text0
  4657  010000                     __ptext0:
  4658                           	opt callstack 0
  4659  010000                     _main:
  4660                           	opt callstack 0
  4661                           
  4662                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4663  010000  0E11               	movlw	17
  4664  010002  26E1               	addwf	fsr1l,f,c
  4665  010004  0E00               	movlw	0
  4666  010006  22E2               	addwfc	fsr1h,f,c
  4667                           
  4668                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4669                           ;stkvar	_inp_index @ sp[(-17)+11]
  4670                           
  4671                           ;incstack = 0
  4672  010008  0EFA               	movlw	-6
  4673  01000A  6AE3               	clrf	plusw1,c
  4674                           
  4675                           ;stkvar	_i @ sp[(-17)+14]
  4676  01000C  0EFD               	movlw	-3
  4677  01000E  6AE3               	clrf	plusw1,c
  4678                           
  4679                           ;stkvar	_j @ sp[(-17)+13]
  4680  010010  0EFC               	movlw	-4
  4681  010012  6AE3               	clrf	plusw1,c
  4682  010014  2AE3               	incf	plusw1,f,c
  4683                           
  4684                           ;stkvar	_k @ sp[(-17)+12]
  4685  010016  0EFB               	movlw	-5
  4686  010018  6AE3               	clrf	plusw1,c
  4687  01001A  82E3               	bsf	plusw1,1,c
  4688                           
  4689                           ;main.c: 195:  SYSTEM_Initialize();
  4690  01001C  EC67  F0E6         	call	_SYSTEM_Initialize	;wreg free
  4691                           
  4692                           ; BSR set to: 60
  4693                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4694  010020  8ED2               	bsf	210,7,c	;volatile
  4695                           
  4696                           ; BSR set to: 60
  4697                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4698  010022  8CD2               	bsf	210,6,c	;volatile
  4699                           
  4700                           ; BSR set to: 60
  4701                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4702  010024  0102               	movlb	2	; () banked
  4703  010026  6B00               	clrf	_V& (0+255),b	;volatile
  4704                           
  4705                           ; BSR set to: 2
  4706                           ;main.c: 208:  WaitMs(300);
  4707  010028  0E2C               	movlw	44
  4708  01002A  6EE6               	movwf	postinc1,c
  4709  01002C  0E01               	movlw	1
  4710  01002E  6EE6               	movwf	postinc1,c
  4711  010030  EC28  F0E9         	call	_WaitMs	;wreg free
  4712                           
  4713                           ;main.c: 209:  if (PORTBbits.RB0) {
  4714  010034  A0CB               	btfss	203,0,c	;volatile
  4715  010036  D004               	goto	l14711
  4716                           
  4717                           ;main.c: 210:   mode = UI_STATE_HOST;
  4718                           ;stkvar	_mode @ sp[(-17)+15]
  4719  010038  0EFE               	movlw	-2
  4720  01003A  6AE3               	clrf	plusw1,c
  4721  01003C  2AE3               	incf	plusw1,f,c
  4722                           
  4723                           ;main.c: 211:  } else {
  4724  01003E  D004               	goto	l14713
  4725  010040                     l14711:
  4726                           
  4727                           ;main.c: 212:   mode = UI_STATE_LOG;
  4728                           ;stkvar	_mode @ sp[(-17)+15]
  4729  010040  0EFE               	movlw	-2
  4730  010042  6AE3               	clrf	plusw1,c
  4731  010044  80E3               	bsf	plusw1,0,c
  4732  010046  82E3               	bsf	plusw1,1,c	;indir
  4733  010048                     l14713:
  4734                           
  4735                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4736                           ;stkvar	_mode @ sp[(-17)+15]
  4737  010048  0EFE               	movlw	-2
  4738  01004A  04E3               	decf	plusw1,w,c
  4739  01004C  A4D8               	btfss	status,2,c
  4740  01004E  D007               	goto	l1441
  4741                           
  4742                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4743  010050  80BD               	bsf	189,0,c	;volatile
  4744                           
  4745                           ;main.c: 217:   V.mode_pwm = 70;
  4746  010052  0E00               	movlw	0
  4747  010054  0102               	movlb	2	; () banked
  4748  010056  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  4749  010058  0E46               	movlw	70
  4750  01005A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  4751                           
  4752                           ;main.c: 218:  } else {
  4753  01005C  D004               	goto	l14717
  4754  01005E                     l1441:
  4755  01005E  90BD               	bcf	189,0,c	;volatile
  4756                           
  4757                           ;main.c: 220:   V.mode_pwm = 0;
  4758  010060  0102               	movlb	2	; () banked
  4759  010062  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  4760  010064  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  4761  010066                     l14717:
  4762                           
  4763                           ; BSR set to: 2
  4764                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4765  010066  0060  FA57  FFE6   	movff	_V+149,postinc1
  4766  01006C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  4767  010072  ECFF  F0EC         	call	_mode_lamp_dim	;wreg free
  4768  010076  D3A4               	goto	l14867
  4769  010078                     l14719:
  4770                           
  4771                           ; BSR set to: 2
  4772                           ;main.c: 230:    init_port_dma();
  4773  010078  ECDE  F0E9         	call	_init_port_dma	;wreg free
  4774                           
  4775                           ; BSR set to: 59
  4776                           ;main.c: 232:    init_display();
  4777  01007C  ECED  F0D8         	call	_init_display	;wreg free
  4778                           
  4779                           ; BSR set to: 61
  4780                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4781  010080  0E0C               	movlw	12
  4782  010082  6EE6               	movwf	postinc1,c
  4783  010084  EC7C  F0ED         	call	_eaDogM_WriteCommand	;wreg free
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;main.c: 234:    set_dac();
  4787  010088  EC5D  F0DD         	call	_set_dac	;wreg free
  4788                           
  4789                           ;main.c: 238:    set_load_relay_one(1);
  4790  01008C  0E01               	movlw	1
  4791  01008E  6EE6               	movwf	postinc1,c
  4792  010090  EC5C  F0ED         	call	_set_load_relay_one	;wreg free
  4793                           
  4794                           ;main.c: 239:    set_load_relay_two(1);
  4795  010094  0E01               	movlw	1
  4796  010096  6EE6               	movwf	postinc1,c
  4797  010098  EC54  F0ED         	call	_set_load_relay_two	;wreg free
  4798                           
  4799                           ;main.c: 241:    V.ui_state = mode;
  4800                           ;stkvar	_mode @ sp[(-17)+15]
  4801  01009C  0EFE               	movlw	-2
  4802  01009E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  4803                           
  4804                           ;main.c: 242:    srand(1957);
  4805  0100A4  0EA5               	movlw	165
  4806  0100A6  6EE6               	movwf	postinc1,c
  4807  0100A8  0E07               	movlw	7
  4808  0100AA  6EE6               	movwf	postinc1,c
  4809  0100AC  EC43  F0E9         	call	_srand	;wreg free
  4810                           
  4811                           ; BSR set to: 1
  4812                           ;main.c: 243:    set_vterm(0);
  4813  0100B0  0E00               	movlw	0
  4814  0100B2  6EE6               	movwf	postinc1,c
  4815  0100B4  ECB7  F0EC         	call	_set_vterm	;wreg free
  4816                           
  4817                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4818  0100B8  0E65               	movlw	low STR_1
  4819  0100BA  6EE6               	movwf	postinc1,c
  4820  0100BC  0EFE               	movlw	high STR_1
  4821  0100BE  6EE6               	movwf	postinc1,c
  4822  0100C0  0E00               	movlw	0
  4823  0100C2  6EE6               	movwf	postinc1,c
  4824  0100C4  0E00               	movlw	0
  4825  0100C6  6EE6               	movwf	postinc1,c
  4826  0100C8  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  4827  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4828  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4829  0100D8  0E04               	movlw	4
  4830  0100DA  6EE6               	movwf	postinc1,c
  4831  0100DC  EC68  F0D8         	call	_sprintf	;wreg free
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.21");
  4835  0100E0  0ED2               	movlw	low STR_3
  4836  0100E2  6EE6               	movwf	postinc1,c
  4837  0100E4  0EFF               	movlw	high STR_3
  4838  0100E6  6EE6               	movwf	postinc1,c
  4839  0100E8  0E11               	movlw	low STR_2
  4840  0100EA  6EE6               	movwf	postinc1,c
  4841  0100EC  0EFE               	movlw	high STR_2
  4842  0100EE  6EE6               	movwf	postinc1,c
  4843  0100F0  0E00               	movlw	0
  4844  0100F2  6EE6               	movwf	postinc1,c
  4845  0100F4  0E01               	movlw	1
  4846  0100F6  6EE6               	movwf	postinc1,c
  4847  0100F8  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  4848  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4849  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4850  010108  0E06               	movlw	6
  4851  01010A  6EE6               	movwf	postinc1,c
  4852  01010C  EC68  F0D8         	call	_sprintf	;wreg free
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4856  010110  0EA8               	movlw	low STR_4
  4857  010112  6EE6               	movwf	postinc1,c
  4858  010114  0EFD               	movlw	high STR_4
  4859  010116  6EE6               	movwf	postinc1,c
  4860  010118  0E00               	movlw	0
  4861  01011A  6EE6               	movwf	postinc1,c
  4862  01011C  0E02               	movlw	2
  4863  01011E  6EE6               	movwf	postinc1,c
  4864  010120  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  4865  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4866  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4867  010130  0E04               	movlw	4
  4868  010132  6EE6               	movwf	postinc1,c
  4869  010134  EC68  F0D8         	call	_sprintf	;wreg free
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4873  010138  0EDF               	movlw	low (STR_14+1)
  4874  01013A  6EE6               	movwf	postinc1,c
  4875  01013C  0EFB               	movlw	high (STR_14+1)
  4876  01013E  6EE6               	movwf	postinc1,c
  4877  010140  0E02               	movlw	2
  4878  010142  6EE6               	movwf	postinc1,c
  4879  010144  0E00               	movlw	0
  4880  010146  6EE6               	movwf	postinc1,c
  4881  010148  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  4882  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4883  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4884  010158  0E04               	movlw	4
  4885  01015A  6EE6               	movwf	postinc1,c
  4886  01015C  EC68  F0D8         	call	_sprintf	;wreg free
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4890  010160  0EDF               	movlw	low (STR_14+1)
  4891  010162  6EE6               	movwf	postinc1,c
  4892  010164  0EFB               	movlw	high (STR_14+1)
  4893  010166  6EE6               	movwf	postinc1,c
  4894  010168  0E02               	movlw	2
  4895  01016A  6EE6               	movwf	postinc1,c
  4896  01016C  0E01               	movlw	1
  4897  01016E  6EE6               	movwf	postinc1,c
  4898  010170  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  4899  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4900  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4901  010180  0E04               	movlw	4
  4902  010182  6EE6               	movwf	postinc1,c
  4903  010184  EC68  F0D8         	call	_sprintf	;wreg free
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4907  010188  0EDF               	movlw	low (STR_14+1)
  4908  01018A  6EE6               	movwf	postinc1,c
  4909  01018C  0EFB               	movlw	high (STR_14+1)
  4910  01018E  6EE6               	movwf	postinc1,c
  4911  010190  0E02               	movlw	2
  4912  010192  6EE6               	movwf	postinc1,c
  4913  010194  0E02               	movlw	2
  4914  010196  6EE6               	movwf	postinc1,c
  4915  010198  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  4916  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4917  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4918  0101A8  0E04               	movlw	4
  4919  0101AA  6EE6               	movwf	postinc1,c
  4920  0101AC  EC68  F0D8         	call	_sprintf	;wreg free
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;main.c: 250:    update_lcd(0);
  4924  0101B0  0E00               	movlw	0
  4925  0101B2  6EE6               	movwf	postinc1,c
  4926  0101B4  EC59  F0D7         	call	_update_lcd	;wreg free
  4927                           
  4928                           ;main.c: 251:    WaitMs(1000);
  4929  0101B8  0EE8               	movlw	232
  4930  0101BA  6EE6               	movwf	postinc1,c
  4931  0101BC  0E03               	movlw	3
  4932  0101BE  6EE6               	movwf	postinc1,c
  4933  0101C0  EC28  F0E9         	call	_WaitMs	;wreg free
  4934                           
  4935                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4936  0101C4  0EFA               	movlw	250
  4937  0101C6  6EE6               	movwf	postinc1,c
  4938  0101C8  0E00               	movlw	0
  4939  0101CA  6EE6               	movwf	postinc1,c
  4940  0101CC  0E0A               	movlw	10
  4941  0101CE  6EE6               	movwf	postinc1,c
  4942  0101D0  EC33  F0E8         	call	_StartTimer	;wreg free
  4943                           
  4944                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4945  0101D4  0EC8               	movlw	200
  4946  0101D6  6EE6               	movwf	postinc1,c
  4947  0101D8  0E00               	movlw	0
  4948  0101DA  6EE6               	movwf	postinc1,c
  4949  0101DC  0E01               	movlw	1
  4950  0101DE  6EE6               	movwf	postinc1,c
  4951  0101E0  EC33  F0E8         	call	_StartTimer	;wreg free
  4952                           
  4953                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4954  0101E4  0EB8               	movlw	184
  4955  0101E6  6EE6               	movwf	postinc1,c
  4956  0101E8  0E0B               	movlw	11
  4957  0101EA  6EE6               	movwf	postinc1,c
  4958  0101EC  0E07               	movlw	7
  4959  0101EE  6EE6               	movwf	postinc1,c
  4960  0101F0  EC33  F0E8         	call	_StartTimer	;wreg free
  4961                           
  4962                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4963  0101F4  0EDC               	movlw	220
  4964  0101F6  6EE6               	movwf	postinc1,c
  4965  0101F8  0E05               	movlw	5
  4966  0101FA  6EE6               	movwf	postinc1,c
  4967  0101FC  0E0B               	movlw	11
  4968  0101FE  6EE6               	movwf	postinc1,c
  4969  010200  EC33  F0E8         	call	_StartTimer	;wreg free
  4970                           
  4971                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4972  010204  0EB8               	movlw	184
  4973  010206  6EE6               	movwf	postinc1,c
  4974  010208  0E0B               	movlw	11
  4975  01020A  6EE6               	movwf	postinc1,c
  4976  01020C  0E09               	movlw	9
  4977  01020E  6EE6               	movwf	postinc1,c
  4978  010210  EC33  F0E8         	call	_StartTimer	;wreg free
  4979                           
  4980                           ;main.c: 258:    start_adc_scan();
  4981  010214  EC78  F0E4         	call	_start_adc_scan	;wreg free
  4982                           
  4983                           ;main.c: 259:    start_switch_handler();
  4984  010218  EC79  F0EC         	call	_start_switch_handler	;wreg free
  4985                           
  4986                           ; BSR set to: 57
  4987                           ;main.c: 260:    WaitMs(1000);
  4988  01021C  0EE8               	movlw	232
  4989  01021E  6EE6               	movwf	postinc1,c
  4990  010220  0E03               	movlw	3
  4991  010222  6EE6               	movwf	postinc1,c
  4992  010224  EC28  F0E9         	call	_WaitMs	;wreg free
  4993                           
  4994                           ;main.c: 265:    if (read_cal_data()) {
  4995  010228  ECB4  F0C9         	call	_read_cal_data	;wreg free
  4996  01022C  5001               	movf	btemp^0,w,c
  4997  01022E  B4D8               	btfsc	status,2,c
  4998  010230  D01F               	goto	l14777
  4999                           
  5000                           ;main.c: 266:     update_cal_data();
  5001  010232  ECC3  F0E5         	call	_update_cal_data	;wreg free
  5002                           
  5003                           ; BSR set to: 1
  5004                           ;main.c: 267:     update_hist_data(1, &C.hist[0]);
  5005  010236  0EB8               	movlw	low (_C+185)
  5006  010238  6EE6               	movwf	postinc1,c
  5007  01023A  0E08               	movlw	high (_C+185)
  5008  01023C  6EE6               	movwf	postinc1,c
  5009  01023E  0E01               	movlw	1
  5010  010240  6EE6               	movwf	postinc1,c
  5011  010242  EC3B  F0E3         	call	_update_hist_data	;wreg free
  5012                           
  5013                           ;main.c: 268:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5014  010246  0EB9               	movlw	low STR_8
  5015  010248  6EE6               	movwf	postinc1,c
  5016  01024A  0EFE               	movlw	high STR_8
  5017  01024C  6EE6               	movwf	postinc1,c
  5018  01024E  0E00               	movlw	0
  5019  010250  6EE6               	movwf	postinc1,c
  5020  010252  0E02               	movlw	2
  5021  010254  6EE6               	movwf	postinc1,c
  5022  010256  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5023  01025A  0060  F007  FFE6   	movff	btemp,postinc1
  5024  010260  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5025  010266  0E04               	movlw	4
  5026  010268  6EE6               	movwf	postinc1,c
  5027  01026A  EC68  F0D8         	call	_sprintf	;wreg free
  5028                           
  5029                           ;main.c: 269:    } else {
  5030  01026E  D014               	goto	l1447
  5031  010270                     l14777:
  5032                           
  5033                           ;main.c: 270:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5034  010270  0E22               	movlw	low STR_9
  5035  010272  6EE6               	movwf	postinc1,c
  5036  010274  0EFF               	movlw	high STR_9
  5037  010276  6EE6               	movwf	postinc1,c
  5038  010278  0E00               	movlw	0
  5039  01027A  6EE6               	movwf	postinc1,c
  5040  01027C  0E02               	movlw	2
  5041  01027E  6EE6               	movwf	postinc1,c
  5042  010280  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5043  010284  0060  F007  FFE6   	movff	btemp,postinc1
  5044  01028A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5045  010290  0E04               	movlw	4
  5046  010292  6EE6               	movwf	postinc1,c
  5047  010294  EC68  F0D8         	call	_sprintf	;wreg free
  5048  010298                     l1447:
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;main.c: 272:    update_lcd(0);
  5052  010298  0E00               	movlw	0
  5053  01029A  6EE6               	movwf	postinc1,c
  5054  01029C  EC59  F0D7         	call	_update_lcd	;wreg free
  5055                           
  5056                           ;main.c: 273:    WaitMs(2000);
  5057  0102A0  0ED0               	movlw	208
  5058  0102A2  6EE6               	movwf	postinc1,c
  5059  0102A4  0E07               	movlw	7
  5060  0102A6  6EE6               	movwf	postinc1,c
  5061  0102A8  EC28  F0E9         	call	_WaitMs	;wreg free
  5062                           
  5063                           ;main.c: 275:    i_ror = 1;
  5064                           ;stkvar	_i_ror @ sp[(-17)+16]
  5065  0102AC  0EFF               	movlw	-1
  5066  0102AE  6AE3               	clrf	plusw1,c
  5067  0102B0  2AE3               	incf	plusw1,f,c
  5068  0102B2                     l14783:
  5069                           
  5070                           ;main.c: 277:     calc_ror_data();
  5071  0102B2  EC12  F0CD         	call	_calc_ror_data	;wreg free
  5072                           
  5073                           ;main.c: 278:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5074  0102B6  0E00               	movlw	0
  5075  0102B8  6EE6               	movwf	postinc1,c
  5076  0102BA  0E04               	movlw	4
  5077  0102BC  6EE6               	movwf	postinc1,c
  5078  0102BE  EC02  F0B0         	call	_conv_raw_result	;wreg free
  5079  0102C2  0060  F007  FFE6   	movff	btemp,postinc1
  5080  0102C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5081  0102CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5082  0102D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  5083  0102DA  0E93               	movlw	low STR_10
  5084  0102DC  6EE6               	movwf	postinc1,c
  5085  0102DE  0EFD               	movlw	high STR_10
  5086  0102E0  6EE6               	movwf	postinc1,c
  5087  0102E2  0E00               	movlw	0
  5088  0102E4  6EE6               	movwf	postinc1,c
  5089  0102E6  0E01               	movlw	1
  5090  0102E8  6EE6               	movwf	postinc1,c
  5091  0102EA  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5092  0102EE  0060  F007  FFE6   	movff	btemp,postinc1
  5093  0102F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5094  0102FA  0E08               	movlw	8
  5095  0102FC  6EE6               	movwf	postinc1,c
  5096  0102FE  EC68  F0D8         	call	_sprintf	;wreg free
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5100  010302  EE22  F06B         	lfsr	2,_C+108	;volatile
  5101  010306  006F FF7B FFE6     	movff	postinc2,postinc1
  5102  01030C  006F FF7B FFE6     	movff	postinc2,postinc1
  5103  010312  006F FF7B FFE6     	movff	postinc2,postinc1
  5104  010318  006F FF7B FFE6     	movff	postinc2,postinc1
  5105                           
  5106                           ;stkvar	_i_ror @ sp[(-21)+16]
  5107  01031E  0EFB               	movlw	-5
  5108  010320  50E3               	movf	plusw1,w,c
  5109  010322  6EE6               	movwf	postinc1,c
  5110  010324  0E00               	movlw	0
  5111  010326  6EE6               	movwf	postinc1,c
  5112  010328  0E00               	movlw	0
  5113  01032A  6EE6               	movwf	postinc1,c
  5114  01032C  0E05               	movlw	5
  5115  01032E  6EE6               	movwf	postinc1,c
  5116  010330  EC62  F0D9         	call	_spinners	;wreg free
  5117  010334  5001               	movf	btemp^0,w,c
  5118  010336  6EE6               	movwf	postinc1,c
  5119  010338  0E00               	movlw	0
  5120  01033A  6EE6               	movwf	postinc1,c
  5121  01033C  0E39               	movlw	low STR_11
  5122  01033E  6EE6               	movwf	postinc1,c
  5123  010340  0EFB               	movlw	high STR_11
  5124  010342  6EE6               	movwf	postinc1,c
  5125  010344  0E00               	movlw	0
  5126  010346  6EE6               	movwf	postinc1,c
  5127  010348  0E02               	movlw	2
  5128  01034A  6EE6               	movwf	postinc1,c
  5129  01034C  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5130  010350  0060  F007  FFE6   	movff	btemp,postinc1
  5131  010356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5132  01035C  0E0C               	movlw	12
  5133  01035E  6EE6               	movwf	postinc1,c
  5134  010360  EC68  F0D8         	call	_sprintf	;wreg free
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;main.c: 280:     update_lcd(0);
  5138  010364  0E00               	movlw	0
  5139  010366  6EE6               	movwf	postinc1,c
  5140  010368  EC59  F0D7         	call	_update_lcd	;wreg free
  5141                           
  5142                           ;main.c: 281:     clear_adc_scan();
  5143  01036C  ECD9  F0ED         	call	_clear_adc_scan	;wreg free
  5144                           
  5145                           ; BSR set to: 1
  5146                           ;main.c: 282:     start_adc_scan();
  5147  010370  EC78  F0E4         	call	_start_adc_scan	;wreg free
  5148                           
  5149                           ;main.c: 283:     WaitMs(2000);
  5150  010374  0ED0               	movlw	208
  5151  010376  6EE6               	movwf	postinc1,c
  5152  010378  0E07               	movlw	7
  5153  01037A  6EE6               	movwf	postinc1,c
  5154  01037C  EC28  F0E9         	call	_WaitMs	;wreg free
  5155                           
  5156                           ;main.c: 286:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5157                           ;stkvar	_i_ror @ sp[(-17)+16]
  5158  010380  0EFF               	movlw	-1
  5159  010382  006F FF8C  F00C    	movff	plusw1,btemp+11
  5160  010388  2A0C               	incf	(btemp+11)^0,f,c
  5161  01038A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5162  010390  060C               	decf	(btemp+11)^0,f,c
  5163  010392  0E1E               	movlw	30
  5164  010394  600C               	cpfslt	(btemp+11)^0,c
  5165  010396  D01A               	goto	u14080
  5166  010398  EE22  F06B         	lfsr	2,_C+108	;volatile
  5167  01039C  006F FF7B FFE6     	movff	postinc2,postinc1
  5168  0103A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5169  0103A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5170  0103AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5171  0103B4  0E42               	movlw	66
  5172  0103B6  6EE6               	movwf	postinc1,c
  5173  0103B8  0E60               	movlw	96
  5174  0103BA  6EE6               	movwf	postinc1,c
  5175  0103BC  0E65               	movlw	101
  5176  0103BE  6EE6               	movwf	postinc1,c
  5177  0103C0  0E3C               	movlw	60
  5178  0103C2  6EE6               	movwf	postinc1,c
  5179  0103C4  EC07  F0D0         	call	___flge	;wreg free
  5180  0103C8  A001               	btfss	btemp& (0+255),0,c
  5181  0103CA  D773               	goto	l14783
  5182  0103CC                     u14080:
  5183                           
  5184                           ;main.c: 288:    static_soc();
  5185  0103CC  EC3C  F0E5         	call	_static_soc	;wreg free
  5186                           
  5187                           ;main.c: 289:    init_bsoc();
  5188  0103D0  EC56  F0C4         	call	_init_bsoc	;wreg free
  5189                           
  5190                           ;main.c: 290:    set_load_relay_one(0);
  5191  0103D4  0E00               	movlw	0
  5192  0103D6  6EE6               	movwf	postinc1,c
  5193  0103D8  EC5C  F0ED         	call	_set_load_relay_one	;wreg free
  5194                           
  5195                           ;main.c: 291:    set_load_relay_two(0);
  5196  0103DC  0E00               	movlw	0
  5197  0103DE  6EE6               	movwf	postinc1,c
  5198  0103E0  EC54  F0ED         	call	_set_load_relay_two	;wreg free
  5199                           
  5200                           ;main.c: 292:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5201  0103E4  EE22  F0B5         	lfsr	2,_C+182	;volatile
  5202  0103E8  006F FF78  F00B    	movff	postinc2,btemp+10
  5203  0103EE  006F FF74  F00C    	movff	postdec2,btemp+11
  5204  0103F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5205  0103FA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5206  010400  0E0A               	movlw	low STR_12
  5207  010402  6EE6               	movwf	postinc1,c
  5208  010404  0EFC               	movlw	high STR_12
  5209  010406  6EE6               	movwf	postinc1,c
  5210  010408  0E00               	movlw	0
  5211  01040A  6EE6               	movwf	postinc1,c
  5212  01040C  0E00               	movlw	0
  5213  01040E  6EE6               	movwf	postinc1,c
  5214  010410  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5215  010414  0060  F007  FFE6   	movff	btemp,postinc1
  5216  01041A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5217  010420  0E06               	movlw	6
  5218  010422  6EE6               	movwf	postinc1,c
  5219  010424  EC68  F0D8         	call	_sprintf	;wreg free
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;main.c: 293:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5223  010428  EE22  F08F         	lfsr	2,_C+144	;volatile
  5224  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5225  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5226  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5227  01043E  006F FF7B FFE6     	movff	postinc2,postinc1
  5228  010444  0EE6               	movlw	low STR_13
  5229  010446  6EE6               	movwf	postinc1,c
  5230  010448  0EFC               	movlw	high STR_13
  5231  01044A  6EE6               	movwf	postinc1,c
  5232  01044C  0E00               	movlw	0
  5233  01044E  6EE6               	movwf	postinc1,c
  5234  010450  0E01               	movlw	1
  5235  010452  6EE6               	movwf	postinc1,c
  5236  010454  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5237  010458  0060  F007  FFE6   	movff	btemp,postinc1
  5238  01045E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5239  010464  0E08               	movlw	8
  5240  010466  6EE6               	movwf	postinc1,c
  5241  010468  EC68  F0D8         	call	_sprintf	;wreg free
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;main.c: 294:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5245  01046C  0EDE               	movlw	low STR_14
  5246  01046E  6EE6               	movwf	postinc1,c
  5247  010470  0EFB               	movlw	high STR_14
  5248  010472  6EE6               	movwf	postinc1,c
  5249  010474  0E00               	movlw	0
  5250  010476  6EE6               	movwf	postinc1,c
  5251  010478  0E02               	movlw	2
  5252  01047A  6EE6               	movwf	postinc1,c
  5253  01047C  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5254  010480  0060  F007  FFE6   	movff	btemp,postinc1
  5255  010486  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5256  01048C  0E04               	movlw	4
  5257  01048E  6EE6               	movwf	postinc1,c
  5258  010490  EC68  F0D8         	call	_sprintf	;wreg free
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;main.c: 295:    update_lcd(0);
  5262  010494  0E00               	movlw	0
  5263  010496  6EE6               	movwf	postinc1,c
  5264  010498  EC59  F0D7         	call	_update_lcd	;wreg free
  5265                           
  5266                           ;main.c: 296:    WaitMs(2000);
  5267  01049C  0ED0               	movlw	208
  5268  01049E  6EE6               	movwf	postinc1,c
  5269  0104A0  0E07               	movlw	7
  5270  0104A2  6EE6               	movwf	postinc1,c
  5271  0104A4  EC28  F0E9         	call	_WaitMs	;wreg free
  5272                           
  5273                           ;main.c: 297:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5274  0104A8  0EBD               	movlw	low STR_15
  5275  0104AA  6EE6               	movwf	postinc1,c
  5276  0104AC  0EFD               	movlw	high STR_15
  5277  0104AE  6EE6               	movwf	postinc1,c
  5278  0104B0  0E00               	movlw	0
  5279  0104B2  6EE6               	movwf	postinc1,c
  5280  0104B4  0E00               	movlw	0
  5281  0104B6  6EE6               	movwf	postinc1,c
  5282  0104B8  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5283  0104BC  0060  F007  FFE6   	movff	btemp,postinc1
  5284  0104C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5285  0104C8  0E04               	movlw	4
  5286  0104CA  6EE6               	movwf	postinc1,c
  5287  0104CC  EC68  F0D8         	call	_sprintf	;wreg free
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;main.c: 298:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5291  0104D0  0ED2               	movlw	low STR_16
  5292  0104D2  6EE6               	movwf	postinc1,c
  5293  0104D4  0EFD               	movlw	high STR_16
  5294  0104D6  6EE6               	movwf	postinc1,c
  5295  0104D8  0E00               	movlw	0
  5296  0104DA  6EE6               	movwf	postinc1,c
  5297  0104DC  0E01               	movlw	1
  5298  0104DE  6EE6               	movwf	postinc1,c
  5299  0104E0  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5300  0104E4  0060  F007  FFE6   	movff	btemp,postinc1
  5301  0104EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5302  0104F0  0E04               	movlw	4
  5303  0104F2  6EE6               	movwf	postinc1,c
  5304  0104F4  EC68  F0D8         	call	_sprintf	;wreg free
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;main.c: 299:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5308  0104F8  0EE3               	movlw	low STR_17
  5309  0104FA  6EE6               	movwf	postinc1,c
  5310  0104FC  0EFE               	movlw	high STR_17
  5311  0104FE  6EE6               	movwf	postinc1,c
  5312  010500  0E00               	movlw	0
  5313  010502  6EE6               	movwf	postinc1,c
  5314  010504  0E02               	movlw	2
  5315  010506  6EE6               	movwf	postinc1,c
  5316  010508  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5317  01050C  0060  F007  FFE6   	movff	btemp,postinc1
  5318  010512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5319  010518  0E04               	movlw	4
  5320  01051A  6EE6               	movwf	postinc1,c
  5321  01051C  EC68  F0D8         	call	_sprintf	;wreg free
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;main.c: 300:    update_lcd(0);
  5325  010520  0E00               	movlw	0
  5326  010522  6EE6               	movwf	postinc1,c
  5327  010524  EC59  F0D7         	call	_update_lcd	;wreg free
  5328                           
  5329                           ;main.c: 301:    uint16_t i_esr = 1;
  5330  010528  0E01               	movlw	1
  5331  01052A  6E0B               	movwf	(btemp+10)^0,c
  5332  01052C  0E00               	movlw	0
  5333  01052E  6E0C               	movwf	(btemp+11)^0,c
  5334                           
  5335                           ;stkvar	_i_esr @ sp[(-17)+8]
  5336  010530  0EF7               	movlw	-9
  5337  010532  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5338  010538  0EF8               	movlw	-8
  5339  01053A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5340                           
  5341                           ;main.c: 303:    float esr_temp;;main.c: 304:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5342  010540  D06D               	goto	l14843
  5343  010542                     l14831:
  5344                           
  5345                           ;main.c: 305:     WaitMs(110);
  5346  010542  0E6E               	movlw	110
  5347  010544  6EE6               	movwf	postinc1,c
  5348  010546  0E00               	movlw	0
  5349  010548  6EE6               	movwf	postinc1,c
  5350  01054A  EC28  F0E9         	call	_WaitMs	;wreg free
  5351                           
  5352                           ;main.c: 306:     shape = (uint8_t) fabsf(esr_temp);
  5353                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5354  01054E  0EF3               	movlw	-13
  5355  010550  006F FF8F FFE6     	movff	plusw1,postinc1
  5356  010556  006F FF8F FFE6     	movff	plusw1,postinc1
  5357  01055C  006F FF8F FFE6     	movff	plusw1,postinc1
  5358  010562  006F FF8F FFE6     	movff	plusw1,postinc1
  5359  010568  EC0F  F0DE         	call	_fabsf	;wreg free
  5360  01056C  0060  F007  FFE6   	movff	btemp,postinc1
  5361  010572  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5362  010578  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5363  01057E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5364  010584  EC4E  F0CF         	call	___fltol	;wreg free
  5365  010588  0060  F004  F00C   	movff	btemp,btemp+11
  5366                           
  5367                           ;stkvar	_shape @ sp[(-17)+10]
  5368  01058E  0EF9               	movlw	-7
  5369  010590  0060  F033  FFE3   	movff	btemp+11,plusw1
  5370                           
  5371                           ;main.c: 307:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5372  010596  0E00               	movlw	0
  5373  010598  6EE6               	movwf	postinc1,c
  5374                           
  5375                           ;stkvar	_shape @ sp[(-18)+10]
  5376  01059A  0EF8               	movlw	-8
  5377  01059C  50E3               	movf	plusw1,w,c
  5378  01059E  6EE6               	movwf	postinc1,c
  5379  0105A0  EC62  F0D9         	call	_spinners	;wreg free
  5380  0105A4  5001               	movf	btemp^0,w,c
  5381  0105A6  6EE6               	movwf	postinc1,c
  5382  0105A8  0E00               	movlw	0
  5383  0105AA  6EE6               	movwf	postinc1,c
  5384  0105AC  0E00               	movlw	0
  5385  0105AE  6EE6               	movwf	postinc1,c
  5386  0105B0  0E00               	movlw	0
  5387  0105B2  6EE6               	movwf	postinc1,c
  5388  0105B4  EC62  F0D9         	call	_spinners	;wreg free
  5389  0105B8  5001               	movf	btemp^0,w,c
  5390  0105BA  6EE6               	movwf	postinc1,c
  5391  0105BC  0E00               	movlw	0
  5392  0105BE  6EE6               	movwf	postinc1,c
  5393  0105C0  0E8F               	movlw	low STR_18
  5394  0105C2  6EE6               	movwf	postinc1,c
  5395  0105C4  0EFE               	movlw	high STR_18
  5396  0105C6  6EE6               	movwf	postinc1,c
  5397  0105C8  0E00               	movlw	0
  5398  0105CA  6EE6               	movwf	postinc1,c
  5399  0105CC  0E02               	movlw	2
  5400  0105CE  6EE6               	movwf	postinc1,c
  5401  0105D0  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5402  0105D4  0060  F007  FFE6   	movff	btemp,postinc1
  5403  0105DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5404  0105E0  0E08               	movlw	8
  5405  0105E2  6EE6               	movwf	postinc1,c
  5406  0105E4  EC68  F0D8         	call	_sprintf	;wreg free
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;main.c: 308:     update_lcd(0);
  5410  0105E8  0E00               	movlw	0
  5411  0105EA  6EE6               	movwf	postinc1,c
  5412  0105EC  EC59  F0D7         	call	_update_lcd	;wreg free
  5413                           
  5414                           ;main.c: 310:     if (i_esr++ > 512)
  5415                           ;stkvar	_i_esr @ sp[(-17)+8]
  5416  0105F0  50E1               	movf	fsr1l,w,c
  5417  0105F2  0FF7               	addlw	-9
  5418  0105F4  6ED9               	movwf	fsr2l,c
  5419  0105F6  50E2               	movf	fsr1h,w,c
  5420  0105F8  6EDA               	movwf	fsr2h,c
  5421  0105FA  0EFF               	movlw	255
  5422  0105FC  22DA               	addwfc	fsr2h,f,c
  5423  0105FE  006F FF7C  F00B    	movff	indf2,btemp+10
  5424  010604  0E01               	movlw	1
  5425  010606  26DE               	addwf	postinc2,f,c
  5426  010608  006F FF7C  F00C    	movff	indf2,btemp+11
  5427  01060E  0E00               	movlw	0
  5428  010610  22DD               	addwfc	postdec2,f,c
  5429  010612  040B               	decf	(btemp+10)^0,w,c
  5430  010614  0E02               	movlw	2
  5431  010616  580C               	subwfb	(btemp+11)^0,w,c
  5432  010618  B0D8               	btfsc	status,0,c
  5433  01061A  D017               	goto	u14100
  5434  01061C                     l14843:
  5435                           
  5436                           ;main.c: 304:    while ((esr_temp = esr_check(0)) < 0.0) {
  5437  01061C  0E00               	movlw	0
  5438  01061E  6EE6               	movwf	postinc1,c
  5439  010620  EC11  F0BF         	call	_esr_check	;wreg free
  5440                           
  5441                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5442  010624  0EF3               	movlw	-13
  5443  010626  0060  F007  FFE3   	movff	btemp,plusw1
  5444  01062C  0EF4               	movlw	-12
  5445  01062E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5446  010634  0EF5               	movlw	-11
  5447  010636  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5448  01063C  0EF6               	movlw	-10
  5449  01063E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5450  010644  0EF6               	movlw	-10
  5451  010646  BEE3               	btfsc	plusw1,7,c
  5452  010648  D77C               	goto	l14831
  5453  01064A                     u14100:
  5454                           
  5455                           ;main.c: 313:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5456  01064A  EE22  F087         	lfsr	2,_C+136	;volatile
  5457  01064E  006F FF7B FFE6     	movff	postinc2,postinc1
  5458  010654  006F FF7B FFE6     	movff	postinc2,postinc1
  5459  01065A  006F FF7B FFE6     	movff	postinc2,postinc1
  5460  010660  006F FF7B FFE6     	movff	postinc2,postinc1
  5461  010666  0EF4               	movlw	low STR_19
  5462  010668  6EE6               	movwf	postinc1,c
  5463  01066A  0EFB               	movlw	high STR_19
  5464  01066C  6EE6               	movwf	postinc1,c
  5465  01066E  0E00               	movlw	0
  5466  010670  6EE6               	movwf	postinc1,c
  5467  010672  0E00               	movlw	0
  5468  010674  6EE6               	movwf	postinc1,c
  5469  010676  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5470  01067A  0060  F007  FFE6   	movff	btemp,postinc1
  5471  010680  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5472  010686  0E08               	movlw	8
  5473  010688  6EE6               	movwf	postinc1,c
  5474  01068A  EC68  F0D8         	call	_sprintf	;wreg free
  5475                           
  5476                           ;main.c: 314:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5477  01068E  EE22  F125         	lfsr	2,_C+294	;volatile
  5478  010692  006F FF7B FFE6     	movff	postinc2,postinc1
  5479  010698  006F FF7B FFE6     	movff	postinc2,postinc1
  5480  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5481  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5482  0106AA  EE22  F131         	lfsr	2,_C+306	;volatile
  5483  0106AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5484  0106B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5485  0106BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5486  0106C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5487  0106C6  0E05               	movlw	low STR_20
  5488  0106C8  6EE6               	movwf	postinc1,c
  5489  0106CA  0EFB               	movlw	high STR_20
  5490  0106CC  6EE6               	movwf	postinc1,c
  5491  0106CE  0E00               	movlw	0
  5492  0106D0  6EE6               	movwf	postinc1,c
  5493  0106D2  0E01               	movlw	1
  5494  0106D4  6EE6               	movwf	postinc1,c
  5495  0106D6  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5496  0106DA  0060  F007  FFE6   	movff	btemp,postinc1
  5497  0106E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5498  0106E6  0E0C               	movlw	12
  5499  0106E8  6EE6               	movwf	postinc1,c
  5500  0106EA  EC68  F0D8         	call	_sprintf	;wreg free
  5501                           
  5502                           ;main.c: 315:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5503  0106EE  EE22  F129         	lfsr	2,_C+298	;volatile
  5504  0106F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5505  0106F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5506  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5507  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5508  01070A  EE22  F135         	lfsr	2,_C+310	;volatile
  5509  01070E  006F FF7B FFE6     	movff	postinc2,postinc1
  5510  010714  006F FF7B FFE6     	movff	postinc2,postinc1
  5511  01071A  006F FF7B FFE6     	movff	postinc2,postinc1
  5512  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  5513  010726  0E1F               	movlw	low STR_21
  5514  010728  6EE6               	movwf	postinc1,c
  5515  01072A  0EFB               	movlw	high STR_21
  5516  01072C  6EE6               	movwf	postinc1,c
  5517  01072E  0E00               	movlw	0
  5518  010730  6EE6               	movwf	postinc1,c
  5519  010732  0E02               	movlw	2
  5520  010734  6EE6               	movwf	postinc1,c
  5521  010736  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5522  01073A  0060  F007  FFE6   	movff	btemp,postinc1
  5523  010740  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5524  010746  0E0C               	movlw	12
  5525  010748  6EE6               	movwf	postinc1,c
  5526  01074A  EC68  F0D8         	call	_sprintf	;wreg free
  5527                           
  5528                           ;main.c: 316:    update_lcd(0);
  5529  01074E  0E00               	movlw	0
  5530  010750  6EE6               	movwf	postinc1,c
  5531  010752  EC59  F0D7         	call	_update_lcd	;wreg free
  5532                           
  5533                           ;main.c: 317:    WaitMs(4000);
  5534  010756  0EA0               	movlw	160
  5535  010758  6EE6               	movwf	postinc1,c
  5536  01075A  0E0F               	movlw	15
  5537  01075C  6EE6               	movwf	postinc1,c
  5538  01075E  EC28  F0E9         	call	_WaitMs	;wreg free
  5539                           
  5540                           ;main.c: 318:    V.sensor_set = get_switch(SCALIB);
  5541  010762  0E04               	movlw	4
  5542  010764  6EE6               	movwf	postinc1,c
  5543  010766  EC55  F0EA         	call	_get_switch	;wreg free
  5544  01076A  5001               	movf	btemp^0,w,c
  5545  01076C  B4D8               	btfsc	status,2,c
  5546  01076E  D002               	goto	u14110
  5547  010770  0E01               	movlw	1
  5548  010772  D001               	goto	u14120
  5549  010774                     u14110:
  5550  010774  0E00               	movlw	0
  5551  010776                     u14120:
  5552  010776  0102               	movlb	2	; () banked
  5553  010778  6FAE               	movwf	(_V+174)& (0+255),b	;volatile
  5554                           
  5555                           ; BSR set to: 2
  5556                           ;main.c: 319:    WaitMs(1000);
  5557  01077A  0EE8               	movlw	232
  5558  01077C  6EE6               	movwf	postinc1,c
  5559  01077E  0E03               	movlw	3
  5560  010780  6EE6               	movwf	postinc1,c
  5561  010782  EC28  F0E9         	call	_WaitMs	;wreg free
  5562                           
  5563                           ;main.c: 320:    if (V.sensor_set && get_switch(SCALIB)) {
  5564  010786  0102               	movlb	2	; () banked
  5565  010788  51AE               	movf	(_V+174)& (0+255),w,b	;volatile
  5566  01078A  B4D8               	btfsc	status,2,c
  5567  01078C  D00F               	goto	l14861
  5568                           
  5569                           ; BSR set to: 2
  5570  01078E  0E04               	movlw	4
  5571  010790  6EE6               	movwf	postinc1,c
  5572  010792  EC55  F0EA         	call	_get_switch	;wreg free
  5573  010796  5001               	movf	btemp^0,w,c
  5574  010798  B4D8               	btfsc	status,2,c
  5575  01079A  D008               	goto	l14861
  5576                           
  5577                           ;main.c: 321:     current_sensor_cal();
  5578  01079C  EC41  F09A         	call	_current_sensor_cal	;wreg free
  5579                           
  5580                           ;main.c: 322:     WaitMs(4000);
  5581  0107A0  0EA0               	movlw	160
  5582  0107A2  6EE6               	movwf	postinc1,c
  5583  0107A4  0E0F               	movlw	15
  5584  0107A6  6EE6               	movwf	postinc1,c
  5585  0107A8  EC28  F0E9         	call	_WaitMs	;wreg free
  5586  0107AC                     l14861:
  5587                           
  5588                           ;main.c: 324:    V.sensor_set = 0;
  5589  0107AC  0102               	movlb	2	; () banked
  5590  0107AE  6BAE               	clrf	(_V+174)& (0+255),b	;volatile
  5591                           
  5592                           ; BSR set to: 2
  5593                           ;main.c: 325:    V.system_stable = 1;
  5594  0107B0  0E01               	movlw	1
  5595  0107B2  6FAF               	movwf	(_V+175)& (0+255),b	;volatile
  5596                           
  5597                           ;main.c: 326:    break;
  5598  0107B4  D01C               	goto	l14869
  5599  0107B6                     l1460:
  5600                           
  5601                           ; BSR set to: 2
  5602                           ;main.c: 332:    P.SYSTEM_STABLE = 1;
  5603  0107B6  0100               	movlb	0	; () banked
  5604  0107B8  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  5605                           
  5606                           ;main.c: 333:    break;
  5607  0107BA  D019               	goto	l14869
  5608  0107BC                     l1462:
  5609                           
  5610                           ; BSR set to: 2
  5611                           ;main.c: 336:    V.ui_state = UI_STATE_INIT;
  5612  0107BC  6B00               	clrf	_V& (0+255),b	;volatile
  5613                           
  5614                           ;main.c: 337:    break;
  5615  0107BE  D017               	goto	l14869
  5616  0107C0                     l14867:
  5617  0107C0  0102               	movlb	2	; () banked
  5618  0107C2  5100               	movf	_V& (0+255),w,b	;volatile
  5619  0107C4  6E0B               	movwf	(btemp+10)^0,c
  5620  0107C6  6A0C               	clrf	(btemp+11)^0,c
  5621                           
  5622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5623                           ; Switch size 1, requested type "simple"
  5624                           ; Number of cases is 1, Range of values is 0 to 0
  5625                           ; switch strategies available:
  5626                           ; Name         Instructions Cycles
  5627                           ; simple_byte            4     3 (average)
  5628                           ;	Chosen strategy is simple_byte
  5629  0107C8  500C               	movf	(btemp+11)^0,w,c
  5630  0107CA  0A00               	xorlw	0	; case 0
  5631  0107CC  A4D8               	btfss	status,2,c
  5632  0107CE  D7F6               	goto	l1462
  5633                           
  5634                           ; BSR set to: 2
  5635                           ; Switch size 1, requested type "simple"
  5636                           ; Number of cases is 5, Range of values is 0 to 5
  5637                           ; switch strategies available:
  5638                           ; Name         Instructions Cycles
  5639                           ; simple_byte           16     9 (average)
  5640                           ;	Chosen strategy is simple_byte
  5641  0107D0  500B               	movf	(btemp+10)^0,w,c
  5642  0107D2  0A00               	xorlw	0	; case 0
  5643  0107D4  B4D8               	btfsc	status,2,c
  5644  0107D6  D450               	goto	l14719
  5645  0107D8  0A01               	xorlw	1	; case 1
  5646  0107DA  B4D8               	btfsc	status,2,c
  5647  0107DC  D008               	goto	l14869
  5648  0107DE  0A02               	xorlw	2	; case 3
  5649  0107E0  B4D8               	btfsc	status,2,c
  5650  0107E2  D005               	goto	l14869
  5651  0107E4  0A07               	xorlw	7	; case 4
  5652  0107E6  B4D8               	btfsc	status,2,c
  5653  0107E8  D7E6               	goto	l1460
  5654  0107EA  0A01               	xorlw	1	; case 5
  5655  0107EC  D7E7               	goto	l1462
  5656  0107EE                     l14869:
  5657                           
  5658                           ;main.c: 340:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5659  0107EE  0E01               	movlw	1
  5660  0107F0  6EE6               	movwf	postinc1,c
  5661  0107F2  ECC1  F0EA         	call	_TimerDone	;wreg free
  5662  0107F6  5001               	movf	btemp^0,w,c
  5663  0107F8  B4D8               	btfsc	status,2,c
  5664  0107FA  D013               	goto	l14881
  5665  0107FC  ECC2  F0ED         	call	_check_adc_scan	;wreg free
  5666  010800  5001               	movf	btemp^0,w,c
  5667  010802  B4D8               	btfsc	status,2,c
  5668  010804  D00E               	goto	l14881
  5669                           
  5670                           ;main.c: 344:    convert_adc_data();
  5671  010806  EC01  F0DD         	call	_convert_adc_data	;wreg free
  5672                           
  5673                           ;main.c: 348:    clear_adc_scan();
  5674  01080A  ECD9  F0ED         	call	_clear_adc_scan	;wreg free
  5675                           
  5676                           ; BSR set to: 1
  5677                           ;main.c: 349:    start_adc_scan();
  5678  01080E  EC78  F0E4         	call	_start_adc_scan	;wreg free
  5679                           
  5680                           ;main.c: 350:    StartTimer(TMR_ADC, 200);
  5681  010812  0EC8               	movlw	200
  5682  010814  6EE6               	movwf	postinc1,c
  5683  010816  0E00               	movlw	0
  5684  010818  6EE6               	movwf	postinc1,c
  5685  01081A  0E01               	movlw	1
  5686  01081C  6EE6               	movwf	postinc1,c
  5687  01081E  EC33  F0E8         	call	_StartTimer	;wreg free
  5688  010822                     l14881:
  5689                           
  5690                           ;main.c: 357:   if (TimerDone(TMR_DISPLAY)) {
  5691                           
  5692                           ;main.c: 353:   if (V.ticks) {
  5693  010822  0E0A               	movlw	10
  5694  010824  6EE6               	movwf	postinc1,c
  5695  010826  ECC1  F0EA         	call	_TimerDone	;wreg free
  5696  01082A  5001               	movf	btemp^0,w,c
  5697  01082C  B4D8               	btfsc	status,2,c
  5698  01082E  EFBE  F088         	goto	l14965
  5699                           
  5700                           ;main.c: 358:    if (TimerDone(TMR_HELPDIS)) {
  5701  010832  0E09               	movlw	9
  5702  010834  6EE6               	movwf	postinc1,c
  5703  010836  ECC1  F0EA         	call	_TimerDone	;wreg free
  5704  01083A  5001               	movf	btemp^0,w,c
  5705  01083C  B4D8               	btfsc	status,2,c
  5706  01083E  D004               	goto	l14889
  5707                           
  5708                           ;main.c: 359:     set_display_info(DIS_STR);
  5709  010840  0E00               	movlw	0
  5710  010842  6EE6               	movwf	postinc1,c
  5711  010844  ECC6  F0EC         	call	_set_display_info	;wreg free
  5712  010848                     l14889:
  5713                           
  5714                           ;main.c: 361:    calc_model_data();
  5715  010848  ECA0  F0B4         	call	_calc_model_data	;wreg free
  5716                           
  5717                           ; BSR set to: 57
  5718                           ;main.c: 368:     hid_display(&H);
  5719                           
  5720                           ;main.c: 363:    if (0) {
  5721  01084C  0EF1               	movlw	_H& (0+255)
  5722  01084E  6EE6               	movwf	postinc1,c
  5723  010850  EC26  F0D5         	call	_hid_display	;wreg free
  5724                           
  5725                           ;main.c: 369:     switch (H.hid_display) {
  5726  010854  EF55  F088         	goto	l14937
  5727  010858                     l1470:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;main.c: 371:      V.calib = 0;
  5731  010858  0102               	movlb	2	; () banked
  5732  01085A  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5733                           
  5734                           ; BSR set to: 2
  5735                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5736  01085C  EE22  F139         	lfsr	2,_C+314	;volatile
  5737  010860  50DF               	movf	indf2,w,c
  5738  010862  A4D8               	btfss	status,2,c
  5739  010864  D002               	goto	l14899
  5740                           
  5741                           ; BSR set to: 2
  5742  010866  0E20               	movlw	32
  5743  010868  D001               	goto	L1
  5744  01086A                     l14899:
  5745                           
  5746                           ; BSR set to: 2
  5747  01086A  0E44               	movlw	68
  5748  01086C                     L1:
  5749  01086C  6E0B               	movwf	(btemp+10)^0,c
  5750  01086E  0E00               	movlw	0
  5751  010870  6E0C               	movwf	(btemp+11)^0,c
  5752                           
  5753                           ;stkvar	_main$4003 @ sp[(-17)+2]
  5754  010872  0EF1               	movlw	-15
  5755  010874  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5756  01087A  0EF2               	movlw	-14
  5757  01087C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5758                           
  5759                           ; BSR set to: 2
  5760  010882  EE22  F07B         	lfsr	2,_C+124	;volatile
  5761  010886  006F FF7B FFE6     	movff	postinc2,postinc1
  5762  01088C  006F FF7B FFE6     	movff	postinc2,postinc1
  5763  010892  006F FF7B FFE6     	movff	postinc2,postinc1
  5764  010898  006F FF7B FFE6     	movff	postinc2,postinc1
  5765                           
  5766                           ;stkvar	_main$4003 @ sp[(-21)+2]
  5767  01089E  0EED               	movlw	-19
  5768  0108A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5769  0108A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5770  0108AC  0ED0               	movlw	low STR_25
  5771  0108AE  6EE6               	movwf	postinc1,c
  5772  0108B0  0EFC               	movlw	high STR_25
  5773  0108B2  6EE6               	movwf	postinc1,c
  5774  0108B4  0E00               	movlw	0
  5775  0108B6  6EE6               	movwf	postinc1,c
  5776  0108B8  0E00               	movlw	0
  5777  0108BA  6EE6               	movwf	postinc1,c
  5778  0108BC  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5779  0108C0  0060  F007  FFE6   	movff	btemp,postinc1
  5780  0108C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5781  0108CC  0E0A               	movlw	10
  5782  0108CE  6EE6               	movwf	postinc1,c
  5783  0108D0  EC68  F0D8         	call	_sprintf	;wreg free
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5787  0108D4  EE22  F073         	lfsr	2,_C+116	;volatile
  5788  0108D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5789  0108DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5790  0108E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5791  0108EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5792  0108F0  0EBA               	movlw	low STR_26
  5793  0108F2  6EE6               	movwf	postinc1,c
  5794  0108F4  0EFC               	movlw	high STR_26
  5795  0108F6  6EE6               	movwf	postinc1,c
  5796  0108F8  0E00               	movlw	0
  5797  0108FA  6EE6               	movwf	postinc1,c
  5798  0108FC  0E01               	movlw	1
  5799  0108FE  6EE6               	movwf	postinc1,c
  5800  010900  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5801  010904  0060  F007  FFE6   	movff	btemp,postinc1
  5802  01090A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5803  010910  0E08               	movlw	8
  5804  010912  6EE6               	movwf	postinc1,c
  5805  010914  EC68  F0D8         	call	_sprintf	;wreg free
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5809  010918  EE22  F077         	lfsr	2,_C+120	;volatile
  5810  01091C  006F FF7B FFE6     	movff	postinc2,postinc1
  5811  010922  006F FF7B FFE6     	movff	postinc2,postinc1
  5812  010928  006F FF7B FFE6     	movff	postinc2,postinc1
  5813  01092E  006F FF7B FFE6     	movff	postinc2,postinc1
  5814  010934  0EA4               	movlw	low STR_27
  5815  010936  6EE6               	movwf	postinc1,c
  5816  010938  0EFC               	movlw	high STR_27
  5817  01093A  6EE6               	movwf	postinc1,c
  5818  01093C  0E00               	movlw	0
  5819  01093E  6EE6               	movwf	postinc1,c
  5820  010940  0E02               	movlw	2
  5821  010942  6EE6               	movwf	postinc1,c
  5822  010944  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5823  010948  0060  F007  FFE6   	movff	btemp,postinc1
  5824  01094E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5825  010954  0E08               	movlw	8
  5826  010956  6EE6               	movwf	postinc1,c
  5827  010958  EC68  F0D8         	call	_sprintf	;wreg free
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;main.c: 376:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5831  01095C  EE22  F139         	lfsr	2,_C+314	;volatile
  5832  010960  50DF               	movf	indf2,w,c
  5833  010962  A4D8               	btfss	status,2,c
  5834  010964  D002               	goto	l14911
  5835                           
  5836                           ; BSR set to: 0
  5837  010966  0E20               	movlw	32
  5838  010968  D001               	goto	L2
  5839  01096A                     l14911:
  5840                           
  5841                           ; BSR set to: 0
  5842  01096A  0E44               	movlw	68
  5843  01096C                     L2:
  5844  01096C  6E0B               	movwf	(btemp+10)^0,c
  5845  01096E  0E00               	movlw	0
  5846  010970  6E0C               	movwf	(btemp+11)^0,c
  5847                           
  5848                           ;stkvar	_main$4007 @ sp[(-17)+0]
  5849  010972  0EEF               	movlw	-17
  5850  010974  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5851  01097A  0EF0               	movlw	-16
  5852  01097C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5853                           
  5854                           ; BSR set to: 0
  5855  010982  EE22  F0A7         	lfsr	2,_C+168	;volatile
  5856  010986  006F FF7B FFE6     	movff	postinc2,postinc1
  5857  01098C  006F FF7B FFE6     	movff	postinc2,postinc1
  5858  010992  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  010998  006F FF7B FFE6     	movff	postinc2,postinc1
  5860                           
  5861                           ;stkvar	_main$4007 @ sp[(-21)+0]
  5862  01099E  0EEB               	movlw	-21
  5863  0109A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5864  0109A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5865  0109AC  0E8E               	movlw	low STR_28
  5866  0109AE  6EE6               	movwf	postinc1,c
  5867  0109B0  0EFC               	movlw	high STR_28
  5868  0109B2  6EE6               	movwf	postinc1,c
  5869  0109B4  0E01               	movlw	1
  5870  0109B6  6EE6               	movwf	postinc1,c
  5871  0109B8  0E00               	movlw	0
  5872  0109BA  6EE6               	movwf	postinc1,c
  5873  0109BC  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5874  0109C0  0060  F007  FFE6   	movff	btemp,postinc1
  5875  0109C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5876  0109CC  0E0A               	movlw	10
  5877  0109CE  6EE6               	movwf	postinc1,c
  5878  0109D0  EC68  F0D8         	call	_sprintf	;wreg free
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;main.c: 377:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5882  0109D4  EE22  F0AF         	lfsr	2,_C+176	;volatile
  5883  0109D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5884  0109DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5885  0109E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5886  0109EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5887  0109F0  0E78               	movlw	low STR_29
  5888  0109F2  6EE6               	movwf	postinc1,c
  5889  0109F4  0EFC               	movlw	high STR_29
  5890  0109F6  6EE6               	movwf	postinc1,c
  5891  0109F8  0E01               	movlw	1
  5892  0109FA  6EE6               	movwf	postinc1,c
  5893  0109FC  0E01               	movlw	1
  5894  0109FE  6EE6               	movwf	postinc1,c
  5895  010A00  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5896  010A04  0060  F007  FFE6   	movff	btemp,postinc1
  5897  010A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5898  010A10  0E08               	movlw	8
  5899  010A12  6EE6               	movwf	postinc1,c
  5900  010A14  EC68  F0D8         	call	_sprintf	;wreg free
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;main.c: 378:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5904  010A18  EE22  F0AB         	lfsr	2,_C+172	;volatile
  5905  010A1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5906  010A22  006F FF7B FFE6     	movff	postinc2,postinc1
  5907  010A28  006F FF7B FFE6     	movff	postinc2,postinc1
  5908  010A2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5909  010A34  0E62               	movlw	low STR_30
  5910  010A36  6EE6               	movwf	postinc1,c
  5911  010A38  0EFC               	movlw	high STR_30
  5912  010A3A  6EE6               	movwf	postinc1,c
  5913  010A3C  0E01               	movlw	1
  5914  010A3E  6EE6               	movwf	postinc1,c
  5915  010A40  0E02               	movlw	2
  5916  010A42  6EE6               	movwf	postinc1,c
  5917  010A44  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5918  010A48  0060  F007  FFE6   	movff	btemp,postinc1
  5919  010A4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5920  010A54  0E08               	movlw	8
  5921  010A56  6EE6               	movwf	postinc1,c
  5922  010A58  EC68  F0D8         	call	_sprintf	;wreg free
  5923                           
  5924                           ;main.c: 379:      break;
  5925  010A5C  D33C               	goto	l14939
  5926  010A5E                     l1480:
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;main.c: 381:      V.calib = 0;
  5930  010A5E  0102               	movlb	2	; () banked
  5931  010A60  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5932                           
  5933                           ; BSR set to: 2
  5934                           ;main.c: 382:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5935  010A62  EE22  F003         	lfsr	2,_C+4	;volatile
  5936  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5937  010A6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5938  010A72  006F FF7B FFE6     	movff	postinc2,postinc1
  5939  010A78  006F FF7B FFE6     	movff	postinc2,postinc1
  5940  010A7E  EE22  F013         	lfsr	2,_C+20	;volatile
  5941  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5942  010A88  006F FF7B FFE6     	movff	postinc2,postinc1
  5943  010A8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5944  010A94  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010A9A  0E28               	movlw	low STR_31
  5946  010A9C  6EE6               	movwf	postinc1,c
  5947  010A9E  0EFD               	movlw	high STR_31
  5948  010AA0  6EE6               	movwf	postinc1,c
  5949  010AA2  0E00               	movlw	0
  5950  010AA4  6EE6               	movwf	postinc1,c
  5951  010AA6  0E00               	movlw	0
  5952  010AA8  6EE6               	movwf	postinc1,c
  5953  010AAA  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5954  010AAE  0060  F007  FFE6   	movff	btemp,postinc1
  5955  010AB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5956  010ABA  0E0C               	movlw	12
  5957  010ABC  6EE6               	movwf	postinc1,c
  5958  010ABE  EC68  F0D8         	call	_sprintf	;wreg free
  5959                           
  5960                           ;main.c: 383:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5961  010AC2  EE21  F3FF         	lfsr	2,_C
  5962  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5963  010ACC  006F FF7B FFE6     	movff	postinc2,postinc1
  5964  010AD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5965  010AD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5966  010ADE  EE22  F00F         	lfsr	2,_C+16	;volatile
  5967  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5968  010AE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  010AEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5970  010AF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5971  010AFA  0EFC               	movlw	low STR_32
  5972  010AFC  6EE6               	movwf	postinc1,c
  5973  010AFE  0EFC               	movlw	high STR_32
  5974  010B00  6EE6               	movwf	postinc1,c
  5975  010B02  0E00               	movlw	0
  5976  010B04  6EE6               	movwf	postinc1,c
  5977  010B06  0E01               	movlw	1
  5978  010B08  6EE6               	movwf	postinc1,c
  5979  010B0A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  5980  010B0E  0060  F007  FFE6   	movff	btemp,postinc1
  5981  010B14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5982  010B1A  0E0C               	movlw	12
  5983  010B1C  6EE6               	movwf	postinc1,c
  5984  010B1E  EC68  F0D8         	call	_sprintf	;wreg free
  5985                           
  5986                           ;main.c: 384:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5987  010B22  EE22  F03F         	lfsr	2,_C+64	;volatile
  5988  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5989  010B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5990  010B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5991  010B38  006F FF7B FFE6     	movff	postinc2,postinc1
  5992  010B3E  EE22  F007         	lfsr	2,_C+8	;volatile
  5993  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5994  010B48  006F FF7B FFE6     	movff	postinc2,postinc1
  5995  010B4E  006F FF7B FFE6     	movff	postinc2,postinc1
  5996  010B54  006F FF7B FFE6     	movff	postinc2,postinc1
  5997  010B5A  0E12               	movlw	low STR_33
  5998  010B5C  6EE6               	movwf	postinc1,c
  5999  010B5E  0EFD               	movlw	high STR_33
  6000  010B60  6EE6               	movwf	postinc1,c
  6001  010B62  0E00               	movlw	0
  6002  010B64  6EE6               	movwf	postinc1,c
  6003  010B66  0E02               	movlw	2
  6004  010B68  6EE6               	movwf	postinc1,c
  6005  010B6A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6006  010B6E  0060  F007  FFE6   	movff	btemp,postinc1
  6007  010B74  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6008  010B7A  0E0C               	movlw	12
  6009  010B7C  6EE6               	movwf	postinc1,c
  6010  010B7E  EC68  F0D8         	call	_sprintf	;wreg free
  6011                           
  6012                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  6013  010B82  EE22  F09F         	lfsr	2,_C+160	;volatile
  6014  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  6015  010B8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6016  010B92  006F FF7B FFE6     	movff	postinc2,postinc1
  6017  010B98  006F FF7B FFE6     	movff	postinc2,postinc1
  6018  010B9E  0E20               	movlw	low STR_34
  6019  010BA0  6EE6               	movwf	postinc1,c
  6020  010BA2  0EFC               	movlw	high STR_34
  6021  010BA4  6EE6               	movwf	postinc1,c
  6022  010BA6  0E01               	movlw	1
  6023  010BA8  6EE6               	movwf	postinc1,c
  6024  010BAA  0E00               	movlw	0
  6025  010BAC  6EE6               	movwf	postinc1,c
  6026  010BAE  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6027  010BB2  0060  F007  FFE6   	movff	btemp,postinc1
  6028  010BB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6029  010BBE  0E08               	movlw	8
  6030  010BC0  6EE6               	movwf	postinc1,c
  6031  010BC2  EC68  F0D8         	call	_sprintf	;wreg free
  6032                           
  6033                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6034  010BC6  EE22  F0A3         	lfsr	2,_C+164	;volatile
  6035  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6036  010BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6037  010BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6038  010BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  6039  010BE2  0E36               	movlw	low STR_35
  6040  010BE4  6EE6               	movwf	postinc1,c
  6041  010BE6  0EFC               	movlw	high STR_35
  6042  010BE8  6EE6               	movwf	postinc1,c
  6043  010BEA  0E01               	movlw	1
  6044  010BEC  6EE6               	movwf	postinc1,c
  6045  010BEE  0E01               	movlw	1
  6046  010BF0  6EE6               	movwf	postinc1,c
  6047  010BF2  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6048  010BF6  0060  F007  FFE6   	movff	btemp,postinc1
  6049  010BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6050  010C02  0E08               	movlw	8
  6051  010C04  6EE6               	movwf	postinc1,c
  6052  010C06  EC68  F0D8         	call	_sprintf	;wreg free
  6053                           
  6054                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6055  010C0A  EE22  F0A3         	lfsr	2,_C+164	;volatile
  6056  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6057  010C14  006F FF7B FFE6     	movff	postinc2,postinc1
  6058  010C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6059  010C20  006F FF7B FFE6     	movff	postinc2,postinc1
  6060  010C26  EE22  F09F         	lfsr	2,_C+160	;volatile
  6061  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6062  010C30  006F FF7B FFE6     	movff	postinc2,postinc1
  6063  010C36  006F FF7B FFE6     	movff	postinc2,postinc1
  6064  010C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  6065  010C42  EC67  F0A9         	call	___fladd	;wreg free
  6066  010C46  0060  F007  FFE6   	movff	btemp,postinc1
  6067  010C4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6068  010C52  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6069  010C58  0060  F013  FFE6   	movff	btemp+3,postinc1
  6070  010C5E  0E4C               	movlw	low STR_36
  6071  010C60  6EE6               	movwf	postinc1,c
  6072  010C62  0EFC               	movlw	high STR_36
  6073  010C64  6EE6               	movwf	postinc1,c
  6074  010C66  0E01               	movlw	1
  6075  010C68  6EE6               	movwf	postinc1,c
  6076  010C6A  0E02               	movlw	2
  6077  010C6C  6EE6               	movwf	postinc1,c
  6078  010C6E  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6079  010C72  0060  F007  FFE6   	movff	btemp,postinc1
  6080  010C78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6081  010C7E  0E08               	movlw	8
  6082  010C80  6EE6               	movwf	postinc1,c
  6083  010C82  EC68  F0D8         	call	_sprintf	;wreg free
  6084                           
  6085                           ;main.c: 389:      break;
  6086  010C86  D227               	goto	l14939
  6087  010C88                     l1481:
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;main.c: 391:      V.calib = 0;
  6091  010C88  0102               	movlb	2	; () banked
  6092  010C8A  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6093                           
  6094                           ; BSR set to: 2
  6095                           ;main.c: 392:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6096  010C8C  EE22  F07F         	lfsr	2,_C+128	;volatile
  6097  010C90  006F FF7B FFE6     	movff	postinc2,postinc1
  6098  010C96  006F FF7B FFE6     	movff	postinc2,postinc1
  6099  010C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6100  010CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6101  010CA8  0E82               	movlw	low STR_37
  6102  010CAA  6EE6               	movwf	postinc1,c
  6103  010CAC  0EFB               	movlw	high STR_37
  6104  010CAE  6EE6               	movwf	postinc1,c
  6105  010CB0  0E00               	movlw	0
  6106  010CB2  6EE6               	movwf	postinc1,c
  6107  010CB4  0E00               	movlw	0
  6108  010CB6  6EE6               	movwf	postinc1,c
  6109  010CB8  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6110  010CBC  0060  F007  FFE6   	movff	btemp,postinc1
  6111  010CC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6112  010CC8  0E08               	movlw	8
  6113  010CCA  6EE6               	movwf	postinc1,c
  6114  010CCC  EC68  F0D8         	call	_sprintf	;wreg free
  6115                           
  6116                           ;main.c: 393:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6117  010CD0  EE22  F093         	lfsr	2,_C+148	;volatile
  6118  010CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6119  010CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6120  010CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6121  010CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6122  010CEC  EE22  F08F         	lfsr	2,_C+144	;volatile
  6123  010CF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6124  010CF6  006F FF7B FFE6     	movff	postinc2,postinc1
  6125  010CFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6126  010D02  006F FF7B FFE6     	movff	postinc2,postinc1
  6127  010D08  0EC7               	movlw	low STR_38
  6128  010D0A  6EE6               	movwf	postinc1,c
  6129  010D0C  0EFB               	movlw	high STR_38
  6130  010D0E  6EE6               	movwf	postinc1,c
  6131  010D10  0E00               	movlw	0
  6132  010D12  6EE6               	movwf	postinc1,c
  6133  010D14  0E01               	movlw	1
  6134  010D16  6EE6               	movwf	postinc1,c
  6135  010D18  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6136  010D1C  0060  F007  FFE6   	movff	btemp,postinc1
  6137  010D22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6138  010D28  0E0C               	movlw	12
  6139  010D2A  6EE6               	movwf	postinc1,c
  6140  010D2C  EC68  F0D8         	call	_sprintf	;wreg free
  6141                           
  6142                           ;main.c: 394:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6143  010D30  EE22  F00F         	lfsr	2,_C+16	;volatile
  6144  010D34  006F FF7B FFE6     	movff	postinc2,postinc1
  6145  010D3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6146  010D40  006F FF7B FFE6     	movff	postinc2,postinc1
  6147  010D46  006F FF7B FFE6     	movff	postinc2,postinc1
  6148  010D4C  EE22  F0B3         	lfsr	2,_C+180	;volatile
  6149  010D50  006F FF78  F00B    	movff	postinc2,btemp+10
  6150  010D56  006F FF74  F00C    	movff	postdec2,btemp+11
  6151  010D5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6152  010D62  0060  F033  FFE6   	movff	btemp+11,postinc1
  6153  010D68  EE22  F0B5         	lfsr	2,_C+182	;volatile
  6154  010D6C  006F FF78  F00B    	movff	postinc2,btemp+10
  6155  010D72  006F FF74  F00C    	movff	postdec2,btemp+11
  6156  010D78  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6157  010D7E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6158  010D84  0E00               	movlw	0
  6159  010D86  6EE6               	movwf	postinc1,c
  6160  010D88  0E05               	movlw	5
  6161  010D8A  6EE6               	movwf	postinc1,c
  6162  010D8C  EC62  F0D9         	call	_spinners	;wreg free
  6163  010D90  5001               	movf	btemp^0,w,c
  6164  010D92  6EE6               	movwf	postinc1,c
  6165  010D94  0E00               	movlw	0
  6166  010D96  6EE6               	movwf	postinc1,c
  6167  010D98  0EE8               	movlw	low STR_39
  6168  010D9A  6EE6               	movwf	postinc1,c
  6169  010D9C  0EFA               	movlw	high STR_39
  6170  010D9E  6EE6               	movwf	postinc1,c
  6171  010DA0  0E00               	movlw	0
  6172  010DA2  6EE6               	movwf	postinc1,c
  6173  010DA4  0E02               	movlw	2
  6174  010DA6  6EE6               	movwf	postinc1,c
  6175  010DA8  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6176  010DAC  0060  F007  FFE6   	movff	btemp,postinc1
  6177  010DB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6178  010DB8  0E0E               	movlw	14
  6179  010DBA  6EE6               	movwf	postinc1,c
  6180  010DBC  EC68  F0D8         	call	_sprintf	;wreg free
  6181                           
  6182                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6183  010DC0  EE22  F087         	lfsr	2,_C+136	;volatile
  6184  010DC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6185  010DCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6186  010DD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6187  010DD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6188  010DDC  0E6B               	movlw	low STR_40
  6189  010DDE  6EE6               	movwf	postinc1,c
  6190  010DE0  0EFB               	movlw	high STR_40
  6191  010DE2  6EE6               	movwf	postinc1,c
  6192  010DE4  0E01               	movlw	1
  6193  010DE6  6EE6               	movwf	postinc1,c
  6194  010DE8  0E00               	movlw	0
  6195  010DEA  6EE6               	movwf	postinc1,c
  6196  010DEC  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6197  010DF0  0060  F007  FFE6   	movff	btemp,postinc1
  6198  010DF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6199  010DFC  0E08               	movlw	8
  6200  010DFE  6EE6               	movwf	postinc1,c
  6201  010E00  EC68  F0D8         	call	_sprintf	;wreg free
  6202                           
  6203                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6204  010E04  EE22  F125         	lfsr	2,_C+294	;volatile
  6205  010E08  006F FF7B FFE6     	movff	postinc2,postinc1
  6206  010E0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6207  010E14  006F FF7B FFE6     	movff	postinc2,postinc1
  6208  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6209  010E20  EE22  F131         	lfsr	2,_C+306	;volatile
  6210  010E24  006F FF7B FFE6     	movff	postinc2,postinc1
  6211  010E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6212  010E30  006F FF7B FFE6     	movff	postinc2,postinc1
  6213  010E36  006F FF7B FFE6     	movff	postinc2,postinc1
  6214  010E3C  0E99               	movlw	low STR_41
  6215  010E3E  6EE6               	movwf	postinc1,c
  6216  010E40  0EFB               	movlw	high STR_41
  6217  010E42  6EE6               	movwf	postinc1,c
  6218  010E44  0E01               	movlw	1
  6219  010E46  6EE6               	movwf	postinc1,c
  6220  010E48  0E01               	movlw	1
  6221  010E4A  6EE6               	movwf	postinc1,c
  6222  010E4C  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6223  010E50  0060  F007  FFE6   	movff	btemp,postinc1
  6224  010E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6225  010E5C  0E0C               	movlw	12
  6226  010E5E  6EE6               	movwf	postinc1,c
  6227  010E60  EC68  F0D8         	call	_sprintf	;wreg free
  6228                           
  6229                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6230  010E64  EE22  F129         	lfsr	2,_C+298	;volatile
  6231  010E68  006F FF7B FFE6     	movff	postinc2,postinc1
  6232  010E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6233  010E74  006F FF7B FFE6     	movff	postinc2,postinc1
  6234  010E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6235  010E80  EE22  F135         	lfsr	2,_C+310	;volatile
  6236  010E84  006F FF7B FFE6     	movff	postinc2,postinc1
  6237  010E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6238  010E90  006F FF7B FFE6     	movff	postinc2,postinc1
  6239  010E96  006F FF7B FFE6     	movff	postinc2,postinc1
  6240  010E9C  0EB0               	movlw	low STR_42
  6241  010E9E  6EE6               	movwf	postinc1,c
  6242  010EA0  0EFB               	movlw	high STR_42
  6243  010EA2  6EE6               	movwf	postinc1,c
  6244  010EA4  0E01               	movlw	1
  6245  010EA6  6EE6               	movwf	postinc1,c
  6246  010EA8  0E02               	movlw	2
  6247  010EAA  6EE6               	movwf	postinc1,c
  6248  010EAC  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6249  010EB0  0060  F007  FFE6   	movff	btemp,postinc1
  6250  010EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6251  010EBC  0E0C               	movlw	12
  6252  010EBE  6EE6               	movwf	postinc1,c
  6253  010EC0  EC68  F0D8         	call	_sprintf	;wreg free
  6254                           
  6255                           ;main.c: 399:      break;
  6256  010EC4  D108               	goto	l14939
  6257  010EC6                     l14923:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;main.c: 401:      if (!V.calib) {
  6261  010EC6  0102               	movlb	2	; () banked
  6262  010EC8  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  6263  010ECA  A4D8               	btfss	status,2,c
  6264  010ECC  D02D               	goto	l14927
  6265                           
  6266                           ; BSR set to: 2
  6267                           ;main.c: 402:       lp_filter(0.0, i, -1);
  6268  010ECE  0EFF               	movlw	255
  6269  010ED0  6EE6               	movwf	postinc1,c
  6270                           
  6271                           ;stkvar	_i @ sp[(-18)+14]
  6272  010ED2  0EFC               	movlw	-4
  6273  010ED4  50E3               	movf	plusw1,w,c
  6274  010ED6  6EE6               	movwf	postinc1,c
  6275  010ED8  0E00               	movlw	0
  6276  010EDA  6EE6               	movwf	postinc1,c
  6277  010EDC  0E00               	movlw	0
  6278  010EDE  6EE6               	movwf	postinc1,c
  6279  010EE0  0E00               	movlw	0
  6280  010EE2  6EE6               	movwf	postinc1,c
  6281  010EE4  0E00               	movlw	0
  6282  010EE6  6EE6               	movwf	postinc1,c
  6283  010EE8  EC99  F0CA         	call	_lp_filter	;wreg free
  6284                           
  6285                           ;main.c: 403:       lp_filter(0.0, j, -1);
  6286  010EEC  0EFF               	movlw	255
  6287  010EEE  6EE6               	movwf	postinc1,c
  6288                           
  6289                           ;stkvar	_j @ sp[(-18)+13]
  6290  010EF0  0EFB               	movlw	-5
  6291  010EF2  50E3               	movf	plusw1,w,c
  6292  010EF4  6EE6               	movwf	postinc1,c
  6293  010EF6  0E00               	movlw	0
  6294  010EF8  6EE6               	movwf	postinc1,c
  6295  010EFA  0E00               	movlw	0
  6296  010EFC  6EE6               	movwf	postinc1,c
  6297  010EFE  0E00               	movlw	0
  6298  010F00  6EE6               	movwf	postinc1,c
  6299  010F02  0E00               	movlw	0
  6300  010F04  6EE6               	movwf	postinc1,c
  6301  010F06  EC99  F0CA         	call	_lp_filter	;wreg free
  6302                           
  6303                           ;main.c: 404:       lp_filter(0.0, k, -1);
  6304  010F0A  0EFF               	movlw	255
  6305  010F0C  6EE6               	movwf	postinc1,c
  6306                           
  6307                           ;stkvar	_k @ sp[(-18)+12]
  6308  010F0E  0EFA               	movlw	-6
  6309  010F10  50E3               	movf	plusw1,w,c
  6310  010F12  6EE6               	movwf	postinc1,c
  6311  010F14  0E00               	movlw	0
  6312  010F16  6EE6               	movwf	postinc1,c
  6313  010F18  0E00               	movlw	0
  6314  010F1A  6EE6               	movwf	postinc1,c
  6315  010F1C  0E00               	movlw	0
  6316  010F1E  6EE6               	movwf	postinc1,c
  6317  010F20  0E00               	movlw	0
  6318  010F22  6EE6               	movwf	postinc1,c
  6319  010F24  EC99  F0CA         	call	_lp_filter	;wreg free
  6320  010F28                     l14927:
  6321                           
  6322                           ;main.c: 406:      V.calib = 1;
  6323  010F28  0E01               	movlw	1
  6324  010F2A  0102               	movlb	2	; () banked
  6325  010F2C  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  6326                           
  6327                           ; BSR set to: 2
  6328                           ;main.c: 407:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6329                           ;stkvar	_inp_index @ sp[(-17)+11]
  6330  010F2E  0EFA               	movlw	-6
  6331  010F30  50E3               	movf	plusw1,w,c
  6332  010F32  6EE6               	movwf	postinc1,c
  6333  010F34  0E00               	movlw	0
  6334  010F36  6EE6               	movwf	postinc1,c
  6335                           
  6336                           ;stkvar	_i @ sp[(-19)+14]
  6337  010F38  0EFB               	movlw	-5
  6338  010F3A  50E3               	movf	plusw1,w,c
  6339  010F3C  0D04               	mullw	4
  6340  010F3E  0EFF               	movlw	low _C
  6341  010F40  24F3               	addwf	243,w,c
  6342  010F42  6ED9               	movwf	fsr2l,c
  6343  010F44  0E07               	movlw	high _C
  6344  010F46  20F4               	addwfc	prodh,w,c
  6345  010F48  6EDA               	movwf	fsr2h,c
  6346  010F4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6347  010F50  006F FF7B FFE6     	movff	postinc2,postinc1
  6348  010F56  006F FF7B FFE6     	movff	postinc2,postinc1
  6349  010F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6350                           
  6351                           ;stkvar	_i @ sp[(-23)+14]
  6352  010F62  0EF7               	movlw	-9
  6353  010F64  50E3               	movf	plusw1,w,c
  6354  010F66  6EE6               	movwf	postinc1,c
  6355  010F68  EC57  F0EC         	call	_get_raw_result	;wreg free
  6356  010F6C  0060  F007  FFE6   	movff	btemp,postinc1
  6357  010F72  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6358  010F78  0E3E               	movlw	low STR_43
  6359  010F7A  6EE6               	movwf	postinc1,c
  6360  010F7C  0EFD               	movlw	high STR_43
  6361  010F7E  6EE6               	movwf	postinc1,c
  6362  010F80  0E00               	movlw	0
  6363  010F82  6EE6               	movwf	postinc1,c
  6364  010F84  0E00               	movlw	0
  6365  010F86  6EE6               	movwf	postinc1,c
  6366  010F88  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6367  010F8C  0060  F007  FFE6   	movff	btemp,postinc1
  6368  010F92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6369  010F98  0E0C               	movlw	12
  6370  010F9A  6EE6               	movwf	postinc1,c
  6371  010F9C  EC68  F0D8         	call	_sprintf	;wreg free
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;main.c: 408:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6375                           ;stkvar	_inp_index @ sp[(-17)+11]
  6376  010FA0  0EFA               	movlw	-6
  6377  010FA2  50E3               	movf	plusw1,w,c
  6378  010FA4  6E0B               	movwf	(btemp+10)^0,c
  6379  010FA6  6A0C               	clrf	(btemp+11)^0,c
  6380  010FA8  0E01               	movlw	1
  6381  010FAA  260B               	addwf	(btemp+10)^0,f,c
  6382  010FAC  0E00               	movlw	0
  6383  010FAE  220C               	addwfc	(btemp+11)^0,f,c
  6384  010FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6385  010FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  6386                           
  6387                           ;stkvar	_j @ sp[(-19)+13]
  6388  010FBC  0EFA               	movlw	-6
  6389  010FBE  50E3               	movf	plusw1,w,c
  6390  010FC0  0D04               	mullw	4
  6391  010FC2  0EFF               	movlw	low _C
  6392  010FC4  24F3               	addwf	243,w,c
  6393  010FC6  6ED9               	movwf	fsr2l,c
  6394  010FC8  0E07               	movlw	high _C
  6395  010FCA  20F4               	addwfc	prodh,w,c
  6396  010FCC  6EDA               	movwf	fsr2h,c
  6397  010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6398  010FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6399  010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6400  010FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6401                           
  6402                           ;stkvar	_j @ sp[(-23)+13]
  6403  010FE6  0EF6               	movlw	-10
  6404  010FE8  50E3               	movf	plusw1,w,c
  6405  010FEA  6EE6               	movwf	postinc1,c
  6406  010FEC  EC57  F0EC         	call	_get_raw_result	;wreg free
  6407  010FF0  0060  F007  FFE6   	movff	btemp,postinc1
  6408  010FF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6409  010FFC  0E3E               	movlw	low STR_43
  6410  010FFE  6EE6               	movwf	postinc1,c
  6411  011000  0EFD               	movlw	high STR_43
  6412  011002  6EE6               	movwf	postinc1,c
  6413  011004  0E00               	movlw	0
  6414  011006  6EE6               	movwf	postinc1,c
  6415  011008  0E01               	movlw	1
  6416  01100A  6EE6               	movwf	postinc1,c
  6417  01100C  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6418  011010  0060  F007  FFE6   	movff	btemp,postinc1
  6419  011016  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6420  01101C  0E0C               	movlw	12
  6421  01101E  6EE6               	movwf	postinc1,c
  6422  011020  EC68  F0D8         	call	_sprintf	;wreg free
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;main.c: 409:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6426                           ;stkvar	_inp_index @ sp[(-17)+11]
  6427  011024  0EFA               	movlw	-6
  6428  011026  50E3               	movf	plusw1,w,c
  6429  011028  6E0B               	movwf	(btemp+10)^0,c
  6430  01102A  6A0C               	clrf	(btemp+11)^0,c
  6431  01102C  0E02               	movlw	2
  6432  01102E  260B               	addwf	(btemp+10)^0,f,c
  6433  011030  0E00               	movlw	0
  6434  011032  220C               	addwfc	(btemp+11)^0,f,c
  6435  011034  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6436  01103A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6437                           
  6438                           ;stkvar	_k @ sp[(-19)+12]
  6439  011040  0EF9               	movlw	-7
  6440  011042  50E3               	movf	plusw1,w,c
  6441  011044  0D04               	mullw	4
  6442  011046  0EFF               	movlw	low _C
  6443  011048  24F3               	addwf	243,w,c
  6444  01104A  6ED9               	movwf	fsr2l,c
  6445  01104C  0E07               	movlw	high _C
  6446  01104E  20F4               	addwfc	prodh,w,c
  6447  011050  6EDA               	movwf	fsr2h,c
  6448  011052  006F FF7B FFE6     	movff	postinc2,postinc1
  6449  011058  006F FF7B FFE6     	movff	postinc2,postinc1
  6450  01105E  006F FF7B FFE6     	movff	postinc2,postinc1
  6451  011064  006F FF7B FFE6     	movff	postinc2,postinc1
  6452                           
  6453                           ;stkvar	_k @ sp[(-23)+12]
  6454  01106A  0EF5               	movlw	-11
  6455  01106C  50E3               	movf	plusw1,w,c
  6456  01106E  6EE6               	movwf	postinc1,c
  6457  011070  EC57  F0EC         	call	_get_raw_result	;wreg free
  6458  011074  0060  F007  FFE6   	movff	btemp,postinc1
  6459  01107A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6460  011080  0E3E               	movlw	low STR_43
  6461  011082  6EE6               	movwf	postinc1,c
  6462  011084  0EFD               	movlw	high STR_43
  6463  011086  6EE6               	movwf	postinc1,c
  6464  011088  0E00               	movlw	0
  6465  01108A  6EE6               	movwf	postinc1,c
  6466  01108C  0E02               	movlw	2
  6467  01108E  6EE6               	movwf	postinc1,c
  6468  011090  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
  6469  011094  0060  F007  FFE6   	movff	btemp,postinc1
  6470  01109A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6471  0110A0  0E0C               	movlw	12
  6472  0110A2  6EE6               	movwf	postinc1,c
  6473  0110A4  EC68  F0D8         	call	_sprintf	;wreg free
  6474                           
  6475                           ;main.c: 410:      break;
  6476  0110A8  D016               	goto	l14939
  6477  0110AA                     l14937:
  6478  0110AA  0100               	movlb	0	; () banked
  6479  0110AC  51F1               	movf	_H& (0+255),w,b
  6480  0110AE  6E0B               	movwf	(btemp+10)^0,c
  6481  0110B0  6A0C               	clrf	(btemp+11)^0,c
  6482                           
  6483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6484                           ; Switch size 1, requested type "simple"
  6485                           ; Number of cases is 1, Range of values is 0 to 0
  6486                           ; switch strategies available:
  6487                           ; Name         Instructions Cycles
  6488                           ; simple_byte            4     3 (average)
  6489                           ;	Chosen strategy is simple_byte
  6490  0110B2  500C               	movf	(btemp+11)^0,w,c
  6491  0110B4  0A00               	xorlw	0	; case 0
  6492  0110B6  A4D8               	btfss	status,2,c
  6493  0110B8  D00E               	goto	l14939
  6494                           
  6495                           ; BSR set to: 0
  6496                           ; Switch size 1, requested type "simple"
  6497                           ; Number of cases is 4, Range of values is 0 to 3
  6498                           ; switch strategies available:
  6499                           ; Name         Instructions Cycles
  6500                           ; simple_byte           13     7 (average)
  6501                           ;	Chosen strategy is simple_byte
  6502  0110BA  500B               	movf	(btemp+10)^0,w,c
  6503  0110BC  0A00               	xorlw	0	; case 0
  6504  0110BE  B4D8               	btfsc	status,2,c
  6505  0110C0  D4CE               	goto	l1480
  6506  0110C2  0A01               	xorlw	1	; case 1
  6507  0110C4  B4D8               	btfsc	status,2,c
  6508  0110C6  EF2C  F084         	goto	l1470
  6509  0110CA  0A03               	xorlw	3	; case 2
  6510  0110CC  B4D8               	btfsc	status,2,c
  6511  0110CE  D5DC               	goto	l1481
  6512  0110D0  0A01               	xorlw	1	; case 3
  6513  0110D2  B4D8               	btfsc	status,2,c
  6514  0110D4  D6F8               	goto	l14923
  6515  0110D6                     l14939:
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;main.c: 414:     clear_hid_pflags(&H);
  6519  0110D6  0EF1               	movlw	_H& (0+255)
  6520  0110D8  6EE6               	movwf	postinc1,c
  6521  0110DA  EC91  F0E9         	call	_clear_hid_pflags	;wreg free
  6522                           
  6523                           ;main.c: 416:    StartTimer(TMR_DISPLAY, 250);
  6524  0110DE  0EFA               	movlw	250
  6525  0110E0  6EE6               	movwf	postinc1,c
  6526  0110E2  0E00               	movlw	0
  6527  0110E4  6EE6               	movwf	postinc1,c
  6528  0110E6  0E0A               	movlw	10
  6529  0110E8  6EE6               	movwf	postinc1,c
  6530  0110EA  EC33  F0E8         	call	_StartTimer	;wreg free
  6531                           
  6532                           ;main.c: 417:    V.enter = check_enter_button(&H);
  6533  0110EE  0EF1               	movlw	_H& (0+255)
  6534  0110F0  6EE6               	movwf	postinc1,c
  6535  0110F2  EC53  F0E8         	call	_check_enter_button	;wreg free
  6536  0110F6  5001               	movf	btemp^0,w,c
  6537  0110F8  0102               	movlb	2	; () banked
  6538  0110FA  6FAD               	movwf	(_V+173)& (0+255),b	;volatile
  6539                           
  6540                           ; BSR set to: 2
  6541                           ;main.c: 418:    if (V.enter && (H.hid_display != HID_AUX)) {
  6542  0110FC  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  6543  0110FE  B4D8               	btfsc	status,2,c
  6544  011100  D013               	goto	l14953
  6545                           
  6546                           ; BSR set to: 2
  6547  011102  0E03               	movlw	3
  6548  011104  0100               	movlb	0	; () banked
  6549  011106  19F1               	xorwf	_H& (0+255),w,b
  6550  011108  B4D8               	btfsc	status,2,c
  6551  01110A  D00E               	goto	l14953
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;main.c: 419:     V.enter = 0;
  6555  01110C  0102               	movlb	2	; () banked
  6556  01110E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  6557                           
  6558                           ; BSR set to: 2
  6559                           ;main.c: 420:     V.screen = ~V.screen;
  6560  011110  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6561  011112  D002               	goto	u14240
  6562  011114  0E01               	movlw	1
  6563  011116  D001               	goto	u14246
  6564  011118                     u14240:
  6565  011118  0E00               	movlw	0
  6566  01111A                     u14246:
  6567  01111A  0AFF               	xorlw	255
  6568  01111C  6E0C               	movwf	(btemp+11)^0,c
  6569  01111E  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  6570  011120  180C               	xorwf	(btemp+11)^0,w,c
  6571  011122  0BFE               	andlw	-2
  6572  011124  180C               	xorwf	(btemp+11)^0,w,c
  6573  011126  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  6574  011128                     l14953:
  6575                           
  6576                           ;main.c: 422:    set_vterm(V.screen);
  6577  011128  0102               	movlb	2	; () banked
  6578  01112A  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6579  01112C  D002               	goto	u14250
  6580  01112E  0E01               	movlw	1
  6581  011130  D001               	goto	u14256
  6582  011132                     u14250:
  6583  011132  0E00               	movlw	0
  6584  011134                     u14256:
  6585  011134  6EE6               	movwf	postinc1,c
  6586  011136  ECB7  F0EC         	call	_set_vterm	;wreg free
  6587                           
  6588                           ;main.c: 423:    update_lcd(V.screen);
  6589  01113A  0102               	movlb	2	; () banked
  6590  01113C  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6591  01113E  D002               	goto	u14260
  6592  011140  0E01               	movlw	1
  6593  011142  D001               	goto	u14266
  6594  011144                     u14260:
  6595  011144  0E00               	movlw	0
  6596  011146                     u14266:
  6597  011146  6EE6               	movwf	postinc1,c
  6598  011148  EC59  F0D7         	call	_update_lcd	;wreg free
  6599                           
  6600                           ;main.c: 425:    wait_lcd_done();
  6601  01114C  EC46  F0EC         	call	_wait_lcd_done	;wreg free
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;main.c: 426:    set_dac_a(3.333);
  6605  011150  0EDF               	movlw	223
  6606  011152  6EE6               	movwf	postinc1,c
  6607  011154  0E4F               	movlw	79
  6608  011156  6EE6               	movwf	postinc1,c
  6609  011158  0E55               	movlw	85
  6610  01115A  6EE6               	movwf	postinc1,c
  6611  01115C  0E40               	movlw	64
  6612  01115E  6EE6               	movwf	postinc1,c
  6613  011160  EC77  F0E9         	call	_set_dac_a	;wreg free
  6614                           
  6615                           ;main.c: 427:    set_dac_b(6.666);
  6616  011164  0EDF               	movlw	223
  6617  011166  6EE6               	movwf	postinc1,c
  6618  011168  0E4F               	movlw	79
  6619  01116A  6EE6               	movwf	postinc1,c
  6620  01116C  0ED5               	movlw	213
  6621  01116E  6EE6               	movwf	postinc1,c
  6622  011170  0E40               	movlw	64
  6623  011172  6EE6               	movwf	postinc1,c
  6624  011174  EC5D  F0E9         	call	_set_dac_b	;wreg free
  6625                           
  6626                           ;main.c: 428:    set_dac();
  6627  011178  EC5D  F0DD         	call	_set_dac	;wreg free
  6628  01117C                     l14965:
  6629                           
  6630                           ;main.c: 434:   check_help(V.flipper);
  6631  01117C  0102               	movlb	2	; () banked
  6632  01117E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6633  011180  6EE6               	movwf	postinc1,c
  6634  011182  ECA9  F0C7         	call	_check_help	;wreg free
  6635                           
  6636                           ;main.c: 436:   if (V.enter) {
  6637  011186  0102               	movlb	2	; () banked
  6638  011188  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  6639  01118A  B4D8               	btfsc	status,2,c
  6640  01118C  D062               	goto	l1486
  6641                           
  6642                           ; BSR set to: 2
  6643                           ;main.c: 437:    V.enter = 0;
  6644  01118E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  6645                           
  6646                           ;main.c: 438:    V.calib = 0;
  6647  011190  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6648                           
  6649                           ; BSR set to: 2
  6650                           ;main.c: 439:    inp_index += 3;
  6651                           ;stkvar	_inp_index @ sp[(-17)+11]
  6652  011192  0EFA               	movlw	-6
  6653  011194  006F FF8C  F001    	movff	plusw1,btemp
  6654  01119A  0E03               	movlw	3
  6655  01119C  2601               	addwf	btemp^0,f,c
  6656  01119E  0EFA               	movlw	-6
  6657  0111A0  0060  F007  FFE3   	movff	btemp,plusw1
  6658                           
  6659                           ;main.c: 440:    if (inp_index > 9)
  6660                           ;stkvar	_inp_index @ sp[(-17)+11]
  6661  0111A6  0EFA               	movlw	-6
  6662  0111A8  006F FF8C  F001    	movff	plusw1,btemp
  6663  0111AE  0E09               	movlw	9
  6664  0111B0  6401               	cpfsgt	btemp^0,c
  6665  0111B2  D03A               	goto	l14993
  6666                           
  6667                           ; BSR set to: 2
  6668                           ;main.c: 441:     inp_index = 0;
  6669                           ;stkvar	_inp_index @ sp[(-17)+11]
  6670  0111B4  0EFA               	movlw	-6
  6671  0111B6  6AE3               	clrf	plusw1,c
  6672  0111B8  D037               	goto	l14993
  6673  0111BA                     l14975:
  6674                           
  6675                           ; BSR set to: 2
  6676                           ;main.c: 444:     i = C_BATT;
  6677                           ;stkvar	_i @ sp[(-17)+14]
  6678  0111BA  0EFD               	movlw	-3
  6679  0111BC  6AE3               	clrf	plusw1,c
  6680                           
  6681                           ; BSR set to: 2
  6682                           ;main.c: 445:     j = C_PV;
  6683                           ;stkvar	_j @ sp[(-17)+13]
  6684  0111BE  0EFC               	movlw	-4
  6685  0111C0  6AE3               	clrf	plusw1,c
  6686  0111C2  2AE3               	incf	plusw1,f,c
  6687                           
  6688                           ; BSR set to: 2
  6689                           ;main.c: 446:     k = V_CC;
  6690                           ;stkvar	_k @ sp[(-17)+12]
  6691  0111C4  0EFB               	movlw	-5
  6692  0111C6  6AE3               	clrf	plusw1,c
  6693  0111C8  82E3               	bsf	plusw1,1,c
  6694                           
  6695                           ;main.c: 447:     break;
  6696  0111CA  D043               	goto	l1486
  6697  0111CC                     l14981:
  6698                           
  6699                           ; BSR set to: 2
  6700                           ;main.c: 449:     i = V_BAT;
  6701                           ;stkvar	_i @ sp[(-17)+14]
  6702  0111CC  0EFD               	movlw	-3
  6703  0111CE  6AE3               	clrf	plusw1,c
  6704  0111D0  84E3               	bsf	plusw1,2,c
  6705                           
  6706                           ;main.c: 450:     j = V_PV;
  6707                           ;stkvar	_j @ sp[(-17)+13]
  6708  0111D2  0EFC               	movlw	-4
  6709  0111D4  6AE3               	clrf	plusw1,c
  6710  0111D6  80E3               	bsf	plusw1,0,c
  6711  0111D8  84E3               	bsf	plusw1,2,c	;indir
  6712                           
  6713                           ;main.c: 451:     k = V_CBUS;
  6714                           ;stkvar	_k @ sp[(-17)+12]
  6715  0111DA  0EFB               	movlw	-5
  6716  0111DC  6AE3               	clrf	plusw1,c
  6717  0111DE  82E3               	bsf	plusw1,1,c
  6718  0111E0  84E3               	bsf	plusw1,2,c	;indir
  6719                           
  6720                           ;main.c: 452:     break;
  6721  0111E2  D037               	goto	l1486
  6722  0111E4                     l14983:
  6723                           
  6724                           ; BSR set to: 2
  6725                           ;main.c: 454:     i = V_BBAT;
  6726                           ;stkvar	_i @ sp[(-17)+14]
  6727  0111E4  0EFD               	movlw	-3
  6728  0111E6  6AE3               	clrf	plusw1,c
  6729  0111E8  82E3               	bsf	plusw1,1,c
  6730  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6731                           
  6732                           ; BSR set to: 2
  6733                           ;main.c: 455:     j = V_TEMP;
  6734  0111EC  0E0B               	movlw	11
  6735  0111EE  6E0C               	movwf	(btemp+11)^0,c
  6736                           
  6737                           ;stkvar	_j @ sp[(-17)+13]
  6738  0111F0  0EFC               	movlw	-4
  6739  0111F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  6740                           
  6741                           ; BSR set to: 2
  6742                           ;main.c: 456:     k = V_INVERTER;
  6743                           ;stkvar	_k @ sp[(-17)+12]
  6744  0111F8  0EFB               	movlw	-5
  6745  0111FA  6AE3               	clrf	plusw1,c
  6746  0111FC  84E3               	bsf	plusw1,2,c
  6747  0111FE  86E3               	bsf	plusw1,3,c	;indir
  6748                           
  6749                           ;main.c: 457:     break;
  6750  011200  D028               	goto	l1486
  6751  011202                     l14989:
  6752                           
  6753                           ; BSR set to: 2
  6754                           ;main.c: 459:     i = V_LIGHT_SENSOR;
  6755  011202  0E0D               	movlw	13
  6756  011204  6E0C               	movwf	(btemp+11)^0,c
  6757                           
  6758                           ;stkvar	_i @ sp[(-17)+14]
  6759  011206  0EFD               	movlw	-3
  6760  011208  0060  F033  FFE3   	movff	btemp+11,plusw1
  6761                           
  6762                           ;main.c: 460:     j = V_LIGHT_SENSOR;
  6763  01120E  0E0D               	movlw	13
  6764  011210  6E0C               	movwf	(btemp+11)^0,c
  6765                           
  6766                           ;stkvar	_j @ sp[(-17)+13]
  6767  011212  0EFC               	movlw	-4
  6768  011214  0060  F033  FFE3   	movff	btemp+11,plusw1
  6769                           
  6770                           ;main.c: 461:     k = V_LIGHT_SENSOR;
  6771  01121A  0E0D               	movlw	13
  6772  01121C  6E0C               	movwf	(btemp+11)^0,c
  6773                           
  6774                           ;stkvar	_k @ sp[(-17)+12]
  6775  01121E  0EFB               	movlw	-5
  6776  011220  0060  F033  FFE3   	movff	btemp+11,plusw1
  6777                           
  6778                           ;main.c: 462:     break;
  6779  011226  D015               	goto	l1486
  6780  011228                     l14993:
  6781                           
  6782                           ; BSR set to: 2
  6783                           ;stkvar	_inp_index @ sp[(-17)+11]
  6784  011228  0EFA               	movlw	-6
  6785  01122A  50E3               	movf	plusw1,w,c
  6786  01122C  6E0B               	movwf	(btemp+10)^0,c
  6787  01122E  6A0C               	clrf	(btemp+11)^0,c
  6788                           
  6789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6790                           ; Switch size 1, requested type "simple"
  6791                           ; Number of cases is 1, Range of values is 0 to 0
  6792                           ; switch strategies available:
  6793                           ; Name         Instructions Cycles
  6794                           ; simple_byte            4     3 (average)
  6795                           ;	Chosen strategy is simple_byte
  6796  011230  500C               	movf	(btemp+11)^0,w,c
  6797  011232  0A00               	xorlw	0	; case 0
  6798  011234  A4D8               	btfss	status,2,c
  6799  011236  D00D               	goto	l1486
  6800                           
  6801                           ; BSR set to: 2
  6802                           ; Switch size 1, requested type "simple"
  6803                           ; Number of cases is 4, Range of values is 0 to 9
  6804                           ; switch strategies available:
  6805                           ; Name         Instructions Cycles
  6806                           ; simple_byte           13     7 (average)
  6807                           ;	Chosen strategy is simple_byte
  6808  011238  500B               	movf	(btemp+10)^0,w,c
  6809  01123A  0A00               	xorlw	0	; case 0
  6810  01123C  B4D8               	btfsc	status,2,c
  6811  01123E  D7BD               	goto	l14975
  6812  011240  0A03               	xorlw	3	; case 3
  6813  011242  B4D8               	btfsc	status,2,c
  6814  011244  D7C3               	goto	l14981
  6815  011246  0A05               	xorlw	5	; case 6
  6816  011248  B4D8               	btfsc	status,2,c
  6817  01124A  D7CC               	goto	l14983
  6818  01124C  0A0F               	xorlw	15	; case 9
  6819  01124E  B4D8               	btfsc	status,2,c
  6820  011250  D7D8               	goto	l14989
  6821  011252                     l1486:
  6822                           
  6823                           ; BSR set to: 2
  6824                           ;main.c: 471:   if (V.set_sequ) {
  6825  011252  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  6826  011254  EFE0  F083         	goto	l14867
  6827                           
  6828                           ; BSR set to: 2
  6829                           ;main.c: 472:    if (TimerDone(TMR_INFO)) {
  6830  011258  0E07               	movlw	7
  6831  01125A  6EE6               	movwf	postinc1,c
  6832  01125C  ECC1  F0EA         	call	_TimerDone	;wreg free
  6833  011260  5001               	movf	btemp^0,w,c
  6834  011262  B4D8               	btfsc	status,2,c
  6835  011264  D00C               	goto	l15003
  6836                           
  6837                           ;main.c: 473:     V.set_sequ = 0;
  6838  011266  0102               	movlb	2	; () banked
  6839  011268  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  6840                           
  6841                           ; BSR set to: 2
  6842                           ;main.c: 474:     set_vterm(0);
  6843  01126A  0E00               	movlw	0
  6844  01126C  6EE6               	movwf	postinc1,c
  6845  01126E  ECB7  F0EC         	call	_set_vterm	;wreg free
  6846                           
  6847                           ;main.c: 475:     update_lcd(0);
  6848  011272  0E00               	movlw	0
  6849  011274  6EE6               	movwf	postinc1,c
  6850  011276  EC59  F0D7         	call	_update_lcd	;wreg free
  6851                           
  6852                           ;main.c: 476:    } else {
  6853  01127A  EFE0  F083         	goto	l14867
  6854  01127E                     l15003:
  6855                           
  6856                           ;main.c: 477:     set_vterm(2);
  6857  01127E  0E02               	movlw	2
  6858  011280  6EE6               	movwf	postinc1,c
  6859  011282  ECB7  F0EC         	call	_set_vterm	;wreg free
  6860                           
  6861                           ;main.c: 478:     update_lcd(2);
  6862  011286  0E02               	movlw	2
  6863  011288  6EE6               	movwf	postinc1,c
  6864  01128A  EC59  F0D7         	call	_update_lcd	;wreg free
  6865  01128E  EFE0  F083         	goto	l14867
  6866  011292                     __end_of_main:
  6867                           	opt callstack 0
  6868                           
  6869 ;; *************** function _update_hist_data *****************
  6870 ;; Defined at:
  6871 ;;		line 454 in file "daq.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  mode            1  [STACK] const _Bool 
  6874 ;;  hist            2  [STACK] PTR volatile struct hist
  6875 ;;		 -> C.hist(109), C(323), 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1  [STACK] void 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  6882 ;; Tracked objects:
  6883 ;;		On entry : 3F/1
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6891 ;;Total ram usage:        0 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:   15
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_main
  6898 ;; This function uses a reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text1
  6902  01C676                     __ptext1:
  6903                           	opt callstack 0
  6904  01C676                     _update_hist_data:
  6905                           	opt callstack 15
  6906                           
  6907                           ;daq.c: 454: void update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 45
      +                          5: {;daq.c: 456:  if (hist == ((void*)0))
  6908                           ;stkvar	_hist @ sp[(0)+-3]
  6909                           
  6910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6911                           ;incstack = 0
  6912  01C676  0EFD               	movlw	-3
  6913  01C678  006F FF8C  F001    	movff	plusw1,btemp
  6914  01C67E  0EFE               	movlw	-2
  6915  01C680  50E3               	movf	plusw1,w,c
  6916  01C682  1001               	iorwf	btemp^0,w,c
  6917  01C684  B4D8               	btfsc	status,2,c
  6918  01C686  D02A               	goto	l2080
  6919                           
  6920                           ;daq.c: 459:  if (mode) {
  6921                           ;stkvar	_mode @ sp[(0)+-1]
  6922  01C688  0EFF               	movlw	-1
  6923  01C68A  50E3               	movf	plusw1,w,c
  6924  01C68C  B4D8               	btfsc	status,2,c
  6925  01C68E  D014               	goto	l12175
  6926                           
  6927                           ;daq.c: 460:   if (R.hist_save)
  6928  01C690  0101               	movlb	1	; () banked
  6929  01C692  A1AA               	btfss	(_R+163)& (0+255),0,b	;volatile
  6930  01C694  D023               	goto	l2080
  6931                           
  6932                           ; BSR set to: 1
  6933                           ;daq.c: 461:    R.H = *hist;
  6934                           ;stkvar	_hist @ sp[(0)+-3]
  6935  01C696  0EFD               	movlw	-3
  6936  01C698  006F FF8F FFD9     	movff	plusw1,fsr2l
  6937  01C69E  0EFE               	movlw	-2
  6938  01C6A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6939  01C6A6  EE00  F13D         	lfsr	0,_R+54	;volatile
  6940  01C6AA  0E6C               	movlw	108
  6941  01C6AC                     u11261:
  6942  01C6AC  006F FF6F FFEB     	movff	plusw2,plusw0
  6943  01C6B2  06E8               	decf	wreg,f,c
  6944  01C6B4  E2FB               	bc	u11261
  6945  01C6B6  D012               	goto	l2080
  6946  01C6B8                     l12175:
  6947                           
  6948                           ;daq.c: 463:   *hist = R.H;
  6949  01C6B8  EE20  F13D         	lfsr	2,_R+54	;volatile
  6950                           
  6951                           ;stkvar	_hist @ sp[(0)+-3]
  6952  01C6BC  0EFD               	movlw	-3
  6953  01C6BE  006F FF8F FFE9     	movff	plusw1,fsr0l
  6954  01C6C4  0EFE               	movlw	-2
  6955  01C6C6  006F FF8F FFEA     	movff	plusw1,fsr0h
  6956  01C6CC  0E6C               	movlw	108
  6957  01C6CE                     u11271:
  6958  01C6CE  006F FF6F FFEB     	movff	plusw2,plusw0
  6959  01C6D4  06E8               	decf	wreg,f,c
  6960  01C6D6  E2FB               	bc	u11271
  6961                           
  6962                           ;daq.c: 464:   R.hist_save = 1;
  6963  01C6D8  0101               	movlb	1	; () banked
  6964  01C6DA  81AA               	bsf	(_R+163)& (0+255),0,b	;volatile
  6965  01C6DC                     l2080:
  6966                           
  6967                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  6968  01C6DC  52E5               	movf	postdec1,f,c
  6969  01C6DE  52E5               	movf	postdec1,f,c
  6970  01C6E0  52E5               	movf	postdec1,f,c
  6971  01C6E2  0012               	return		;funcret
  6972  01C6E4                     __end_of_update_hist_data:
  6973                           	opt callstack 0
  6974                           
  6975 ;; *************** function _update_cal_data *****************
  6976 ;; Defined at:
  6977 ;;		line 435 in file "daq.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1  [STACK] void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/39
  6988 ;;		On exit  : 3F/1
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:   15
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_main
  7002 ;; This function uses a reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text2
  7006  01CB86                     __ptext2:
  7007                           	opt callstack 0
  7008  01CB86                     _update_cal_data:
  7009                           	opt callstack 15
  7010                           
  7011                           ;daq.c: 437:  R = r_cal;
  7012                           
  7013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7014                           ;incstack = 0
  7015  01CB86  EE21  F000         	lfsr	2,_r_cal
  7016  01CB8A  EE00  F107         	lfsr	0,_R	;volatile
  7017  01CB8E  0EA6               	movlw	166
  7018  01CB90                     u11201:
  7019  01CB90  006F FF7B FFEE     	movff	postinc2,postinc0
  7020  01CB96  06E8               	decf	wreg,f,c
  7021  01CB98  E2FB               	bc	u11201
  7022  01CB9A  0EA7               	movlw	167
  7023  01CB9C  5ED9               	subwf	fsr2l,f,c
  7024  01CB9E  5EE9               	subwf	fsr0l,f,c
  7025                           
  7026                           ;daq.c: 438:  if (!R.c_zero_cal) {
  7027  01CBA0  0101               	movlb	1	; () banked
  7028  01CBA2  B3AA               	btfsc	(_R+163)& (0+255),1,b	;volatile
  7029  01CBA4  D008               	goto	l12161
  7030                           
  7031                           ; BSR set to: 1
  7032                           ;daq.c: 439:   R.n_offset[0] = 3938;
  7033  01CBA6  0E0F               	movlw	15
  7034  01CBA8  6F2E               	movwf	(_R+39)& (0+255),b	;volatile
  7035  01CBAA  0E62               	movlw	98
  7036  01CBAC  6F2D               	movwf	(_R+38)& (0+255),b	;volatile
  7037                           
  7038                           ;daq.c: 440:   R.n_offset[1] = 4004;
  7039  01CBAE  0E0F               	movlw	15
  7040  01CBB0  6F30               	movwf	(_R+41)& (0+255),b	;volatile
  7041  01CBB2  0EA4               	movlw	164
  7042  01CBB4  6F2F               	movwf	(_R+40)& (0+255),b	;volatile
  7043  01CBB6                     l12161:
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;daq.c: 444:  if (!R.c_scale_cal) {
  7047  01CBB6  B5AA               	btfsc	(_R+163)& (0+255),2,b	;volatile
  7048  01CBB8  0012               	return	
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  7052  01CBBA  0EA0               	movlw	160
  7053  01CBBC  6F31               	movwf	(_R+42)& (0+255),b	;volatile
  7054  01CBBE  0E89               	movlw	137
  7055  01CBC0  6F32               	movwf	(_R+43)& (0+255),b	;volatile
  7056  01CBC2  0EB0               	movlw	176
  7057  01CBC4  6F33               	movwf	(_R+44)& (0+255),b	;volatile
  7058  01CBC6  0E3D               	movlw	61
  7059  01CBC8  6F34               	movwf	(_R+45)& (0+255),b	;volatile
  7060                           
  7061                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  7062  01CBCA  0EA4               	movlw	164
  7063  01CBCC  6F35               	movwf	(_R+46)& (0+255),b	;volatile
  7064  01CBCE  0EDE               	movlw	222
  7065  01CBD0  6F36               	movwf	(_R+47)& (0+255),b	;volatile
  7066  01CBD2  0E13               	movlw	19
  7067  01CBD4  6F37               	movwf	(_R+48)& (0+255),b	;volatile
  7068  01CBD6  0E3D               	movlw	61
  7069  01CBD8  6F38               	movwf	(_R+49)& (0+255),b	;volatile
  7070                           
  7071                           ; BSR set to: 1
  7072                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7073  01CBDA  0012               	return		;funcret
  7074  01CBDC                     __end_of_update_cal_data:
  7075                           	opt callstack 0
  7076                           
  7077 ;; *************** function _static_soc *****************
  7078 ;; Defined at:
  7079 ;;		line 117 in file "mbmc.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;		None
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1  [STACK] void 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr2l, fsr2h
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/1
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7097 ;;Total ram usage:        0 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:   15
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_main
  7104 ;; This function uses a reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text3
  7108  01CA78                     __ptext3:
  7109                           	opt callstack 0
  7110  01CA78                     _static_soc:
  7111                           	opt callstack 15
  7112                           
  7113                           ;mbmc.c: 119:  C.runtime = 120;
  7114                           
  7115                           ; BSR set to: 1
  7116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7117                           ;incstack = 0
  7118  01CA78  0E78               	movlw	120
  7119  01CA7A  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
  7120  01CA80  0E00               	movlw	0
  7121  01CA82  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
  7122                           
  7123                           ;mbmc.c: 120:  C.soc = 100;
  7124  01CA88  0E64               	movlw	100
  7125  01CA8A  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
  7126  01CA90  0E00               	movlw	0
  7127  01CA92  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
  7128                           
  7129                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  7130  01CA98  EE22  F08B         	lfsr	2,_C+140	;volatile
  7131  01CA9C  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
  7132  01CAA2  006F FF78  F890    	movff	postinc2,_C+145	;volatile
  7133  01CAA8  006F FF78  F891    	movff	postinc2,_C+146	;volatile
  7134  01CAAE  006F FF74  F892    	movff	postdec2,_C+147	;volatile
  7135                           
  7136                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  7137  01CAB4  EE22  F08F         	lfsr	2,_C+144	;volatile
  7138  01CAB8  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  7139  01CABE  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  7140  01CAC4  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  7141  01CACA  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  7142                           
  7143                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7144  01CAD0  0012               	return		;funcret
  7145  01CAD2                     __end_of_static_soc:
  7146                           	opt callstack 0
  7147                           
  7148 ;; *************** function _start_switch_handler *****************
  7149 ;; Defined at:
  7150 ;;		line 125 in file "dio.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1  [STACK] void 
  7157 ;; Registers used:
  7158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 3F/39
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7168 ;;Total ram usage:        0 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:   16
  7171 ;; This function calls:
  7172 ;;		_INT1_SetInterruptHandler
  7173 ;; This function is called by:
  7174 ;;		_main
  7175 ;; This function uses a reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text4
  7179  01D8F2                     __ptext4:
  7180                           	opt callstack 0
  7181  01D8F2                     _start_switch_handler:
  7182                           	opt callstack 14
  7183                           
  7184                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7185                           
  7186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7187                           ;incstack = 0
  7188  01D8F2  0139               	movlb	57	; () banked
  7189  01D8F4  9195               	bcf	149,0,b	;volatile
  7190                           
  7191                           ; BSR set to: 57
  7192                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7193  01D8F6  0E78               	movlw	low _switch_handler
  7194  01D8F8  6EE6               	movwf	postinc1,c
  7195  01D8FA  0EA5               	movlw	high _switch_handler
  7196  01D8FC  6EE6               	movwf	postinc1,c
  7197  01D8FE  0E01               	movlw	low (_switch_handler shr (0+16))
  7198  01D900  6EE6               	movwf	postinc1,c
  7199  01D902  EC4D  F0EB         	call	_INT1_SetInterruptHandler	;wreg free
  7200                           
  7201                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7202  01D906  0E02               	movlw	2
  7203  01D908  0101               	movlb	1	; () banked
  7204  01D90A  6FD1               	movwf	(_S+35)& (0+255),b	;volatile
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7208  01D90C  0139               	movlb	57	; () banked
  7209  01D90E  8195               	bsf	149,0,b	;volatile
  7210                           
  7211                           ; BSR set to: 57
  7212                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7213  01D910  0012               	return		;funcret
  7214  01D912                     __end_of_start_switch_handler:
  7215                           	opt callstack 0
  7216                           
  7217 ;; *************** function _srand *****************
  7218 ;; Defined at:
  7219 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  s               2  [STACK] unsigned int 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1  [STACK] void 
  7226 ;; Registers used:
  7227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 3F/1
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7237 ;;Total ram usage:        0 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:   15
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_main
  7244 ;; This function uses a reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text5
  7248  01D286                     __ptext5:
  7249                           	opt callstack 0
  7250  01D286                     _srand:
  7251                           	opt callstack 15
  7252                           
  7253                           ;stkvar	_s @ sp[(0)+-2]
  7254                           
  7255                           ; BSR set to: 57
  7256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7257                           ;incstack = 0
  7258  01D286  0EFE               	movlw	-2
  7259  01D288  50E3               	movf	plusw1,w,c
  7260  01D28A  0FFF               	addlw	255
  7261  01D28C  6E0B               	movwf	(btemp+10)^0,c
  7262  01D28E  0EFF               	movlw	-1
  7263  01D290  006F FF8C  F00C    	movff	plusw1,btemp+11
  7264  01D296  0EFF               	movlw	255
  7265  01D298  220C               	addwfc	(btemp+11)^0,f,c
  7266  01D29A  0060  F02C  F1F1   	movff	btemp+10,_seed
  7267  01D2A0  0060  F030  F1F2   	movff	btemp+11,_seed+1
  7268  01D2A6  0101               	movlb	1	; () banked
  7269  01D2A8  6BF3               	clrf	(_seed+2)& (0+255),b
  7270  01D2AA  6BF4               	clrf	(_seed+3)& (0+255),b
  7271  01D2AC  6BF5               	clrf	(_seed+4)& (0+255),b
  7272  01D2AE  6BF6               	clrf	(_seed+5)& (0+255),b
  7273  01D2B0  6BF7               	clrf	(_seed+6)& (0+255),b
  7274  01D2B2  6BF8               	clrf	(_seed+7)& (0+255),b
  7275                           
  7276                           ; BSR set to: 1
  7277                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7278  01D2B4  52E5               	movf	postdec1,f,c
  7279  01D2B6  52E5               	movf	postdec1,f,c
  7280  01D2B8  0012               	return		;funcret
  7281  01D2BA                     __end_of_srand:
  7282                           	opt callstack 0
  7283                           
  7284 ;; *************** function _set_dac_b *****************
  7285 ;; Defined at:
  7286 ;;		line 306 in file "daq.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  voltage         4  [STACK] const float 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2  [STACK] unsigned short 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7304 ;;Total ram usage:        0 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:   17
  7307 ;; This function calls:
  7308 ;;		_convert_dac_raw
  7309 ;; This function is called by:
  7310 ;;		_main
  7311 ;; This function uses a reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text6
  7315  01D2BA                     __ptext6:
  7316                           	opt callstack 0
  7317  01D2BA                     _set_dac_b:
  7318                           	opt callstack 13
  7319                           
  7320                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7321                           ;stkvar	_voltage @ sp[(0)+-4]
  7322                           
  7323                           ; BSR set to: 1
  7324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7325                           ;incstack = 0
  7326  01D2BA  0EFC               	movlw	-4
  7327  01D2BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7328  01D2C2  006F FF8F FFE6     	movff	plusw1,postinc1
  7329  01D2C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7330  01D2CE  006F FF8F FFE6     	movff	plusw1,postinc1
  7331  01D2D4  ECB7  F0D5         	call	_convert_dac_raw	;wreg free
  7332  01D2D8  0060  F004  F129   	movff	btemp,_R+34	;volatile
  7333  01D2DE  0060  F008  F12A   	movff	btemp+1,_R+35	;volatile
  7334                           
  7335                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7336                           
  7337                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7338  01D2E4  52E5               	movf	postdec1,f,c
  7339  01D2E6  52E5               	movf	postdec1,f,c
  7340  01D2E8  52E5               	movf	postdec1,f,c
  7341  01D2EA  52E5               	movf	postdec1,f,c
  7342  01D2EC  0012               	return		;funcret
  7343  01D2EE                     __end_of_set_dac_b:
  7344                           	opt callstack 0
  7345                           
  7346 ;; *************** function _set_dac_a *****************
  7347 ;; Defined at:
  7348 ;;		line 297 in file "daq.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  voltage         4  [STACK] const float 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;		None
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2  [STACK] unsigned short 
  7355 ;; Registers used:
  7356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7357 ;; Tracked objects:
  7358 ;;		On entry : 3F/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7366 ;;Total ram usage:        0 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:   17
  7369 ;; This function calls:
  7370 ;;		_convert_dac_raw
  7371 ;; This function is called by:
  7372 ;;		_main
  7373 ;; This function uses a reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text7
  7377  01D2EE                     __ptext7:
  7378                           	opt callstack 0
  7379  01D2EE                     _set_dac_a:
  7380                           	opt callstack 13
  7381                           
  7382                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7383                           ;stkvar	_voltage @ sp[(0)+-4]
  7384                           
  7385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7386                           ;incstack = 0
  7387  01D2EE  0EFC               	movlw	-4
  7388  01D2F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7389  01D2F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7390  01D2FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7391  01D302  006F FF8F FFE6     	movff	plusw1,postinc1
  7392  01D308  ECB7  F0D5         	call	_convert_dac_raw	;wreg free
  7393  01D30C  0060  F004  F127   	movff	btemp,_R+32	;volatile
  7394  01D312  0060  F008  F128   	movff	btemp+1,_R+33	;volatile
  7395                           
  7396                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7397                           
  7398                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7399  01D318  52E5               	movf	postdec1,f,c
  7400  01D31A  52E5               	movf	postdec1,f,c
  7401  01D31C  52E5               	movf	postdec1,f,c
  7402  01D31E  52E5               	movf	postdec1,f,c
  7403  01D320  0012               	return		;funcret
  7404  01D322                     __end_of_set_dac_a:
  7405                           	opt callstack 0
  7406                           
  7407 ;; *************** function _convert_dac_raw *****************
  7408 ;; Defined at:
  7409 ;;		line 279 in file "daq.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  voltage         4  [STACK] float 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  2  [STACK] unsigned short 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7427 ;;Total ram usage:        0 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:   16
  7430 ;; This function calls:
  7431 ;;		___fldiv
  7432 ;;		___flge
  7433 ;;		___fltol
  7434 ;; This function is called by:
  7435 ;;		_set_dac_a
  7436 ;;		_set_dac_b
  7437 ;; This function uses a reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text8
  7441  01AB6E                     __ptext8:
  7442                           	opt callstack 0
  7443  01AB6E                     _convert_dac_raw:
  7444                           	opt callstack 13
  7445                           
  7446                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  7447                           
  7448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7449                           ;incstack = 0
  7450  01AB6E  0E6F               	movlw	111
  7451  01AB70  6EE6               	movwf	postinc1,c
  7452  01AB72  0E12               	movlw	18
  7453  01AB74  6EE6               	movwf	postinc1,c
  7454  01AB76  0E83               	movlw	131
  7455  01AB78  6EE6               	movwf	postinc1,c
  7456  01AB7A  0E3A               	movlw	58
  7457  01AB7C  6EE6               	movwf	postinc1,c
  7458                           
  7459                           ;stkvar	_voltage @ sp[(-4)+-4]
  7460  01AB7E  0EF8               	movlw	-8
  7461  01AB80  006F FF8F FFE6     	movff	plusw1,postinc1
  7462  01AB86  006F FF8F FFE6     	movff	plusw1,postinc1
  7463  01AB8C  006F FF8F FFE6     	movff	plusw1,postinc1
  7464  01AB92  006F FF8F FFE6     	movff	plusw1,postinc1
  7465  01AB98  EC07  F0D0         	call	___flge	;wreg free
  7466  01AB9C  B001               	btfsc	btemp& (0+255),0,c
  7467  01AB9E  D018               	goto	l11695
  7468                           
  7469                           ;daq.c: 285:   voltage = 0.001;
  7470  01ABA0  0E6F               	movlw	111
  7471  01ABA2  6E09               	movwf	(btemp+8)^0,c
  7472  01ABA4  0E12               	movlw	18
  7473  01ABA6  6E0A               	movwf	(btemp+9)^0,c
  7474  01ABA8  0E83               	movlw	131
  7475  01ABAA  6E0B               	movwf	(btemp+10)^0,c
  7476  01ABAC  0E3A               	movlw	58
  7477  01ABAE  6E0C               	movwf	(btemp+11)^0,c
  7478                           
  7479                           ;stkvar	_voltage @ sp[(0)+-4]
  7480  01ABB0  0EFC               	movlw	-4
  7481  01ABB2  0060  F027  FFE3   	movff	btemp+8,plusw1
  7482  01ABB8  0EFD               	movlw	-3
  7483  01ABBA  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7484  01ABC0  0EFE               	movlw	-2
  7485  01ABC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7486  01ABC8  0EFF               	movlw	-1
  7487  01ABCA  0060  F033  FFE3   	movff	btemp+11,plusw1
  7488  01ABD0                     l11695:
  7489                           
  7490                           ;daq.c: 286:  if (voltage > 10.0)
  7491                           ;stkvar	_voltage @ sp[(0)+-4]
  7492  01ABD0  0EFC               	movlw	-4
  7493  01ABD2  006F FF8F FFE6     	movff	plusw1,postinc1
  7494  01ABD8  006F FF8F FFE6     	movff	plusw1,postinc1
  7495  01ABDE  006F FF8F FFE6     	movff	plusw1,postinc1
  7496  01ABE4  006F FF8F FFE6     	movff	plusw1,postinc1
  7497  01ABEA  0E00               	movlw	0
  7498  01ABEC  6EE6               	movwf	postinc1,c
  7499  01ABEE  0E00               	movlw	0
  7500  01ABF0  6EE6               	movwf	postinc1,c
  7501  01ABF2  0E20               	movlw	32
  7502  01ABF4  6EE6               	movwf	postinc1,c
  7503  01ABF6  0E41               	movlw	65
  7504  01ABF8  6EE6               	movwf	postinc1,c
  7505  01ABFA  EC07  F0D0         	call	___flge	;wreg free
  7506  01ABFE  B001               	btfsc	btemp& (0+255),0,c
  7507  01AC00  D018               	goto	l11699
  7508                           
  7509                           ;daq.c: 287:   voltage = 10.0;
  7510  01AC02  0E00               	movlw	0
  7511  01AC04  6E09               	movwf	(btemp+8)^0,c
  7512  01AC06  0E00               	movlw	0
  7513  01AC08  6E0A               	movwf	(btemp+9)^0,c
  7514  01AC0A  0E20               	movlw	32
  7515  01AC0C  6E0B               	movwf	(btemp+10)^0,c
  7516  01AC0E  0E41               	movlw	65
  7517  01AC10  6E0C               	movwf	(btemp+11)^0,c
  7518                           
  7519                           ;stkvar	_voltage @ sp[(0)+-4]
  7520  01AC12  0EFC               	movlw	-4
  7521  01AC14  0060  F027  FFE3   	movff	btemp+8,plusw1
  7522  01AC1A  0EFD               	movlw	-3
  7523  01AC1C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7524  01AC22  0EFE               	movlw	-2
  7525  01AC24  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7526  01AC2A  0EFF               	movlw	-1
  7527  01AC2C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7528  01AC32                     l11699:
  7529                           
  7530                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  7531  01AC32  0EF6               	movlw	246
  7532  01AC34  6EE6               	movwf	postinc1,c
  7533  01AC36  0E09               	movlw	9
  7534  01AC38  6EE6               	movwf	postinc1,c
  7535  01AC3A  0E20               	movlw	32
  7536  01AC3C  6EE6               	movwf	postinc1,c
  7537  01AC3E  0E3B               	movlw	59
  7538  01AC40  6EE6               	movwf	postinc1,c
  7539                           
  7540                           ;stkvar	_voltage @ sp[(-4)+-4]
  7541  01AC42  0EF8               	movlw	-8
  7542  01AC44  006F FF8F FFE6     	movff	plusw1,postinc1
  7543  01AC4A  006F FF8F FFE6     	movff	plusw1,postinc1
  7544  01AC50  006F FF8F FFE6     	movff	plusw1,postinc1
  7545  01AC56  006F FF8F FFE6     	movff	plusw1,postinc1
  7546  01AC5C  EC45  F0AD         	call	___fldiv	;wreg free
  7547  01AC60  0060  F007  FFE6   	movff	btemp,postinc1
  7548  01AC66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7549  01AC6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7550  01AC72  0060  F013  FFE6   	movff	btemp+3,postinc1
  7551  01AC78  EC4E  F0CF         	call	___fltol	;wreg free
  7552                           
  7553                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7554  01AC7C  52E5               	movf	postdec1,f,c
  7555  01AC7E  52E5               	movf	postdec1,f,c
  7556  01AC80  52E5               	movf	postdec1,f,c
  7557  01AC82  52E5               	movf	postdec1,f,c
  7558  01AC84  0012               	return		;funcret
  7559  01AC86                     __end_of_convert_dac_raw:
  7560                           	opt callstack 0
  7561                           
  7562 ;; *************** function _set_dac *****************
  7563 ;; Defined at:
  7564 ;;		line 255 in file "daq.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1  [STACK] void 
  7571 ;; Registers used:
  7572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7582 ;;Total ram usage:        0 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:   16
  7585 ;; This function calls:
  7586 ;;		_SPI1_Exchange8bit
  7587 ;;		_dac_spi_control
  7588 ;; This function is called by:
  7589 ;;		_main
  7590 ;; This function uses a reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text9
  7594  01BABA                     __ptext9:
  7595                           	opt callstack 0
  7596  01BABA                     _set_dac:
  7597                           	opt callstack 14
  7598                           
  7599                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  7600                           
  7601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7602                           ;incstack = 0
  7603  01BABA  013D               	movlb	61	; () banked
  7604  01BABC  AB17               	btfss	23,5,b	;volatile
  7605  01BABE  D7FD               	goto	_set_dac
  7606                           
  7607                           ; BSR set to: 61
  7608                           
  7609                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  7610  01BAC0  84BC               	bsf	188,2,c	;volatile
  7611                           
  7612                           ; BSR set to: 61
  7613                           
  7614                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  7615  01BAC2  80BC               	bsf	188,0,c	;volatile
  7616                           
  7617                           ; BSR set to: 61
  7618                           ;daq.c: 260:  dac_spi_control(1);
  7619  01BAC4  0E01               	movlw	1
  7620  01BAC6  6EE6               	movwf	postinc1,c
  7621  01BAC8  ECC2  F0E2         	call	_dac_spi_control	;wreg free
  7622                           
  7623                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7624  01BACC  C127  F12B         	movff	_R+32,_R+36	;volatile
  7625                           
  7626                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7627  01BAD0  EE20  F127         	lfsr	2,_R+32	;volatile
  7628  01BAD4  006F FF78  F00B    	movff	postinc2,btemp+10
  7629  01BADA  006F FF74  F00C    	movff	postdec2,btemp+11
  7630  01BAE0  0060  F030  F00B   	movff	btemp+11,btemp+10
  7631  01BAE6  6A0C               	clrf	(btemp+11)^0,c
  7632  01BAE8  0E0F               	movlw	15
  7633  01BAEA  160B               	andwf	(btemp+10)^0,f,c
  7634  01BAEC  0101               	movlb	1	; () banked
  7635  01BAEE  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7636  01BAF0  180B               	xorwf	(btemp+10)^0,w,c
  7637  01BAF2  0BF0               	andlw	-16
  7638  01BAF4  180B               	xorwf	(btemp+10)^0,w,c
  7639  01BAF6  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7640                           
  7641                           ; BSR set to: 1
  7642                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  7643  01BAF8  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7644  01BAFA  0B0F               	andlw	-241
  7645  01BAFC  0940               	iorlw	64
  7646  01BAFE  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7647                           
  7648                           ; BSR set to: 1
  7649  01BB00  90BF               	bcf	191,0,c	;volatile
  7650                           
  7651                           ; BSR set to: 1
  7652                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7653  01BB02  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7654  01BB04  6EE6               	movwf	postinc1,c
  7655  01BB06  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7656                           
  7657                           ; BSR set to: 57
  7658                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7659  01BB0A  0101               	movlb	1	; () banked
  7660  01BB0C  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  7661  01BB0E  6EE6               	movwf	postinc1,c
  7662  01BB10  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7663                           
  7664                           ; BSR set to: 57
  7665  01BB14  80BF               	bsf	191,0,c	;volatile
  7666                           
  7667                           ; BSR set to: 57
  7668                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7669  01BB16  C129  F12B         	movff	_R+34,_R+36	;volatile
  7670                           
  7671                           ; BSR set to: 57
  7672                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7673  01BB1A  EE20  F129         	lfsr	2,_R+34	;volatile
  7674  01BB1E  006F FF78  F00B    	movff	postinc2,btemp+10
  7675  01BB24  006F FF74  F00C    	movff	postdec2,btemp+11
  7676  01BB2A  0060  F030  F00B   	movff	btemp+11,btemp+10
  7677  01BB30  6A0C               	clrf	(btemp+11)^0,c
  7678  01BB32  0E0F               	movlw	15
  7679  01BB34  160B               	andwf	(btemp+10)^0,f,c
  7680  01BB36  0101               	movlb	1	; () banked
  7681  01BB38  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7682  01BB3A  180B               	xorwf	(btemp+10)^0,w,c
  7683  01BB3C  0BF0               	andlw	-16
  7684  01BB3E  180B               	xorwf	(btemp+10)^0,w,c
  7685  01BB40  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7686                           
  7687                           ; BSR set to: 1
  7688                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  7689  01BB42  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7690  01BB44  0B0F               	andlw	-241
  7691  01BB46  0950               	iorlw	80
  7692  01BB48  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7693                           
  7694                           ; BSR set to: 1
  7695  01BB4A  90BF               	bcf	191,0,c	;volatile
  7696                           
  7697                           ; BSR set to: 1
  7698                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7699  01BB4C  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7700  01BB4E  6EE6               	movwf	postinc1,c
  7701  01BB50  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7702                           
  7703                           ; BSR set to: 57
  7704                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7705  01BB54  0101               	movlb	1	; () banked
  7706  01BB56  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  7707  01BB58  6EE6               	movwf	postinc1,c
  7708  01BB5A  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7709  01BB5E                     l2017:
  7710  01BB5E  013D               	movlb	61	; () banked
  7711  01BB60  AB17               	btfss	23,5,b	;volatile
  7712  01BB62  D7FD               	goto	l2017
  7713                           
  7714                           ; BSR set to: 61
  7715                           
  7716                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  7717  01BB64  80BF               	bsf	191,0,c	;volatile
  7718                           
  7719                           ; BSR set to: 61
  7720                           ;daq.c: 276:  dac_spi_control(0);
  7721  01BB66  0E00               	movlw	0
  7722  01BB68  6EE6               	movwf	postinc1,c
  7723  01BB6A  ECC2  F0E2         	call	_dac_spi_control	;wreg free
  7724                           
  7725                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7726  01BB6E  0012               	return		;funcret
  7727  01BB70                     __end_of_set_dac:
  7728                           	opt callstack 0
  7729                           
  7730 ;; *************** function _dac_spi_control *****************
  7731 ;; Defined at:
  7732 ;;		line 207 in file "daq.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  set             1  [STACK] _Bool 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;		None
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1  [STACK] void 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr1l, fsr1h, status,2
  7741 ;; Tracked objects:
  7742 ;;		On entry : 3F/3D
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7750 ;;Total ram usage:        0 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:   15
  7753 ;; This function calls:
  7754 ;;		Nothing
  7755 ;; This function is called by:
  7756 ;;		_set_dac
  7757 ;; This function uses a reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text10
  7761  01C584                     __ptext10:
  7762                           	opt callstack 0
  7763  01C584                     _dac_spi_control:
  7764                           	opt callstack 14
  7765                           
  7766                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  7767                           ;stkvar	_set @ sp[(0)+-1]
  7768                           
  7769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7770                           ;incstack = 0
  7771  01C584  0EFF               	movlw	-1
  7772  01C586  50E3               	movf	plusw1,w,c
  7773  01C588  B4D8               	btfsc	status,2,c
  7774  01C58A  D022               	goto	l11687
  7775                           
  7776                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  7777  01C58C  013D               	movlb	61	; () banked
  7778  01C58E  9F14               	bcf	20,7,b	;volatile
  7779                           
  7780                           ; BSR set to: 61
  7781                           ;daq.c: 214:   if (!init) {
  7782  01C590  5043               	movf	dac_spi_control@init^0,w,c
  7783  01C592  A4D8               	btfss	status,2,c
  7784  01C594  D011               	goto	l11675
  7785                           
  7786                           ; BSR set to: 61
  7787                           ;daq.c: 215:    init = 1;
  7788  01C596  0E01               	movlw	1
  7789  01C598  6E43               	movwf	dac_spi_control@init^0,c
  7790                           
  7791                           ; BSR set to: 61
  7792                           ;daq.c: 216:    S0 = SPI1CON0;
  7793  01C59A  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7794                           
  7795                           ; BSR set to: 61
  7796                           ;daq.c: 217:    S1 = SPI1CON1;
  7797  01C5A0  006F F454  F0CE    	movff	15637,dac_spi_control@S1	;volatile
  7798                           
  7799                           ; BSR set to: 61
  7800                           ;daq.c: 218:    S2 = SPI1CON2;
  7801  01C5A6  006F F458  F0CD    	movff	15638,dac_spi_control@S2	;volatile
  7802                           
  7803                           ; BSR set to: 61
  7804                           ;daq.c: 219:    SC = SPI1CLK;
  7805  01C5AC  006F F470  F0CC    	movff	15644,dac_spi_control@SC	;volatile
  7806                           
  7807                           ; BSR set to: 61
  7808                           ;daq.c: 220:    SB = SPI1BAUD;
  7809  01C5B2  006F F464  F0CB    	movff	15641,dac_spi_control@SB	;volatile
  7810  01C5B8                     l11675:
  7811                           
  7812                           ; BSR set to: 61
  7813                           ;daq.c: 226:   SPI1CON1 = 0x00;
  7814  01C5B8  6B15               	clrf	21,b	;volatile
  7815                           
  7816                           ; BSR set to: 61
  7817                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  7818  01C5BA  8D15               	bsf	21,6,b	;volatile
  7819                           
  7820                           ; BSR set to: 61
  7821                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  7822  01C5BC  9B15               	bcf	21,5,b	;volatile
  7823                           
  7824                           ; BSR set to: 61
  7825                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  7826  01C5BE  9F15               	bcf	21,7,b	;volatile
  7827                           
  7828                           ;daq.c: 231:   SPI1CON2 = 0x03;
  7829  01C5C0  0E03               	movlw	3
  7830  01C5C2  6F16               	movwf	22,b	;volatile
  7831                           
  7832                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  7833  01C5C4  0E0F               	movlw	15
  7834  01C5C6  6F19               	movwf	25,b	;volatile
  7835                           
  7836                           ; BSR set to: 61
  7837                           ;daq.c: 235:   SPI1CLK = 0x00;
  7838  01C5C8  6B1C               	clrf	28,b	;volatile
  7839                           
  7840                           ;daq.c: 237:   SPI1CON0 = 0x83;
  7841  01C5CA  0E83               	movlw	131
  7842  01C5CC  6F14               	movwf	20,b	;volatile
  7843  01C5CE  D014               	goto	L3
  7844  01C5D0                     l11687:
  7845                           
  7846                           ;daq.c: 240:   if (init) {
  7847  01C5D0  5043               	movf	dac_spi_control@init^0,w,c
  7848  01C5D2  B4D8               	btfsc	status,2,c
  7849  01C5D4  D012               	goto	l2001
  7850                           
  7851                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  7852  01C5D6  013D               	movlb	61	; () banked
  7853  01C5D8  9F14               	bcf	20,7,b	;volatile
  7854                           
  7855                           ;daq.c: 245:    SPI1CON1 = S1;
  7856  01C5DA  0060  F33B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7857                           
  7858                           ;daq.c: 246:    SPI1CON2 = S2;
  7859  01C5E0  0060  F337  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7860                           
  7861                           ;daq.c: 247:    SPI1CLK = SC;
  7862  01C5E6  0060  F333  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7863                           
  7864                           ;daq.c: 248:    SPI1BAUD = SB;
  7865  01C5EC  0060  F32F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7866                           
  7867                           ;daq.c: 249:    SPI1CON0 = S0;
  7868  01C5F2  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7869  01C5F8                     L3:
  7870                           
  7871                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  7872  01C5F8  8F14               	bsf	20,7,b	;volatile
  7873  01C5FA                     l2001:
  7874                           
  7875                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7876  01C5FA  52E5               	movf	postdec1,f,c
  7877  01C5FC  0012               	return		;funcret
  7878  01C5FE                     __end_of_dac_spi_control:
  7879                           	opt callstack 0
  7880                           
  7881 ;; *************** function _read_cal_data *****************
  7882 ;; Defined at:
  7883 ;;		line 368 in file "daq.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  x               2  [STACK] unsigned short 
  7888 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7889 ;;		 -> r_cal(167), 
  7890 ;;  y               2  [STACK] unsigned short 
  7891 ;;  crcVal_save     1  [STACK] unsigned char 
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1  [STACK] _Bool 
  7894 ;; Registers used:
  7895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/39
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7905 ;;Total ram usage:        0 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:   17
  7908 ;; This function calls:
  7909 ;;		_CRC_8BitDataWrite
  7910 ;;		_CRC_CalculatedResultGet
  7911 ;;		_CRC_Initialize
  7912 ;;		_CRC_IsBusy
  7913 ;;		_CRC_Start
  7914 ;;		_DATAEE_ReadByte
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;; This function uses a reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text11
  7921  019368                     __ptext11:
  7922                           	opt callstack 0
  7923  019368                     _read_cal_data:
  7924                           	opt callstack 0
  7925                           
  7926                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7927  019368  0E07               	movlw	7
  7928  01936A  26E1               	addwf	fsr1l,f,c
  7929  01936C  0E00               	movlw	0
  7930  01936E  22E2               	addwfc	fsr1h,f,c
  7931                           
  7932                           ;daq.c: 370:  uint16_t x = 0, y;
  7933                           ;stkvar	_x @ sp[(-7)+0]
  7934                           
  7935                           ;incstack = 0
  7936  019370  0EF9               	movlw	-7
  7937  019372  6AE3               	clrf	plusw1,c
  7938  019374  0EFA               	movlw	-6
  7939  019376  6AE3               	clrf	plusw1,c
  7940                           
  7941                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  7942  019378  0EA7               	movlw	167
  7943  01937A  6E0B               	movwf	(btemp+10)^0,c
  7944  01937C  0E00               	movlw	0
  7945  01937E  6E0C               	movwf	(btemp+11)^0,c
  7946                           
  7947                           ;stkvar	_y @ sp[(-7)+4]
  7948  019380  0EFD               	movlw	-3
  7949  019382  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7950  019388  0EFE               	movlw	-2
  7951  01938A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7952                           
  7953                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  7954                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7955  019390  0E04               	movlw	high _r_cal
  7956  019392  6E01               	movwf	btemp^0,c
  7957  019394  0EFC               	movlw	-4
  7958  019396  0060  F007  FFE3   	movff	btemp,plusw1
  7959  01939C  0E00               	movlw	low _r_cal
  7960  01939E  6E01               	movwf	btemp^0,c
  7961  0193A0  0EFB               	movlw	-5
  7962  0193A2  0060  F007  FFE3   	movff	btemp,plusw1
  7963                           
  7964                           ;daq.c: 376:  CRC_Initialize();
  7965  0193A8  EC30  F0E1         	call	_CRC_Initialize	;wreg free
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;daq.c: 379:  CRC_Start();
  7969  0193AC  ECD6  F0ED         	call	_CRC_Start	;wreg free
  7970  0193B0                     l12121:
  7971                           
  7972                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7973                           ;stkvar	_x @ sp[(-7)+0]
  7974  0193B0  0EF9               	movlw	-7
  7975  0193B2  006F FF8F FFE6     	movff	plusw1,postinc1
  7976  0193B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7977  0193BE  ECC5  F0E9         	call	_DATAEE_ReadByte	;wreg free
  7978                           
  7979                           ;stkvar	_x @ sp[(-7)+0]
  7980  0193C2  0EF9               	movlw	-7
  7981  0193C4  006F FF8C  F00B    	movff	plusw1,btemp+10
  7982  0193CA  0EFA               	movlw	-6
  7983  0193CC  006F FF8C  F00C    	movff	plusw1,btemp+11
  7984                           
  7985                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7986  0193D2  0EFB               	movlw	-5
  7987  0193D4  006F FF8C  F009    	movff	plusw1,btemp+8
  7988  0193DA  0EFC               	movlw	-4
  7989  0193DC  006F FF8C  F00A    	movff	plusw1,btemp+9
  7990  0193E2  500B               	movf	(btemp+10)^0,w,c
  7991  0193E4  2409               	addwf	(btemp+8)^0,w,c
  7992  0193E6  6ED9               	movwf	fsr2l,c
  7993  0193E8  500C               	movf	(btemp+11)^0,w,c
  7994  0193EA  200A               	addwfc	(btemp+9)^0,w,c
  7995  0193EC  6EDA               	movwf	fsr2h,c
  7996  0193EE  0060  F007  FFDF   	movff	btemp,indf2
  7997                           
  7998                           ;daq.c: 383:  } while (++x < y);
  7999                           ;stkvar	_y @ sp[(-7)+4]
  8000  0193F4  0EFD               	movlw	-3
  8001  0193F6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8002  0193FC  0EFE               	movlw	-2
  8003  0193FE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8004                           
  8005                           ;stkvar	_x @ sp[(-7)+0]
  8006  019404  0EF9               	movlw	-7
  8007  019406  50E3               	movf	plusw1,w,c
  8008  019408  0F01               	addlw	1
  8009  01940A  6E01               	movwf	btemp^0,c
  8010  01940C  0EF9               	movlw	-7
  8011  01940E  0060  F007  FFE3   	movff	btemp,plusw1
  8012  019414  6A01               	clrf	btemp^0,c
  8013  019416  0EFA               	movlw	-6
  8014  019418  50E3               	movf	plusw1,w,c
  8015  01941A  2001               	addwfc	btemp^0,w,c
  8016  01941C  6E01               	movwf	btemp^0,c
  8017  01941E  0EFA               	movlw	-6
  8018  019420  0060  F007  FFE3   	movff	btemp,plusw1
  8019  019426  0EF9               	movlw	-7
  8020  019428  006F FF8C  F009    	movff	plusw1,btemp+8
  8021  01942E  0EFA               	movlw	-6
  8022  019430  006F FF8C  F00A    	movff	plusw1,btemp+9
  8023  019436  500B               	movf	(btemp+10)^0,w,c
  8024  019438  5C09               	subwf	(btemp+8)^0,w,c
  8025  01943A  500C               	movf	(btemp+11)^0,w,c
  8026  01943C  580A               	subwfb	(btemp+9)^0,w,c
  8027  01943E  A0D8               	btfss	status,0,c
  8028  019440  D7B7               	goto	l12121
  8029                           
  8030                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  8031                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8032  019442  0EFF               	movlw	-1
  8033  019444  0061  F29B  FFE3   	movff	_r_cal+166,plusw1
  8034                           
  8035                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  8036  01944A  0E57               	movlw	87
  8037  01944C  0104               	movlb	4	; () banked
  8038  01944E  19A4               	xorwf	(_r_cal+164)& (0+255),w,b
  8039  019450  E163               	bnz	l12141
  8040  019452  0E19               	movlw	25
  8041  019454  19A5               	xorwf	(_r_cal+165)& (0+255),w,b
  8042  019456  A4D8               	btfss	status,2,c
  8043  019458  D05F               	goto	u11190
  8044                           
  8045                           ; BSR set to: 4
  8046                           ;daq.c: 387:   r_cal.crc = 0x42;
  8047  01945A  0E42               	movlw	66
  8048  01945C  6FA6               	movwf	(_r_cal+166)& (0+255),b
  8049                           
  8050                           ; BSR set to: 4
  8051                           ;daq.c: 388:   x = 0;
  8052                           ;stkvar	_x @ sp[(-7)+0]
  8053  01945E  0EF9               	movlw	-7
  8054  019460  6AE3               	clrf	plusw1,c
  8055  019462  0EFA               	movlw	-6
  8056  019464  6AE3               	clrf	plusw1,c
  8057  019466                     l12133:
  8058                           
  8059                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8060                           ;stkvar	_x @ sp[(-7)+0]
  8061  019466  0EF9               	movlw	-7
  8062  019468  006F FF8C  F00B    	movff	plusw1,btemp+10
  8063  01946E  0EFA               	movlw	-6
  8064  019470  006F FF8C  F00C    	movff	plusw1,btemp+11
  8065                           
  8066                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8067  019476  0EFB               	movlw	-5
  8068  019478  006F FF8C  F009    	movff	plusw1,btemp+8
  8069  01947E  0EFC               	movlw	-4
  8070  019480  006F FF8C  F00A    	movff	plusw1,btemp+9
  8071  019486  500B               	movf	(btemp+10)^0,w,c
  8072  019488  2409               	addwf	(btemp+8)^0,w,c
  8073  01948A  6ED9               	movwf	fsr2l,c
  8074  01948C  500C               	movf	(btemp+11)^0,w,c
  8075  01948E  200A               	addwfc	(btemp+9)^0,w,c
  8076  019490  6EDA               	movwf	fsr2h,c
  8077  019492  50DF               	movf	indf2,w,c
  8078  019494  6EE6               	movwf	postinc1,c
  8079  019496  EC42  F0ED         	call	_CRC_8BitDataWrite	;wreg free
  8080  01949A                     l12135:
  8081  01949A  EC64  F0ED         	call	_CRC_IsBusy	;wreg free
  8082  01949E  5001               	movf	btemp^0,w,c
  8083  0194A0  A4D8               	btfss	status,2,c
  8084  0194A2  D7FB               	goto	l12135
  8085                           
  8086                           ;daq.c: 393:   } while (++x < y);
  8087                           ;stkvar	_y @ sp[(-7)+4]
  8088  0194A4  0EFD               	movlw	-3
  8089  0194A6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8090  0194AC  0EFE               	movlw	-2
  8091  0194AE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8092                           
  8093                           ;stkvar	_x @ sp[(-7)+0]
  8094  0194B4  0EF9               	movlw	-7
  8095  0194B6  50E3               	movf	plusw1,w,c
  8096  0194B8  0F01               	addlw	1
  8097  0194BA  6E01               	movwf	btemp^0,c
  8098  0194BC  0EF9               	movlw	-7
  8099  0194BE  0060  F007  FFE3   	movff	btemp,plusw1
  8100  0194C4  6A01               	clrf	btemp^0,c
  8101  0194C6  0EFA               	movlw	-6
  8102  0194C8  50E3               	movf	plusw1,w,c
  8103  0194CA  2001               	addwfc	btemp^0,w,c
  8104  0194CC  6E01               	movwf	btemp^0,c
  8105  0194CE  0EFA               	movlw	-6
  8106  0194D0  0060  F007  FFE3   	movff	btemp,plusw1
  8107  0194D6  0EF9               	movlw	-7
  8108  0194D8  006F FF8C  F009    	movff	plusw1,btemp+8
  8109  0194DE  0EFA               	movlw	-6
  8110  0194E0  006F FF8C  F00A    	movff	plusw1,btemp+9
  8111  0194E6  500B               	movf	(btemp+10)^0,w,c
  8112  0194E8  5C09               	subwf	(btemp+8)^0,w,c
  8113  0194EA  500C               	movf	(btemp+11)^0,w,c
  8114  0194EC  580A               	subwfb	(btemp+9)^0,w,c
  8115  0194EE  A0D8               	btfss	status,0,c
  8116  0194F0  D7BA               	goto	l12133
  8117                           
  8118                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8119  0194F2  0E00               	movlw	0
  8120  0194F4  6EE6               	movwf	postinc1,c
  8121  0194F6  0E00               	movlw	0
  8122  0194F8  6EE6               	movwf	postinc1,c
  8123  0194FA  0E00               	movlw	0
  8124  0194FC  6EE6               	movwf	postinc1,c
  8125  0194FE  EC95  F0CE         	call	_CRC_CalculatedResultGet	;wreg free
  8126                           
  8127                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8128  019502  0EFF               	movlw	-1
  8129  019504  50E3               	movf	plusw1,w,c
  8130  019506  6E0B               	movwf	(btemp+10)^0,c
  8131  019508  6A0C               	clrf	(btemp+11)^0,c
  8132  01950A  500B               	movf	(btemp+10)^0,w,c
  8133  01950C  1801               	xorwf	btemp^0,w,c
  8134  01950E  E104               	bnz	u11190
  8135  019510  500C               	movf	(btemp+11)^0,w,c
  8136  019512  1802               	xorwf	(btemp+1)^0,w,c
  8137  019514  B4D8               	btfsc	status,2,c
  8138  019516  D002               	goto	l12149
  8139  019518                     u11190:
  8140  019518                     l12141:
  8141                           
  8142                           ;daq.c: 395:    return 0;
  8143  019518  0E00               	movlw	0
  8144  01951A  D005               	goto	L4
  8145  01951C                     l12149:
  8146                           
  8147                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8148                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8149  01951C  0EFF               	movlw	-1
  8150  01951E  006F FF8C  F4A6    	movff	plusw1,_r_cal+166
  8151                           
  8152                           ;daq.c: 400:  return 1;
  8153  019524  0E01               	movlw	1
  8154  019526                     L4:
  8155  019526  6E01               	movwf	btemp^0,c
  8156                           
  8157                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8158  019528  0EF9               	movlw	249
  8159  01952A  26E1               	addwf	fsr1l,f,c
  8160  01952C  0EFF               	movlw	255
  8161  01952E  22E2               	addwfc	fsr1h,f,c
  8162  019530  0012               	return		;funcret
  8163  019532                     __end_of_read_cal_data:
  8164                           	opt callstack 0
  8165                           
  8166 ;; *************** function _DATAEE_ReadByte *****************
  8167 ;; Defined at:
  8168 ;;		line 194 in file "mcc_generated_files/memory.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  bAdd            2  [STACK] unsigned short 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1  [STACK] unsigned char 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/39
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:   15
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_read_cal_data
  8193 ;; This function uses a reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text12
  8197  01D38A                     __ptext12:
  8198                           	opt callstack 0
  8199  01D38A                     _DATAEE_ReadByte:
  8200                           	opt callstack 14
  8201                           
  8202                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8203                           ;stkvar	_bAdd @ sp[(0)+-2]
  8204                           
  8205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8206                           ;incstack = 0
  8207  01D38A  0EFF               	movlw	255
  8208  01D38C  24E1               	addwf	fsr1l,w,c
  8209  01D38E  6ED9               	movwf	fsr2l,c
  8210  01D390  0EFF               	movlw	255
  8211  01D392  20E2               	addwfc	fsr1h,w,c
  8212  01D394  6EDA               	movwf	fsr2h,c
  8213  01D396  50DF               	movf	indf2,w,c
  8214  01D398  0B03               	andlw	3
  8215  01D39A  0139               	movlb	57	; () banked
  8216  01D39C  6FE1               	movwf	225,b	;volatile
  8217                           
  8218                           ; BSR set to: 57
  8219                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8220                           ;stkvar	_bAdd @ sp[(0)+-2]
  8221  01D39E  0EFE               	movlw	-2
  8222  01D3A0  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8223                           
  8224                           ; BSR set to: 57
  8225                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8226  01D3A6  0E3F               	movlw	-193
  8227  01D3A8  17E5               	andwf	229,f,b	;volsfr
  8228                           
  8229                           ; BSR set to: 57
  8230                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8231  01D3AA  81E5               	bsf	229,0,b	;volsfr
  8232                           
  8233                           ; BSR set to: 57
  8234                           ;mcc_generated_files/memory.c: 200:     __nop();
  8235  01D3AC  F000               	nop	
  8236                           
  8237                           ;mcc_generated_files/memory.c: 201:     __nop();
  8238  01D3AE  F000               	nop	
  8239                           
  8240                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8241  01D3B0  006E F78C  F001    	movff	14819,btemp	;volatile
  8242                           
  8243                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8244  01D3B6  52E5               	movf	postdec1,f,c
  8245  01D3B8  52E5               	movf	postdec1,f,c
  8246  01D3BA  0012               	return		;funcret
  8247  01D3BC                     __end_of_DATAEE_ReadByte:
  8248                           	opt callstack 0
  8249                           
  8250 ;; *************** function _init_port_dma *****************
  8251 ;; Defined at:
  8252 ;;		line 104 in file "eadog.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1  [STACK] void 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/2
  8263 ;;		On exit  : 3F/3B
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:   15
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_main
  8277 ;; This function uses a reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text13
  8281  01D3BC                     __ptext13:
  8282                           	opt callstack 0
  8283  01D3BC                     _init_port_dma:
  8284                           	opt callstack 15
  8285                           
  8286                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8287                           
  8288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8289                           ;incstack = 0
  8290  01D3BC  0E3F               	movlw	-193
  8291  01D3BE  013B               	movlb	59	; () banked
  8292  01D3C0  17DD               	andwf	221,f,b	;volatile
  8293                           
  8294                           ; BSR set to: 59
  8295                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8296  01D3C2  9BDD               	bcf	221,5,b	;volatile
  8297                           
  8298                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8299  01D3C4  51DD               	movf	221,w,b	;volatile
  8300  01D3C6  0BF9               	andlw	-7
  8301  01D3C8  0902               	iorlw	2
  8302  01D3CA  6FDD               	movwf	221,b	;volatile
  8303                           
  8304                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8305  01D3CC  0EE7               	movlw	-25
  8306  01D3CE  17DD               	andwf	221,f,b	;volatile
  8307                           
  8308                           ; BSR set to: 59
  8309                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8310  01D3D0  81DD               	bsf	221,0,b	;volatile
  8311                           
  8312                           ; BSR set to: 59
  8313                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8314  01D3D2  9DDC               	bcf	220,6,b	;volatile
  8315                           
  8316                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8317  01D3D4  0E3D               	movlw	61
  8318  01D3D6  6FD1               	movwf	209,b	;volatile
  8319  01D3D8  0EEA               	movlw	234
  8320  01D3DA  6FD0               	movwf	208,b	;volatile
  8321                           
  8322                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8323  01D3DC  0EFF               	movlw	low _port_data
  8324  01D3DE  6FD9               	movwf	217,b	;volatile
  8325  01D3E0  0E05               	movlw	high _port_data
  8326  01D3E2  6FDA               	movwf	218,b	;volatile
  8327  01D3E4  0E00               	movlw	low (_port_data shr (0+16))
  8328  01D3E6  6FDB               	movwf	219,b	;volatile
  8329                           
  8330                           ; BSR set to: 59
  8331                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8332  01D3E8  9BDC               	bcf	220,5,b	;volatile
  8333                           
  8334                           ; BSR set to: 59
  8335                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8336  01D3EA  0012               	return		;funcret
  8337  01D3EC                     __end_of_init_port_dma:
  8338                           	opt callstack 0
  8339                           
  8340 ;; *************** function _init_display *****************
  8341 ;; Defined at:
  8342 ;;		line 38 in file "eadog.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;		None
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;		None
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1  [STACK] void 
  8349 ;; Registers used:
  8350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8351 ;; Tracked objects:
  8352 ;;		On entry : 3F/3B
  8353 ;;		On exit  : 3F/3D
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;Total ram usage:        0 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:   17
  8363 ;; This function calls:
  8364 ;;		_ringBufS_init
  8365 ;;		_send_lcd_cmd
  8366 ;;		_send_lcd_cmd_long
  8367 ;;		_send_lcd_data
  8368 ;;		_wdtdelay
  8369 ;; This function is called by:
  8370 ;;		_main
  8371 ;; This function uses a reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text14
  8375  01B1DA                     __ptext14:
  8376                           	opt callstack 0
  8377  01B1DA                     _init_display:
  8378                           	opt callstack 13
  8379                           
  8380                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8381                           
  8382                           ; BSR set to: 59
  8383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8384                           ;incstack = 0
  8385  01B1DA  0EA4               	movlw	low _ring_buf1
  8386  01B1DC  0100               	movlb	0	; () banked
  8387  01B1DE  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8388  01B1E0  0E03               	movlw	high _ring_buf1
  8389  01B1E2  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8390                           
  8391                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8392  01B1E4  0EA7               	movlw	low _ring_buf2
  8393  01B1E6  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8394  01B1E8  0E04               	movlw	high _ring_buf2
  8395  01B1EA  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8399  01B1EC  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8400  01B1F2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8401  01B1F8  ECAD  F0EA         	call	_ringBufS_init	;wreg free
  8402                           
  8403                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8404  01B1FC  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  8405  01B202  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  8406  01B208  ECAD  F0EA         	call	_ringBufS_init	;wreg free
  8407                           
  8408                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8409  01B20C  84BE               	bsf	190,2,c	;volatile
  8410                           
  8411                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8412  01B20E  013D               	movlb	61	; () banked
  8413  01B210  9F14               	bcf	20,7,b	;volatile
  8414                           
  8415                           ; BSR set to: 61
  8416                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8417  01B212  0E20               	movlw	32
  8418  01B214  6F15               	movwf	21,b	;volatile
  8419                           
  8420                           ; BSR set to: 61
  8421                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8422  01B216  0E03               	movlw	3
  8423  01B218  6F16               	movwf	22,b	;volatile
  8424                           
  8425                           ; BSR set to: 61
  8426                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8427  01B21A  0E04               	movlw	4
  8428  01B21C  6F19               	movwf	25,b	;volatile
  8429                           
  8430                           ; BSR set to: 61
  8431                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8432  01B21E  0E02               	movlw	2
  8433  01B220  6F1C               	movwf	28,b	;volatile
  8434                           
  8435                           ; BSR set to: 61
  8436                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8437  01B222  0E83               	movlw	131
  8438  01B224  6F14               	movwf	20,b	;volatile
  8439                           
  8440                           ; BSR set to: 61
  8441                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8442  01B226  8F14               	bsf	20,7,b	;volatile
  8443                           
  8444                           ; BSR set to: 61
  8445                           ;eadog.c: 60:  wdtdelay(350000);
  8446  01B228  0E30               	movlw	48
  8447  01B22A  6EE6               	movwf	postinc1,c
  8448  01B22C  0E57               	movlw	87
  8449  01B22E  6EE6               	movwf	postinc1,c
  8450  01B230  0E05               	movlw	5
  8451  01B232  6EE6               	movwf	postinc1,c
  8452  01B234  0E00               	movlw	0
  8453  01B236  6EE6               	movwf	postinc1,c
  8454  01B238  EC69  F0E5         	call	_wdtdelay	;wreg free
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8458  01B23C  0E46               	movlw	70
  8459  01B23E  6EE6               	movwf	postinc1,c
  8460  01B240  ECF3  F0E7         	call	_send_lcd_cmd_long	;wreg free
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8464  01B244  0E41               	movlw	65
  8465  01B246  6EE6               	movwf	postinc1,c
  8466  01B248  EC13  F0E8         	call	_send_lcd_cmd	;wreg free
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;eadog.c: 63:  wdtdelay(80);
  8470  01B24C  0E50               	movlw	80
  8471  01B24E  6EE6               	movwf	postinc1,c
  8472  01B250  0E00               	movlw	0
  8473  01B252  6EE6               	movwf	postinc1,c
  8474  01B254  0E00               	movlw	0
  8475  01B256  6EE6               	movwf	postinc1,c
  8476  01B258  0E00               	movlw	0
  8477  01B25A  6EE6               	movwf	postinc1,c
  8478  01B25C  EC69  F0E5         	call	_wdtdelay	;wreg free
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8482  01B260  0E53               	movlw	83
  8483  01B262  6EE6               	movwf	postinc1,c
  8484  01B264  EC13  F0E8         	call	_send_lcd_cmd	;wreg free
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;eadog.c: 65:  send_lcd_data(2);
  8488  01B268  0E02               	movlw	2
  8489  01B26A  6EE6               	movwf	postinc1,c
  8490  01B26C  ECDA  F0EB         	call	_send_lcd_data	;wreg free
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;eadog.c: 66:  wdtdelay(80);
  8494  01B270  0E50               	movlw	80
  8495  01B272  6EE6               	movwf	postinc1,c
  8496  01B274  0E00               	movlw	0
  8497  01B276  6EE6               	movwf	postinc1,c
  8498  01B278  0E00               	movlw	0
  8499  01B27A  6EE6               	movwf	postinc1,c
  8500  01B27C  0E00               	movlw	0
  8501  01B27E  6EE6               	movwf	postinc1,c
  8502  01B280  EC69  F0E5         	call	_wdtdelay	;wreg free
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8506  01B284  0E51               	movlw	81
  8507  01B286  6EE6               	movwf	postinc1,c
  8508  01B288  ECF3  F0E7         	call	_send_lcd_cmd_long	;wreg free
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8512  01B28C  013D               	movlb	61	; () banked
  8513  01B28E  9F14               	bcf	20,7,b	;volatile
  8514                           
  8515                           ; BSR set to: 61
  8516                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8517  01B290  0E02               	movlw	2
  8518  01B292  6F16               	movwf	22,b	;volatile
  8519                           
  8520                           ; BSR set to: 61
  8521                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8522  01B294  8F14               	bsf	20,7,b	;volatile
  8523                           
  8524                           ; BSR set to: 61
  8525                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8526  01B296  931A               	bcf	26,1,b	;volatile
  8527                           
  8528                           ; BSR set to: 61
  8529                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8530  01B298  0E3F               	movlw	-193
  8531  01B29A  013B               	movlb	59	; () banked
  8532  01B29C  17FD               	andwf	253,f,b	;volatile
  8533                           
  8534                           ; BSR set to: 59
  8535                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8536  01B29E  9BFD               	bcf	253,5,b	;volatile
  8537                           
  8538                           ; BSR set to: 59
  8539                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8540  01B2A0  51FD               	movf	253,w,b	;volatile
  8541  01B2A2  0BF9               	andlw	-7
  8542  01B2A4  0902               	iorlw	2
  8543  01B2A6  6FFD               	movwf	253,b	;volatile
  8544                           
  8545                           ; BSR set to: 59
  8546                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8547  01B2A8  0EE7               	movlw	-25
  8548  01B2AA  17FD               	andwf	253,f,b	;volatile
  8549                           
  8550                           ; BSR set to: 59
  8551                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8552  01B2AC  81FD               	bsf	253,0,b	;volatile
  8553                           
  8554                           ; BSR set to: 59
  8555                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8556  01B2AE  0EA4               	movlw	low _ring_buf1
  8557  01B2B0  6FF9               	movwf	249,b	;volatile
  8558  01B2B2  0E03               	movlw	high _ring_buf1
  8559  01B2B4  6FFA               	movwf	250,b	;volatile
  8560  01B2B6  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8561  01B2B8  6FFB               	movwf	251,b	;volatile
  8562                           
  8563                           ; BSR set to: 59
  8564                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8565  01B2BA  9BFC               	bcf	252,5,b	;volatile
  8566                           
  8567                           ; BSR set to: 59
  8568                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8569  01B2BC  013D               	movlb	61	; () banked
  8570  01B2BE  831A               	bsf	26,1,b	;volatile
  8571                           
  8572                           ; BSR set to: 61
  8573                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8574  01B2C0  94BE               	bcf	190,2,c	;volatile
  8575                           
  8576                           ; BSR set to: 61
  8577                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8578  01B2C2  0012               	return		;funcret
  8579  01B2C4                     __end_of_init_display:
  8580                           	opt callstack 0
  8581                           
  8582 ;; *************** function _send_lcd_data *****************
  8583 ;; Defined at:
  8584 ;;		line 123 in file "eadog.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  data            1  [STACK] const unsigned char 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1  [STACK] void 
  8591 ;; Registers used:
  8592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8593 ;; Tracked objects:
  8594 ;;		On entry : 3F/0
  8595 ;;		On exit  : 3F/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8602 ;;Total ram usage:        0 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:   16
  8605 ;; This function calls:
  8606 ;;		_SPI1_Exchange8bit
  8607 ;;		_wdtdelay
  8608 ;; This function is called by:
  8609 ;;		_init_display
  8610 ;; This function uses a reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text15
  8614  01D7B4                     __ptext15:
  8615                           	opt callstack 0
  8616  01D7B4                     _send_lcd_data:
  8617                           	opt callstack 13
  8618                           
  8619                           ; BSR set to: 61
  8620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8621                           ;incstack = 0
  8622                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8623  01D7B4  94BC               	bcf	188,2,c	;volatile
  8624                           
  8625                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8626                           ;stkvar	_data @ sp[(0)+-1]
  8627  01D7B6  0EFF               	movlw	-1
  8628  01D7B8  50E3               	movf	plusw1,w,c
  8629  01D7BA  6EE6               	movwf	postinc1,c
  8630  01D7BC  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8631                           
  8632                           ; BSR set to: 57
  8633                           ;eadog.c: 127:  wdtdelay(8);
  8634  01D7C0  0E08               	movlw	8
  8635  01D7C2  6EE6               	movwf	postinc1,c
  8636  01D7C4  0E00               	movlw	0
  8637  01D7C6  6EE6               	movwf	postinc1,c
  8638  01D7C8  0E00               	movlw	0
  8639  01D7CA  6EE6               	movwf	postinc1,c
  8640  01D7CC  0E00               	movlw	0
  8641  01D7CE  6EE6               	movwf	postinc1,c
  8642  01D7D0  EC69  F0E5         	call	_wdtdelay	;wreg free
  8643                           
  8644                           ; BSR set to: 0
  8645                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8646  01D7D4  52E5               	movf	postdec1,f,c
  8647  01D7D6  0012               	return		;funcret
  8648  01D7D8                     __end_of_send_lcd_data:
  8649                           	opt callstack 0
  8650                           
  8651 ;; *************** function _send_lcd_cmd_long *****************
  8652 ;; Defined at:
  8653 ;;		line 139 in file "eadog.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;  cmd             1  [STACK] const unsigned char 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;		None
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  1  [STACK] void 
  8660 ;; Registers used:
  8661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8662 ;; Tracked objects:
  8663 ;;		On entry : 3F/0
  8664 ;;		On exit  : 3F/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8671 ;;Total ram usage:        0 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; Hardware stack levels required when called:   16
  8674 ;; This function calls:
  8675 ;;		_SPI1_Exchange8bit
  8676 ;;		_wdtdelay
  8677 ;; This function is called by:
  8678 ;;		_init_display
  8679 ;; This function uses a reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text16
  8683  01CFE6                     __ptext16:
  8684                           	opt callstack 0
  8685  01CFE6                     _send_lcd_cmd_long:
  8686                           	opt callstack 13
  8687                           
  8688                           ; BSR set to: 0
  8689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8690                           ;incstack = 0
  8691                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8692  01CFE6  94BC               	bcf	188,2,c	;volatile
  8693                           
  8694                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8695  01CFE8  0EFE               	movlw	254
  8696  01CFEA  6EE6               	movwf	postinc1,c
  8697  01CFEC  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8698                           
  8699                           ; BSR set to: 57
  8700                           ;eadog.c: 143:  wdtdelay(8);
  8701  01CFF0  0E08               	movlw	8
  8702  01CFF2  6EE6               	movwf	postinc1,c
  8703  01CFF4  0E00               	movlw	0
  8704  01CFF6  6EE6               	movwf	postinc1,c
  8705  01CFF8  0E00               	movlw	0
  8706  01CFFA  6EE6               	movwf	postinc1,c
  8707  01CFFC  0E00               	movlw	0
  8708  01CFFE  6EE6               	movwf	postinc1,c
  8709  01D000  EC69  F0E5         	call	_wdtdelay	;wreg free
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8713                           ;stkvar	_cmd @ sp[(0)+-1]
  8714  01D004  0EFF               	movlw	-1
  8715  01D006  50E3               	movf	plusw1,w,c
  8716  01D008  6EE6               	movwf	postinc1,c
  8717  01D00A  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8718                           
  8719                           ;eadog.c: 145:  wdtdelay(800);
  8720  01D00E  0E20               	movlw	32
  8721  01D010  6EE6               	movwf	postinc1,c
  8722  01D012  0E03               	movlw	3
  8723  01D014  6EE6               	movwf	postinc1,c
  8724  01D016  0E00               	movlw	0
  8725  01D018  6EE6               	movwf	postinc1,c
  8726  01D01A  0E00               	movlw	0
  8727  01D01C  6EE6               	movwf	postinc1,c
  8728  01D01E  EC69  F0E5         	call	_wdtdelay	;wreg free
  8729                           
  8730                           ; BSR set to: 0
  8731                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8732  01D022  52E5               	movf	postdec1,f,c
  8733  01D024  0012               	return		;funcret
  8734  01D026                     __end_of_send_lcd_cmd_long:
  8735                           	opt callstack 0
  8736                           
  8737 ;; *************** function _send_lcd_cmd *****************
  8738 ;; Defined at:
  8739 ;;		line 130 in file "eadog.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  cmd             1  [STACK] const unsigned char 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1  [STACK] void 
  8746 ;; Registers used:
  8747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8748 ;; Tracked objects:
  8749 ;;		On entry : 3F/0
  8750 ;;		On exit  : 3F/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8757 ;;Total ram usage:        0 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:   16
  8760 ;; This function calls:
  8761 ;;		_SPI1_Exchange8bit
  8762 ;;		_wdtdelay
  8763 ;; This function is called by:
  8764 ;;		_init_display
  8765 ;; This function uses a reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text17
  8769  01D026                     __ptext17:
  8770                           	opt callstack 0
  8771  01D026                     _send_lcd_cmd:
  8772                           	opt callstack 13
  8773                           
  8774                           ; BSR set to: 0
  8775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8776                           ;incstack = 0
  8777                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8778  01D026  94BC               	bcf	188,2,c	;volatile
  8779                           
  8780                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8781  01D028  0EFE               	movlw	254
  8782  01D02A  6EE6               	movwf	postinc1,c
  8783  01D02C  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8784                           
  8785                           ; BSR set to: 57
  8786                           ;eadog.c: 134:  wdtdelay(8);
  8787  01D030  0E08               	movlw	8
  8788  01D032  6EE6               	movwf	postinc1,c
  8789  01D034  0E00               	movlw	0
  8790  01D036  6EE6               	movwf	postinc1,c
  8791  01D038  0E00               	movlw	0
  8792  01D03A  6EE6               	movwf	postinc1,c
  8793  01D03C  0E00               	movlw	0
  8794  01D03E  6EE6               	movwf	postinc1,c
  8795  01D040  EC69  F0E5         	call	_wdtdelay	;wreg free
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8799                           ;stkvar	_cmd @ sp[(0)+-1]
  8800  01D044  0EFF               	movlw	-1
  8801  01D046  50E3               	movf	plusw1,w,c
  8802  01D048  6EE6               	movwf	postinc1,c
  8803  01D04A  EC99  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8804                           
  8805                           ;eadog.c: 136:  wdtdelay(8);
  8806  01D04E  0E08               	movlw	8
  8807  01D050  6EE6               	movwf	postinc1,c
  8808  01D052  0E00               	movlw	0
  8809  01D054  6EE6               	movwf	postinc1,c
  8810  01D056  0E00               	movlw	0
  8811  01D058  6EE6               	movwf	postinc1,c
  8812  01D05A  0E00               	movlw	0
  8813  01D05C  6EE6               	movwf	postinc1,c
  8814  01D05E  EC69  F0E5         	call	_wdtdelay	;wreg free
  8815                           
  8816                           ; BSR set to: 0
  8817                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8818  01D062  52E5               	movf	postdec1,f,c
  8819  01D064  0012               	return		;funcret
  8820  01D066                     __end_of_send_lcd_cmd:
  8821                           	opt callstack 0
  8822                           
  8823 ;; *************** function _SPI1_Exchange8bit *****************
  8824 ;; Defined at:
  8825 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  data            1  [STACK] unsigned char 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1  [STACK] unsigned char 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/1
  8836 ;;		On exit  : 3F/39
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:   15
  8846 ;; This function calls:
  8847 ;;		Nothing
  8848 ;; This function is called by:
  8849 ;;		_send_lcd_data
  8850 ;;		_send_lcd_cmd
  8851 ;;		_send_lcd_cmd_long
  8852 ;;		_set_dac
  8853 ;; This function uses a reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text18
  8857  01D932                     __ptext18:
  8858                           	opt callstack 0
  8859  01D932                     _SPI1_Exchange8bit:
  8860                           	opt callstack 14
  8861                           
  8862                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8863                           
  8864                           ; BSR set to: 0
  8865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8866                           ;incstack = 0
  8867  01D932  0E01               	movlw	1
  8868  01D934  013D               	movlb	61	; () banked
  8869  01D936  6F12               	movwf	18,b	;volatile
  8870                           
  8871                           ; BSR set to: 61
  8872                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8873                           ;stkvar	_data @ sp[(0)+-1]
  8874  01D938  0EFF               	movlw	-1
  8875  01D93A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8876  01D940                     l809:
  8877                           
  8878                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8879  01D940  0139               	movlb	57	; () banked
  8880  01D942  A9A2               	btfss	162,4,b	;volatile
  8881  01D944  D7FD               	goto	l809
  8882                           
  8883                           ; BSR set to: 57
  8884                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8885  01D946  006F F440  F001    	movff	15632,btemp	;volatile
  8886                           
  8887                           ; BSR set to: 57
  8888                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8889  01D94C  52E5               	movf	postdec1,f,c
  8890  01D94E  0012               	return		;funcret
  8891  01D950                     __end_of_SPI1_Exchange8bit:
  8892                           	opt callstack 0
  8893                           
  8894 ;; *************** function _ringBufS_init *****************
  8895 ;; Defined at:
  8896 ;;		line 22 in file "ringbufs.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  _this           2  [STACK] PTR volatile struct ring
  8899 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;		None
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1  [STACK] void 
  8904 ;; Registers used:
  8905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8915 ;;Total ram usage:        0 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:   16
  8918 ;; This function calls:
  8919 ;;		_memset
  8920 ;; This function is called by:
  8921 ;;		_init_display
  8922 ;; This function uses a reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text19
  8926  01D55A                     __ptext19:
  8927                           	opt callstack 0
  8928  01D55A                     _ringBufS_init:
  8929                           	opt callstack 13
  8930                           
  8931                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8932                           
  8933                           ; BSR set to: 57
  8934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8935                           ;incstack = 0
  8936  01D55A  0E43               	movlw	67
  8937  01D55C  6EE6               	movwf	postinc1,c
  8938  01D55E  0E00               	movlw	0
  8939  01D560  6EE6               	movwf	postinc1,c
  8940  01D562  0E00               	movlw	0
  8941  01D564  6EE6               	movwf	postinc1,c
  8942  01D566  0E00               	movlw	0
  8943  01D568  6EE6               	movwf	postinc1,c
  8944                           
  8945                           ;stkvar	__this @ sp[(-4)+-2]
  8946  01D56A  0EFA               	movlw	-6
  8947  01D56C  006F FF8F FFE6     	movff	plusw1,postinc1
  8948  01D572  006F FF8F FFE6     	movff	plusw1,postinc1
  8949  01D578  EC9B  F0BD         	call	_memset	;wreg free
  8950                           
  8951                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8952  01D57C  52E5               	movf	postdec1,f,c
  8953  01D57E  52E5               	movf	postdec1,f,c
  8954  01D580  0012               	return		;funcret
  8955  01D582                     __end_of_ringBufS_init:
  8956                           	opt callstack 0
  8957                           
  8958 ;; *************** function _init_bsoc *****************
  8959 ;; Defined at:
  8960 ;;		line 110 in file "bsoc.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;		None
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1  [STACK] void 
  8967 ;; Registers used:
  8968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/1
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8978 ;;Total ram usage:        0 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:   18
  8981 ;; This function calls:
  8982 ;;		_TMR3_SetInterruptHandler
  8983 ;;		_Volts_to_SOC
  8984 ;;		___fldiv
  8985 ;;		___flmul
  8986 ;;		___fltol
  8987 ;;		___xxtofl
  8988 ;;		_conv_raw_result
  8989 ;; This function is called by:
  8990 ;;		_main
  8991 ;; This function uses a reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text20
  8995  0188AC                     __ptext20:
  8996                           	opt callstack 0
  8997  0188AC                     _init_bsoc:
  8998                           	opt callstack 12
  8999                           
  9000                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9001                           
  9002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9003                           ;incstack = 0
  9004  0188AC  0E00               	movlw	0
  9005  0188AE  6EE6               	movwf	postinc1,c
  9006  0188B0  0E00               	movlw	0
  9007  0188B2  6EE6               	movwf	postinc1,c
  9008  0188B4  0E7A               	movlw	122
  9009  0188B6  6EE6               	movwf	postinc1,c
  9010  0188B8  0E44               	movlw	68
  9011  0188BA  6EE6               	movwf	postinc1,c
  9012  0188BC  0E00               	movlw	0
  9013  0188BE  6EE6               	movwf	postinc1,c
  9014  0188C0  0E04               	movlw	4
  9015  0188C2  6EE6               	movwf	postinc1,c
  9016  0188C4  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9017  0188C8  0060  F007  FFE6   	movff	btemp,postinc1
  9018  0188CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9019  0188D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9020  0188DA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9021  0188E0  EC4E  F0CF         	call	___fltol	;wreg free
  9022  0188E4  0060  F007  FFE6   	movff	btemp,postinc1
  9023  0188EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9024  0188F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9025  0188F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9026  0188FC  0E00               	movlw	0
  9027  0188FE  6EE6               	movwf	postinc1,c
  9028  018900  ECB2  F0C8         	call	___xxtofl	;wreg free
  9029  018904  0060  F007  FFE6   	movff	btemp,postinc1
  9030  01890A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9031  018910  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9032  018916  0060  F013  FFE6   	movff	btemp+3,postinc1
  9033  01891C  EC52  F0A5         	call	___flmul	;wreg free
  9034  018920  0060  F007  FFE6   	movff	btemp,postinc1
  9035  018926  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9036  01892C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9037  018932  0060  F013  FFE6   	movff	btemp+3,postinc1
  9038  018938  EC4E  F0CF         	call	___fltol	;wreg free
  9039  01893C  0060  F007  FFE6   	movff	btemp,postinc1
  9040  018942  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9041  018948  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9042  01894E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9043  018954  ECA4  F0DC         	call	_Volts_to_SOC	;wreg free
  9044  018958  0060  F004  F8B5   	movff	btemp,_C+182	;volatile
  9045  01895E  0060  F008  F8B6   	movff	btemp+1,_C+183	;volatile
  9046                           
  9047                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9048  018964  EE22  F08B         	lfsr	2,_C+140	;volatile
  9049  018968  006F FF7B FFE6     	movff	postinc2,postinc1
  9050  01896E  006F FF7B FFE6     	movff	postinc2,postinc1
  9051  018974  006F FF7B FFE6     	movff	postinc2,postinc1
  9052  01897A  006F FF7B FFE6     	movff	postinc2,postinc1
  9053  018980  0E00               	movlw	0
  9054  018982  6EE6               	movwf	postinc1,c
  9055  018984  0E00               	movlw	0
  9056  018986  6EE6               	movwf	postinc1,c
  9057  018988  0EC8               	movlw	200
  9058  01898A  6EE6               	movwf	postinc1,c
  9059  01898C  0E42               	movlw	66
  9060  01898E  6EE6               	movwf	postinc1,c
  9061  018990  0E00               	movlw	0
  9062  018992  6EE6               	movwf	postinc1,c
  9063  018994  0E00               	movlw	0
  9064  018996  6EE6               	movwf	postinc1,c
  9065  018998  0E7A               	movlw	122
  9066  01899A  6EE6               	movwf	postinc1,c
  9067  01899C  0E44               	movlw	68
  9068  01899E  6EE6               	movwf	postinc1,c
  9069  0189A0  0E00               	movlw	0
  9070  0189A2  6EE6               	movwf	postinc1,c
  9071  0189A4  0E04               	movlw	4
  9072  0189A6  6EE6               	movwf	postinc1,c
  9073  0189A8  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9074  0189AC  0060  F007  FFE6   	movff	btemp,postinc1
  9075  0189B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9076  0189B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9077  0189BE  0060  F013  FFE6   	movff	btemp+3,postinc1
  9078  0189C4  EC4E  F0CF         	call	___fltol	;wreg free
  9079  0189C8  0060  F007  FFE6   	movff	btemp,postinc1
  9080  0189CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9081  0189D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9082  0189DA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9083  0189E0  0E00               	movlw	0
  9084  0189E2  6EE6               	movwf	postinc1,c
  9085  0189E4  ECB2  F0C8         	call	___xxtofl	;wreg free
  9086  0189E8  0060  F007  FFE6   	movff	btemp,postinc1
  9087  0189EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9088  0189F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9089  0189FA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9090  018A00  EC52  F0A5         	call	___flmul	;wreg free
  9091  018A04  0060  F007  FFE6   	movff	btemp,postinc1
  9092  018A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9093  018A10  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9094  018A16  0060  F013  FFE6   	movff	btemp+3,postinc1
  9095  018A1C  EC4E  F0CF         	call	___fltol	;wreg free
  9096  018A20  0060  F007  FFE6   	movff	btemp,postinc1
  9097  018A26  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9098  018A2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9099  018A32  0060  F013  FFE6   	movff	btemp+3,postinc1
  9100  018A38  ECA4  F0DC         	call	_Volts_to_SOC	;wreg free
  9101  018A3C  0060  F004  F00B   	movff	btemp,btemp+10
  9102  018A42  0060  F008  F00C   	movff	btemp+1,btemp+11
  9103  018A48  500B               	movf	(btemp+10)^0,w,c
  9104  018A4A  6E05               	movwf	(btemp+4)^0,c
  9105  018A4C  500C               	movf	(btemp+11)^0,w,c
  9106  018A4E  6E06               	movwf	(btemp+5)^0,c
  9107  018A50  6A07               	clrf	(btemp+6)^0,c
  9108  018A52  6A08               	clrf	(btemp+7)^0,c
  9109  018A54  0060  F017  FFE6   	movff	btemp+4,postinc1
  9110  018A5A  0060  F01B  FFE6   	movff	btemp+5,postinc1
  9111  018A60  0060  F01F  FFE6   	movff	btemp+6,postinc1
  9112  018A66  0060  F023  FFE6   	movff	btemp+7,postinc1
  9113  018A6C  0E00               	movlw	0
  9114  018A6E  6EE6               	movwf	postinc1,c
  9115  018A70  ECB2  F0C8         	call	___xxtofl	;wreg free
  9116  018A74  0060  F007  FFE6   	movff	btemp,postinc1
  9117  018A7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9118  018A80  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9119  018A86  0060  F013  FFE6   	movff	btemp+3,postinc1
  9120  018A8C  EC45  F0AD         	call	___fldiv	;wreg free
  9121  018A90  0060  F007  FFE6   	movff	btemp,postinc1
  9122  018A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9123  018A9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9124  018AA2  0060  F013  FFE6   	movff	btemp+3,postinc1
  9125  018AA8  EC52  F0A5         	call	___flmul	;wreg free
  9126  018AAC  0060  F004  F88F   	movff	btemp,_C+144	;volatile
  9127  018AB2  0060  F008  F890   	movff	btemp+1,_C+145	;volatile
  9128  018AB8  0060  F00C  F891   	movff	btemp+2,_C+146	;volatile
  9129  018ABE  0060  F010  F892   	movff	btemp+3,_C+147	;volatile
  9130                           
  9131                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9132  018AC4  EE22  F08F         	lfsr	2,_C+144	;volatile
  9133  018AC8  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  9134  018ACE  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  9135  018AD4  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  9136  018ADA  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  9137                           
  9138                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9139  018AE0  0E36               	movlw	low _calc_bsoc
  9140  018AE2  6EE6               	movwf	postinc1,c
  9141  018AE4  0E40               	movlw	high _calc_bsoc
  9142  018AE6  6EE6               	movwf	postinc1,c
  9143  018AE8  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9144  018AEA  6EE6               	movwf	postinc1,c
  9145  018AEC  EC39  F0EB         	call	_TMR3_SetInterruptHandler	;wreg free
  9146                           
  9147                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9148  018AF0  0012               	return		;funcret
  9149  018AF2                     __end_of_init_bsoc:
  9150                           	opt callstack 0
  9151                           
  9152 ;; *************** function _Volts_to_SOC *****************
  9153 ;; Defined at:
  9154 ;;		line 175 in file "bsoc.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  cvoltage        4  [STACK] const unsigned long 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  soc             2  [STACK] unsigned short 
  9159 ;;  slot            1  [STACK] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2  [STACK] unsigned short 
  9162 ;; Registers used:
  9163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/1
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9173 ;;Total ram usage:        0 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:   15
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_init_bsoc
  9180 ;; This function uses a reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text21
  9184  01B948                     __ptext21:
  9185                           	opt callstack 0
  9186  01B948                     _Volts_to_SOC:
  9187                           	opt callstack 0
  9188                           
  9189                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9190  01B948  52E6               	movf	postinc1,f,c
  9191  01B94A  52E6               	movf	postinc1,f,c
  9192  01B94C  52E6               	movf	postinc1,f,c
  9193                           
  9194                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  9195                           ;stkvar	_soc @ sp[(-3)+0]
  9196                           
  9197                           ;incstack = 0
  9198  01B94E  0EFD               	movlw	-3
  9199  01B950  6AE3               	clrf	plusw1,c
  9200  01B952  0EFE               	movlw	-2
  9201  01B954  6AE3               	clrf	plusw1,c
  9202                           
  9203                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  9204                           ;stkvar	_slot @ sp[(-3)+2]
  9205  01B956  0EFF               	movlw	-1
  9206  01B958  6AE3               	clrf	plusw1,c
  9207  01B95A                     l11863:
  9208                           
  9209                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  9210                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  9211                           ;stkvar	_slot @ sp[(-3)+2]
  9212  01B95A  0EFF               	movlw	-1
  9213  01B95C  50E3               	movf	plusw1,w,c
  9214  01B95E  0D08               	mullw	8
  9215  01B960  0E7D               	movlw	low _BVSOC_TABLE
  9216  01B962  24F3               	addwf	243,w,c
  9217  01B964  6EF6               	movwf	tblptrl,c
  9218  01B966  0EF8               	movlw	high _BVSOC_TABLE
  9219  01B968  20F4               	addwfc	244,w,c
  9220  01B96A  6EF7               	movwf	tblptrh,c
  9221  01B96C                     	if	1	;There are 3 active tblptr bytes
  9222  01B96C  6AF8               	clrf	tblptru,c
  9223  01B96E  0E00               	movlw	low (__mediumconst shr (0+16))
  9224  01B970  22F8               	addwfc	tblptru,f,c
  9225  01B972                     	endif
  9226  01B972  0EF9               	movlw	-7
  9227  01B974  50E3               	movf	plusw1,w,c
  9228  01B976  0009               	tblrd		*+
  9229  01B978  5CF5               	subwf	tablat,w,c
  9230  01B97A  0EFA               	movlw	-6
  9231  01B97C  50E3               	movf	plusw1,w,c
  9232  01B97E  0009               	tblrd		*+
  9233  01B980  58F5               	subwfb	tablat,w,c
  9234  01B982  0EFB               	movlw	-5
  9235  01B984  50E3               	movf	plusw1,w,c
  9236  01B986  0009               	tblrd		*+
  9237  01B988  58F5               	subwfb	tablat,w,c
  9238  01B98A  0EFC               	movlw	-4
  9239  01B98C  50E3               	movf	plusw1,w,c
  9240  01B98E  0009               	tblrd		*+
  9241  01B990  58F5               	subwfb	tablat,w,c
  9242  01B992  B0D8               	btfsc	status,0,c
  9243  01B994  D020               	goto	l11867
  9244                           
  9245                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  9246                           ;stkvar	_slot @ sp[(-3)+2]
  9247  01B996  0EFF               	movlw	-1
  9248  01B998  50E3               	movf	plusw1,w,c
  9249  01B99A  0D08               	mullw	8
  9250  01B99C  0E04               	movlw	4
  9251  01B99E  26F3               	addwf	243,f,c
  9252  01B9A0  0E00               	movlw	0
  9253  01B9A2  22F4               	addwfc	244,f,c
  9254  01B9A4  0E7D               	movlw	low _BVSOC_TABLE
  9255  01B9A6  24F3               	addwf	243,w,c
  9256  01B9A8  6EF6               	movwf	tblptrl,c
  9257  01B9AA  0EF8               	movlw	high _BVSOC_TABLE
  9258  01B9AC  20F4               	addwfc	244,w,c
  9259  01B9AE  6EF7               	movwf	tblptrh,c
  9260  01B9B0                     	if	1	;There are 3 active tblptr bytes
  9261  01B9B0  6AF8               	clrf	tblptru,c
  9262  01B9B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9263  01B9B4  22F8               	addwfc	tblptru,f,c
  9264  01B9B6                     	endif
  9265  01B9B6  0009               	tblrd		*+
  9266  01B9B8  006F FFD4  F00B    	movff	tablat,btemp+10
  9267  01B9BE  0009               	tblrd		*+
  9268  01B9C0  006F FFD4  F00C    	movff	tablat,btemp+11
  9269                           
  9270                           ;stkvar	_soc @ sp[(-3)+0]
  9271  01B9C6  0EFD               	movlw	-3
  9272  01B9C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9273  01B9CE  0EFE               	movlw	-2
  9274  01B9D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  9275  01B9D6                     l11867:
  9276                           
  9277                           ;bsoc.c: 187:  }
  9278                           ;stkvar	_slot @ sp[(-3)+2]
  9279  01B9D6  0EFF               	movlw	-1
  9280  01B9D8  2AE3               	incf	plusw1,f,c
  9281                           
  9282                           ;stkvar	_slot @ sp[(-3)+2]
  9283  01B9DA  0EFF               	movlw	-1
  9284  01B9DC  006F FF8C  F001    	movff	plusw1,btemp
  9285  01B9E2  0E19               	movlw	25
  9286  01B9E4  6401               	cpfsgt	btemp^0,c
  9287  01B9E6  D7B9               	goto	l11863
  9288                           
  9289                           ;bsoc.c: 188:  return soc;
  9290                           ;stkvar	_soc @ sp[(-3)+0]
  9291  01B9E8  0EFD               	movlw	-3
  9292  01B9EA  006F FF8C  F001    	movff	plusw1,btemp
  9293  01B9F0  0EFE               	movlw	-2
  9294  01B9F2  006F FF8C  F002    	movff	plusw1,btemp+1
  9295                           
  9296                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9297  01B9F8  0EF9               	movlw	249
  9298  01B9FA  26E1               	addwf	fsr1l,f,c
  9299  01B9FC  0EFF               	movlw	255
  9300  01B9FE  22E2               	addwfc	fsr1h,f,c
  9301  01BA00  0012               	return		;funcret
  9302  01BA02                     __end_of_Volts_to_SOC:
  9303                           	opt callstack 0
  9304                           
  9305 ;; *************** function _hid_display *****************
  9306 ;; Defined at:
  9307 ;;		line 22 in file "hid.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  h               1  [STACK] PTR struct H_data
  9310 ;;		 -> H(9), 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1  [STACK] PTR struct H_data
  9315 ;; Registers used:
  9316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  9317 ;; Tracked objects:
  9318 ;;		On entry : 3F/39
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9326 ;;Total ram usage:        0 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:   17
  9329 ;; This function calls:
  9330 ;;		_hid_input
  9331 ;; This function is called by:
  9332 ;;		_main
  9333 ;; This function uses a reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text22
  9337  01AA4C                     __ptext22:
  9338                           	opt callstack 0
  9339  01AA4C                     _hid_display:
  9340                           	opt callstack 13
  9341                           
  9342                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9343                           ;stkvar	_h @ sp[(0)+-1]
  9344                           
  9345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9346                           ;incstack = 0
  9347  01AA4C  0EFF               	movlw	-1
  9348  01AA4E  50E3               	movf	plusw1,w,c
  9349  01AA50  6EE6               	movwf	postinc1,c
  9350  01AA52  EC47  F0DA         	call	_hid_input	;wreg free
  9351                           
  9352                           ;hid.c: 26:  switch (h->h_state) {
  9353  01AA56  D076               	goto	l12517
  9354  01AA58                     l12491:
  9355                           
  9356                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9357                           ;stkvar	_h @ sp[(0)+-1]
  9358  01AA58  0EFF               	movlw	-1
  9359  01AA5A  50E3               	movf	plusw1,w,c
  9360  01AA5C  6ED9               	movwf	fsr2l,c
  9361  01AA5E  6ADA               	clrf	fsr2h,c
  9362  01AA60  0E01               	movlw	1
  9363  01AA62  26D9               	addwf	fsr2l,f,c
  9364  01AA64  0E01               	movlw	1
  9365  01AA66  6EDF               	movwf	indf2,c
  9366                           
  9367                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9368                           ;stkvar	_h @ sp[(0)+-1]
  9369  01AA68  0EFF               	movlw	-1
  9370  01AA6A  50E3               	movf	plusw1,w,c
  9371  01AA6C  6ED9               	movwf	fsr2l,c
  9372  01AA6E  6ADA               	clrf	fsr2h,c
  9373  01AA70  0E00               	movlw	0
  9374  01AA72  6EDF               	movwf	indf2,c
  9375                           
  9376                           ;hid.c: 30:   h->wait_enter = 1;
  9377                           ;stkvar	_h @ sp[(0)+-1]
  9378  01AA74  0EFF               	movlw	-1
  9379  01AA76  50E3               	movf	plusw1,w,c
  9380  01AA78  6ED9               	movwf	fsr2l,c
  9381  01AA7A  6ADA               	clrf	fsr2h,c
  9382  01AA7C  0E04               	movlw	4
  9383  01AA7E  26D9               	addwf	fsr2l,f,c
  9384  01AA80  0E01               	movlw	1
  9385  01AA82  6EDF               	movwf	indf2,c
  9386                           
  9387                           ;hid.c: 31:   h->wait_select = 1;
  9388                           ;stkvar	_h @ sp[(0)+-1]
  9389  01AA84  0EFF               	movlw	-1
  9390  01AA86  50E3               	movf	plusw1,w,c
  9391  01AA88  6ED9               	movwf	fsr2l,c
  9392  01AA8A  6ADA               	clrf	fsr2h,c
  9393  01AA8C  0E02               	movlw	2
  9394  01AA8E  26D9               	addwf	fsr2l,f,c
  9395  01AA90  0E01               	movlw	1
  9396  01AA92  6EDF               	movwf	indf2,c
  9397                           
  9398                           ;hid.c: 32:   h->wait_calib = 1;
  9399                           ;stkvar	_h @ sp[(0)+-1]
  9400  01AA94  0EFF               	movlw	-1
  9401  01AA96  50E3               	movf	plusw1,w,c
  9402  01AA98  6ED9               	movwf	fsr2l,c
  9403  01AA9A  6ADA               	clrf	fsr2h,c
  9404  01AA9C  0E06               	movlw	6
  9405  01AA9E  26D9               	addwf	fsr2l,f,c
  9406  01AAA0  0E01               	movlw	1
  9407  01AAA2  6EDF               	movwf	indf2,c
  9408                           
  9409                           ;hid.c: 33:   h->select_p = SW_OFF;
  9410                           ;stkvar	_h @ sp[(0)+-1]
  9411  01AAA4  0EFF               	movlw	-1
  9412  01AAA6  50E3               	movf	plusw1,w,c
  9413  01AAA8  6ED9               	movwf	fsr2l,c
  9414  01AAAA  6ADA               	clrf	fsr2h,c
  9415  01AAAC  0E03               	movlw	3
  9416  01AAAE  26D9               	addwf	fsr2l,f,c
  9417  01AAB0  0E00               	movlw	0
  9418  01AAB2  6EDF               	movwf	indf2,c
  9419                           
  9420                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9421                           ;stkvar	_h @ sp[(0)+-1]
  9422  01AAB4  0EFF               	movlw	-1
  9423  01AAB6  50E3               	movf	plusw1,w,c
  9424  01AAB8  6ED9               	movwf	fsr2l,c
  9425  01AABA  6ADA               	clrf	fsr2h,c
  9426  01AABC  0E05               	movlw	5
  9427  01AABE  26D9               	addwf	fsr2l,f,c
  9428  01AAC0  0E00               	movlw	0
  9429  01AAC2  6EDF               	movwf	indf2,c
  9430                           
  9431                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9432                           ;stkvar	_h @ sp[(0)+-1]
  9433  01AAC4  0EFF               	movlw	-1
  9434  01AAC6  50E3               	movf	plusw1,w,c
  9435  01AAC8  6ED9               	movwf	fsr2l,c
  9436  01AACA  6ADA               	clrf	fsr2h,c
  9437  01AACC  0E07               	movlw	7
  9438  01AACE  26D9               	addwf	fsr2l,f,c
  9439  01AAD0  0E00               	movlw	0
  9440  01AAD2  D036               	goto	L5
  9441  01AAD4                     l12507:
  9442                           
  9443                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9444                           ;stkvar	_h @ sp[(0)+-1]
  9445  01AAD4  0EFF               	movlw	-1
  9446  01AAD6  50E3               	movf	plusw1,w,c
  9447  01AAD8  6ED9               	movwf	fsr2l,c
  9448  01AADA  6ADA               	clrf	fsr2h,c
  9449  01AADC  0E02               	movlw	2
  9450  01AADE  26D9               	addwf	fsr2l,f,c
  9451  01AAE0  50DF               	movf	indf2,w,c
  9452  01AAE2  A4D8               	btfss	status,2,c
  9453  01AAE4  D042               	goto	l2250
  9454                           
  9455                           ;stkvar	_h @ sp[(0)+-1]
  9456  01AAE6  0EFF               	movlw	-1
  9457  01AAE8  50E3               	movf	plusw1,w,c
  9458  01AAEA  6ED9               	movwf	fsr2l,c
  9459  01AAEC  6ADA               	clrf	fsr2h,c
  9460  01AAEE  0E03               	movlw	3
  9461  01AAF0  26D9               	addwf	fsr2l,f,c
  9462  01AAF2  50DF               	movf	indf2,w,c
  9463  01AAF4  A4D8               	btfss	status,2,c
  9464  01AAF6  D039               	goto	l2250
  9465                           
  9466                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9467                           ;stkvar	_h @ sp[(0)+-1]
  9468  01AAF8  0EFF               	movlw	-1
  9469  01AAFA  50E3               	movf	plusw1,w,c
  9470  01AAFC  6ED9               	movwf	fsr2l,c
  9471  01AAFE  6ADA               	clrf	fsr2h,c
  9472  01AB00  0E08               	movlw	8
  9473  01AB02  26D9               	addwf	fsr2l,f,c
  9474                           
  9475                           ;stkvar	_h @ sp[(0)+-1]
  9476  01AB04  0EFF               	movlw	-1
  9477  01AB06  50E3               	movf	plusw1,w,c
  9478  01AB08  6EE9               	movwf	fsr0l,c
  9479  01AB0A  6AEA               	clrf	fsr0h,c
  9480  01AB0C  0E08               	movlw	8
  9481  01AB0E  26E9               	addwf	fsr0l,f,c
  9482  01AB10  2AEF               	incf	indf0,f,c
  9483  01AB12  50EF               	movf	indf0,w,c
  9484  01AB14  0B03               	andlw	3
  9485  01AB16  6EDF               	movwf	indf2,c
  9486                           
  9487                           ;hid.c: 41:    h->hid_display = h->sequence;
  9488                           ;stkvar	_h @ sp[(0)+-1]
  9489  01AB18  0EFF               	movlw	-1
  9490  01AB1A  50E3               	movf	plusw1,w,c
  9491  01AB1C  6ED9               	movwf	fsr2l,c
  9492  01AB1E  6ADA               	clrf	fsr2h,c
  9493  01AB20  0E08               	movlw	8
  9494  01AB22  26D9               	addwf	fsr2l,f,c
  9495                           
  9496                           ;stkvar	_h @ sp[(0)+-1]
  9497  01AB24  0EFF               	movlw	-1
  9498  01AB26  50E3               	movf	plusw1,w,c
  9499  01AB28  6EE9               	movwf	fsr0l,c
  9500  01AB2A  6AEA               	clrf	fsr0h,c
  9501  01AB2C  006F FF7F FFEF     	movff	indf2,indf0
  9502                           
  9503                           ;hid.c: 42:    h->wait_select = 1;
  9504                           ;stkvar	_h @ sp[(0)+-1]
  9505  01AB32  0EFF               	movlw	-1
  9506  01AB34  50E3               	movf	plusw1,w,c
  9507  01AB36  6ED9               	movwf	fsr2l,c
  9508  01AB38  6ADA               	clrf	fsr2h,c
  9509  01AB3A  0E02               	movlw	2
  9510  01AB3C  26D9               	addwf	fsr2l,f,c
  9511  01AB3E  0E01               	movlw	1
  9512  01AB40                     L5:
  9513  01AB40  6EDF               	movwf	indf2,c
  9514  01AB42  D013               	goto	l2250
  9515  01AB44                     l12517:
  9516                           
  9517                           ;stkvar	_h @ sp[(0)+-1]
  9518  01AB44  0EFF               	movlw	-1
  9519  01AB46  50E3               	movf	plusw1,w,c
  9520  01AB48  6ED9               	movwf	fsr2l,c
  9521  01AB4A  6ADA               	clrf	fsr2h,c
  9522  01AB4C  0E01               	movlw	1
  9523  01AB4E  26D9               	addwf	fsr2l,f,c
  9524  01AB50  50DF               	movf	indf2,w,c
  9525  01AB52  6E0B               	movwf	(btemp+10)^0,c
  9526  01AB54  6A0C               	clrf	(btemp+11)^0,c
  9527                           
  9528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9529                           ; Switch size 1, requested type "simple"
  9530                           ; Number of cases is 1, Range of values is 0 to 0
  9531                           ; switch strategies available:
  9532                           ; Name         Instructions Cycles
  9533                           ; simple_byte            4     3 (average)
  9534                           ;	Chosen strategy is simple_byte
  9535  01AB56  500C               	movf	(btemp+11)^0,w,c
  9536  01AB58  0A00               	xorlw	0	; case 0
  9537  01AB5A  A4D8               	btfss	status,2,c
  9538  01AB5C  D7BB               	goto	l12507
  9539                           
  9540                           ; Switch size 1, requested type "simple"
  9541                           ; Number of cases is 2, Range of values is 0 to 1
  9542                           ; switch strategies available:
  9543                           ; Name         Instructions Cycles
  9544                           ; simple_byte            7     4 (average)
  9545                           ;	Chosen strategy is simple_byte
  9546  01AB5E  500B               	movf	(btemp+10)^0,w,c
  9547  01AB60  0A00               	xorlw	0	; case 0
  9548  01AB62  B4D8               	btfsc	status,2,c
  9549  01AB64  D779               	goto	l12491
  9550  01AB66  0A01               	xorlw	1	; case 1
  9551  01AB68  D7B5               	goto	l12507
  9552  01AB6A                     l2250:
  9553                           
  9554                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  9555  01AB6A  52E5               	movf	postdec1,f,c
  9556  01AB6C  0012               	return		;funcret
  9557  01AB6E                     __end_of_hid_display:
  9558                           	opt callstack 0
  9559                           
  9560 ;; *************** function _hid_input *****************
  9561 ;; Defined at:
  9562 ;;		line 3 in file "hid.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  h               1  [STACK] PTR struct H_data
  9565 ;;		 -> H(9), 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1  [STACK] PTR struct H_data
  9570 ;; Registers used:
  9571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/39
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9581 ;;Total ram usage:        0 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:   16
  9584 ;; This function calls:
  9585 ;;		_get_switch
  9586 ;; This function is called by:
  9587 ;;		_hid_display
  9588 ;; This function uses a reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text23
  9592  01B48E                     __ptext23:
  9593                           	opt callstack 0
  9594  01B48E                     _hid_input:
  9595                           	opt callstack 13
  9596                           
  9597                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9598                           
  9599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9600                           ;incstack = 0
  9601  01B48E  0E02               	movlw	2
  9602  01B490  6EE6               	movwf	postinc1,c
  9603  01B492  EC55  F0EA         	call	_get_switch	;wreg free
  9604  01B496  5001               	movf	btemp^0,w,c
  9605  01B498  B4D8               	btfsc	status,2,c
  9606  01B49A  D01C               	goto	l11767
  9607                           
  9608                           ;hid.c: 6:   h->wait_select = 0;
  9609                           ;stkvar	_h @ sp[(0)+-1]
  9610  01B49C  0EFF               	movlw	-1
  9611  01B49E  50E3               	movf	plusw1,w,c
  9612  01B4A0  6ED9               	movwf	fsr2l,c
  9613  01B4A2  6ADA               	clrf	fsr2h,c
  9614  01B4A4  0E02               	movlw	2
  9615  01B4A6  26D9               	addwf	fsr2l,f,c
  9616  01B4A8  0E00               	movlw	0
  9617  01B4AA  6EDF               	movwf	indf2,c
  9618                           
  9619                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9620  01B4AC  0E02               	movlw	2
  9621  01B4AE  6EE6               	movwf	postinc1,c
  9622  01B4B0  EC55  F0EA         	call	_get_switch	;wreg free
  9623  01B4B4  5001               	movf	btemp^0,w,c
  9624  01B4B6  B4D8               	btfsc	status,2,c
  9625  01B4B8  D003               	goto	u10730
  9626  01B4BA  6A0C               	clrf	(btemp+11)^0,c
  9627  01B4BC  2A0C               	incf	(btemp+11)^0,f,c
  9628  01B4BE  D001               	goto	u10748
  9629  01B4C0                     u10730:
  9630  01B4C0  6A0C               	clrf	(btemp+11)^0,c
  9631  01B4C2                     u10748:
  9632                           
  9633                           ;stkvar	_h @ sp[(0)+-1]
  9634  01B4C2  0EFF               	movlw	-1
  9635  01B4C4  50E3               	movf	plusw1,w,c
  9636  01B4C6  6ED9               	movwf	fsr2l,c
  9637  01B4C8  6ADA               	clrf	fsr2h,c
  9638  01B4CA  0E03               	movlw	3
  9639  01B4CC  26D9               	addwf	fsr2l,f,c
  9640  01B4CE  0060  F033  FFDF   	movff	btemp+11,indf2
  9641  01B4D4                     l11767:
  9642                           
  9643                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9644  01B4D4  0E03               	movlw	3
  9645  01B4D6  6EE6               	movwf	postinc1,c
  9646  01B4D8  EC55  F0EA         	call	_get_switch	;wreg free
  9647  01B4DC  5001               	movf	btemp^0,w,c
  9648  01B4DE  B4D8               	btfsc	status,2,c
  9649  01B4E0  D01C               	goto	l11773
  9650                           
  9651                           ;hid.c: 11:   h->wait_enter = 0;
  9652                           ;stkvar	_h @ sp[(0)+-1]
  9653  01B4E2  0EFF               	movlw	-1
  9654  01B4E4  50E3               	movf	plusw1,w,c
  9655  01B4E6  6ED9               	movwf	fsr2l,c
  9656  01B4E8  6ADA               	clrf	fsr2h,c
  9657  01B4EA  0E04               	movlw	4
  9658  01B4EC  26D9               	addwf	fsr2l,f,c
  9659  01B4EE  0E00               	movlw	0
  9660  01B4F0  6EDF               	movwf	indf2,c
  9661                           
  9662                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9663  01B4F2  0E03               	movlw	3
  9664  01B4F4  6EE6               	movwf	postinc1,c
  9665  01B4F6  EC55  F0EA         	call	_get_switch	;wreg free
  9666  01B4FA  5001               	movf	btemp^0,w,c
  9667  01B4FC  B4D8               	btfsc	status,2,c
  9668  01B4FE  D003               	goto	u10760
  9669  01B500  6A0C               	clrf	(btemp+11)^0,c
  9670  01B502  2A0C               	incf	(btemp+11)^0,f,c
  9671  01B504  D001               	goto	u10778
  9672  01B506                     u10760:
  9673  01B506  6A0C               	clrf	(btemp+11)^0,c
  9674  01B508                     u10778:
  9675                           
  9676                           ;stkvar	_h @ sp[(0)+-1]
  9677  01B508  0EFF               	movlw	-1
  9678  01B50A  50E3               	movf	plusw1,w,c
  9679  01B50C  6ED9               	movwf	fsr2l,c
  9680  01B50E  6ADA               	clrf	fsr2h,c
  9681  01B510  0E05               	movlw	5
  9682  01B512  26D9               	addwf	fsr2l,f,c
  9683  01B514  0060  F033  FFDF   	movff	btemp+11,indf2
  9684  01B51A                     l11773:
  9685                           
  9686                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9687  01B51A  0E04               	movlw	4
  9688  01B51C  6EE6               	movwf	postinc1,c
  9689  01B51E  EC55  F0EA         	call	_get_switch	;wreg free
  9690  01B522  5001               	movf	btemp^0,w,c
  9691  01B524  B4D8               	btfsc	status,2,c
  9692  01B526  D01C               	goto	l2241
  9693                           
  9694                           ;hid.c: 16:   h->wait_calib = 0;
  9695                           ;stkvar	_h @ sp[(0)+-1]
  9696  01B528  0EFF               	movlw	-1
  9697  01B52A  50E3               	movf	plusw1,w,c
  9698  01B52C  6ED9               	movwf	fsr2l,c
  9699  01B52E  6ADA               	clrf	fsr2h,c
  9700  01B530  0E06               	movlw	6
  9701  01B532  26D9               	addwf	fsr2l,f,c
  9702  01B534  0E00               	movlw	0
  9703  01B536  6EDF               	movwf	indf2,c
  9704                           
  9705                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9706  01B538  0E04               	movlw	4
  9707  01B53A  6EE6               	movwf	postinc1,c
  9708  01B53C  EC55  F0EA         	call	_get_switch	;wreg free
  9709  01B540  5001               	movf	btemp^0,w,c
  9710  01B542  B4D8               	btfsc	status,2,c
  9711  01B544  D003               	goto	u10790
  9712  01B546  6A0C               	clrf	(btemp+11)^0,c
  9713  01B548  2A0C               	incf	(btemp+11)^0,f,c
  9714  01B54A  D001               	goto	u10808
  9715  01B54C                     u10790:
  9716  01B54C  6A0C               	clrf	(btemp+11)^0,c
  9717  01B54E                     u10808:
  9718                           
  9719                           ;stkvar	_h @ sp[(0)+-1]
  9720  01B54E  0EFF               	movlw	-1
  9721  01B550  50E3               	movf	plusw1,w,c
  9722  01B552  6ED9               	movwf	fsr2l,c
  9723  01B554  6ADA               	clrf	fsr2h,c
  9724  01B556  0E07               	movlw	7
  9725  01B558  26D9               	addwf	fsr2l,f,c
  9726  01B55A  0060  F033  FFDF   	movff	btemp+11,indf2
  9727  01B560                     l2241:
  9728                           
  9729                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9730  01B560  52E5               	movf	postdec1,f,c
  9731  01B562  0012               	return		;funcret
  9732  01B564                     __end_of_hid_input:
  9733                           	opt callstack 0
  9734                           
  9735 ;; *************** function _esr_check *****************
  9736 ;; Defined at:
  9737 ;;		line 197 in file "bsoc.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  fsm             1  [STACK] const unsigned char 
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;		None
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  4  [STACK] float 
  9744 ;; Registers used:
  9745 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9755 ;;Total ram usage:        0 bytes
  9756 ;; Hardware stack levels used:    1
  9757 ;; Hardware stack levels required when called:   18
  9758 ;; This function calls:
  9759 ;;		_StartTimer
  9760 ;;		_TimerDone
  9761 ;;		___fldiv
  9762 ;;		___flsub
  9763 ;;		_conv_raw_result
  9764 ;;		_fabsf
  9765 ;;		_set_load_relay_one
  9766 ;;		_set_load_relay_two
  9767 ;;		_update_adc_result
  9768 ;; This function is called by:
  9769 ;;		_main
  9770 ;; This function uses a reentrant model
  9771 ;;
  9772                           
  9773                           	psect	text24
  9774  017E22                     __ptext24:
  9775                           	opt callstack 0
  9776  017E22                     _esr_check:
  9777                           	opt callstack 12
  9778                           
  9779                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9780                           ;stkvar	_fsm @ sp[(0)+-1]
  9781                           
  9782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9783                           ;incstack = 0
  9784  017E22  0EFF               	movlw	-1
  9785  017E24  50E3               	movf	plusw1,w,c
  9786  017E26  B4D8               	btfsc	status,2,c
  9787  017E28  D149               	goto	l12273
  9788                           
  9789                           ;bsoc.c: 202:   esr_state = 0;
  9790  017E2A  0100               	movlb	0	; () banked
  9791  017E2C  6BCA               	clrf	esr_check@esr_state& (0+255),b
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;bsoc.c: 203:   return -10.0;
  9795  017E2E  0E00               	movlw	0
  9796  017E30  6E01               	movwf	btemp^0,c
  9797  017E32  0E00               	movlw	0
  9798  017E34  6E02               	movwf	(btemp+1)^0,c
  9799  017E36  0E20               	movlw	32
  9800  017E38  6E03               	movwf	(btemp+2)^0,c
  9801  017E3A  0EC1               	movlw	193
  9802  017E3C  D15B               	goto	L6
  9803  017E3E                     l12205:
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9807  017E3E  0E10               	movlw	16
  9808  017E40  6EE6               	movwf	postinc1,c
  9809  017E42  0E27               	movlw	39
  9810  017E44  6EE6               	movwf	postinc1,c
  9811  017E46  0E0C               	movlw	12
  9812  017E48  6EE6               	movwf	postinc1,c
  9813  017E4A  EC33  F0E8         	call	_StartTimer	;wreg free
  9814  017E4E                     l12207:
  9815                           
  9816                           ;bsoc.c: 209:   esr_state++;
  9817  017E4E  0100               	movlb	0	; () banked
  9818  017E50  2BCA               	incf	esr_check@esr_state& (0+255),f,b
  9819                           
  9820                           ;bsoc.c: 210:   break;
  9821  017E52  D149               	goto	l12275
  9822  017E54                     l12209:
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;bsoc.c: 215:   set_load_relay_one(0);
  9826  017E54  0E00               	movlw	0
  9827  017E56  6EE6               	movwf	postinc1,c
  9828  017E58  EC5C  F0ED         	call	_set_load_relay_one	;wreg free
  9829                           
  9830                           ;bsoc.c: 216:   set_load_relay_two(0);
  9831  017E5C  0E00               	movlw	0
  9832  017E5E  6EE6               	movwf	postinc1,c
  9833  017E60  EC54  F0ED         	call	_set_load_relay_two	;wreg free
  9834                           
  9835                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9836  017E64  0E0C               	movlw	12
  9837  017E66  6EE6               	movwf	postinc1,c
  9838  017E68  ECC1  F0EA         	call	_TimerDone	;wreg free
  9839  017E6C  5001               	movf	btemp^0,w,c
  9840  017E6E  B4D8               	btfsc	status,2,c
  9841  017E70  D009               	goto	l12215
  9842                           
  9843                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9844  017E72  0E10               	movlw	16
  9845  017E74  6EE6               	movwf	postinc1,c
  9846  017E76  0E27               	movlw	39
  9847  017E78  6EE6               	movwf	postinc1,c
  9848  017E7A  0E0C               	movlw	12
  9849  017E7C  6EE6               	movwf	postinc1,c
  9850  017E7E  EC33  F0E8         	call	_StartTimer	;wreg free
  9851                           
  9852                           ;bsoc.c: 219:   } else {
  9853  017E82  D006               	goto	l12219
  9854  017E84                     l12215:
  9855                           
  9856                           ;bsoc.c: 220:    return -2.0;
  9857  017E84  0E00               	movlw	0
  9858  017E86  6E01               	movwf	btemp^0,c
  9859  017E88  0E00               	movlw	0
  9860  017E8A  6E02               	movwf	(btemp+1)^0,c
  9861  017E8C  0E00               	movlw	0
  9862  017E8E  D066               	goto	L8
  9863  017E90                     l12219:
  9864                           
  9865                           ;bsoc.c: 225:   update_adc_result();
  9866  017E90  ECD3  F0E8         	call	_update_adc_result	;wreg free
  9867                           
  9868                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9869  017E94  0E00               	movlw	0
  9870  017E96  6EE6               	movwf	postinc1,c
  9871  017E98  0E04               	movlw	4
  9872  017E9A  6EE6               	movwf	postinc1,c
  9873  017E9C  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9874  017EA0  0060  F004  F92D   	movff	btemp,_C+302	;volatile
  9875  017EA6  0060  F008  F92E   	movff	btemp+1,_C+303	;volatile
  9876  017EAC  0060  F00C  F92F   	movff	btemp+2,_C+304	;volatile
  9877  017EB2  0060  F010  F930   	movff	btemp+3,_C+305	;volatile
  9878  017EB8  D7CA               	goto	l12207
  9879  017EBA                     l12225:
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;bsoc.c: 230:   set_load_relay_one(1);
  9883  017EBA  0E01               	movlw	1
  9884  017EBC  6EE6               	movwf	postinc1,c
  9885  017EBE  EC5C  F0ED         	call	_set_load_relay_one	;wreg free
  9886                           
  9887                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9888  017EC2  0E0C               	movlw	12
  9889  017EC4  6EE6               	movwf	postinc1,c
  9890  017EC6  ECC1  F0EA         	call	_TimerDone	;wreg free
  9891  017ECA  5001               	movf	btemp^0,w,c
  9892  017ECC  B4D8               	btfsc	status,2,c
  9893  017ECE  D009               	goto	l12231
  9894                           
  9895                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9896  017ED0  0E10               	movlw	16
  9897  017ED2  6EE6               	movwf	postinc1,c
  9898  017ED4  0E27               	movlw	39
  9899  017ED6  6EE6               	movwf	postinc1,c
  9900  017ED8  0E0C               	movlw	12
  9901  017EDA  6EE6               	movwf	postinc1,c
  9902  017EDC  EC33  F0E8         	call	_StartTimer	;wreg free
  9903                           
  9904                           ;bsoc.c: 233:   } else {
  9905  017EE0  D006               	goto	l12235
  9906  017EE2                     l12231:
  9907                           
  9908                           ;bsoc.c: 234:    return -3.0;
  9909  017EE2  0E00               	movlw	0
  9910  017EE4  6E01               	movwf	btemp^0,c
  9911  017EE6  0E00               	movlw	0
  9912  017EE8  6E02               	movwf	(btemp+1)^0,c
  9913  017EEA  0E40               	movlw	64
  9914  017EEC  D037               	goto	L8
  9915  017EEE                     l12235:
  9916                           
  9917                           ;bsoc.c: 237:   update_adc_result();
  9918  017EEE  ECD3  F0E8         	call	_update_adc_result	;wreg free
  9919                           
  9920                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9921  017EF2  0E00               	movlw	0
  9922  017EF4  6EE6               	movwf	postinc1,c
  9923  017EF6  0E04               	movlw	4
  9924  017EF8  6EE6               	movwf	postinc1,c
  9925  017EFA  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9926  017EFE  0060  F004  F931   	movff	btemp,_C+306	;volatile
  9927  017F04  0060  F008  F932   	movff	btemp+1,_C+307	;volatile
  9928  017F0A  0060  F00C  F933   	movff	btemp+2,_C+308	;volatile
  9929  017F10  0060  F010  F934   	movff	btemp+3,_C+309	;volatile
  9930                           
  9931                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9932  017F16  0E00               	movlw	0
  9933  017F18  6EE6               	movwf	postinc1,c
  9934  017F1A  0E00               	movlw	0
  9935  017F1C  6EE6               	movwf	postinc1,c
  9936  017F1E  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9937  017F22  0060  F004  F925   	movff	btemp,_C+294	;volatile
  9938  017F28  0060  F008  F926   	movff	btemp+1,_C+295	;volatile
  9939  017F2E  0060  F00C  F927   	movff	btemp+2,_C+296	;volatile
  9940  017F34  0060  F010  F928   	movff	btemp+3,_C+297	;volatile
  9941  017F3A  D789               	goto	l12207
  9942  017F3C                     l12243:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;bsoc.c: 243:   set_load_relay_two(1);
  9946  017F3C  0E01               	movlw	1
  9947  017F3E  6EE6               	movwf	postinc1,c
  9948  017F40  EC54  F0ED         	call	_set_load_relay_two	;wreg free
  9949                           
  9950                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9951  017F44  0E0C               	movlw	12
  9952  017F46  6EE6               	movwf	postinc1,c
  9953  017F48  ECC1  F0EA         	call	_TimerDone	;wreg free
  9954  017F4C  5001               	movf	btemp^0,w,c
  9955  017F4E  A4D8               	btfss	status,2,c
  9956  017F50  D008               	goto	l12251
  9957                           
  9958                           ;bsoc.c: 245:    return -4.0;
  9959  017F52  0E00               	movlw	0
  9960  017F54  6E01               	movwf	btemp^0,c
  9961  017F56  0E00               	movlw	0
  9962  017F58  6E02               	movwf	(btemp+1)^0,c
  9963  017F5A  0E80               	movlw	128
  9964  017F5C                     L8:
  9965  017F5C  6E03               	movwf	(btemp+2)^0,c
  9966  017F5E  0EC0               	movlw	192
  9967  017F60  D0C9               	goto	L6
  9968  017F62                     l12251:
  9969                           
  9970                           ;bsoc.c: 247:   update_adc_result();
  9971  017F62  ECD3  F0E8         	call	_update_adc_result	;wreg free
  9972                           
  9973                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9974  017F66  0E00               	movlw	0
  9975  017F68  6EE6               	movwf	postinc1,c
  9976  017F6A  0E04               	movlw	4
  9977  017F6C  6EE6               	movwf	postinc1,c
  9978  017F6E  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9979  017F72  0060  F004  F935   	movff	btemp,_C+310	;volatile
  9980  017F78  0060  F008  F936   	movff	btemp+1,_C+311	;volatile
  9981  017F7E  0060  F00C  F937   	movff	btemp+2,_C+312	;volatile
  9982  017F84  0060  F010  F938   	movff	btemp+3,_C+313	;volatile
  9983                           
  9984                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9985  017F8A  0E00               	movlw	0
  9986  017F8C  6EE6               	movwf	postinc1,c
  9987  017F8E  0E00               	movlw	0
  9988  017F90  6EE6               	movwf	postinc1,c
  9989  017F92  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9990  017F96  0060  F004  F929   	movff	btemp,_C+298	;volatile
  9991  017F9C  0060  F008  F92A   	movff	btemp+1,_C+299	;volatile
  9992  017FA2  0060  F00C  F92B   	movff	btemp+2,_C+300	;volatile
  9993  017FA8  0060  F010  F92C   	movff	btemp+3,_C+301	;volatile
  9994                           
  9995                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9996  017FAE  EE22  F129         	lfsr	2,_C+298	;volatile
  9997  017FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  9998  017FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  9999  017FBE  006F FF7B FFE6     	movff	postinc2,postinc1
 10000  017FC4  006F FF7B FFE6     	movff	postinc2,postinc1
 10001  017FCA  EE22  F125         	lfsr	2,_C+294	;volatile
 10002  017FCE  006F FF7B FFE6     	movff	postinc2,postinc1
 10003  017FD4  006F FF7B FFE6     	movff	postinc2,postinc1
 10004  017FDA  006F FF7B FFE6     	movff	postinc2,postinc1
 10005  017FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 10006  017FE6  EC8D  F0E7         	call	___flsub	;wreg free
 10007  017FEA  0060  F007  FFE6   	movff	btemp,postinc1
 10008  017FF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10009  017FF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10010  017FFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 10011  018002  EE22  F135         	lfsr	2,_C+310	;volatile
 10012  018006  006F FF7B FFE6     	movff	postinc2,postinc1
 10013  01800C  006F FF7B FFE6     	movff	postinc2,postinc1
 10014  018012  006F FF7B FFE6     	movff	postinc2,postinc1
 10015  018018  006F FF7B FFE6     	movff	postinc2,postinc1
 10016  01801E  EE22  F131         	lfsr	2,_C+306	;volatile
 10017  018022  006F FF7B FFE6     	movff	postinc2,postinc1
 10018  018028  006F FF7B FFE6     	movff	postinc2,postinc1
 10019  01802E  006F FF7B FFE6     	movff	postinc2,postinc1
 10020  018034  006F FF7B FFE6     	movff	postinc2,postinc1
 10021  01803A  EC8D  F0E7         	call	___flsub	;wreg free
 10022  01803E  0060  F007  FFE6   	movff	btemp,postinc1
 10023  018044  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10024  01804A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10025  018050  0060  F013  FFE6   	movff	btemp+3,postinc1
 10026  018056  EC45  F0AD         	call	___fldiv	;wreg free
 10027  01805A  0060  F007  FFE6   	movff	btemp,postinc1
 10028  018060  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10029  018066  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10030  01806C  0060  F013  FFE6   	movff	btemp+3,postinc1
 10031  018072  EC0F  F0DE         	call	_fabsf	;wreg free
 10032  018076  0060  F004  F887   	movff	btemp,_C+136	;volatile
 10033  01807C  0060  F008  F888   	movff	btemp+1,_C+137	;volatile
 10034  018082  0060  F00C  F889   	movff	btemp+2,_C+138	;volatile
 10035  018088  0060  F010  F88A   	movff	btemp+3,_C+139	;volatile
 10036                           
 10037                           ;bsoc.c: 252:   set_load_relay_one(0);
 10038  01808E  0E00               	movlw	0
 10039  018090  6EE6               	movwf	postinc1,c
 10040  018092  EC5C  F0ED         	call	_set_load_relay_one	;wreg free
 10041                           
 10042                           ;bsoc.c: 253:   set_load_relay_two(0);
 10043  018096  0E00               	movlw	0
 10044  018098  6EE6               	movwf	postinc1,c
 10045  01809A  EC54  F0ED         	call	_set_load_relay_two	;wreg free
 10046                           
 10047                           ;bsoc.c: 254:   esr_state = 0;
 10048  01809E  0100               	movlb	0	; () banked
 10049  0180A0  6BCA               	clrf	esr_check@esr_state& (0+255),b
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;bsoc.c: 255:   return C.esr;
 10053  0180A2  0062  F21C  F001   	movff	_C+136,btemp	;volatile
 10054  0180A8  0062  F220  F002   	movff	_C+137,btemp+1	;volatile
 10055  0180AE  0062  F224  F003   	movff	_C+138,btemp+2	;volatile
 10056  0180B4  0062  F228  F004   	movff	_C+139,btemp+3	;volatile
 10057  0180BA  D01D               	goto	l2366
 10058  0180BC                     l12273:
 10059  0180BC  0100               	movlb	0	; () banked
 10060  0180BE  51CA               	movf	esr_check@esr_state& (0+255),w,b
 10061  0180C0  6E0B               	movwf	(btemp+10)^0,c
 10062  0180C2  6A0C               	clrf	(btemp+11)^0,c
 10063                           
 10064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10065                           ; Switch size 1, requested type "simple"
 10066                           ; Number of cases is 1, Range of values is 0 to 0
 10067                           ; switch strategies available:
 10068                           ; Name         Instructions Cycles
 10069                           ; simple_byte            4     3 (average)
 10070                           ;	Chosen strategy is simple_byte
 10071  0180C4  500C               	movf	(btemp+11)^0,w,c
 10072  0180C6  0A00               	xorlw	0	; case 0
 10073  0180C8  A4D8               	btfss	status,2,c
 10074  0180CA  D00D               	goto	l12275
 10075                           
 10076                           ; BSR set to: 0
 10077                           ; Switch size 1, requested type "simple"
 10078                           ; Number of cases is 4, Range of values is 0 to 3
 10079                           ; switch strategies available:
 10080                           ; Name         Instructions Cycles
 10081                           ; simple_byte           13     7 (average)
 10082                           ;	Chosen strategy is simple_byte
 10083  0180CC  500B               	movf	(btemp+10)^0,w,c
 10084  0180CE  0A00               	xorlw	0	; case 0
 10085  0180D0  B4D8               	btfsc	status,2,c
 10086  0180D2  D6B5               	goto	l12205
 10087  0180D4  0A01               	xorlw	1	; case 1
 10088  0180D6  B4D8               	btfsc	status,2,c
 10089  0180D8  D6BD               	goto	l12209
 10090  0180DA  0A03               	xorlw	3	; case 2
 10091  0180DC  B4D8               	btfsc	status,2,c
 10092  0180DE  D6ED               	goto	l12225
 10093  0180E0  0A01               	xorlw	1	; case 3
 10094  0180E2  B4D8               	btfsc	status,2,c
 10095  0180E4  D72B               	goto	l12243
 10096  0180E6                     l12275:
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;bsoc.c: 260:  return -1.0;
 10100  0180E6  0E00               	movlw	0
 10101  0180E8  6E01               	movwf	btemp^0,c
 10102  0180EA  0E00               	movlw	0
 10103  0180EC  6E02               	movwf	(btemp+1)^0,c
 10104  0180EE  0E80               	movlw	128
 10105  0180F0  6E03               	movwf	(btemp+2)^0,c
 10106  0180F2  0EBF               	movlw	191
 10107  0180F4                     L6:
 10108  0180F4  6E04               	movwf	(btemp+3)^0,c
 10109  0180F6                     l2366:
 10110                           
 10111                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10112  0180F6  52E5               	movf	postdec1,f,c
 10113  0180F8  0012               	return		;funcret
 10114  0180FA                     __end_of_esr_check:
 10115                           	opt callstack 0
 10116                           
 10117 ;; *************** function _update_adc_result *****************
 10118 ;; Defined at:
 10119 ;;		line 109 in file "daq.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;		None
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;		None
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1  [STACK] _Bool 
 10126 ;; Registers used:
 10127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10137 ;;Total ram usage:        0 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:   17
 10140 ;; This function calls:
 10141 ;;		_StartTimer
 10142 ;;		_TimerDone
 10143 ;;		_check_adc_scan
 10144 ;;		_clear_adc_scan
 10145 ;;		_start_adc_scan
 10146 ;; This function is called by:
 10147 ;;		_esr_check
 10148 ;; This function uses a reentrant model
 10149 ;;
 10150                           
 10151                           	psect	text25
 10152  01D1A6                     __ptext25:
 10153                           	opt callstack 0
 10154  01D1A6                     _update_adc_result:
 10155                           	opt callstack 12
 10156                           
 10157                           ;daq.c: 111:  if (R.done) {
 10158                           
 10159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10160                           ;incstack = 0
 10161  01D1A6  0101               	movlb	1	; () banked
 10162  01D1A8  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 10163  01D1AA  B4D8               	btfsc	status,2,c
 10164  01D1AC  0012               	return	
 10165                           
 10166                           ; BSR set to: 1
 10167                           ;daq.c: 112:   clear_adc_scan();
 10168  01D1AE  ECD9  F0ED         	call	_clear_adc_scan	;wreg free
 10169                           
 10170                           ; BSR set to: 1
 10171                           ;daq.c: 113:   start_adc_scan();
 10172  01D1B2  EC78  F0E4         	call	_start_adc_scan	;wreg free
 10173                           
 10174                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 10175  01D1B6  0EC8               	movlw	200
 10176  01D1B8  6EE6               	movwf	postinc1,c
 10177  01D1BA  0E00               	movlw	0
 10178  01D1BC  6EE6               	movwf	postinc1,c
 10179  01D1BE  0E01               	movlw	1
 10180  01D1C0  6EE6               	movwf	postinc1,c
 10181  01D1C2  EC33  F0E8         	call	_StartTimer	;wreg free
 10182  01D1C6                     l11651:
 10183  01D1C6  0E01               	movlw	1
 10184  01D1C8  6EE6               	movwf	postinc1,c
 10185  01D1CA  ECC1  F0EA         	call	_TimerDone	;wreg free
 10186  01D1CE  5001               	movf	btemp^0,w,c
 10187  01D1D0  A4D8               	btfss	status,2,c
 10188  01D1D2  0012               	return	
 10189  01D1D4  ECC2  F0ED         	call	_check_adc_scan	;wreg free
 10190  01D1D8  5001               	movf	btemp^0,w,c
 10191  01D1DA  A4D8               	btfss	status,2,c
 10192  01D1DC  0012               	return	
 10193  01D1DE  D7F3               	goto	l11651
 10194  01D1E0                     __end_of_update_adc_result:
 10195                           	opt callstack 0
 10196                           
 10197 ;; *************** function _check_adc_scan *****************
 10198 ;; Defined at:
 10199 ;;		line 93 in file "daq.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;		None
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;		None
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1  [STACK] _Bool 
 10206 ;; Registers used:
 10207 ;;		btemp
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/2
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10217 ;;Total ram usage:        0 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:   15
 10220 ;; This function calls:
 10221 ;;		Nothing
 10222 ;; This function is called by:
 10223 ;;		_main
 10224 ;;		_update_adc_result
 10225 ;; This function uses a reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text26
 10229  01DB84                     __ptext26:
 10230                           	opt callstack 0
 10231  01DB84                     _check_adc_scan:
 10232                           	opt callstack 13
 10233                           
 10234                           ;daq.c: 95:  return R.done;
 10235                           
 10236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10237                           ;incstack = 0
 10238  01DB84  0060  F4F0  F001   	movff	_R+53,btemp	;volatile
 10239                           
 10240                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10241  01DB8A  0012               	return		;funcret
 10242  01DB8C                     __end_of_check_adc_scan:
 10243                           	opt callstack 0
 10244                           
 10245 ;; *************** function _set_load_relay_two *****************
 10246 ;; Defined at:
 10247 ;;		line 130 in file "mbmc.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  mode            1  [STACK] const _Bool 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1  [STACK] void 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr1l, fsr1h
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:   15
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_main
 10272 ;;		_esr_check
 10273 ;; This function uses a reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text27
 10277  01DAA8                     __ptext27:
 10278                           	opt callstack 0
 10279  01DAA8                     _set_load_relay_two:
 10280                           	opt callstack 15
 10281                           
 10282                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
 10283                           ;stkvar	_mode @ sp[(0)+-1]
 10284                           
 10285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10286                           ;incstack = 0
 10287  01DAA8  0EFF               	movlw	-1
 10288  01DAAA  B0E3               	btfsc	plusw1,0,c
 10289  01DAAC  D002               	bra	u10325
 10290  01DAAE  9ABD               	bcf	189,5,c	;volatile
 10291  01DAB0  D001               	bra	u10326
 10292  01DAB2                     u10325:
 10293  01DAB2  8ABD               	bsf	189,5,c	;volatile
 10294  01DAB4                     u10326:
 10295                           
 10296                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10297  01DAB4  52E5               	movf	postdec1,f,c
 10298  01DAB6  0012               	return		;funcret
 10299  01DAB8                     __end_of_set_load_relay_two:
 10300                           	opt callstack 0
 10301                           
 10302 ;; *************** function _set_load_relay_one *****************
 10303 ;; Defined at:
 10304 ;;		line 125 in file "mbmc.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  mode            1  [STACK] const _Bool 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;		None
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1  [STACK] void 
 10311 ;; Registers used:
 10312 ;;		wreg, fsr1l, fsr1h
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10322 ;;Total ram usage:        0 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:   15
 10325 ;; This function calls:
 10326 ;;		Nothing
 10327 ;; This function is called by:
 10328 ;;		_main
 10329 ;;		_esr_check
 10330 ;; This function uses a reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text28
 10334  01DAB8                     __ptext28:
 10335                           	opt callstack 0
 10336  01DAB8                     _set_load_relay_one:
 10337                           	opt callstack 15
 10338                           
 10339                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
 10340                           ;stkvar	_mode @ sp[(0)+-1]
 10341                           
 10342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10343                           ;incstack = 0
 10344  01DAB8  0EFF               	movlw	-1
 10345  01DABA  B0E3               	btfsc	plusw1,0,c
 10346  01DABC  D002               	bra	u10315
 10347  01DABE  98BD               	bcf	189,4,c	;volatile
 10348  01DAC0  D001               	bra	u10316
 10349  01DAC2                     u10315:
 10350  01DAC2  88BD               	bsf	189,4,c	;volatile
 10351  01DAC4                     u10316:
 10352                           
 10353                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10354  01DAC4  52E5               	movf	postdec1,f,c
 10355  01DAC6  0012               	return		;funcret
 10356  01DAC8                     __end_of_set_load_relay_one:
 10357                           	opt callstack 0
 10358                           
 10359 ;; *************** function _eaDogM_WriteCommand *****************
 10360 ;; Defined at:
 10361 ;;		line 385 in file "eadog.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  cmd             1  [STACK] const unsigned char 
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1  [STACK] void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10370 ;; Tracked objects:
 10371 ;;		On entry : 3F/3D
 10372 ;;		On exit  : 3F/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10379 ;;Total ram usage:        0 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:   26
 10382 ;; This function calls:
 10383 ;;		_send_lcd_cmd_dma
 10384 ;; This function is called by:
 10385 ;;		_main
 10386 ;; This function uses a reentrant model
 10387 ;;
 10388                           
 10389                           	psect	text29
 10390  01DAF8                     __ptext29:
 10391                           	opt callstack 0
 10392  01DAF8                     _eaDogM_WriteCommand:
 10393                           	opt callstack 4
 10394                           
 10395                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10396                           ;stkvar	_cmd @ sp[(0)+-1]
 10397                           
 10398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10399                           ;incstack = 0
 10400  01DAF8  0EFF               	movlw	-1
 10401  01DAFA  50E3               	movf	plusw1,w,c
 10402  01DAFC  6EE6               	movwf	postinc1,c
 10403  01DAFE  ECA8  F0EC         	call	_send_lcd_cmd_dma	;wreg free
 10404                           
 10405                           ; BSR set to: 0
 10406                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10407  01DB02  52E5               	movf	postdec1,f,c
 10408  01DB04  0012               	return		;funcret
 10409  01DB06                     __end_of_eaDogM_WriteCommand:
 10410                           	opt callstack 0
 10411                           
 10412 ;; *************** function _current_sensor_cal *****************
 10413 ;; Defined at:
 10414 ;;		line 484 in file "main.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;		None
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;  cp              4  [STACK] unsigned long 
 10419 ;;  cb              4  [STACK] unsigned long 
 10420 ;;  cpz             4  [STACK] unsigned long 
 10421 ;;  cbz             4  [STACK] unsigned long 
 10422 ;;  x               1  [STACK] unsigned char 
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1  [STACK] _Bool 
 10425 ;; Registers used:
 10426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/2
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10436 ;;Total ram usage:        0 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:   28
 10439 ;; This function calls:
 10440 ;;		_WaitMs
 10441 ;;		___fldiv
 10442 ;;		___xxtofl
 10443 ;;		_cal_current_10A
 10444 ;;		_cal_current_zero
 10445 ;;		_clear_adc_scan
 10446 ;;		_clear_switch
 10447 ;;		_get_raw_result
 10448 ;;		_get_switch
 10449 ;;		_get_vterm_ptr
 10450 ;;		_spinners
 10451 ;;		_sprintf
 10452 ;;		_start_adc_scan
 10453 ;;		_update_lcd
 10454 ;;		_write_cal_data
 10455 ;; This function is called by:
 10456 ;;		_main
 10457 ;; This function uses a reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text30
 10461  013482                     __ptext30:
 10462                           	opt callstack 0
 10463  013482                     _current_sensor_cal:
 10464                           	opt callstack 0
 10465                           
 10466                           ; BSR set to: 0
 10467                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10468  013482  0E11               	movlw	17
 10469  013484  26E1               	addwf	fsr1l,f,c
 10470  013486  0E00               	movlw	0
 10471  013488  22E2               	addwfc	fsr1h,f,c
 10472                           
 10473                           ;main.c: 486:  uint8_t x = 0;
 10474                           ;stkvar	_x @ sp[(-17)+16]
 10475                           
 10476                           ;incstack = 0
 10477  01348A  0EFF               	movlw	-1
 10478  01348C  6AE3               	clrf	plusw1,c
 10479                           
 10480                           ;main.c: 487:  uint32_t cb = 0, cp = 0;
 10481                           ;stkvar	_cb @ sp[(-17)+4]
 10482  01348E  0EF3               	movlw	-13
 10483  013490  6AE3               	clrf	plusw1,c
 10484  013492  0EF4               	movlw	-12
 10485  013494  6AE3               	clrf	plusw1,c
 10486  013496  0EF5               	movlw	-11
 10487  013498  6AE3               	clrf	plusw1,c
 10488  01349A  0EF6               	movlw	-10
 10489  01349C  6AE3               	clrf	plusw1,c
 10490                           
 10491                           ;stkvar	_cp @ sp[(-17)+0]
 10492  01349E  0EEF               	movlw	-17
 10493  0134A0  6AE3               	clrf	plusw1,c
 10494  0134A2  0EF0               	movlw	-16
 10495  0134A4  6AE3               	clrf	plusw1,c
 10496  0134A6  0EF1               	movlw	-15
 10497  0134A8  6AE3               	clrf	plusw1,c
 10498  0134AA  0EF2               	movlw	-14
 10499  0134AC  6AE3               	clrf	plusw1,c
 10500                           
 10501                           ;main.c: 489:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10502  0134AE  0E7A               	movlw	low STR_46
 10503  0134B0  6EE6               	movwf	postinc1,c
 10504  0134B2  0EFE               	movlw	high STR_46
 10505  0134B4  6EE6               	movwf	postinc1,c
 10506  0134B6  0E00               	movlw	0
 10507  0134B8  6EE6               	movwf	postinc1,c
 10508  0134BA  0E00               	movlw	0
 10509  0134BC  6EE6               	movwf	postinc1,c
 10510  0134BE  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10511  0134C2  0060  F007  FFE6   	movff	btemp,postinc1
 10512  0134C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10513  0134CE  0E04               	movlw	4
 10514  0134D0  6EE6               	movwf	postinc1,c
 10515  0134D2  EC68  F0D8         	call	_sprintf	;wreg free
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;main.c: 490:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 10519  0134D6  0EFC               	movlw	low STR_47
 10520  0134D8  6EE6               	movwf	postinc1,c
 10521  0134DA  0EFD               	movlw	high STR_47
 10522  0134DC  6EE6               	movwf	postinc1,c
 10523  0134DE  0E00               	movlw	0
 10524  0134E0  6EE6               	movwf	postinc1,c
 10525  0134E2  0E01               	movlw	1
 10526  0134E4  6EE6               	movwf	postinc1,c
 10527  0134E6  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10528  0134EA  0060  F007  FFE6   	movff	btemp,postinc1
 10529  0134F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10530  0134F6  0E04               	movlw	4
 10531  0134F8  6EE6               	movwf	postinc1,c
 10532  0134FA  EC68  F0D8         	call	_sprintf	;wreg free
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;main.c: 491:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10536  0134FE  0EE7               	movlw	low STR_48
 10537  013500  6EE6               	movwf	postinc1,c
 10538  013502  0EFD               	movlw	high STR_48
 10539  013504  6EE6               	movwf	postinc1,c
 10540  013506  0E00               	movlw	0
 10541  013508  6EE6               	movwf	postinc1,c
 10542  01350A  0E02               	movlw	2
 10543  01350C  6EE6               	movwf	postinc1,c
 10544  01350E  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10545  013512  0060  F007  FFE6   	movff	btemp,postinc1
 10546  013518  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10547  01351E  0E04               	movlw	4
 10548  013520  6EE6               	movwf	postinc1,c
 10549  013522  EC68  F0D8         	call	_sprintf	;wreg free
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;main.c: 492:  update_lcd(0);
 10553  013526  0E00               	movlw	0
 10554  013528  6EE6               	movwf	postinc1,c
 10555  01352A  EC59  F0D7         	call	_update_lcd	;wreg free
 10556                           
 10557                           ;main.c: 493:  WaitMs(2000);
 10558  01352E  0ED0               	movlw	208
 10559  013530  6EE6               	movwf	postinc1,c
 10560  013532  0E07               	movlw	7
 10561  013534  6EE6               	movwf	postinc1,c
 10562  013536  EC28  F0E9         	call	_WaitMs	;wreg free
 10563  01353A                     l14493:
 10564                           
 10565                           ;main.c: 495:   if (++x > 64)
 10566                           ;stkvar	_x @ sp[(-17)+16]
 10567  01353A  0EFF               	movlw	-1
 10568  01353C  2AE3               	incf	plusw1,f,c
 10569  01353E  0EFF               	movlw	-1
 10570  013540  006F FF8C  F001    	movff	plusw1,btemp
 10571  013546  0E40               	movlw	64
 10572  013548  6401               	cpfsgt	btemp^0,c
 10573  01354A  D002               	goto	l14497
 10574  01354C  EF16  F0A0         	goto	l1505
 10575  013550                     l14497:
 10576                           
 10577                           ;main.c: 497:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10578  013550  0E00               	movlw	0
 10579  013552  6EE6               	movwf	postinc1,c
 10580  013554  0E04               	movlw	4
 10581  013556  6EE6               	movwf	postinc1,c
 10582  013558  EC62  F0D9         	call	_spinners	;wreg free
 10583  01355C  5001               	movf	btemp^0,w,c
 10584  01355E  6EE6               	movwf	postinc1,c
 10585  013560  0E00               	movlw	0
 10586  013562  6EE6               	movwf	postinc1,c
 10587  013564  0E37               	movlw	low STR_49
 10588  013566  6EE6               	movwf	postinc1,c
 10589  013568  0EFF               	movlw	high STR_49
 10590  01356A  6EE6               	movwf	postinc1,c
 10591  01356C  0E00               	movlw	0
 10592  01356E  6EE6               	movwf	postinc1,c
 10593  013570  0E02               	movlw	2
 10594  013572  6EE6               	movwf	postinc1,c
 10595  013574  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10596  013578  0060  F007  FFE6   	movff	btemp,postinc1
 10597  01357E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10598  013584  0E06               	movlw	6
 10599  013586  6EE6               	movwf	postinc1,c
 10600  013588  EC68  F0D8         	call	_sprintf	;wreg free
 10601                           
 10602                           ;main.c: 498:   update_lcd(0);
 10603  01358C  0E00               	movlw	0
 10604  01358E  6EE6               	movwf	postinc1,c
 10605  013590  EC59  F0D7         	call	_update_lcd	;wreg free
 10606                           
 10607                           ;main.c: 499:   WaitMs(100);
 10608  013594  0E64               	movlw	100
 10609  013596  6EE6               	movwf	postinc1,c
 10610  013598  0E00               	movlw	0
 10611  01359A  6EE6               	movwf	postinc1,c
 10612  01359C  EC28  F0E9         	call	_WaitMs	;wreg free
 10613                           
 10614                           ;main.c: 500:  } while (get_switch(SCALIB));
 10615  0135A0  0E04               	movlw	4
 10616  0135A2  6EE6               	movwf	postinc1,c
 10617  0135A4  EC55  F0EA         	call	_get_switch	;wreg free
 10618  0135A8  5001               	movf	btemp^0,w,c
 10619  0135AA  A4D8               	btfss	status,2,c
 10620  0135AC  D7C6               	goto	l14493
 10621                           
 10622                           ;main.c: 502:  x = 0;
 10623                           ;stkvar	_x @ sp[(-17)+16]
 10624  0135AE  0EFF               	movlw	-1
 10625  0135B0  6AE3               	clrf	plusw1,c
 10626  0135B2                     l14505:
 10627                           
 10628                           ;main.c: 504:   cb += get_raw_result(C_BATT);
 10629  0135B2  0E00               	movlw	0
 10630  0135B4  6EE6               	movwf	postinc1,c
 10631  0135B6  EC57  F0EC         	call	_get_raw_result	;wreg free
 10632                           
 10633                           ;stkvar	_cb @ sp[(-17)+4]
 10634  0135BA  50E1               	movf	fsr1l,w,c
 10635  0135BC  0FF3               	addlw	-13
 10636  0135BE  6ED9               	movwf	fsr2l,c
 10637  0135C0  50E2               	movf	fsr1h,w,c
 10638  0135C2  6EDA               	movwf	fsr2h,c
 10639  0135C4  0EFF               	movlw	255
 10640  0135C6  22DA               	addwfc	fsr2h,f,c
 10641  0135C8  5001               	movf	btemp^0,w,c
 10642  0135CA  26DE               	addwf	postinc2,f,c
 10643  0135CC  5002               	movf	(btemp+1)^0,w,c
 10644  0135CE  22DE               	addwfc	postinc2,f,c
 10645  0135D0  0E00               	movlw	0
 10646  0135D2  22DE               	addwfc	postinc2,f,c
 10647  0135D4  22DE               	addwfc	postinc2,f,c
 10648                           
 10649                           ;main.c: 505:   cp += get_raw_result(C_PV);
 10650  0135D6  0E01               	movlw	1
 10651  0135D8  6EE6               	movwf	postinc1,c
 10652  0135DA  EC57  F0EC         	call	_get_raw_result	;wreg free
 10653                           
 10654                           ;stkvar	_cp @ sp[(-17)+0]
 10655  0135DE  50E1               	movf	fsr1l,w,c
 10656  0135E0  0FEF               	addlw	-17
 10657  0135E2  6ED9               	movwf	fsr2l,c
 10658  0135E4  50E2               	movf	fsr1h,w,c
 10659  0135E6  6EDA               	movwf	fsr2h,c
 10660  0135E8  0EFF               	movlw	255
 10661  0135EA  22DA               	addwfc	fsr2h,f,c
 10662  0135EC  5001               	movf	btemp^0,w,c
 10663  0135EE  26DE               	addwf	postinc2,f,c
 10664  0135F0  5002               	movf	(btemp+1)^0,w,c
 10665  0135F2  22DE               	addwfc	postinc2,f,c
 10666  0135F4  0E00               	movlw	0
 10667  0135F6  22DE               	addwfc	postinc2,f,c
 10668  0135F8  22DE               	addwfc	postinc2,f,c
 10669                           
 10670                           ;main.c: 506:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10671  0135FA  0EA4               	movlw	low STR_50
 10672  0135FC  6EE6               	movwf	postinc1,c
 10673  0135FE  0EFE               	movlw	high STR_50
 10674  013600  6EE6               	movwf	postinc1,c
 10675  013602  0E00               	movlw	0
 10676  013604  6EE6               	movwf	postinc1,c
 10677  013606  0E00               	movlw	0
 10678  013608  6EE6               	movwf	postinc1,c
 10679  01360A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10680  01360E  0060  F007  FFE6   	movff	btemp,postinc1
 10681  013614  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10682  01361A  0E04               	movlw	4
 10683  01361C  6EE6               	movwf	postinc1,c
 10684  01361E  EC68  F0D8         	call	_sprintf	;wreg free
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;main.c: 507:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10688  013622  0E01               	movlw	1
 10689  013624  6EE6               	movwf	postinc1,c
 10690  013626  EC57  F0EC         	call	_get_raw_result	;wreg free
 10691  01362A  0060  F007  FFE6   	movff	btemp,postinc1
 10692  013630  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10693  013636  0E00               	movlw	0
 10694  013638  6EE6               	movwf	postinc1,c
 10695  01363A  EC57  F0EC         	call	_get_raw_result	;wreg free
 10696  01363E  0060  F007  FFE6   	movff	btemp,postinc1
 10697  013644  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10698  01364A  0E54               	movlw	low STR_51
 10699  01364C  6EE6               	movwf	postinc1,c
 10700  01364E  0EFD               	movlw	high STR_51
 10701  013650  6EE6               	movwf	postinc1,c
 10702  013652  0E00               	movlw	0
 10703  013654  6EE6               	movwf	postinc1,c
 10704  013656  0E01               	movlw	1
 10705  013658  6EE6               	movwf	postinc1,c
 10706  01365A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10707  01365E  0060  F007  FFE6   	movff	btemp,postinc1
 10708  013664  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10709  01366A  0E08               	movlw	8
 10710  01366C  6EE6               	movwf	postinc1,c
 10711  01366E  EC68  F0D8         	call	_sprintf	;wreg free
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;main.c: 508:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10715                           ;stkvar	_x @ sp[(-17)+16]
 10716  013672  0EFF               	movlw	-1
 10717  013674  50E3               	movf	plusw1,w,c
 10718  013676  6EE6               	movwf	postinc1,c
 10719  013678  0E00               	movlw	0
 10720  01367A  6EE6               	movwf	postinc1,c
 10721  01367C  0E0D               	movlw	low STR_52
 10722  01367E  6EE6               	movwf	postinc1,c
 10723  013680  0EFF               	movlw	high STR_52
 10724  013682  6EE6               	movwf	postinc1,c
 10725  013684  0E00               	movlw	0
 10726  013686  6EE6               	movwf	postinc1,c
 10727  013688  0E02               	movlw	2
 10728  01368A  6EE6               	movwf	postinc1,c
 10729  01368C  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10730  013690  0060  F007  FFE6   	movff	btemp,postinc1
 10731  013696  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10732  01369C  0E06               	movlw	6
 10733  01369E  6EE6               	movwf	postinc1,c
 10734  0136A0  EC68  F0D8         	call	_sprintf	;wreg free
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;main.c: 509:   update_lcd(0);
 10738  0136A4  0E00               	movlw	0
 10739  0136A6  6EE6               	movwf	postinc1,c
 10740  0136A8  EC59  F0D7         	call	_update_lcd	;wreg free
 10741                           
 10742                           ;main.c: 510:   clear_adc_scan();
 10743  0136AC  ECD9  F0ED         	call	_clear_adc_scan	;wreg free
 10744                           
 10745                           ; BSR set to: 1
 10746                           ;main.c: 511:   start_adc_scan();
 10747  0136B0  EC78  F0E4         	call	_start_adc_scan	;wreg free
 10748                           
 10749                           ;main.c: 512:   WaitMs(100);
 10750  0136B4  0E64               	movlw	100
 10751  0136B6  6EE6               	movwf	postinc1,c
 10752  0136B8  0E00               	movlw	0
 10753  0136BA  6EE6               	movwf	postinc1,c
 10754  0136BC  EC28  F0E9         	call	_WaitMs	;wreg free
 10755                           
 10756                           ;main.c: 513:  } while (++x < 64);
 10757                           ;stkvar	_x @ sp[(-17)+16]
 10758  0136C0  0EFF               	movlw	-1
 10759  0136C2  2AE3               	incf	plusw1,f,c
 10760  0136C4  0EFF               	movlw	-1
 10761  0136C6  006F FF8C  F001    	movff	plusw1,btemp
 10762  0136CC  0E3F               	movlw	63
 10763  0136CE  6401               	cpfsgt	btemp^0,c
 10764  0136D0  D770               	goto	l14505
 10765                           
 10766                           ;main.c: 514:  cb = cb >> 6;
 10767  0136D2  0E06               	movlw	6
 10768  0136D4  6E0C               	movwf	(btemp+11)^0,c
 10769                           
 10770                           ;stkvar	_cb @ sp[(-17)+4]
 10771  0136D6  50E1               	movf	fsr1l,w,c
 10772  0136D8  0FF3               	addlw	-13
 10773  0136DA  6ED9               	movwf	fsr2l,c
 10774  0136DC  50E2               	movf	fsr1h,w,c
 10775  0136DE  6EDA               	movwf	fsr2h,c
 10776  0136E0  0EFF               	movlw	255
 10777  0136E2  22DA               	addwfc	fsr2h,f,c
 10778  0136E4  280C               	incf	(btemp+11)^0,w,c
 10779  0136E6  52DE               	movf	postinc2,f,c
 10780  0136E8  D007               	goto	u13860
 10781  0136EA                     u13865:
 10782  0136EA  52DE               	movf	postinc2,f,c
 10783  0136EC  52DE               	movf	postinc2,f,c
 10784  0136EE  90D8               	bcf	status,0,c
 10785  0136F0  32DD               	rrcf	postdec2,f,c
 10786  0136F2  32DD               	rrcf	postdec2,f,c
 10787  0136F4  32DD               	rrcf	postdec2,f,c
 10788  0136F6  32DE               	rrcf	postinc2,f,c
 10789  0136F8                     u13860:
 10790  0136F8  2EE8               	decfsz	wreg,f,c
 10791  0136FA  D7F7               	goto	u13865
 10792                           
 10793                           ;main.c: 515:  cp = cp >> 6;
 10794  0136FC  0E06               	movlw	6
 10795  0136FE  6E0C               	movwf	(btemp+11)^0,c
 10796                           
 10797                           ;stkvar	_cp @ sp[(-17)+0]
 10798  013700  50E1               	movf	fsr1l,w,c
 10799  013702  0FEF               	addlw	-17
 10800  013704  6ED9               	movwf	fsr2l,c
 10801  013706  50E2               	movf	fsr1h,w,c
 10802  013708  6EDA               	movwf	fsr2h,c
 10803  01370A  0EFF               	movlw	255
 10804  01370C  22DA               	addwfc	fsr2h,f,c
 10805  01370E  280C               	incf	(btemp+11)^0,w,c
 10806  013710  52DE               	movf	postinc2,f,c
 10807  013712  D007               	goto	u13870
 10808  013714                     u13875:
 10809  013714  52DE               	movf	postinc2,f,c
 10810  013716  52DE               	movf	postinc2,f,c
 10811  013718  90D8               	bcf	status,0,c
 10812  01371A  32DD               	rrcf	postdec2,f,c
 10813  01371C  32DD               	rrcf	postdec2,f,c
 10814  01371E  32DD               	rrcf	postdec2,f,c
 10815  013720  32DE               	rrcf	postinc2,f,c
 10816  013722                     u13870:
 10817  013722  2EE8               	decfsz	wreg,f,c
 10818  013724  D7F7               	goto	u13875
 10819                           
 10820                           ;main.c: 517:  if (cal_current_zero(0, cb, cp)) {
 10821                           ;stkvar	_cp @ sp[(-17)+0]
 10822  013726  0EEF               	movlw	-17
 10823  013728  006F FF8F FFE6     	movff	plusw1,postinc1
 10824  01372E  006F FF8F FFE6     	movff	plusw1,postinc1
 10825                           
 10826                           ;stkvar	_cb @ sp[(-19)+4]
 10827  013734  0EF1               	movlw	-15
 10828  013736  006F FF8F FFE6     	movff	plusw1,postinc1
 10829  01373C  006F FF8F FFE6     	movff	plusw1,postinc1
 10830  013742  0E00               	movlw	0
 10831  013744  6EE6               	movwf	postinc1,c
 10832  013746  EC55  F0E0         	call	_cal_current_zero	;wreg free
 10833  01374A  5001               	movf	btemp^0,w,c
 10834  01374C  B4D8               	btfsc	status,2,c
 10835  01374E  D075               	goto	l14543
 10836                           
 10837                           ;main.c: 518:   cal_current_zero(1, cb, cp);
 10838                           ;stkvar	_cp @ sp[(-17)+0]
 10839  013750  0EEF               	movlw	-17
 10840  013752  006F FF8F FFE6     	movff	plusw1,postinc1
 10841  013758  006F FF8F FFE6     	movff	plusw1,postinc1
 10842                           
 10843                           ;stkvar	_cb @ sp[(-19)+4]
 10844  01375E  0EF1               	movlw	-15
 10845  013760  006F FF8F FFE6     	movff	plusw1,postinc1
 10846  013766  006F FF8F FFE6     	movff	plusw1,postinc1
 10847  01376C  0E01               	movlw	1
 10848  01376E  6EE6               	movwf	postinc1,c
 10849  013770  EC55  F0E0         	call	_cal_current_zero	;wreg free
 10850                           
 10851                           ;main.c: 519:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10852  013774  0E7A               	movlw	low STR_46
 10853  013776  6EE6               	movwf	postinc1,c
 10854  013778  0EFE               	movlw	high STR_46
 10855  01377A  6EE6               	movwf	postinc1,c
 10856  01377C  0E00               	movlw	0
 10857  01377E  6EE6               	movwf	postinc1,c
 10858  013780  0E00               	movlw	0
 10859  013782  6EE6               	movwf	postinc1,c
 10860  013784  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10861  013788  0060  F007  FFE6   	movff	btemp,postinc1
 10862  01378E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10863  013794  0E04               	movlw	4
 10864  013796  6EE6               	movwf	postinc1,c
 10865  013798  EC68  F0D8         	call	_sprintf	;wreg free
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;main.c: 520:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10869                           ;stkvar	_cp @ sp[(-17)+0]
 10870  01379C  0EEF               	movlw	-17
 10871  01379E  006F FF8F FFE6     	movff	plusw1,postinc1
 10872  0137A4  006F FF8F FFE6     	movff	plusw1,postinc1
 10873  0137AA  006F FF8F FFE6     	movff	plusw1,postinc1
 10874  0137B0  006F FF8F FFE6     	movff	plusw1,postinc1
 10875                           
 10876                           ;stkvar	_cb @ sp[(-21)+4]
 10877  0137B6  0EEF               	movlw	-17
 10878  0137B8  006F FF8F FFE6     	movff	plusw1,postinc1
 10879  0137BE  006F FF8F FFE6     	movff	plusw1,postinc1
 10880  0137C4  006F FF8F FFE6     	movff	plusw1,postinc1
 10881  0137CA  006F FF8F FFE6     	movff	plusw1,postinc1
 10882  0137D0  0E7E               	movlw	low STR_54
 10883  0137D2  6EE6               	movwf	postinc1,c
 10884  0137D4  0EFD               	movlw	high STR_54
 10885  0137D6  6EE6               	movwf	postinc1,c
 10886  0137D8  0E00               	movlw	0
 10887  0137DA  6EE6               	movwf	postinc1,c
 10888  0137DC  0E01               	movlw	1
 10889  0137DE  6EE6               	movwf	postinc1,c
 10890  0137E0  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10891  0137E4  0060  F007  FFE6   	movff	btemp,postinc1
 10892  0137EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10893  0137F0  0E0C               	movlw	12
 10894  0137F2  6EE6               	movwf	postinc1,c
 10895  0137F4  EC68  F0D8         	call	_sprintf	;wreg free
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;main.c: 521:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10899  0137F8  0E3B               	movlw	low STR_55
 10900  0137FA  6EE6               	movwf	postinc1,c
 10901  0137FC  0EFE               	movlw	high STR_55
 10902  0137FE  6EE6               	movwf	postinc1,c
 10903  013800  0E00               	movlw	0
 10904  013802  6EE6               	movwf	postinc1,c
 10905  013804  0E02               	movlw	2
 10906  013806  6EE6               	movwf	postinc1,c
 10907  013808  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10908  01380C  0060  F007  FFE6   	movff	btemp,postinc1
 10909  013812  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10910  013818  0E04               	movlw	4
 10911  01381A  6EE6               	movwf	postinc1,c
 10912  01381C  EC68  F0D8         	call	_sprintf	;wreg free
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;main.c: 522:   update_lcd(0);
 10916  013820  0E00               	movlw	0
 10917  013822  6EE6               	movwf	postinc1,c
 10918  013824  EC59  F0D7         	call	_update_lcd	;wreg free
 10919                           
 10920                           ;main.c: 523:   WaitMs(2000);
 10921  013828  0ED0               	movlw	208
 10922  01382A  6EE6               	movwf	postinc1,c
 10923  01382C  0E07               	movlw	7
 10924  01382E  6EE6               	movwf	postinc1,c
 10925  013830  EC28  F0E9         	call	_WaitMs	;wreg free
 10926                           
 10927                           ;main.c: 524:   write_cal_data();
 10928  013834  EC69  F0D1         	call	_write_cal_data	;wreg free
 10929                           
 10930                           ;main.c: 525:  } else {
 10931  013838  D05B               	goto	l14549
 10932  01383A                     l14543:
 10933                           
 10934                           ;main.c: 526:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10935  01383A  0E7A               	movlw	low STR_46
 10936  01383C  6EE6               	movwf	postinc1,c
 10937  01383E  0EFE               	movlw	high STR_46
 10938  013840  6EE6               	movwf	postinc1,c
 10939  013842  0E00               	movlw	0
 10940  013844  6EE6               	movwf	postinc1,c
 10941  013846  0E00               	movlw	0
 10942  013848  6EE6               	movwf	postinc1,c
 10943  01384A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10944  01384E  0060  F007  FFE6   	movff	btemp,postinc1
 10945  013854  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10946  01385A  0E04               	movlw	4
 10947  01385C  6EE6               	movwf	postinc1,c
 10948  01385E  EC68  F0D8         	call	_sprintf	;wreg free
 10949                           
 10950                           ;main.c: 527:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10951  013862  0E01               	movlw	1
 10952  013864  6EE6               	movwf	postinc1,c
 10953  013866  EC57  F0EC         	call	_get_raw_result	;wreg free
 10954  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 10955  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10956  013876  0E00               	movlw	0
 10957  013878  6EE6               	movwf	postinc1,c
 10958  01387A  EC57  F0EC         	call	_get_raw_result	;wreg free
 10959  01387E  0060  F007  FFE6   	movff	btemp,postinc1
 10960  013884  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10961  01388A  0E7E               	movlw	low STR_54
 10962  01388C  6EE6               	movwf	postinc1,c
 10963  01388E  0EFD               	movlw	high STR_54
 10964  013890  6EE6               	movwf	postinc1,c
 10965  013892  0E00               	movlw	0
 10966  013894  6EE6               	movwf	postinc1,c
 10967  013896  0E01               	movlw	1
 10968  013898  6EE6               	movwf	postinc1,c
 10969  01389A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10970  01389E  0060  F007  FFE6   	movff	btemp,postinc1
 10971  0138A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10972  0138AA  0E08               	movlw	8
 10973  0138AC  6EE6               	movwf	postinc1,c
 10974  0138AE  EC68  F0D8         	call	_sprintf	;wreg free
 10975                           
 10976                           ;main.c: 528:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 10977  0138B2  0EF8               	movlw	low STR_58
 10978  0138B4  6EE6               	movwf	postinc1,c
 10979  0138B6  0EFE               	movlw	high STR_58
 10980  0138B8  6EE6               	movwf	postinc1,c
 10981  0138BA  0E00               	movlw	0
 10982  0138BC  6EE6               	movwf	postinc1,c
 10983  0138BE  0E02               	movlw	2
 10984  0138C0  6EE6               	movwf	postinc1,c
 10985  0138C2  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 10986  0138C6  0060  F007  FFE6   	movff	btemp,postinc1
 10987  0138CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10988  0138D2  0E04               	movlw	4
 10989  0138D4  6EE6               	movwf	postinc1,c
 10990  0138D6  EC68  F0D8         	call	_sprintf	;wreg free
 10991                           
 10992                           ;main.c: 529:   update_lcd(0);
 10993  0138DA  0E00               	movlw	0
 10994  0138DC  6EE6               	movwf	postinc1,c
 10995  0138DE  EC59  F0D7         	call	_update_lcd	;wreg free
 10996  0138E2                     l14545:
 10997                           
 10998                           ;main.c: 530:   WaitMs(2000);
 10999  0138E2  0ED0               	movlw	208
 11000  0138E4  6EE6               	movwf	postinc1,c
 11001  0138E6  0E07               	movlw	7
 11002  0138E8  6EE6               	movwf	postinc1,c
 11003  0138EA  EC28  F0E9         	call	_WaitMs	;wreg free
 11004  0138EE  D39E               	goto	l1505
 11005  0138F0                     l14549:
 11006                           
 11007                           ;main.c: 535:  uint32_t cbz, cpz;;main.c: 537:  clear_switch(SCALIB);
 11008  0138F0  0E04               	movlw	4
 11009  0138F2  6EE6               	movwf	postinc1,c
 11010  0138F4  EC40  F0E6         	call	_clear_switch	;wreg free
 11011                           
 11012                           ;main.c: 538:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11013  0138F8  0E7A               	movlw	low STR_46
 11014  0138FA  6EE6               	movwf	postinc1,c
 11015  0138FC  0EFE               	movlw	high STR_46
 11016  0138FE  6EE6               	movwf	postinc1,c
 11017  013900  0E00               	movlw	0
 11018  013902  6EE6               	movwf	postinc1,c
 11019  013904  0E00               	movlw	0
 11020  013906  6EE6               	movwf	postinc1,c
 11021  013908  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11022  01390C  0060  F007  FFE6   	movff	btemp,postinc1
 11023  013912  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11024  013918  0E04               	movlw	4
 11025  01391A  6EE6               	movwf	postinc1,c
 11026  01391C  EC68  F0D8         	call	_sprintf	;wreg free
 11027                           
 11028                           ; BSR set to: 0
 11029                           ;main.c: 539:  sprintf(get_vterm_ptr(1, 0), "10 Amp Sensor       ");
 11030  013920  0E50               	movlw	low STR_60
 11031  013922  6EE6               	movwf	postinc1,c
 11032  013924  0EFE               	movlw	high STR_60
 11033  013926  6EE6               	movwf	postinc1,c
 11034  013928  0E00               	movlw	0
 11035  01392A  6EE6               	movwf	postinc1,c
 11036  01392C  0E01               	movlw	1
 11037  01392E  6EE6               	movwf	postinc1,c
 11038  013930  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11039  013934  0060  F007  FFE6   	movff	btemp,postinc1
 11040  01393A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11041  013940  0E04               	movlw	4
 11042  013942  6EE6               	movwf	postinc1,c
 11043  013944  EC68  F0D8         	call	_sprintf	;wreg free
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;main.c: 540:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 11047  013948  0EE7               	movlw	low STR_48
 11048  01394A  6EE6               	movwf	postinc1,c
 11049  01394C  0EFD               	movlw	high STR_48
 11050  01394E  6EE6               	movwf	postinc1,c
 11051  013950  0E00               	movlw	0
 11052  013952  6EE6               	movwf	postinc1,c
 11053  013954  0E02               	movlw	2
 11054  013956  6EE6               	movwf	postinc1,c
 11055  013958  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11056  01395C  0060  F007  FFE6   	movff	btemp,postinc1
 11057  013962  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11058  013968  0E04               	movlw	4
 11059  01396A  6EE6               	movwf	postinc1,c
 11060  01396C  EC68  F0D8         	call	_sprintf	;wreg free
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;main.c: 541:  update_lcd(0);
 11064  013970  0E00               	movlw	0
 11065  013972  6EE6               	movwf	postinc1,c
 11066  013974  EC59  F0D7         	call	_update_lcd	;wreg free
 11067                           
 11068                           ;main.c: 542:  WaitMs(2000);
 11069  013978  0ED0               	movlw	208
 11070  01397A  6EE6               	movwf	postinc1,c
 11071  01397C  0E07               	movlw	7
 11072  01397E  6EE6               	movwf	postinc1,c
 11073  013980  EC28  F0E9         	call	_WaitMs	;wreg free
 11074                           
 11075                           ;main.c: 543:  x = 0;
 11076                           ;stkvar	_x @ sp[(-17)+16]
 11077  013984  0EFF               	movlw	-1
 11078  013986  6AE3               	clrf	plusw1,c
 11079  013988                     l14563:
 11080                           
 11081                           ;main.c: 545:   if (++x > 64)
 11082                           ;stkvar	_x @ sp[(-17)+16]
 11083  013988  0EFF               	movlw	-1
 11084  01398A  2AE3               	incf	plusw1,f,c
 11085  01398C  0EFF               	movlw	-1
 11086  01398E  006F FF8C  F001    	movff	plusw1,btemp
 11087  013994  0E40               	movlw	64
 11088  013996  6401               	cpfsgt	btemp^0,c
 11089  013998  D001               	goto	l14567
 11090  01399A  D348               	goto	l1505
 11091  01399C                     l14567:
 11092                           
 11093                           ;main.c: 547:   sprintf(get_vterm_ptr(2, 0), "Press button %c  ", spinners(4, 0));
 11094  01399C  0E00               	movlw	0
 11095  01399E  6EE6               	movwf	postinc1,c
 11096  0139A0  0E04               	movlw	4
 11097  0139A2  6EE6               	movwf	postinc1,c
 11098  0139A4  EC62  F0D9         	call	_spinners	;wreg free
 11099  0139A8  5001               	movf	btemp^0,w,c
 11100  0139AA  6EE6               	movwf	postinc1,c
 11101  0139AC  0E00               	movlw	0
 11102  0139AE  6EE6               	movwf	postinc1,c
 11103  0139B0  0E71               	movlw	low STR_62
 11104  0139B2  6EE6               	movwf	postinc1,c
 11105  0139B4  0EFF               	movlw	high STR_62
 11106  0139B6  6EE6               	movwf	postinc1,c
 11107  0139B8  0E00               	movlw	0
 11108  0139BA  6EE6               	movwf	postinc1,c
 11109  0139BC  0E02               	movlw	2
 11110  0139BE  6EE6               	movwf	postinc1,c
 11111  0139C0  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11112  0139C4  0060  F007  FFE6   	movff	btemp,postinc1
 11113  0139CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11114  0139D0  0E06               	movlw	6
 11115  0139D2  6EE6               	movwf	postinc1,c
 11116  0139D4  EC68  F0D8         	call	_sprintf	;wreg free
 11117                           
 11118                           ;main.c: 548:   update_lcd(0);
 11119  0139D8  0E00               	movlw	0
 11120  0139DA  6EE6               	movwf	postinc1,c
 11121  0139DC  EC59  F0D7         	call	_update_lcd	;wreg free
 11122                           
 11123                           ;main.c: 549:   WaitMs(100);
 11124  0139E0  0E64               	movlw	100
 11125  0139E2  6EE6               	movwf	postinc1,c
 11126  0139E4  0E00               	movlw	0
 11127  0139E6  6EE6               	movwf	postinc1,c
 11128  0139E8  EC28  F0E9         	call	_WaitMs	;wreg free
 11129                           
 11130                           ;main.c: 550:  } while (!get_switch(SCALIB));
 11131  0139EC  0E04               	movlw	4
 11132  0139EE  6EE6               	movwf	postinc1,c
 11133  0139F0  EC55  F0EA         	call	_get_switch	;wreg free
 11134  0139F4  5001               	movf	btemp^0,w,c
 11135  0139F6  B4D8               	btfsc	status,2,c
 11136  0139F8  D7C7               	goto	l14563
 11137                           
 11138                           ;main.c: 552:  x = 0;
 11139                           ;stkvar	_x @ sp[(-17)+16]
 11140  0139FA  0EFF               	movlw	-1
 11141  0139FC  6AE3               	clrf	plusw1,c
 11142                           
 11143                           ;main.c: 553:  cbz = cb;
 11144                           ;stkvar	_cb @ sp[(-17)+4]
 11145  0139FE  0EF3               	movlw	-13
 11146  013A00  006F FF8C  F009    	movff	plusw1,btemp+8
 11147  013A06  0EF4               	movlw	-12
 11148  013A08  006F FF8C  F00A    	movff	plusw1,btemp+9
 11149  013A0E  0EF5               	movlw	-11
 11150  013A10  006F FF8C  F00B    	movff	plusw1,btemp+10
 11151  013A16  0EF6               	movlw	-10
 11152  013A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 11153                           
 11154                           ;stkvar	_cbz @ sp[(-17)+12]
 11155  013A1E  0EFB               	movlw	-5
 11156  013A20  0060  F027  FFE3   	movff	btemp+8,plusw1
 11157  013A26  0EFC               	movlw	-4
 11158  013A28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11159  013A2E  0EFD               	movlw	-3
 11160  013A30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11161  013A36  0EFE               	movlw	-2
 11162  013A38  0060  F033  FFE3   	movff	btemp+11,plusw1
 11163                           
 11164                           ;main.c: 554:  cpz = cp;
 11165                           ;stkvar	_cp @ sp[(-17)+0]
 11166  013A3E  0EEF               	movlw	-17
 11167  013A40  006F FF8C  F009    	movff	plusw1,btemp+8
 11168  013A46  0EF0               	movlw	-16
 11169  013A48  006F FF8C  F00A    	movff	plusw1,btemp+9
 11170  013A4E  0EF1               	movlw	-15
 11171  013A50  006F FF8C  F00B    	movff	plusw1,btemp+10
 11172  013A56  0EF2               	movlw	-14
 11173  013A58  006F FF8C  F00C    	movff	plusw1,btemp+11
 11174                           
 11175                           ;stkvar	_cpz @ sp[(-17)+8]
 11176  013A5E  0EF7               	movlw	-9
 11177  013A60  0060  F027  FFE3   	movff	btemp+8,plusw1
 11178  013A66  0EF8               	movlw	-8
 11179  013A68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11180  013A6E  0EF9               	movlw	-7
 11181  013A70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11182  013A76  0EFA               	movlw	-6
 11183  013A78  0060  F033  FFE3   	movff	btemp+11,plusw1
 11184                           
 11185                           ;main.c: 555:  cb = 0;
 11186                           ;stkvar	_cb @ sp[(-17)+4]
 11187  013A7E  0EF3               	movlw	-13
 11188  013A80  6AE3               	clrf	plusw1,c
 11189  013A82  0EF4               	movlw	-12
 11190  013A84  6AE3               	clrf	plusw1,c
 11191  013A86  0EF5               	movlw	-11
 11192  013A88  6AE3               	clrf	plusw1,c
 11193  013A8A  0EF6               	movlw	-10
 11194  013A8C  6AE3               	clrf	plusw1,c
 11195                           
 11196                           ;main.c: 556:  cp = 0;
 11197                           ;stkvar	_cp @ sp[(-17)+0]
 11198  013A8E  0EEF               	movlw	-17
 11199  013A90  6AE3               	clrf	plusw1,c
 11200  013A92  0EF0               	movlw	-16
 11201  013A94  6AE3               	clrf	plusw1,c
 11202  013A96  0EF1               	movlw	-15
 11203  013A98  6AE3               	clrf	plusw1,c
 11204  013A9A  0EF2               	movlw	-14
 11205  013A9C  6AE3               	clrf	plusw1,c
 11206  013A9E                     l14583:
 11207                           
 11208                           ;main.c: 558:   cb += get_raw_result(C_BATT);
 11209  013A9E  0E00               	movlw	0
 11210  013AA0  6EE6               	movwf	postinc1,c
 11211  013AA2  EC57  F0EC         	call	_get_raw_result	;wreg free
 11212                           
 11213                           ;stkvar	_cb @ sp[(-17)+4]
 11214  013AA6  50E1               	movf	fsr1l,w,c
 11215  013AA8  0FF3               	addlw	-13
 11216  013AAA  6ED9               	movwf	fsr2l,c
 11217  013AAC  50E2               	movf	fsr1h,w,c
 11218  013AAE  6EDA               	movwf	fsr2h,c
 11219  013AB0  0EFF               	movlw	255
 11220  013AB2  22DA               	addwfc	fsr2h,f,c
 11221  013AB4  5001               	movf	btemp^0,w,c
 11222  013AB6  26DE               	addwf	postinc2,f,c
 11223  013AB8  5002               	movf	(btemp+1)^0,w,c
 11224  013ABA  22DE               	addwfc	postinc2,f,c
 11225  013ABC  0E00               	movlw	0
 11226  013ABE  22DE               	addwfc	postinc2,f,c
 11227  013AC0  22DE               	addwfc	postinc2,f,c
 11228                           
 11229                           ;main.c: 559:   cp += get_raw_result(C_PV);
 11230  013AC2  0E01               	movlw	1
 11231  013AC4  6EE6               	movwf	postinc1,c
 11232  013AC6  EC57  F0EC         	call	_get_raw_result	;wreg free
 11233                           
 11234                           ;stkvar	_cp @ sp[(-17)+0]
 11235  013ACA  50E1               	movf	fsr1l,w,c
 11236  013ACC  0FEF               	addlw	-17
 11237  013ACE  6ED9               	movwf	fsr2l,c
 11238  013AD0  50E2               	movf	fsr1h,w,c
 11239  013AD2  6EDA               	movwf	fsr2h,c
 11240  013AD4  0EFF               	movlw	255
 11241  013AD6  22DA               	addwfc	fsr2h,f,c
 11242  013AD8  5001               	movf	btemp^0,w,c
 11243  013ADA  26DE               	addwf	postinc2,f,c
 11244  013ADC  5002               	movf	(btemp+1)^0,w,c
 11245  013ADE  22DE               	addwfc	postinc2,f,c
 11246  013AE0  0E00               	movlw	0
 11247  013AE2  22DE               	addwfc	postinc2,f,c
 11248  013AE4  22DE               	addwfc	postinc2,f,c
 11249                           
 11250                           ;main.c: 560:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 11251  013AE6  0EA4               	movlw	low STR_50
 11252  013AE8  6EE6               	movwf	postinc1,c
 11253  013AEA  0EFE               	movlw	high STR_50
 11254  013AEC  6EE6               	movwf	postinc1,c
 11255  013AEE  0E00               	movlw	0
 11256  013AF0  6EE6               	movwf	postinc1,c
 11257  013AF2  0E00               	movlw	0
 11258  013AF4  6EE6               	movwf	postinc1,c
 11259  013AF6  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11260  013AFA  0060  F007  FFE6   	movff	btemp,postinc1
 11261  013B00  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11262  013B06  0E04               	movlw	4
 11263  013B08  6EE6               	movwf	postinc1,c
 11264  013B0A  EC68  F0D8         	call	_sprintf	;wreg free
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;main.c: 561:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 11268  013B0E  0E01               	movlw	1
 11269  013B10  6EE6               	movwf	postinc1,c
 11270  013B12  EC57  F0EC         	call	_get_raw_result	;wreg free
 11271  013B16  0060  F007  FFE6   	movff	btemp,postinc1
 11272  013B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11273  013B22  0E00               	movlw	0
 11274  013B24  6EE6               	movwf	postinc1,c
 11275  013B26  EC57  F0EC         	call	_get_raw_result	;wreg free
 11276  013B2A  0060  F007  FFE6   	movff	btemp,postinc1
 11277  013B30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11278  013B36  0E54               	movlw	low STR_51
 11279  013B38  6EE6               	movwf	postinc1,c
 11280  013B3A  0EFD               	movlw	high STR_51
 11281  013B3C  6EE6               	movwf	postinc1,c
 11282  013B3E  0E00               	movlw	0
 11283  013B40  6EE6               	movwf	postinc1,c
 11284  013B42  0E01               	movlw	1
 11285  013B44  6EE6               	movwf	postinc1,c
 11286  013B46  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11287  013B4A  0060  F007  FFE6   	movff	btemp,postinc1
 11288  013B50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11289  013B56  0E08               	movlw	8
 11290  013B58  6EE6               	movwf	postinc1,c
 11291  013B5A  EC68  F0D8         	call	_sprintf	;wreg free
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;main.c: 562:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 11295                           ;stkvar	_x @ sp[(-17)+16]
 11296  013B5E  0EFF               	movlw	-1
 11297  013B60  50E3               	movf	plusw1,w,c
 11298  013B62  6EE6               	movwf	postinc1,c
 11299  013B64  0E00               	movlw	0
 11300  013B66  6EE6               	movwf	postinc1,c
 11301  013B68  0E0D               	movlw	low STR_52
 11302  013B6A  6EE6               	movwf	postinc1,c
 11303  013B6C  0EFF               	movlw	high STR_52
 11304  013B6E  6EE6               	movwf	postinc1,c
 11305  013B70  0E00               	movlw	0
 11306  013B72  6EE6               	movwf	postinc1,c
 11307  013B74  0E02               	movlw	2
 11308  013B76  6EE6               	movwf	postinc1,c
 11309  013B78  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11310  013B7C  0060  F007  FFE6   	movff	btemp,postinc1
 11311  013B82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11312  013B88  0E06               	movlw	6
 11313  013B8A  6EE6               	movwf	postinc1,c
 11314  013B8C  EC68  F0D8         	call	_sprintf	;wreg free
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;main.c: 563:   update_lcd(0);
 11318  013B90  0E00               	movlw	0
 11319  013B92  6EE6               	movwf	postinc1,c
 11320  013B94  EC59  F0D7         	call	_update_lcd	;wreg free
 11321                           
 11322                           ;main.c: 564:   clear_adc_scan();
 11323  013B98  ECD9  F0ED         	call	_clear_adc_scan	;wreg free
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;main.c: 565:   start_adc_scan();
 11327  013B9C  EC78  F0E4         	call	_start_adc_scan	;wreg free
 11328                           
 11329                           ;main.c: 566:   WaitMs(100);
 11330  013BA0  0E64               	movlw	100
 11331  013BA2  6EE6               	movwf	postinc1,c
 11332  013BA4  0E00               	movlw	0
 11333  013BA6  6EE6               	movwf	postinc1,c
 11334  013BA8  EC28  F0E9         	call	_WaitMs	;wreg free
 11335                           
 11336                           ;main.c: 567:  } while (++x < 64);
 11337                           ;stkvar	_x @ sp[(-17)+16]
 11338  013BAC  0EFF               	movlw	-1
 11339  013BAE  2AE3               	incf	plusw1,f,c
 11340  013BB0  0EFF               	movlw	-1
 11341  013BB2  006F FF8C  F001    	movff	plusw1,btemp
 11342  013BB8  0E3F               	movlw	63
 11343  013BBA  6401               	cpfsgt	btemp^0,c
 11344  013BBC  D770               	goto	l14583
 11345                           
 11346                           ;main.c: 568:  cb = cb >> 6;
 11347  013BBE  0E06               	movlw	6
 11348  013BC0  6E0C               	movwf	(btemp+11)^0,c
 11349                           
 11350                           ;stkvar	_cb @ sp[(-17)+4]
 11351  013BC2  50E1               	movf	fsr1l,w,c
 11352  013BC4  0FF3               	addlw	-13
 11353  013BC6  6ED9               	movwf	fsr2l,c
 11354  013BC8  50E2               	movf	fsr1h,w,c
 11355  013BCA  6EDA               	movwf	fsr2h,c
 11356  013BCC  0EFF               	movlw	255
 11357  013BCE  22DA               	addwfc	fsr2h,f,c
 11358  013BD0  280C               	incf	(btemp+11)^0,w,c
 11359  013BD2  52DE               	movf	postinc2,f,c
 11360  013BD4  D007               	goto	u13920
 11361  013BD6                     u13925:
 11362  013BD6  52DE               	movf	postinc2,f,c
 11363  013BD8  52DE               	movf	postinc2,f,c
 11364  013BDA  90D8               	bcf	status,0,c
 11365  013BDC  32DD               	rrcf	postdec2,f,c
 11366  013BDE  32DD               	rrcf	postdec2,f,c
 11367  013BE0  32DD               	rrcf	postdec2,f,c
 11368  013BE2  32DE               	rrcf	postinc2,f,c
 11369  013BE4                     u13920:
 11370  013BE4  2EE8               	decfsz	wreg,f,c
 11371  013BE6  D7F7               	goto	u13925
 11372                           
 11373                           ;main.c: 569:  cp = cp >> 6;
 11374  013BE8  0E06               	movlw	6
 11375  013BEA  6E0C               	movwf	(btemp+11)^0,c
 11376                           
 11377                           ;stkvar	_cp @ sp[(-17)+0]
 11378  013BEC  50E1               	movf	fsr1l,w,c
 11379  013BEE  0FEF               	addlw	-17
 11380  013BF0  6ED9               	movwf	fsr2l,c
 11381  013BF2  50E2               	movf	fsr1h,w,c
 11382  013BF4  6EDA               	movwf	fsr2h,c
 11383  013BF6  0EFF               	movlw	255
 11384  013BF8  22DA               	addwfc	fsr2h,f,c
 11385  013BFA  280C               	incf	(btemp+11)^0,w,c
 11386  013BFC  52DE               	movf	postinc2,f,c
 11387  013BFE  D007               	goto	u13930
 11388  013C00                     u13935:
 11389  013C00  52DE               	movf	postinc2,f,c
 11390  013C02  52DE               	movf	postinc2,f,c
 11391  013C04  90D8               	bcf	status,0,c
 11392  013C06  32DD               	rrcf	postdec2,f,c
 11393  013C08  32DD               	rrcf	postdec2,f,c
 11394  013C0A  32DD               	rrcf	postdec2,f,c
 11395  013C0C  32DE               	rrcf	postinc2,f,c
 11396  013C0E                     u13930:
 11397  013C0E  2EE8               	decfsz	wreg,f,c
 11398  013C10  D7F7               	goto	u13935
 11399                           
 11400                           ;main.c: 571:  if (cal_current_10A(0, cb, cp, 0.0, 0.0)) {
 11401  013C12  0E00               	movlw	0
 11402  013C14  6EE6               	movwf	postinc1,c
 11403  013C16  0E00               	movlw	0
 11404  013C18  6EE6               	movwf	postinc1,c
 11405  013C1A  0E00               	movlw	0
 11406  013C1C  6EE6               	movwf	postinc1,c
 11407  013C1E  0E00               	movlw	0
 11408  013C20  6EE6               	movwf	postinc1,c
 11409  013C22  0E00               	movlw	0
 11410  013C24  6EE6               	movwf	postinc1,c
 11411  013C26  0E00               	movlw	0
 11412  013C28  6EE6               	movwf	postinc1,c
 11413  013C2A  0E00               	movlw	0
 11414  013C2C  6EE6               	movwf	postinc1,c
 11415  013C2E  0E00               	movlw	0
 11416  013C30  6EE6               	movwf	postinc1,c
 11417                           
 11418                           ;stkvar	_cp @ sp[(-25)+0]
 11419  013C32  0EE7               	movlw	-25
 11420  013C34  006F FF8F FFE6     	movff	plusw1,postinc1
 11421  013C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 11422                           
 11423                           ;stkvar	_cb @ sp[(-27)+4]
 11424  013C40  0EE9               	movlw	-23
 11425  013C42  006F FF8F FFE6     	movff	plusw1,postinc1
 11426  013C48  006F FF8F FFE6     	movff	plusw1,postinc1
 11427  013C4E  0E00               	movlw	0
 11428  013C50  6EE6               	movwf	postinc1,c
 11429  013C52  EC45  F0DC         	call	_cal_current_10A	;wreg free
 11430  013C56  5001               	movf	btemp^0,w,c
 11431  013C58  B4D8               	btfsc	status,2,c
 11432  013C5A  D193               	goto	l14621
 11433                           
 11434                           ;main.c: 572:   cal_current_10A(1, cb, cp, 10.0 / (float) (cb - cbz), 10.0 / (float) (cp
      +                           - cpz));
 11435                           ;stkvar	_cpz @ sp[(-17)+8]
 11436                           ;stkvar	_cp @ sp[(-17)+0]
 11437  013C5C  0EEF               	movlw	-17
 11438  013C5E  006F FF8C  F009    	movff	plusw1,btemp+8
 11439  013C64  0EF0               	movlw	-16
 11440  013C66  006F FF8C  F00A    	movff	plusw1,btemp+9
 11441  013C6C  0EF1               	movlw	-15
 11442  013C6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11443  013C74  0EF2               	movlw	-14
 11444  013C76  006F FF8C  F00C    	movff	plusw1,btemp+11
 11445  013C7C  0EF7               	movlw	-9
 11446  013C7E  50E3               	movf	plusw1,w,c
 11447  013C80  5E09               	subwf	(btemp+8)^0,f,c
 11448  013C82  0EF8               	movlw	-8
 11449  013C84  50E3               	movf	plusw1,w,c
 11450  013C86  5A0A               	subwfb	(btemp+9)^0,f,c
 11451  013C88  0EF9               	movlw	-7
 11452  013C8A  50E3               	movf	plusw1,w,c
 11453  013C8C  5A0B               	subwfb	(btemp+10)^0,f,c
 11454  013C8E  0EFA               	movlw	-6
 11455  013C90  50E3               	movf	plusw1,w,c
 11456  013C92  5A0C               	subwfb	(btemp+11)^0,f,c
 11457  013C94  0060  F027  FFE6   	movff	btemp+8,postinc1
 11458  013C9A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11459  013CA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11460  013CA6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11461  013CAC  0E00               	movlw	0
 11462  013CAE  6EE6               	movwf	postinc1,c
 11463  013CB0  ECB2  F0C8         	call	___xxtofl	;wreg free
 11464  013CB4  0060  F007  FFE6   	movff	btemp,postinc1
 11465  013CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11466  013CC0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11467  013CC6  0060  F013  FFE6   	movff	btemp+3,postinc1
 11468  013CCC  0E00               	movlw	0
 11469  013CCE  6EE6               	movwf	postinc1,c
 11470  013CD0  0E00               	movlw	0
 11471  013CD2  6EE6               	movwf	postinc1,c
 11472  013CD4  0E20               	movlw	32
 11473  013CD6  6EE6               	movwf	postinc1,c
 11474  013CD8  0E41               	movlw	65
 11475  013CDA  6EE6               	movwf	postinc1,c
 11476  013CDC  EC45  F0AD         	call	___fldiv	;wreg free
 11477  013CE0  0060  F007  FFE6   	movff	btemp,postinc1
 11478  013CE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11479  013CEC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11480  013CF2  0060  F013  FFE6   	movff	btemp+3,postinc1
 11481                           
 11482                           ;stkvar	_cbz @ sp[(-21)+12]
 11483                           ;stkvar	_cb @ sp[(-21)+4]
 11484  013CF8  0EEF               	movlw	-17
 11485  013CFA  006F FF8C  F009    	movff	plusw1,btemp+8
 11486  013D00  0EF0               	movlw	-16
 11487  013D02  006F FF8C  F00A    	movff	plusw1,btemp+9
 11488  013D08  0EF1               	movlw	-15
 11489  013D0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11490  013D10  0EF2               	movlw	-14
 11491  013D12  006F FF8C  F00C    	movff	plusw1,btemp+11
 11492  013D18  0EF7               	movlw	-9
 11493  013D1A  50E3               	movf	plusw1,w,c
 11494  013D1C  5E09               	subwf	(btemp+8)^0,f,c
 11495  013D1E  0EF8               	movlw	-8
 11496  013D20  50E3               	movf	plusw1,w,c
 11497  013D22  5A0A               	subwfb	(btemp+9)^0,f,c
 11498  013D24  0EF9               	movlw	-7
 11499  013D26  50E3               	movf	plusw1,w,c
 11500  013D28  5A0B               	subwfb	(btemp+10)^0,f,c
 11501  013D2A  0EFA               	movlw	-6
 11502  013D2C  50E3               	movf	plusw1,w,c
 11503  013D2E  5A0C               	subwfb	(btemp+11)^0,f,c
 11504  013D30  0060  F027  FFE6   	movff	btemp+8,postinc1
 11505  013D36  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11506  013D3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11507  013D42  0060  F033  FFE6   	movff	btemp+11,postinc1
 11508  013D48  0E00               	movlw	0
 11509  013D4A  6EE6               	movwf	postinc1,c
 11510  013D4C  ECB2  F0C8         	call	___xxtofl	;wreg free
 11511  013D50  0060  F007  FFE6   	movff	btemp,postinc1
 11512  013D56  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11513  013D5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11514  013D62  0060  F013  FFE6   	movff	btemp+3,postinc1
 11515  013D68  0E00               	movlw	0
 11516  013D6A  6EE6               	movwf	postinc1,c
 11517  013D6C  0E00               	movlw	0
 11518  013D6E  6EE6               	movwf	postinc1,c
 11519  013D70  0E20               	movlw	32
 11520  013D72  6EE6               	movwf	postinc1,c
 11521  013D74  0E41               	movlw	65
 11522  013D76  6EE6               	movwf	postinc1,c
 11523  013D78  EC45  F0AD         	call	___fldiv	;wreg free
 11524  013D7C  0060  F007  FFE6   	movff	btemp,postinc1
 11525  013D82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11526  013D88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11527  013D8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 11528                           
 11529                           ;stkvar	_cp @ sp[(-25)+0]
 11530  013D94  0EE7               	movlw	-25
 11531  013D96  006F FF8F FFE6     	movff	plusw1,postinc1
 11532  013D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11533                           
 11534                           ;stkvar	_cb @ sp[(-27)+4]
 11535  013DA2  0EE9               	movlw	-23
 11536  013DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11537  013DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11538  013DB0  0E01               	movlw	1
 11539  013DB2  6EE6               	movwf	postinc1,c
 11540  013DB4  EC45  F0DC         	call	_cal_current_10A	;wreg free
 11541                           
 11542                           ;main.c: 573:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11543  013DB8  0E7A               	movlw	low STR_46
 11544  013DBA  6EE6               	movwf	postinc1,c
 11545  013DBC  0EFE               	movlw	high STR_46
 11546  013DBE  6EE6               	movwf	postinc1,c
 11547  013DC0  0E00               	movlw	0
 11548  013DC2  6EE6               	movwf	postinc1,c
 11549  013DC4  0E00               	movlw	0
 11550  013DC6  6EE6               	movwf	postinc1,c
 11551  013DC8  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11552  013DCC  0060  F007  FFE6   	movff	btemp,postinc1
 11553  013DD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11554  013DD8  0E04               	movlw	4
 11555  013DDA  6EE6               	movwf	postinc1,c
 11556  013DDC  EC68  F0D8         	call	_sprintf	;wreg free
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;main.c: 574:   sprintf(get_vterm_ptr(1, 0), " %f %f              ", 10.0 / (float) (cb 
      +                          - cbz), 10.0 / (float) (cp - cpz));
 11560                           ;stkvar	_cpz @ sp[(-17)+8]
 11561                           ;stkvar	_cp @ sp[(-17)+0]
 11562  013DE0  0EEF               	movlw	-17
 11563  013DE2  006F FF8C  F009    	movff	plusw1,btemp+8
 11564  013DE8  0EF0               	movlw	-16
 11565  013DEA  006F FF8C  F00A    	movff	plusw1,btemp+9
 11566  013DF0  0EF1               	movlw	-15
 11567  013DF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11568  013DF8  0EF2               	movlw	-14
 11569  013DFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11570  013E00  0EF7               	movlw	-9
 11571  013E02  50E3               	movf	plusw1,w,c
 11572  013E04  5E09               	subwf	(btemp+8)^0,f,c
 11573  013E06  0EF8               	movlw	-8
 11574  013E08  50E3               	movf	plusw1,w,c
 11575  013E0A  5A0A               	subwfb	(btemp+9)^0,f,c
 11576  013E0C  0EF9               	movlw	-7
 11577  013E0E  50E3               	movf	plusw1,w,c
 11578  013E10  5A0B               	subwfb	(btemp+10)^0,f,c
 11579  013E12  0EFA               	movlw	-6
 11580  013E14  50E3               	movf	plusw1,w,c
 11581  013E16  5A0C               	subwfb	(btemp+11)^0,f,c
 11582  013E18  0060  F027  FFE6   	movff	btemp+8,postinc1
 11583  013E1E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11584  013E24  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11585  013E2A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11586  013E30  0E00               	movlw	0
 11587  013E32  6EE6               	movwf	postinc1,c
 11588  013E34  ECB2  F0C8         	call	___xxtofl	;wreg free
 11589  013E38  0060  F007  FFE6   	movff	btemp,postinc1
 11590  013E3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11591  013E44  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11592  013E4A  0060  F013  FFE6   	movff	btemp+3,postinc1
 11593  013E50  0E00               	movlw	0
 11594  013E52  6EE6               	movwf	postinc1,c
 11595  013E54  0E00               	movlw	0
 11596  013E56  6EE6               	movwf	postinc1,c
 11597  013E58  0E20               	movlw	32
 11598  013E5A  6EE6               	movwf	postinc1,c
 11599  013E5C  0E41               	movlw	65
 11600  013E5E  6EE6               	movwf	postinc1,c
 11601  013E60  EC45  F0AD         	call	___fldiv	;wreg free
 11602  013E64  0060  F007  FFE6   	movff	btemp,postinc1
 11603  013E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11604  013E70  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11605  013E76  0060  F013  FFE6   	movff	btemp+3,postinc1
 11606                           
 11607                           ;stkvar	_cbz @ sp[(-21)+12]
 11608                           ;stkvar	_cb @ sp[(-21)+4]
 11609  013E7C  0EEF               	movlw	-17
 11610  013E7E  006F FF8C  F009    	movff	plusw1,btemp+8
 11611  013E84  0EF0               	movlw	-16
 11612  013E86  006F FF8C  F00A    	movff	plusw1,btemp+9
 11613  013E8C  0EF1               	movlw	-15
 11614  013E8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11615  013E94  0EF2               	movlw	-14
 11616  013E96  006F FF8C  F00C    	movff	plusw1,btemp+11
 11617  013E9C  0EF7               	movlw	-9
 11618  013E9E  50E3               	movf	plusw1,w,c
 11619  013EA0  5E09               	subwf	(btemp+8)^0,f,c
 11620  013EA2  0EF8               	movlw	-8
 11621  013EA4  50E3               	movf	plusw1,w,c
 11622  013EA6  5A0A               	subwfb	(btemp+9)^0,f,c
 11623  013EA8  0EF9               	movlw	-7
 11624  013EAA  50E3               	movf	plusw1,w,c
 11625  013EAC  5A0B               	subwfb	(btemp+10)^0,f,c
 11626  013EAE  0EFA               	movlw	-6
 11627  013EB0  50E3               	movf	plusw1,w,c
 11628  013EB2  5A0C               	subwfb	(btemp+11)^0,f,c
 11629  013EB4  0060  F027  FFE6   	movff	btemp+8,postinc1
 11630  013EBA  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11631  013EC0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11632  013EC6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11633  013ECC  0E00               	movlw	0
 11634  013ECE  6EE6               	movwf	postinc1,c
 11635  013ED0  ECB2  F0C8         	call	___xxtofl	;wreg free
 11636  013ED4  0060  F007  FFE6   	movff	btemp,postinc1
 11637  013EDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11638  013EE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11639  013EE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 11640  013EEC  0E00               	movlw	0
 11641  013EEE  6EE6               	movwf	postinc1,c
 11642  013EF0  0E00               	movlw	0
 11643  013EF2  6EE6               	movwf	postinc1,c
 11644  013EF4  0E20               	movlw	32
 11645  013EF6  6EE6               	movwf	postinc1,c
 11646  013EF8  0E41               	movlw	65
 11647  013EFA  6EE6               	movwf	postinc1,c
 11648  013EFC  EC45  F0AD         	call	___fldiv	;wreg free
 11649  013F00  0060  F007  FFE6   	movff	btemp,postinc1
 11650  013F06  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11651  013F0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11652  013F12  0060  F013  FFE6   	movff	btemp+3,postinc1
 11653  013F18  0E69               	movlw	low STR_67
 11654  013F1A  6EE6               	movwf	postinc1,c
 11655  013F1C  0EFD               	movlw	high STR_67
 11656  013F1E  6EE6               	movwf	postinc1,c
 11657  013F20  0E00               	movlw	0
 11658  013F22  6EE6               	movwf	postinc1,c
 11659  013F24  0E01               	movlw	1
 11660  013F26  6EE6               	movwf	postinc1,c
 11661  013F28  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11662  013F2C  0060  F007  FFE6   	movff	btemp,postinc1
 11663  013F32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11664  013F38  0E0C               	movlw	12
 11665  013F3A  6EE6               	movwf	postinc1,c
 11666  013F3C  EC68  F0D8         	call	_sprintf	;wreg free
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;main.c: 575:   sprintf(get_vterm_ptr(2, 0), "10A Cal Set         ");
 11670  013F40  0E26               	movlw	low STR_68
 11671  013F42  6EE6               	movwf	postinc1,c
 11672  013F44  0EFE               	movlw	high STR_68
 11673  013F46  6EE6               	movwf	postinc1,c
 11674  013F48  0E00               	movlw	0
 11675  013F4A  6EE6               	movwf	postinc1,c
 11676  013F4C  0E02               	movlw	2
 11677  013F4E  6EE6               	movwf	postinc1,c
 11678  013F50  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11679  013F54  0060  F007  FFE6   	movff	btemp,postinc1
 11680  013F5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11681  013F60  0E04               	movlw	4
 11682  013F62  6EE6               	movwf	postinc1,c
 11683  013F64  EC68  F0D8         	call	_sprintf	;wreg free
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;main.c: 576:   update_lcd(0);
 11687  013F68  0E00               	movlw	0
 11688  013F6A  6EE6               	movwf	postinc1,c
 11689  013F6C  EC59  F0D7         	call	_update_lcd	;wreg free
 11690                           
 11691                           ;main.c: 577:   WaitMs(5000);
 11692  013F70  0E88               	movlw	136
 11693  013F72  6EE6               	movwf	postinc1,c
 11694  013F74  0E13               	movlw	19
 11695  013F76  6EE6               	movwf	postinc1,c
 11696  013F78  EC28  F0E9         	call	_WaitMs	;wreg free
 11697                           
 11698                           ;main.c: 578:   write_cal_data();
 11699  013F7C  EC69  F0D1         	call	_write_cal_data	;wreg free
 11700                           
 11701                           ;main.c: 579:  } else {
 11702  013F80  D055               	goto	l1505
 11703  013F82                     l14621:
 11704                           
 11705                           ;main.c: 580:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11706  013F82  0E7A               	movlw	low STR_46
 11707  013F84  6EE6               	movwf	postinc1,c
 11708  013F86  0EFE               	movlw	high STR_46
 11709  013F88  6EE6               	movwf	postinc1,c
 11710  013F8A  0E00               	movlw	0
 11711  013F8C  6EE6               	movwf	postinc1,c
 11712  013F8E  0E00               	movlw	0
 11713  013F90  6EE6               	movwf	postinc1,c
 11714  013F92  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11715  013F96  0060  F007  FFE6   	movff	btemp,postinc1
 11716  013F9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11717  013FA2  0E04               	movlw	4
 11718  013FA4  6EE6               	movwf	postinc1,c
 11719  013FA6  EC68  F0D8         	call	_sprintf	;wreg free
 11720                           
 11721                           ;main.c: 581:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 11722  013FAA  0E01               	movlw	1
 11723  013FAC  6EE6               	movwf	postinc1,c
 11724  013FAE  EC57  F0EC         	call	_get_raw_result	;wreg free
 11725  013FB2  0060  F007  FFE6   	movff	btemp,postinc1
 11726  013FB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11727  013FBE  0E00               	movlw	0
 11728  013FC0  6EE6               	movwf	postinc1,c
 11729  013FC2  EC57  F0EC         	call	_get_raw_result	;wreg free
 11730  013FC6  0060  F007  FFE6   	movff	btemp,postinc1
 11731  013FCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11732  013FD2  0E7E               	movlw	low STR_54
 11733  013FD4  6EE6               	movwf	postinc1,c
 11734  013FD6  0EFD               	movlw	high STR_54
 11735  013FD8  6EE6               	movwf	postinc1,c
 11736  013FDA  0E00               	movlw	0
 11737  013FDC  6EE6               	movwf	postinc1,c
 11738  013FDE  0E01               	movlw	1
 11739  013FE0  6EE6               	movwf	postinc1,c
 11740  013FE2  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11741  013FE6  0060  F007  FFE6   	movff	btemp,postinc1
 11742  013FEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11743  013FF2  0E08               	movlw	8
 11744  013FF4  6EE6               	movwf	postinc1,c
 11745  013FF6  EC68  F0D8         	call	_sprintf	;wreg free
 11746                           
 11747                           ;main.c: 582:   sprintf(get_vterm_ptr(2, 0), "10A Out Of Range    ");
 11748  013FFA  0ECE               	movlw	low STR_71
 11749  013FFC  6EE6               	movwf	postinc1,c
 11750  013FFE  0EFE               	movlw	high STR_71
 11751  014000  6EE6               	movwf	postinc1,c
 11752  014002  0E00               	movlw	0
 11753  014004  6EE6               	movwf	postinc1,c
 11754  014006  0E02               	movlw	2
 11755  014008  6EE6               	movwf	postinc1,c
 11756  01400A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 11757  01400E  0060  F007  FFE6   	movff	btemp,postinc1
 11758  014014  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11759  01401A  0E04               	movlw	4
 11760  01401C  6EE6               	movwf	postinc1,c
 11761  01401E  EC68  F0D8         	call	_sprintf	;wreg free
 11762                           
 11763                           ;main.c: 583:   update_lcd(0);
 11764  014022  0E00               	movlw	0
 11765  014024  6EE6               	movwf	postinc1,c
 11766  014026  EC59  F0D7         	call	_update_lcd	;wreg free
 11767  01402A  D45B               	goto	l14545
 11768  01402C                     l1505:
 11769                           
 11770                           ; _current_sensor_cal: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 11771  01402C  0EEF               	movlw	239
 11772  01402E  26E1               	addwf	fsr1l,f,c
 11773  014030  0EFF               	movlw	255
 11774  014032  22E2               	addwfc	fsr1h,f,c
 11775  014034  0012               	return		;funcret
 11776  014036                     __end_of_current_sensor_cal:
 11777                           	opt callstack 0
 11778                           
 11779 ;; *************** function _write_cal_data *****************
 11780 ;; Defined at:
 11781 ;;		line 406 in file "daq.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;		None
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  x               2  [STACK] unsigned short 
 11786 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 11787 ;;		 -> R(167), 
 11788 ;;  y               2  [STACK] unsigned short 
 11789 ;;  crcVal          1  [STACK] unsigned char 
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1  [STACK] void 
 11792 ;; Registers used:
 11793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11803 ;;Total ram usage:        0 bytes
 11804 ;; Hardware stack levels used:    1
 11805 ;; Hardware stack levels required when called:   17
 11806 ;; This function calls:
 11807 ;;		_CRC_8BitDataWrite
 11808 ;;		_CRC_CalculatedResultGet
 11809 ;;		_CRC_Initialize
 11810 ;;		_CRC_IsBusy
 11811 ;;		_CRC_Start
 11812 ;;		_DATAEE_WriteByte
 11813 ;; This function is called by:
 11814 ;;		_current_sensor_cal
 11815 ;; This function uses a reentrant model
 11816 ;;
 11817                           
 11818                           	psect	text31
 11819  01A2D2                     __ptext31:
 11820                           	opt callstack 0
 11821  01A2D2                     _write_cal_data:
 11822                           	opt callstack 0
 11823                           
 11824                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11825  01A2D2  0E07               	movlw	7
 11826  01A2D4  26E1               	addwf	fsr1l,f,c
 11827  01A2D6  0E00               	movlw	0
 11828  01A2D8  22E2               	addwfc	fsr1h,f,c
 11829                           
 11830                           ;daq.c: 408:  uint16_t x = 0, y;
 11831                           ;stkvar	_x @ sp[(-7)+0]
 11832                           
 11833                           ;incstack = 0
 11834  01A2DA  0EF9               	movlw	-7
 11835  01A2DC  6AE3               	clrf	plusw1,c
 11836  01A2DE  0EFA               	movlw	-6
 11837  01A2E0  6AE3               	clrf	plusw1,c
 11838                           
 11839                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 11840  01A2E2  0EA7               	movlw	167
 11841  01A2E4  6E0B               	movwf	(btemp+10)^0,c
 11842  01A2E6  0E00               	movlw	0
 11843  01A2E8  6E0C               	movwf	(btemp+11)^0,c
 11844                           
 11845                           ;stkvar	_y @ sp[(-7)+4]
 11846  01A2EA  0EFD               	movlw	-3
 11847  01A2EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11848  01A2F2  0EFE               	movlw	-2
 11849  01A2F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11850                           
 11851                           ;daq.c: 412:  R.crc = 0x42;
 11852  01A2FA  0E42               	movlw	66
 11853  01A2FC  0101               	movlb	1	; () banked
 11854  01A2FE  6FAD               	movwf	(_R+166)& (0+255),b	;volatile
 11855                           
 11856                           ; BSR set to: 1
 11857                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 11858                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11859  01A300  0E01               	movlw	high _R
 11860  01A302  6E01               	movwf	btemp^0,c
 11861  01A304  0EFC               	movlw	-4
 11862  01A306  0060  F007  FFE3   	movff	btemp,plusw1
 11863  01A30C  0E07               	movlw	low _R
 11864  01A30E  6E01               	movwf	btemp^0,c
 11865  01A310  0EFB               	movlw	-5
 11866  01A312  0060  F007  FFE3   	movff	btemp,plusw1
 11867                           
 11868                           ; BSR set to: 1
 11869                           ;daq.c: 414:  R.checkmark = 0x1957;
 11870  01A318  0E19               	movlw	25
 11871  01A31A  6FAC               	movwf	(_R+165)& (0+255),b	;volatile
 11872  01A31C  0E57               	movlw	87
 11873  01A31E  6FAB               	movwf	(_R+164)& (0+255),b	;volatile
 11874                           
 11875                           ; BSR set to: 1
 11876                           ;daq.c: 416:  CRC_Initialize();
 11877  01A320  EC30  F0E1         	call	_CRC_Initialize	;wreg free
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;daq.c: 419:  CRC_Start();
 11881  01A324  ECD6  F0ED         	call	_CRC_Start	;wreg free
 11882  01A328                     l11531:
 11883                           
 11884                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 11885                           ;stkvar	_x @ sp[(-7)+0]
 11886  01A328  0EF9               	movlw	-7
 11887  01A32A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11888  01A330  0EFA               	movlw	-6
 11889  01A332  006F FF8C  F00C    	movff	plusw1,btemp+11
 11890                           
 11891                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11892  01A338  0EFB               	movlw	-5
 11893  01A33A  006F FF8C  F009    	movff	plusw1,btemp+8
 11894  01A340  0EFC               	movlw	-4
 11895  01A342  006F FF8C  F00A    	movff	plusw1,btemp+9
 11896  01A348  500B               	movf	(btemp+10)^0,w,c
 11897  01A34A  2409               	addwf	(btemp+8)^0,w,c
 11898  01A34C  6ED9               	movwf	fsr2l,c
 11899  01A34E  500C               	movf	(btemp+11)^0,w,c
 11900  01A350  200A               	addwfc	(btemp+9)^0,w,c
 11901  01A352  6EDA               	movwf	fsr2h,c
 11902  01A354  50DF               	movf	indf2,w,c
 11903  01A356  6EE6               	movwf	postinc1,c
 11904                           
 11905                           ;stkvar	_x @ sp[(-8)+0]
 11906  01A358  0EF8               	movlw	-8
 11907  01A35A  006F FF8F FFE6     	movff	plusw1,postinc1
 11908  01A360  006F FF8F FFE6     	movff	plusw1,postinc1
 11909  01A366  EC11  F0E4         	call	_DATAEE_WriteByte	;wreg free
 11910                           
 11911                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 11912                           ;stkvar	_x @ sp[(-7)+0]
 11913  01A36A  0EF9               	movlw	-7
 11914  01A36C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11915  01A372  0EFA               	movlw	-6
 11916  01A374  006F FF8C  F00C    	movff	plusw1,btemp+11
 11917                           
 11918                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11919  01A37A  0EFB               	movlw	-5
 11920  01A37C  006F FF8C  F009    	movff	plusw1,btemp+8
 11921  01A382  0EFC               	movlw	-4
 11922  01A384  006F FF8C  F00A    	movff	plusw1,btemp+9
 11923  01A38A  500B               	movf	(btemp+10)^0,w,c
 11924  01A38C  2409               	addwf	(btemp+8)^0,w,c
 11925  01A38E  6ED9               	movwf	fsr2l,c
 11926  01A390  500C               	movf	(btemp+11)^0,w,c
 11927  01A392  200A               	addwfc	(btemp+9)^0,w,c
 11928  01A394  6EDA               	movwf	fsr2h,c
 11929  01A396  50DF               	movf	indf2,w,c
 11930  01A398  6EE6               	movwf	postinc1,c
 11931  01A39A  EC42  F0ED         	call	_CRC_8BitDataWrite	;wreg free
 11932  01A39E                     l11535:
 11933  01A39E  EC64  F0ED         	call	_CRC_IsBusy	;wreg free
 11934  01A3A2  5001               	movf	btemp^0,w,c
 11935  01A3A4  A4D8               	btfss	status,2,c
 11936  01A3A6  D7FB               	goto	l11535
 11937                           
 11938                           ;daq.c: 425:  } while (++x < y);
 11939                           ;stkvar	_y @ sp[(-7)+4]
 11940  01A3A8  0EFD               	movlw	-3
 11941  01A3AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11942  01A3B0  0EFE               	movlw	-2
 11943  01A3B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11944                           
 11945                           ;stkvar	_x @ sp[(-7)+0]
 11946  01A3B8  0EF9               	movlw	-7
 11947  01A3BA  50E3               	movf	plusw1,w,c
 11948  01A3BC  0F01               	addlw	1
 11949  01A3BE  6E01               	movwf	btemp^0,c
 11950  01A3C0  0EF9               	movlw	-7
 11951  01A3C2  0060  F007  FFE3   	movff	btemp,plusw1
 11952  01A3C8  6A01               	clrf	btemp^0,c
 11953  01A3CA  0EFA               	movlw	-6
 11954  01A3CC  50E3               	movf	plusw1,w,c
 11955  01A3CE  2001               	addwfc	btemp^0,w,c
 11956  01A3D0  6E01               	movwf	btemp^0,c
 11957  01A3D2  0EFA               	movlw	-6
 11958  01A3D4  0060  F007  FFE3   	movff	btemp,plusw1
 11959  01A3DA  0EF9               	movlw	-7
 11960  01A3DC  006F FF8C  F009    	movff	plusw1,btemp+8
 11961  01A3E2  0EFA               	movlw	-6
 11962  01A3E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 11963  01A3EA  500B               	movf	(btemp+10)^0,w,c
 11964  01A3EC  5C09               	subwf	(btemp+8)^0,w,c
 11965  01A3EE  500C               	movf	(btemp+11)^0,w,c
 11966  01A3F0  580A               	subwfb	(btemp+9)^0,w,c
 11967  01A3F2  A0D8               	btfss	status,0,c
 11968  01A3F4  D799               	goto	l11531
 11969                           
 11970                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 11971  01A3F6  0E00               	movlw	0
 11972  01A3F8  6EE6               	movwf	postinc1,c
 11973  01A3FA  0E00               	movlw	0
 11974  01A3FC  6EE6               	movwf	postinc1,c
 11975  01A3FE  0E00               	movlw	0
 11976  01A400  6EE6               	movwf	postinc1,c
 11977  01A402  EC95  F0CE         	call	_CRC_CalculatedResultGet	;wreg free
 11978                           
 11979                           ;stkvar	_crcVal @ sp[(-7)+6]
 11980  01A406  0EFF               	movlw	-1
 11981  01A408  0060  F007  FFE3   	movff	btemp,plusw1
 11982                           
 11983                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 11984                           ;stkvar	_crcVal @ sp[(-7)+6]
 11985  01A40E  0EFF               	movlw	-1
 11986  01A410  50E3               	movf	plusw1,w,c
 11987  01A412  6EE6               	movwf	postinc1,c
 11988  01A414  0EA6               	movlw	166
 11989  01A416  6EE6               	movwf	postinc1,c
 11990  01A418  0E00               	movlw	0
 11991  01A41A  6EE6               	movwf	postinc1,c
 11992  01A41C  EC11  F0E4         	call	_DATAEE_WriteByte	;wreg free
 11993                           
 11994                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11995  01A420  0EF9               	movlw	249
 11996  01A422  26E1               	addwf	fsr1l,f,c
 11997  01A424  0EFF               	movlw	255
 11998  01A426  22E2               	addwfc	fsr1h,f,c
 11999  01A428  0012               	return		;funcret
 12000  01A42A                     __end_of_write_cal_data:
 12001                           	opt callstack 0
 12002                           
 12003 ;; *************** function _DATAEE_WriteByte *****************
 12004 ;; Defined at:
 12005 ;;		line 172 in file "mcc_generated_files/memory.c"
 12006 ;; Parameters:    Size  Location     Type
 12007 ;;  bAdd            2  [STACK] unsigned short 
 12008 ;;  bData           1  [STACK] unsigned char 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;  GIEBitValue     1  [STACK] unsigned char 
 12011 ;; Return value:  Size  Location     Type
 12012 ;;                  1  [STACK] void 
 12013 ;; Registers used:
 12014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/39
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12024 ;;Total ram usage:        0 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:   15
 12027 ;; This function calls:
 12028 ;;		Nothing
 12029 ;; This function is called by:
 12030 ;;		_write_cal_data
 12031 ;; This function uses a reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text32
 12035  01C822                     __ptext32:
 12036                           	opt callstack 0
 12037  01C822                     _DATAEE_WriteByte:
 12038                           	opt callstack 0
 12039                           
 12040                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12041  01C822  52E6               	movf	postinc1,f,c
 12042                           
 12043                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12044                           
 12045                           ;incstack = 0
 12046  01C824  AED2               	btfss	210,7,c	;volatile
 12047  01C826  D003               	goto	u9950
 12048  01C828  6A0C               	clrf	(btemp+11)^0,c
 12049  01C82A  2A0C               	incf	(btemp+11)^0,f,c
 12050  01C82C  D001               	goto	u9958
 12051  01C82E                     u9950:
 12052  01C82E  6A0C               	clrf	(btemp+11)^0,c
 12053  01C830                     u9958:
 12054                           
 12055                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 12056  01C830  0EFF               	movlw	-1
 12057  01C832  0060  F033  FFE3   	movff	btemp+11,plusw1
 12058                           
 12059                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12060                           ;stkvar	_bAdd @ sp[(-1)+-2]
 12061  01C838  0EFE               	movlw	254
 12062  01C83A  24E1               	addwf	fsr1l,w,c
 12063  01C83C  6ED9               	movwf	fsr2l,c
 12064  01C83E  0EFF               	movlw	255
 12065  01C840  20E2               	addwfc	fsr1h,w,c
 12066  01C842  6EDA               	movwf	fsr2h,c
 12067  01C844  50DF               	movf	indf2,w,c
 12068  01C846  0B03               	andlw	3
 12069  01C848  0139               	movlb	57	; () banked
 12070  01C84A  6FE1               	movwf	225,b	;volatile
 12071                           
 12072                           ; BSR set to: 57
 12073                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12074                           ;stkvar	_bAdd @ sp[(-1)+-2]
 12075  01C84C  0EFD               	movlw	-3
 12076  01C84E  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 12077                           
 12078                           ; BSR set to: 57
 12079                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12080                           ;stkvar	_bData @ sp[(-1)+-3]
 12081  01C854  0EFC               	movlw	-4
 12082  01C856  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 12083                           
 12084                           ; BSR set to: 57
 12085                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12086  01C85C  0E3F               	movlw	-193
 12087  01C85E  17E5               	andwf	229,f,b	;volsfr
 12088                           
 12089                           ; BSR set to: 57
 12090                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12091  01C860  85E5               	bsf	229,2,b	;volsfr
 12092                           
 12093                           ; BSR set to: 57
 12094                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12095  01C862  9ED2               	bcf	210,7,c	;volatile
 12096                           
 12097                           ; BSR set to: 57
 12098                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12099  01C864  0E55               	movlw	85
 12100  01C866  6FE6               	movwf	230,b	;volsfr
 12101                           
 12102                           ; BSR set to: 57
 12103                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12104  01C868  0EAA               	movlw	170
 12105  01C86A  6FE6               	movwf	230,b	;volsfr
 12106                           
 12107                           ; BSR set to: 57
 12108                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12109  01C86C  83E5               	bsf	229,1,b	;volsfr
 12110  01C86E                     l942:
 12111                           
 12112                           ; BSR set to: 57
 12113                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12114  01C86E  B3E5               	btfsc	229,1,b	;volsfr
 12115  01C870  D7FE               	goto	l942
 12116                           
 12117                           ; BSR set to: 57
 12118                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12119  01C872  95E5               	bcf	229,2,b	;volsfr
 12120                           
 12121                           ; BSR set to: 57
 12122                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12123                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 12124  01C874  0EFF               	movlw	-1
 12125  01C876  B0E3               	btfsc	plusw1,0,c
 12126  01C878  D002               	bra	u9975
 12127  01C87A  9ED2               	bcf	210,7,c	;volatile
 12128  01C87C  D001               	bra	u9976
 12129  01C87E                     u9975:
 12130  01C87E  8ED2               	bsf	210,7,c	;volatile
 12131  01C880                     u9976:
 12132                           
 12133                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12134  01C880  52E5               	movf	postdec1,f,c
 12135  01C882  52E5               	movf	postdec1,f,c
 12136  01C884  52E5               	movf	postdec1,f,c
 12137  01C886  52E5               	movf	postdec1,f,c
 12138  01C888  0012               	return		;funcret
 12139  01C88A                     __end_of_DATAEE_WriteByte:
 12140                           	opt callstack 0
 12141                           
 12142 ;; *************** function _CRC_Start *****************
 12143 ;; Defined at:
 12144 ;;		line 119 in file "mcc_generated_files/crc.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;		None
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;		None
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  1  [STACK] void 
 12151 ;; Registers used:
 12152 ;;		None
 12153 ;; Tracked objects:
 12154 ;;		On entry : 3F/0
 12155 ;;		On exit  : 3F/39
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12162 ;;Total ram usage:        0 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; Hardware stack levels required when called:   15
 12165 ;; This function calls:
 12166 ;;		Nothing
 12167 ;; This function is called by:
 12168 ;;		_read_cal_data
 12169 ;;		_write_cal_data
 12170 ;; This function uses a reentrant model
 12171 ;;
 12172                           
 12173                           	psect	text33
 12174  01DBAC                     __ptext33:
 12175                           	opt callstack 0
 12176  01DBAC                     _CRC_Start:
 12177                           	opt callstack 14
 12178                           
 12179                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 12180                           
 12181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12182                           ;incstack = 0
 12183  01DBAC  0139               	movlb	57	; () banked
 12184  01DBAE  8D68               	bsf	104,6,b	;volatile
 12185                           
 12186                           ; BSR set to: 57
 12187                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 12188  01DBB0  0012               	return		;funcret
 12189  01DBB2                     __end_of_CRC_Start:
 12190                           	opt callstack 0
 12191                           
 12192 ;; *************** function _CRC_IsBusy *****************
 12193 ;; Defined at:
 12194 ;;		line 201 in file "mcc_generated_files/crc.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;		None
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;		None
 12199 ;; Return value:  Size  Location     Type
 12200 ;;                  1  [STACK] _Bool 
 12201 ;; Registers used:
 12202 ;;		btemp
 12203 ;; Tracked objects:
 12204 ;;		On entry : 0/39
 12205 ;;		On exit  : 0/0
 12206 ;;		Unchanged: 0/0
 12207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12212 ;;Total ram usage:        0 bytes
 12213 ;; Hardware stack levels used:    1
 12214 ;; Hardware stack levels required when called:   15
 12215 ;; This function calls:
 12216 ;;		Nothing
 12217 ;; This function is called by:
 12218 ;;		_read_cal_data
 12219 ;;		_write_cal_data
 12220 ;; This function uses a reentrant model
 12221 ;;
 12222                           
 12223                           	psect	text34
 12224  01DAC8                     __ptext34:
 12225                           	opt callstack 0
 12226  01DAC8                     _CRC_IsBusy:
 12227                           	opt callstack 14
 12228                           
 12229                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 12230                           
 12231                           ; BSR set to: 57
 12232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12233                           ;incstack = 0
 12234  01DAC8  0139               	movlb	57	; () banked
 12235  01DACA  AB68               	btfss	104,5,b	;volatile
 12236  01DACC  D003               	goto	u10160
 12237  01DACE  6A01               	clrf	btemp^0,c
 12238  01DAD0  2A01               	incf	btemp^0,f,c
 12239  01DAD2  0012               	return	
 12240  01DAD4                     u10160:
 12241  01DAD4  6A01               	clrf	btemp^0,c
 12242                           
 12243                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12244  01DAD6  0012               	return		;funcret
 12245  01DAD8                     __end_of_CRC_IsBusy:
 12246                           	opt callstack 0
 12247                           
 12248 ;; *************** function _CRC_CalculatedResultGet *****************
 12249 ;; Defined at:
 12250 ;;		line 159 in file "mcc_generated_files/crc.c"
 12251 ;; Parameters:    Size  Location     Type
 12252 ;;  reverse         1  [STACK] _Bool 
 12253 ;;  xorValue        2  [STACK] unsigned short 
 12254 ;; Auto vars:     Size  Location     Type
 12255 ;;  result          2  [STACK] unsigned short 
 12256 ;;  mask            2  [STACK] unsigned short 
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  2  [STACK] unsigned short 
 12259 ;; Registers used:
 12260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/39
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12270 ;;Total ram usage:        0 bytes
 12271 ;; Hardware stack levels used:    1
 12272 ;; Hardware stack levels required when called:   16
 12273 ;; This function calls:
 12274 ;;		_CRC_ReverseValue
 12275 ;; This function is called by:
 12276 ;;		_read_cal_data
 12277 ;;		_write_cal_data
 12278 ;; This function uses a reentrant model
 12279 ;;
 12280                           
 12281                           	psect	text35
 12282  019D2A                     __ptext35:
 12283                           	opt callstack 0
 12284  019D2A                     _CRC_CalculatedResultGet:
 12285                           	opt callstack 0
 12286                           
 12287                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12288  019D2A  52E6               	movf	postinc1,f,c
 12289  019D2C  52E6               	movf	postinc1,f,c
 12290  019D2E  52E6               	movf	postinc1,f,c
 12291  019D30  52E6               	movf	postinc1,f,c
 12292                           
 12293                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 12294                           
 12295                           ;incstack = 0
 12296  019D32  0139               	movlb	57	; () banked
 12297  019D34  9D68               	bcf	104,6,b	;volatile
 12298                           
 12299                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 12300  019D36  9DA0               	bcf	160,6,b	;volatile
 12301                           
 12302                           ; BSR set to: 57
 12303                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 12304  019D38  5169               	movf	105,w,b	;volatile
 12305  019D3A  0B0F               	andlw	15
 12306  019D3C  6E0C               	movwf	(btemp+11)^0,c
 12307  019D3E  3A0C               	swapf	(btemp+11)^0,f,c
 12308  019D40  5169               	movf	105,w,b	;volatile
 12309  019D42  180C               	xorwf	(btemp+11)^0,w,c
 12310  019D44  0B0F               	andlw	-241
 12311  019D46  180C               	xorwf	(btemp+11)^0,w,c
 12312  019D48  6F69               	movwf	105,b	;volatile
 12313                           
 12314                           ; BSR set to: 57
 12315                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 12316  019D4A  0E08               	movlw	8
 12317  019D4C  0100               	movlb	0	; () banked
 12318  019D4E  65D6               	cpfsgt	(_crcObj+1)& (0+255),b
 12319  019D50  D003               	goto	l1282
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 12323  019D52  0139               	movlb	57	; () banked
 12324  019D54  6B61               	clrf	97,b	;volatile
 12325  019D56  D001               	goto	L9
 12326  019D58                     l1282:
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 12330  019D58  0139               	movlb	57	; () banked
 12331  019D5A                     L9:
 12332  019D5A  6B60               	clrf	96,b	;volatile
 12333                           
 12334                           ; BSR set to: 57
 12335                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 12336                           
 12337                           ;mcc_generated_files/crc.c: 176:      }
 12338  019D5C  8D68               	bsf	104,6,b	;volatile
 12339  019D5E                     l1284:
 12340                           
 12341                           ; BSR set to: 57
 12342  019D5E  ADA0               	btfss	160,6,b	;volatile
 12343  019D60  D7FE               	goto	l1284
 12344                           
 12345                           ; BSR set to: 57
 12346                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 12347  019D62  9DA0               	bcf	160,6,b	;volatile
 12348                           
 12349                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 12350  019D64  9D68               	bcf	104,6,b	;volatile
 12351                           
 12352                           ; BSR set to: 57
 12353                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 12354  019D66  0060  F354  F00C   	movff	_crcObj,btemp+11
 12355  019D6C  0EFF               	movlw	255
 12356  019D6E  260C               	addwf	(btemp+11)^0,f,c
 12357  019D70  3A0C               	swapf	(btemp+11)^0,f,c
 12358  019D72  5169               	movf	105,w,b	;volatile
 12359  019D74  180C               	xorwf	(btemp+11)^0,w,c
 12360  019D76  0B0F               	andlw	-241
 12361  019D78  180C               	xorwf	(btemp+11)^0,w,c
 12362  019D7A  6F69               	movwf	105,b	;volatile
 12363                           
 12364                           ; BSR set to: 57
 12365                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 12366  019D7C  5162               	movf	98,w,b	;volatile
 12367  019D7E  006E F58C  F001    	movff	14691,btemp	;volatile
 12368  019D84  6A02               	clrf	(btemp+1)^0,c
 12369  019D86  0060  F004  F002   	movff	btemp,btemp+1
 12370  019D8C  6A01               	clrf	btemp^0,c
 12371  019D8E  1201               	iorwf	btemp^0,f,c
 12372  019D90  0E00               	movlw	0
 12373  019D92  1202               	iorwf	(btemp+1)^0,f,c
 12374                           
 12375                           ;stkvar	_result @ sp[(-4)+0]
 12376  019D94  0EFC               	movlw	-4
 12377  019D96  0060  F007  FFE3   	movff	btemp,plusw1
 12378  019D9C  0EFD               	movlw	-3
 12379  019D9E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12380                           
 12381                           ; BSR set to: 57
 12382                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 12383  019DA4  0E10               	movlw	16
 12384  019DA6  0100               	movlb	0	; () banked
 12385  019DA8  61D6               	cpfslt	(_crcObj+1)& (0+255),b
 12386  019DAA  D03A               	goto	l10863
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 12390  019DAC  0EFF               	movlw	255
 12391  019DAE  6E0B               	movwf	(btemp+10)^0,c
 12392  019DB0  0EFF               	movlw	255
 12393  019DB2  6E0C               	movwf	(btemp+11)^0,c
 12394  019DB4  0060  F358  F00A   	movff	_crcObj+1,btemp+9
 12395  019DBA  0E01               	movlw	1
 12396  019DBC  6E07               	movwf	(btemp+6)^0,c
 12397  019DBE  0E00               	movlw	0
 12398  019DC0  6E08               	movwf	(btemp+7)^0,c
 12399  019DC2  2A0A               	incf	(btemp+9)^0,f,c
 12400  019DC4  D003               	goto	u10144
 12401  019DC6                     u10145:
 12402  019DC6  90D8               	bcf	status,0,c
 12403  019DC8  3607               	rlcf	(btemp+6)^0,f,c
 12404  019DCA  3608               	rlcf	(btemp+7)^0,f,c
 12405  019DCC                     u10144:
 12406  019DCC  2E0A               	decfsz	(btemp+9)^0,f,c
 12407  019DCE  D7FB               	goto	u10145
 12408  019DD0  500B               	movf	(btemp+10)^0,w,c
 12409  019DD2  2607               	addwf	(btemp+6)^0,f,c
 12410  019DD4  500C               	movf	(btemp+11)^0,w,c
 12411  019DD6  2208               	addwfc	(btemp+7)^0,f,c
 12412                           
 12413                           ;stkvar	_mask @ sp[(-4)+2]
 12414  019DD8  0EFE               	movlw	-2
 12415  019DDA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 12416  019DE0  0EFF               	movlw	-1
 12417  019DE2  0060  F023  FFE3   	movff	btemp+7,plusw1
 12418                           
 12419                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 12420                           ;stkvar	_mask @ sp[(-4)+2]
 12421  019DE8  0EFE               	movlw	-2
 12422  019DEA  006F FF8C  F00B    	movff	plusw1,btemp+10
 12423  019DF0  0EFF               	movlw	-1
 12424  019DF2  006F FF8C  F00C    	movff	plusw1,btemp+11
 12425                           
 12426                           ;stkvar	_result @ sp[(-4)+0]
 12427  019DF8  0EFC               	movlw	-4
 12428  019DFA  006F FF8C  F001    	movff	plusw1,btemp
 12429  019E00  500B               	movf	(btemp+10)^0,w,c
 12430  019E02  1601               	andwf	btemp^0,f,c
 12431  019E04  0EFC               	movlw	-4
 12432  019E06  0060  F007  FFE3   	movff	btemp,plusw1
 12433  019E0C  0EFD               	movlw	-3
 12434  019E0E  006F FF8C  F001    	movff	plusw1,btemp
 12435  019E14  500C               	movf	(btemp+11)^0,w,c
 12436  019E16  1601               	andwf	btemp^0,f,c
 12437  019E18  0EFD               	movlw	-3
 12438  019E1A  0060  F007  FFE3   	movff	btemp,plusw1
 12439  019E20                     l10863:
 12440                           
 12441                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 12442                           ;stkvar	_reverse @ sp[(-4)+-1]
 12443  019E20  0EFB               	movlw	-5
 12444  019E22  50E3               	movf	plusw1,w,c
 12445  019E24  B4D8               	btfsc	status,2,c
 12446  019E26  D011               	goto	l10867
 12447                           
 12448                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 12449                           ;stkvar	_result @ sp[(-4)+0]
 12450  019E28  0EFC               	movlw	-4
 12451  019E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 12452  019E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12453  019E36  EC1C  F0DB         	call	_CRC_ReverseValue	;wreg free
 12454                           
 12455                           ;stkvar	_result @ sp[(-4)+0]
 12456  019E3A  0EFC               	movlw	-4
 12457  019E3C  0060  F007  FFE3   	movff	btemp,plusw1
 12458  019E42  0EFD               	movlw	-3
 12459  019E44  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12460  019E4A                     l10867:
 12461                           
 12462                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 12463                           ;stkvar	_xorValue @ sp[(-4)+-3]
 12464  019E4A  0EF9               	movlw	-7
 12465  019E4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12466  019E52  0EFA               	movlw	-6
 12467  019E54  006F FF8C  F00C    	movff	plusw1,btemp+11
 12468                           
 12469                           ;stkvar	_result @ sp[(-4)+0]
 12470  019E5A  0EFC               	movlw	-4
 12471  019E5C  006F FF8C  F001    	movff	plusw1,btemp
 12472  019E62  500B               	movf	(btemp+10)^0,w,c
 12473  019E64  1A01               	xorwf	btemp^0,f,c
 12474  019E66  0EFC               	movlw	-4
 12475  019E68  0060  F007  FFE3   	movff	btemp,plusw1
 12476  019E6E  0EFD               	movlw	-3
 12477  019E70  006F FF8C  F001    	movff	plusw1,btemp
 12478  019E76  500C               	movf	(btemp+11)^0,w,c
 12479  019E78  1A01               	xorwf	btemp^0,f,c
 12480  019E7A  0EFD               	movlw	-3
 12481  019E7C  0060  F007  FFE3   	movff	btemp,plusw1
 12482                           
 12483                           ;mcc_generated_files/crc.c: 198:     return result;
 12484                           ;stkvar	_result @ sp[(-4)+0]
 12485  019E82  0EFC               	movlw	-4
 12486  019E84  006F FF8C  F001    	movff	plusw1,btemp
 12487  019E8A  0EFD               	movlw	-3
 12488  019E8C  006F FF8C  F002    	movff	plusw1,btemp+1
 12489                           
 12490                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 12491  019E92  0EF9               	movlw	249
 12492  019E94  26E1               	addwf	fsr1l,f,c
 12493  019E96  0EFF               	movlw	255
 12494  019E98  22E2               	addwfc	fsr1h,f,c
 12495  019E9A  0012               	return		;funcret
 12496  019E9C                     __end_of_CRC_CalculatedResultGet:
 12497                           	opt callstack 0
 12498                           
 12499 ;; *************** function _CRC_ReverseValue *****************
 12500 ;; Defined at:
 12501 ;;		line 138 in file "mcc_generated_files/crc.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;  crc             2  [STACK] unsigned short 
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;  mask            2  [STACK] unsigned short 
 12506 ;;  reverse         2  [STACK] unsigned short 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  2  [STACK] unsigned short 
 12509 ;; Registers used:
 12510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12520 ;;Total ram usage:        0 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:   15
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_CRC_CalculatedResultGet
 12527 ;; This function uses a reentrant model
 12528 ;;
 12529                           
 12530                           	psect	text36
 12531  01B638                     __ptext36:
 12532                           	opt callstack 0
 12533  01B638                     _CRC_ReverseValue:
 12534                           	opt callstack 0
 12535                           
 12536                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12537  01B638  52E6               	movf	postinc1,f,c
 12538  01B63A  52E6               	movf	postinc1,f,c
 12539  01B63C  52E6               	movf	postinc1,f,c
 12540  01B63E  52E6               	movf	postinc1,f,c
 12541                           
 12542                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 12543                           
 12544                           ;incstack = 0
 12545  01B640  0E01               	movlw	1
 12546  01B642  6E0B               	movwf	(btemp+10)^0,c
 12547  01B644  0E00               	movlw	0
 12548  01B646  6E0C               	movwf	(btemp+11)^0,c
 12549                           
 12550                           ;stkvar	_mask @ sp[(-4)+0]
 12551  01B648  0EFC               	movlw	-4
 12552  01B64A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12553  01B650  0EFD               	movlw	-3
 12554  01B652  0060  F033  FFE3   	movff	btemp+11,plusw1
 12555                           
 12556                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 12557  01B658  0060  F358  F00C   	movff	_crcObj+1,btemp+11
 12558  01B65E  0EFF               	movlw	255
 12559  01B660  260C               	addwf	(btemp+11)^0,f,c
 12560                           
 12561                           ;stkvar	_mask @ sp[(-4)+0]
 12562  01B662  50E1               	movf	fsr1l,w,c
 12563  01B664  0FFC               	addlw	-4
 12564  01B666  6ED9               	movwf	fsr2l,c
 12565  01B668  50E2               	movf	fsr1h,w,c
 12566  01B66A  6EDA               	movwf	fsr2h,c
 12567  01B66C  0EFF               	movlw	255
 12568  01B66E  22DA               	addwfc	fsr2h,f,c
 12569  01B670  280C               	incf	(btemp+11)^0,w,c
 12570  01B672  D003               	goto	u9750
 12571  01B674                     u9755:
 12572  01B674  90D8               	bcf	status,0,c
 12573  01B676  36DE               	rlcf	postinc2,f,c
 12574  01B678  36DD               	rlcf	postdec2,f,c
 12575  01B67A                     u9750:
 12576  01B67A  2EE8               	decfsz	wreg,f,c
 12577  01B67C  D7FB               	goto	u9755
 12578                           
 12579                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 12580                           ;stkvar	_reverse @ sp[(-4)+2]
 12581  01B67E  0EFE               	movlw	-2
 12582  01B680  6AE3               	clrf	plusw1,c
 12583  01B682  0EFF               	movlw	-1
 12584  01B684  6AE3               	clrf	plusw1,c
 12585                           
 12586                           ;mcc_generated_files/crc.c: 147:     while(crc)
 12587  01B686  D029               	goto	l10581
 12588  01B688                     l10573:
 12589                           
 12590                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 12591                           ;stkvar	_crc @ sp[(-4)+-2]
 12592  01B688  0EFA               	movlw	-6
 12593  01B68A  A0E3               	btfss	plusw1,0,c
 12594  01B68C  D01C               	goto	l10577
 12595                           
 12596                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 12597                           ;stkvar	_mask @ sp[(-4)+0]
 12598  01B68E  0EFC               	movlw	-4
 12599  01B690  006F FF8C  F00B    	movff	plusw1,btemp+10
 12600  01B696  0EFD               	movlw	-3
 12601  01B698  006F FF8C  F00C    	movff	plusw1,btemp+11
 12602                           
 12603                           ;stkvar	_reverse @ sp[(-4)+2]
 12604  01B69E  0EFE               	movlw	-2
 12605  01B6A0  006F FF8C  F001    	movff	plusw1,btemp
 12606  01B6A6  500B               	movf	(btemp+10)^0,w,c
 12607  01B6A8  1201               	iorwf	btemp^0,f,c
 12608  01B6AA  0EFE               	movlw	-2
 12609  01B6AC  0060  F007  FFE3   	movff	btemp,plusw1
 12610  01B6B2  0EFF               	movlw	-1
 12611  01B6B4  006F FF8C  F001    	movff	plusw1,btemp
 12612  01B6BA  500C               	movf	(btemp+11)^0,w,c
 12613  01B6BC  1201               	iorwf	btemp^0,f,c
 12614  01B6BE  0EFF               	movlw	-1
 12615  01B6C0  0060  F007  FFE3   	movff	btemp,plusw1
 12616  01B6C6                     l10577:
 12617                           
 12618                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 12619                           ;stkvar	_mask @ sp[(-4)+0]
 12620  01B6C6  90D8               	bcf	status,0,c
 12621  01B6C8  0EFD               	movlw	-3
 12622  01B6CA  32E3               	rrcf	plusw1,f,c
 12623  01B6CC  0EFC               	movlw	-4
 12624  01B6CE  32E3               	rrcf	plusw1,f,c
 12625                           
 12626                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 12627                           ;stkvar	_crc @ sp[(-4)+-2]
 12628  01B6D0  90D8               	bcf	status,0,c
 12629  01B6D2  0EFB               	movlw	-5
 12630  01B6D4  32E3               	rrcf	plusw1,f,c
 12631  01B6D6  0EFA               	movlw	-6
 12632  01B6D8  32E3               	rrcf	plusw1,f,c
 12633  01B6DA                     l10581:
 12634                           
 12635                           ;mcc_generated_files/crc.c: 147:     while(crc)
 12636                           ;stkvar	_crc @ sp[(-4)+-2]
 12637  01B6DA  0EFA               	movlw	-6
 12638  01B6DC  006F FF8C  F001    	movff	plusw1,btemp
 12639  01B6E2  0EFB               	movlw	-5
 12640  01B6E4  50E3               	movf	plusw1,w,c
 12641  01B6E6  1001               	iorwf	btemp^0,w,c
 12642  01B6E8  A4D8               	btfss	status,2,c
 12643  01B6EA  D7CE               	goto	l10573
 12644                           
 12645                           ;mcc_generated_files/crc.c: 156:     return reverse;
 12646                           ;stkvar	_reverse @ sp[(-4)+2]
 12647  01B6EC  0EFE               	movlw	-2
 12648  01B6EE  006F FF8C  F001    	movff	plusw1,btemp
 12649  01B6F4  0EFF               	movlw	-1
 12650  01B6F6  006F FF8C  F002    	movff	plusw1,btemp+1
 12651                           
 12652                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 12653  01B6FC  0EFA               	movlw	250
 12654  01B6FE  26E1               	addwf	fsr1l,f,c
 12655  01B700  0EFF               	movlw	255
 12656  01B702  22E2               	addwfc	fsr1h,f,c
 12657  01B704  0012               	return		;funcret
 12658  01B706                     __end_of_CRC_ReverseValue:
 12659                           	opt callstack 0
 12660                           
 12661 ;; *************** function _CRC_8BitDataWrite *****************
 12662 ;; Defined at:
 12663 ;;		line 125 in file "mcc_generated_files/crc.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;  data            1  [STACK] unsigned char 
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;		None
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  1  [STACK] _Bool 
 12670 ;; Registers used:
 12671 ;;		fsr1l, fsr1h
 12672 ;; Tracked objects:
 12673 ;;		On entry : 0/4
 12674 ;;		On exit  : 3F/39
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12681 ;;Total ram usage:        0 bytes
 12682 ;; Hardware stack levels used:    1
 12683 ;; Hardware stack levels required when called:   15
 12684 ;; This function calls:
 12685 ;;		Nothing
 12686 ;; This function is called by:
 12687 ;;		_read_cal_data
 12688 ;;		_write_cal_data
 12689 ;; This function uses a reentrant model
 12690 ;;
 12691                           
 12692                           	psect	text37
 12693  01DA84                     __ptext37:
 12694                           	opt callstack 0
 12695  01DA84                     _CRC_8BitDataWrite:
 12696                           	opt callstack 14
 12697                           
 12698                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 12699                           
 12700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12701                           ;incstack = 0
 12702  01DA84  0139               	movlb	57	; () banked
 12703  01DA86  B168               	btfsc	104,0,b	;volatile
 12704  01DA88  D004               	goto	l1271
 12705                           
 12706                           ; BSR set to: 57
 12707                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 12708                           ;stkvar	_data @ sp[(0)+-1]
 12709  01DA8A  0EFF               	movlw	-1
 12710  01DA8C  006F FF8F F960     	movff	plusw1,14688	;volatile
 12711  01DA92                     l1271:
 12712                           
 12713                           ; BSR set to: 57
 12714                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12715  01DA92  52E5               	movf	postdec1,f,c
 12716  01DA94  0012               	return		;funcret
 12717  01DA96                     __end_of_CRC_8BitDataWrite:
 12718                           	opt callstack 0
 12719                           
 12720 ;; *************** function _start_adc_scan *****************
 12721 ;; Defined at:
 12722 ;;		line 70 in file "daq.c"
 12723 ;; Parameters:    Size  Location     Type
 12724 ;;		None
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;		None
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  1  [STACK] _Bool 
 12729 ;; Registers used:
 12730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/0
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12740 ;;Total ram usage:        0 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:   16
 12743 ;; This function calls:
 12744 ;;		_ADCC_DischargeSampleCapacitor
 12745 ;;		_ADCC_SetADIInterruptHandler
 12746 ;;		_ADCC_SetADTIInterruptHandler
 12747 ;;		_ADCC_StartConversion
 12748 ;; This function is called by:
 12749 ;;		_main
 12750 ;;		_current_sensor_cal
 12751 ;;		_update_adc_result
 12752 ;; This function uses a reentrant model
 12753 ;;
 12754                           
 12755                           	psect	text38
 12756  01C8F0                     __ptext38:
 12757                           	opt callstack 0
 12758  01C8F0                     _start_adc_scan:
 12759                           	opt callstack 14
 12760                           
 12761                           ;daq.c: 72:  if (R.done)
 12762                           
 12763                           ; BSR set to: 57
 12764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12765                           ;incstack = 0
 12766  01C8F0  0101               	movlb	1	; () banked
 12767  01C8F2  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 12768  01C8F4  A4D8               	btfss	status,2,c
 12769  01C8F6  0012               	return	
 12770                           
 12771                           ; BSR set to: 1
 12772                           ;daq.c: 75:  R.scan_index = 0;
 12773  01C8F8  6B39               	clrf	(_R+50)& (0+255),b	;volatile
 12774                           
 12775                           ; BSR set to: 1
 12776                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 12777  01C8FA  013A               	movlb	58	; () banked
 12778  01C8FC  5140               	movf	64,w,b	;volatile
 12779  01C8FE  006E F940  F001    	movff	14928,btemp	;volatile
 12780  01C904  6A02               	clrf	(btemp+1)^0,c
 12781  01C906  0060  F004  F002   	movff	btemp,btemp+1
 12782  01C90C  6A01               	clrf	btemp^0,c
 12783  01C90E  2601               	addwf	btemp^0,f,c
 12784  01C910  0E00               	movlw	0
 12785  01C912  2202               	addwfc	(btemp+1)^0,f,c
 12786  01C914  0E77               	movlw	119
 12787  01C916  1401               	andwf	btemp^0,w,c
 12788  01C918  0101               	movlb	1	; () banked
 12789  01C91A  6F3A               	movwf	(_R+51)& (0+255),b	;volatile
 12790  01C91C  0E3C               	movlw	60
 12791  01C91E  1402               	andwf	(btemp+1)^0,w,c
 12792  01C920  6F3B               	movwf	(_R+52)& (0+255),b	;volatile
 12793                           
 12794                           ; BSR set to: 1
 12795                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 12796  01C922  0EDA               	movlw	low _adc_int_handler
 12797  01C924  6EE6               	movwf	postinc1,c
 12798  01C926  0EDB               	movlw	high _adc_int_handler
 12799  01C928  6EE6               	movwf	postinc1,c
 12800  01C92A  0E01               	movlw	low (_adc_int_handler shr (0+16))
 12801  01C92C  6EE6               	movwf	postinc1,c
 12802  01C92E  EC89  F0EB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12803                           
 12804                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 12805  01C932  0E82               	movlw	low _adc_int_t_handler
 12806  01C934  6EE6               	movwf	postinc1,c
 12807  01C936  0EC4               	movlw	high _adc_int_t_handler
 12808  01C938  6EE6               	movwf	postinc1,c
 12809  01C93A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 12810  01C93C  6EE6               	movwf	postinc1,c
 12811  01C93E  EC75  F0EB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12812                           
 12813                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 12814  01C942  ECC6  F0ED         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 12815                           
 12816                           ; BSR set to: 62
 12817                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 12818  01C946  0101               	movlb	1	; () banked
 12819  01C948  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 12820  01C94A  0B0F               	andlw	15
 12821  01C94C  6EE6               	movwf	postinc1,c
 12822  01C94E  EC4B  F0ED         	call	_ADCC_StartConversion	;wreg free
 12823                           
 12824                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12825  01C952  0012               	return		;funcret
 12826  01C954                     __end_of_start_adc_scan:
 12827                           	opt callstack 0
 12828                           
 12829 ;; *************** function _ADCC_StartConversion *****************
 12830 ;; Defined at:
 12831 ;;		line 128 in file "mcc_generated_files/adcc.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;  channel         1  [STACK] enum E16136
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;		None
 12836 ;; Return value:  Size  Location     Type
 12837 ;;                  1  [STACK] void 
 12838 ;; Registers used:
 12839 ;;		fsr1l, fsr1h
 12840 ;; Tracked objects:
 12841 ;;		On entry : 3F/1
 12842 ;;		On exit  : 3F/3E
 12843 ;;		Unchanged: 0/0
 12844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12849 ;;Total ram usage:        0 bytes
 12850 ;; Hardware stack levels used:    1
 12851 ;; Hardware stack levels required when called:   15
 12852 ;; This function calls:
 12853 ;;		Nothing
 12854 ;; This function is called by:
 12855 ;;		_start_adc_scan
 12856 ;;		_adc_int_t_handler
 12857 ;; This function uses a reentrant model
 12858 ;;
 12859                           
 12860                           	psect	text39
 12861  01DA96                     __ptext39:
 12862                           	opt callstack 0
 12863  01DA96                     _ADCC_StartConversion:
 12864                           	opt callstack 0
 12865                           
 12866                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 12867                           ;stkvar	_channel @ sp[(0)+-1]
 12868                           
 12869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12870                           ;incstack = 0
 12871 ;; hardware stack exceeded
 12872  01DA96  0EFF               	movlw	-1
 12873  01DA98  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 12874                           
 12875                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 12876  01DA9E  013E               	movlb	62	; () banked
 12877  01DAA0  8FF8               	bsf	248,7,b	;volatile
 12878                           
 12879                           ; BSR set to: 62
 12880                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 12881  01DAA2  81F8               	bsf	248,0,b	;volatile
 12882                           
 12883                           ; BSR set to: 62
 12884                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 12885  01DAA4  52E5               	movf	postdec1,f,c
 12886  01DAA6  0012               	return		;funcret
 12887  01DAA8                     __end_of_ADCC_StartConversion:
 12888                           	opt callstack 0
 12889                           
 12890 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 12891 ;; Defined at:
 12892 ;;		line 189 in file "mcc_generated_files/adcc.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;		None
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;		None
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  1  [STACK] void 
 12899 ;; Registers used:
 12900 ;;		wreg, status,2
 12901 ;; Tracked objects:
 12902 ;;		On entry : 0/1
 12903 ;;		On exit  : 3F/3E
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12910 ;;Total ram usage:        0 bytes
 12911 ;; Hardware stack levels used:    1
 12912 ;; Hardware stack levels required when called:   15
 12913 ;; This function calls:
 12914 ;;		Nothing
 12915 ;; This function is called by:
 12916 ;;		_start_adc_scan
 12917 ;;		_adc_int_t_handler
 12918 ;; This function uses a reentrant model
 12919 ;;
 12920                           
 12921                           	psect	text40
 12922  01DB8C                     __ptext40:
 12923                           	opt callstack 0
 12924  01DB8C                     _ADCC_DischargeSampleCapacitor:
 12925                           	opt callstack 0
 12926                           
 12927                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 12928                           
 12929                           ; BSR set to: 62
 12930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12931                           ;incstack = 0
 12932 ;; hardware stack exceeded
 12933  01DB8C  0E3B               	movlw	59
 12934  01DB8E  013E               	movlb	62	; () banked
 12935  01DB90  6FF1               	movwf	241,b	;volatile
 12936                           
 12937                           ; BSR set to: 62
 12938                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 12939  01DB92  0012               	return		;funcret
 12940  01DB94                     __end_of_ADCC_DischargeSampleCapacitor:
 12941                           	opt callstack 0
 12942                           
 12943 ;; *************** function _spinners *****************
 12944 ;; Defined at:
 12945 ;;		line 146 in file "mbmc.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  shape           1  [STACK] unsigned char 
 12948 ;;  reset           1  [STACK] const unsigned char 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  c               1  [STACK] unsigned char 
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  1  [STACK] unsigned char 
 12953 ;; Registers used:
 12954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12964 ;;Total ram usage:        0 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:   16
 12967 ;; This function calls:
 12968 ;;		_strlen
 12969 ;; This function is called by:
 12970 ;;		_main
 12971 ;;		_current_sensor_cal
 12972 ;; This function uses a reentrant model
 12973 ;;
 12974                           
 12975                           	psect	text41
 12976  01B2C4                     __ptext41:
 12977                           	opt callstack 0
 12978  01B2C4                     _spinners:
 12979                           	opt callstack 0
 12980                           
 12981                           ; BSR set to: 62
 12982                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12983  01B2C4  52E6               	movf	postinc1,f,c
 12984                           
 12985                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 12986                           ;stkvar	_shape @ sp[(-1)+-1]
 12987                           
 12988                           ;incstack = 0
 12989  01B2C6  0EFE               	movlw	-2
 12990  01B2C8  006F FF8C  F001    	movff	plusw1,btemp
 12991  01B2CE  0E05               	movlw	5
 12992  01B2D0  6401               	cpfsgt	btemp^0,c
 12993  01B2D2  D002               	goto	l2158
 12994                           
 12995                           ;mbmc.c: 152:   shape = 0;
 12996                           ;stkvar	_shape @ sp[(-1)+-1]
 12997  01B2D4  0EFE               	movlw	-2
 12998  01B2D6  6AE3               	clrf	plusw1,c
 12999  01B2D8                     l2158:
 13000                           
 13001                           ;mbmc.c: 153:  if (reset)
 13002                           ;stkvar	_reset @ sp[(-1)+-2]
 13003  01B2D8  0EFD               	movlw	-3
 13004  01B2DA  50E3               	movf	plusw1,w,c
 13005  01B2DC  B4D8               	btfsc	status,2,c
 13006  01B2DE  D00A               	goto	l14299
 13007                           
 13008                           ;mbmc.c: 154:   s[shape] = 0;
 13009                           ;stkvar	_shape @ sp[(-1)+-1]
 13010  01B2E0  0EFE               	movlw	-2
 13011  01B2E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 13012  01B2E8  500C               	movf	(btemp+11)^0,w,c
 13013  01B2EA  0F74               	addlw	low spinners@s
 13014  01B2EC  6ED9               	movwf	fsr2l,c
 13015  01B2EE  6ADA               	clrf	fsr2h,c
 13016  01B2F0  0E00               	movlw	0
 13017  01B2F2  6EDF               	movwf	indf2,c
 13018  01B2F4                     l14299:
 13019                           
 13020                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 13021                           ;stkvar	_shape @ sp[(-1)+-1]
 13022  01B2F4  0EFE               	movlw	-2
 13023  01B2F6  50E3               	movf	plusw1,w,c
 13024  01B2F8  0D14               	mullw	20
 13025  01B2FA  0EDD               	movlw	low _spin
 13026  01B2FC  6E0B               	movwf	(btemp+10)^0,c
 13027  01B2FE  0EF9               	movlw	high _spin
 13028  01B300  6E0C               	movwf	(btemp+11)^0,c
 13029  01B302  50F3               	movf	243,w,c
 13030  01B304  260B               	addwf	(btemp+10)^0,f,c
 13031  01B306  50F4               	movf	244,w,c
 13032  01B308  220C               	addwfc	(btemp+11)^0,f,c
 13033                           
 13034                           ;stkvar	_shape @ sp[(-1)+-1]
 13035  01B30A  0EFE               	movlw	-2
 13036  01B30C  006F FF8C  F00A    	movff	plusw1,btemp+9
 13037  01B312  500A               	movf	(btemp+9)^0,w,c
 13038  01B314  0F74               	addlw	low spinners@s
 13039  01B316  6ED9               	movwf	fsr2l,c
 13040  01B318  6ADA               	clrf	fsr2h,c
 13041  01B31A  50DF               	movf	indf2,w,c
 13042  01B31C  260B               	addwf	(btemp+10)^0,f,c
 13043  01B31E  0E00               	movlw	0
 13044  01B320  220C               	addwfc	(btemp+11)^0,f,c
 13045  01B322  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13046  01B328  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13047  01B32E                     	if	0	;tblptru may be non-zero
 13048  01B32E                     	endif
 13049  01B32E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13050  01B32E  0E00               	movlw	low (__mediumconst shr (0+16))
 13051  01B330  6EF8               	movwf	tblptru,c
 13052  01B332                     	endif
 13053                           
 13054                           ;stkvar	_c @ sp[(-1)+0]
 13055  01B332  0008               	tblrd		*
 13056  01B334  0EFF               	movlw	-1
 13057  01B336  006F FFD7 FFE3     	movff	tablat,plusw1
 13058                           
 13059                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 13060                           ;stkvar	_shape @ sp[(-1)+-1]
 13061  01B33C  0EFE               	movlw	-2
 13062  01B33E  50E3               	movf	plusw1,w,c
 13063  01B340  0D14               	mullw	20
 13064  01B342  0EDD               	movlw	low _spin
 13065  01B344  6E0B               	movwf	(btemp+10)^0,c
 13066  01B346  0EF9               	movlw	high _spin
 13067  01B348  6E0C               	movwf	(btemp+11)^0,c
 13068  01B34A  50F3               	movf	243,w,c
 13069  01B34C  260B               	addwf	(btemp+10)^0,f,c
 13070  01B34E  50F4               	movf	244,w,c
 13071  01B350  220C               	addwfc	(btemp+11)^0,f,c
 13072  01B352  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13073  01B358  0060  F033  FFE6   	movff	btemp+11,postinc1
 13074  01B35E  ECB8  F0DF         	call	_strlen	;wreg free
 13075                           
 13076                           ;stkvar	_shape @ sp[(-1)+-1]
 13077  01B362  0EFE               	movlw	-2
 13078  01B364  006F FF8C  F00C    	movff	plusw1,btemp+11
 13079  01B36A  500C               	movf	(btemp+11)^0,w,c
 13080  01B36C  0F74               	addlw	low spinners@s
 13081  01B36E  6ED9               	movwf	fsr2l,c
 13082  01B370  6ADA               	clrf	fsr2h,c
 13083  01B372  2ADF               	incf	indf2,f,c
 13084  01B374  50DF               	movf	indf2,w,c
 13085  01B376  6E0B               	movwf	(btemp+10)^0,c
 13086  01B378  6A0C               	clrf	(btemp+11)^0,c
 13087  01B37A  5001               	movf	btemp^0,w,c
 13088  01B37C  5C0B               	subwf	(btemp+10)^0,w,c
 13089  01B37E  5002               	movf	(btemp+1)^0,w,c
 13090  01B380  580C               	subwfb	(btemp+11)^0,w,c
 13091  01B382  A0D8               	btfss	status,0,c
 13092  01B384  D00A               	goto	l14305
 13093                           
 13094                           ;mbmc.c: 157:   s[shape] = 0;
 13095                           ;stkvar	_shape @ sp[(-1)+-1]
 13096  01B386  0EFE               	movlw	-2
 13097  01B388  006F FF8C  F00C    	movff	plusw1,btemp+11
 13098  01B38E  500C               	movf	(btemp+11)^0,w,c
 13099  01B390  0F74               	addlw	low spinners@s
 13100  01B392  6ED9               	movwf	fsr2l,c
 13101  01B394  6ADA               	clrf	fsr2h,c
 13102  01B396  0E00               	movlw	0
 13103  01B398  6EDF               	movwf	indf2,c
 13104  01B39A                     l14305:
 13105                           
 13106                           ;mbmc.c: 158:  return c;
 13107                           ;stkvar	_c @ sp[(-1)+0]
 13108  01B39A  0EFF               	movlw	-1
 13109  01B39C  006F FF8C  F001    	movff	plusw1,btemp
 13110                           
 13111                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 13112  01B3A2  52E5               	movf	postdec1,f,c
 13113  01B3A4  52E5               	movf	postdec1,f,c
 13114  01B3A6  52E5               	movf	postdec1,f,c
 13115  01B3A8  0012               	return		;funcret
 13116  01B3AA                     __end_of_spinners:
 13117                           	opt callstack 0
 13118                           
 13119 ;; *************** function _get_switch *****************
 13120 ;; Defined at:
 13121 ;;		line 18 in file "dio.c"
 13122 ;; Parameters:    Size  Location     Type
 13123 ;;  i               1  [STACK] const unsigned char 
 13124 ;; Auto vars:     Size  Location     Type
 13125 ;;		None
 13126 ;; Return value:  Size  Location     Type
 13127 ;;                  1  [STACK] enum E17187
 13128 ;; Registers used:
 13129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 13130 ;; Tracked objects:
 13131 ;;		On entry : 0/0
 13132 ;;		On exit  : 0/0
 13133 ;;		Unchanged: 0/0
 13134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13139 ;;Total ram usage:        0 bytes
 13140 ;; Hardware stack levels used:    1
 13141 ;; Hardware stack levels required when called:   15
 13142 ;; This function calls:
 13143 ;;		Nothing
 13144 ;; This function is called by:
 13145 ;;		_main
 13146 ;;		_current_sensor_cal
 13147 ;;		_hid_input
 13148 ;; This function uses a reentrant model
 13149 ;;
 13150                           
 13151                           	psect	text42
 13152  01D4AA                     __ptext42:
 13153                           	opt callstack 0
 13154  01D4AA                     _get_switch:
 13155                           	opt callstack 13
 13156                           
 13157                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 13158                           ;stkvar	_i @ sp[(0)+-1]
 13159                           
 13160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13161                           ;incstack = 0
 13162  01D4AA  0EFF               	movlw	-1
 13163  01D4AC  006F FF8C  F001    	movff	plusw1,btemp
 13164  01D4B2  0E05               	movlw	5
 13165  01D4B4  6401               	cpfsgt	btemp^0,c
 13166  01D4B6  D002               	goto	l10933
 13167                           
 13168                           ;dio.c: 21:   return SW_OFF;
 13169  01D4B8  0E00               	movlw	0
 13170  01D4BA  D00A               	goto	L10
 13171  01D4BC                     l10933:
 13172                           
 13173                           ;dio.c: 23:  return S.button[i].sw;
 13174                           ;stkvar	_i @ sp[(0)+-1]
 13175  01D4BC  0EFF               	movlw	-1
 13176  01D4BE  50E3               	movf	plusw1,w,c
 13177  01D4C0  0D05               	mullw	5
 13178  01D4C2  0EAE               	movlw	low _S
 13179  01D4C4  24F3               	addwf	243,w,c
 13180  01D4C6  6ED9               	movwf	fsr2l,c
 13181  01D4C8  0E01               	movlw	high _S
 13182  01D4CA  20F4               	addwfc	prodh,w,c
 13183  01D4CC  6EDA               	movwf	fsr2h,c
 13184  01D4CE  50DF               	movf	indf2,w,c
 13185  01D4D0                     L10:
 13186  01D4D0  6E01               	movwf	btemp^0,c
 13187                           
 13188                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13189  01D4D2  52E5               	movf	postdec1,f,c
 13190  01D4D4  0012               	return		;funcret
 13191  01D4D6                     __end_of_get_switch:
 13192                           	opt callstack 0
 13193                           
 13194 ;; *************** function _clear_switch *****************
 13195 ;; Defined at:
 13196 ;;		line 49 in file "dio.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;  i               1  [STACK] const unsigned char 
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;		None
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  1  [STACK] void 
 13203 ;; Registers used:
 13204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13214 ;;Total ram usage:        0 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:   15
 13217 ;; This function calls:
 13218 ;;		Nothing
 13219 ;; This function is called by:
 13220 ;;		_current_sensor_cal
 13221 ;; This function uses a reentrant model
 13222 ;;
 13223                           
 13224                           	psect	text43
 13225  01CC80                     __ptext43:
 13226                           	opt callstack 0
 13227  01CC80                     _clear_switch:
 13228                           	opt callstack 14
 13229                           
 13230                           ;dio.c: 49: void clear_switch(const uint8_t i);dio.c: 50: {;dio.c: 51:  if (i >= 6)
 13231                           ;stkvar	_i @ sp[(0)+-1]
 13232                           
 13233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13234                           ;incstack = 0
 13235  01CC80  0EFF               	movlw	-1
 13236  01CC82  006F FF8C  F001    	movff	plusw1,btemp
 13237  01CC88  0E05               	movlw	5
 13238  01CC8A  6401               	cpfsgt	btemp^0,c
 13239  01CC8C  D001               	goto	l11547
 13240  01CC8E  D01D               	goto	l2209
 13241  01CC90                     l11547:
 13242                           
 13243                           ;dio.c: 54:  S.button[i].count = 0;
 13244                           ;stkvar	_i @ sp[(0)+-1]
 13245  01CC90  0EFF               	movlw	-1
 13246  01CC92  50E3               	movf	plusw1,w,c
 13247  01CC94  0D05               	mullw	5
 13248  01CC96  0EAF               	movlw	low (_S+1)
 13249  01CC98  24F3               	addwf	243,w,c
 13250  01CC9A  6ED9               	movwf	fsr2l,c
 13251  01CC9C  0E01               	movlw	high (_S+1)
 13252  01CC9E  20F4               	addwfc	prodh,w,c
 13253  01CCA0  6EDA               	movwf	fsr2h,c
 13254  01CCA2  6ADE               	clrf	postinc2,c
 13255  01CCA4  6ADE               	clrf	postinc2,c
 13256  01CCA6  6ADE               	clrf	postinc2,c
 13257  01CCA8  6ADD               	clrf	postdec2,c
 13258                           
 13259                           ;dio.c: 55:  S.sw_bitmap &= ~(1 << i);
 13260                           ;stkvar	_i @ sp[(0)+-1]
 13261  01CCAA  0EFF               	movlw	-1
 13262  01CCAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13263  01CCB2  0E01               	movlw	1
 13264  01CCB4  6E0B               	movwf	(btemp+10)^0,c
 13265  01CCB6  2A0C               	incf	(btemp+11)^0,f,c
 13266  01CCB8  D002               	goto	u10484
 13267  01CCBA                     u10485:
 13268  01CCBA  90D8               	bcf	status,0,c
 13269  01CCBC  360B               	rlcf	(btemp+10)^0,f,c
 13270  01CCBE                     u10484:
 13271  01CCBE  2E0C               	decfsz	(btemp+11)^0,f,c
 13272  01CCC0  D7FC               	goto	u10485
 13273  01CCC2  500B               	movf	(btemp+10)^0,w,c
 13274  01CCC4  0AFF               	xorlw	255
 13275  01CCC6  0101               	movlb	1	; () banked
 13276  01CCC8  17D6               	andwf	(_S+40)& (0+255),f,b	;volatile
 13277  01CCCA                     l2209:
 13278                           
 13279                           ; _clear_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 13280  01CCCA  52E5               	movf	postdec1,f,c
 13281  01CCCC  0012               	return		;funcret
 13282  01CCCE                     __end_of_clear_switch:
 13283                           	opt callstack 0
 13284                           
 13285 ;; *************** function _clear_adc_scan *****************
 13286 ;; Defined at:
 13287 ;;		line 101 in file "daq.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;		None
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;		None
 13292 ;; Return value:  Size  Location     Type
 13293 ;;                  1  [STACK] void 
 13294 ;; Registers used:
 13295 ;;		None
 13296 ;; Tracked objects:
 13297 ;;		On entry : 0/0
 13298 ;;		On exit  : 3F/1
 13299 ;;		Unchanged: 0/0
 13300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13305 ;;Total ram usage:        0 bytes
 13306 ;; Hardware stack levels used:    1
 13307 ;; Hardware stack levels required when called:   15
 13308 ;; This function calls:
 13309 ;;		Nothing
 13310 ;; This function is called by:
 13311 ;;		_main
 13312 ;;		_current_sensor_cal
 13313 ;;		_update_adc_result
 13314 ;; This function uses a reentrant model
 13315 ;;
 13316                           
 13317                           	psect	text44
 13318  01DBB2                     __ptext44:
 13319                           	opt callstack 0
 13320  01DBB2                     _clear_adc_scan:
 13321                           	opt callstack 13
 13322                           
 13323                           ;daq.c: 103:  R.done = 0;
 13324                           
 13325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13326                           ;incstack = 0
 13327  01DBB2  0101               	movlb	1	; () banked
 13328  01DBB4  6B3C               	clrf	(_R+53)& (0+255),b	;volatile
 13329                           
 13330                           ; BSR set to: 1
 13331                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13332  01DBB6  0012               	return		;funcret
 13333  01DBB8                     __end_of_clear_adc_scan:
 13334                           	opt callstack 0
 13335                           
 13336 ;; *************** function _cal_current_zero *****************
 13337 ;; Defined at:
 13338 ;;		line 327 in file "daq.c"
 13339 ;; Parameters:    Size  Location     Type
 13340 ;;  mode            1  [STACK] const _Bool 
 13341 ;;  cb              2  [STACK] const short 
 13342 ;;  cp              2  [STACK] const short 
 13343 ;; Auto vars:     Size  Location     Type
 13344 ;;		None
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  1  [STACK] _Bool 
 13347 ;; Registers used:
 13348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 13349 ;; Tracked objects:
 13350 ;;		On entry : 0/1
 13351 ;;		On exit  : 0/0
 13352 ;;		Unchanged: 0/0
 13353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13358 ;;Total ram usage:        0 bytes
 13359 ;; Hardware stack levels used:    1
 13360 ;; Hardware stack levels required when called:   16
 13361 ;; This function calls:
 13362 ;;		_check_range
 13363 ;; This function is called by:
 13364 ;;		_current_sensor_cal
 13365 ;; This function uses a reentrant model
 13366 ;;
 13367                           
 13368                           	psect	text45
 13369  01C0AA                     __ptext45:
 13370                           	opt callstack 0
 13371  01C0AA                     _cal_current_zero:
 13372                           	opt callstack 13
 13373                           
 13374                           ;daq.c: 327: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 328: {;daq.c: 330:  if (!check_range(cb, 100, 4000))
 13375                           
 13376                           ; BSR set to: 1
 13377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13378                           ;incstack = 0
 13379  01C0AA  0EA0               	movlw	160
 13380  01C0AC  6EE6               	movwf	postinc1,c
 13381  01C0AE  0E0F               	movlw	15
 13382  01C0B0  6EE6               	movwf	postinc1,c
 13383  01C0B2  0E64               	movlw	100
 13384  01C0B4  6EE6               	movwf	postinc1,c
 13385  01C0B6  0E00               	movlw	0
 13386  01C0B8  6EE6               	movwf	postinc1,c
 13387                           
 13388                           ;stkvar	_cb @ sp[(-4)+-3]
 13389  01C0BA  0EF9               	movlw	-7
 13390  01C0BC  006F FF8F FFE6     	movff	plusw1,postinc1
 13391  01C0C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13392  01C0C8  EC82  F0E2         	call	_check_range	;wreg free
 13393  01C0CC  5001               	movf	btemp^0,w,c
 13394  01C0CE  A4D8               	btfss	status,2,c
 13395  01C0D0  D002               	goto	l11497
 13396  01C0D2                     u10420:
 13397                           
 13398                           ;daq.c: 331:   return 0;
 13399  01C0D2  0E00               	movlw	0
 13400  01C0D4  D019               	goto	L11
 13401  01C0D6                     l11497:
 13402                           
 13403                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 13404  01C0D6  0EA0               	movlw	160
 13405  01C0D8  6EE6               	movwf	postinc1,c
 13406  01C0DA  0E0F               	movlw	15
 13407  01C0DC  6EE6               	movwf	postinc1,c
 13408  01C0DE  0E64               	movlw	100
 13409  01C0E0  6EE6               	movwf	postinc1,c
 13410  01C0E2  0E00               	movlw	0
 13411  01C0E4  6EE6               	movwf	postinc1,c
 13412                           
 13413                           ;stkvar	_cp @ sp[(-4)+-5]
 13414  01C0E6  0EF7               	movlw	-9
 13415  01C0E8  006F FF8F FFE6     	movff	plusw1,postinc1
 13416  01C0EE  006F FF8F FFE6     	movff	plusw1,postinc1
 13417  01C0F4  EC82  F0E2         	call	_check_range	;wreg free
 13418  01C0F8  5001               	movf	btemp^0,w,c
 13419  01C0FA  B4D8               	btfsc	status,2,c
 13420  01C0FC  D7EA               	goto	u10420
 13421                           
 13422                           ;daq.c: 336:  if (!mode)
 13423                           ;stkvar	_mode @ sp[(0)+-1]
 13424  01C0FE  0EFF               	movlw	-1
 13425  01C100  50E3               	movf	plusw1,w,c
 13426  01C102  A4D8               	btfss	status,2,c
 13427  01C104  D003               	goto	l11509
 13428  01C106                     u10440:
 13429                           
 13430                           ;daq.c: 337:   return 1;
 13431  01C106  0E01               	movlw	1
 13432  01C108                     L11:
 13433  01C108  6E01               	movwf	btemp^0,c
 13434  01C10A  D013               	goto	l2042
 13435  01C10C                     l11509:
 13436                           
 13437                           ;daq.c: 339:  R.n_offset[0] = cb;
 13438                           ;stkvar	_cb @ sp[(0)+-3]
 13439  01C10C  0EFD               	movlw	-3
 13440  01C10E  006F FF8C  F12D    	movff	plusw1,_R+38	;volatile
 13441  01C114  0EFE               	movlw	-2
 13442  01C116  006F FF8C  F12E    	movff	plusw1,_R+39	;volatile
 13443                           
 13444                           ;daq.c: 340:  R.n_offset[1] = cp;
 13445                           ;stkvar	_cp @ sp[(0)+-5]
 13446  01C11C  0EFB               	movlw	-5
 13447  01C11E  006F FF8C  F12F    	movff	plusw1,_R+40	;volatile
 13448  01C124  0EFC               	movlw	-4
 13449  01C126  006F FF8C  F130    	movff	plusw1,_R+41	;volatile
 13450                           
 13451                           ;daq.c: 341:  R.c_zero_cal = 1;
 13452  01C12C  0101               	movlb	1	; () banked
 13453  01C12E  83AA               	bsf	(_R+163)& (0+255),1,b	;volatile
 13454  01C130  D7EA               	goto	u10440
 13455  01C132                     l2042:
 13456                           
 13457                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 13458  01C132  0EFB               	movlw	251
 13459  01C134  26E1               	addwf	fsr1l,f,c
 13460  01C136  0EFF               	movlw	255
 13461  01C138  22E2               	addwfc	fsr1h,f,c
 13462  01C13A  0012               	return		;funcret
 13463  01C13C                     __end_of_cal_current_zero:
 13464                           	opt callstack 0
 13465                           
 13466 ;; *************** function _cal_current_10A *****************
 13467 ;; Defined at:
 13468 ;;		line 348 in file "daq.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;  mode            1  [STACK] const _Bool 
 13471 ;;  cb              2  [STACK] const short 
 13472 ;;  cp              2  [STACK] const short 
 13473 ;;  scaleb          4  [STACK] const float 
 13474 ;;  scalep          4  [STACK] const float 
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1  [STACK] _Bool 
 13479 ;; Registers used:
 13480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/1
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13490 ;;Total ram usage:        0 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; Hardware stack levels required when called:   16
 13493 ;; This function calls:
 13494 ;;		_check_range
 13495 ;; This function is called by:
 13496 ;;		_current_sensor_cal
 13497 ;; This function uses a reentrant model
 13498 ;;
 13499                           
 13500                           	psect	text46
 13501  01B88A                     __ptext46:
 13502                           	opt callstack 0
 13503  01B88A                     _cal_current_10A:
 13504                           	opt callstack 13
 13505                           
 13506                           ;daq.c: 348: _Bool cal_current_10A(const _Bool mode, const int16_t cb, const int16_t cp,
      +                           const float scaleb, const float scalep);daq.c: 349: {;daq.c: 350:  if (!check_range(cb,
      +                           100, 4050))
 13507                           
 13508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 13, argsize = 13 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13509                           ;incstack = 0
 13510  01B88A  0ED2               	movlw	210
 13511  01B88C  6EE6               	movwf	postinc1,c
 13512  01B88E  0E0F               	movlw	15
 13513  01B890  6EE6               	movwf	postinc1,c
 13514  01B892  0E64               	movlw	100
 13515  01B894  6EE6               	movwf	postinc1,c
 13516  01B896  0E00               	movlw	0
 13517  01B898  6EE6               	movwf	postinc1,c
 13518                           
 13519                           ;stkvar	_cb @ sp[(-4)+-3]
 13520  01B89A  0EF9               	movlw	-7
 13521  01B89C  006F FF8F FFE6     	movff	plusw1,postinc1
 13522  01B8A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13523  01B8A8  EC82  F0E2         	call	_check_range	;wreg free
 13524  01B8AC  5001               	movf	btemp^0,w,c
 13525  01B8AE  A4D8               	btfss	status,2,c
 13526  01B8B0  D002               	goto	l11557
 13527  01B8B2                     u10490:
 13528                           
 13529                           ;daq.c: 351:   return 0;
 13530  01B8B2  0E00               	movlw	0
 13531  01B8B4  D019               	goto	L12
 13532  01B8B6                     l11557:
 13533                           
 13534                           ;daq.c: 353:  if (!check_range(cp, 100, 4278))
 13535  01B8B6  0EB6               	movlw	182
 13536  01B8B8  6EE6               	movwf	postinc1,c
 13537  01B8BA  0E10               	movlw	16
 13538  01B8BC  6EE6               	movwf	postinc1,c
 13539  01B8BE  0E64               	movlw	100
 13540  01B8C0  6EE6               	movwf	postinc1,c
 13541  01B8C2  0E00               	movlw	0
 13542  01B8C4  6EE6               	movwf	postinc1,c
 13543                           
 13544                           ;stkvar	_cp @ sp[(-4)+-5]
 13545  01B8C6  0EF7               	movlw	-9
 13546  01B8C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13547  01B8CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13548  01B8D4  EC82  F0E2         	call	_check_range	;wreg free
 13549  01B8D8  5001               	movf	btemp^0,w,c
 13550  01B8DA  B4D8               	btfsc	status,2,c
 13551  01B8DC  D7EA               	goto	u10490
 13552                           
 13553                           ;daq.c: 356:  if (!mode)
 13554                           ;stkvar	_mode @ sp[(0)+-1]
 13555  01B8DE  0EFF               	movlw	-1
 13556  01B8E0  50E3               	movf	plusw1,w,c
 13557  01B8E2  A4D8               	btfss	status,2,c
 13558  01B8E4  D003               	goto	l11569
 13559  01B8E6                     u10510:
 13560                           
 13561                           ;daq.c: 357:   return 1;
 13562  01B8E6  0E01               	movlw	1
 13563  01B8E8                     L12:
 13564  01B8E8  6E01               	movwf	btemp^0,c
 13565  01B8EA  D029               	goto	l2048
 13566  01B8EC                     l11569:
 13567                           
 13568                           ;daq.c: 359:  R.n_scalar[0] = scaleb;
 13569                           ;stkvar	_scaleb @ sp[(0)+-9]
 13570  01B8EC  50E1               	movf	fsr1l,w,c
 13571  01B8EE  0FF7               	addlw	-9
 13572  01B8F0  6ED9               	movwf	fsr2l,c
 13573  01B8F2  50E2               	movf	fsr1h,w,c
 13574  01B8F4  6EDA               	movwf	fsr2h,c
 13575  01B8F6  0EFF               	movlw	255
 13576  01B8F8  22DA               	addwfc	fsr2h,f,c
 13577  01B8FA  006F FF78  F131    	movff	postinc2,_R+42	;volatile
 13578  01B900  006F FF78  F132    	movff	postinc2,_R+43	;volatile
 13579  01B906  006F FF78  F133    	movff	postinc2,_R+44	;volatile
 13580  01B90C  006F FF78  F134    	movff	postinc2,_R+45	;volatile
 13581                           
 13582                           ;daq.c: 360:  R.n_scalar[1] = scalep;
 13583                           ;stkvar	_scalep @ sp[(0)+-13]
 13584  01B912  50E1               	movf	fsr1l,w,c
 13585  01B914  0FF3               	addlw	-13
 13586  01B916  6ED9               	movwf	fsr2l,c
 13587  01B918  50E2               	movf	fsr1h,w,c
 13588  01B91A  6EDA               	movwf	fsr2h,c
 13589  01B91C  0EFF               	movlw	255
 13590  01B91E  22DA               	addwfc	fsr2h,f,c
 13591  01B920  006F FF78  F135    	movff	postinc2,_R+46	;volatile
 13592  01B926  006F FF78  F136    	movff	postinc2,_R+47	;volatile
 13593  01B92C  006F FF78  F137    	movff	postinc2,_R+48	;volatile
 13594  01B932  006F FF78  F138    	movff	postinc2,_R+49	;volatile
 13595                           
 13596                           ;daq.c: 361:  R.c_scale_cal = 1;
 13597  01B938  0101               	movlb	1	; () banked
 13598  01B93A  85AA               	bsf	(_R+163)& (0+255),2,b	;volatile
 13599  01B93C  D7D4               	goto	u10510
 13600  01B93E                     l2048:
 13601                           
 13602                           ; _cal_current_10A: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          13, argsize = 13, vargsize = 0
 13603  01B93E  0EF3               	movlw	243
 13604  01B940  26E1               	addwf	fsr1l,f,c
 13605  01B942  0EFF               	movlw	255
 13606  01B944  22E2               	addwfc	fsr1h,f,c
 13607  01B946  0012               	return		;funcret
 13608  01B948                     __end_of_cal_current_10A:
 13609                           	opt callstack 0
 13610                           
 13611 ;; *************** function _check_range *****************
 13612 ;; Defined at:
 13613 ;;		line 315 in file "daq.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;  value           2  [STACK] const short 
 13616 ;;  window          2  [STACK] const short 
 13617 ;;  standard        2  [STACK] const short 
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;		None
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1  [STACK] _Bool 
 13622 ;; Registers used:
 13623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/1
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13633 ;;Total ram usage:        0 bytes
 13634 ;; Hardware stack levels used:    1
 13635 ;; Hardware stack levels required when called:   15
 13636 ;; This function calls:
 13637 ;;		Nothing
 13638 ;; This function is called by:
 13639 ;;		_cal_current_zero
 13640 ;;		_cal_current_10A
 13641 ;; This function uses a reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text47
 13645  01C504                     __ptext47:
 13646                           	opt callstack 0
 13647  01C504                     _check_range:
 13648                           	opt callstack 13
 13649                           
 13650                           ;daq.c: 315: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 13651                           ;stkvar	_value @ sp[(0)+-2]
 13652                           ;stkvar	_window @ sp[(0)+-4]
 13653                           ;stkvar	_standard @ sp[(0)+-6]
 13654                           
 13655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13656                           ;incstack = 0
 13657  01C504  0EFA               	movlw	-6
 13658  01C506  006F FF8C  F00B    	movff	plusw1,btemp+10
 13659  01C50C  0EFB               	movlw	-5
 13660  01C50E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13661  01C514  0EFC               	movlw	-4
 13662  01C516  50E3               	movf	plusw1,w,c
 13663  01C518  260B               	addwf	(btemp+10)^0,f,c
 13664  01C51A  0EFD               	movlw	-3
 13665  01C51C  50E3               	movf	plusw1,w,c
 13666  01C51E  220C               	addwfc	(btemp+11)^0,f,c
 13667  01C520  0EFE               	movlw	-2
 13668  01C522  50E3               	movf	plusw1,w,c
 13669  01C524  5C0B               	subwf	(btemp+10)^0,w,c
 13670  01C526  500C               	movf	(btemp+11)^0,w,c
 13671  01C528  0A80               	xorlw	128
 13672  01C52A  6E01               	movwf	btemp^0,c
 13673  01C52C  0EFF               	movlw	-1
 13674  01C52E  50E3               	movf	plusw1,w,c
 13675  01C530  0A80               	xorlw	128
 13676  01C532  5801               	subwfb	btemp^0,w,c
 13677  01C534  B0D8               	btfsc	status,0,c
 13678  01C536  D002               	goto	l10991
 13679  01C538                     u10210:
 13680                           
 13681                           ;daq.c: 318:   return 0;
 13682  01C538  0E00               	movlw	0
 13683  01C53A  D01E               	goto	L13
 13684  01C53C                     l10991:
 13685                           
 13686                           ;daq.c: 319:  if (value < (standard - window))
 13687                           ;stkvar	_window @ sp[(0)+-4]
 13688                           ;stkvar	_standard @ sp[(0)+-6]
 13689  01C53C  0EFA               	movlw	-6
 13690  01C53E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13691  01C544  0EFB               	movlw	-5
 13692  01C546  006F FF8C  F00C    	movff	plusw1,btemp+11
 13693  01C54C  0EFC               	movlw	-4
 13694  01C54E  50E3               	movf	plusw1,w,c
 13695  01C550  5E0B               	subwf	(btemp+10)^0,f,c
 13696  01C552  0EFD               	movlw	-3
 13697  01C554  50E3               	movf	plusw1,w,c
 13698  01C556  5A0C               	subwfb	(btemp+11)^0,f,c
 13699                           
 13700                           ;stkvar	_value @ sp[(0)+-2]
 13701  01C558  0EFE               	movlw	-2
 13702  01C55A  006F FF8C  F001    	movff	plusw1,btemp
 13703  01C560  500B               	movf	(btemp+10)^0,w,c
 13704  01C562  5C01               	subwf	btemp^0,w,c
 13705  01C564  0EFF               	movlw	-1
 13706  01C566  50E3               	movf	plusw1,w,c
 13707  01C568  0A80               	xorlw	128
 13708  01C56A  6E01               	movwf	btemp^0,c
 13709  01C56C  500C               	movf	(btemp+11)^0,w,c
 13710  01C56E  0A80               	xorlw	128
 13711  01C570  5801               	subwfb	btemp^0,w,c
 13712  01C572  A0D8               	btfss	status,0,c
 13713  01C574  D7E1               	goto	u10210
 13714                           
 13715                           ;daq.c: 321:  return 1;
 13716  01C576  0E01               	movlw	1
 13717  01C578                     L13:
 13718  01C578  6E01               	movwf	btemp^0,c
 13719                           
 13720                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 13721  01C57A  0EFA               	movlw	250
 13722  01C57C  26E1               	addwf	fsr1l,f,c
 13723  01C57E  0EFF               	movlw	255
 13724  01C580  22E2               	addwfc	fsr1h,f,c
 13725  01C582  0012               	return		;funcret
 13726  01C584                     __end_of_check_range:
 13727                           	opt callstack 0
 13728                           
 13729 ;; *************** function _convert_adc_data *****************
 13730 ;; Defined at:
 13731 ;;		line 51 in file "mbmc.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;		None
 13734 ;; Auto vars:     Size  Location     Type
 13735 ;;  i               1  [STACK] unsigned char 
 13736 ;; Return value:  Size  Location     Type
 13737 ;;                  1  [STACK] void 
 13738 ;; Registers used:
 13739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13740 ;; Tracked objects:
 13741 ;;		On entry : 0/2
 13742 ;;		On exit  : 0/0
 13743 ;;		Unchanged: 0/0
 13744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13749 ;;Total ram usage:        0 bytes
 13750 ;; Hardware stack levels used:    1
 13751 ;; Hardware stack levels required when called:   18
 13752 ;; This function calls:
 13753 ;;		_conv_raw_result
 13754 ;;		_lp_filter
 13755 ;; This function is called by:
 13756 ;;		_main
 13757 ;; This function uses a reentrant model
 13758 ;;
 13759                           
 13760                           	psect	text48
 13761  01BA02                     __ptext48:
 13762                           	opt callstack 0
 13763  01BA02                     _convert_adc_data:
 13764                           	opt callstack 0
 13765                           
 13766                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13767  01BA02  52E6               	movf	postinc1,f,c
 13768                           
 13769                           ;mbmc.c: 53:  uint8_t i = 0;
 13770                           ;stkvar	_i @ sp[(-1)+0]
 13771                           
 13772                           ;incstack = 0
 13773  01BA04  0EFF               	movlw	-1
 13774  01BA06  6AE3               	clrf	plusw1,c
 13775  01BA08                     l12437:
 13776                           
 13777                           ;mbmc.c: 56:   if (V.calib) {
 13778  01BA08  0102               	movlb	2	; () banked
 13779  01BA0A  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 13780  01BA0C  B4D8               	btfsc	status,2,c
 13781  01BA0E  D01B               	goto	l12441
 13782                           
 13783                           ; BSR set to: 2
 13784                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 13785  01BA10  0E01               	movlw	1
 13786  01BA12  6EE6               	movwf	postinc1,c
 13787                           
 13788                           ;stkvar	_i @ sp[(-2)+0]
 13789  01BA14  0EFE               	movlw	-2
 13790  01BA16  50E3               	movf	plusw1,w,c
 13791  01BA18  6EE6               	movwf	postinc1,c
 13792  01BA1A  0E01               	movlw	1
 13793  01BA1C  6EE6               	movwf	postinc1,c
 13794                           
 13795                           ;stkvar	_i @ sp[(-4)+0]
 13796  01BA1E  0EFC               	movlw	-4
 13797  01BA20  50E3               	movf	plusw1,w,c
 13798  01BA22  6EE6               	movwf	postinc1,c
 13799  01BA24  EC02  F0B0         	call	_conv_raw_result	;wreg free
 13800  01BA28  0060  F007  FFE6   	movff	btemp,postinc1
 13801  01BA2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13802  01BA34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13803  01BA3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 13804  01BA40  EC99  F0CA         	call	_lp_filter	;wreg free
 13805  01BA44  D01A               	goto	L14
 13806  01BA46                     l12441:
 13807                           
 13808                           ; BSR set to: 2
 13809                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 13810  01BA46  0E00               	movlw	0
 13811  01BA48  6EE6               	movwf	postinc1,c
 13812                           
 13813                           ;stkvar	_i @ sp[(-2)+0]
 13814  01BA4A  0EFE               	movlw	-2
 13815  01BA4C  50E3               	movf	plusw1,w,c
 13816  01BA4E  6EE6               	movwf	postinc1,c
 13817  01BA50  0E00               	movlw	0
 13818  01BA52  6EE6               	movwf	postinc1,c
 13819                           
 13820                           ;stkvar	_i @ sp[(-4)+0]
 13821  01BA54  0EFC               	movlw	-4
 13822  01BA56  50E3               	movf	plusw1,w,c
 13823  01BA58  6EE6               	movwf	postinc1,c
 13824  01BA5A  EC02  F0B0         	call	_conv_raw_result	;wreg free
 13825  01BA5E  0060  F007  FFE6   	movff	btemp,postinc1
 13826  01BA64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13827  01BA6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13828  01BA70  0060  F013  FFE6   	movff	btemp+3,postinc1
 13829  01BA76  EC99  F0CA         	call	_lp_filter	;wreg free
 13830  01BA7A                     L14:
 13831                           
 13832                           ;stkvar	_i @ sp[(-1)+0]
 13833  01BA7A  0EFF               	movlw	-1
 13834  01BA7C  50E3               	movf	plusw1,w,c
 13835  01BA7E  0D04               	mullw	4
 13836  01BA80  0EFF               	movlw	low _C
 13837  01BA82  24F3               	addwf	243,w,c
 13838  01BA84  6ED9               	movwf	fsr2l,c
 13839  01BA86  0E07               	movlw	high _C
 13840  01BA88  20F4               	addwfc	prodh,w,c
 13841  01BA8A  6EDA               	movwf	fsr2h,c
 13842  01BA8C  0060  F007  FFDE   	movff	btemp,postinc2
 13843  01BA92  0060  F00B  FFDE   	movff	btemp+1,postinc2
 13844  01BA98  0060  F00F  FFDE   	movff	btemp+2,postinc2
 13845  01BA9E  0060  F013  FFDE   	movff	btemp+3,postinc2
 13846                           
 13847                           ;mbmc.c: 61:  } while (++i < 16);
 13848                           ;stkvar	_i @ sp[(-1)+0]
 13849  01BAA4  0EFF               	movlw	-1
 13850  01BAA6  2AE3               	incf	plusw1,f,c
 13851  01BAA8  0EFF               	movlw	-1
 13852  01BAAA  006F FF8C  F001    	movff	plusw1,btemp
 13853  01BAB0  0E0F               	movlw	15
 13854  01BAB2  6401               	cpfsgt	btemp^0,c
 13855  01BAB4  D7A9               	goto	l12437
 13856                           
 13857                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13858  01BAB6  52E5               	movf	postdec1,f,c
 13859  01BAB8  0012               	return		;funcret
 13860  01BABA                     __end_of_convert_adc_data:
 13861                           	opt callstack 0
 13862                           
 13863 ;; *************** function _clear_hid_pflags *****************
 13864 ;; Defined at:
 13865 ;;		line 67 in file "hid.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;  h               1  [STACK] PTR struct H_data
 13868 ;;		 -> H(9), 
 13869 ;; Auto vars:     Size  Location     Type
 13870 ;;		None
 13871 ;; Return value:  Size  Location     Type
 13872 ;;                  1  [STACK] void 
 13873 ;; Registers used:
 13874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13875 ;; Tracked objects:
 13876 ;;		On entry : 3F/0
 13877 ;;		On exit  : 0/0
 13878 ;;		Unchanged: 0/0
 13879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13884 ;;Total ram usage:        0 bytes
 13885 ;; Hardware stack levels used:    1
 13886 ;; Hardware stack levels required when called:   15
 13887 ;; This function calls:
 13888 ;;		Nothing
 13889 ;; This function is called by:
 13890 ;;		_main
 13891 ;; This function uses a reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text49
 13895  01D322                     __ptext49:
 13896                           	opt callstack 0
 13897  01D322                     _clear_hid_pflags:
 13898                           	opt callstack 15
 13899                           
 13900                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 13901                           ;stkvar	_h @ sp[(0)+-1]
 13902                           
 13903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13904                           ;incstack = 0
 13905  01D322  0EFF               	movlw	-1
 13906  01D324  50E3               	movf	plusw1,w,c
 13907  01D326  6ED9               	movwf	fsr2l,c
 13908  01D328  6ADA               	clrf	fsr2h,c
 13909  01D32A  0E03               	movlw	3
 13910  01D32C  26D9               	addwf	fsr2l,f,c
 13911  01D32E  0E00               	movlw	0
 13912  01D330  6EDF               	movwf	indf2,c
 13913                           
 13914                           ;hid.c: 70:  h->enter_p = SW_OFF;
 13915                           ;stkvar	_h @ sp[(0)+-1]
 13916  01D332  0EFF               	movlw	-1
 13917  01D334  50E3               	movf	plusw1,w,c
 13918  01D336  6ED9               	movwf	fsr2l,c
 13919  01D338  6ADA               	clrf	fsr2h,c
 13920  01D33A  0E05               	movlw	5
 13921  01D33C  26D9               	addwf	fsr2l,f,c
 13922  01D33E  0E00               	movlw	0
 13923  01D340  6EDF               	movwf	indf2,c
 13924                           
 13925                           ;hid.c: 71:  h->calib_p = SW_OFF;
 13926                           ;stkvar	_h @ sp[(0)+-1]
 13927  01D342  0EFF               	movlw	-1
 13928  01D344  50E3               	movf	plusw1,w,c
 13929  01D346  6ED9               	movwf	fsr2l,c
 13930  01D348  6ADA               	clrf	fsr2h,c
 13931  01D34A  0E07               	movlw	7
 13932  01D34C  26D9               	addwf	fsr2l,f,c
 13933  01D34E  0E00               	movlw	0
 13934  01D350  6EDF               	movwf	indf2,c
 13935                           
 13936                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13937  01D352  52E5               	movf	postdec1,f,c
 13938  01D354  0012               	return		;funcret
 13939  01D356                     __end_of_clear_hid_pflags:
 13940                           	opt callstack 0
 13941                           
 13942 ;; *************** function _check_help *****************
 13943 ;; Defined at:
 13944 ;;		line 40 in file "mconfig.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;  flipper         1  [STACK] const _Bool 
 13947 ;; Auto vars:     Size  Location     Type
 13948 ;;  estatus         1    0        _Bool 
 13949 ;; Return value:  Size  Location     Type
 13950 ;;                  1  [STACK] _Bool 
 13951 ;; Registers used:
 13952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13953 ;; Tracked objects:
 13954 ;;		On entry : 3F/2
 13955 ;;		On exit  : 0/0
 13956 ;;		Unchanged: 0/0
 13957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13962 ;;Total ram usage:        0 bytes
 13963 ;; Hardware stack levels used:    1
 13964 ;; Hardware stack levels required when called:   28
 13965 ;; This function calls:
 13966 ;;		_StartTimer
 13967 ;;		_TimerDone
 13968 ;;		_display_help
 13969 ;;		_display_info
 13970 ;;		_get_vterm_ptr
 13971 ;;		_help_button
 13972 ;;		_mode_lamp_bright
 13973 ;;		_mode_lamp_dim
 13974 ;;		_set_display_info
 13975 ;;		_set_temp_display_help
 13976 ;;		_set_vterm
 13977 ;;		_sprintf
 13978 ;;		_update_lcd
 13979 ;;		_vterm_dump
 13980 ;; This function is called by:
 13981 ;;		_main
 13982 ;; This function uses a reentrant model
 13983 ;;
 13984                           
 13985                           	psect	text50
 13986  018F52                     __ptext50:
 13987                           	opt callstack 0
 13988  018F52                     _check_help:
 13989                           	opt callstack 2
 13990                           
 13991                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 13992                           
 13993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13994                           ;incstack = 0
 13995  018F52  ECF0  F0E8         	call	_help_button	;wreg free
 13996  018F56  5001               	movf	btemp^0,w,c
 13997  018F58  B4D8               	btfsc	status,2,c
 13998  018F5A  D0D0               	goto	l14663
 13999  018F5C  ECCA  F0ED         	call	_display_info	;wreg free
 14000  018F60  0401               	decf	btemp^0,w,c
 14001  018F62  B4D8               	btfsc	status,2,c
 14002  018F64  D0CB               	goto	l14663
 14003                           
 14004                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 14005  018F66  0EDC               	movlw	220
 14006  018F68  6EE6               	movwf	postinc1,c
 14007  018F6A  0E05               	movlw	5
 14008  018F6C  6EE6               	movwf	postinc1,c
 14009  018F6E  0E0B               	movlw	11
 14010  018F70  6EE6               	movwf	postinc1,c
 14011  018F72  EC33  F0E8         	call	_StartTimer	;wreg free
 14012                           
 14013                           ;mconfig.c: 48:   if (V.debug)
 14014  018F76  0102               	movlb	2	; () banked
 14015  018F78  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
 14016                           
 14017                           ; BSR set to: 2
 14018                           ;mconfig.c: 49:    vterm_dump();
 14019  018F7A  ECFD  F0D3         	call	_vterm_dump	;wreg free
 14020                           
 14021                           ;mconfig.c: 51:   set_vterm(1);
 14022  018F7E  0E01               	movlw	1
 14023  018F80  6EE6               	movwf	postinc1,c
 14024  018F82  ECB7  F0EC         	call	_set_vterm	;wreg free
 14025                           
 14026                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 14027  018F86  ECCA  F0ED         	call	_display_info	;wreg free
 14028  018F8A  5001               	movf	btemp^0,w,c
 14029  018F8C  6EE6               	movwf	postinc1,c
 14030  018F8E  EC6C  F0ED         	call	_set_temp_display_help	;wreg free
 14031                           
 14032                           ; BSR set to: 2
 14033                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 14034  018F92  0E01               	movlw	1
 14035  018F94  6EE6               	movwf	postinc1,c
 14036  018F96  ECC6  F0EC         	call	_set_display_info	;wreg free
 14037                           
 14038                           ;mconfig.c: 54:   if (flipper) {
 14039                           ;stkvar	_flipper @ sp[(0)+-1]
 14040  018F9A  0EFF               	movlw	-1
 14041  018F9C  50E3               	movf	plusw1,w,c
 14042  018F9E  B4D8               	btfsc	status,2,c
 14043  018FA0  D019               	goto	l14649
 14044                           
 14045                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 14046  018FA2  0EB3               	movlw	low STR_74
 14047  018FA4  6EE6               	movwf	postinc1,c
 14048  018FA6  0EFF               	movlw	high STR_74
 14049  018FA8  6EE6               	movwf	postinc1,c
 14050  018FAA  0E4B               	movlw	low STR_76
 14051  018FAC  6EE6               	movwf	postinc1,c
 14052  018FAE  0EFF               	movlw	high STR_76
 14053  018FB0  6EE6               	movwf	postinc1,c
 14054  018FB2  0E01               	movlw	1
 14055  018FB4  6EE6               	movwf	postinc1,c
 14056  018FB6  0E00               	movlw	0
 14057  018FB8  6EE6               	movwf	postinc1,c
 14058  018FBA  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14059  018FBE  0060  F007  FFE6   	movff	btemp,postinc1
 14060  018FC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14061  018FCA  0E06               	movlw	6
 14062  018FCC  6EE6               	movwf	postinc1,c
 14063  018FCE  EC68  F0D8         	call	_sprintf	;wreg free
 14064                           
 14065                           ;mconfig.c: 56:   } else {
 14066  018FD2  D018               	goto	l1813
 14067  018FD4                     l14649:
 14068                           
 14069                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 14070  018FD4  0EC9               	movlw	low STR_75
 14071  018FD6  6EE6               	movwf	postinc1,c
 14072  018FD8  0EFF               	movlw	high STR_75
 14073  018FDA  6EE6               	movwf	postinc1,c
 14074  018FDC  0E4B               	movlw	low STR_76
 14075  018FDE  6EE6               	movwf	postinc1,c
 14076  018FE0  0EFF               	movlw	high STR_76
 14077  018FE2  6EE6               	movwf	postinc1,c
 14078  018FE4  0E01               	movlw	1
 14079  018FE6  6EE6               	movwf	postinc1,c
 14080  018FE8  0E00               	movlw	0
 14081  018FEA  6EE6               	movwf	postinc1,c
 14082  018FEC  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14083  018FF0  0060  F007  FFE6   	movff	btemp,postinc1
 14084  018FF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14085  018FFC  0E06               	movlw	6
 14086  018FFE  6EE6               	movwf	postinc1,c
 14087  019000  EC68  F0D8         	call	_sprintf	;wreg free
 14088  019004                     l1813:
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 14092  019004  0102               	movlb	2	; () banked
 14093  019006  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
 14094  019008  32E8               	rrcf	wreg,f,c
 14095  01900A  32E8               	rrcf	wreg,f,c
 14096  01900C  0B03               	andlw	3
 14097  01900E  0D24               	mullw	36
 14098  019010  0E12               	movlw	18
 14099  019012  26F3               	addwf	243,f,c
 14100  019014  0E00               	movlw	0
 14101  019016  22F4               	addwfc	244,f,c
 14102  019018  0E4D               	movlw	low _T
 14103  01901A  6E0B               	movwf	(btemp+10)^0,c
 14104  01901C  0EF9               	movlw	high _T
 14105  01901E  6E0C               	movwf	(btemp+11)^0,c
 14106  019020  50F3               	movf	243,w,c
 14107  019022  260B               	addwf	(btemp+10)^0,f,c
 14108  019024  50F4               	movf	244,w,c
 14109  019026  220C               	addwfc	(btemp+11)^0,f,c
 14110  019028  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14111  01902E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14112  019034  0EBF               	movlw	low STR_78
 14113  019036  6EE6               	movwf	postinc1,c
 14114  019038  0EFF               	movlw	high STR_78
 14115  01903A  6EE6               	movwf	postinc1,c
 14116  01903C  0E01               	movlw	1
 14117  01903E  6EE6               	movwf	postinc1,c
 14118  019040  0E01               	movlw	1
 14119  019042  6EE6               	movwf	postinc1,c
 14120  019044  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14121  019048  0060  F007  FFE6   	movff	btemp,postinc1
 14122  01904E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14123  019054  0E06               	movlw	6
 14124  019056  6EE6               	movwf	postinc1,c
 14125  019058  EC68  F0D8         	call	_sprintf	;wreg free
 14126                           
 14127                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 14128  01905C  0102               	movlb	2	; () banked
 14129  01905E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
 14130  019060  32E8               	rrcf	wreg,f,c
 14131  019062  32E8               	rrcf	wreg,f,c
 14132  019064  0B03               	andlw	3
 14133  019066  0D24               	mullw	36
 14134  019068  0E4D               	movlw	low _T
 14135  01906A  6E0B               	movwf	(btemp+10)^0,c
 14136  01906C  0EF9               	movlw	high _T
 14137  01906E  6E0C               	movwf	(btemp+11)^0,c
 14138  019070  50F3               	movf	243,w,c
 14139  019072  260B               	addwf	(btemp+10)^0,f,c
 14140  019074  50F4               	movf	244,w,c
 14141  019076  220C               	addwfc	(btemp+11)^0,f,c
 14142  019078  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14143  01907E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14144  019084  0EBF               	movlw	low STR_78
 14145  019086  6EE6               	movwf	postinc1,c
 14146  019088  0EFF               	movlw	high STR_78
 14147  01908A  6EE6               	movwf	postinc1,c
 14148  01908C  0E01               	movlw	1
 14149  01908E  6EE6               	movwf	postinc1,c
 14150  019090  0E02               	movlw	2
 14151  019092  6EE6               	movwf	postinc1,c
 14152  019094  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14153  019098  0060  F007  FFE6   	movff	btemp,postinc1
 14154  01909E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14155  0190A4  0E06               	movlw	6
 14156  0190A6  6EE6               	movwf	postinc1,c
 14157  0190A8  EC68  F0D8         	call	_sprintf	;wreg free
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;mconfig.c: 61:   V.help_id++;
 14161  0190AC  EE20  F29B         	lfsr	2,_V+155	;volatile
 14162  0190B0  38DF               	swapf	223,w,c
 14163  0190B2  6E0C               	movwf	(btemp+11)^0,c
 14164  0190B4  320C               	rrcf	(btemp+11)^0,f,c
 14165  0190B6  300C               	rrcf	(btemp+11)^0,w,c
 14166  0190B8  0B03               	andlw	3
 14167  0190BA  6E0C               	movwf	(btemp+11)^0,c
 14168  0190BC  2A0C               	incf	(btemp+11)^0,f,c
 14169  0190BE  3A0C               	swapf	(btemp+11)^0,f,c
 14170  0190C0  360C               	rlcf	(btemp+11)^0,f,c
 14171  0190C2  360C               	rlcf	(btemp+11)^0,f,c
 14172  0190C4  50DF               	movf	223,w,c
 14173  0190C6  180C               	xorwf	(btemp+11)^0,w,c
 14174  0190C8  0B3F               	andlw	-193
 14175  0190CA  180C               	xorwf	(btemp+11)^0,w,c
 14176  0190CC  6EDF               	movwf	223,c
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 14180  0190CE  0EB8               	movlw	184
 14181  0190D0  6EE6               	movwf	postinc1,c
 14182  0190D2  0E0B               	movlw	11
 14183  0190D4  6EE6               	movwf	postinc1,c
 14184  0190D6  0E09               	movlw	9
 14185  0190D8  6EE6               	movwf	postinc1,c
 14186  0190DA  EC33  F0E8         	call	_StartTimer	;wreg free
 14187                           
 14188                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 14189  0190DE  0EB8               	movlw	184
 14190  0190E0  6EE6               	movwf	postinc1,c
 14191  0190E2  0E0B               	movlw	11
 14192  0190E4  6EE6               	movwf	postinc1,c
 14193  0190E6  0E07               	movlw	7
 14194  0190E8  6EE6               	movwf	postinc1,c
 14195  0190EA  EC33  F0E8         	call	_StartTimer	;wreg free
 14196                           
 14197                           ;mconfig.c: 64:   mode_lamp_bright();
 14198  0190EE  EC83  F0ED         	call	_mode_lamp_bright	;wreg free
 14199                           
 14200                           ;mconfig.c: 65:   update_lcd(1);
 14201  0190F2  0E01               	movlw	1
 14202  0190F4  6EE6               	movwf	postinc1,c
 14203  0190F6  EC59  F0D7         	call	_update_lcd	;wreg free
 14204                           
 14205                           ;mconfig.c: 67:  } else {
 14206  0190FA  D032               	goto	l1814
 14207  0190FC                     l14663:
 14208                           
 14209                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 14210  0190FC  0E09               	movlw	9
 14211  0190FE  6EE6               	movwf	postinc1,c
 14212  019100  ECC1  F0EA         	call	_TimerDone	;wreg free
 14213  019104  5001               	movf	btemp^0,w,c
 14214  019106  B4D8               	btfsc	status,2,c
 14215  019108  D02B               	goto	l1814
 14216                           
 14217                           ;mconfig.c: 69:    set_vterm(0);
 14218  01910A  0E00               	movlw	0
 14219  01910C  6EE6               	movwf	postinc1,c
 14220  01910E  ECB7  F0EC         	call	_set_vterm	;wreg free
 14221                           
 14222                           ;mconfig.c: 70:    V.help = 0;
 14223  019112  0102               	movlb	2	; () banked
 14224  019114  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
 14225                           
 14226                           ; BSR set to: 2
 14227                           ;mconfig.c: 71:    set_display_info(display_help());
 14228  019116  ECCE  F0ED         	call	_display_help	;wreg free
 14229  01911A  5001               	movf	btemp^0,w,c
 14230  01911C  6EE6               	movwf	postinc1,c
 14231  01911E  ECC6  F0EC         	call	_set_display_info	;wreg free
 14232                           
 14233                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 14234  019122  0060  FA57  FFE6   	movff	_V+149,postinc1
 14235  019128  0060  FA5B  FFE6   	movff	_V+150,postinc1
 14236  01912E  ECFF  F0EC         	call	_mode_lamp_dim	;wreg free
 14237                           
 14238                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 14239  019132  0E0B               	movlw	11
 14240  019134  6EE6               	movwf	postinc1,c
 14241  019136  ECC1  F0EA         	call	_TimerDone	;wreg free
 14242  01913A  5001               	movf	btemp^0,w,c
 14243  01913C  B4D8               	btfsc	status,2,c
 14244  01913E  D010               	goto	l1814
 14245                           
 14246                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 14247  019140  0102               	movlb	2	; () banked
 14248  019142  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 14249  019144  A4D8               	btfss	status,2,c
 14250  019146  D002               	goto	u14010
 14251  019148  0E01               	movlw	1
 14252  01914A  D001               	goto	u14020
 14253  01914C                     u14010:
 14254  01914C  0E00               	movlw	0
 14255  01914E                     u14020:
 14256  01914E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
 14257                           
 14258                           ; BSR set to: 2
 14259                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 14260  019150  0EDC               	movlw	220
 14261  019152  6EE6               	movwf	postinc1,c
 14262  019154  0E05               	movlw	5
 14263  019156  6EE6               	movwf	postinc1,c
 14264  019158  0E0B               	movlw	11
 14265  01915A  6EE6               	movwf	postinc1,c
 14266  01915C  EC33  F0E8         	call	_StartTimer	;wreg free
 14267  019160                     l1814:
 14268                           
 14269                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 14270  019160  52E5               	movf	postdec1,f,c
 14271  019162  0012               	return		;funcret
 14272  019164                     __end_of_check_help:
 14273                           	opt callstack 0
 14274                           
 14275 ;; *************** function _vterm_dump *****************
 14276 ;; Defined at:
 14277 ;;		line 121 in file "mconfig.c"
 14278 ;; Parameters:    Size  Location     Type
 14279 ;;		None
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;		None
 14282 ;; Return value:  Size  Location     Type
 14283 ;;                  1  [STACK] void 
 14284 ;; Registers used:
 14285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14286 ;; Tracked objects:
 14287 ;;		On entry : 3F/2
 14288 ;;		On exit  : 0/0
 14289 ;;		Unchanged: 0/0
 14290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14295 ;;Total ram usage:        0 bytes
 14296 ;; Hardware stack levels used:    1
 14297 ;; Hardware stack levels required when called:   27
 14298 ;; This function calls:
 14299 ;;		_WaitMs
 14300 ;;		_eaDogM_WriteStringAtPos
 14301 ;;		_get_vterm_ptr
 14302 ;;		_sprintf
 14303 ;;		_wait_lcd_done
 14304 ;; This function is called by:
 14305 ;;		_check_help
 14306 ;; This function uses a reentrant model
 14307 ;;
 14308                           
 14309                           	psect	text51
 14310  01A7FA                     __ptext51:
 14311                           	opt callstack 0
 14312  01A7FA                     _vterm_dump:
 14313                           	opt callstack 2
 14314                           
 14315                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 14316                           
 14317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14318                           ;incstack = 0
 14319  01A7FA  0E01               	movlw	1
 14320  01A7FC  6EE6               	movwf	postinc1,c
 14321  01A7FE  0E00               	movlw	0
 14322  01A800  6EE6               	movwf	postinc1,c
 14323  01A802  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14324  01A806  0060  F007  FFE6   	movff	btemp,postinc1
 14325  01A80C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14326  01A812  0E00               	movlw	0
 14327  01A814  6EE6               	movwf	postinc1,c
 14328  01A816  0E00               	movlw	0
 14329  01A818  6EE6               	movwf	postinc1,c
 14330  01A81A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14331  01A81E  0060  F007  FFE6   	movff	btemp,postinc1
 14332  01A824  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14333  01A82A  0EA4               	movlw	low STR_80
 14334  01A82C  6EE6               	movwf	postinc1,c
 14335  01A82E  0EFF               	movlw	high STR_80
 14336  01A830  6EE6               	movwf	postinc1,c
 14337  01A832  0E01               	movlw	low (_V+1)
 14338  01A834  6EE6               	movwf	postinc1,c
 14339  01A836  0E02               	movlw	high (_V+1)
 14340  01A838  6EE6               	movwf	postinc1,c
 14341  01A83A  0E08               	movlw	8
 14342  01A83C  6EE6               	movwf	postinc1,c
 14343  01A83E  EC68  F0D8         	call	_sprintf	;wreg free
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;mconfig.c: 124:  wait_lcd_done();
 14347  01A842  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 14351  01A846  0E01               	movlw	low (_V+1)
 14352  01A848  6EE6               	movwf	postinc1,c
 14353  01A84A  0E02               	movlw	high (_V+1)
 14354  01A84C  6EE6               	movwf	postinc1,c
 14355  01A84E  0E00               	movlw	0
 14356  01A850  6EE6               	movwf	postinc1,c
 14357  01A852  0E00               	movlw	0
 14358  01A854  6EE6               	movwf	postinc1,c
 14359  01A856  EC11  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14360                           
 14361                           ; BSR set to: 59
 14362                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 14363  01A85A  0E01               	movlw	1
 14364  01A85C  6EE6               	movwf	postinc1,c
 14365  01A85E  0E01               	movlw	1
 14366  01A860  6EE6               	movwf	postinc1,c
 14367  01A862  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14368  01A866  0060  F007  FFE6   	movff	btemp,postinc1
 14369  01A86C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14370  01A872  0E00               	movlw	0
 14371  01A874  6EE6               	movwf	postinc1,c
 14372  01A876  0E01               	movlw	1
 14373  01A878  6EE6               	movwf	postinc1,c
 14374  01A87A  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14375  01A87E  0060  F007  FFE6   	movff	btemp,postinc1
 14376  01A884  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14377  01A88A  0EA4               	movlw	low STR_80
 14378  01A88C  6EE6               	movwf	postinc1,c
 14379  01A88E  0EFF               	movlw	high STR_80
 14380  01A890  6EE6               	movwf	postinc1,c
 14381  01A892  0E01               	movlw	low (_V+1)
 14382  01A894  6EE6               	movwf	postinc1,c
 14383  01A896  0E02               	movlw	high (_V+1)
 14384  01A898  6EE6               	movwf	postinc1,c
 14385  01A89A  0E08               	movlw	8
 14386  01A89C  6EE6               	movwf	postinc1,c
 14387  01A89E  EC68  F0D8         	call	_sprintf	;wreg free
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;mconfig.c: 127:  wait_lcd_done();
 14391  01A8A2  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 14392                           
 14393                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 14394  01A8A6  0E01               	movlw	low (_V+1)
 14395  01A8A8  6EE6               	movwf	postinc1,c
 14396  01A8AA  0E02               	movlw	high (_V+1)
 14397  01A8AC  6EE6               	movwf	postinc1,c
 14398  01A8AE  0E00               	movlw	0
 14399  01A8B0  6EE6               	movwf	postinc1,c
 14400  01A8B2  0E01               	movlw	1
 14401  01A8B4  6EE6               	movwf	postinc1,c
 14402  01A8B6  EC11  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14403                           
 14404                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 14405  01A8BA  0E01               	movlw	1
 14406  01A8BC  6EE6               	movwf	postinc1,c
 14407  01A8BE  0E02               	movlw	2
 14408  01A8C0  6EE6               	movwf	postinc1,c
 14409  01A8C2  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14410  01A8C6  0060  F007  FFE6   	movff	btemp,postinc1
 14411  01A8CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14412  01A8D2  0E00               	movlw	0
 14413  01A8D4  6EE6               	movwf	postinc1,c
 14414  01A8D6  0E02               	movlw	2
 14415  01A8D8  6EE6               	movwf	postinc1,c
 14416  01A8DA  EC3E  F0EA         	call	_get_vterm_ptr	;wreg free
 14417  01A8DE  0060  F007  FFE6   	movff	btemp,postinc1
 14418  01A8E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14419  01A8EA  0EA4               	movlw	low STR_80
 14420  01A8EC  6EE6               	movwf	postinc1,c
 14421  01A8EE  0EFF               	movlw	high STR_80
 14422  01A8F0  6EE6               	movwf	postinc1,c
 14423  01A8F2  0E01               	movlw	low (_V+1)
 14424  01A8F4  6EE6               	movwf	postinc1,c
 14425  01A8F6  0E02               	movlw	high (_V+1)
 14426  01A8F8  6EE6               	movwf	postinc1,c
 14427  01A8FA  0E08               	movlw	8
 14428  01A8FC  6EE6               	movwf	postinc1,c
 14429  01A8FE  EC68  F0D8         	call	_sprintf	;wreg free
 14430                           
 14431                           ; BSR set to: 0
 14432                           ;mconfig.c: 130:  wait_lcd_done();
 14433  01A902  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 14437  01A906  0E01               	movlw	low (_V+1)
 14438  01A908  6EE6               	movwf	postinc1,c
 14439  01A90A  0E02               	movlw	high (_V+1)
 14440  01A90C  6EE6               	movwf	postinc1,c
 14441  01A90E  0E00               	movlw	0
 14442  01A910  6EE6               	movwf	postinc1,c
 14443  01A912  0E02               	movlw	2
 14444  01A914  6EE6               	movwf	postinc1,c
 14445  01A916  EC11  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14446                           
 14447                           ; BSR set to: 59
 14448                           ;mconfig.c: 132:  WaitMs(3000);
 14449  01A91A  0EB8               	movlw	184
 14450  01A91C  6EE6               	movwf	postinc1,c
 14451  01A91E  0E0B               	movlw	11
 14452  01A920  6EE6               	movwf	postinc1,c
 14453  01A922  EC28  F0E9         	call	_WaitMs	;wreg free
 14454                           
 14455                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 14456  01A926  0012               	return		;funcret
 14457  01A928                     __end_of_vterm_dump:
 14458                           	opt callstack 0
 14459                           
 14460 ;; *************** function _sprintf *****************
 14461 ;; Defined at:
 14462 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 14463 ;; Parameters:    Size  Location     Type
 14464 ;;  s               2  [STACK] PTR unsigned char 
 14465 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 14466 ;;  fmt             2  [STACK] PTR const unsigned char 
 14467 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 14468 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 14469 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 14470 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 14471 ;;		 -> STR_76(19), STR_71(21), STR_70(21), STR_69(21), 
 14472 ;;		 -> STR_68(21), STR_67(21), STR_66(21), STR_65(21), 
 14473 ;;		 -> STR_64(21), STR_63(21), STR_62(18), STR_61(21), 
 14474 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 14475 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 14476 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(20), 
 14477 ;;		 -> STR_48(21), STR_47(21), STR_46(21), STR_45(22), 
 14478 ;;		 -> STR_44(22), STR_43(22), STR_42(23), STR_41(23), 
 14479 ;;		 -> STR_40(23), STR_39(29), STR_38(23), STR_37(23), 
 14480 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 14481 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 14482 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 14483 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(26), 
 14484 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 14485 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 14486 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 14487 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 14488 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;  f               6  [STACK] struct _IO_FILE
 14491 ;;  ap              2  [STACK] PTR void [1]
 14492 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14493 ;;  ret             2    0        int 
 14494 ;; Return value:  Size  Location     Type
 14495 ;;                  2  [STACK] int 
 14496 ;; Registers used:
 14497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14498 ;; Tracked objects:
 14499 ;;		On entry : 0/1
 14500 ;;		On exit  : 3F/0
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14507 ;;Total ram usage:        0 bytes
 14508 ;; Hardware stack levels used:    1
 14509 ;; Hardware stack levels required when called:   23
 14510 ;; This function calls:
 14511 ;;		_vfprintf
 14512 ;; This function is called by:
 14513 ;;		_main
 14514 ;;		_current_sensor_cal
 14515 ;;		_check_help
 14516 ;;		_vterm_dump
 14517 ;;		_calc_bsoc
 14518 ;; This function uses a reentrant model
 14519 ;;
 14520                           
 14521                           	psect	text52
 14522  01B0D0                     __ptext52:
 14523                           	opt callstack 0
 14524  01B0D0                     _sprintf:
 14525                           	opt callstack 0
 14526                           
 14527                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14528  01B0D0  0E08               	movlw	8
 14529  01B0D2  26E1               	addwf	fsr1l,f,c
 14530  01B0D4  0E00               	movlw	0
 14531  01B0D6  22E2               	addwfc	fsr1h,f,c
 14532                           
 14533                           ;incstack = 0
 14534 ;; hardware stack exceeded
 14535  01B0D8  0EFE               	movlw	254
 14536  01B0DA  6E0B               	movwf	(btemp+10)^0,c
 14537  01B0DC  0EFF               	movlw	255
 14538  01B0DE  6E0C               	movwf	(btemp+11)^0,c
 14539                           
 14540                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 14541  01B0E0  0EF5               	movlw	245
 14542  01B0E2  24E1               	addwf	fsr1l,w,c
 14543  01B0E4  6E09               	movwf	(btemp+8)^0,c
 14544  01B0E6  0EFF               	movlw	255
 14545  01B0E8  20E2               	addwfc	fsr1h,w,c
 14546  01B0EA  6E0A               	movwf	(btemp+9)^0,c
 14547  01B0EC  500B               	movf	(btemp+10)^0,w,c
 14548  01B0EE  2609               	addwf	(btemp+8)^0,f,c
 14549  01B0F0  500C               	movf	(btemp+11)^0,w,c
 14550  01B0F2  220A               	addwfc	(btemp+9)^0,f,c
 14551                           
 14552                           ;stkvar	_ap @ sp[(-8)+6]
 14553  01B0F4  0EFF               	movlw	-1
 14554  01B0F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14555  01B0FC  0EFE               	movlw	-2
 14556  01B0FE  0060  F027  FFE3   	movff	btemp+8,plusw1
 14557                           
 14558                           ;stkvar	_s @ sp[(-8)+-3]
 14559  01B104  0EF5               	movlw	-11
 14560  01B106  006F FF8C  F00B    	movff	plusw1,btemp+10
 14561  01B10C  0EF6               	movlw	-10
 14562  01B10E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14563                           
 14564                           ;stkvar	_f @ sp[(-8)+0]
 14565  01B114  0EF9               	movlw	-7
 14566  01B116  0060  F033  FFE3   	movff	btemp+11,plusw1
 14567  01B11C  0EF8               	movlw	-8
 14568  01B11E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14569                           
 14570                           ;stkvar	_f @ sp[(-8)+0]
 14571  01B124  0EFA               	movlw	250
 14572  01B126  24E1               	addwf	fsr1l,w,c
 14573  01B128  6ED9               	movwf	fsr2l,c
 14574  01B12A  0EFF               	movlw	255
 14575  01B12C  20E2               	addwfc	fsr1h,w,c
 14576  01B12E  6EDA               	movwf	fsr2h,c
 14577  01B130  0E00               	movlw	0
 14578  01B132  6EDE               	movwf	postinc2,c
 14579  01B134  0E00               	movlw	0
 14580  01B136  6EDD               	movwf	postdec2,c
 14581                           
 14582                           ;stkvar	_f @ sp[(-8)+0]
 14583  01B138  0EFC               	movlw	252
 14584  01B13A  24E1               	addwf	fsr1l,w,c
 14585  01B13C  6ED9               	movwf	fsr2l,c
 14586  01B13E  0EFF               	movlw	255
 14587  01B140  20E2               	addwfc	fsr1h,w,c
 14588  01B142  6EDA               	movwf	fsr2h,c
 14589  01B144  0E00               	movlw	0
 14590  01B146  6EDE               	movwf	postinc2,c
 14591  01B148  0E00               	movlw	0
 14592  01B14A  6EDD               	movwf	postdec2,c
 14593                           
 14594                           ;stkvar	_ap @ sp[(-8)+6]
 14595  01B14C  0EFE               	movlw	254
 14596  01B14E  24E1               	addwf	fsr1l,w,c
 14597  01B150  6E01               	movwf	btemp^0,c
 14598  01B152  0EFF               	movlw	255
 14599  01B154  20E2               	addwfc	fsr1h,w,c
 14600  01B156  6E02               	movwf	(btemp+1)^0,c
 14601  01B158  0060  F007  FFE6   	movff	btemp,postinc1
 14602  01B15E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14603                           
 14604                           ;stkvar	_fmt @ sp[(-10)+-5]
 14605  01B164  0EF1               	movlw	-15
 14606  01B166  006F FF8F FFE6     	movff	plusw1,postinc1
 14607  01B16C  006F FF8F FFE6     	movff	plusw1,postinc1
 14608                           
 14609                           ;stkvar	_f @ sp[(-12)+0]
 14610  01B172  0EF4               	movlw	244
 14611  01B174  24E1               	addwf	fsr1l,w,c
 14612  01B176  6E01               	movwf	btemp^0,c
 14613  01B178  0EFF               	movlw	255
 14614  01B17A  20E2               	addwfc	fsr1h,w,c
 14615  01B17C  6E02               	movwf	(btemp+1)^0,c
 14616  01B17E  0060  F007  FFE6   	movff	btemp,postinc1
 14617  01B184  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14618  01B18A  EC66  F0DE         	call	_vfprintf	;wreg free
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;stkvar	_f @ sp[(-8)+0]
 14622  01B18E  0EFA               	movlw	250
 14623  01B190  24E1               	addwf	fsr1l,w,c
 14624  01B192  6ED9               	movwf	fsr2l,c
 14625  01B194  0EFF               	movlw	255
 14626  01B196  20E2               	addwfc	fsr1h,w,c
 14627  01B198  6EDA               	movwf	fsr2h,c
 14628  01B19A  006F FF78  F00B    	movff	postinc2,btemp+10
 14629  01B1A0  006F FF74  F00C    	movff	postdec2,btemp+11
 14630                           
 14631                           ;stkvar	_s @ sp[(-8)+-3]
 14632  01B1A6  0EF5               	movlw	-11
 14633  01B1A8  006F FF8C  F009    	movff	plusw1,btemp+8
 14634  01B1AE  0EF6               	movlw	-10
 14635  01B1B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 14636  01B1B6  500B               	movf	(btemp+10)^0,w,c
 14637  01B1B8  2409               	addwf	(btemp+8)^0,w,c
 14638  01B1BA  6ED9               	movwf	fsr2l,c
 14639  01B1BC  500C               	movf	(btemp+11)^0,w,c
 14640  01B1BE  200A               	addwfc	(btemp+9)^0,w,c
 14641  01B1C0  6EDA               	movwf	fsr2h,c
 14642  01B1C2  0E00               	movlw	0
 14643  01B1C4  6EDF               	movwf	indf2,c
 14644                           
 14645                           ; BSR set to: 0
 14646                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 14647  01B1C6  0EF8               	movlw	248
 14648  01B1C8  26E1               	addwf	fsr1l,f,c
 14649  01B1CA  0EFF               	movlw	255
 14650  01B1CC  22E2               	addwfc	fsr1h,f,c
 14651  01B1CE  52E5               	movf	postdec1,f,c
 14652  01B1D0  50E7               	movf	indf1,w,c
 14653  01B1D2  5EE1               	subwf	fsr1l,f,c
 14654  01B1D4  0E00               	movlw	0
 14655  01B1D6  5AE2               	subwfb	fsr1h,f,c
 14656  01B1D8  0012               	return		;funcret
 14657  01B1DA                     __end_of_sprintf:
 14658                           	opt callstack 0
 14659                           
 14660 ;; *************** function _get_vterm_ptr *****************
 14661 ;; Defined at:
 14662 ;;		line 116 in file "mconfig.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;  line            1  [STACK] const unsigned char 
 14665 ;;  vterm           1  [STACK] const unsigned char 
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;		None
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  2  [STACK] PTR unsigned char 
 14670 ;; Registers used:
 14671 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/1
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14681 ;;Total ram usage:        0 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:   15
 14684 ;; This function calls:
 14685 ;;		Nothing
 14686 ;; This function is called by:
 14687 ;;		_main
 14688 ;;		_current_sensor_cal
 14689 ;;		_check_help
 14690 ;;		_vterm_dump
 14691 ;; This function uses a reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text53
 14695  01D47C                     __ptext53:
 14696                           	opt callstack 0
 14697  01D47C                     _get_vterm_ptr:
 14698                           	opt callstack 15
 14699                           
 14700                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 14701                           ;stkvar	_vterm @ sp[(0)+-2]
 14702                           
 14703                           ; BSR set to: 0
 14704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14705                           ;incstack = 0
 14706  01D47C  0EFE               	movlw	-2
 14707  01D47E  50E3               	movf	plusw1,w,c
 14708  01D480  0B03               	andlw	3
 14709  01D482  0D78               	mullw	120
 14710  01D484  0E42               	movlw	low _D
 14711  01D486  6E01               	movwf	btemp^0,c
 14712  01D488  0E09               	movlw	high _D
 14713  01D48A  6E02               	movwf	(btemp+1)^0,c
 14714  01D48C  50F3               	movf	243,w,c
 14715  01D48E  2601               	addwf	btemp^0,f,c
 14716  01D490  50F4               	movf	244,w,c
 14717  01D492  2202               	addwfc	(btemp+1)^0,f,c
 14718                           
 14719                           ;stkvar	_line @ sp[(0)+-1]
 14720  01D494  0EFF               	movlw	-1
 14721  01D496  50E3               	movf	plusw1,w,c
 14722  01D498  0B03               	andlw	3
 14723  01D49A  0D28               	mullw	40
 14724  01D49C  50F3               	movf	243,w,c
 14725  01D49E  2601               	addwf	btemp^0,f,c
 14726  01D4A0  50F4               	movf	244,w,c
 14727  01D4A2  2202               	addwfc	(btemp+1)^0,f,c
 14728                           
 14729                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 14730  01D4A4  52E5               	movf	postdec1,f,c
 14731  01D4A6  52E5               	movf	postdec1,f,c
 14732  01D4A8  0012               	return		;funcret
 14733  01D4AA                     __end_of_get_vterm_ptr:
 14734                           	opt callstack 0
 14735                           
 14736 ;; *************** function _WaitMs *****************
 14737 ;; Defined at:
 14738 ;;		line 32 in file "timers.c"
 14739 ;; Parameters:    Size  Location     Type
 14740 ;;  numMilliseco    2  [STACK] const unsigned short 
 14741 ;; Auto vars:     Size  Location     Type
 14742 ;;		None
 14743 ;; Return value:  Size  Location     Type
 14744 ;;                  1  [STACK] void 
 14745 ;; Registers used:
 14746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14747 ;; Tracked objects:
 14748 ;;		On entry : 0/2
 14749 ;;		On exit  : 0/0
 14750 ;;		Unchanged: 0/0
 14751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14756 ;;Total ram usage:        0 bytes
 14757 ;; Hardware stack levels used:    1
 14758 ;; Hardware stack levels required when called:   16
 14759 ;; This function calls:
 14760 ;;		_StartTimer
 14761 ;;		_TimerDone
 14762 ;; This function is called by:
 14763 ;;		_main
 14764 ;;		_current_sensor_cal
 14765 ;;		_vterm_dump
 14766 ;; This function uses a reentrant model
 14767 ;;
 14768                           
 14769                           	psect	text54
 14770  01D250                     __ptext54:
 14771                           	opt callstack 0
 14772  01D250                     _WaitMs:
 14773                           	opt callstack 13
 14774                           
 14775                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 14776                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 14777                           
 14778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14779                           ;incstack = 0
 14780  01D250  0EFE               	movlw	-2
 14781  01D252  006F FF8F FFE6     	movff	plusw1,postinc1
 14782  01D258  006F FF8F FFE6     	movff	plusw1,postinc1
 14783  01D25E  0E00               	movlw	0
 14784  01D260  6EE6               	movwf	postinc1,c
 14785  01D262  EC33  F0E8         	call	_StartTimer	;wreg free
 14786                           
 14787                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 14788  01D266  D005               	goto	l10879
 14789  01D268                     l1745:
 14790                           
 14791                           ;timers.c: 36:   __nop();
 14792  01D268  F000               	nop	
 14793                           
 14794                           ;timers.c: 37:   __nop();
 14795  01D26A  F000               	nop	
 14796                           
 14797                           ;timers.c: 38:   __nop();
 14798  01D26C  F000               	nop	
 14799                           
 14800                           ;timers.c: 39:   __nop();
 14801  01D26E  F000               	nop	
 14802  01D270  0004               	clrwdt		;# 
 14803  01D272                     l10879:
 14804                           
 14805                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 14806  01D272  0E00               	movlw	0
 14807  01D274  6EE6               	movwf	postinc1,c
 14808  01D276  ECC1  F0EA         	call	_TimerDone	;wreg free
 14809  01D27A  5001               	movf	btemp^0,w,c
 14810  01D27C  B4D8               	btfsc	status,2,c
 14811  01D27E  D7F4               	goto	l1745
 14812                           
 14813                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 14814  01D280  52E5               	movf	postdec1,f,c
 14815  01D282  52E5               	movf	postdec1,f,c
 14816  01D284  0012               	return		;funcret
 14817  01D286                     __end_of_WaitMs:
 14818                           	opt callstack 0
 14819                           
 14820 ;; *************** function _update_lcd *****************
 14821 ;; Defined at:
 14822 ;;		line 85 in file "mconfig.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  vterm           1  [STACK] unsigned char 
 14825 ;; Auto vars:     Size  Location     Type
 14826 ;;		None
 14827 ;; Return value:  Size  Location     Type
 14828 ;;                  1  [STACK] unsigned char 
 14829 ;; Registers used:
 14830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14840 ;;Total ram usage:        0 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:   27
 14843 ;; This function calls:
 14844 ;;		_eaDogM_WriteStringAtPos
 14845 ;;		_wait_lcd_done
 14846 ;; This function is called by:
 14847 ;;		_main
 14848 ;;		_current_sensor_cal
 14849 ;;		_check_help
 14850 ;; This function uses a reentrant model
 14851 ;;
 14852                           
 14853                           	psect	text55
 14854  01AEB2                     __ptext55:
 14855                           	opt callstack 0
 14856  01AEB2                     _update_lcd:
 14857                           	opt callstack 3
 14858                           
 14859                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 14860                           ;stkvar	_vterm @ sp[(0)+-1]
 14861                           
 14862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14863                           ;incstack = 0
 14864  01AEB2  0EFF               	movlw	-1
 14865  01AEB4  006F FF8C  F001    	movff	plusw1,btemp
 14866  01AEBA  0E03               	movlw	3
 14867  01AEBC  1601               	andwf	btemp^0,f,c
 14868  01AEBE  0EFF               	movlw	-1
 14869  01AEC0  0060  F007  FFE3   	movff	btemp,plusw1
 14870                           
 14871                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 14872  01AEC6  EE22  F322         	lfsr	2,_D+480
 14873  01AECA  A0DF               	btfss	indf2,0,c
 14874  01AECC  D004               	goto	l14277
 14875                           
 14876                           ;stkvar	_vterm @ sp[(0)+-1]
 14877  01AECE  0EFF               	movlw	-1
 14878  01AED0  50E3               	movf	plusw1,w,c
 14879  01AED2  B4D8               	btfsc	status,2,c
 14880  01AED4  D074               	goto	l1821
 14881  01AED6                     l14277:
 14882                           
 14883                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 14884                           ;stkvar	_vterm @ sp[(0)+-1]
 14885  01AED6  0EFF               	movlw	-1
 14886  01AED8  50E3               	movf	plusw1,w,c
 14887  01AEDA  0D78               	mullw	120
 14888  01AEDC  0E56               	movlw	low (_D+20)
 14889  01AEDE  24F3               	addwf	243,w,c
 14890  01AEE0  6ED9               	movwf	fsr2l,c
 14891  01AEE2  0E09               	movlw	high (_D+20)
 14892  01AEE4  20F4               	addwfc	prodh,w,c
 14893  01AEE6  6EDA               	movwf	fsr2h,c
 14894  01AEE8  0E00               	movlw	0
 14895  01AEEA  6EDF               	movwf	indf2,c
 14896                           
 14897                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 14898                           ;stkvar	_vterm @ sp[(0)+-1]
 14899  01AEEC  0EFF               	movlw	-1
 14900  01AEEE  50E3               	movf	plusw1,w,c
 14901  01AEF0  0D78               	mullw	120
 14902  01AEF2  0E7E               	movlw	low (_D+60)
 14903  01AEF4  24F3               	addwf	243,w,c
 14904  01AEF6  6ED9               	movwf	fsr2l,c
 14905  01AEF8  0E09               	movlw	high (_D+60)
 14906  01AEFA  20F4               	addwfc	prodh,w,c
 14907  01AEFC  6EDA               	movwf	fsr2h,c
 14908  01AEFE  0E00               	movlw	0
 14909  01AF00  6EDF               	movwf	indf2,c
 14910                           
 14911                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 14912                           ;stkvar	_vterm @ sp[(0)+-1]
 14913  01AF02  0EFF               	movlw	-1
 14914  01AF04  50E3               	movf	plusw1,w,c
 14915  01AF06  0D78               	mullw	120
 14916  01AF08  0EA6               	movlw	low (_D+100)
 14917  01AF0A  24F3               	addwf	243,w,c
 14918  01AF0C  6ED9               	movwf	fsr2l,c
 14919  01AF0E  0E09               	movlw	high (_D+100)
 14920  01AF10  20F4               	addwfc	prodh,w,c
 14921  01AF12  6EDA               	movwf	fsr2h,c
 14922  01AF14  0E00               	movlw	0
 14923  01AF16  6EDF               	movwf	indf2,c
 14924                           
 14925                           ;mconfig.c: 95:  wait_lcd_done();
 14926  01AF18  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 14930                           ;stkvar	_vterm @ sp[(0)+-1]
 14931  01AF1C  0EFF               	movlw	-1
 14932  01AF1E  50E3               	movf	plusw1,w,c
 14933  01AF20  0D78               	mullw	120
 14934  01AF22  0E42               	movlw	low _D
 14935  01AF24  6E0B               	movwf	(btemp+10)^0,c
 14936  01AF26  0E09               	movlw	high _D
 14937  01AF28  6E0C               	movwf	(btemp+11)^0,c
 14938  01AF2A  50F3               	movf	243,w,c
 14939  01AF2C  260B               	addwf	(btemp+10)^0,f,c
 14940  01AF2E  50F4               	movf	244,w,c
 14941  01AF30  220C               	addwfc	(btemp+11)^0,f,c
 14942  01AF32  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14943  01AF38  0060  F033  FFE6   	movff	btemp+11,postinc1
 14944  01AF3E  0E00               	movlw	0
 14945  01AF40  6EE6               	movwf	postinc1,c
 14946  01AF42  0E00               	movlw	0
 14947  01AF44  6EE6               	movwf	postinc1,c
 14948  01AF46  EC11  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14949                           
 14950                           ; BSR set to: 59
 14951                           ;mconfig.c: 97:  wait_lcd_done();
 14952  01AF4A  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 14956                           ;stkvar	_vterm @ sp[(0)+-1]
 14957  01AF4E  0EFF               	movlw	-1
 14958  01AF50  50E3               	movf	plusw1,w,c
 14959  01AF52  0D78               	mullw	120
 14960  01AF54  0E42               	movlw	low _D
 14961  01AF56  6E0B               	movwf	(btemp+10)^0,c
 14962  01AF58  0E09               	movlw	high _D
 14963  01AF5A  6E0C               	movwf	(btemp+11)^0,c
 14964  01AF5C  0E28               	movlw	40
 14965  01AF5E  260B               	addwf	(btemp+10)^0,f,c
 14966  01AF60  0E00               	movlw	0
 14967  01AF62  220C               	addwfc	(btemp+11)^0,f,c
 14968  01AF64  50F3               	movf	243,w,c
 14969  01AF66  260B               	addwf	(btemp+10)^0,f,c
 14970  01AF68  50F4               	movf	244,w,c
 14971  01AF6A  220C               	addwfc	(btemp+11)^0,f,c
 14972  01AF6C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14973  01AF72  0060  F033  FFE6   	movff	btemp+11,postinc1
 14974  01AF78  0E00               	movlw	0
 14975  01AF7A  6EE6               	movwf	postinc1,c
 14976  01AF7C  0E01               	movlw	1
 14977  01AF7E  6EE6               	movwf	postinc1,c
 14978  01AF80  EC11  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14979                           
 14980                           ; BSR set to: 59
 14981                           ;mconfig.c: 99:  wait_lcd_done();
 14982  01AF84  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 14983                           
 14984                           ; BSR set to: 0
 14985                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 14986                           ;stkvar	_vterm @ sp[(0)+-1]
 14987  01AF88  0EFF               	movlw	-1
 14988  01AF8A  50E3               	movf	plusw1,w,c
 14989  01AF8C  0D78               	mullw	120
 14990  01AF8E  0E42               	movlw	low _D
 14991  01AF90  6E0B               	movwf	(btemp+10)^0,c
 14992  01AF92  0E09               	movlw	high _D
 14993  01AF94  6E0C               	movwf	(btemp+11)^0,c
 14994  01AF96  0E50               	movlw	80
 14995  01AF98  260B               	addwf	(btemp+10)^0,f,c
 14996  01AF9A  0E00               	movlw	0
 14997  01AF9C  220C               	addwfc	(btemp+11)^0,f,c
 14998  01AF9E  50F3               	movf	243,w,c
 14999  01AFA0  260B               	addwf	(btemp+10)^0,f,c
 15000  01AFA2  50F4               	movf	244,w,c
 15001  01AFA4  220C               	addwfc	(btemp+11)^0,f,c
 15002  01AFA6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15003  01AFAC  0060  F033  FFE6   	movff	btemp+11,postinc1
 15004  01AFB2  0E00               	movlw	0
 15005  01AFB4  6EE6               	movwf	postinc1,c
 15006  01AFB6  0E02               	movlw	2
 15007  01AFB8  6EE6               	movwf	postinc1,c
 15008  01AFBA  EC11  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 15009  01AFBE                     l1821:
 15010                           
 15011                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 15012  01AFBE  52E5               	movf	postdec1,f,c
 15013  01AFC0  0012               	return		;funcret
 15014  01AFC2                     __end_of_update_lcd:
 15015                           	opt callstack 0
 15016                           
 15017 ;; *************** function _eaDogM_WriteStringAtPos *****************
 15018 ;; Defined at:
 15019 ;;		line 195 in file "eadog.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  r               1  [STACK] const unsigned char 
 15022 ;;  c               1  [STACK] const unsigned char 
 15023 ;;  strPtr          2  [STACK] PTR unsigned char 
 15024 ;;		 -> D.lcd(480), D(482), V(192), 
 15025 ;; Auto vars:     Size  Location     Type
 15026 ;;  row             1  [STACK] unsigned char 
 15027 ;; Return value:  Size  Location     Type
 15028 ;;                  1  [STACK] void 
 15029 ;; Registers used:
 15030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15031 ;; Tracked objects:
 15032 ;;		On entry : 3F/0
 15033 ;;		On exit  : 3F/3B
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;Total ram usage:        0 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:   26
 15043 ;; This function calls:
 15044 ;;		_eaDogM_WriteString
 15045 ;;		_send_lcd_cmd_dma
 15046 ;;		_send_lcd_data_dma
 15047 ;;		_wait_lcd_done
 15048 ;;		_wdtdelay
 15049 ;; This function is called by:
 15050 ;;		_update_lcd
 15051 ;;		_vterm_dump
 15052 ;; This function uses a reentrant model
 15053 ;;
 15054                           
 15055                           	psect	text56
 15056  01BE22                     __ptext56:
 15057                           	opt callstack 0
 15058  01BE22                     _eaDogM_WriteStringAtPos:
 15059                           	opt callstack 0
 15060                           
 15061                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15062  01BE22  52E6               	movf	postinc1,f,c
 15063                           
 15064                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 15065                           
 15066                           ;incstack = 0
 15067  01BE24  D014               	goto	l14253
 15068  01BE26                     l14241:
 15069                           
 15070                           ;eadog.c: 201:   row = 0x40;
 15071                           ;stkvar	_row @ sp[(-1)+0]
 15072  01BE26  0EFF               	movlw	-1
 15073  01BE28  6AE3               	clrf	plusw1,c
 15074  01BE2A  8CE3               	bsf	plusw1,6,c
 15075                           
 15076                           ;eadog.c: 202:   break;
 15077  01BE2C  D026               	goto	l14255
 15078  01BE2E                     l14243:
 15079                           
 15080                           ;eadog.c: 204:   row = 0x14;
 15081                           ;stkvar	_row @ sp[(-1)+0]
 15082  01BE2E  0EFF               	movlw	-1
 15083  01BE30  6AE3               	clrf	plusw1,c
 15084  01BE32  84E3               	bsf	plusw1,2,c
 15085  01BE34  88E3               	bsf	plusw1,4,c	;indir
 15086                           
 15087                           ;eadog.c: 205:   break;
 15088  01BE36  D021               	goto	l14255
 15089  01BE38                     l14245:
 15090                           
 15091                           ;eadog.c: 207:   row = 0x54;
 15092  01BE38  0E54               	movlw	84
 15093  01BE3A  6E0C               	movwf	(btemp+11)^0,c
 15094                           
 15095                           ;stkvar	_row @ sp[(-1)+0]
 15096  01BE3C  0EFF               	movlw	-1
 15097  01BE3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15098                           
 15099                           ;eadog.c: 208:   break;
 15100  01BE44  D01A               	goto	l14255
 15101  01BE46                     l14247:
 15102                           
 15103                           ;eadog.c: 210:   row = 0x1;
 15104                           ;stkvar	_row @ sp[(-1)+0]
 15105  01BE46  0EFF               	movlw	-1
 15106  01BE48  6AE3               	clrf	plusw1,c
 15107  01BE4A  2AE3               	incf	plusw1,f,c
 15108                           
 15109                           ;eadog.c: 211:   break;
 15110  01BE4C  D016               	goto	l14255
 15111  01BE4E                     l14253:
 15112                           
 15113                           ;stkvar	_r @ sp[(-1)+-1]
 15114  01BE4E  0EFE               	movlw	-2
 15115  01BE50  50E3               	movf	plusw1,w,c
 15116  01BE52  6E0B               	movwf	(btemp+10)^0,c
 15117  01BE54  6A0C               	clrf	(btemp+11)^0,c
 15118                           
 15119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15120                           ; Switch size 1, requested type "simple"
 15121                           ; Number of cases is 1, Range of values is 0 to 0
 15122                           ; switch strategies available:
 15123                           ; Name         Instructions Cycles
 15124                           ; simple_byte            4     3 (average)
 15125                           ;	Chosen strategy is simple_byte
 15126  01BE56  500C               	movf	(btemp+11)^0,w,c
 15127  01BE58  0A00               	xorlw	0	; case 0
 15128  01BE5A  A4D8               	btfss	status,2,c
 15129  01BE5C  D7E4               	goto	l14241
 15130                           
 15131                           ; Switch size 1, requested type "simple"
 15132                           ; Number of cases is 4, Range of values is 0 to 3
 15133                           ; switch strategies available:
 15134                           ; Name         Instructions Cycles
 15135                           ; simple_byte           13     7 (average)
 15136                           ;	Chosen strategy is simple_byte
 15137  01BE5E  500B               	movf	(btemp+10)^0,w,c
 15138  01BE60  0A00               	xorlw	0	; case 0
 15139  01BE62  B4D8               	btfsc	status,2,c
 15140  01BE64  D7E0               	goto	l14241
 15141  01BE66  0A01               	xorlw	1	; case 1
 15142  01BE68  B4D8               	btfsc	status,2,c
 15143  01BE6A  D7E1               	goto	l14243
 15144  01BE6C  0A03               	xorlw	3	; case 2
 15145  01BE6E  B4D8               	btfsc	status,2,c
 15146  01BE70  D7E3               	goto	l14245
 15147  01BE72  0A01               	xorlw	1	; case 3
 15148  01BE74  B4D8               	btfsc	status,2,c
 15149  01BE76  D7E7               	goto	l14247
 15150  01BE78  D7D6               	goto	l14241
 15151  01BE7A                     l14255:
 15152                           
 15153                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 15154  01BE7A  0E45               	movlw	69
 15155  01BE7C  6EE6               	movwf	postinc1,c
 15156  01BE7E  ECA8  F0EC         	call	_send_lcd_cmd_dma	;wreg free
 15157                           
 15158                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 15159                           ;stkvar	_c @ sp[(-1)+-2]
 15160  01BE82  0EFD               	movlw	-3
 15161  01BE84  006F FF8C  F00C    	movff	plusw1,btemp+11
 15162                           
 15163                           ;stkvar	_row @ sp[(-1)+0]
 15164  01BE8A  0EFF               	movlw	-1
 15165  01BE8C  50E3               	movf	plusw1,w,c
 15166  01BE8E  240C               	addwf	(btemp+11)^0,w,c
 15167  01BE90  6EE6               	movwf	postinc1,c
 15168  01BE92  ECB5  F0E6         	call	_send_lcd_data_dma	;wreg free
 15169                           
 15170                           ; BSR set to: 59
 15171                           ;eadog.c: 218:  wait_lcd_done();
 15172  01BE96  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;eadog.c: 219:  wdtdelay(8);
 15176  01BE9A  0E08               	movlw	8
 15177  01BE9C  6EE6               	movwf	postinc1,c
 15178  01BE9E  0E00               	movlw	0
 15179  01BEA0  6EE6               	movwf	postinc1,c
 15180  01BEA2  0E00               	movlw	0
 15181  01BEA4  6EE6               	movwf	postinc1,c
 15182  01BEA6  0E00               	movlw	0
 15183  01BEA8  6EE6               	movwf	postinc1,c
 15184  01BEAA  EC69  F0E5         	call	_wdtdelay	;wreg free
 15185                           
 15186                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 15187                           ;stkvar	_strPtr @ sp[(-1)+-4]
 15188  01BEAE  0EFB               	movlw	-5
 15189  01BEB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15190  01BEB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15191  01BEBC  EC65  F0DF         	call	_eaDogM_WriteString	;wreg free
 15192                           
 15193                           ; BSR set to: 59
 15194                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 15195  01BEC0  0EFB               	movlw	251
 15196  01BEC2  26E1               	addwf	fsr1l,f,c
 15197  01BEC4  0EFF               	movlw	255
 15198  01BEC6  22E2               	addwfc	fsr1h,f,c
 15199  01BEC8  0012               	return		;funcret
 15200  01BECA                     __end_of_eaDogM_WriteStringAtPos:
 15201                           	opt callstack 0
 15202                           
 15203 ;; *************** function _send_lcd_cmd_dma *****************
 15204 ;; Defined at:
 15205 ;;		line 171 in file "eadog.c"
 15206 ;; Parameters:    Size  Location     Type
 15207 ;;  strPtr          1  [STACK] const unsigned char 
 15208 ;; Auto vars:     Size  Location     Type
 15209 ;;		None
 15210 ;; Return value:  Size  Location     Type
 15211 ;;                  1  [STACK] void 
 15212 ;; Registers used:
 15213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15214 ;; Tracked objects:
 15215 ;;		On entry : 0/3D
 15216 ;;		On exit  : 3F/0
 15217 ;;		Unchanged: 0/0
 15218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15223 ;;Total ram usage:        0 bytes
 15224 ;; Hardware stack levels used:    1
 15225 ;; Hardware stack levels required when called:   25
 15226 ;; This function calls:
 15227 ;;		_send_lcd_data_dma
 15228 ;;		_wait_lcd_done
 15229 ;; This function is called by:
 15230 ;;		_eaDogM_WriteStringAtPos
 15231 ;;		_eaDogM_WriteCommand
 15232 ;; This function uses a reentrant model
 15233 ;;
 15234                           
 15235                           	psect	text57
 15236  01D950                     __ptext57:
 15237                           	opt callstack 0
 15238  01D950                     _send_lcd_cmd_dma:
 15239                           	opt callstack 3
 15240                           
 15241                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 15242                           
 15243                           ; BSR set to: 59
 15244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15245                           ;incstack = 0
 15246  01D950  0EFE               	movlw	254
 15247  01D952  6EE6               	movwf	postinc1,c
 15248  01D954  ECB5  F0E6         	call	_send_lcd_data_dma	;wreg free
 15249                           
 15250                           ; BSR set to: 59
 15251                           ;eadog.c: 174:  wait_lcd_done();
 15252  01D958  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 15253                           
 15254                           ; BSR set to: 0
 15255                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 15256                           ;stkvar	_strPtr @ sp[(0)+-1]
 15257  01D95C  0EFF               	movlw	-1
 15258  01D95E  50E3               	movf	plusw1,w,c
 15259  01D960  6EE6               	movwf	postinc1,c
 15260  01D962  ECB5  F0E6         	call	_send_lcd_data_dma	;wreg free
 15261                           
 15262                           ;eadog.c: 176:  wait_lcd_done();
 15263  01D966  EC46  F0EC         	call	_wait_lcd_done	;wreg free
 15264                           
 15265                           ; BSR set to: 0
 15266                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 15267  01D96A  52E5               	movf	postdec1,f,c
 15268  01D96C  0012               	return		;funcret
 15269  01D96E                     __end_of_send_lcd_cmd_dma:
 15270                           	opt callstack 0
 15271                           
 15272 ;; *************** function _wait_lcd_done *****************
 15273 ;; Defined at:
 15274 ;;		line 444 in file "eadog.c"
 15275 ;; Parameters:    Size  Location     Type
 15276 ;;		None
 15277 ;; Auto vars:     Size  Location     Type
 15278 ;;		None
 15279 ;; Return value:  Size  Location     Type
 15280 ;;                  1  [STACK] void 
 15281 ;; Registers used:
 15282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 15283 ;; Tracked objects:
 15284 ;;		On entry : 0/2
 15285 ;;		On exit  : 3F/0
 15286 ;;		Unchanged: 0/0
 15287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15292 ;;Total ram usage:        0 bytes
 15293 ;; Hardware stack levels used:    1
 15294 ;; Hardware stack levels required when called:   16
 15295 ;; This function calls:
 15296 ;;		_wdtdelay
 15297 ;; This function is called by:
 15298 ;;		_main
 15299 ;;		_send_lcd_cmd_dma
 15300 ;;		_eaDogM_WriteStringAtPos
 15301 ;;		_update_lcd
 15302 ;;		_vterm_dump
 15303 ;; This function uses a reentrant model
 15304 ;;
 15305                           
 15306                           	psect	text58
 15307  01D88C                     __ptext58:
 15308                           	opt callstack 0
 15309  01D88C                     _wait_lcd_done:
 15310                           	opt callstack 14
 15311                           
 15312                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 15313                           
 15314                           ; BSR set to: 0
 15315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15316                           ;incstack = 0
 15317  01D88C  0100               	movlb	0	; () banked
 15318  01D88E  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 15319  01D890  D7FD               	goto	_wait_lcd_done
 15320  01D892                     u9320:
 15321  01D892  013D               	movlb	61	; () banked
 15322  01D894  AB17               	btfss	23,5,b	;volatile
 15323  01D896  D7FD               	goto	u9320
 15324                           
 15325                           ; BSR set to: 61
 15326                           ;eadog.c: 448:  wdtdelay(50);
 15327  01D898  0E32               	movlw	50
 15328  01D89A  6EE6               	movwf	postinc1,c
 15329  01D89C  0E00               	movlw	0
 15330  01D89E  6EE6               	movwf	postinc1,c
 15331  01D8A0  0E00               	movlw	0
 15332  01D8A2  6EE6               	movwf	postinc1,c
 15333  01D8A4  0E00               	movlw	0
 15334  01D8A6  6EE6               	movwf	postinc1,c
 15335  01D8A8  EC69  F0E5         	call	_wdtdelay	;wreg free
 15336                           
 15337                           ; BSR set to: 0
 15338                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 15339  01D8AC  0012               	return		;funcret
 15340  01D8AE                     __end_of_wait_lcd_done:
 15341                           	opt callstack 0
 15342                           
 15343 ;; *************** function _wdtdelay *****************
 15344 ;; Defined at:
 15345 ;;		line 23 in file "eadog.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;  delay           4  [STACK] const unsigned long 
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;		None
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  1  [STACK] void 
 15352 ;; Registers used:
 15353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 15354 ;; Tracked objects:
 15355 ;;		On entry : 2/3D
 15356 ;;		On exit  : 3F/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15363 ;;Total ram usage:        0 bytes
 15364 ;; Hardware stack levels used:    1
 15365 ;; Hardware stack levels required when called:   15
 15366 ;; This function calls:
 15367 ;;		Nothing
 15368 ;; This function is called by:
 15369 ;;		_init_display
 15370 ;;		_send_lcd_data
 15371 ;;		_send_lcd_cmd
 15372 ;;		_send_lcd_cmd_long
 15373 ;;		_eaDogM_WriteStringAtPos
 15374 ;;		_wait_lcd_done
 15375 ;; This function uses a reentrant model
 15376 ;;
 15377                           
 15378                           	psect	text59
 15379  01CAD2                     __ptext59:
 15380                           	opt callstack 0
 15381  01CAD2                     _wdtdelay:
 15382                           	opt callstack 14
 15383                           
 15384                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 15385                           
 15386                           ; BSR set to: 0
 15387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15388                           ;incstack = 0
 15389  01CAD2  0100               	movlb	0	; () banked
 15390  01CAD4  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 15391  01CAD6  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 15392  01CAD8  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 15393  01CADA  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 15394  01CADC                     l1598:
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;eadog.c: 28:   __nop();
 15398  01CADC  F000               	nop	
 15399  01CADE  0004               	clrwdt		;# 
 15400                           
 15401                           ;eadog.c: 30:  };
 15402  01CAE0  0E01               	movlw	1
 15403  01CAE2  0100               	movlb	0	; () banked
 15404  01CAE4  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 15405  01CAE6  0E00               	movlw	0
 15406  01CAE8  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 15407  01CAEA  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 15408  01CAEC  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 15409                           
 15410                           ; BSR set to: 0
 15411                           ;stkvar	_delay @ sp[(0)+-4]
 15412  01CAEE  0EFC               	movlw	-4
 15413  01CAF0  006F FF8C  F001    	movff	plusw1,btemp
 15414  01CAF6  519A               	movf	wdtdelay@dcount& (0+255),w,b
 15415  01CAF8  5C01               	subwf	btemp^0,w,c
 15416  01CAFA  0EFD               	movlw	-3
 15417  01CAFC  006F FF8C  F001    	movff	plusw1,btemp
 15418  01CB02  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 15419  01CB04  5801               	subwfb	btemp^0,w,c
 15420  01CB06  0EFE               	movlw	-2
 15421  01CB08  006F FF8C  F001    	movff	plusw1,btemp
 15422  01CB0E  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 15423  01CB10  5801               	subwfb	btemp^0,w,c
 15424  01CB12  0EFF               	movlw	-1
 15425  01CB14  006F FF8C  F001    	movff	plusw1,btemp
 15426  01CB1A  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 15427  01CB1C  5801               	subwfb	btemp^0,w,c
 15428  01CB1E  B0D8               	btfsc	status,0,c
 15429  01CB20  D7DD               	goto	l1598
 15430                           
 15431                           ; BSR set to: 0
 15432                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 15433  01CB22  52E5               	movf	postdec1,f,c
 15434  01CB24  52E5               	movf	postdec1,f,c
 15435  01CB26  52E5               	movf	postdec1,f,c
 15436  01CB28  52E5               	movf	postdec1,f,c
 15437  01CB2A  0012               	return		;funcret
 15438  01CB2C                     __end_of_wdtdelay:
 15439                           	opt callstack 0
 15440                           
 15441 ;; *************** function _send_lcd_data_dma *****************
 15442 ;; Defined at:
 15443 ;;		line 182 in file "eadog.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;  strPtr          1  [STACK] const unsigned char 
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;		None
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1  [STACK] void 
 15450 ;; Registers used:
 15451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 3F/3B
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15461 ;;Total ram usage:        0 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; Hardware stack levels required when called:   24
 15464 ;; This function calls:
 15465 ;;		_printf
 15466 ;;		_ringBufS_flush
 15467 ;;		_start_lcd
 15468 ;;		_wait_lcd_set
 15469 ;; This function is called by:
 15470 ;;		_send_lcd_cmd_dma
 15471 ;;		_eaDogM_WriteStringAtPos
 15472 ;; This function uses a reentrant model
 15473 ;;
 15474                           
 15475                           	psect	text60
 15476  01CD6A                     __ptext60:
 15477                           	opt callstack 0
 15478  01CD6A                     _send_lcd_data_dma:
 15479                           	opt callstack 4
 15480                           
 15481                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 15482                           
 15483                           ; BSR set to: 0
 15484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15485                           ;incstack = 0
 15486  01CD6A  ECDC  F0ED         	call	_wait_lcd_set	;wreg free
 15487                           
 15488                           ; BSR set to: 0
 15489                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 15490  01CD6E  0E00               	movlw	0
 15491  01CD70  6EE6               	movwf	postinc1,c
 15492  01CD72  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 15493  01CD78  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 15494  01CD7E  EC9E  F0E0         	call	_ringBufS_flush	;wreg free
 15495  01CD82  94BC               	bcf	188,2,c	;volatile
 15496                           
 15497                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 15498  01CD84  013B               	movlb	59	; () banked
 15499  01CD86  9FFC               	bcf	252,7,b	;volatile
 15500                           
 15501                           ; BSR set to: 59
 15502                           ;eadog.c: 189:  DMA1SSZ = 1;
 15503  01CD88  0E00               	movlw	0
 15504  01CD8A  6FF8               	movwf	248,b	;volatile
 15505  01CD8C  0E01               	movlw	1
 15506  01CD8E  6FF7               	movwf	247,b	;volatile
 15507                           
 15508                           ; BSR set to: 59
 15509                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 15510  01CD90  8FFC               	bsf	252,7,b	;volatile
 15511                           
 15512                           ; BSR set to: 59
 15513                           ;eadog.c: 191:  printf("%c", strPtr);
 15514                           ;stkvar	_strPtr @ sp[(0)+-1]
 15515  01CD92  0EFF               	movlw	-1
 15516  01CD94  50E3               	movf	plusw1,w,c
 15517  01CD96  6EE6               	movwf	postinc1,c
 15518  01CD98  0E00               	movlw	0
 15519  01CD9A  6EE6               	movwf	postinc1,c
 15520  01CD9C  0EF9               	movlw	low STR_73
 15521  01CD9E  6EE6               	movwf	postinc1,c
 15522  01CDA0  0EFF               	movlw	high STR_73
 15523  01CDA2  6EE6               	movwf	postinc1,c
 15524  01CDA4  0E04               	movlw	4
 15525  01CDA6  6EE6               	movwf	postinc1,c
 15526  01CDA8  ECAA  F0E4         	call	_printf	;wreg free
 15527                           
 15528                           ; BSR set to: 0
 15529                           ;eadog.c: 192:  start_lcd();
 15530  01CDAC  ECDF  F0ED         	call	_start_lcd	;wreg free
 15531                           
 15532                           ; BSR set to: 59
 15533                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 15534  01CDB0  52E5               	movf	postdec1,f,c
 15535  01CDB2  0012               	return		;funcret
 15536  01CDB4                     __end_of_send_lcd_data_dma:
 15537                           	opt callstack 0
 15538                           
 15539 ;; *************** function _eaDogM_WriteString *****************
 15540 ;; Defined at:
 15541 ;;		line 151 in file "eadog.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;  strPtr          2  [STACK] PTR unsigned char 
 15544 ;;		 -> D.lcd(480), D(482), V(192), 
 15545 ;; Auto vars:     Size  Location     Type
 15546 ;;		None
 15547 ;; Return value:  Size  Location     Type
 15548 ;;                  1  [STACK] void 
 15549 ;; Registers used:
 15550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15551 ;; Tracked objects:
 15552 ;;		On entry : 3F/0
 15553 ;;		On exit  : 3F/3B
 15554 ;;		Unchanged: 0/0
 15555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15560 ;;Total ram usage:        0 bytes
 15561 ;; Hardware stack levels used:    1
 15562 ;; Hardware stack levels required when called:   24
 15563 ;; This function calls:
 15564 ;;		_printf
 15565 ;;		_ringBufS_flush
 15566 ;;		_start_lcd
 15567 ;;		_strlen
 15568 ;;		_wait_lcd_set
 15569 ;; This function is called by:
 15570 ;;		_eaDogM_WriteStringAtPos
 15571 ;; This function uses a reentrant model
 15572 ;;
 15573                           
 15574                           	psect	text61
 15575  01BECA                     __ptext61:
 15576                           	opt callstack 0
 15577  01BECA                     _eaDogM_WriteString:
 15578                           	opt callstack 4
 15579                           
 15580                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 15581                           
 15582                           ; BSR set to: 59
 15583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15584                           ;incstack = 0
 15585  01BECA  ECDC  F0ED         	call	_wait_lcd_set	;wreg free
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 15589  01BECE  0E00               	movlw	0
 15590  01BED0  6EE6               	movwf	postinc1,c
 15591  01BED2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 15592  01BED8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 15593  01BEDE  EC9E  F0E0         	call	_ringBufS_flush	;wreg free
 15594  01BEE2  94BC               	bcf	188,2,c	;volatile
 15595                           
 15596                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 15597                           ;stkvar	_strPtr @ sp[(0)+-2]
 15598  01BEE4  0EFE               	movlw	-2
 15599  01BEE6  006F FF8F FFE6     	movff	plusw1,postinc1
 15600  01BEEC  006F FF8F FFE6     	movff	plusw1,postinc1
 15601  01BEF2  ECB8  F0DF         	call	_strlen	;wreg free
 15602  01BEF6  5002               	movf	(btemp+1)^0,w,c
 15603  01BEF8  E104               	bnz	u13600
 15604  01BEFA  0E41               	movlw	65
 15605  01BEFC  5C01               	subwf	btemp^0,w,c
 15606  01BEFE  A0D8               	btfss	status,0,c
 15607  01BF00  D010               	goto	l14197
 15608  01BF02                     u13600:
 15609                           
 15610                           ;stkvar	_strPtr @ sp[(0)+-2]
 15611  01BF02  0EFE               	movlw	-2
 15612  01BF04  006F FF8C  F00B    	movff	plusw1,btemp+10
 15613  01BF0A  0EFF               	movlw	-1
 15614  01BF0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15615  01BF12  0E40               	movlw	64
 15616  01BF14  240B               	addwf	(btemp+10)^0,w,c
 15617  01BF16  6ED9               	movwf	fsr2l,c
 15618  01BF18  0E00               	movlw	0
 15619  01BF1A  200C               	addwfc	(btemp+11)^0,w,c
 15620  01BF1C  6EDA               	movwf	fsr2h,c
 15621  01BF1E  0E00               	movlw	0
 15622  01BF20  6EDF               	movwf	indf2,c
 15623  01BF22                     l14197:
 15624                           
 15625                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 15626  01BF22  013B               	movlb	59	; () banked
 15627  01BF24  9FFC               	bcf	252,7,b	;volatile
 15628                           
 15629                           ; BSR set to: 59
 15630                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 15631                           ;stkvar	_strPtr @ sp[(0)+-2]
 15632  01BF26  0EFE               	movlw	-2
 15633  01BF28  006F FF8F FFE6     	movff	plusw1,postinc1
 15634  01BF2E  006F FF8F FFE6     	movff	plusw1,postinc1
 15635  01BF34  ECB8  F0DF         	call	_strlen	;wreg free
 15636  01BF38  0060  F007  FBF7   	movff	btemp,15351	;volatile
 15637  01BF3E  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 15638                           
 15639                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 15640  01BF44  013B               	movlb	59	; () banked
 15641  01BF46  8FFC               	bsf	252,7,b	;volatile
 15642                           
 15643                           ; BSR set to: 59
 15644                           ;eadog.c: 161:  printf("%s", strPtr);
 15645                           ;stkvar	_strPtr @ sp[(0)+-2]
 15646  01BF48  0EFE               	movlw	-2
 15647  01BF4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15648  01BF50  006F FF8F FFE6     	movff	plusw1,postinc1
 15649  01BF56  0EFC               	movlw	low STR_72
 15650  01BF58  6EE6               	movwf	postinc1,c
 15651  01BF5A  0EFF               	movlw	high STR_72
 15652  01BF5C  6EE6               	movwf	postinc1,c
 15653  01BF5E  0E04               	movlw	4
 15654  01BF60  6EE6               	movwf	postinc1,c
 15655  01BF62  ECAA  F0E4         	call	_printf	;wreg free
 15656                           
 15657                           ; BSR set to: 0
 15658                           ;eadog.c: 162:  start_lcd();
 15659  01BF66  ECDF  F0ED         	call	_start_lcd	;wreg free
 15660                           
 15661                           ; BSR set to: 59
 15662                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 15663  01BF6A  52E5               	movf	postdec1,f,c
 15664  01BF6C  52E5               	movf	postdec1,f,c
 15665  01BF6E  0012               	return		;funcret
 15666  01BF70                     __end_of_eaDogM_WriteString:
 15667                           	opt callstack 0
 15668                           
 15669 ;; *************** function _wait_lcd_set *****************
 15670 ;; Defined at:
 15671 ;;		line 434 in file "eadog.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;		None
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1  [STACK] void 
 15678 ;; Registers used:
 15679 ;;		None
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 3F/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15689 ;;Total ram usage:        0 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; Hardware stack levels required when called:   15
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_eaDogM_WriteString
 15696 ;;		_send_lcd_data_dma
 15697 ;; This function uses a reentrant model
 15698 ;;
 15699                           
 15700                           	psect	text62
 15701  01DBB8                     __ptext62:
 15702                           	opt callstack 0
 15703  01DBB8                     _wait_lcd_set:
 15704                           	opt callstack 12
 15705                           
 15706                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 15707                           
 15708                           ; BSR set to: 59
 15709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15710                           ;incstack = 0
 15711  01DBB8  0100               	movlb	0	; () banked
 15712  01DBBA  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 15713                           
 15714                           ; BSR set to: 0
 15715                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 15716  01DBBC  0012               	return		;funcret
 15717  01DBBE                     __end_of_wait_lcd_set:
 15718                           	opt callstack 0
 15719                           
 15720 ;; *************** function _start_lcd *****************
 15721 ;; Defined at:
 15722 ;;		line 429 in file "eadog.c"
 15723 ;; Parameters:    Size  Location     Type
 15724 ;;		None
 15725 ;; Auto vars:     Size  Location     Type
 15726 ;;		None
 15727 ;; Return value:  Size  Location     Type
 15728 ;;                  1  [STACK] void 
 15729 ;; Registers used:
 15730 ;;		None
 15731 ;; Tracked objects:
 15732 ;;		On entry : 3F/0
 15733 ;;		On exit  : 3F/3B
 15734 ;;		Unchanged: 0/0
 15735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15740 ;;Total ram usage:        0 bytes
 15741 ;; Hardware stack levels used:    1
 15742 ;; Hardware stack levels required when called:   15
 15743 ;; This function calls:
 15744 ;;		Nothing
 15745 ;; This function is called by:
 15746 ;;		_eaDogM_WriteString
 15747 ;;		_send_lcd_data_dma
 15748 ;; This function uses a reentrant model
 15749 ;;
 15750                           
 15751                           	psect	text63
 15752  01DBBE                     __ptext63:
 15753                           	opt callstack 0
 15754  01DBBE                     _start_lcd:
 15755                           	opt callstack 12
 15756                           
 15757                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 15758                           
 15759                           ; BSR set to: 0
 15760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15761                           ;incstack = 0
 15762  01DBBE  013B               	movlb	59	; () banked
 15763  01DBC0  8DFC               	bsf	252,6,b	;volatile
 15764                           
 15765                           ; BSR set to: 59
 15766                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15767  01DBC2  0012               	return		;funcret
 15768  01DBC4                     __end_of_start_lcd:
 15769                           	opt callstack 0
 15770                           
 15771 ;; *************** function _ringBufS_flush *****************
 15772 ;; Defined at:
 15773 ;;		line 76 in file "ringbufs.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;  _this           2  [STACK] PTR struct ringBufS_t
 15776 ;;		 -> ring_buf1(67), 
 15777 ;;  clearBuffer     1  [STACK] const char 
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;		None
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  1  [STACK] void 
 15782 ;; Registers used:
 15783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15784 ;; Tracked objects:
 15785 ;;		On entry : 3F/0
 15786 ;;		On exit  : 0/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15793 ;;Total ram usage:        0 bytes
 15794 ;; Hardware stack levels used:    1
 15795 ;; Hardware stack levels required when called:   16
 15796 ;; This function calls:
 15797 ;;		_memset
 15798 ;; This function is called by:
 15799 ;;		_eaDogM_WriteString
 15800 ;;		_send_lcd_data_dma
 15801 ;; This function uses a reentrant model
 15802 ;;
 15803                           
 15804                           	psect	text64
 15805  01C13C                     __ptext64:
 15806                           	opt callstack 0
 15807  01C13C                     _ringBufS_flush:
 15808                           	opt callstack 11
 15809                           
 15810                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 15811                           ;stkvar	__this @ sp[(0)+-2]
 15812                           
 15813                           ; BSR set to: 59
 15814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15815                           ;incstack = 0
 15816  01C13C  0EFE               	movlw	-2
 15817  01C13E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15818  01C144  0EFF               	movlw	-1
 15819  01C146  006F FF8C  F00C    	movff	plusw1,btemp+11
 15820  01C14C  0E42               	movlw	66
 15821  01C14E  240B               	addwf	(btemp+10)^0,w,c
 15822  01C150  6ED9               	movwf	fsr2l,c
 15823  01C152  0E00               	movlw	0
 15824  01C154  200C               	addwfc	(btemp+11)^0,w,c
 15825  01C156  6EDA               	movwf	fsr2h,c
 15826  01C158  0E00               	movlw	0
 15827  01C15A  6EDF               	movwf	indf2,c
 15828                           
 15829                           ;ringbufs.c: 79:  _this->head = 0;
 15830                           ;stkvar	__this @ sp[(0)+-2]
 15831  01C15C  0EFE               	movlw	-2
 15832  01C15E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15833  01C164  0EFF               	movlw	-1
 15834  01C166  006F FF8C  F00C    	movff	plusw1,btemp+11
 15835  01C16C  0E40               	movlw	64
 15836  01C16E  240B               	addwf	(btemp+10)^0,w,c
 15837  01C170  6ED9               	movwf	fsr2l,c
 15838  01C172  0E00               	movlw	0
 15839  01C174  200C               	addwfc	(btemp+11)^0,w,c
 15840  01C176  6EDA               	movwf	fsr2h,c
 15841  01C178  0E00               	movlw	0
 15842  01C17A  6EDF               	movwf	indf2,c
 15843                           
 15844                           ;ringbufs.c: 80:  _this->tail = 0;
 15845                           ;stkvar	__this @ sp[(0)+-2]
 15846  01C17C  0EFE               	movlw	-2
 15847  01C17E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15848  01C184  0EFF               	movlw	-1
 15849  01C186  006F FF8C  F00C    	movff	plusw1,btemp+11
 15850  01C18C  0E41               	movlw	65
 15851  01C18E  240B               	addwf	(btemp+10)^0,w,c
 15852  01C190  6ED9               	movwf	fsr2l,c
 15853  01C192  0E00               	movlw	0
 15854  01C194  200C               	addwfc	(btemp+11)^0,w,c
 15855  01C196  6EDA               	movwf	fsr2h,c
 15856  01C198  0E00               	movlw	0
 15857  01C19A  6EDF               	movwf	indf2,c
 15858                           
 15859                           ;ringbufs.c: 81:  if (clearBuffer) {
 15860                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 15861  01C19C  0EFD               	movlw	-3
 15862  01C19E  50E3               	movf	plusw1,w,c
 15863  01C1A0  B4D8               	btfsc	status,2,c
 15864  01C1A2  D011               	goto	l1730
 15865                           
 15866                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 15867  01C1A4  0E40               	movlw	64
 15868  01C1A6  6EE6               	movwf	postinc1,c
 15869  01C1A8  0E00               	movlw	0
 15870  01C1AA  6EE6               	movwf	postinc1,c
 15871  01C1AC  0E00               	movlw	0
 15872  01C1AE  6EE6               	movwf	postinc1,c
 15873  01C1B0  0E00               	movlw	0
 15874  01C1B2  6EE6               	movwf	postinc1,c
 15875                           
 15876                           ;stkvar	__this @ sp[(-4)+-2]
 15877  01C1B4  0EFA               	movlw	-6
 15878  01C1B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15879  01C1BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15880  01C1C2  EC9B  F0BD         	call	_memset	;wreg free
 15881  01C1C6                     l1730:
 15882                           
 15883                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 15884  01C1C6  52E5               	movf	postdec1,f,c
 15885  01C1C8  52E5               	movf	postdec1,f,c
 15886  01C1CA  52E5               	movf	postdec1,f,c
 15887  01C1CC  0012               	return		;funcret
 15888  01C1CE                     __end_of_ringBufS_flush:
 15889                           	opt callstack 0
 15890                           
 15891 ;; *************** function _memset *****************
 15892 ;; Defined at:
 15893 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 15894 ;; Parameters:    Size  Location     Type
 15895 ;;  dest            2  [STACK] PTR void 
 15896 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15897 ;;  c               2  [STACK] int 
 15898 ;;  n               2  [STACK] unsigned int 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;  s               2  [STACK] PTR unsigned char 
 15901 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15902 ;;  k               2  [STACK] unsigned int 
 15903 ;; Return value:  Size  Location     Type
 15904 ;;                  2  [STACK] PTR void 
 15905 ;; Registers used:
 15906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15907 ;; Tracked objects:
 15908 ;;		On entry : 0/0
 15909 ;;		On exit  : 0/0
 15910 ;;		Unchanged: 0/0
 15911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15916 ;;Total ram usage:        0 bytes
 15917 ;; Hardware stack levels used:    1
 15918 ;; Hardware stack levels required when called:   15
 15919 ;; This function calls:
 15920 ;;		Nothing
 15921 ;; This function is called by:
 15922 ;;		_ringBufS_init
 15923 ;;		_ringBufS_flush
 15924 ;; This function uses a reentrant model
 15925 ;;
 15926                           
 15927                           	psect	text65
 15928  017B36                     __ptext65:
 15929                           	opt callstack 0
 15930  017B36                     _memset:
 15931                           	opt callstack 0
 15932                           
 15933                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15934  017B36  52E6               	movf	postinc1,f,c
 15935  017B38  52E6               	movf	postinc1,f,c
 15936  017B3A  52E6               	movf	postinc1,f,c
 15937  017B3C  52E6               	movf	postinc1,f,c
 15938                           
 15939                           ;stkvar	_dest @ sp[(-4)+-2]
 15940                           
 15941                           ;incstack = 0
 15942  017B3E  0EFA               	movlw	-6
 15943  017B40  006F FF8C  F00B    	movff	plusw1,btemp+10
 15944  017B46  0EFB               	movlw	-5
 15945  017B48  006F FF8C  F00C    	movff	plusw1,btemp+11
 15946                           
 15947                           ;stkvar	_s @ sp[(-4)+0]
 15948  017B4E  0EFD               	movlw	-3
 15949  017B50  0060  F033  FFE3   	movff	btemp+11,plusw1
 15950  017B56  0EFC               	movlw	-4
 15951  017B58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15952                           
 15953                           ;stkvar	_n @ sp[(-4)+-6]
 15954  017B5E  0EF6               	movlw	-10
 15955  017B60  006F FF8C  F001    	movff	plusw1,btemp
 15956  017B66  0EF7               	movlw	-9
 15957  017B68  50E3               	movf	plusw1,w,c
 15958  017B6A  1001               	iorwf	btemp^0,w,c
 15959  017B6C  B4D8               	btfsc	status,2,c
 15960  017B6E  D154               	goto	u12150
 15961                           
 15962                           ;stkvar	_c @ sp[(-4)+-4]
 15963                           ;stkvar	_s @ sp[(-4)+0]
 15964  017B70  0EFC               	movlw	-4
 15965  017B72  006F FF8F FFD9     	movff	plusw1,fsr2l
 15966  017B78  0EFD               	movlw	-3
 15967  017B7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15968  017B80  0EF8               	movlw	-8
 15969  017B82  006F FF8F FFDF     	movff	plusw1,indf2
 15970                           
 15971                           ;stkvar	_c @ sp[(-4)+-4]
 15972                           ;stkvar	_n @ sp[(-4)+-6]
 15973                           ;stkvar	_s @ sp[(-4)+0]
 15974  017B88  0EFC               	movlw	-4
 15975  017B8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15976  017B90  0EFD               	movlw	-3
 15977  017B92  006F FF8C  F00C    	movff	plusw1,btemp+11
 15978  017B98  0EF6               	movlw	-10
 15979  017B9A  50E3               	movf	plusw1,w,c
 15980  017B9C  260B               	addwf	(btemp+10)^0,f,c
 15981  017B9E  0EF7               	movlw	-9
 15982  017BA0  50E3               	movf	plusw1,w,c
 15983  017BA2  220C               	addwfc	(btemp+11)^0,f,c
 15984  017BA4  0EFF               	movlw	255
 15985  017BA6  240B               	addwf	(btemp+10)^0,w,c
 15986  017BA8  6ED9               	movwf	fsr2l,c
 15987  017BAA  0EFF               	movlw	255
 15988  017BAC  200C               	addwfc	(btemp+11)^0,w,c
 15989  017BAE  6EDA               	movwf	fsr2h,c
 15990  017BB0  0EF8               	movlw	-8
 15991  017BB2  006F FF8F FFDF     	movff	plusw1,indf2
 15992                           
 15993                           ;stkvar	_n @ sp[(-4)+-6]
 15994  017BB8  0EF7               	movlw	-9
 15995  017BBA  50E3               	movf	plusw1,w,c
 15996  017BBC  E108               	bnz	l13349
 15997  017BBE  0EF6               	movlw	-10
 15998  017BC0  006F FF8C  F001    	movff	plusw1,btemp
 15999  017BC6  0E03               	movlw	3
 16000  017BC8  5E01               	subwf	btemp^0,f,c
 16001  017BCA  A0D8               	btfss	status,0,c
 16002  017BCC  D125               	goto	u12150
 16003  017BCE                     l13349:
 16004                           
 16005                           ;stkvar	_c @ sp[(-4)+-4]
 16006                           ;stkvar	_s @ sp[(-4)+0]
 16007  017BCE  0EFC               	movlw	-4
 16008  017BD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 16009  017BD6  0EFD               	movlw	-3
 16010  017BD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 16011  017BDE  0E01               	movlw	1
 16012  017BE0  240B               	addwf	(btemp+10)^0,w,c
 16013  017BE2  6ED9               	movwf	fsr2l,c
 16014  017BE4  0E00               	movlw	0
 16015  017BE6  200C               	addwfc	(btemp+11)^0,w,c
 16016  017BE8  6EDA               	movwf	fsr2h,c
 16017  017BEA  0EF8               	movlw	-8
 16018  017BEC  006F FF8F FFDF     	movff	plusw1,indf2
 16019                           
 16020                           ;stkvar	_c @ sp[(-4)+-4]
 16021                           ;stkvar	_s @ sp[(-4)+0]
 16022  017BF2  0EFC               	movlw	-4
 16023  017BF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16024  017BFA  0EFD               	movlw	-3
 16025  017BFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16026  017C02  0E02               	movlw	2
 16027  017C04  240B               	addwf	(btemp+10)^0,w,c
 16028  017C06  6ED9               	movwf	fsr2l,c
 16029  017C08  0E00               	movlw	0
 16030  017C0A  200C               	addwfc	(btemp+11)^0,w,c
 16031  017C0C  6EDA               	movwf	fsr2h,c
 16032  017C0E  0EF8               	movlw	-8
 16033  017C10  006F FF8F FFDF     	movff	plusw1,indf2
 16034                           
 16035                           ;stkvar	_c @ sp[(-4)+-4]
 16036                           ;stkvar	_n @ sp[(-4)+-6]
 16037                           ;stkvar	_s @ sp[(-4)+0]
 16038  017C16  0EFC               	movlw	-4
 16039  017C18  006F FF8C  F00B    	movff	plusw1,btemp+10
 16040  017C1E  0EFD               	movlw	-3
 16041  017C20  006F FF8C  F00C    	movff	plusw1,btemp+11
 16042  017C26  0EF6               	movlw	-10
 16043  017C28  50E3               	movf	plusw1,w,c
 16044  017C2A  260B               	addwf	(btemp+10)^0,f,c
 16045  017C2C  0EF7               	movlw	-9
 16046  017C2E  50E3               	movf	plusw1,w,c
 16047  017C30  220C               	addwfc	(btemp+11)^0,f,c
 16048  017C32  0EFE               	movlw	254
 16049  017C34  240B               	addwf	(btemp+10)^0,w,c
 16050  017C36  6ED9               	movwf	fsr2l,c
 16051  017C38  0EFF               	movlw	255
 16052  017C3A  200C               	addwfc	(btemp+11)^0,w,c
 16053  017C3C  6EDA               	movwf	fsr2h,c
 16054  017C3E  0EF8               	movlw	-8
 16055  017C40  006F FF8F FFDF     	movff	plusw1,indf2
 16056                           
 16057                           ;stkvar	_c @ sp[(-4)+-4]
 16058                           ;stkvar	_n @ sp[(-4)+-6]
 16059                           ;stkvar	_s @ sp[(-4)+0]
 16060  017C46  0EFC               	movlw	-4
 16061  017C48  006F FF8C  F00B    	movff	plusw1,btemp+10
 16062  017C4E  0EFD               	movlw	-3
 16063  017C50  006F FF8C  F00C    	movff	plusw1,btemp+11
 16064  017C56  0EF6               	movlw	-10
 16065  017C58  50E3               	movf	plusw1,w,c
 16066  017C5A  260B               	addwf	(btemp+10)^0,f,c
 16067  017C5C  0EF7               	movlw	-9
 16068  017C5E  50E3               	movf	plusw1,w,c
 16069  017C60  220C               	addwfc	(btemp+11)^0,f,c
 16070  017C62  0EFD               	movlw	253
 16071  017C64  240B               	addwf	(btemp+10)^0,w,c
 16072  017C66  6ED9               	movwf	fsr2l,c
 16073  017C68  0EFF               	movlw	255
 16074  017C6A  200C               	addwfc	(btemp+11)^0,w,c
 16075  017C6C  6EDA               	movwf	fsr2h,c
 16076  017C6E  0EF8               	movlw	-8
 16077  017C70  006F FF8F FFDF     	movff	plusw1,indf2
 16078                           
 16079                           ;stkvar	_n @ sp[(-4)+-6]
 16080  017C76  0EF7               	movlw	-9
 16081  017C78  50E3               	movf	plusw1,w,c
 16082  017C7A  E108               	bnz	l13355
 16083  017C7C  0EF6               	movlw	-10
 16084  017C7E  006F FF8C  F001    	movff	plusw1,btemp
 16085  017C84  0E07               	movlw	7
 16086  017C86  5E01               	subwf	btemp^0,f,c
 16087  017C88  A0D8               	btfss	status,0,c
 16088  017C8A  D0C6               	goto	u12150
 16089  017C8C                     l13355:
 16090                           
 16091                           ;stkvar	_c @ sp[(-4)+-4]
 16092                           ;stkvar	_s @ sp[(-4)+0]
 16093  017C8C  0EFC               	movlw	-4
 16094  017C8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16095  017C94  0EFD               	movlw	-3
 16096  017C96  006F FF8C  F00C    	movff	plusw1,btemp+11
 16097  017C9C  0E03               	movlw	3
 16098  017C9E  240B               	addwf	(btemp+10)^0,w,c
 16099  017CA0  6ED9               	movwf	fsr2l,c
 16100  017CA2  0E00               	movlw	0
 16101  017CA4  200C               	addwfc	(btemp+11)^0,w,c
 16102  017CA6  6EDA               	movwf	fsr2h,c
 16103  017CA8  0EF8               	movlw	-8
 16104  017CAA  006F FF8F FFDF     	movff	plusw1,indf2
 16105                           
 16106                           ;stkvar	_c @ sp[(-4)+-4]
 16107                           ;stkvar	_n @ sp[(-4)+-6]
 16108                           ;stkvar	_s @ sp[(-4)+0]
 16109  017CB0  0EFC               	movlw	-4
 16110  017CB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16111  017CB8  0EFD               	movlw	-3
 16112  017CBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16113  017CC0  0EF6               	movlw	-10
 16114  017CC2  50E3               	movf	plusw1,w,c
 16115  017CC4  260B               	addwf	(btemp+10)^0,f,c
 16116  017CC6  0EF7               	movlw	-9
 16117  017CC8  50E3               	movf	plusw1,w,c
 16118  017CCA  220C               	addwfc	(btemp+11)^0,f,c
 16119  017CCC  0EFC               	movlw	252
 16120  017CCE  240B               	addwf	(btemp+10)^0,w,c
 16121  017CD0  6ED9               	movwf	fsr2l,c
 16122  017CD2  0EFF               	movlw	255
 16123  017CD4  200C               	addwfc	(btemp+11)^0,w,c
 16124  017CD6  6EDA               	movwf	fsr2h,c
 16125  017CD8  0EF8               	movlw	-8
 16126  017CDA  006F FF8F FFDF     	movff	plusw1,indf2
 16127                           
 16128                           ;stkvar	_n @ sp[(-4)+-6]
 16129  017CE0  0EF7               	movlw	-9
 16130  017CE2  50E3               	movf	plusw1,w,c
 16131  017CE4  E108               	bnz	l13361
 16132  017CE6  0EF6               	movlw	-10
 16133  017CE8  006F FF8C  F001    	movff	plusw1,btemp
 16134  017CEE  0E09               	movlw	9
 16135  017CF0  5E01               	subwf	btemp^0,f,c
 16136  017CF2  A0D8               	btfss	status,0,c
 16137  017CF4  D091               	goto	u12150
 16138  017CF6                     l13361:
 16139                           
 16140                           ;stkvar	_s @ sp[(-4)+0]
 16141  017CF6  0EFC               	movlw	-4
 16142  017CF8  006F FF8C  F00B    	movff	plusw1,btemp+10
 16143  017CFE  1E0B               	comf	(btemp+10)^0,f,c
 16144  017D00  0EFD               	movlw	-3
 16145  017D02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16146  017D08  1E0C               	comf	(btemp+11)^0,f,c
 16147  017D0A  2A0B               	incf	(btemp+10)^0,f,c
 16148  017D0C  B4D8               	btfsc	status,2,c
 16149  017D0E  2A0C               	incf	(btemp+11)^0,f,c
 16150  017D10  0E03               	movlw	3
 16151  017D12  160B               	andwf	(btemp+10)^0,f,c
 16152  017D14  0E00               	movlw	0
 16153  017D16  160C               	andwf	(btemp+11)^0,f,c
 16154                           
 16155                           ;stkvar	_k @ sp[(-4)+2]
 16156  017D18  0EFE               	movlw	-2
 16157  017D1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16158  017D20  0EFF               	movlw	-1
 16159  017D22  0060  F033  FFE3   	movff	btemp+11,plusw1
 16160                           
 16161                           ;stkvar	_k @ sp[(-4)+2]
 16162                           ;stkvar	_s @ sp[(-4)+0]
 16163  017D28  0EFC               	movlw	-4
 16164  017D2A  50E3               	movf	plusw1,w,c
 16165  017D2C  6E01               	movwf	btemp^0,c
 16166  017D2E  0EFE               	movlw	-2
 16167  017D30  50E3               	movf	plusw1,w,c
 16168  017D32  2601               	addwf	btemp^0,f,c
 16169  017D34  0EFC               	movlw	-4
 16170  017D36  0060  F007  FFE3   	movff	btemp,plusw1
 16171  017D3C  0EFD               	movlw	-3
 16172  017D3E  50E3               	movf	plusw1,w,c
 16173  017D40  6E01               	movwf	btemp^0,c
 16174  017D42  0EFF               	movlw	-1
 16175  017D44  50E3               	movf	plusw1,w,c
 16176  017D46  2201               	addwfc	btemp^0,f,c
 16177  017D48  0EFD               	movlw	-3
 16178  017D4A  0060  F007  FFE3   	movff	btemp,plusw1
 16179                           
 16180                           ;stkvar	_k @ sp[(-4)+2]
 16181                           ;stkvar	_n @ sp[(-4)+-6]
 16182  017D50  0EF6               	movlw	-10
 16183  017D52  50E3               	movf	plusw1,w,c
 16184  017D54  6E01               	movwf	btemp^0,c
 16185  017D56  0EFE               	movlw	-2
 16186  017D58  50E3               	movf	plusw1,w,c
 16187  017D5A  5E01               	subwf	btemp^0,f,c
 16188  017D5C  0EF6               	movlw	-10
 16189  017D5E  0060  F007  FFE3   	movff	btemp,plusw1
 16190  017D64  0EF7               	movlw	-9
 16191  017D66  50E3               	movf	plusw1,w,c
 16192  017D68  6E01               	movwf	btemp^0,c
 16193  017D6A  0EFF               	movlw	-1
 16194  017D6C  50E3               	movf	plusw1,w,c
 16195  017D6E  5A01               	subwfb	btemp^0,f,c
 16196  017D70  0EF7               	movlw	-9
 16197  017D72  0060  F007  FFE3   	movff	btemp,plusw1
 16198  017D78  0EFC               	movlw	252
 16199  017D7A  6E0B               	movwf	(btemp+10)^0,c
 16200  017D7C  0EFF               	movlw	255
 16201  017D7E  6E0C               	movwf	(btemp+11)^0,c
 16202                           
 16203                           ;stkvar	_n @ sp[(-4)+-6]
 16204  017D80  0EF6               	movlw	-10
 16205  017D82  006F FF8C  F001    	movff	plusw1,btemp
 16206  017D88  500B               	movf	(btemp+10)^0,w,c
 16207  017D8A  1601               	andwf	btemp^0,f,c
 16208  017D8C  0EF6               	movlw	-10
 16209  017D8E  0060  F007  FFE3   	movff	btemp,plusw1
 16210  017D94  0EF7               	movlw	-9
 16211  017D96  006F FF8C  F001    	movff	plusw1,btemp
 16212  017D9C  500C               	movf	(btemp+11)^0,w,c
 16213  017D9E  1601               	andwf	btemp^0,f,c
 16214  017DA0  0EF7               	movlw	-9
 16215  017DA2  D02E               	goto	L15
 16216  017DA4                     l13369:
 16217                           
 16218                           ;stkvar	_c @ sp[(-4)+-4]
 16219                           ;stkvar	_s @ sp[(-4)+0]
 16220  017DA4  0EFC               	movlw	-4
 16221  017DA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16222  017DAC  0EFD               	movlw	-3
 16223  017DAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16224  017DB4  0EF8               	movlw	-8
 16225  017DB6  006F FF8F FFDF     	movff	plusw1,indf2
 16226                           
 16227                           ;stkvar	_n @ sp[(-4)+-6]
 16228  017DBC  0EF6               	movlw	-10
 16229  017DBE  006F FF8C  F001    	movff	plusw1,btemp
 16230  017DC4  0E01               	movlw	1
 16231  017DC6  5E01               	subwf	btemp^0,f,c
 16232  017DC8  0EF6               	movlw	-10
 16233  017DCA  0060  F007  FFE3   	movff	btemp,plusw1
 16234  017DD0  0EF7               	movlw	-9
 16235  017DD2  006F FF8C  F001    	movff	plusw1,btemp
 16236  017DD8  0E00               	movlw	0
 16237  017DDA  5A01               	subwfb	btemp^0,f,c
 16238  017DDC  0EF7               	movlw	-9
 16239  017DDE  0060  F007  FFE3   	movff	btemp,plusw1
 16240                           
 16241                           ;stkvar	_s @ sp[(-4)+0]
 16242  017DE4  0EFC               	movlw	-4
 16243  017DE6  50E3               	movf	plusw1,w,c
 16244  017DE8  0F01               	addlw	1
 16245  017DEA  6E01               	movwf	btemp^0,c
 16246  017DEC  0EFC               	movlw	-4
 16247  017DEE  0060  F007  FFE3   	movff	btemp,plusw1
 16248  017DF4  6A01               	clrf	btemp^0,c
 16249  017DF6  0EFD               	movlw	-3
 16250  017DF8  50E3               	movf	plusw1,w,c
 16251  017DFA  2001               	addwfc	btemp^0,w,c
 16252  017DFC  6E01               	movwf	btemp^0,c
 16253  017DFE  0EFD               	movlw	-3
 16254  017E00                     L15:
 16255  017E00  0060  F007  FFE3   	movff	btemp,plusw1
 16256                           
 16257                           ;stkvar	_n @ sp[(-4)+-6]
 16258  017E06  0EF6               	movlw	-10
 16259  017E08  006F FF8C  F001    	movff	plusw1,btemp
 16260  017E0E  0EF7               	movlw	-9
 16261  017E10  50E3               	movf	plusw1,w,c
 16262  017E12  1001               	iorwf	btemp^0,w,c
 16263  017E14  A4D8               	btfss	status,2,c
 16264  017E16  D7C6               	goto	l13369
 16265  017E18                     u12150:
 16266                           
 16267                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 16268  017E18  0EF6               	movlw	246
 16269  017E1A  26E1               	addwf	fsr1l,f,c
 16270  017E1C  0EFF               	movlw	255
 16271  017E1E  22E2               	addwfc	fsr1h,f,c
 16272  017E20  0012               	return		;funcret
 16273  017E22                     __end_of_memset:
 16274                           	opt callstack 0
 16275                           
 16276 ;; *************** function _printf *****************
 16277 ;; Defined at:
 16278 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;  fmt             2  [STACK] PTR const unsigned char 
 16281 ;;		 -> STR_73(3), STR_72(3), 
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  ap              2  [STACK] PTR void [1]
 16284 ;;		 -> ?_printf(2), ?_sprintf(2), 
 16285 ;;  ret             2    0        int 
 16286 ;; Return value:  Size  Location     Type
 16287 ;;                  2  [STACK] int 
 16288 ;; Registers used:
 16289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16290 ;; Tracked objects:
 16291 ;;		On entry : 3F/3B
 16292 ;;		On exit  : 3F/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16299 ;;Total ram usage:        0 bytes
 16300 ;; Hardware stack levels used:    1
 16301 ;; Hardware stack levels required when called:   23
 16302 ;; This function calls:
 16303 ;;		_vfprintf
 16304 ;; This function is called by:
 16305 ;;		_eaDogM_WriteString
 16306 ;;		_send_lcd_data_dma
 16307 ;; This function uses a reentrant model
 16308 ;;
 16309                           
 16310                           	psect	text66
 16311  01C954                     __ptext66:
 16312                           	opt callstack 0
 16313  01C954                     _printf:
 16314                           	opt callstack 0
 16315                           
 16316                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16317  01C954  52E6               	movf	postinc1,f,c
 16318  01C956  52E6               	movf	postinc1,f,c
 16319                           
 16320                           ;stkvar	?_printf @ sp[(-2)+-3]
 16321                           
 16322                           ;incstack = 0
 16323  01C958  0EFB               	movlw	251
 16324  01C95A  24E1               	addwf	fsr1l,w,c
 16325  01C95C  6E0B               	movwf	(btemp+10)^0,c
 16326  01C95E  0EFF               	movlw	255
 16327  01C960  20E2               	addwfc	fsr1h,w,c
 16328  01C962  6E0C               	movwf	(btemp+11)^0,c
 16329                           
 16330                           ;stkvar	_ap @ sp[(-2)+0]
 16331  01C964  0EFF               	movlw	-1
 16332  01C966  0060  F033  FFE3   	movff	btemp+11,plusw1
 16333  01C96C  0EFE               	movlw	-2
 16334  01C96E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16335                           
 16336                           ;stkvar	_ap @ sp[(-2)+0]
 16337  01C974  0EFE               	movlw	254
 16338  01C976  24E1               	addwf	fsr1l,w,c
 16339  01C978  6E01               	movwf	btemp^0,c
 16340  01C97A  0EFF               	movlw	255
 16341  01C97C  20E2               	addwfc	fsr1h,w,c
 16342  01C97E  6E02               	movwf	(btemp+1)^0,c
 16343  01C980  0060  F007  FFE6   	movff	btemp,postinc1
 16344  01C986  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16345                           
 16346                           ;stkvar	_fmt @ sp[(-4)+-3]
 16347  01C98C  0EF9               	movlw	-7
 16348  01C98E  006F FF8F FFE6     	movff	plusw1,postinc1
 16349  01C994  006F FF8F FFE6     	movff	plusw1,postinc1
 16350  01C99A  0E00               	movlw	0
 16351  01C99C  6EE6               	movwf	postinc1,c
 16352  01C99E  0E00               	movlw	0
 16353  01C9A0  6EE6               	movwf	postinc1,c
 16354  01C9A2  EC66  F0DE         	call	_vfprintf	;wreg free
 16355                           
 16356                           ; BSR set to: 0
 16357                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 16358  01C9A6  52E5               	movf	postdec1,f,c
 16359  01C9A8  52E5               	movf	postdec1,f,c
 16360  01C9AA  52E5               	movf	postdec1,f,c
 16361  01C9AC  50E7               	movf	indf1,w,c
 16362  01C9AE  5EE1               	subwf	fsr1l,f,c
 16363  01C9B0  0E00               	movlw	0
 16364  01C9B2  5AE2               	subwfb	fsr1h,f,c
 16365  01C9B4  0012               	return		;funcret
 16366  01C9B6                     __end_of_printf:
 16367                           	opt callstack 0
 16368                           
 16369 ;; *************** function _vfprintf *****************
 16370 ;; Defined at:
 16371 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16374 ;;		 -> f(6), NULL(0), 
 16375 ;;  fmt             2  [STACK] PTR const unsigned char 
 16376 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 16377 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 16378 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 16379 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 16380 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 16381 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 16382 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 16383 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 16384 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 16385 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 16386 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 16387 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 16388 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 16389 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 16390 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 16391 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 16392 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 16393 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 16394 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 16395 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 16396 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 16397 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 16398 ;;		 -> STR_1(21), 
 16399 ;;  ap              2  [STACK] PTR PTR void 
 16400 ;;		 -> ap(2), ap(2), 
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;  cfmt            2  [STACK] PTR unsigned char 
 16403 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 16404 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 16405 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 16406 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 16407 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 16408 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 16409 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 16410 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 16411 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 16412 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 16413 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 16414 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 16415 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 16416 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 16417 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 16418 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 16419 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 16420 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 16421 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 16422 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 16423 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 16424 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 16425 ;;		 -> STR_1(21), 
 16426 ;; Return value:  Size  Location     Type
 16427 ;;                  2  [STACK] int 
 16428 ;; Registers used:
 16429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16430 ;; Tracked objects:
 16431 ;;		On entry : 0/1
 16432 ;;		On exit  : 3F/0
 16433 ;;		Unchanged: 0/0
 16434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16439 ;;Total ram usage:        0 bytes
 16440 ;; Hardware stack levels used:    1
 16441 ;; Hardware stack levels required when called:   22
 16442 ;; This function calls:
 16443 ;;		_vfpfcnvrt
 16444 ;; This function is called by:
 16445 ;;		_sprintf
 16446 ;;		_printf
 16447 ;; This function uses a reentrant model
 16448 ;;
 16449                           
 16450                           	psect	text67
 16451  01BCCC                     __ptext67:
 16452                           	opt callstack 0
 16453  01BCCC                     _vfprintf:
 16454                           	opt callstack 0
 16455                           
 16456                           ; BSR set to: 0
 16457                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16458  01BCCC  52E6               	movf	postinc1,f,c
 16459  01BCCE  52E6               	movf	postinc1,f,c
 16460                           
 16461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 16462                           ;stkvar	_fmt @ sp[(-2)+-4]
 16463                           
 16464                           ;incstack = 0
 16465 ;; hardware stack exceeded
 16466  01BCD0  0EFA               	movlw	-6
 16467  01BCD2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16468  01BCD8  0EFB               	movlw	-5
 16469  01BCDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16470                           
 16471                           ;stkvar	_cfmt @ sp[(-2)+0]
 16472  01BCE0  0EFF               	movlw	-1
 16473  01BCE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16474  01BCE8  0EFE               	movlw	-2
 16475  01BCEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16476                           
 16477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 16478  01BCF0  0100               	movlb	0	; () banked
 16479  01BCF2  6BC0               	clrf	_nout& (0+255),b
 16480  01BCF4  6BC1               	clrf	(_nout+1)& (0+255),b
 16481                           
 16482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 16483  01BCF6  D021               	goto	l14219
 16484  01BCF8                     l14217:
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 16488                           ;stkvar	_ap @ sp[(-2)+-6]
 16489  01BCF8  0EF8               	movlw	-8
 16490  01BCFA  006F FF8F FFE6     	movff	plusw1,postinc1
 16491  01BD00  006F FF8F FFE6     	movff	plusw1,postinc1
 16492                           
 16493                           ;stkvar	_cfmt @ sp[(-4)+0]
 16494  01BD06  0EFC               	movlw	252
 16495  01BD08  24E1               	addwf	fsr1l,w,c
 16496  01BD0A  6E01               	movwf	btemp^0,c
 16497  01BD0C  0EFF               	movlw	255
 16498  01BD0E  20E2               	addwfc	fsr1h,w,c
 16499  01BD10  6E02               	movwf	(btemp+1)^0,c
 16500  01BD12  0060  F007  FFE6   	movff	btemp,postinc1
 16501  01BD18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16502                           
 16503                           ;stkvar	_fp @ sp[(-6)+-2]
 16504  01BD1E  0EF8               	movlw	-8
 16505  01BD20  006F FF8F FFE6     	movff	plusw1,postinc1
 16506  01BD26  006F FF8F FFE6     	movff	plusw1,postinc1
 16507  01BD2C  EC6B  F092         	call	_vfpfcnvrt	;wreg free
 16508  01BD30  5001               	movf	btemp^0,w,c
 16509  01BD32  0100               	movlb	0	; () banked
 16510  01BD34  27C0               	addwf	_nout& (0+255),f,b
 16511  01BD36  5002               	movf	(btemp+1)^0,w,c
 16512  01BD38  23C1               	addwfc	(_nout+1)& (0+255),f,b
 16513  01BD3A                     l14219:
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 16517                           ;stkvar	_cfmt @ sp[(-2)+0]
 16518  01BD3A  50E1               	movf	fsr1l,w,c
 16519  01BD3C  0FFE               	addlw	-2
 16520  01BD3E  6ED9               	movwf	fsr2l,c
 16521  01BD40  50E2               	movf	fsr1h,w,c
 16522  01BD42  6EDA               	movwf	fsr2h,c
 16523  01BD44  0EFF               	movlw	255
 16524  01BD46  22DA               	addwfc	fsr2h,f,c
 16525  01BD48  006F FF7B FFF6     	movff	postinc2,tblptrl
 16526  01BD4E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16527  01BD54                     	if	0	;tblptru may be non-zero
 16528  01BD54                     	endif
 16529  01BD54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16530  01BD54  0E00               	movlw	low (__mediumconst shr (0+16))
 16531  01BD56  6EF8               	movwf	tblptru,c
 16532  01BD58                     	endif
 16533  01BD58  0008               	tblrd		*
 16534  01BD5A  50F5               	movf	tablat,w,c
 16535  01BD5C  0900               	iorlw	0
 16536  01BD5E  A4D8               	btfss	status,2,c
 16537  01BD60  D7CB               	goto	l14217
 16538                           
 16539                           ; BSR set to: 0
 16540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 16541  01BD62  0060  F300  F001   	movff	_nout,btemp
 16542  01BD68  0060  F304  F002   	movff	_nout+1,btemp+1
 16543                           
 16544                           ; BSR set to: 0
 16545                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 16546  01BD6E  0EF8               	movlw	248
 16547  01BD70  26E1               	addwf	fsr1l,f,c
 16548  01BD72  0EFF               	movlw	255
 16549  01BD74  22E2               	addwfc	fsr1h,f,c
 16550  01BD76  0012               	return		;funcret
 16551  01BD78                     __end_of_vfprintf:
 16552                           	opt callstack 0
 16553                           
 16554 ;; *************** function _vfpfcnvrt *****************
 16555 ;; Defined at:
 16556 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16557 ;; Parameters:    Size  Location     Type
 16558 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16559 ;;		 -> f(6), NULL(0), 
 16560 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 16561 ;;		 -> cfmt(2), 
 16562 ;;  ap              2  [STACK] PTR PTR void 
 16563 ;;		 -> ap(2), ap(2), 
 16564 ;; Auto vars:     Size  Location     Type
 16565 ;;  llu             8  [STACK] unsigned long long 
 16566 ;;  ll              8  [STACK] long long 
 16567 ;;  f               4  [STACK] long long 
 16568 ;;  ct              3  [STACK] unsigned char [3]
 16569 ;;  vp              3    0        PTR void 
 16570 ;;  cp              2  [STACK] PTR unsigned char 
 16571 ;;		 -> ?_printf(2), ?_sprintf(2), STR_75(9), STR_74(12), 
 16572 ;;		 -> D.lcd(480), D(482), T(144), cp(4), 
 16573 ;;		 -> cb(4), STR_3(5), V(192), 
 16574 ;;  i               2    0        int 
 16575 ;;  done            2    0        int 
 16576 ;;  c               1  [STACK] unsigned char 
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  2  [STACK] int 
 16579 ;; Registers used:
 16580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16590 ;;Total ram usage:        0 bytes
 16591 ;; Hardware stack levels used:    1
 16592 ;; Hardware stack levels required when called:   21
 16593 ;; This function calls:
 16594 ;;		_atoi
 16595 ;;		_ctoa
 16596 ;;		_dtoa
 16597 ;;		_efgtoa
 16598 ;;		_fputc
 16599 ;;		_isdigit
 16600 ;;		_isupper
 16601 ;;		_stoa
 16602 ;;		_strncmp
 16603 ;;		_tolower
 16604 ;;		_utoa
 16605 ;;		_xtoa
 16606 ;; This function is called by:
 16607 ;;		_vfprintf
 16608 ;; This function uses a reentrant model
 16609 ;;
 16610                           
 16611                           	psect	text68
 16612  0124D6                     __ptext68:
 16613                           	opt callstack 0
 16614  0124D6                     _vfpfcnvrt:
 16615                           	opt callstack 0
 16616                           
 16617                           ; BSR set to: 0
 16618                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16619  0124D6  0E20               	movlw	32
 16620  0124D8  26E1               	addwf	fsr1l,f,c
 16621  0124DA  0E00               	movlw	0
 16622  0124DC  22E2               	addwfc	fsr1h,f,c
 16623                           
 16624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 16625                           ;stkvar	_fmt @ sp[(-32)+-4]
 16626                           
 16627                           ;incstack = 0
 16628 ;; hardware stack exceeded
 16629  0124DE  0EDC               	movlw	-36
 16630  0124E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16631  0124E6  0EDD               	movlw	-35
 16632  0124E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16633  0124EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16634  0124F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16635  0124FA                     	if	0	;tblptru may be non-zero
 16636  0124FA                     	endif
 16637  0124FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16638  0124FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16639  0124FC  6EF8               	movwf	tblptru,c
 16640  0124FE                     	endif
 16641  0124FE  0008               	tblrd		*
 16642  012500  50F5               	movf	tablat,w,c
 16643  012502  0A25               	xorlw	37
 16644  012504  A4D8               	btfss	status,2,c
 16645  012506  EF12  F09A         	goto	l14179
 16646                           
 16647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 16648                           ;stkvar	_fmt @ sp[(-32)+-4]
 16649  01250A  0EDC               	movlw	-36
 16650  01250C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16651  012512  0EDD               	movlw	-35
 16652  012514  006F FF8F FFDA     	movff	plusw1,fsr2h
 16653  01251A  2ADE               	incf	postinc2,f,c
 16654  01251C  0E00               	movlw	0
 16655  01251E  22DD               	addwfc	postdec2,f,c
 16656                           
 16657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 16658  012520  6A3A               	clrf	_width^0,c
 16659  012522  6A3B               	clrf	(_width+1)^0,c
 16660  012524  6A3E               	clrf	_flags^0,c
 16661  012526  6A3F               	clrf	(_flags+1)^0,c
 16662                           
 16663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 16664  012528  683C               	setf	_prec^0,c
 16665  01252A  683D               	setf	(_prec+1)^0,c
 16666                           
 16667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 16668                           ;stkvar	_fmt @ sp[(-32)+-4]
 16669  01252C  0EDC               	movlw	-36
 16670  01252E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16671  012534  0EDD               	movlw	-35
 16672  012536  006F FF8F FFDA     	movff	plusw1,fsr2h
 16673  01253C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16674  012542  006F FF77 FFF7     	movff	postdec2,tblptrh
 16675  012548                     	if	0	;tblptru may be non-zero
 16676  012548                     	endif
 16677  012548                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16678  012548  0E00               	movlw	low (__mediumconst shr (0+16))
 16679  01254A  6EF8               	movwf	tblptru,c
 16680  01254C                     	endif
 16681  01254C  0008               	tblrd		*
 16682  01254E  50F5               	movf	tablat,w,c
 16683  012550  0A2A               	xorlw	42
 16684  012552  A4D8               	btfss	status,2,c
 16685  012554  D031               	goto	l13997
 16686                           
 16687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 16688                           ;stkvar	_fmt @ sp[(-32)+-4]
 16689  012556  0EDC               	movlw	-36
 16690  012558  006F FF8F FFD9     	movff	plusw1,fsr2l
 16691  01255E  0EDD               	movlw	-35
 16692  012560  006F FF8F FFDA     	movff	plusw1,fsr2h
 16693  012566  2ADE               	incf	postinc2,f,c
 16694  012568  0E00               	movlw	0
 16695  01256A  22DD               	addwfc	postdec2,f,c
 16696                           
 16697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 16698                           ;stkvar	_ap @ sp[(-32)+-6]
 16699  01256C  0EDA               	movlw	-38
 16700  01256E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16701  012574  0EDB               	movlw	-37
 16702  012576  006F FF8F FFDA     	movff	plusw1,fsr2h
 16703  01257C  0E02               	movlw	2
 16704  01257E  5EDE               	subwf	postinc2,f,c
 16705  012580  0E00               	movlw	0
 16706  012582  5ADD               	subwfb	postdec2,f,c
 16707  012584  006F FF78  F00B    	movff	postinc2,btemp+10
 16708  01258A  006F FF74  F00C    	movff	postdec2,btemp+11
 16709  012590  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16710  012596  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16711  01259C  006F FF78  F03A    	movff	postinc2,_width
 16712  0125A2  006F FF74  F03B    	movff	postdec2,_width+1
 16713                           
 16714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 16715  0125A8  AE3B               	btfss	(_width+1)^0,7,c
 16716  0125AA  D066               	goto	u13340
 16717                           
 16718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 16719  0125AC  803E               	bsf	_flags^0,0,c
 16720                           
 16721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 16722  0125AE  6C3A               	negf	_width^0,c
 16723  0125B0  1E3B               	comf	(_width+1)^0,f,c
 16724  0125B2  B0D8               	btfsc	status,0,c
 16725  0125B4  2A3B               	incf	(_width+1)^0,f,c
 16726  0125B6  D060               	goto	u13340
 16727  0125B8                     l13997:
 16728                           
 16729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 16730                           ;stkvar	_fmt @ sp[(-32)+-4]
 16731  0125B8  0EDC               	movlw	-36
 16732  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16733  0125C0  0EDD               	movlw	-35
 16734  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16735  0125C8  006F FF78  F00B    	movff	postinc2,btemp+10
 16736  0125CE  006F FF74  F00C    	movff	postdec2,btemp+11
 16737  0125D4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16738  0125DA  0060  F033  FFE6   	movff	btemp+11,postinc1
 16739  0125E0  EC1C  F0C3         	call	_atoi	;wreg free
 16740  0125E4  0060  F004  F03A   	movff	btemp,_width
 16741  0125EA  0060  F008  F03B   	movff	btemp+1,_width+1
 16742                           
 16743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16744  0125F0  D00B               	goto	l14001
 16745  0125F2                     l13999:
 16746                           
 16747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 16748                           ;stkvar	_fmt @ sp[(-32)+-4]
 16749  0125F2  0EDC               	movlw	-36
 16750  0125F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16751  0125FA  0EDD               	movlw	-35
 16752  0125FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16753  012602  2ADE               	incf	postinc2,f,c
 16754  012604  0E00               	movlw	0
 16755  012606  22DD               	addwfc	postdec2,f,c
 16756  012608                     l14001:
 16757  012608  0ED0               	movlw	208
 16758  01260A  6E0B               	movwf	(btemp+10)^0,c
 16759  01260C  0EFF               	movlw	255
 16760  01260E  6E0C               	movwf	(btemp+11)^0,c
 16761                           
 16762                           ;stkvar	_fmt @ sp[(-32)+-4]
 16763  012610  0EDC               	movlw	-36
 16764  012612  006F FF8F FFD9     	movff	plusw1,fsr2l
 16765  012618  0EDD               	movlw	-35
 16766  01261A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16767  012620  006F FF7B FFF6     	movff	postinc2,tblptrl
 16768  012626  006F FF77 FFF7     	movff	postdec2,tblptrh
 16769  01262C                     	if	0	;tblptru may be non-zero
 16770  01262C                     	endif
 16771  01262C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16772  01262C  0E00               	movlw	low (__mediumconst shr (0+16))
 16773  01262E  6EF8               	movwf	tblptru,c
 16774  012630                     	endif
 16775  012630  0008               	tblrd		*
 16776  012632  50F5               	movf	tablat,w,c
 16777  012634  6E09               	movwf	(btemp+8)^0,c
 16778  012636  6A0A               	clrf	(btemp+9)^0,c
 16779  012638  500B               	movf	(btemp+10)^0,w,c
 16780  01263A  2609               	addwf	(btemp+8)^0,f,c
 16781  01263C  500C               	movf	(btemp+11)^0,w,c
 16782  01263E  220A               	addwfc	(btemp+9)^0,f,c
 16783  012640  500A               	movf	(btemp+9)^0,w,c
 16784  012642  E106               	bnz	u13320
 16785  012644  0E0A               	movlw	10
 16786  012646  5C09               	subwf	(btemp+8)^0,w,c
 16787  012648  B0D8               	btfsc	status,0,c
 16788  01264A  D002               	goto	u13320
 16789  01264C  0E01               	movlw	1
 16790  01264E  D001               	goto	u13330
 16791  012650                     u13320:
 16792  012650  0E00               	movlw	0
 16793  012652                     u13330:
 16794  012652  6E0B               	movwf	(btemp+10)^0,c
 16795  012654  6A0C               	clrf	(btemp+11)^0,c
 16796                           
 16797                           ;stkvar	_vfpfcnvrt$6838 @ sp[(-32)+4]
 16798  012656  0EE4               	movlw	-28
 16799  012658  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16800  01265E  0EE5               	movlw	-27
 16801  012660  0060  F033  FFE3   	movff	btemp+11,plusw1
 16802                           
 16803                           ;stkvar	_vfpfcnvrt$6838 @ sp[(-32)+4]
 16804  012666  0EE4               	movlw	-28
 16805  012668  006F FF8C  F001    	movff	plusw1,btemp
 16806  01266E  0EE5               	movlw	-27
 16807  012670  50E3               	movf	plusw1,w,c
 16808  012672  1001               	iorwf	btemp^0,w,c
 16809  012674  A4D8               	btfss	status,2,c
 16810  012676  D7BD               	goto	l13999
 16811  012678                     u13340:
 16812                           
 16813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 16814                           ;stkvar	_fmt @ sp[(-32)+-4]
 16815  012678  0EDC               	movlw	-36
 16816  01267A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16817  012680  0EDD               	movlw	-35
 16818  012682  006F FF8F FFDA     	movff	plusw1,fsr2h
 16819  012688  006F FF7B FFF6     	movff	postinc2,tblptrl
 16820  01268E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16821  012694                     	if	0	;tblptru may be non-zero
 16822  012694                     	endif
 16823  012694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16824  012694  0E00               	movlw	low (__mediumconst shr (0+16))
 16825  012696  6EF8               	movwf	tblptru,c
 16826  012698                     	endif
 16827  012698  0008               	tblrd		*
 16828  01269A  50F5               	movf	tablat,w,c
 16829  01269C  0A2E               	xorlw	46
 16830  01269E  A4D8               	btfss	status,2,c
 16831  0126A0  D0AC               	goto	u13390
 16832                           
 16833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 16834  0126A2  6A3C               	clrf	_prec^0,c
 16835  0126A4  6A3D               	clrf	(_prec+1)^0,c
 16836                           
 16837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 16838                           ;stkvar	_fmt @ sp[(-32)+-4]
 16839  0126A6  0EDC               	movlw	-36
 16840  0126A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16841  0126AE  0EDD               	movlw	-35
 16842  0126B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16843  0126B6  2ADE               	incf	postinc2,f,c
 16844  0126B8  0E00               	movlw	0
 16845  0126BA  22DD               	addwfc	postdec2,f,c
 16846                           
 16847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 16848                           ;stkvar	_fmt @ sp[(-32)+-4]
 16849  0126BC  0EDC               	movlw	-36
 16850  0126BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16851  0126C4  0EDD               	movlw	-35
 16852  0126C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16853  0126CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16854  0126D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16855  0126D8                     	if	0	;tblptru may be non-zero
 16856  0126D8                     	endif
 16857  0126D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16858  0126D8  0E00               	movlw	low (__mediumconst shr (0+16))
 16859  0126DA  6EF8               	movwf	tblptru,c
 16860  0126DC                     	endif
 16861  0126DC  0008               	tblrd		*
 16862  0126DE  50F5               	movf	tablat,w,c
 16863  0126E0  0A2A               	xorlw	42
 16864  0126E2  A4D8               	btfss	status,2,c
 16865  0126E4  D02A               	goto	l14019
 16866                           
 16867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 16868                           ;stkvar	_fmt @ sp[(-32)+-4]
 16869  0126E6  0EDC               	movlw	-36
 16870  0126E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16871  0126EE  0EDD               	movlw	-35
 16872  0126F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16873  0126F6  2ADE               	incf	postinc2,f,c
 16874  0126F8  0E00               	movlw	0
 16875  0126FA  22DD               	addwfc	postdec2,f,c
 16876                           
 16877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 16878                           ;stkvar	_ap @ sp[(-32)+-6]
 16879  0126FC  0EDA               	movlw	-38
 16880  0126FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16881  012704  0EDB               	movlw	-37
 16882  012706  006F FF8F FFDA     	movff	plusw1,fsr2h
 16883  01270C  0E02               	movlw	2
 16884  01270E  5EDE               	subwf	postinc2,f,c
 16885  012710  0E00               	movlw	0
 16886  012712  5ADD               	subwfb	postdec2,f,c
 16887  012714  006F FF78  F00B    	movff	postinc2,btemp+10
 16888  01271A  006F FF74  F00C    	movff	postdec2,btemp+11
 16889  012720  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16890  012726  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16891  01272C  006F FF78  F03C    	movff	postinc2,_prec
 16892  012732  006F FF74  F03D    	movff	postdec2,_prec+1
 16893                           
 16894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 16895  012738  D060               	goto	u13390
 16896  01273A                     l14019:
 16897                           
 16898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 16899                           ;stkvar	_fmt @ sp[(-32)+-4]
 16900  01273A  0EDC               	movlw	-36
 16901  01273C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16902  012742  0EDD               	movlw	-35
 16903  012744  006F FF8F FFDA     	movff	plusw1,fsr2h
 16904  01274A  006F FF78  F00B    	movff	postinc2,btemp+10
 16905  012750  006F FF74  F00C    	movff	postdec2,btemp+11
 16906  012756  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16907  01275C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16908  012762  EC1C  F0C3         	call	_atoi	;wreg free
 16909  012766  0060  F004  F03C   	movff	btemp,_prec
 16910  01276C  0060  F008  F03D   	movff	btemp+1,_prec+1
 16911                           
 16912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16913  012772  D00B               	goto	l14023
 16914  012774                     l14021:
 16915                           
 16916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 16917                           ;stkvar	_fmt @ sp[(-32)+-4]
 16918  012774  0EDC               	movlw	-36
 16919  012776  006F FF8F FFD9     	movff	plusw1,fsr2l
 16920  01277C  0EDD               	movlw	-35
 16921  01277E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16922  012784  2ADE               	incf	postinc2,f,c
 16923  012786  0E00               	movlw	0
 16924  012788  22DD               	addwfc	postdec2,f,c
 16925  01278A                     l14023:
 16926  01278A  0ED0               	movlw	208
 16927  01278C  6E0B               	movwf	(btemp+10)^0,c
 16928  01278E  0EFF               	movlw	255
 16929  012790  6E0C               	movwf	(btemp+11)^0,c
 16930                           
 16931                           ;stkvar	_fmt @ sp[(-32)+-4]
 16932  012792  0EDC               	movlw	-36
 16933  012794  006F FF8F FFD9     	movff	plusw1,fsr2l
 16934  01279A  0EDD               	movlw	-35
 16935  01279C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16936  0127A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16937  0127A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16938  0127AE                     	if	0	;tblptru may be non-zero
 16939  0127AE                     	endif
 16940  0127AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16941  0127AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16942  0127B0  6EF8               	movwf	tblptru,c
 16943  0127B2                     	endif
 16944  0127B2  0008               	tblrd		*
 16945  0127B4  50F5               	movf	tablat,w,c
 16946  0127B6  6E09               	movwf	(btemp+8)^0,c
 16947  0127B8  6A0A               	clrf	(btemp+9)^0,c
 16948  0127BA  500B               	movf	(btemp+10)^0,w,c
 16949  0127BC  2609               	addwf	(btemp+8)^0,f,c
 16950  0127BE  500C               	movf	(btemp+11)^0,w,c
 16951  0127C0  220A               	addwfc	(btemp+9)^0,f,c
 16952  0127C2  500A               	movf	(btemp+9)^0,w,c
 16953  0127C4  E106               	bnz	u13370
 16954  0127C6  0E0A               	movlw	10
 16955  0127C8  5C09               	subwf	(btemp+8)^0,w,c
 16956  0127CA  B0D8               	btfsc	status,0,c
 16957  0127CC  D002               	goto	u13370
 16958  0127CE  0E01               	movlw	1
 16959  0127D0  D001               	goto	u13380
 16960  0127D2                     u13370:
 16961  0127D2  0E00               	movlw	0
 16962  0127D4                     u13380:
 16963  0127D4  6E0B               	movwf	(btemp+10)^0,c
 16964  0127D6  6A0C               	clrf	(btemp+11)^0,c
 16965                           
 16966                           ;stkvar	_vfpfcnvrt$6839 @ sp[(-32)+0]
 16967  0127D8  0EE0               	movlw	-32
 16968  0127DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16969  0127E0  0EE1               	movlw	-31
 16970  0127E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16971                           
 16972                           ;stkvar	_vfpfcnvrt$6839 @ sp[(-32)+0]
 16973  0127E8  0EE0               	movlw	-32
 16974  0127EA  006F FF8C  F001    	movff	plusw1,btemp
 16975  0127F0  0EE1               	movlw	-31
 16976  0127F2  50E3               	movf	plusw1,w,c
 16977  0127F4  1001               	iorwf	btemp^0,w,c
 16978  0127F6  A4D8               	btfss	status,2,c
 16979  0127F8  D7BD               	goto	l14021
 16980  0127FA                     u13390:
 16981                           
 16982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 16983                           ;stkvar	_fmt @ sp[(-32)+-4]
 16984  0127FA  0EDC               	movlw	-36
 16985  0127FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16986  012802  0EDD               	movlw	-35
 16987  012804  006F FF8F FFDA     	movff	plusw1,fsr2h
 16988  01280A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16989  012810  006F FF77 FFF7     	movff	postdec2,tblptrh
 16990  012816                     	if	0	;tblptru may be non-zero
 16991  012816                     	endif
 16992  012816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16993  012816  0E00               	movlw	low (__mediumconst shr (0+16))
 16994  012818  6EF8               	movwf	tblptru,c
 16995  01281A                     	endif
 16996  01281A  0008               	tblrd		*
 16997  01281C  50F5               	movf	tablat,w,c
 16998  01281E  6EE6               	movwf	postinc1,c
 16999  012820  0E00               	movlw	0
 17000  012822  6EE6               	movwf	postinc1,c
 17001  012824  ECFF  F0E1         	call	_tolower	;wreg free
 17002                           
 17003                           ;stkvar	_ct @ sp[(-32)+26]
 17004  012828  0EFA               	movlw	-6
 17005  01282A  0060  F007  FFE3   	movff	btemp,plusw1
 17006                           
 17007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 17008                           ;stkvar	_ct @ sp[(-32)+26]
 17009  012830  0EFA               	movlw	-6
 17010  012832  50E3               	movf	plusw1,w,c
 17011  012834  B4D8               	btfsc	status,2,c
 17012  012836  D05B               	goto	l14039
 17013                           
 17014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 17015                           ;stkvar	_ct @ sp[(-32)+26]
 17016  012838  0EFB               	movlw	251
 17017  01283A  24E1               	addwf	fsr1l,w,c
 17018  01283C  6ED9               	movwf	fsr2l,c
 17019  01283E  0EFF               	movlw	255
 17020  012840  20E2               	addwfc	fsr1h,w,c
 17021  012842  6EDA               	movwf	fsr2h,c
 17022                           
 17023                           ;stkvar	_fmt @ sp[(-32)+-4]
 17024  012844  0EDC               	movlw	-36
 17025  012846  006F FF8F FFE9     	movff	plusw1,fsr0l
 17026  01284C  0EDD               	movlw	-35
 17027  01284E  006F FF8F FFEA     	movff	plusw1,fsr0h
 17028  012854  006F FFB8  F00B    	movff	postinc0,btemp+10
 17029  01285A  006F FFB4  F00C    	movff	postdec0,btemp+11
 17030  012860  0E01               	movlw	1
 17031  012862  260B               	addwf	(btemp+10)^0,f,c
 17032  012864  0E00               	movlw	0
 17033  012866  220C               	addwfc	(btemp+11)^0,f,c
 17034  012868  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17035  01286E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17036  012874                     	if	0	;tblptru may be non-zero
 17037  012874                     	endif
 17038  012874                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17039  012874  0E00               	movlw	low (__mediumconst shr (0+16))
 17040  012876  6EF8               	movwf	tblptru,c
 17041  012878                     	endif
 17042  012878  0008               	tblrd		*
 17043  01287A  50F5               	movf	tablat,w,c
 17044  01287C  6EE6               	movwf	postinc1,c
 17045  01287E  0E00               	movlw	0
 17046  012880  6EE6               	movwf	postinc1,c
 17047  012882  ECFF  F0E1         	call	_tolower	;wreg free
 17048  012886  5001               	movf	btemp^0,w,c
 17049  012888  6EDF               	movwf	indf2,c
 17050                           
 17051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 17052                           ;stkvar	_ct @ sp[(-32)+26]
 17053  01288A  0EFB               	movlw	251
 17054  01288C  24E1               	addwf	fsr1l,w,c
 17055  01288E  6ED9               	movwf	fsr2l,c
 17056  012890  0EFF               	movlw	255
 17057  012892  20E2               	addwfc	fsr1h,w,c
 17058  012894  6EDA               	movwf	fsr2h,c
 17059  012896  50DF               	movf	indf2,w,c
 17060  012898  B4D8               	btfsc	status,2,c
 17061  01289A  D029               	goto	l14039
 17062                           
 17063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 17064                           ;stkvar	_ct @ sp[(-32)+26]
 17065  01289C  0EFC               	movlw	252
 17066  01289E  24E1               	addwf	fsr1l,w,c
 17067  0128A0  6ED9               	movwf	fsr2l,c
 17068  0128A2  0EFF               	movlw	255
 17069  0128A4  20E2               	addwfc	fsr1h,w,c
 17070  0128A6  6EDA               	movwf	fsr2h,c
 17071                           
 17072                           ;stkvar	_fmt @ sp[(-32)+-4]
 17073  0128A8  0EDC               	movlw	-36
 17074  0128AA  006F FF8F FFE9     	movff	plusw1,fsr0l
 17075  0128B0  0EDD               	movlw	-35
 17076  0128B2  006F FF8F FFEA     	movff	plusw1,fsr0h
 17077  0128B8  006F FFB8  F00B    	movff	postinc0,btemp+10
 17078  0128BE  006F FFB4  F00C    	movff	postdec0,btemp+11
 17079  0128C4  0E02               	movlw	2
 17080  0128C6  260B               	addwf	(btemp+10)^0,f,c
 17081  0128C8  0E00               	movlw	0
 17082  0128CA  220C               	addwfc	(btemp+11)^0,f,c
 17083  0128CC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17084  0128D2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17085  0128D8                     	if	0	;tblptru may be non-zero
 17086  0128D8                     	endif
 17087  0128D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17088  0128D8  0E00               	movlw	low (__mediumconst shr (0+16))
 17089  0128DA  6EF8               	movwf	tblptru,c
 17090  0128DC                     	endif
 17091  0128DC  0008               	tblrd		*
 17092  0128DE  50F5               	movf	tablat,w,c
 17093  0128E0  6EE6               	movwf	postinc1,c
 17094  0128E2  0E00               	movlw	0
 17095  0128E4  6EE6               	movwf	postinc1,c
 17096  0128E6  ECFF  F0E1         	call	_tolower	;wreg free
 17097  0128EA  5001               	movf	btemp^0,w,c
 17098  0128EC  6EDF               	movwf	indf2,c
 17099  0128EE                     l14039:
 17100                           
 17101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 17102                           ;stkvar	_fmt @ sp[(-32)+-4]
 17103  0128EE  0EDC               	movlw	-36
 17104  0128F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 17105  0128F6  0EDD               	movlw	-35
 17106  0128F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 17107  0128FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 17108  012904  006F FF77 FFF7     	movff	postdec2,tblptrh
 17109  01290A                     	if	0	;tblptru may be non-zero
 17110  01290A                     	endif
 17111  01290A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17112  01290A  0E00               	movlw	low (__mediumconst shr (0+16))
 17113  01290C  6EF8               	movwf	tblptru,c
 17114  01290E                     	endif
 17115  01290E  0008               	tblrd		*
 17116  012910  50F5               	movf	tablat,w,c
 17117  012912  0A63               	xorlw	99
 17118  012914  A4D8               	btfss	status,2,c
 17119  012916  D037               	goto	l14049
 17120                           
 17121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 17122                           ;stkvar	_fmt @ sp[(-32)+-4]
 17123  012918  0EDC               	movlw	-36
 17124  01291A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17125  012920  0EDD               	movlw	-35
 17126  012922  006F FF8F FFDA     	movff	plusw1,fsr2h
 17127  012928  2ADE               	incf	postinc2,f,c
 17128  01292A  0E00               	movlw	0
 17129  01292C  22DD               	addwfc	postdec2,f,c
 17130                           
 17131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17132                           ;stkvar	_ap @ sp[(-32)+-6]
 17133  01292E  0EDA               	movlw	-38
 17134  012930  006F FF8F FFD9     	movff	plusw1,fsr2l
 17135  012936  0EDB               	movlw	-37
 17136  012938  006F FF8F FFDA     	movff	plusw1,fsr2h
 17137  01293E  0E02               	movlw	2
 17138  012940  5EDE               	subwf	postinc2,f,c
 17139  012942  0E00               	movlw	0
 17140  012944  5ADD               	subwfb	postdec2,f,c
 17141  012946  006F FF78  F00B    	movff	postinc2,btemp+10
 17142  01294C  006F FF74  F00C    	movff	postdec2,btemp+11
 17143  012952  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17144  012958  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17145  01295E  50DF               	movf	indf2,w,c
 17146  012960  6E0C               	movwf	(btemp+11)^0,c
 17147                           
 17148                           ;stkvar	_c @ sp[(-32)+31]
 17149  012962  0EFF               	movlw	-1
 17150  012964  0060  F033  FFE3   	movff	btemp+11,plusw1
 17151                           
 17152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 17153                           ;stkvar	_c @ sp[(-32)+31]
 17154  01296A  0EFF               	movlw	-1
 17155  01296C  50E3               	movf	plusw1,w,c
 17156  01296E  6EE6               	movwf	postinc1,c
 17157                           
 17158                           ;stkvar	_fp @ sp[(-33)+-2]
 17159  012970  0EDD               	movlw	-35
 17160  012972  006F FF8F FFE6     	movff	plusw1,postinc1
 17161  012978  006F FF8F FFE6     	movff	plusw1,postinc1
 17162  01297E  EC79  F0E1         	call	_ctoa	;wreg free
 17163  012982  EF3C  F09A         	goto	l2649
 17164  012986                     l14049:
 17165                           
 17166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 17167                           ;stkvar	_fmt @ sp[(-32)+-4]
 17168  012986  0EDC               	movlw	-36
 17169  012988  006F FF8F FFD9     	movff	plusw1,fsr2l
 17170  01298E  0EDD               	movlw	-35
 17171  012990  006F FF8F FFDA     	movff	plusw1,fsr2h
 17172  012996  006F FF7B FFF6     	movff	postinc2,tblptrl
 17173  01299C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17174  0129A2                     	if	0	;tblptru may be non-zero
 17175  0129A2                     	endif
 17176  0129A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17177  0129A2  0E00               	movlw	low (__mediumconst shr (0+16))
 17178  0129A4  6EF8               	movwf	tblptru,c
 17179  0129A6                     	endif
 17180  0129A6  0008               	tblrd		*
 17181  0129A8  50F5               	movf	tablat,w,c
 17182  0129AA  0A64               	xorlw	100
 17183  0129AC  B4D8               	btfsc	status,2,c
 17184  0129AE  D015               	goto	u13440
 17185                           
 17186                           ;stkvar	_fmt @ sp[(-32)+-4]
 17187  0129B0  0EDC               	movlw	-36
 17188  0129B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17189  0129B8  0EDD               	movlw	-35
 17190  0129BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17191  0129C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 17192  0129C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 17193  0129CC                     	if	0	;tblptru may be non-zero
 17194  0129CC                     	endif
 17195  0129CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17196  0129CC  0E00               	movlw	low (__mediumconst shr (0+16))
 17197  0129CE  6EF8               	movwf	tblptru,c
 17198  0129D0                     	endif
 17199  0129D0  0008               	tblrd		*
 17200  0129D2  50F5               	movf	tablat,w,c
 17201  0129D4  0A69               	xorlw	105
 17202  0129D6  A4D8               	btfss	status,2,c
 17203  0129D8  D076               	goto	l14061
 17204  0129DA                     u13440:
 17205                           
 17206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 17207                           ;stkvar	_fmt @ sp[(-32)+-4]
 17208  0129DA  0EDC               	movlw	-36
 17209  0129DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 17210  0129E2  0EDD               	movlw	-35
 17211  0129E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17212  0129EA  2ADE               	incf	postinc2,f,c
 17213  0129EC  0E00               	movlw	0
 17214  0129EE  22DD               	addwfc	postdec2,f,c
 17215                           
 17216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 17217                           ;stkvar	_ap @ sp[(-32)+-6]
 17218  0129F0  0EDA               	movlw	-38
 17219  0129F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17220  0129F8  0EDB               	movlw	-37
 17221  0129FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17222  012A00  0E02               	movlw	2
 17223  012A02  5EDE               	subwf	postinc2,f,c
 17224  012A04  0E00               	movlw	0
 17225  012A06  5ADD               	subwfb	postdec2,f,c
 17226  012A08  006F FF78  F00B    	movff	postinc2,btemp+10
 17227  012A0E  006F FF74  F00C    	movff	postdec2,btemp+11
 17228  012A14  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17229  012A1A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17230  012A20  006F FF78  F00B    	movff	postinc2,btemp+10
 17231  012A26  006F FF74  F00C    	movff	postdec2,btemp+11
 17232                           
 17233                           ;stkvar	_ll @ sp[(-32)+14]
 17234  012A2C  0EEE               	movlw	-18
 17235  012A2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17236  012A34  0EEF               	movlw	-17
 17237  012A36  0060  F033  FFE3   	movff	btemp+11,plusw1
 17238  012A3C  6A01               	clrf	btemp^0,c
 17239  012A3E  BEE3               	btfsc	plusw1,7,c
 17240  012A40  6801               	setf	btemp^0,c
 17241  012A42  0EF0               	movlw	-16
 17242  012A44  0060  F007  FFE3   	movff	btemp,plusw1
 17243  012A4A  0EF1               	movlw	-15
 17244  012A4C  0060  F007  FFE3   	movff	btemp,plusw1
 17245  012A52  0EF2               	movlw	-14
 17246  012A54  0060  F007  FFE3   	movff	btemp,plusw1
 17247  012A5A  0EF3               	movlw	-13
 17248  012A5C  0060  F007  FFE3   	movff	btemp,plusw1
 17249  012A62  0EF4               	movlw	-12
 17250  012A64  0060  F007  FFE3   	movff	btemp,plusw1
 17251  012A6A  0EF5               	movlw	-11
 17252  012A6C  0060  F007  FFE3   	movff	btemp,plusw1
 17253  012A72                     l14057:
 17254                           
 17255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 17256                           ;stkvar	_ll @ sp[(-32)+14]
 17257  012A72  50E1               	movf	fsr1l,w,c
 17258  012A74  0FEE               	addlw	-18
 17259  012A76  6ED9               	movwf	fsr2l,c
 17260  012A78  50E2               	movf	fsr1h,w,c
 17261  012A7A  6EDA               	movwf	fsr2h,c
 17262  012A7C  0EFF               	movlw	255
 17263  012A7E  22DA               	addwfc	fsr2h,f,c
 17264  012A80  006F FF7B FFE6     	movff	postinc2,postinc1
 17265  012A86  006F FF7B FFE6     	movff	postinc2,postinc1
 17266  012A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17267  012A92  006F FF7B FFE6     	movff	postinc2,postinc1
 17268  012A98  006F FF7B FFE6     	movff	postinc2,postinc1
 17269  012A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17270  012AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 17271  012AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 17272                           
 17273                           ;stkvar	_fp @ sp[(-40)+-2]
 17274  012AB0  0ED6               	movlw	-42
 17275  012AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17276  012AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17277  012ABE  EC60  F0B2         	call	_dtoa	;wreg free
 17278  012AC2  EF3C  F09A         	goto	l2649
 17279  012AC6                     l14061:
 17280                           
 17281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 17282  012AC6  0E02               	movlw	2
 17283  012AC8  6EE6               	movwf	postinc1,c
 17284  012ACA  0E00               	movlw	0
 17285  012ACC  6EE6               	movwf	postinc1,c
 17286  012ACE  0EEA               	movlw	low STR_102
 17287  012AD0  6EE6               	movwf	postinc1,c
 17288  012AD2  0EFF               	movlw	high STR_102
 17289  012AD4  6EE6               	movwf	postinc1,c
 17290                           
 17291                           ;stkvar	_fmt @ sp[(-36)+-4]
 17292  012AD6  0ED8               	movlw	-40
 17293  012AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 17294  012ADE  0ED9               	movlw	-39
 17295  012AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17296  012AE6  006F FF78  F00B    	movff	postinc2,btemp+10
 17297  012AEC  006F FF74  F00C    	movff	postdec2,btemp+11
 17298  012AF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17299  012AF8  0060  F033  FFE6   	movff	btemp+11,postinc1
 17300  012AFE  EC99  F0C6         	call	_strncmp	;wreg free
 17301  012B02  5001               	movf	btemp^0,w,c
 17302  012B04  1002               	iorwf	(btemp+1)^0,w,c
 17303  012B06  B4D8               	btfsc	status,2,c
 17304  012B08  D022               	goto	u13460
 17305  012B0A  0E02               	movlw	2
 17306  012B0C  6EE6               	movwf	postinc1,c
 17307  012B0E  0E00               	movlw	0
 17308  012B10  6EE6               	movwf	postinc1,c
 17309  012B12  0EF0               	movlw	low STR_106
 17310  012B14  6EE6               	movwf	postinc1,c
 17311  012B16  0EFF               	movlw	high STR_106
 17312  012B18  6EE6               	movwf	postinc1,c
 17313                           
 17314                           ;stkvar	_fmt @ sp[(-36)+-4]
 17315  012B1A  0ED8               	movlw	-40
 17316  012B1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17317  012B22  0ED9               	movlw	-39
 17318  012B24  006F FF8F FFDA     	movff	plusw1,fsr2h
 17319  012B2A  006F FF78  F00B    	movff	postinc2,btemp+10
 17320  012B30  006F FF74  F00C    	movff	postdec2,btemp+11
 17321  012B36  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17322  012B3C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17323  012B42  EC99  F0C6         	call	_strncmp	;wreg free
 17324  012B46  5001               	movf	btemp^0,w,c
 17325  012B48  1002               	iorwf	(btemp+1)^0,w,c
 17326  012B4A  A4D8               	btfss	status,2,c
 17327  012B4C  D069               	goto	l14073
 17328  012B4E                     u13460:
 17329                           
 17330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 17331                           ;stkvar	_fmt @ sp[(-32)+-4]
 17332  012B4E  0EDC               	movlw	-36
 17333  012B50  006F FF8F FFD9     	movff	plusw1,fsr2l
 17334  012B56  0EDD               	movlw	-35
 17335  012B58  006F FF8F FFDA     	movff	plusw1,fsr2h
 17336  012B5E  0E02               	movlw	2
 17337  012B60  26DE               	addwf	postinc2,f,c
 17338  012B62  0E00               	movlw	0
 17339  012B64  22DD               	addwfc	postdec2,f,c
 17340                           
 17341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 17342                           ;stkvar	_ap @ sp[(-32)+-6]
 17343  012B66  0EDA               	movlw	-38
 17344  012B68  006F FF8F FFD9     	movff	plusw1,fsr2l
 17345  012B6E  0EDB               	movlw	-37
 17346  012B70  006F FF8F FFDA     	movff	plusw1,fsr2h
 17347  012B76  0E04               	movlw	4
 17348  012B78  5EDE               	subwf	postinc2,f,c
 17349  012B7A  0E00               	movlw	0
 17350  012B7C  5ADD               	subwfb	postdec2,f,c
 17351  012B7E  006F FF78  F00B    	movff	postinc2,btemp+10
 17352  012B84  006F FF74  F00C    	movff	postdec2,btemp+11
 17353  012B8A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17354  012B90  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17355  012B96  006F FF78  F009    	movff	postinc2,btemp+8
 17356  012B9C  006F FF78  F00A    	movff	postinc2,btemp+9
 17357  012BA2  006F FF78  F00B    	movff	postinc2,btemp+10
 17358  012BA8  006F FF78  F00C    	movff	postinc2,btemp+11
 17359  012BAE  0060  F024  F011   	movff	btemp+8,btemp+16
 17360  012BB4  0060  F028  F012   	movff	btemp+9,btemp+17
 17361  012BBA  0060  F02C  F013   	movff	btemp+10,btemp+18
 17362  012BC0  0060  F030  F014   	movff	btemp+11,btemp+19
 17363  012BC6  6A15               	clrf	(btemp+20)^0,c
 17364  012BC8  BE14               	btfsc	(btemp+19)^0,7,c
 17365  012BCA  6815               	setf	(btemp+20)^0,c
 17366  012BCC  0060  F054  F016   	movff	btemp+20,btemp+21
 17367  012BD2  0060  F054  F017   	movff	btemp+20,btemp+22
 17368  012BD8  0060  F054  F018   	movff	btemp+20,btemp+23
 17369                           
 17370                           ;stkvar	_ll @ sp[(-32)+14]
 17371  012BDE  0EEE               	movlw	-18
 17372  012BE0  0060  F047  FFE3   	movff	btemp+16,plusw1
 17373  012BE6  0EEF               	movlw	-17
 17374  012BE8  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17375  012BEE  0EF0               	movlw	-16
 17376  012BF0  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17377  012BF6  0EF1               	movlw	-15
 17378  012BF8  0060  F053  FFE3   	movff	btemp+19,plusw1
 17379  012BFE  0EF2               	movlw	-14
 17380  012C00  0060  F057  FFE3   	movff	btemp+20,plusw1
 17381  012C06  0EF3               	movlw	-13
 17382  012C08  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17383  012C0E  0EF4               	movlw	-12
 17384  012C10  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17385  012C16  0EF5               	movlw	-11
 17386  012C18  0060  F063  FFE3   	movff	btemp+23,plusw1
 17387  012C1E  D729               	goto	l14057
 17388  012C20                     l14073:
 17389                           
 17390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 17391                           ;stkvar	_ct @ sp[(-32)+26]
 17392  012C20  0EFA               	movlw	-6
 17393  012C22  006F FF8C  F001    	movff	plusw1,btemp
 17394  012C28  0E66               	movlw	102
 17395  012C2A  1801               	xorwf	btemp^0,w,c
 17396  012C2C  A4D8               	btfss	status,2,c
 17397  012C2E  D06E               	goto	l14085
 17398                           
 17399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 17400                           ;stkvar	_fmt @ sp[(-32)+-4]
 17401  012C30  0EDC               	movlw	-36
 17402  012C32  006F FF8F FFD9     	movff	plusw1,fsr2l
 17403  012C38  0EDD               	movlw	-35
 17404  012C3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17405  012C40  006F FF7B FFF6     	movff	postinc2,tblptrl
 17406  012C46  006F FF77 FFF7     	movff	postdec2,tblptrh
 17407  012C4C                     	if	0	;tblptru may be non-zero
 17408  012C4C                     	endif
 17409  012C4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17410  012C4C  0E00               	movlw	low (__mediumconst shr (0+16))
 17411  012C4E  6EF8               	movwf	tblptru,c
 17412  012C50                     	endif
 17413                           
 17414                           ;stkvar	_c @ sp[(-32)+31]
 17415  012C50  0008               	tblrd		*
 17416  012C52  0EFF               	movlw	-1
 17417  012C54  006F FFD7 FFE3     	movff	tablat,plusw1
 17418                           
 17419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 17420                           ;stkvar	_fmt @ sp[(-32)+-4]
 17421  012C5A  0EDC               	movlw	-36
 17422  012C5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17423  012C62  0EDD               	movlw	-35
 17424  012C64  006F FF8F FFDA     	movff	plusw1,fsr2h
 17425  012C6A  2ADE               	incf	postinc2,f,c
 17426  012C6C  0E00               	movlw	0
 17427  012C6E  22DD               	addwfc	postdec2,f,c
 17428                           
 17429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 17430                           ;stkvar	_ap @ sp[(-32)+-6]
 17431  012C70  0EDA               	movlw	-38
 17432  012C72  006F FF8F FFD9     	movff	plusw1,fsr2l
 17433  012C78  0EDB               	movlw	-37
 17434  012C7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17435  012C80  0E04               	movlw	4
 17436  012C82  5EDE               	subwf	postinc2,f,c
 17437  012C84  0E00               	movlw	0
 17438  012C86  5ADD               	subwfb	postdec2,f,c
 17439  012C88  006F FF78  F00B    	movff	postinc2,btemp+10
 17440  012C8E  006F FF74  F00C    	movff	postdec2,btemp+11
 17441  012C94  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17442  012C9A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17443  012CA0  006F FF78  F009    	movff	postinc2,btemp+8
 17444  012CA6  006F FF78  F00A    	movff	postinc2,btemp+9
 17445  012CAC  006F FF78  F00B    	movff	postinc2,btemp+10
 17446  012CB2  006F FF78  F00C    	movff	postinc2,btemp+11
 17447                           
 17448                           ;stkvar	_f @ sp[(-32)+22]
 17449  012CB8  0EF6               	movlw	-10
 17450  012CBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 17451  012CC0  0EF7               	movlw	-9
 17452  012CC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17453  012CC8  0EF8               	movlw	-8
 17454  012CCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17455  012CD0  0EF9               	movlw	-7
 17456  012CD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17457  012CD8                     l14081:
 17458                           
 17459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 17460                           ;stkvar	_c @ sp[(-32)+31]
 17461  012CD8  0EFF               	movlw	-1
 17462  012CDA  50E3               	movf	plusw1,w,c
 17463  012CDC  6EE6               	movwf	postinc1,c
 17464                           
 17465                           ;stkvar	_f @ sp[(-33)+22]
 17466  012CDE  0EF5               	movlw	-11
 17467  012CE0  006F FF8F FFE6     	movff	plusw1,postinc1
 17468  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17469  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 17470  012CF2  006F FF8F FFE6     	movff	plusw1,postinc1
 17471                           
 17472                           ;stkvar	_fp @ sp[(-37)+-2]
 17473  012CF8  0ED9               	movlw	-39
 17474  012CFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17475  012D00  006F FF8F FFE6     	movff	plusw1,postinc1
 17476  012D06  EC49  F089         	call	_efgtoa	;wreg free
 17477  012D0A  D3B6               	goto	l2649
 17478  012D0C                     l14085:
 17479                           
 17480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 17481  012D0C  0E02               	movlw	2
 17482  012D0E  6EE6               	movwf	postinc1,c
 17483  012D10  0E00               	movlw	0
 17484  012D12  6EE6               	movwf	postinc1,c
 17485  012D14  0EED               	movlw	low STR_111
 17486  012D16  6EE6               	movwf	postinc1,c
 17487  012D18  0EFF               	movlw	high STR_111
 17488  012D1A  6EE6               	movwf	postinc1,c
 17489                           
 17490                           ;stkvar	_ct @ sp[(-36)+26]
 17491  012D1C  0EF6               	movlw	246
 17492  012D1E  24E1               	addwf	fsr1l,w,c
 17493  012D20  6E01               	movwf	btemp^0,c
 17494  012D22  0EFF               	movlw	255
 17495  012D24  20E2               	addwfc	fsr1h,w,c
 17496  012D26  6E02               	movwf	(btemp+1)^0,c
 17497  012D28  0060  F007  FFE6   	movff	btemp,postinc1
 17498  012D2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17499  012D34  EC99  F0C6         	call	_strncmp	;wreg free
 17500  012D38  5001               	movf	btemp^0,w,c
 17501  012D3A  1002               	iorwf	(btemp+1)^0,w,c
 17502  012D3C  A4D8               	btfss	status,2,c
 17503  012D3E  D096               	goto	l14105
 17504                           
 17505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 17506                           ;stkvar	_fmt @ sp[(-32)+-4]
 17507  012D40  0EDC               	movlw	-36
 17508  012D42  006F FF8F FFD9     	movff	plusw1,fsr2l
 17509  012D48  0EDD               	movlw	-35
 17510  012D4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17511  012D50  006F FF78  F00B    	movff	postinc2,btemp+10
 17512  012D56  006F FF74  F00C    	movff	postdec2,btemp+11
 17513  012D5C  0E01               	movlw	1
 17514  012D5E  260B               	addwf	(btemp+10)^0,f,c
 17515  012D60  0E00               	movlw	0
 17516  012D62  220C               	addwfc	(btemp+11)^0,f,c
 17517  012D64  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17518  012D6A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17519  012D70                     	if	0	;tblptru may be non-zero
 17520  012D70                     	endif
 17521  012D70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17522  012D70  0E00               	movlw	low (__mediumconst shr (0+16))
 17523  012D72  6EF8               	movwf	tblptru,c
 17524  012D74                     	endif
 17525                           
 17526                           ;stkvar	_c @ sp[(-32)+31]
 17527  012D74  0008               	tblrd		*
 17528  012D76  0EFF               	movlw	-1
 17529  012D78  006F FFD7 FFE3     	movff	tablat,plusw1
 17530  012D7E  0EBF               	movlw	191
 17531  012D80  6E0B               	movwf	(btemp+10)^0,c
 17532  012D82  0EFF               	movlw	255
 17533  012D84  6E0C               	movwf	(btemp+11)^0,c
 17534                           
 17535                           ;stkvar	_fmt @ sp[(-32)+-4]
 17536  012D86  0EDC               	movlw	-36
 17537  012D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 17538  012D8E  0EDD               	movlw	-35
 17539  012D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 17540  012D96  006F FF7B FFF6     	movff	postinc2,tblptrl
 17541  012D9C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17542  012DA2                     	if	0	;tblptru may be non-zero
 17543  012DA2                     	endif
 17544  012DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17545  012DA2  0E00               	movlw	low (__mediumconst shr (0+16))
 17546  012DA4  6EF8               	movwf	tblptru,c
 17547  012DA6                     	endif
 17548  012DA6  0008               	tblrd		*
 17549  012DA8  50F5               	movf	tablat,w,c
 17550  012DAA  6E09               	movwf	(btemp+8)^0,c
 17551  012DAC  6A0A               	clrf	(btemp+9)^0,c
 17552  012DAE  500B               	movf	(btemp+10)^0,w,c
 17553  012DB0  2609               	addwf	(btemp+8)^0,f,c
 17554  012DB2  500C               	movf	(btemp+11)^0,w,c
 17555  012DB4  220A               	addwfc	(btemp+9)^0,f,c
 17556  012DB6  500A               	movf	(btemp+9)^0,w,c
 17557  012DB8  E106               	bnz	u13490
 17558  012DBA  0E1A               	movlw	26
 17559  012DBC  5C09               	subwf	(btemp+8)^0,w,c
 17560  012DBE  B0D8               	btfsc	status,0,c
 17561  012DC0  D002               	goto	u13490
 17562  012DC2  0E01               	movlw	1
 17563  012DC4  D001               	goto	u13500
 17564  012DC6                     u13490:
 17565  012DC6  0E00               	movlw	0
 17566  012DC8                     u13500:
 17567  012DC8  6E0B               	movwf	(btemp+10)^0,c
 17568  012DCA  6A0C               	clrf	(btemp+11)^0,c
 17569                           
 17570                           ;stkvar	_vfpfcnvrt$6850 @ sp[(-32)+2]
 17571  012DCC  0EE2               	movlw	-30
 17572  012DCE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17573  012DD4  0EE3               	movlw	-29
 17574  012DD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17575                           
 17576                           ;stkvar	_vfpfcnvrt$6850 @ sp[(-32)+2]
 17577  012DDC  0EE2               	movlw	-30
 17578  012DDE  006F FF8C  F001    	movff	plusw1,btemp
 17579  012DE4  0EE3               	movlw	-29
 17580  012DE6  50E3               	movf	plusw1,w,c
 17581  012DE8  1001               	iorwf	btemp^0,w,c
 17582                           
 17583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 17584                           ;stkvar	_ap @ sp[(-32)+-6]
 17585                           
 17586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 17587                           
 17588                           ;stkvar	_f @ sp[(-32)+22]
 17589                           
 17590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 17591                           ;stkvar	_ap @ sp[(-32)+-6]
 17592  012DEA  0EDA               	movlw	-38
 17593  012DEC  006F FF8F FFD9     	movff	plusw1,fsr2l
 17594  012DF2  0EDB               	movlw	-37
 17595  012DF4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17596  012DFA  0E04               	movlw	4
 17597  012DFC  5EDE               	subwf	postinc2,f,c
 17598  012DFE  0E00               	movlw	0
 17599  012E00  5ADD               	subwfb	postdec2,f,c
 17600  012E02  006F FF78  F00B    	movff	postinc2,btemp+10
 17601  012E08  006F FF74  F00C    	movff	postdec2,btemp+11
 17602  012E0E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17603  012E14  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17604  012E1A  006F FF78  F009    	movff	postinc2,btemp+8
 17605  012E20  006F FF78  F00A    	movff	postinc2,btemp+9
 17606  012E26  006F FF78  F00B    	movff	postinc2,btemp+10
 17607  012E2C  006F FF78  F00C    	movff	postinc2,btemp+11
 17608                           
 17609                           ;stkvar	_f @ sp[(-32)+22]
 17610  012E32  0EF6               	movlw	-10
 17611  012E34  0060  F027  FFE3   	movff	btemp+8,plusw1
 17612  012E3A  0EF7               	movlw	-9
 17613  012E3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17614  012E42  0EF8               	movlw	-8
 17615  012E44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17616  012E4A  0EF9               	movlw	-7
 17617  012E4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17618                           
 17619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 17620                           ;stkvar	_fmt @ sp[(-32)+-4]
 17621  012E52  0EDC               	movlw	-36
 17622  012E54  006F FF8F FFD9     	movff	plusw1,fsr2l
 17623  012E5A  0EDD               	movlw	-35
 17624  012E5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17625  012E62  0E02               	movlw	2
 17626  012E64  26DE               	addwf	postinc2,f,c
 17627  012E66  0E00               	movlw	0
 17628  012E68  22DD               	addwfc	postdec2,f,c
 17629  012E6A  D736               	goto	l14081
 17630  012E6C                     l14105:
 17631                           
 17632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 17633                           ;stkvar	_fmt @ sp[(-32)+-4]
 17634  012E6C  0EDC               	movlw	-36
 17635  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17636  012E74  0EDD               	movlw	-35
 17637  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 17638  012E7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17639  012E82  006F FF77 FFF7     	movff	postdec2,tblptrh
 17640  012E88                     	if	0	;tblptru may be non-zero
 17641  012E88                     	endif
 17642  012E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17643  012E88  0E00               	movlw	low (__mediumconst shr (0+16))
 17644  012E8A  6EF8               	movwf	tblptru,c
 17645  012E8C                     	endif
 17646  012E8C  0008               	tblrd		*
 17647  012E8E  50F5               	movf	tablat,w,c
 17648  012E90  0A73               	xorlw	115
 17649  012E92  A4D8               	btfss	status,2,c
 17650  012E94  D042               	goto	l14115
 17651                           
 17652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 17653                           ;stkvar	_fmt @ sp[(-32)+-4]
 17654  012E96  0EDC               	movlw	-36
 17655  012E98  006F FF8F FFD9     	movff	plusw1,fsr2l
 17656  012E9E  0EDD               	movlw	-35
 17657  012EA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17658  012EA6  2ADE               	incf	postinc2,f,c
 17659  012EA8  0E00               	movlw	0
 17660  012EAA  22DD               	addwfc	postdec2,f,c
 17661                           
 17662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 17663                           ;stkvar	_ap @ sp[(-32)+-6]
 17664  012EAC  0EDA               	movlw	-38
 17665  012EAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 17666  012EB4  0EDB               	movlw	-37
 17667  012EB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 17668  012EBC  0E02               	movlw	2
 17669  012EBE  5EDE               	subwf	postinc2,f,c
 17670  012EC0  0E00               	movlw	0
 17671  012EC2  5ADD               	subwfb	postdec2,f,c
 17672  012EC4  006F FF78  F00B    	movff	postinc2,btemp+10
 17673  012ECA  006F FF74  F00C    	movff	postdec2,btemp+11
 17674  012ED0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17675  012ED6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17676  012EDC  006F FF78  F00B    	movff	postinc2,btemp+10
 17677  012EE2  006F FF74  F00C    	movff	postdec2,btemp+11
 17678                           
 17679                           ;stkvar	_cp @ sp[(-32)+29]
 17680  012EE8  0EFE               	movlw	-2
 17681  012EEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17682  012EF0  0EFD               	movlw	-3
 17683  012EF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17684                           
 17685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 17686                           ;stkvar	_cp @ sp[(-32)+29]
 17687  012EF8  0EFD               	movlw	-3
 17688  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17689  012F00  006F FF8F FFE6     	movff	plusw1,postinc1
 17690                           
 17691                           ;stkvar	_fp @ sp[(-34)+-2]
 17692  012F06  0EDC               	movlw	-36
 17693  012F08  006F FF8F FFE6     	movff	plusw1,postinc1
 17694  012F0E  006F FF8F FFE6     	movff	plusw1,postinc1
 17695  012F14  EC7D  F0C0         	call	_stoa	;wreg free
 17696  012F18  D2AF               	goto	l2649
 17697  012F1A                     l14115:
 17698                           
 17699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 17700                           ;stkvar	_fmt @ sp[(-32)+-4]
 17701  012F1A  0EDC               	movlw	-36
 17702  012F1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17703  012F22  0EDD               	movlw	-35
 17704  012F24  006F FF8F FFDA     	movff	plusw1,fsr2h
 17705  012F2A  006F FF7B FFF6     	movff	postinc2,tblptrl
 17706  012F30  006F FF77 FFF7     	movff	postdec2,tblptrh
 17707  012F36                     	if	0	;tblptru may be non-zero
 17708  012F36                     	endif
 17709  012F36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17710  012F36  0E00               	movlw	low (__mediumconst shr (0+16))
 17711  012F38  6EF8               	movwf	tblptru,c
 17712  012F3A                     	endif
 17713  012F3A  0008               	tblrd		*
 17714  012F3C  50F5               	movf	tablat,w,c
 17715  012F3E  0A75               	xorlw	117
 17716  012F40  A4D8               	btfss	status,2,c
 17717  012F42  D07C               	goto	l14125
 17718                           
 17719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 17720                           ;stkvar	_fmt @ sp[(-32)+-4]
 17721  012F44  0EDC               	movlw	-36
 17722  012F46  006F FF8F FFD9     	movff	plusw1,fsr2l
 17723  012F4C  0EDD               	movlw	-35
 17724  012F4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 17725  012F54  2ADE               	incf	postinc2,f,c
 17726  012F56  0E00               	movlw	0
 17727  012F58  22DD               	addwfc	postdec2,f,c
 17728                           
 17729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 17730                           ;stkvar	_ap @ sp[(-32)+-6]
 17731  012F5A  0EDA               	movlw	-38
 17732  012F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17733  012F62  0EDB               	movlw	-37
 17734  012F64  006F FF8F FFDA     	movff	plusw1,fsr2h
 17735  012F6A  0E02               	movlw	2
 17736  012F6C  5EDE               	subwf	postinc2,f,c
 17737  012F6E  0E00               	movlw	0
 17738  012F70  5ADD               	subwfb	postdec2,f,c
 17739  012F72  006F FF78  F00B    	movff	postinc2,btemp+10
 17740  012F78  006F FF74  F00C    	movff	postdec2,btemp+11
 17741  012F7E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17742  012F84  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17743  012F8A  006F FF78  F00B    	movff	postinc2,btemp+10
 17744  012F90  006F FF74  F00C    	movff	postdec2,btemp+11
 17745  012F96  500B               	movf	(btemp+10)^0,w,c
 17746  012F98  6E11               	movwf	(btemp+16)^0,c
 17747  012F9A  500C               	movf	(btemp+11)^0,w,c
 17748  012F9C  6E12               	movwf	(btemp+17)^0,c
 17749  012F9E  6A13               	clrf	(btemp+18)^0,c
 17750  012FA0  6A14               	clrf	(btemp+19)^0,c
 17751  012FA2  6A15               	clrf	(btemp+20)^0,c
 17752  012FA4  6A16               	clrf	(btemp+21)^0,c
 17753  012FA6  6A17               	clrf	(btemp+22)^0,c
 17754  012FA8  6A18               	clrf	(btemp+23)^0,c
 17755                           
 17756                           ;stkvar	_llu @ sp[(-32)+6]
 17757  012FAA  0EE6               	movlw	-26
 17758  012FAC  0060  F047  FFE3   	movff	btemp+16,plusw1
 17759  012FB2  0EE7               	movlw	-25
 17760  012FB4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17761  012FBA  0EE8               	movlw	-24
 17762  012FBC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17763  012FC2  0EE9               	movlw	-23
 17764  012FC4  0060  F053  FFE3   	movff	btemp+19,plusw1
 17765  012FCA  0EEA               	movlw	-22
 17766  012FCC  0060  F057  FFE3   	movff	btemp+20,plusw1
 17767  012FD2  0EEB               	movlw	-21
 17768  012FD4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17769  012FDA  0EEC               	movlw	-20
 17770  012FDC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17771  012FE2  0EED               	movlw	-19
 17772  012FE4  0060  F063  FFE3   	movff	btemp+23,plusw1
 17773                           
 17774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 17775                           ;stkvar	_llu @ sp[(-32)+6]
 17776  012FEA  50E1               	movf	fsr1l,w,c
 17777  012FEC  0FE6               	addlw	-26
 17778  012FEE  6ED9               	movwf	fsr2l,c
 17779  012FF0  50E2               	movf	fsr1h,w,c
 17780  012FF2  6EDA               	movwf	fsr2h,c
 17781  012FF4  0EFF               	movlw	255
 17782  012FF6  22DA               	addwfc	fsr2h,f,c
 17783  012FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 17784  012FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 17785  013004  006F FF7B FFE6     	movff	postinc2,postinc1
 17786  01300A  006F FF7B FFE6     	movff	postinc2,postinc1
 17787  013010  006F FF7B FFE6     	movff	postinc2,postinc1
 17788  013016  006F FF7B FFE6     	movff	postinc2,postinc1
 17789  01301C  006F FF7B FFE6     	movff	postinc2,postinc1
 17790  013022  006F FF7B FFE6     	movff	postinc2,postinc1
 17791                           
 17792                           ;stkvar	_fp @ sp[(-40)+-2]
 17793  013028  0ED6               	movlw	-42
 17794  01302A  006F FF8F FFE6     	movff	plusw1,postinc1
 17795  013030  006F FF8F FFE6     	movff	plusw1,postinc1
 17796  013036  ECFB  F0BB         	call	_utoa	;wreg free
 17797  01303A  D21E               	goto	l2649
 17798  01303C                     l14125:
 17799                           
 17800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 17801  01303C  0E02               	movlw	2
 17802  01303E  6EE6               	movwf	postinc1,c
 17803  013040  0E00               	movlw	0
 17804  013042  6EE6               	movwf	postinc1,c
 17805  013044  0EF3               	movlw	low STR_116
 17806  013046  6EE6               	movwf	postinc1,c
 17807  013048  0EFF               	movlw	high STR_116
 17808  01304A  6EE6               	movwf	postinc1,c
 17809                           
 17810                           ;stkvar	_fmt @ sp[(-36)+-4]
 17811  01304C  0ED8               	movlw	-40
 17812  01304E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17813  013054  0ED9               	movlw	-39
 17814  013056  006F FF8F FFDA     	movff	plusw1,fsr2h
 17815  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 17816  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 17817  013068  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17818  01306E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17819  013074  EC99  F0C6         	call	_strncmp	;wreg free
 17820  013078  5001               	movf	btemp^0,w,c
 17821  01307A  1002               	iorwf	(btemp+1)^0,w,c
 17822  01307C  A4D8               	btfss	status,2,c
 17823  01307E  D039               	goto	l14135
 17824                           
 17825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 17826                           ;stkvar	_fmt @ sp[(-32)+-4]
 17827  013080  0EDC               	movlw	-36
 17828  013082  006F FF8F FFD9     	movff	plusw1,fsr2l
 17829  013088  0EDD               	movlw	-35
 17830  01308A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17831  013090  0E02               	movlw	2
 17832  013092  26DE               	addwf	postinc2,f,c
 17833  013094  0E00               	movlw	0
 17834  013096  22DD               	addwfc	postdec2,f,c
 17835                           
 17836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 17837                           ;stkvar	_ap @ sp[(-32)+-6]
 17838  013098  0EDA               	movlw	-38
 17839  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17840  0130A0  0EDB               	movlw	-37
 17841  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17842  0130A8  0E04               	movlw	4
 17843  0130AA  5EDE               	subwf	postinc2,f,c
 17844  0130AC  0E00               	movlw	0
 17845  0130AE  5ADD               	subwfb	postdec2,f,c
 17846  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 17847  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 17848  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17849  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17850  0130C8  006F FF78  F009    	movff	postinc2,btemp+8
 17851  0130CE  006F FF78  F00A    	movff	postinc2,btemp+9
 17852  0130D4  006F FF78  F00B    	movff	postinc2,btemp+10
 17853  0130DA  006F FF78  F00C    	movff	postinc2,btemp+11
 17854  0130E0  5009               	movf	(btemp+8)^0,w,c
 17855  0130E2  6E11               	movwf	(btemp+16)^0,c
 17856  0130E4  500A               	movf	(btemp+9)^0,w,c
 17857  0130E6  6E12               	movwf	(btemp+17)^0,c
 17858  0130E8  500B               	movf	(btemp+10)^0,w,c
 17859  0130EA  6E13               	movwf	(btemp+18)^0,c
 17860  0130EC  500C               	movf	(btemp+11)^0,w,c
 17861  0130EE  6E14               	movwf	(btemp+19)^0,c
 17862  0130F0  D758               	goto	L16
 17863  0130F2                     l14135:
 17864                           
 17865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 17866                           ;stkvar	_fmt @ sp[(-32)+-4]
 17867  0130F2  0EDC               	movlw	-36
 17868  0130F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 17869  0130FA  0EDD               	movlw	-35
 17870  0130FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 17871  013102  006F FF7B FFF6     	movff	postinc2,tblptrl
 17872  013108  006F FF77 FFF7     	movff	postdec2,tblptrh
 17873  01310E                     	if	0	;tblptru may be non-zero
 17874  01310E                     	endif
 17875  01310E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17876  01310E  0E00               	movlw	low (__mediumconst shr (0+16))
 17877  013110  6EF8               	movwf	tblptru,c
 17878  013112                     	endif
 17879  013112  0008               	tblrd		*
 17880  013114  50F5               	movf	tablat,w,c
 17881  013116  0A78               	xorlw	120
 17882  013118  B4D8               	btfsc	status,2,c
 17883  01311A  D015               	goto	u13560
 17884                           
 17885                           ;stkvar	_fmt @ sp[(-32)+-4]
 17886  01311C  0EDC               	movlw	-36
 17887  01311E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17888  013124  0EDD               	movlw	-35
 17889  013126  006F FF8F FFDA     	movff	plusw1,fsr2h
 17890  01312C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17891  013132  006F FF77 FFF7     	movff	postdec2,tblptrh
 17892  013138                     	if	0	;tblptru may be non-zero
 17893  013138                     	endif
 17894  013138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17895  013138  0E00               	movlw	low (__mediumconst shr (0+16))
 17896  01313A  6EF8               	movwf	tblptru,c
 17897  01313C                     	endif
 17898  01313C  0008               	tblrd		*
 17899  01313E  50F5               	movf	tablat,w,c
 17900  013140  0A58               	xorlw	88
 17901  013142  A4D8               	btfss	status,2,c
 17902  013144  D094               	goto	l14149
 17903  013146                     u13560:
 17904                           
 17905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 17906                           ;stkvar	_fmt @ sp[(-32)+-4]
 17907  013146  0EDC               	movlw	-36
 17908  013148  006F FF8F FFD9     	movff	plusw1,fsr2l
 17909  01314E  0EDD               	movlw	-35
 17910  013150  006F FF8F FFDA     	movff	plusw1,fsr2h
 17911  013156  006F FF7B FFF6     	movff	postinc2,tblptrl
 17912  01315C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17913  013162                     	if	0	;tblptru may be non-zero
 17914  013162                     	endif
 17915  013162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17916  013162  0E00               	movlw	low (__mediumconst shr (0+16))
 17917  013164  6EF8               	movwf	tblptru,c
 17918  013166                     	endif
 17919                           
 17920                           ;stkvar	_c @ sp[(-32)+31]
 17921  013166  0008               	tblrd		*
 17922  013168  0EFF               	movlw	-1
 17923  01316A  006F FFD7 FFE3     	movff	tablat,plusw1
 17924                           
 17925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 17926                           ;stkvar	_fmt @ sp[(-32)+-4]
 17927  013170  0EDC               	movlw	-36
 17928  013172  006F FF8F FFD9     	movff	plusw1,fsr2l
 17929  013178  0EDD               	movlw	-35
 17930  01317A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17931  013180  2ADE               	incf	postinc2,f,c
 17932  013182  0E00               	movlw	0
 17933  013184  22DD               	addwfc	postdec2,f,c
 17934                           
 17935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 17936                           ;stkvar	_ap @ sp[(-32)+-6]
 17937  013186  0EDA               	movlw	-38
 17938  013188  006F FF8F FFD9     	movff	plusw1,fsr2l
 17939  01318E  0EDB               	movlw	-37
 17940  013190  006F FF8F FFDA     	movff	plusw1,fsr2h
 17941  013196  0E02               	movlw	2
 17942  013198  5EDE               	subwf	postinc2,f,c
 17943  01319A  0E00               	movlw	0
 17944  01319C  5ADD               	subwfb	postdec2,f,c
 17945  01319E  006F FF78  F00B    	movff	postinc2,btemp+10
 17946  0131A4  006F FF74  F00C    	movff	postdec2,btemp+11
 17947  0131AA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17948  0131B0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17949  0131B6  006F FF78  F00B    	movff	postinc2,btemp+10
 17950  0131BC  006F FF74  F00C    	movff	postdec2,btemp+11
 17951  0131C2  500B               	movf	(btemp+10)^0,w,c
 17952  0131C4  6E11               	movwf	(btemp+16)^0,c
 17953  0131C6  500C               	movf	(btemp+11)^0,w,c
 17954  0131C8  6E12               	movwf	(btemp+17)^0,c
 17955  0131CA  6A13               	clrf	(btemp+18)^0,c
 17956  0131CC  6A14               	clrf	(btemp+19)^0,c
 17957  0131CE  6A15               	clrf	(btemp+20)^0,c
 17958  0131D0  6A16               	clrf	(btemp+21)^0,c
 17959  0131D2  6A17               	clrf	(btemp+22)^0,c
 17960  0131D4  6A18               	clrf	(btemp+23)^0,c
 17961                           
 17962                           ;stkvar	_llu @ sp[(-32)+6]
 17963  0131D6  0EE6               	movlw	-26
 17964  0131D8  0060  F047  FFE3   	movff	btemp+16,plusw1
 17965  0131DE  0EE7               	movlw	-25
 17966  0131E0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17967  0131E6  0EE8               	movlw	-24
 17968  0131E8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17969  0131EE  0EE9               	movlw	-23
 17970  0131F0  0060  F053  FFE3   	movff	btemp+19,plusw1
 17971  0131F6  0EEA               	movlw	-22
 17972  0131F8  0060  F057  FFE3   	movff	btemp+20,plusw1
 17973  0131FE  0EEB               	movlw	-21
 17974  013200  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17975  013206  0EEC               	movlw	-20
 17976  013208  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17977  01320E  0EED               	movlw	-19
 17978  013210  0060  F063  FFE3   	movff	btemp+23,plusw1
 17979                           
 17980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 17981                           ;stkvar	_c @ sp[(-32)+31]
 17982  013216  0EFF               	movlw	-1
 17983  013218  50E3               	movf	plusw1,w,c
 17984  01321A  6EE6               	movwf	postinc1,c
 17985                           
 17986                           ;stkvar	_llu @ sp[(-33)+6]
 17987  01321C  50E1               	movf	fsr1l,w,c
 17988  01321E  0FE5               	addlw	-27
 17989  013220  6ED9               	movwf	fsr2l,c
 17990  013222  50E2               	movf	fsr1h,w,c
 17991  013224  6EDA               	movwf	fsr2h,c
 17992  013226  0EFF               	movlw	255
 17993  013228  22DA               	addwfc	fsr2h,f,c
 17994  01322A  006F FF7B FFE6     	movff	postinc2,postinc1
 17995  013230  006F FF7B FFE6     	movff	postinc2,postinc1
 17996  013236  006F FF7B FFE6     	movff	postinc2,postinc1
 17997  01323C  006F FF7B FFE6     	movff	postinc2,postinc1
 17998  013242  006F FF7B FFE6     	movff	postinc2,postinc1
 17999  013248  006F FF7B FFE6     	movff	postinc2,postinc1
 18000  01324E  006F FF7B FFE6     	movff	postinc2,postinc1
 18001  013254  006F FF7B FFE6     	movff	postinc2,postinc1
 18002                           
 18003                           ;stkvar	_fp @ sp[(-41)+-2]
 18004  01325A  0ED5               	movlw	-43
 18005  01325C  006F FF8F FFE6     	movff	plusw1,postinc1
 18006  013262  006F FF8F FFE6     	movff	plusw1,postinc1
 18007  013268  ECC6  F0B6         	call	_xtoa	;wreg free
 18008  01326C  D105               	goto	l2649
 18009  01326E                     l14149:
 18010                           
 18011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 18012  01326E  0E02               	movlw	2
 18013  013270  6EE6               	movwf	postinc1,c
 18014  013272  0E00               	movlw	0
 18015  013274  6EE6               	movwf	postinc1,c
 18016  013276  0EF6               	movlw	low STR_121
 18017  013278  6EE6               	movwf	postinc1,c
 18018  01327A  0EFF               	movlw	high STR_121
 18019  01327C  6EE6               	movwf	postinc1,c
 18020                           
 18021                           ;stkvar	_fmt @ sp[(-36)+-4]
 18022  01327E  0ED8               	movlw	-40
 18023  013280  006F FF8F FFD9     	movff	plusw1,fsr2l
 18024  013286  0ED9               	movlw	-39
 18025  013288  006F FF8F FFDA     	movff	plusw1,fsr2h
 18026  01328E  006F FF78  F00B    	movff	postinc2,btemp+10
 18027  013294  006F FF74  F00C    	movff	postdec2,btemp+11
 18028  01329A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18029  0132A0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18030  0132A6  EC99  F0C6         	call	_strncmp	;wreg free
 18031  0132AA  5001               	movf	btemp^0,w,c
 18032  0132AC  1002               	iorwf	(btemp+1)^0,w,c
 18033  0132AE  B4D8               	btfsc	status,2,c
 18034  0132B0  D022               	goto	u13580
 18035  0132B2  0E02               	movlw	2
 18036  0132B4  6EE6               	movwf	postinc1,c
 18037  0132B6  0E00               	movlw	0
 18038  0132B8  6EE6               	movwf	postinc1,c
 18039  0132BA  0EE7               	movlw	low STR_125
 18040  0132BC  6EE6               	movwf	postinc1,c
 18041  0132BE  0EFF               	movlw	high STR_125
 18042  0132C0  6EE6               	movwf	postinc1,c
 18043                           
 18044                           ;stkvar	_fmt @ sp[(-36)+-4]
 18045  0132C2  0ED8               	movlw	-40
 18046  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 18047  0132CA  0ED9               	movlw	-39
 18048  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 18049  0132D2  006F FF78  F00B    	movff	postinc2,btemp+10
 18050  0132D8  006F FF74  F00C    	movff	postdec2,btemp+11
 18051  0132DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18052  0132E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 18053  0132EA  EC99  F0C6         	call	_strncmp	;wreg free
 18054  0132EE  5001               	movf	btemp^0,w,c
 18055  0132F0  1002               	iorwf	(btemp+1)^0,w,c
 18056  0132F2  A4D8               	btfss	status,2,c
 18057  0132F4  D058               	goto	l14163
 18058  0132F6                     u13580:
 18059                           
 18060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 18061                           ;stkvar	_fmt @ sp[(-32)+-4]
 18062  0132F6  0EDC               	movlw	-36
 18063  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 18064  0132FE  0EDD               	movlw	-35
 18065  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 18066  013306  006F FF78  F00B    	movff	postinc2,btemp+10
 18067  01330C  006F FF74  F00C    	movff	postdec2,btemp+11
 18068  013312  0E01               	movlw	1
 18069  013314  260B               	addwf	(btemp+10)^0,f,c
 18070  013316  0E00               	movlw	0
 18071  013318  220C               	addwfc	(btemp+11)^0,f,c
 18072  01331A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18073  013320  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18074  013326                     	if	0	;tblptru may be non-zero
 18075  013326                     	endif
 18076  013326                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18077  013326  0E00               	movlw	low (__mediumconst shr (0+16))
 18078  013328  6EF8               	movwf	tblptru,c
 18079  01332A                     	endif
 18080                           
 18081                           ;stkvar	_c @ sp[(-32)+31]
 18082  01332A  0008               	tblrd		*
 18083  01332C  0EFF               	movlw	-1
 18084  01332E  006F FFD7 FFE3     	movff	tablat,plusw1
 18085                           
 18086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 18087                           ;stkvar	_fmt @ sp[(-32)+-4]
 18088  013334  0EDC               	movlw	-36
 18089  013336  006F FF8F FFD9     	movff	plusw1,fsr2l
 18090  01333C  0EDD               	movlw	-35
 18091  01333E  006F FF8F FFDA     	movff	plusw1,fsr2h
 18092  013344  0E02               	movlw	2
 18093  013346  26DE               	addwf	postinc2,f,c
 18094  013348  0E00               	movlw	0
 18095  01334A  22DD               	addwfc	postdec2,f,c
 18096                           
 18097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 18098                           ;stkvar	_ap @ sp[(-32)+-6]
 18099  01334C  0EDA               	movlw	-38
 18100  01334E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18101  013354  0EDB               	movlw	-37
 18102  013356  006F FF8F FFDA     	movff	plusw1,fsr2h
 18103  01335C  0E04               	movlw	4
 18104  01335E  5EDE               	subwf	postinc2,f,c
 18105  013360  0E00               	movlw	0
 18106  013362  5ADD               	subwfb	postdec2,f,c
 18107  013364  006F FF78  F00B    	movff	postinc2,btemp+10
 18108  01336A  006F FF74  F00C    	movff	postdec2,btemp+11
 18109  013370  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18110  013376  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18111  01337C  006F FF78  F009    	movff	postinc2,btemp+8
 18112  013382  006F FF78  F00A    	movff	postinc2,btemp+9
 18113  013388  006F FF78  F00B    	movff	postinc2,btemp+10
 18114  01338E  006F FF78  F00C    	movff	postinc2,btemp+11
 18115  013394  5009               	movf	(btemp+8)^0,w,c
 18116  013396  6E11               	movwf	(btemp+16)^0,c
 18117  013398  500A               	movf	(btemp+9)^0,w,c
 18118  01339A  6E12               	movwf	(btemp+17)^0,c
 18119  01339C  500B               	movf	(btemp+10)^0,w,c
 18120  01339E  6E13               	movwf	(btemp+18)^0,c
 18121  0133A0  500C               	movf	(btemp+11)^0,w,c
 18122  0133A2  6E14               	movwf	(btemp+19)^0,c
 18123  0133A4  D714               	goto	L17
 18124  0133A6                     l14163:
 18125                           
 18126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 18127                           ;stkvar	_fmt @ sp[(-32)+-4]
 18128  0133A6  0EDC               	movlw	-36
 18129  0133A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 18130  0133AE  0EDD               	movlw	-35
 18131  0133B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 18132  0133B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 18133  0133BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 18134  0133C2                     	if	0	;tblptru may be non-zero
 18135  0133C2                     	endif
 18136  0133C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18137  0133C2  0E00               	movlw	low (__mediumconst shr (0+16))
 18138  0133C4  6EF8               	movwf	tblptru,c
 18139  0133C6                     	endif
 18140  0133C6  0008               	tblrd		*
 18141  0133C8  50F5               	movf	tablat,w,c
 18142  0133CA  0A25               	xorlw	37
 18143  0133CC  A4D8               	btfss	status,2,c
 18144  0133CE  D01A               	goto	l14173
 18145                           
 18146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 18147                           ;stkvar	_fmt @ sp[(-32)+-4]
 18148  0133D0  0EDC               	movlw	-36
 18149  0133D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 18150  0133D8  0EDD               	movlw	-35
 18151  0133DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 18152  0133E0  2ADE               	incf	postinc2,f,c
 18153  0133E2  0E00               	movlw	0
 18154  0133E4  22DD               	addwfc	postdec2,f,c
 18155                           
 18156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 18157                           ;stkvar	_fp @ sp[(-32)+-2]
 18158  0133E6  0EDE               	movlw	-34
 18159  0133E8  006F FF8F FFE6     	movff	plusw1,postinc1
 18160  0133EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18161  0133F4  0E25               	movlw	37
 18162  0133F6  6EE6               	movwf	postinc1,c
 18163  0133F8  0E00               	movlw	0
 18164  0133FA  6EE6               	movwf	postinc1,c
 18165  0133FC  EC94  F0D4         	call	_fputc	;wreg free
 18166  013400                     l14169:
 18167                           
 18168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 18169  013400  0E01               	movlw	1
 18170  013402  D00C               	goto	L18
 18171  013404                     l14173:
 18172                           
 18173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 18174                           ;stkvar	_fmt @ sp[(-32)+-4]
 18175  013404  0EDC               	movlw	-36
 18176  013406  006F FF8F FFD9     	movff	plusw1,fsr2l
 18177  01340C  0EDD               	movlw	-35
 18178  01340E  006F FF8F FFDA     	movff	plusw1,fsr2h
 18179  013414  2ADE               	incf	postinc2,f,c
 18180  013416  0E00               	movlw	0
 18181  013418  22DD               	addwfc	postdec2,f,c
 18182                           
 18183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 18184  01341A  0E00               	movlw	0
 18185  01341C                     L18:
 18186  01341C  6E01               	movwf	btemp^0,c
 18187  01341E  0E00               	movlw	0
 18188  013420  6E02               	movwf	(btemp+1)^0,c
 18189  013422  D02A               	goto	l2649
 18190  013424                     l14179:
 18191                           
 18192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 18193                           ;stkvar	_fp @ sp[(-32)+-2]
 18194  013424  0EDE               	movlw	-34
 18195  013426  006F FF8F FFE6     	movff	plusw1,postinc1
 18196  01342C  006F FF8F FFE6     	movff	plusw1,postinc1
 18197                           
 18198                           ;stkvar	_fmt @ sp[(-34)+-4]
 18199  013432  0EDA               	movlw	-38
 18200  013434  006F FF8F FFD9     	movff	plusw1,fsr2l
 18201  01343A  0EDB               	movlw	-37
 18202  01343C  006F FF8F FFDA     	movff	plusw1,fsr2h
 18203  013442  006F FF7B FFF6     	movff	postinc2,tblptrl
 18204  013448  006F FF77 FFF7     	movff	postdec2,tblptrh
 18205  01344E                     	if	0	;tblptru may be non-zero
 18206  01344E                     	endif
 18207  01344E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18208  01344E  0E00               	movlw	low (__mediumconst shr (0+16))
 18209  013450  6EF8               	movwf	tblptru,c
 18210  013452                     	endif
 18211  013452  0008               	tblrd		*
 18212  013454  50F5               	movf	tablat,w,c
 18213  013456  6EE6               	movwf	postinc1,c
 18214  013458  0E00               	movlw	0
 18215  01345A  6EE6               	movwf	postinc1,c
 18216  01345C  EC94  F0D4         	call	_fputc	;wreg free
 18217                           
 18218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 18219                           ;stkvar	_fmt @ sp[(-32)+-4]
 18220  013460  0EDC               	movlw	-36
 18221  013462  006F FF8F FFD9     	movff	plusw1,fsr2l
 18222  013468  0EDD               	movlw	-35
 18223  01346A  006F FF8F FFDA     	movff	plusw1,fsr2h
 18224  013470  2ADE               	incf	postinc2,f,c
 18225  013472  0E00               	movlw	0
 18226  013474  22DD               	addwfc	postdec2,f,c
 18227  013476  D7C4               	goto	l14169
 18228  013478                     l2649:
 18229                           
 18230                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 18231  013478  0EDA               	movlw	218
 18232  01347A  26E1               	addwf	fsr1l,f,c
 18233  01347C  0EFF               	movlw	255
 18234  01347E  22E2               	addwfc	fsr1h,f,c
 18235  013480  0012               	return		;funcret
 18236  013482                     __end_of_vfpfcnvrt:
 18237                           	opt callstack 0
 18238                           
 18239 ;; *************** function _xtoa *****************
 18240 ;; Defined at:
 18241 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18242 ;; Parameters:    Size  Location     Type
 18243 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18244 ;;		 -> f(6), NULL(0), 
 18245 ;;  d               8  [STACK] unsigned long long 
 18246 ;;  x               1  [STACK] unsigned char 
 18247 ;; Auto vars:     Size  Location     Type
 18248 ;;  n               8  [STACK] unsigned long long 
 18249 ;;  c               2  [STACK] int 
 18250 ;;  i               2  [STACK] int 
 18251 ;;  w               2  [STACK] int 
 18252 ;;  p               2  [STACK] int 
 18253 ;; Return value:  Size  Location     Type
 18254 ;;                  2  [STACK] int 
 18255 ;; Registers used:
 18256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18257 ;; Tracked objects:
 18258 ;;		On entry : 0/0
 18259 ;;		On exit  : 0/0
 18260 ;;		Unchanged: 0/0
 18261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18266 ;;Total ram usage:        0 bytes
 18267 ;; Hardware stack levels used:    1
 18268 ;; Hardware stack levels required when called:   20
 18269 ;; This function calls:
 18270 ;;		_isalpha
 18271 ;;		_isupper
 18272 ;;		_pad
 18273 ;;		_toupper
 18274 ;; This function is called by:
 18275 ;;		_vfpfcnvrt
 18276 ;; This function uses a reentrant model
 18277 ;;
 18278                           
 18279                           	psect	text69
 18280  016D8C                     __ptext69:
 18281                           	opt callstack 0
 18282  016D8C                     _xtoa:
 18283                           	opt callstack 0
 18284                           
 18285                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18286  016D8C  0E14               	movlw	20
 18287  016D8E  26E1               	addwf	fsr1l,f,c
 18288  016D90  0E00               	movlw	0
 18289  016D92  22E2               	addwfc	fsr1h,f,c
 18290                           
 18291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 18292                           
 18293                           ;incstack = 0
 18294 ;; hardware stack exceeded
 18295  016D94  AE3D               	btfss	(_prec+1)^0,7,c
 18296                           
 18297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 18298  016D96  923E               	bcf	_flags^0,1,c
 18299                           
 18300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 18301  016D98  BE3D               	btfsc	(_prec+1)^0,7,c
 18302  016D9A  D005               	goto	u13120
 18303  016D9C  503D               	movf	(_prec+1)^0,w,c
 18304  016D9E  E110               	bnz	l13899
 18305  016DA0  043C               	decf	_prec^0,w,c
 18306  016DA2  B0D8               	btfsc	status,0,c
 18307  016DA4  D00D               	goto	l13899
 18308  016DA6                     u13120:
 18309  016DA6  0E01               	movlw	1
 18310  016DA8  6E0B               	movwf	(btemp+10)^0,c
 18311  016DAA  0E00               	movlw	0
 18312  016DAC  6E0C               	movwf	(btemp+11)^0,c
 18313                           
 18314                           ;stkvar	_p @ sp[(-20)+18]
 18315  016DAE  0EFE               	movlw	-2
 18316  016DB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18317  016DB6  0EFF               	movlw	-1
 18318  016DB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18319  016DBE  D008               	goto	l2599
 18320  016DC0                     l13899:
 18321                           
 18322                           ;stkvar	_p @ sp[(-20)+18]
 18323  016DC0  0EFE               	movlw	-2
 18324  016DC2  0060  F0F3  FFE3   	movff	_prec,plusw1
 18325  016DC8  0EFF               	movlw	-1
 18326  016DCA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18327  016DD0                     l2599:
 18328                           
 18329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 18330                           ;stkvar	_w @ sp[(-20)+16]
 18331  016DD0  0EFC               	movlw	-4
 18332  016DD2  0060  F0EB  FFE3   	movff	_width,plusw1
 18333  016DD8  0EFD               	movlw	-3
 18334  016DDA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18335                           
 18336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 18337  016DE0  A83E               	btfss	_flags^0,4,c
 18338  016DE2  D00B               	goto	l13905
 18339                           
 18340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 18341                           ;stkvar	_w @ sp[(-20)+16]
 18342  016DE4  50E1               	movf	fsr1l,w,c
 18343  016DE6  0FFC               	addlw	-4
 18344  016DE8  6ED9               	movwf	fsr2l,c
 18345  016DEA  50E2               	movf	fsr1h,w,c
 18346  016DEC  6EDA               	movwf	fsr2h,c
 18347  016DEE  0EFF               	movlw	255
 18348  016DF0  22DA               	addwfc	fsr2h,f,c
 18349  016DF2  0EFE               	movlw	254
 18350  016DF4  26DE               	addwf	postinc2,f,c
 18351  016DF6  0EFF               	movlw	255
 18352  016DF8  22DD               	addwfc	postdec2,f,c
 18353  016DFA                     l13905:
 18354                           
 18355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 18356                           ;stkvar	_d @ sp[(-20)+-10]
 18357  016DFA  0EE2               	movlw	226
 18358  016DFC  24E1               	addwf	fsr1l,w,c
 18359  016DFE  6ED9               	movwf	fsr2l,c
 18360  016E00  0EFF               	movlw	255
 18361  016E02  20E2               	addwfc	fsr1h,w,c
 18362  016E04  6EDA               	movwf	fsr2h,c
 18363                           
 18364                           ;stkvar	_n @ sp[(-20)+4]
 18365  016E06  0E08               	movlw	8
 18366  016E08  6E01               	movwf	btemp^0,c
 18367  016E0A  0EF0               	movlw	-16
 18368  016E0C                     us1314999:
 18369  016E0C  006F FF7B FFE3     	movff	postinc2,plusw1
 18370  016E12  28E8               	incf	wreg,w,c
 18371  016E14  2E01               	decfsz	btemp^0,f,c
 18372  016E16  D7FA               	bra	us1314999
 18373                           
 18374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 18375  016E18  0E4F               	movlw	79
 18376  016E1A  6E0B               	movwf	(btemp+10)^0,c
 18377  016E1C  0E00               	movlw	0
 18378  016E1E  6E0C               	movwf	(btemp+11)^0,c
 18379                           
 18380                           ;stkvar	_i @ sp[(-20)+14]
 18381  016E20  0EFA               	movlw	-6
 18382  016E22  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18383  016E28  0EFB               	movlw	-5
 18384  016E2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18385                           
 18386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 18387  016E30  0103               	movlb	3	; () banked
 18388  016E32  6BA3               	clrf	(_dbuf+79)& (0+255),b
 18389                           
 18390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18391  016E34  D0EE               	goto	l13943
 18392  016E36                     l13911:
 18393                           
 18394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 18395                           ;stkvar	_i @ sp[(-20)+14]
 18396  016E36  50E1               	movf	fsr1l,w,c
 18397  016E38  0FFA               	addlw	-6
 18398  016E3A  6ED9               	movwf	fsr2l,c
 18399  016E3C  50E2               	movf	fsr1h,w,c
 18400  016E3E  6EDA               	movwf	fsr2h,c
 18401  016E40  0EFF               	movlw	255
 18402  016E42  22DA               	addwfc	fsr2h,f,c
 18403  016E44  06DE               	decf	postinc2,f,c
 18404  016E46  0E00               	movlw	0
 18405  016E48  5ADD               	subwfb	postdec2,f,c
 18406                           
 18407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 18408                           ;stkvar	_n @ sp[(-20)+4]
 18409  016E4A  0EF0               	movlw	-16
 18410  016E4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18411  016E52  0EF1               	movlw	-15
 18412  016E54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18413  016E5A  0E0F               	movlw	15
 18414  016E5C  160B               	andwf	(btemp+10)^0,f,c
 18415  016E5E  0E00               	movlw	0
 18416  016E60  160C               	andwf	(btemp+11)^0,f,c
 18417                           
 18418                           ;stkvar	_c @ sp[(-20)+12]
 18419  016E62  0EF8               	movlw	-8
 18420  016E64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18421  016E6A  0EF9               	movlw	-7
 18422  016E6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18423                           
 18424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 18425                           ;stkvar	_c @ sp[(-20)+12]
 18426  016E72  0EF9               	movlw	-7
 18427  016E74  BEE3               	btfsc	plusw1,7,c
 18428  016E76  D00F               	goto	l13919
 18429  016E78  0EF9               	movlw	-7
 18430  016E7A  50E3               	movf	plusw1,w,c
 18431  016E7C  E108               	bnz	u13150
 18432  016E7E  0EF8               	movlw	-8
 18433  016E80  006F FF8C  F001    	movff	plusw1,btemp
 18434  016E86  0E0A               	movlw	10
 18435  016E88  5E01               	subwf	btemp^0,f,c
 18436  016E8A  A0D8               	btfss	status,0,c
 18437  016E8C  D004               	goto	l13919
 18438  016E8E                     u13150:
 18439                           
 18440                           ;stkvar	_c @ sp[(-20)+12]
 18441  016E8E  0EF8               	movlw	-8
 18442  016E90  50E3               	movf	plusw1,w,c
 18443  016E92  0F57               	addlw	87
 18444  016E94  D003               	goto	L19
 18445  016E96                     l13919:
 18446                           
 18447                           ;stkvar	_c @ sp[(-20)+12]
 18448  016E96  0EF8               	movlw	-8
 18449  016E98  50E3               	movf	plusw1,w,c
 18450  016E9A  0F30               	addlw	48
 18451  016E9C                     L19:
 18452  016E9C  6E0B               	movwf	(btemp+10)^0,c
 18453  016E9E  0EF9               	movlw	-7
 18454  016EA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18455  016EA6  0E00               	movlw	0
 18456  016EA8  220C               	addwfc	(btemp+11)^0,f,c
 18457                           
 18458                           ;stkvar	_c @ sp[(-20)+12]
 18459  016EAA  0EF8               	movlw	-8
 18460  016EAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18461  016EB2  0EF9               	movlw	-7
 18462  016EB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18463  016EBA  0EBF               	movlw	191
 18464  016EBC  6E0B               	movwf	(btemp+10)^0,c
 18465  016EBE  0EFF               	movlw	255
 18466  016EC0  6E0C               	movwf	(btemp+11)^0,c
 18467                           
 18468                           ;stkvar	_x @ sp[(-20)+-11]
 18469  016EC2  0EE1               	movlw	-31
 18470  016EC4  50E3               	movf	plusw1,w,c
 18471  016EC6  6E09               	movwf	(btemp+8)^0,c
 18472  016EC8  6A0A               	clrf	(btemp+9)^0,c
 18473  016ECA  500B               	movf	(btemp+10)^0,w,c
 18474  016ECC  2609               	addwf	(btemp+8)^0,f,c
 18475  016ECE  500C               	movf	(btemp+11)^0,w,c
 18476  016ED0  220A               	addwfc	(btemp+9)^0,f,c
 18477  016ED2  500A               	movf	(btemp+9)^0,w,c
 18478  016ED4  E106               	bnz	u13160
 18479  016ED6  0E1A               	movlw	26
 18480  016ED8  5C09               	subwf	(btemp+8)^0,w,c
 18481  016EDA  B0D8               	btfsc	status,0,c
 18482  016EDC  D002               	goto	u13160
 18483  016EDE  0E01               	movlw	1
 18484  016EE0  D001               	goto	u13170
 18485  016EE2                     u13160:
 18486  016EE2  0E00               	movlw	0
 18487  016EE4                     u13170:
 18488  016EE4  6E0B               	movwf	(btemp+10)^0,c
 18489  016EE6  6A0C               	clrf	(btemp+11)^0,c
 18490                           
 18491                           ;stkvar	_xtoa$6823 @ sp[(-20)+2]
 18492  016EE8  0EEE               	movlw	-18
 18493  016EEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18494  016EF0  0EEF               	movlw	-17
 18495  016EF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18496                           
 18497                           ;stkvar	_xtoa$6823 @ sp[(-20)+2]
 18498  016EF8  0EEE               	movlw	-18
 18499  016EFA  006F FF8C  F001    	movff	plusw1,btemp
 18500  016F00  0EEF               	movlw	-17
 18501  016F02  50E3               	movf	plusw1,w,c
 18502  016F04  1001               	iorwf	btemp^0,w,c
 18503  016F06  B4D8               	btfsc	status,2,c
 18504  016F08  D041               	goto	l13935
 18505  016F0A  0E9F               	movlw	159
 18506  016F0C  6E0B               	movwf	(btemp+10)^0,c
 18507  016F0E  0EFF               	movlw	255
 18508  016F10  6E0C               	movwf	(btemp+11)^0,c
 18509                           
 18510                           ;stkvar	_c @ sp[(-20)+12]
 18511  016F12  0EF8               	movlw	-8
 18512  016F14  006F FF8C  F009    	movff	plusw1,btemp+8
 18513  016F1A  0EF9               	movlw	-7
 18514  016F1C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18515  016F22  0E20               	movlw	32
 18516  016F24  1209               	iorwf	(btemp+8)^0,f,c
 18517  016F26  0E00               	movlw	0
 18518  016F28  120A               	iorwf	(btemp+9)^0,f,c
 18519  016F2A  500B               	movf	(btemp+10)^0,w,c
 18520  016F2C  2609               	addwf	(btemp+8)^0,f,c
 18521  016F2E  500C               	movf	(btemp+11)^0,w,c
 18522  016F30  220A               	addwfc	(btemp+9)^0,f,c
 18523  016F32  500A               	movf	(btemp+9)^0,w,c
 18524  016F34  E106               	bnz	u13190
 18525  016F36  0E1A               	movlw	26
 18526  016F38  5C09               	subwf	(btemp+8)^0,w,c
 18527  016F3A  B0D8               	btfsc	status,0,c
 18528  016F3C  D002               	goto	u13190
 18529  016F3E  0E01               	movlw	1
 18530  016F40  D001               	goto	u13200
 18531  016F42                     u13190:
 18532  016F42  0E00               	movlw	0
 18533  016F44                     u13200:
 18534  016F44  6E0B               	movwf	(btemp+10)^0,c
 18535  016F46  6A0C               	clrf	(btemp+11)^0,c
 18536                           
 18537                           ;stkvar	_xtoa$6824 @ sp[(-20)+0]
 18538  016F48  0EEC               	movlw	-20
 18539  016F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18540  016F50  0EED               	movlw	-19
 18541  016F52  0060  F033  FFE3   	movff	btemp+11,plusw1
 18542                           
 18543                           ;stkvar	_xtoa$6824 @ sp[(-20)+0]
 18544  016F58  0EEC               	movlw	-20
 18545  016F5A  006F FF8C  F001    	movff	plusw1,btemp
 18546  016F60  0EED               	movlw	-19
 18547  016F62  50E3               	movf	plusw1,w,c
 18548  016F64  1001               	iorwf	btemp^0,w,c
 18549  016F66  B4D8               	btfsc	status,2,c
 18550  016F68  D011               	goto	l13935
 18551                           
 18552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 18553                           ;stkvar	_c @ sp[(-20)+12]
 18554  016F6A  0EF8               	movlw	-8
 18555  016F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 18556  016F72  006F FF8F FFE6     	movff	plusw1,postinc1
 18557  016F78  ECBD  F0E1         	call	_toupper	;wreg free
 18558                           
 18559                           ;stkvar	_c @ sp[(-20)+12]
 18560  016F7C  0EF8               	movlw	-8
 18561  016F7E  0060  F007  FFE3   	movff	btemp,plusw1
 18562  016F84  0EF9               	movlw	-7
 18563  016F86  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18564  016F8C                     l13935:
 18565                           
 18566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 18567                           ;stkvar	_c @ sp[(-20)+12]
 18568                           ;stkvar	_i @ sp[(-20)+14]
 18569  016F8C  0EFA               	movlw	-6
 18570  016F8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18571  016F94  0EFB               	movlw	-5
 18572  016F96  006F FF8C  F00C    	movff	plusw1,btemp+11
 18573  016F9C  0E54               	movlw	low _dbuf
 18574  016F9E  240B               	addwf	(btemp+10)^0,w,c
 18575  016FA0  6ED9               	movwf	fsr2l,c
 18576  016FA2  0E03               	movlw	high _dbuf
 18577  016FA4  200C               	addwfc	(btemp+11)^0,w,c
 18578  016FA6  6EDA               	movwf	fsr2h,c
 18579  016FA8  0EF8               	movlw	-8
 18580  016FAA  006F FF8F FFDF     	movff	plusw1,indf2
 18581                           
 18582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 18583                           ;stkvar	_p @ sp[(-20)+18]
 18584  016FB0  50E1               	movf	fsr1l,w,c
 18585  016FB2  0FFE               	addlw	-2
 18586  016FB4  6ED9               	movwf	fsr2l,c
 18587  016FB6  50E2               	movf	fsr1h,w,c
 18588  016FB8  6EDA               	movwf	fsr2h,c
 18589  016FBA  0EFF               	movlw	255
 18590  016FBC  22DA               	addwfc	fsr2h,f,c
 18591  016FBE  06DE               	decf	postinc2,f,c
 18592  016FC0  0E00               	movlw	0
 18593  016FC2  5ADD               	subwfb	postdec2,f,c
 18594                           
 18595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 18596                           ;stkvar	_w @ sp[(-20)+16]
 18597  016FC4  50E1               	movf	fsr1l,w,c
 18598  016FC6  0FFC               	addlw	-4
 18599  016FC8  6ED9               	movwf	fsr2l,c
 18600  016FCA  50E2               	movf	fsr1h,w,c
 18601  016FCC  6EDA               	movwf	fsr2h,c
 18602  016FCE  0EFF               	movlw	255
 18603  016FD0  22DA               	addwfc	fsr2h,f,c
 18604  016FD2  06DE               	decf	postinc2,f,c
 18605  016FD4  0E00               	movlw	0
 18606  016FD6  5ADD               	subwfb	postdec2,f,c
 18607                           
 18608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 18609  016FD8  0E04               	movlw	4
 18610  016FDA  6E0C               	movwf	(btemp+11)^0,c
 18611                           
 18612                           ;stkvar	_n @ sp[(-20)+4]
 18613  016FDC  50E1               	movf	fsr1l,w,c
 18614  016FDE  0FF0               	addlw	-16
 18615  016FE0  6ED9               	movwf	fsr2l,c
 18616  016FE2  50E2               	movf	fsr1h,w,c
 18617  016FE4  6EDA               	movwf	fsr2h,c
 18618  016FE6  0EFF               	movlw	255
 18619  016FE8  22DA               	addwfc	fsr2h,f,c
 18620  016FEA  280C               	incf	(btemp+11)^0,w,c
 18621  016FEC  52DE               	movf	postinc2,f,c
 18622  016FEE  D00F               	goto	u13220
 18623  016FF0                     u13225:
 18624  016FF0  52DE               	movf	postinc2,f,c
 18625  016FF2  52DE               	movf	postinc2,f,c
 18626  016FF4  52DE               	movf	postinc2,f,c
 18627  016FF6  52DE               	movf	postinc2,f,c
 18628  016FF8  52DE               	movf	postinc2,f,c
 18629  016FFA  52DE               	movf	postinc2,f,c
 18630  016FFC  90D8               	bcf	status,0,c
 18631  016FFE  32DD               	rrcf	postdec2,f,c
 18632  017000  32DD               	rrcf	postdec2,f,c
 18633  017002  32DD               	rrcf	postdec2,f,c
 18634  017004  32DD               	rrcf	postdec2,f,c
 18635  017006  32DD               	rrcf	postdec2,f,c
 18636  017008  32DD               	rrcf	postdec2,f,c
 18637  01700A  32DD               	rrcf	postdec2,f,c
 18638  01700C  32DE               	rrcf	postinc2,f,c
 18639  01700E                     u13220:
 18640  01700E  2EE8               	decfsz	wreg,f,c
 18641  017010  D7EF               	goto	u13225
 18642  017012                     l13943:
 18643                           
 18644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18645                           ;stkvar	_i @ sp[(-20)+14]
 18646  017012  0EFB               	movlw	-5
 18647  017014  BEE3               	btfsc	plusw1,7,c
 18648  017016  D03A               	goto	u13270
 18649  017018  0EFB               	movlw	-5
 18650  01701A  50E3               	movf	plusw1,w,c
 18651  01701C  E108               	bnz	u13230
 18652  01701E  0EFA               	movlw	-6
 18653  017020  006F FF8C  F001    	movff	plusw1,btemp
 18654  017026  0E02               	movlw	2
 18655  017028  5E01               	subwf	btemp^0,f,c
 18656  01702A  A0D8               	btfss	status,0,c
 18657  01702C  D02F               	goto	u13270
 18658  01702E                     u13230:
 18659                           
 18660                           ;stkvar	_n @ sp[(-20)+4]
 18661  01702E  0EF0               	movlw	-16
 18662  017030  50E3               	movf	plusw1,w,c
 18663  017032  E115               	bnz	u13241
 18664  017034  0EF1               	movlw	-15
 18665  017036  50E3               	movf	plusw1,w,c
 18666  017038  E112               	bnz	u13241
 18667  01703A  0EF2               	movlw	-14
 18668  01703C  50E3               	movf	plusw1,w,c
 18669  01703E  E10F               	bnz	u13241
 18670  017040  0EF3               	movlw	-13
 18671  017042  50E3               	movf	plusw1,w,c
 18672  017044  E10C               	bnz	u13241
 18673  017046  0EF4               	movlw	-12
 18674  017048  50E3               	movf	plusw1,w,c
 18675  01704A  E109               	bnz	u13241
 18676  01704C  0EF5               	movlw	-11
 18677  01704E  50E3               	movf	plusw1,w,c
 18678  017050  E106               	bnz	u13241
 18679  017052  0EF6               	movlw	-10
 18680  017054  50E3               	movf	plusw1,w,c
 18681  017056  E103               	bnz	u13241
 18682  017058  0EF7               	movlw	-9
 18683  01705A  50E3               	movf	plusw1,w,c
 18684  01705C  A4D8               	btfss	status,2,c
 18685  01705E                     u13241:
 18686  01705E  D6EB               	goto	l13911
 18687                           
 18688                           ;stkvar	_p @ sp[(-20)+18]
 18689  017060  0EFF               	movlw	-1
 18690  017062  BEE3               	btfsc	plusw1,7,c
 18691  017064  D007               	goto	u13250
 18692  017066  0EFF               	movlw	-1
 18693  017068  50E3               	movf	plusw1,w,c
 18694  01706A  E103               	bnz	u13251
 18695  01706C  0EFE               	movlw	-2
 18696  01706E  04E3               	decf	plusw1,w,c
 18697  017070  B0D8               	btfsc	status,0,c
 18698  017072                     u13251:
 18699  017072  D6E1               	goto	l13911
 18700  017074                     u13250:
 18701                           
 18702                           ;stkvar	_w @ sp[(-20)+16]
 18703  017074  0EFD               	movlw	-3
 18704  017076  BEE3               	btfsc	plusw1,7,c
 18705  017078  D009               	goto	u13270
 18706  01707A  0EFD               	movlw	-3
 18707  01707C  50E3               	movf	plusw1,w,c
 18708  01707E  E104               	bnz	u13260
 18709  017080  0EFC               	movlw	-4
 18710  017082  04E3               	decf	plusw1,w,c
 18711  017084  A0D8               	btfss	status,0,c
 18712  017086  D002               	goto	u13270
 18713  017088                     u13260:
 18714  017088  B23E               	btfsc	_flags^0,1,c
 18715  01708A  D6D5               	goto	l13911
 18716  01708C                     u13270:
 18717                           
 18718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 18719  01708C  A83E               	btfss	_flags^0,4,c
 18720  01708E  D036               	goto	l13959
 18721                           
 18722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 18723                           ;stkvar	_i @ sp[(-20)+14]
 18724  017090  50E1               	movf	fsr1l,w,c
 18725  017092  0FFA               	addlw	-6
 18726  017094  6ED9               	movwf	fsr2l,c
 18727  017096  50E2               	movf	fsr1h,w,c
 18728  017098  6EDA               	movwf	fsr2h,c
 18729  01709A  0EFF               	movlw	255
 18730  01709C  22DA               	addwfc	fsr2h,f,c
 18731  01709E  06DE               	decf	postinc2,f,c
 18732  0170A0  0E00               	movlw	0
 18733  0170A2  5ADD               	subwfb	postdec2,f,c
 18734                           
 18735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 18736                           ;stkvar	_x @ sp[(-20)+-11]
 18737                           ;stkvar	_i @ sp[(-20)+14]
 18738  0170A4  0EFA               	movlw	-6
 18739  0170A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18740  0170AC  0EFB               	movlw	-5
 18741  0170AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18742  0170B4  0E54               	movlw	low _dbuf
 18743  0170B6  240B               	addwf	(btemp+10)^0,w,c
 18744  0170B8  6ED9               	movwf	fsr2l,c
 18745  0170BA  0E03               	movlw	high _dbuf
 18746  0170BC  200C               	addwfc	(btemp+11)^0,w,c
 18747  0170BE  6EDA               	movwf	fsr2h,c
 18748  0170C0  0EE1               	movlw	-31
 18749  0170C2  006F FF8F FFDF     	movff	plusw1,indf2
 18750                           
 18751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 18752                           ;stkvar	_i @ sp[(-20)+14]
 18753  0170C8  50E1               	movf	fsr1l,w,c
 18754  0170CA  0FFA               	addlw	-6
 18755  0170CC  6ED9               	movwf	fsr2l,c
 18756  0170CE  50E2               	movf	fsr1h,w,c
 18757  0170D0  6EDA               	movwf	fsr2h,c
 18758  0170D2  0EFF               	movlw	255
 18759  0170D4  22DA               	addwfc	fsr2h,f,c
 18760  0170D6  06DE               	decf	postinc2,f,c
 18761  0170D8  0E00               	movlw	0
 18762  0170DA  5ADD               	subwfb	postdec2,f,c
 18763                           
 18764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 18765                           ;stkvar	_i @ sp[(-20)+14]
 18766  0170DC  0EFA               	movlw	-6
 18767  0170DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18768  0170E4  0EFB               	movlw	-5
 18769  0170E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18770  0170EC  0E54               	movlw	low _dbuf
 18771  0170EE  240B               	addwf	(btemp+10)^0,w,c
 18772  0170F0  6ED9               	movwf	fsr2l,c
 18773  0170F2  0E03               	movlw	high _dbuf
 18774  0170F4  200C               	addwfc	(btemp+11)^0,w,c
 18775  0170F6  6EDA               	movwf	fsr2h,c
 18776  0170F8  0E30               	movlw	48
 18777  0170FA  6EDF               	movwf	indf2,c
 18778  0170FC                     l13959:
 18779                           
 18780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 18781                           ;stkvar	_w @ sp[(-20)+16]
 18782  0170FC  0EFC               	movlw	-4
 18783  0170FE  006F FF8F FFE6     	movff	plusw1,postinc1
 18784  017104  006F FF8F FFE6     	movff	plusw1,postinc1
 18785                           
 18786                           ;stkvar	_i @ sp[(-22)+14]
 18787  01710A  0E54               	movlw	low _dbuf
 18788  01710C  6E0B               	movwf	(btemp+10)^0,c
 18789  01710E  0E03               	movlw	high _dbuf
 18790  017110  6E0C               	movwf	(btemp+11)^0,c
 18791  017112  0EF8               	movlw	-8
 18792  017114  50E3               	movf	plusw1,w,c
 18793  017116  260B               	addwf	(btemp+10)^0,f,c
 18794  017118  0EF9               	movlw	-7
 18795  01711A  50E3               	movf	plusw1,w,c
 18796  01711C  220C               	addwfc	(btemp+11)^0,f,c
 18797  01711E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18798  017124  0060  F033  FFE6   	movff	btemp+11,postinc1
 18799                           
 18800                           ;stkvar	_fp @ sp[(-24)+-2]
 18801  01712A  0EE6               	movlw	-26
 18802  01712C  006F FF8F FFE6     	movff	plusw1,postinc1
 18803  017132  006F FF8F FFE6     	movff	plusw1,postinc1
 18804  017138  ECCF  F0D6         	call	_pad	;wreg free
 18805                           
 18806                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 18807  01713C  0EE1               	movlw	225
 18808  01713E  26E1               	addwf	fsr1l,f,c
 18809  017140  0EFF               	movlw	255
 18810  017142  22E2               	addwfc	fsr1h,f,c
 18811  017144  0012               	return		;funcret
 18812  017146                     __end_of_xtoa:
 18813                           	opt callstack 0
 18814                           
 18815 ;; *************** function _toupper *****************
 18816 ;; Defined at:
 18817 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 18818 ;; Parameters:    Size  Location     Type
 18819 ;;  c               2  [STACK] int 
 18820 ;; Auto vars:     Size  Location     Type
 18821 ;;		None
 18822 ;; Return value:  Size  Location     Type
 18823 ;;                  2  [STACK] int 
 18824 ;; Registers used:
 18825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18826 ;; Tracked objects:
 18827 ;;		On entry : 0/3
 18828 ;;		On exit  : 0/0
 18829 ;;		Unchanged: 0/0
 18830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18835 ;;Total ram usage:        0 bytes
 18836 ;; Hardware stack levels used:    1
 18837 ;; Hardware stack levels required when called:   16
 18838 ;; This function calls:
 18839 ;;		_islower
 18840 ;; This function is called by:
 18841 ;;		_xtoa
 18842 ;; This function uses a reentrant model
 18843 ;;
 18844                           
 18845                           	psect	text70
 18846  01C37A                     __ptext70:
 18847                           	opt callstack 0
 18848  01C37A                     _toupper:
 18849                           	opt callstack 0
 18850                           
 18851                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18852  01C37A  52E6               	movf	postinc1,f,c
 18853  01C37C  52E6               	movf	postinc1,f,c
 18854                           
 18855                           ;stkvar	_c @ sp[(-2)+-2]
 18856                           
 18857                           ;incstack = 0
 18858 ;; hardware stack exceeded
 18859  01C37E  0EFC               	movlw	-4
 18860  01C380  50E3               	movf	plusw1,w,c
 18861  01C382  0F9F               	addlw	159
 18862  01C384  6E0B               	movwf	(btemp+10)^0,c
 18863  01C386  0EFD               	movlw	-3
 18864  01C388  006F FF8C  F00C    	movff	plusw1,btemp+11
 18865  01C38E  0EFF               	movlw	255
 18866  01C390  220C               	addwfc	(btemp+11)^0,f,c
 18867  01C392  500C               	movf	(btemp+11)^0,w,c
 18868  01C394  E106               	bnz	u6900
 18869  01C396  0E1A               	movlw	26
 18870  01C398  5C0B               	subwf	(btemp+10)^0,w,c
 18871  01C39A  B0D8               	btfsc	status,0,c
 18872  01C39C  D002               	goto	u6900
 18873  01C39E  0E01               	movlw	1
 18874  01C3A0  D001               	goto	u6910
 18875  01C3A2                     u6900:
 18876  01C3A2  0E00               	movlw	0
 18877  01C3A4                     u6910:
 18878  01C3A4  6E0B               	movwf	(btemp+10)^0,c
 18879  01C3A6  6A0C               	clrf	(btemp+11)^0,c
 18880                           
 18881                           ;stkvar	_toupper$7630 @ sp[(-2)+0]
 18882  01C3A8  0EFE               	movlw	-2
 18883  01C3AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18884  01C3B0  0EFF               	movlw	-1
 18885  01C3B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18886                           
 18887                           ;stkvar	_toupper$7630 @ sp[(-2)+0]
 18888  01C3B8  0EFE               	movlw	-2
 18889  01C3BA  006F FF8C  F001    	movff	plusw1,btemp
 18890  01C3C0  0EFF               	movlw	-1
 18891  01C3C2  50E3               	movf	plusw1,w,c
 18892  01C3C4  1001               	iorwf	btemp^0,w,c
 18893  01C3C6  B4D8               	btfsc	status,2,c
 18894  01C3C8  D00D               	goto	l8993
 18895                           
 18896                           ;stkvar	_c @ sp[(-2)+-2]
 18897  01C3CA  0EFC               	movlw	-4
 18898  01C3CC  006F FF8C  F001    	movff	plusw1,btemp
 18899  01C3D2  0EFD               	movlw	-3
 18900  01C3D4  006F FF8C  F002    	movff	plusw1,btemp+1
 18901  01C3DA  0E5F               	movlw	95
 18902  01C3DC  1601               	andwf	btemp^0,f,c
 18903  01C3DE  0E00               	movlw	0
 18904  01C3E0  1602               	andwf	(btemp+1)^0,f,c
 18905  01C3E2  D008               	goto	l3766
 18906  01C3E4                     l8993:
 18907                           
 18908                           ;stkvar	_c @ sp[(-2)+-2]
 18909  01C3E4  0EFC               	movlw	-4
 18910  01C3E6  006F FF8C  F001    	movff	plusw1,btemp
 18911  01C3EC  0EFD               	movlw	-3
 18912  01C3EE  006F FF8C  F002    	movff	plusw1,btemp+1
 18913  01C3F4                     l3766:
 18914                           
 18915                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18916  01C3F4  52E5               	movf	postdec1,f,c
 18917  01C3F6  52E5               	movf	postdec1,f,c
 18918  01C3F8  52E5               	movf	postdec1,f,c
 18919  01C3FA  52E5               	movf	postdec1,f,c
 18920  01C3FC  0012               	return		;funcret
 18921  01C3FE                     __end_of_toupper:
 18922                           	opt callstack 0
 18923                           
 18924 ;; *************** function _islower *****************
 18925 ;; Defined at:
 18926 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 18927 ;; Parameters:    Size  Location     Type
 18928 ;;  c               2  [STACK] int 
 18929 ;; Auto vars:     Size  Location     Type
 18930 ;;		None
 18931 ;; Return value:  Size  Location     Type
 18932 ;;                  2  [STACK] int 
 18933 ;; Registers used:
 18934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18935 ;; Tracked objects:
 18936 ;;		On entry : 0/0
 18937 ;;		On exit  : 0/0
 18938 ;;		Unchanged: 0/0
 18939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18944 ;;Total ram usage:        0 bytes
 18945 ;; Hardware stack levels used:    1
 18946 ;; Hardware stack levels required when called:   15
 18947 ;; This function calls:
 18948 ;;		Nothing
 18949 ;; This function is called by:
 18950 ;;		_toupper
 18951 ;; This function uses a reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text71
 18955  01D3EC                     __ptext71:
 18956                           	opt callstack 0
 18957  01D3EC                     _islower:
 18958                           	opt callstack 0
 18959                           
 18960                           ;stkvar	_c @ sp[(0)+-2]
 18961                           
 18962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18963                           ;incstack = 0
 18964 ;; hardware stack exceeded
 18965  01D3EC  0EFE               	movlw	-2
 18966  01D3EE  50E3               	movf	plusw1,w,c
 18967  01D3F0  0F9F               	addlw	159
 18968  01D3F2  6E0B               	movwf	(btemp+10)^0,c
 18969  01D3F4  0EFF               	movlw	-1
 18970  01D3F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18971  01D3FC  0EFF               	movlw	255
 18972  01D3FE  220C               	addwfc	(btemp+11)^0,f,c
 18973  01D400  500C               	movf	(btemp+11)^0,w,c
 18974  01D402  E106               	bnz	u6540
 18975  01D404  0E1A               	movlw	26
 18976  01D406  5C0B               	subwf	(btemp+10)^0,w,c
 18977  01D408  B0D8               	btfsc	status,0,c
 18978  01D40A  D002               	goto	u6540
 18979  01D40C  0E01               	movlw	1
 18980  01D40E  D001               	goto	u6550
 18981  01D410                     u6540:
 18982  01D410  0E00               	movlw	0
 18983  01D412                     u6550:
 18984  01D412  6E01               	movwf	btemp^0,c
 18985  01D414  6A02               	clrf	(btemp+1)^0,c
 18986                           
 18987                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18988  01D416  52E5               	movf	postdec1,f,c
 18989  01D418  52E5               	movf	postdec1,f,c
 18990  01D41A  0012               	return		;funcret
 18991  01D41C                     __end_of_islower:
 18992                           	opt callstack 0
 18993                           
 18994 ;; *************** function _isalpha *****************
 18995 ;; Defined at:
 18996 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 18997 ;; Parameters:    Size  Location     Type
 18998 ;;  c               2  [STACK] int 
 18999 ;; Auto vars:     Size  Location     Type
 19000 ;;		None
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  2  [STACK] int 
 19003 ;; Registers used:
 19004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 19005 ;; Tracked objects:
 19006 ;;		On entry : 0/0
 19007 ;;		On exit  : 0/0
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19014 ;;Total ram usage:        0 bytes
 19015 ;; Hardware stack levels used:    1
 19016 ;; Hardware stack levels required when called:   15
 19017 ;; This function calls:
 19018 ;;		Nothing
 19019 ;; This function is called by:
 19020 ;;		_xtoa
 19021 ;; This function uses a reentrant model
 19022 ;;
 19023                           
 19024                           	psect	text72
 19025  01CF60                     __ptext72:
 19026                           	opt callstack 0
 19027  01CF60                     _isalpha:
 19028                           	opt callstack 0
 19029                           
 19030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19031                           ;incstack = 0
 19032 ;; hardware stack exceeded
 19033  01CF60  0E9F               	movlw	159
 19034  01CF62  6E0B               	movwf	(btemp+10)^0,c
 19035  01CF64  0EFF               	movlw	255
 19036  01CF66  6E0C               	movwf	(btemp+11)^0,c
 19037                           
 19038                           ;stkvar	_c @ sp[(0)+-2]
 19039  01CF68  0EFE               	movlw	-2
 19040  01CF6A  006F FF8C  F009    	movff	plusw1,btemp+8
 19041  01CF70  0EFF               	movlw	-1
 19042  01CF72  006F FF8C  F00A    	movff	plusw1,btemp+9
 19043  01CF78  0E20               	movlw	32
 19044  01CF7A  1209               	iorwf	(btemp+8)^0,f,c
 19045  01CF7C  0E00               	movlw	0
 19046  01CF7E  120A               	iorwf	(btemp+9)^0,f,c
 19047  01CF80  500B               	movf	(btemp+10)^0,w,c
 19048  01CF82  2609               	addwf	(btemp+8)^0,f,c
 19049  01CF84  500C               	movf	(btemp+11)^0,w,c
 19050  01CF86  220A               	addwfc	(btemp+9)^0,f,c
 19051  01CF88  500A               	movf	(btemp+9)^0,w,c
 19052  01CF8A  E106               	bnz	u6880
 19053  01CF8C  0E1A               	movlw	26
 19054  01CF8E  5C09               	subwf	(btemp+8)^0,w,c
 19055  01CF90  B0D8               	btfsc	status,0,c
 19056  01CF92  D002               	goto	u6880
 19057  01CF94  0E01               	movlw	1
 19058  01CF96  D001               	goto	u6890
 19059  01CF98                     u6880:
 19060  01CF98  0E00               	movlw	0
 19061  01CF9A                     u6890:
 19062  01CF9A  6E01               	movwf	btemp^0,c
 19063  01CF9C  6A02               	clrf	(btemp+1)^0,c
 19064                           
 19065                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19066  01CF9E  52E5               	movf	postdec1,f,c
 19067  01CFA0  52E5               	movf	postdec1,f,c
 19068  01CFA2  0012               	return		;funcret
 19069  01CFA4                     __end_of_isalpha:
 19070                           	opt callstack 0
 19071                           
 19072 ;; *************** function _utoa *****************
 19073 ;; Defined at:
 19074 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19075 ;; Parameters:    Size  Location     Type
 19076 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19077 ;;		 -> f(6), NULL(0), 
 19078 ;;  d               8  [STACK] unsigned long long 
 19079 ;; Auto vars:     Size  Location     Type
 19080 ;;  n               8  [STACK] unsigned long long 
 19081 ;;  i               2  [STACK] int 
 19082 ;;  w               2  [STACK] int 
 19083 ;;  p               2  [STACK] int 
 19084 ;; Return value:  Size  Location     Type
 19085 ;;                  2  [STACK] int 
 19086 ;; Registers used:
 19087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19088 ;; Tracked objects:
 19089 ;;		On entry : 0/0
 19090 ;;		On exit  : 0/0
 19091 ;;		Unchanged: 0/0
 19092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19097 ;;Total ram usage:        0 bytes
 19098 ;; Hardware stack levels used:    1
 19099 ;; Hardware stack levels required when called:   20
 19100 ;; This function calls:
 19101 ;;		___lodiv
 19102 ;;		___lomod
 19103 ;;		_pad
 19104 ;; This function is called by:
 19105 ;;		_vfpfcnvrt
 19106 ;; This function uses a reentrant model
 19107 ;;
 19108                           
 19109                           	psect	text73
 19110  0177F6                     __ptext73:
 19111                           	opt callstack 0
 19112  0177F6                     _utoa:
 19113                           	opt callstack 0
 19114                           
 19115                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19116  0177F6  0E0E               	movlw	14
 19117  0177F8  26E1               	addwf	fsr1l,f,c
 19118  0177FA  0E00               	movlw	0
 19119  0177FC  22E2               	addwfc	fsr1h,f,c
 19120                           
 19121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 19122                           
 19123                           ;incstack = 0
 19124 ;; hardware stack exceeded
 19125  0177FE  AE3D               	btfss	(_prec+1)^0,7,c
 19126                           
 19127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 19128  017800  923E               	bcf	_flags^0,1,c
 19129                           
 19130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 19131  017802  BE3D               	btfsc	(_prec+1)^0,7,c
 19132  017804  D005               	goto	u13040
 19133  017806  503D               	movf	(_prec+1)^0,w,c
 19134  017808  E110               	bnz	l13859
 19135  01780A  043C               	decf	_prec^0,w,c
 19136  01780C  B0D8               	btfsc	status,0,c
 19137  01780E  D00D               	goto	l13859
 19138  017810                     u13040:
 19139  017810  0E01               	movlw	1
 19140  017812  6E0B               	movwf	(btemp+10)^0,c
 19141  017814  0E00               	movlw	0
 19142  017816  6E0C               	movwf	(btemp+11)^0,c
 19143                           
 19144                           ;stkvar	_p @ sp[(-14)+12]
 19145  017818  0EFE               	movlw	-2
 19146  01781A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19147  017820  0EFF               	movlw	-1
 19148  017822  0060  F033  FFE3   	movff	btemp+11,plusw1
 19149  017828  D008               	goto	l2584
 19150  01782A                     l13859:
 19151                           
 19152                           ;stkvar	_p @ sp[(-14)+12]
 19153  01782A  0EFE               	movlw	-2
 19154  01782C  0060  F0F3  FFE3   	movff	_prec,plusw1
 19155  017832  0EFF               	movlw	-1
 19156  017834  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19157  01783A                     l2584:
 19158                           
 19159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 19160                           ;stkvar	_w @ sp[(-14)+10]
 19161  01783A  0EFC               	movlw	-4
 19162  01783C  0060  F0EB  FFE3   	movff	_width,plusw1
 19163  017842  0EFD               	movlw	-3
 19164  017844  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19165                           
 19166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 19167                           ;stkvar	_d @ sp[(-14)+-10]
 19168  01784A  0EE8               	movlw	232
 19169  01784C  24E1               	addwf	fsr1l,w,c
 19170  01784E  6ED9               	movwf	fsr2l,c
 19171  017850  0EFF               	movlw	255
 19172  017852  20E2               	addwfc	fsr1h,w,c
 19173  017854  6EDA               	movwf	fsr2h,c
 19174                           
 19175                           ;stkvar	_n @ sp[(-14)+0]
 19176  017856  0E08               	movlw	8
 19177  017858  6E01               	movwf	btemp^0,c
 19178  01785A  0EF2               	movlw	-14
 19179  01785C                     us1305999:
 19180  01785C  006F FF7B FFE3     	movff	postinc2,plusw1
 19181  017862  28E8               	incf	wreg,w,c
 19182  017864  2E01               	decfsz	btemp^0,f,c
 19183  017866  D7FA               	bra	us1305999
 19184                           
 19185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 19186  017868  0E4F               	movlw	79
 19187  01786A  6E0B               	movwf	(btemp+10)^0,c
 19188  01786C  0E00               	movlw	0
 19189  01786E  6E0C               	movwf	(btemp+11)^0,c
 19190                           
 19191                           ;stkvar	_i @ sp[(-14)+8]
 19192  017870  0EFA               	movlw	-6
 19193  017872  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19194  017878  0EFB               	movlw	-5
 19195  01787A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19196                           
 19197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 19198  017880  0103               	movlb	3	; () banked
 19199  017882  6BA3               	clrf	(_dbuf+79)& (0+255),b
 19200                           
 19201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 19202  017884  D0FB               	goto	l13877
 19203  017886                     l13867:
 19204                           
 19205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 19206                           ;stkvar	_i @ sp[(-14)+8]
 19207  017886  50E1               	movf	fsr1l,w,c
 19208  017888  0FFA               	addlw	-6
 19209  01788A  6ED9               	movwf	fsr2l,c
 19210  01788C  50E2               	movf	fsr1h,w,c
 19211  01788E  6EDA               	movwf	fsr2h,c
 19212  017890  0EFF               	movlw	255
 19213  017892  22DA               	addwfc	fsr2h,f,c
 19214  017894  06DE               	decf	postinc2,f,c
 19215  017896  0E00               	movlw	0
 19216  017898  5ADD               	subwfb	postdec2,f,c
 19217                           
 19218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 19219  01789A  0E0A               	movlw	10
 19220  01789C  6EE6               	movwf	postinc1,c
 19221  01789E  0E00               	movlw	0
 19222  0178A0  6EE6               	movwf	postinc1,c
 19223  0178A2  0E00               	movlw	0
 19224  0178A4  6EE6               	movwf	postinc1,c
 19225  0178A6  0E00               	movlw	0
 19226  0178A8  6EE6               	movwf	postinc1,c
 19227  0178AA  0E00               	movlw	0
 19228  0178AC  6EE6               	movwf	postinc1,c
 19229  0178AE  0E00               	movlw	0
 19230  0178B0  6EE6               	movwf	postinc1,c
 19231  0178B2  0E00               	movlw	0
 19232  0178B4  6EE6               	movwf	postinc1,c
 19233  0178B6  0E00               	movlw	0
 19234  0178B8  6EE6               	movwf	postinc1,c
 19235                           
 19236                           ;stkvar	_n @ sp[(-22)+0]
 19237  0178BA  50E1               	movf	fsr1l,w,c
 19238  0178BC  0FEA               	addlw	-22
 19239  0178BE  6ED9               	movwf	fsr2l,c
 19240  0178C0  50E2               	movf	fsr1h,w,c
 19241  0178C2  6EDA               	movwf	fsr2h,c
 19242  0178C4  0EFF               	movlw	255
 19243  0178C6  22DA               	addwfc	fsr2h,f,c
 19244  0178C8  006F FF7B FFE6     	movff	postinc2,postinc1
 19245  0178CE  006F FF7B FFE6     	movff	postinc2,postinc1
 19246  0178D4  006F FF7B FFE6     	movff	postinc2,postinc1
 19247  0178DA  006F FF7B FFE6     	movff	postinc2,postinc1
 19248  0178E0  006F FF7B FFE6     	movff	postinc2,postinc1
 19249  0178E6  006F FF7B FFE6     	movff	postinc2,postinc1
 19250  0178EC  006F FF7B FFE6     	movff	postinc2,postinc1
 19251  0178F2  006F FF7B FFE6     	movff	postinc2,postinc1
 19252  0178F8  EC5D  F0D3         	call	___lomod	;wreg free
 19253  0178FC  52E5               	movf	postdec1,f,c
 19254  0178FE  006F FF9C  F018    	movff	indf1,btemp+23
 19255  017904  52E5               	movf	postdec1,f,c
 19256  017906  006F FF9C  F017    	movff	indf1,btemp+22
 19257  01790C  52E5               	movf	postdec1,f,c
 19258  01790E  006F FF9C  F016    	movff	indf1,btemp+21
 19259  017914  52E5               	movf	postdec1,f,c
 19260  017916  006F FF9C  F015    	movff	indf1,btemp+20
 19261  01791C  52E5               	movf	postdec1,f,c
 19262  01791E  006F FF9C  F014    	movff	indf1,btemp+19
 19263  017924  52E5               	movf	postdec1,f,c
 19264  017926  006F FF9C  F013    	movff	indf1,btemp+18
 19265  01792C  52E5               	movf	postdec1,f,c
 19266  01792E  006F FF9C  F012    	movff	indf1,btemp+17
 19267  017934  52E5               	movf	postdec1,f,c
 19268  017936  006F FF9C  F011    	movff	indf1,btemp+16
 19269  01793C  0EF8               	movlw	248
 19270  01793E  26E1               	addwf	fsr1l,f,c
 19271  017940  0EFF               	movlw	255
 19272  017942  22E2               	addwfc	fsr1h,f,c
 19273  017944  0E30               	movlw	48
 19274  017946  2611               	addwf	(btemp+16)^0,f,c
 19275                           
 19276                           ;stkvar	_i @ sp[(-14)+8]
 19277  017948  0EFA               	movlw	-6
 19278  01794A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19279  017950  0EFB               	movlw	-5
 19280  017952  006F FF8C  F00C    	movff	plusw1,btemp+11
 19281  017958  0E54               	movlw	low _dbuf
 19282  01795A  240B               	addwf	(btemp+10)^0,w,c
 19283  01795C  6ED9               	movwf	fsr2l,c
 19284  01795E  0E03               	movlw	high _dbuf
 19285  017960  200C               	addwfc	(btemp+11)^0,w,c
 19286  017962  6EDA               	movwf	fsr2h,c
 19287  017964  0060  F047  FFDF   	movff	btemp+16,indf2
 19288                           
 19289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 19290                           ;stkvar	_p @ sp[(-14)+12]
 19291  01796A  50E1               	movf	fsr1l,w,c
 19292  01796C  0FFE               	addlw	-2
 19293  01796E  6ED9               	movwf	fsr2l,c
 19294  017970  50E2               	movf	fsr1h,w,c
 19295  017972  6EDA               	movwf	fsr2h,c
 19296  017974  0EFF               	movlw	255
 19297  017976  22DA               	addwfc	fsr2h,f,c
 19298  017978  06DE               	decf	postinc2,f,c
 19299  01797A  0E00               	movlw	0
 19300  01797C  5ADD               	subwfb	postdec2,f,c
 19301                           
 19302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 19303                           ;stkvar	_w @ sp[(-14)+10]
 19304  01797E  50E1               	movf	fsr1l,w,c
 19305  017980  0FFC               	addlw	-4
 19306  017982  6ED9               	movwf	fsr2l,c
 19307  017984  50E2               	movf	fsr1h,w,c
 19308  017986  6EDA               	movwf	fsr2h,c
 19309  017988  0EFF               	movlw	255
 19310  01798A  22DA               	addwfc	fsr2h,f,c
 19311  01798C  06DE               	decf	postinc2,f,c
 19312  01798E  0E00               	movlw	0
 19313  017990  5ADD               	subwfb	postdec2,f,c
 19314                           
 19315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 19316  017992  0E0A               	movlw	10
 19317  017994  6EE6               	movwf	postinc1,c
 19318  017996  0E00               	movlw	0
 19319  017998  6EE6               	movwf	postinc1,c
 19320  01799A  0E00               	movlw	0
 19321  01799C  6EE6               	movwf	postinc1,c
 19322  01799E  0E00               	movlw	0
 19323  0179A0  6EE6               	movwf	postinc1,c
 19324  0179A2  0E00               	movlw	0
 19325  0179A4  6EE6               	movwf	postinc1,c
 19326  0179A6  0E00               	movlw	0
 19327  0179A8  6EE6               	movwf	postinc1,c
 19328  0179AA  0E00               	movlw	0
 19329  0179AC  6EE6               	movwf	postinc1,c
 19330  0179AE  0E00               	movlw	0
 19331  0179B0  6EE6               	movwf	postinc1,c
 19332                           
 19333                           ;stkvar	_n @ sp[(-22)+0]
 19334  0179B2  50E1               	movf	fsr1l,w,c
 19335  0179B4  0FEA               	addlw	-22
 19336  0179B6  6ED9               	movwf	fsr2l,c
 19337  0179B8  50E2               	movf	fsr1h,w,c
 19338  0179BA  6EDA               	movwf	fsr2h,c
 19339  0179BC  0EFF               	movlw	255
 19340  0179BE  22DA               	addwfc	fsr2h,f,c
 19341  0179C0  006F FF7B FFE6     	movff	postinc2,postinc1
 19342  0179C6  006F FF7B FFE6     	movff	postinc2,postinc1
 19343  0179CC  006F FF7B FFE6     	movff	postinc2,postinc1
 19344  0179D2  006F FF7B FFE6     	movff	postinc2,postinc1
 19345  0179D8  006F FF7B FFE6     	movff	postinc2,postinc1
 19346  0179DE  006F FF7B FFE6     	movff	postinc2,postinc1
 19347  0179E4  006F FF7B FFE6     	movff	postinc2,postinc1
 19348  0179EA  006F FF7B FFE6     	movff	postinc2,postinc1
 19349  0179F0  ECD5  F0CD         	call	___lodiv	;wreg free
 19350  0179F4  52E5               	movf	postdec1,f,c
 19351  0179F6  006F FF9C  F018    	movff	indf1,btemp+23
 19352  0179FC  52E5               	movf	postdec1,f,c
 19353  0179FE  006F FF9C  F017    	movff	indf1,btemp+22
 19354  017A04  52E5               	movf	postdec1,f,c
 19355  017A06  006F FF9C  F016    	movff	indf1,btemp+21
 19356  017A0C  52E5               	movf	postdec1,f,c
 19357  017A0E  006F FF9C  F015    	movff	indf1,btemp+20
 19358  017A14  52E5               	movf	postdec1,f,c
 19359  017A16  006F FF9C  F014    	movff	indf1,btemp+19
 19360  017A1C  52E5               	movf	postdec1,f,c
 19361  017A1E  006F FF9C  F013    	movff	indf1,btemp+18
 19362  017A24  52E5               	movf	postdec1,f,c
 19363  017A26  006F FF9C  F012    	movff	indf1,btemp+17
 19364  017A2C  52E5               	movf	postdec1,f,c
 19365  017A2E  006F FF9C  F011    	movff	indf1,btemp+16
 19366  017A34  0EF8               	movlw	248
 19367  017A36  26E1               	addwf	fsr1l,f,c
 19368  017A38  0EFF               	movlw	255
 19369  017A3A  22E2               	addwfc	fsr1h,f,c
 19370                           
 19371                           ;stkvar	_n @ sp[(-14)+0]
 19372  017A3C  0EF2               	movlw	-14
 19373  017A3E  0060  F047  FFE3   	movff	btemp+16,plusw1
 19374  017A44  0EF3               	movlw	-13
 19375  017A46  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19376  017A4C  0EF4               	movlw	-12
 19377  017A4E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19378  017A54  0EF5               	movlw	-11
 19379  017A56  0060  F053  FFE3   	movff	btemp+19,plusw1
 19380  017A5C  0EF6               	movlw	-10
 19381  017A5E  0060  F057  FFE3   	movff	btemp+20,plusw1
 19382  017A64  0EF7               	movlw	-9
 19383  017A66  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19384  017A6C  0EF8               	movlw	-8
 19385  017A6E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19386  017A74  0EF9               	movlw	-7
 19387  017A76  0060  F063  FFE3   	movff	btemp+23,plusw1
 19388  017A7C                     l13877:
 19389                           
 19390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 19391                           ;stkvar	_i @ sp[(-14)+8]
 19392  017A7C  0EFA               	movlw	-6
 19393  017A7E  006F FF8C  F001    	movff	plusw1,btemp
 19394  017A84  0EFB               	movlw	-5
 19395  017A86  50E3               	movf	plusw1,w,c
 19396  017A88  1001               	iorwf	btemp^0,w,c
 19397  017A8A  B4D8               	btfsc	status,2,c
 19398  017A8C  D02F               	goto	u13100
 19399                           
 19400                           ;stkvar	_n @ sp[(-14)+0]
 19401  017A8E  0EF2               	movlw	-14
 19402  017A90  50E3               	movf	plusw1,w,c
 19403  017A92  E115               	bnz	u13071
 19404  017A94  0EF3               	movlw	-13
 19405  017A96  50E3               	movf	plusw1,w,c
 19406  017A98  E112               	bnz	u13071
 19407  017A9A  0EF4               	movlw	-12
 19408  017A9C  50E3               	movf	plusw1,w,c
 19409  017A9E  E10F               	bnz	u13071
 19410  017AA0  0EF5               	movlw	-11
 19411  017AA2  50E3               	movf	plusw1,w,c
 19412  017AA4  E10C               	bnz	u13071
 19413  017AA6  0EF6               	movlw	-10
 19414  017AA8  50E3               	movf	plusw1,w,c
 19415  017AAA  E109               	bnz	u13071
 19416  017AAC  0EF7               	movlw	-9
 19417  017AAE  50E3               	movf	plusw1,w,c
 19418  017AB0  E106               	bnz	u13071
 19419  017AB2  0EF8               	movlw	-8
 19420  017AB4  50E3               	movf	plusw1,w,c
 19421  017AB6  E103               	bnz	u13071
 19422  017AB8  0EF9               	movlw	-7
 19423  017ABA  50E3               	movf	plusw1,w,c
 19424  017ABC  A4D8               	btfss	status,2,c
 19425  017ABE                     u13071:
 19426  017ABE  D6E3               	goto	l13867
 19427                           
 19428                           ;stkvar	_p @ sp[(-14)+12]
 19429  017AC0  0EFF               	movlw	-1
 19430  017AC2  BEE3               	btfsc	plusw1,7,c
 19431  017AC4  D007               	goto	u13080
 19432  017AC6  0EFF               	movlw	-1
 19433  017AC8  50E3               	movf	plusw1,w,c
 19434  017ACA  E103               	bnz	u13081
 19435  017ACC  0EFE               	movlw	-2
 19436  017ACE  04E3               	decf	plusw1,w,c
 19437  017AD0  B0D8               	btfsc	status,0,c
 19438  017AD2                     u13081:
 19439  017AD2  D6D9               	goto	l13867
 19440  017AD4                     u13080:
 19441                           
 19442                           ;stkvar	_w @ sp[(-14)+10]
 19443  017AD4  0EFD               	movlw	-3
 19444  017AD6  BEE3               	btfsc	plusw1,7,c
 19445  017AD8  D009               	goto	u13100
 19446  017ADA  0EFD               	movlw	-3
 19447  017ADC  50E3               	movf	plusw1,w,c
 19448  017ADE  E104               	bnz	u13090
 19449  017AE0  0EFC               	movlw	-4
 19450  017AE2  04E3               	decf	plusw1,w,c
 19451  017AE4  A0D8               	btfss	status,0,c
 19452  017AE6  D002               	goto	u13100
 19453  017AE8                     u13090:
 19454  017AE8  B23E               	btfsc	_flags^0,1,c
 19455  017AEA  D6CD               	goto	l13867
 19456  017AEC                     u13100:
 19457                           
 19458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 19459                           ;stkvar	_w @ sp[(-14)+10]
 19460  017AEC  0EFC               	movlw	-4
 19461  017AEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19462  017AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19463                           
 19464                           ;stkvar	_i @ sp[(-16)+8]
 19465  017AFA  0E54               	movlw	low _dbuf
 19466  017AFC  6E0B               	movwf	(btemp+10)^0,c
 19467  017AFE  0E03               	movlw	high _dbuf
 19468  017B00  6E0C               	movwf	(btemp+11)^0,c
 19469  017B02  0EF8               	movlw	-8
 19470  017B04  50E3               	movf	plusw1,w,c
 19471  017B06  260B               	addwf	(btemp+10)^0,f,c
 19472  017B08  0EF9               	movlw	-7
 19473  017B0A  50E3               	movf	plusw1,w,c
 19474  017B0C  220C               	addwfc	(btemp+11)^0,f,c
 19475  017B0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19476  017B14  0060  F033  FFE6   	movff	btemp+11,postinc1
 19477                           
 19478                           ;stkvar	_fp @ sp[(-18)+-2]
 19479  017B1A  0EEC               	movlw	-20
 19480  017B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 19481  017B22  006F FF8F FFE6     	movff	plusw1,postinc1
 19482  017B28  ECCF  F0D6         	call	_pad	;wreg free
 19483                           
 19484                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19485  017B2C  0EE8               	movlw	232
 19486  017B2E  26E1               	addwf	fsr1l,f,c
 19487  017B30  0EFF               	movlw	255
 19488  017B32  22E2               	addwfc	fsr1h,f,c
 19489  017B34  0012               	return		;funcret
 19490  017B36                     __end_of_utoa:
 19491                           	opt callstack 0
 19492                           
 19493 ;; *************** function ___lomod *****************
 19494 ;; Defined at:
 19495 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 19496 ;; Parameters:    Size  Location     Type
 19497 ;;  dividend        8  [STACK] unsigned long long 
 19498 ;;  divisor         8  [STACK] unsigned long long 
 19499 ;; Auto vars:     Size  Location     Type
 19500 ;;  counter         1  [STACK] unsigned char 
 19501 ;; Return value:  Size  Location     Type
 19502 ;;                  8  [STACK] unsigned long long 
 19503 ;; Registers used:
 19504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19505 ;; Tracked objects:
 19506 ;;		On entry : 0/3
 19507 ;;		On exit  : 0/0
 19508 ;;		Unchanged: 0/0
 19509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19514 ;;Total ram usage:        0 bytes
 19515 ;; Hardware stack levels used:    1
 19516 ;; Hardware stack levels required when called:   15
 19517 ;; This function calls:
 19518 ;;		Nothing
 19519 ;; This function is called by:
 19520 ;;		_utoa
 19521 ;; This function uses a reentrant model
 19522 ;;
 19523                           
 19524                           	psect	text74
 19525  01A6BA                     __ptext74:
 19526                           	opt callstack 0
 19527  01A6BA                     ___lomod:
 19528                           	opt callstack 0
 19529                           
 19530                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19531  01A6BA  52E6               	movf	postinc1,f,c
 19532                           
 19533                           ;stkvar	_divisor @ sp[(-1)+-16]
 19534                           
 19535                           ;incstack = 0
 19536 ;; hardware stack exceeded
 19537  01A6BC  0EEF               	movlw	-17
 19538  01A6BE  50E3               	movf	plusw1,w,c
 19539  01A6C0  E116               	bnz	u8030
 19540  01A6C2  0EF0               	movlw	-16
 19541  01A6C4  50E3               	movf	plusw1,w,c
 19542  01A6C6  E113               	bnz	u8030
 19543  01A6C8  0EF1               	movlw	-15
 19544  01A6CA  50E3               	movf	plusw1,w,c
 19545  01A6CC  E110               	bnz	u8030
 19546  01A6CE  0EF2               	movlw	-14
 19547  01A6D0  50E3               	movf	plusw1,w,c
 19548  01A6D2  E10D               	bnz	u8030
 19549  01A6D4  0EF3               	movlw	-13
 19550  01A6D6  50E3               	movf	plusw1,w,c
 19551  01A6D8  E10A               	bnz	u8030
 19552  01A6DA  0EF4               	movlw	-12
 19553  01A6DC  50E3               	movf	plusw1,w,c
 19554  01A6DE  E107               	bnz	u8030
 19555  01A6E0  0EF5               	movlw	-11
 19556  01A6E2  50E3               	movf	plusw1,w,c
 19557  01A6E4  E104               	bnz	u8030
 19558  01A6E6  0EF6               	movlw	-10
 19559  01A6E8  50E3               	movf	plusw1,w,c
 19560  01A6EA  B4D8               	btfsc	status,2,c
 19561  01A6EC  D075               	goto	u8060
 19562  01A6EE                     u8030:
 19563                           
 19564                           ;stkvar	_counter @ sp[(-1)+0]
 19565  01A6EE  0EFF               	movlw	-1
 19566  01A6F0  6AE3               	clrf	plusw1,c
 19567  01A6F2  D012               	goto	L20
 19568  01A6F4                     l9603:
 19569                           
 19570                           ;stkvar	_divisor @ sp[(-1)+-16]
 19571  01A6F4  90D8               	bcf	status,0,c
 19572  01A6F6  0EEF               	movlw	-17
 19573  01A6F8  36E3               	rlcf	plusw1,f,c
 19574  01A6FA  0EF0               	movlw	-16
 19575  01A6FC  36E3               	rlcf	plusw1,f,c
 19576  01A6FE  0EF1               	movlw	-15
 19577  01A700  36E3               	rlcf	plusw1,f,c
 19578  01A702  0EF2               	movlw	-14
 19579  01A704  36E3               	rlcf	plusw1,f,c
 19580  01A706  0EF3               	movlw	-13
 19581  01A708  36E3               	rlcf	plusw1,f,c
 19582  01A70A  0EF4               	movlw	-12
 19583  01A70C  36E3               	rlcf	plusw1,f,c
 19584  01A70E  0EF5               	movlw	-11
 19585  01A710  36E3               	rlcf	plusw1,f,c
 19586  01A712  0EF6               	movlw	-10
 19587  01A714  36E3               	rlcf	plusw1,f,c
 19588                           
 19589                           ;stkvar	_counter @ sp[(-1)+0]
 19590  01A716  0EFF               	movlw	-1
 19591  01A718                     L20:
 19592  01A718  2AE3               	incf	plusw1,f,c
 19593                           
 19594                           ;stkvar	_divisor @ sp[(-1)+-16]
 19595  01A71A  0EF6               	movlw	-10
 19596  01A71C  AEE3               	btfss	plusw1,7,c
 19597  01A71E  D7EA               	goto	l9603
 19598  01A720                     u8040:
 19599                           
 19600                           ;stkvar	_divisor @ sp[(-1)+-16]
 19601                           ;stkvar	_dividend @ sp[(-1)+-8]
 19602  01A720  50E1               	movf	fsr1l,w,c
 19603  01A722  0FF7               	addlw	-9
 19604  01A724  6ED9               	movwf	fsr2l,c
 19605  01A726  50E2               	movf	fsr1h,w,c
 19606  01A728  6EDA               	movwf	fsr2h,c
 19607  01A72A  0EFF               	movlw	255
 19608  01A72C  22DA               	addwfc	fsr2h,f,c
 19609  01A72E  0EEF               	movlw	-17
 19610  01A730  50E3               	movf	plusw1,w,c
 19611  01A732  5CDE               	subwf	postinc2,w,c
 19612  01A734  0EF0               	movlw	-16
 19613  01A736  50E3               	movf	plusw1,w,c
 19614  01A738  58DE               	subwfb	postinc2,w,c
 19615  01A73A  0EF1               	movlw	-15
 19616  01A73C  50E3               	movf	plusw1,w,c
 19617  01A73E  58DE               	subwfb	postinc2,w,c
 19618  01A740  0EF2               	movlw	-14
 19619  01A742  50E3               	movf	plusw1,w,c
 19620  01A744  58DE               	subwfb	postinc2,w,c
 19621  01A746  0EF3               	movlw	-13
 19622  01A748  50E3               	movf	plusw1,w,c
 19623  01A74A  58DE               	subwfb	postinc2,w,c
 19624  01A74C  0EF4               	movlw	-12
 19625  01A74E  50E3               	movf	plusw1,w,c
 19626  01A750  58DE               	subwfb	postinc2,w,c
 19627  01A752  0EF5               	movlw	-11
 19628  01A754  50E3               	movf	plusw1,w,c
 19629  01A756  58DE               	subwfb	postinc2,w,c
 19630  01A758  0EF6               	movlw	-10
 19631  01A75A  50E3               	movf	plusw1,w,c
 19632  01A75C  58DE               	subwfb	postinc2,w,c
 19633  01A75E  A0D8               	btfss	status,0,c
 19634  01A760  D01F               	goto	l9611
 19635                           
 19636                           ;stkvar	_divisor @ sp[(-1)+-16]
 19637                           ;stkvar	_dividend @ sp[(-1)+-8]
 19638  01A762  50E1               	movf	fsr1l,w,c
 19639  01A764  0FF7               	addlw	-9
 19640  01A766  6ED9               	movwf	fsr2l,c
 19641  01A768  50E2               	movf	fsr1h,w,c
 19642  01A76A  6EDA               	movwf	fsr2h,c
 19643  01A76C  0EFF               	movlw	255
 19644  01A76E  22DA               	addwfc	fsr2h,f,c
 19645  01A770  0EEF               	movlw	-17
 19646  01A772  50E3               	movf	plusw1,w,c
 19647  01A774  5EDE               	subwf	postinc2,f,c
 19648  01A776  0EF0               	movlw	-16
 19649  01A778  50E3               	movf	plusw1,w,c
 19650  01A77A  5ADE               	subwfb	postinc2,f,c
 19651  01A77C  0EF1               	movlw	-15
 19652  01A77E  50E3               	movf	plusw1,w,c
 19653  01A780  5ADE               	subwfb	postinc2,f,c
 19654  01A782  0EF2               	movlw	-14
 19655  01A784  50E3               	movf	plusw1,w,c
 19656  01A786  5ADE               	subwfb	postinc2,f,c
 19657  01A788  0EF3               	movlw	-13
 19658  01A78A  50E3               	movf	plusw1,w,c
 19659  01A78C  5ADE               	subwfb	postinc2,f,c
 19660  01A78E  0EF4               	movlw	-12
 19661  01A790  50E3               	movf	plusw1,w,c
 19662  01A792  5ADE               	subwfb	postinc2,f,c
 19663  01A794  0EF5               	movlw	-11
 19664  01A796  50E3               	movf	plusw1,w,c
 19665  01A798  5ADE               	subwfb	postinc2,f,c
 19666  01A79A  0EF6               	movlw	-10
 19667  01A79C  50E3               	movf	plusw1,w,c
 19668  01A79E  5ADE               	subwfb	postinc2,f,c
 19669  01A7A0                     l9611:
 19670                           
 19671                           ;stkvar	_divisor @ sp[(-1)+-16]
 19672  01A7A0  90D8               	bcf	status,0,c
 19673  01A7A2  0EF6               	movlw	-10
 19674  01A7A4  32E3               	rrcf	plusw1,f,c
 19675  01A7A6  0EF5               	movlw	-11
 19676  01A7A8  32E3               	rrcf	plusw1,f,c
 19677  01A7AA  0EF4               	movlw	-12
 19678  01A7AC  32E3               	rrcf	plusw1,f,c
 19679  01A7AE  0EF3               	movlw	-13
 19680  01A7B0  32E3               	rrcf	plusw1,f,c
 19681  01A7B2  0EF2               	movlw	-14
 19682  01A7B4  32E3               	rrcf	plusw1,f,c
 19683  01A7B6  0EF1               	movlw	-15
 19684  01A7B8  32E3               	rrcf	plusw1,f,c
 19685  01A7BA  0EF0               	movlw	-16
 19686  01A7BC  32E3               	rrcf	plusw1,f,c
 19687  01A7BE  0EEF               	movlw	-17
 19688  01A7C0  32E3               	rrcf	plusw1,f,c
 19689                           
 19690                           ;stkvar	_counter @ sp[(-1)+0]
 19691  01A7C2  0EFF               	movlw	-1
 19692  01A7C4  50E3               	movf	plusw1,w,c
 19693  01A7C6  6E01               	movwf	btemp^0,c
 19694  01A7C8  0E01               	movlw	1
 19695  01A7CA  5E01               	subwf	btemp^0,f,c
 19696  01A7CC  0EFF               	movlw	-1
 19697  01A7CE  0060  F007  FFE3   	movff	btemp,plusw1
 19698  01A7D4  A4D8               	btfss	status,2,c
 19699  01A7D6  D7A4               	goto	u8040
 19700  01A7D8                     u8060:
 19701                           
 19702                           ;stkvar	_dividend @ sp[(-1)+-8]
 19703  01A7D8  0EF7               	movlw	247
 19704  01A7DA  24E1               	addwf	fsr1l,w,c
 19705  01A7DC  6ED9               	movwf	fsr2l,c
 19706  01A7DE  0EFF               	movlw	255
 19707  01A7E0  20E2               	addwfc	fsr1h,w,c
 19708  01A7E2  6EDA               	movwf	fsr2h,c
 19709                           
 19710                           ;stkvar	?___lomod @ sp[(-1)+-8]
 19711  01A7E4  0E08               	movlw	8
 19712  01A7E6  6E01               	movwf	btemp^0,c
 19713  01A7E8  0EF7               	movlw	-9
 19714  01A7EA                     us807999:
 19715  01A7EA  006F FF7B FFE3     	movff	postinc2,plusw1
 19716  01A7F0  28E8               	incf	wreg,w,c
 19717  01A7F2  2E01               	decfsz	btemp^0,f,c
 19718  01A7F4  D7FA               	bra	us807999
 19719                           
 19720                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19721  01A7F6  52E5               	movf	postdec1,f,c
 19722  01A7F8  0012               	return		;funcret
 19723  01A7FA                     __end_of___lomod:
 19724                           	opt callstack 0
 19725                           
 19726 ;; *************** function ___lodiv *****************
 19727 ;; Defined at:
 19728 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 19729 ;; Parameters:    Size  Location     Type
 19730 ;;  dividend        8  [STACK] unsigned long long 
 19731 ;;  divisor         8  [STACK] unsigned long long 
 19732 ;; Auto vars:     Size  Location     Type
 19733 ;;  quotient        8  [STACK] unsigned long long 
 19734 ;;  counter         1  [STACK] unsigned char 
 19735 ;; Return value:  Size  Location     Type
 19736 ;;                  8  [STACK] unsigned long long 
 19737 ;; Registers used:
 19738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19739 ;; Tracked objects:
 19740 ;;		On entry : 0/3
 19741 ;;		On exit  : 0/0
 19742 ;;		Unchanged: 0/0
 19743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19748 ;;Total ram usage:        0 bytes
 19749 ;; Hardware stack levels used:    1
 19750 ;; Hardware stack levels required when called:   15
 19751 ;; This function calls:
 19752 ;;		Nothing
 19753 ;; This function is called by:
 19754 ;;		_utoa
 19755 ;; This function uses a reentrant model
 19756 ;;
 19757                           
 19758                           	psect	text75
 19759  019BAA                     __ptext75:
 19760                           	opt callstack 0
 19761  019BAA                     ___lodiv:
 19762                           	opt callstack 0
 19763                           
 19764                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19765  019BAA  0E09               	movlw	9
 19766  019BAC  26E1               	addwf	fsr1l,f,c
 19767  019BAE  0E00               	movlw	0
 19768  019BB0  22E2               	addwfc	fsr1h,f,c
 19769                           
 19770                           ;stkvar	_quotient @ sp[(-9)+0]
 19771                           
 19772                           ;incstack = 0
 19773 ;; hardware stack exceeded
 19774  019BB2  0E07               	movlw	7
 19775  019BB4  6E01               	movwf	btemp^0,c
 19776  019BB6  0EF7               	movlw	-9
 19777  019BB8                     u7971:
 19778  019BB8  6AE3               	clrf	plusw1,c
 19779  019BBA  2AE8               	incf	wreg,f,c
 19780  019BBC  0601               	decf	btemp^0,f,c
 19781  019BBE  E2FC               	bc	u7971
 19782                           
 19783                           ;stkvar	_divisor @ sp[(-9)+-16]
 19784  019BC0  0EE7               	movlw	-25
 19785  019BC2  50E3               	movf	plusw1,w,c
 19786  019BC4  E116               	bnz	u7980
 19787  019BC6  0EE8               	movlw	-24
 19788  019BC8  50E3               	movf	plusw1,w,c
 19789  019BCA  E113               	bnz	u7980
 19790  019BCC  0EE9               	movlw	-23
 19791  019BCE  50E3               	movf	plusw1,w,c
 19792  019BD0  E110               	bnz	u7980
 19793  019BD2  0EEA               	movlw	-22
 19794  019BD4  50E3               	movf	plusw1,w,c
 19795  019BD6  E10D               	bnz	u7980
 19796  019BD8  0EEB               	movlw	-21
 19797  019BDA  50E3               	movf	plusw1,w,c
 19798  019BDC  E10A               	bnz	u7980
 19799  019BDE  0EEC               	movlw	-20
 19800  019BE0  50E3               	movf	plusw1,w,c
 19801  019BE2  E107               	bnz	u7980
 19802  019BE4  0EED               	movlw	-19
 19803  019BE6  50E3               	movf	plusw1,w,c
 19804  019BE8  E104               	bnz	u7980
 19805  019BEA  0EEE               	movlw	-18
 19806  019BEC  50E3               	movf	plusw1,w,c
 19807  019BEE  B4D8               	btfsc	status,2,c
 19808  019BF0  D088               	goto	u8010
 19809  019BF2                     u7980:
 19810                           
 19811                           ;stkvar	_counter @ sp[(-9)+8]
 19812  019BF2  0EFF               	movlw	-1
 19813  019BF4  6AE3               	clrf	plusw1,c
 19814  019BF6  D012               	goto	L21
 19815  019BF8                     l9579:
 19816                           
 19817                           ;stkvar	_divisor @ sp[(-9)+-16]
 19818  019BF8  90D8               	bcf	status,0,c
 19819  019BFA  0EE7               	movlw	-25
 19820  019BFC  36E3               	rlcf	plusw1,f,c
 19821  019BFE  0EE8               	movlw	-24
 19822  019C00  36E3               	rlcf	plusw1,f,c
 19823  019C02  0EE9               	movlw	-23
 19824  019C04  36E3               	rlcf	plusw1,f,c
 19825  019C06  0EEA               	movlw	-22
 19826  019C08  36E3               	rlcf	plusw1,f,c
 19827  019C0A  0EEB               	movlw	-21
 19828  019C0C  36E3               	rlcf	plusw1,f,c
 19829  019C0E  0EEC               	movlw	-20
 19830  019C10  36E3               	rlcf	plusw1,f,c
 19831  019C12  0EED               	movlw	-19
 19832  019C14  36E3               	rlcf	plusw1,f,c
 19833  019C16  0EEE               	movlw	-18
 19834  019C18  36E3               	rlcf	plusw1,f,c
 19835                           
 19836                           ;stkvar	_counter @ sp[(-9)+8]
 19837  019C1A  0EFF               	movlw	-1
 19838  019C1C                     L21:
 19839  019C1C  2AE3               	incf	plusw1,f,c
 19840                           
 19841                           ;stkvar	_divisor @ sp[(-9)+-16]
 19842  019C1E  0EEE               	movlw	-18
 19843  019C20  AEE3               	btfss	plusw1,7,c
 19844  019C22  D7EA               	goto	l9579
 19845  019C24                     u7990:
 19846                           
 19847                           ;stkvar	_quotient @ sp[(-9)+0]
 19848  019C24  90D8               	bcf	status,0,c
 19849  019C26  0EF7               	movlw	-9
 19850  019C28  36E3               	rlcf	plusw1,f,c
 19851  019C2A  0EF8               	movlw	-8
 19852  019C2C  36E3               	rlcf	plusw1,f,c
 19853  019C2E  0EF9               	movlw	-7
 19854  019C30  36E3               	rlcf	plusw1,f,c
 19855  019C32  0EFA               	movlw	-6
 19856  019C34  36E3               	rlcf	plusw1,f,c
 19857  019C36  0EFB               	movlw	-5
 19858  019C38  36E3               	rlcf	plusw1,f,c
 19859  019C3A  0EFC               	movlw	-4
 19860  019C3C  36E3               	rlcf	plusw1,f,c
 19861  019C3E  0EFD               	movlw	-3
 19862  019C40  36E3               	rlcf	plusw1,f,c
 19863  019C42  0EFE               	movlw	-2
 19864  019C44  36E3               	rlcf	plusw1,f,c
 19865                           
 19866                           ;stkvar	_divisor @ sp[(-9)+-16]
 19867                           ;stkvar	_dividend @ sp[(-9)+-8]
 19868  019C46  50E1               	movf	fsr1l,w,c
 19869  019C48  0FEF               	addlw	-17
 19870  019C4A  6ED9               	movwf	fsr2l,c
 19871  019C4C  50E2               	movf	fsr1h,w,c
 19872  019C4E  6EDA               	movwf	fsr2h,c
 19873  019C50  0EFF               	movlw	255
 19874  019C52  22DA               	addwfc	fsr2h,f,c
 19875  019C54  0EE7               	movlw	-25
 19876  019C56  50E3               	movf	plusw1,w,c
 19877  019C58  5CDE               	subwf	postinc2,w,c
 19878  019C5A  0EE8               	movlw	-24
 19879  019C5C  50E3               	movf	plusw1,w,c
 19880  019C5E  58DE               	subwfb	postinc2,w,c
 19881  019C60  0EE9               	movlw	-23
 19882  019C62  50E3               	movf	plusw1,w,c
 19883  019C64  58DE               	subwfb	postinc2,w,c
 19884  019C66  0EEA               	movlw	-22
 19885  019C68  50E3               	movf	plusw1,w,c
 19886  019C6A  58DE               	subwfb	postinc2,w,c
 19887  019C6C  0EEB               	movlw	-21
 19888  019C6E  50E3               	movf	plusw1,w,c
 19889  019C70  58DE               	subwfb	postinc2,w,c
 19890  019C72  0EEC               	movlw	-20
 19891  019C74  50E3               	movf	plusw1,w,c
 19892  019C76  58DE               	subwfb	postinc2,w,c
 19893  019C78  0EED               	movlw	-19
 19894  019C7A  50E3               	movf	plusw1,w,c
 19895  019C7C  58DE               	subwfb	postinc2,w,c
 19896  019C7E  0EEE               	movlw	-18
 19897  019C80  50E3               	movf	plusw1,w,c
 19898  019C82  58DE               	subwfb	postinc2,w,c
 19899  019C84  A0D8               	btfss	status,0,c
 19900  019C86  D021               	goto	l9591
 19901                           
 19902                           ;stkvar	_divisor @ sp[(-9)+-16]
 19903                           ;stkvar	_dividend @ sp[(-9)+-8]
 19904  019C88  50E1               	movf	fsr1l,w,c
 19905  019C8A  0FEF               	addlw	-17
 19906  019C8C  6ED9               	movwf	fsr2l,c
 19907  019C8E  50E2               	movf	fsr1h,w,c
 19908  019C90  6EDA               	movwf	fsr2h,c
 19909  019C92  0EFF               	movlw	255
 19910  019C94  22DA               	addwfc	fsr2h,f,c
 19911  019C96  0EE7               	movlw	-25
 19912  019C98  50E3               	movf	plusw1,w,c
 19913  019C9A  5EDE               	subwf	postinc2,f,c
 19914  019C9C  0EE8               	movlw	-24
 19915  019C9E  50E3               	movf	plusw1,w,c
 19916  019CA0  5ADE               	subwfb	postinc2,f,c
 19917  019CA2  0EE9               	movlw	-23
 19918  019CA4  50E3               	movf	plusw1,w,c
 19919  019CA6  5ADE               	subwfb	postinc2,f,c
 19920  019CA8  0EEA               	movlw	-22
 19921  019CAA  50E3               	movf	plusw1,w,c
 19922  019CAC  5ADE               	subwfb	postinc2,f,c
 19923  019CAE  0EEB               	movlw	-21
 19924  019CB0  50E3               	movf	plusw1,w,c
 19925  019CB2  5ADE               	subwfb	postinc2,f,c
 19926  019CB4  0EEC               	movlw	-20
 19927  019CB6  50E3               	movf	plusw1,w,c
 19928  019CB8  5ADE               	subwfb	postinc2,f,c
 19929  019CBA  0EED               	movlw	-19
 19930  019CBC  50E3               	movf	plusw1,w,c
 19931  019CBE  5ADE               	subwfb	postinc2,f,c
 19932  019CC0  0EEE               	movlw	-18
 19933  019CC2  50E3               	movf	plusw1,w,c
 19934  019CC4  5ADE               	subwfb	postinc2,f,c
 19935                           
 19936                           ;stkvar	_quotient @ sp[(-9)+0]
 19937  019CC6  0EF7               	movlw	-9
 19938  019CC8  80E3               	bsf	plusw1,0,c
 19939  019CCA                     l9591:
 19940                           
 19941                           ;stkvar	_divisor @ sp[(-9)+-16]
 19942  019CCA  90D8               	bcf	status,0,c
 19943  019CCC  0EEE               	movlw	-18
 19944  019CCE  32E3               	rrcf	plusw1,f,c
 19945  019CD0  0EED               	movlw	-19
 19946  019CD2  32E3               	rrcf	plusw1,f,c
 19947  019CD4  0EEC               	movlw	-20
 19948  019CD6  32E3               	rrcf	plusw1,f,c
 19949  019CD8  0EEB               	movlw	-21
 19950  019CDA  32E3               	rrcf	plusw1,f,c
 19951  019CDC  0EEA               	movlw	-22
 19952  019CDE  32E3               	rrcf	plusw1,f,c
 19953  019CE0  0EE9               	movlw	-23
 19954  019CE2  32E3               	rrcf	plusw1,f,c
 19955  019CE4  0EE8               	movlw	-24
 19956  019CE6  32E3               	rrcf	plusw1,f,c
 19957  019CE8  0EE7               	movlw	-25
 19958  019CEA  32E3               	rrcf	plusw1,f,c
 19959                           
 19960                           ;stkvar	_counter @ sp[(-9)+8]
 19961  019CEC  0EFF               	movlw	-1
 19962  019CEE  50E3               	movf	plusw1,w,c
 19963  019CF0  6E01               	movwf	btemp^0,c
 19964  019CF2  0E01               	movlw	1
 19965  019CF4  5E01               	subwf	btemp^0,f,c
 19966  019CF6  0EFF               	movlw	-1
 19967  019CF8  0060  F007  FFE3   	movff	btemp,plusw1
 19968  019CFE  A4D8               	btfss	status,2,c
 19969  019D00  D791               	goto	u7990
 19970  019D02                     u8010:
 19971                           
 19972                           ;stkvar	_quotient @ sp[(-9)+0]
 19973  019D02  0EF7               	movlw	247
 19974  019D04  24E1               	addwf	fsr1l,w,c
 19975  019D06  6ED9               	movwf	fsr2l,c
 19976  019D08  0EFF               	movlw	255
 19977  019D0A  20E2               	addwfc	fsr1h,w,c
 19978  019D0C  6EDA               	movwf	fsr2h,c
 19979                           
 19980                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 19981  019D0E  0E08               	movlw	8
 19982  019D10  6E01               	movwf	btemp^0,c
 19983  019D12  0EEF               	movlw	-17
 19984  019D14                     us802999:
 19985  019D14  006F FF7B FFE3     	movff	postinc2,plusw1
 19986  019D1A  28E8               	incf	wreg,w,c
 19987  019D1C  2E01               	decfsz	btemp^0,f,c
 19988  019D1E  D7FA               	bra	us802999
 19989                           
 19990                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19991  019D20  0EF7               	movlw	247
 19992  019D22  26E1               	addwf	fsr1l,f,c
 19993  019D24  0EFF               	movlw	255
 19994  019D26  22E2               	addwfc	fsr1h,f,c
 19995  019D28  0012               	return		;funcret
 19996  019D2A                     __end_of___lodiv:
 19997                           	opt callstack 0
 19998                           
 19999 ;; *************** function _strncmp *****************
 20000 ;; Defined at:
 20001 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 20002 ;; Parameters:    Size  Location     Type
 20003 ;;  _l              2  [STACK] PTR const unsigned char 
 20004 ;;		 -> ct(3), STR_93(127), STR_91(3), STR_90(3), 
 20005 ;;		 -> STR_89(19), STR_88(19), STR_87(19), STR_86(19), 
 20006 ;;		 -> STR_85(19), STR_84(19), STR_83(24), STR_82(15), 
 20007 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 20008 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(3), 
 20009 ;;		 -> STR_71(21), STR_70(21), STR_69(21), STR_68(21), 
 20010 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(21), 
 20011 ;;		 -> STR_63(21), STR_62(18), STR_61(21), STR_60(21), 
 20012 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 20013 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 20014 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(21), 
 20015 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 20016 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 20017 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 20018 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 20019 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 20020 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 20021 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 20022 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 20023 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 20024 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 20025 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 20026 ;;		 -> STR_2(21), STR_1(21), 
 20027 ;;  _r              2  [STACK] PTR const unsigned char 
 20028 ;;		 -> STR_127(3), STR_123(3), STR_118(3), STR_113(3), 
 20029 ;;		 -> STR_108(3), STR_104(3), 
 20030 ;;  n               2  [STACK] unsigned int 
 20031 ;; Auto vars:     Size  Location     Type
 20032 ;;  r               2  [STACK] PTR const unsigned char 
 20033 ;;		 -> STR_127(3), STR_123(3), STR_118(3), STR_113(3), 
 20034 ;;		 -> STR_108(3), STR_104(3), 
 20035 ;;  l               2  [STACK] PTR const unsigned char 
 20036 ;;		 -> ct(3), STR_93(127), STR_91(3), STR_90(3), 
 20037 ;;		 -> STR_89(19), STR_88(19), STR_87(19), STR_86(19), 
 20038 ;;		 -> STR_85(19), STR_84(19), STR_83(24), STR_82(15), 
 20039 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 20040 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(3), 
 20041 ;;		 -> STR_71(21), STR_70(21), STR_69(21), STR_68(21), 
 20042 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(21), 
 20043 ;;		 -> STR_63(21), STR_62(18), STR_61(21), STR_60(21), 
 20044 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 20045 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 20046 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(21), 
 20047 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 20048 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 20049 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 20050 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 20051 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 20052 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 20053 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 20054 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 20055 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 20056 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 20057 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 20058 ;;		 -> STR_2(21), STR_1(21), 
 20059 ;; Return value:  Size  Location     Type
 20060 ;;                  2  [STACK] int 
 20061 ;; Registers used:
 20062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 20063 ;; Tracked objects:
 20064 ;;		On entry : 0/0
 20065 ;;		On exit  : 0/0
 20066 ;;		Unchanged: 0/0
 20067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20072 ;;Total ram usage:        0 bytes
 20073 ;; Hardware stack levels used:    1
 20074 ;; Hardware stack levels required when called:   15
 20075 ;; This function calls:
 20076 ;;		Nothing
 20077 ;; This function is called by:
 20078 ;;		_vfpfcnvrt
 20079 ;; This function uses a reentrant model
 20080 ;;
 20081                           
 20082                           	psect	text76
 20083  018D32                     __ptext76:
 20084                           	opt callstack 0
 20085  018D32                     _strncmp:
 20086                           	opt callstack 0
 20087                           
 20088                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20089  018D32  52E6               	movf	postinc1,f,c
 20090  018D34  52E6               	movf	postinc1,f,c
 20091  018D36  52E6               	movf	postinc1,f,c
 20092  018D38  52E6               	movf	postinc1,f,c
 20093                           
 20094                           ;stkvar	__l @ sp[(-4)+-2]
 20095                           
 20096                           ;incstack = 0
 20097 ;; hardware stack exceeded
 20098  018D3A  0EFA               	movlw	-6
 20099  018D3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20100  018D42  0EFB               	movlw	-5
 20101  018D44  006F FF8C  F00C    	movff	plusw1,btemp+11
 20102                           
 20103                           ;stkvar	_l @ sp[(-4)+2]
 20104  018D4A  0EFF               	movlw	-1
 20105  018D4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20106  018D52  0EFE               	movlw	-2
 20107  018D54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20108                           
 20109                           ;stkvar	__r @ sp[(-4)+-4]
 20110  018D5A  0EF8               	movlw	-8
 20111  018D5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20112  018D62  0EF9               	movlw	-7
 20113  018D64  006F FF8C  F00C    	movff	plusw1,btemp+11
 20114                           
 20115                           ;stkvar	_r @ sp[(-4)+0]
 20116  018D6A  0EFD               	movlw	-3
 20117  018D6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20118  018D72  0EFC               	movlw	-4
 20119  018D74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20120                           
 20121                           ;stkvar	_n @ sp[(-4)+-6]
 20122  018D7A  0EF6               	movlw	-10
 20123  018D7C  006F FF8C  F001    	movff	plusw1,btemp
 20124  018D82  0E01               	movlw	1
 20125  018D84  5E01               	subwf	btemp^0,f,c
 20126  018D86  0EF6               	movlw	-10
 20127  018D88  0060  F007  FFE3   	movff	btemp,plusw1
 20128  018D8E  0EF7               	movlw	-9
 20129  018D90  006F FF8C  F001    	movff	plusw1,btemp
 20130  018D96  0E00               	movlw	0
 20131  018D98  5A01               	subwfb	btemp^0,f,c
 20132  018D9A  0EF7               	movlw	-9
 20133  018D9C  0060  F007  FFE3   	movff	btemp,plusw1
 20134  018DA2  0EF6               	movlw	-10
 20135  018DA4  28E3               	incf	plusw1,w,c
 20136  018DA6  E13F               	bnz	l10261
 20137  018DA8  0EF7               	movlw	-9
 20138  018DAA  28E3               	incf	plusw1,w,c
 20139  018DAC  A4D8               	btfss	status,2,c
 20140  018DAE  D03B               	goto	l10261
 20141  018DB0  0E00               	movlw	0
 20142  018DB2  6E01               	movwf	btemp^0,c
 20143  018DB4  0E00               	movlw	0
 20144  018DB6  6E02               	movwf	(btemp+1)^0,c
 20145  018DB8  D0C7               	goto	l3738
 20146  018DBA                     l10259:
 20147                           
 20148                           ;stkvar	_l @ sp[(-4)+2]
 20149  018DBA  0EFE               	movlw	-2
 20150  018DBC  50E3               	movf	plusw1,w,c
 20151  018DBE  0F01               	addlw	1
 20152  018DC0  6E01               	movwf	btemp^0,c
 20153  018DC2  0EFE               	movlw	-2
 20154  018DC4  0060  F007  FFE3   	movff	btemp,plusw1
 20155  018DCA  6A01               	clrf	btemp^0,c
 20156  018DCC  0EFF               	movlw	-1
 20157  018DCE  50E3               	movf	plusw1,w,c
 20158  018DD0  2001               	addwfc	btemp^0,w,c
 20159  018DD2  6E01               	movwf	btemp^0,c
 20160  018DD4  0EFF               	movlw	-1
 20161  018DD6  0060  F007  FFE3   	movff	btemp,plusw1
 20162                           
 20163                           ;stkvar	_r @ sp[(-4)+0]
 20164  018DDC  0EFC               	movlw	-4
 20165  018DDE  50E3               	movf	plusw1,w,c
 20166  018DE0  0F01               	addlw	1
 20167  018DE2  6E01               	movwf	btemp^0,c
 20168  018DE4  0EFC               	movlw	-4
 20169  018DE6  0060  F007  FFE3   	movff	btemp,plusw1
 20170  018DEC  6A01               	clrf	btemp^0,c
 20171  018DEE  0EFD               	movlw	-3
 20172  018DF0  50E3               	movf	plusw1,w,c
 20173  018DF2  2001               	addwfc	btemp^0,w,c
 20174  018DF4  6E01               	movwf	btemp^0,c
 20175  018DF6  0EFD               	movlw	-3
 20176  018DF8  0060  F007  FFE3   	movff	btemp,plusw1
 20177                           
 20178                           ;stkvar	_n @ sp[(-4)+-6]
 20179  018DFE  0EF6               	movlw	-10
 20180  018E00  006F FF8C  F001    	movff	plusw1,btemp
 20181  018E06  0E01               	movlw	1
 20182  018E08  5E01               	subwf	btemp^0,f,c
 20183  018E0A  0EF6               	movlw	-10
 20184  018E0C  0060  F007  FFE3   	movff	btemp,plusw1
 20185  018E12  0EF7               	movlw	-9
 20186  018E14  006F FF8C  F001    	movff	plusw1,btemp
 20187  018E1A  0E00               	movlw	0
 20188  018E1C  5A01               	subwfb	btemp^0,f,c
 20189  018E1E  0EF7               	movlw	-9
 20190  018E20  0060  F007  FFE3   	movff	btemp,plusw1
 20191  018E26                     l10261:
 20192                           
 20193                           ;stkvar	_l @ sp[(-4)+2]
 20194  018E26  0EFE               	movlw	-2
 20195  018E28  006F FF8F FFF6     	movff	plusw1,tblptrl
 20196  018E2E  0EFF               	movlw	-1
 20197  018E30  006F FF8F FFF7     	movff	plusw1,tblptrh
 20198  018E36  0E00               	movlw	low (__mediumconst shr (0+16))
 20199  018E38  6EF8               	movwf	tblptru,c
 20200  018E3A  0E1F               	movlw	(high __ramtop+-1)
 20201  018E3C  64F7               	cpfsgt	tblptrh,c
 20202  018E3E  D003               	bra	u9267
 20203  018E40  0008               	tblrd		*
 20204  018E42  50F5               	movf	tablat,w,c
 20205  018E44  D007               	bra	u9260
 20206  018E46                     u9267:
 20207  018E46  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20208  018E4C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20209  018E52  50EF               	movf	indf0,w,c
 20210  018E54                     u9260:
 20211  018E54  0900               	iorlw	0
 20212  018E56  B4D8               	btfsc	status,2,c
 20213  018E58  D04A               	goto	u9300
 20214                           
 20215                           ;stkvar	_r @ sp[(-4)+0]
 20216  018E5A  50E1               	movf	fsr1l,w,c
 20217  018E5C  0FFC               	addlw	-4
 20218  018E5E  6ED9               	movwf	fsr2l,c
 20219  018E60  50E2               	movf	fsr1h,w,c
 20220  018E62  6EDA               	movwf	fsr2h,c
 20221  018E64  0EFF               	movlw	255
 20222  018E66  22DA               	addwfc	fsr2h,f,c
 20223  018E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 20224  018E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20225  018E74                     	if	0	;tblptru may be non-zero
 20226  018E74                     	endif
 20227  018E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20228  018E74  0E00               	movlw	low (__mediumconst shr (0+16))
 20229  018E76  6EF8               	movwf	tblptru,c
 20230  018E78                     	endif
 20231  018E78  0008               	tblrd		*
 20232  018E7A  50F5               	movf	tablat,w,c
 20233  018E7C  0900               	iorlw	0
 20234  018E7E  B4D8               	btfsc	status,2,c
 20235  018E80  D036               	goto	u9300
 20236                           
 20237                           ;stkvar	_n @ sp[(-4)+-6]
 20238  018E82  0EF6               	movlw	-10
 20239  018E84  006F FF8C  F001    	movff	plusw1,btemp
 20240  018E8A  0EF7               	movlw	-9
 20241  018E8C  50E3               	movf	plusw1,w,c
 20242  018E8E  1001               	iorwf	btemp^0,w,c
 20243  018E90  B4D8               	btfsc	status,2,c
 20244  018E92  D02D               	goto	u9300
 20245                           
 20246                           ;stkvar	_r @ sp[(-4)+0]
 20247  018E94  50E1               	movf	fsr1l,w,c
 20248  018E96  0FFC               	addlw	-4
 20249  018E98  6ED9               	movwf	fsr2l,c
 20250  018E9A  50E2               	movf	fsr1h,w,c
 20251  018E9C  6EDA               	movwf	fsr2h,c
 20252  018E9E  0EFF               	movlw	255
 20253  018EA0  22DA               	addwfc	fsr2h,f,c
 20254  018EA2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20255  018EA8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20256  018EAE                     	if	0	;tblptru may be non-zero
 20257  018EAE                     	endif
 20258  018EAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20259  018EAE  0E00               	movlw	low (__mediumconst shr (0+16))
 20260  018EB0  6EF8               	movwf	tblptru,c
 20261  018EB2                     	endif
 20262  018EB2  0008               	tblrd		*
 20263  018EB4  006F FFD4  F00C    	movff	tablat,btemp+11
 20264                           
 20265                           ;stkvar	_l @ sp[(-4)+2]
 20266  018EBA  0EFE               	movlw	-2
 20267  018EBC  006F FF8F FFF6     	movff	plusw1,tblptrl
 20268  018EC2  0EFF               	movlw	-1
 20269  018EC4  006F FF8F FFF7     	movff	plusw1,tblptrh
 20270  018ECA  0E00               	movlw	low (__mediumconst shr (0+16))
 20271  018ECC  6EF8               	movwf	tblptru,c
 20272  018ECE  0E1F               	movlw	(high __ramtop+-1)
 20273  018ED0  64F7               	cpfsgt	tblptrh,c
 20274  018ED2  D003               	bra	u9307
 20275  018ED4  0008               	tblrd		*
 20276  018ED6  50F5               	movf	tablat,w,c
 20277  018ED8  D007               	bra	u9305
 20278  018EDA                     u9307:
 20279  018EDA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20280  018EE0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20281  018EE6  50EF               	movf	indf0,w,c
 20282  018EE8                     u9305:
 20283  018EE8  180C               	xorwf	(btemp+11)^0,w,c
 20284  018EEA  B4D8               	btfsc	status,2,c
 20285  018EEC  D766               	goto	l10259
 20286  018EEE                     u9300:
 20287                           
 20288                           ;stkvar	_l @ sp[(-4)+2]
 20289  018EEE  0EFE               	movlw	-2
 20290  018EF0  006F FF8F FFF6     	movff	plusw1,tblptrl
 20291  018EF6  0EFF               	movlw	-1
 20292  018EF8  006F FF8F FFF7     	movff	plusw1,tblptrh
 20293  018EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 20294  018F00  6EF8               	movwf	tblptru,c
 20295  018F02  0E1F               	movlw	(high __ramtop+-1)
 20296  018F04  64F7               	cpfsgt	tblptrh,c
 20297  018F06  D003               	bra	u9317
 20298  018F08  0008               	tblrd		*
 20299  018F0A  50F5               	movf	tablat,w,c
 20300  018F0C  D007               	bra	u9310
 20301  018F0E                     u9317:
 20302  018F0E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20303  018F14  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20304  018F1A  50EF               	movf	indf0,w,c
 20305  018F1C                     u9310:
 20306  018F1C  6E01               	movwf	btemp^0,c
 20307  018F1E  6A02               	clrf	(btemp+1)^0,c
 20308                           
 20309                           ;stkvar	_r @ sp[(-4)+0]
 20310  018F20  50E1               	movf	fsr1l,w,c
 20311  018F22  0FFC               	addlw	-4
 20312  018F24  6ED9               	movwf	fsr2l,c
 20313  018F26  50E2               	movf	fsr1h,w,c
 20314  018F28  6EDA               	movwf	fsr2h,c
 20315  018F2A  0EFF               	movlw	255
 20316  018F2C  22DA               	addwfc	fsr2h,f,c
 20317  018F2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 20318  018F34  006F FF77 FFF7     	movff	postdec2,tblptrh
 20319  018F3A                     	if	0	;tblptru may be non-zero
 20320  018F3A                     	endif
 20321  018F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20322  018F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 20323  018F3C  6EF8               	movwf	tblptru,c
 20324  018F3E                     	endif
 20325  018F3E  0008               	tblrd		*
 20326  018F40  50F5               	movf	tablat,w,c
 20327  018F42  5E01               	subwf	btemp^0,f,c
 20328  018F44  0E00               	movlw	0
 20329  018F46  5A02               	subwfb	(btemp+1)^0,f,c
 20330  018F48                     l3738:
 20331                           
 20332                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 20333  018F48  0EF6               	movlw	246
 20334  018F4A  26E1               	addwf	fsr1l,f,c
 20335  018F4C  0EFF               	movlw	255
 20336  018F4E  22E2               	addwfc	fsr1h,f,c
 20337  018F50  0012               	return		;funcret
 20338  018F52                     __end_of_strncmp:
 20339                           	opt callstack 0
 20340                           
 20341 ;; *************** function _stoa *****************
 20342 ;; Defined at:
 20343 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20346 ;;		 -> f(6), NULL(0), 
 20347 ;;  s               2  [STACK] PTR unsigned char 
 20348 ;;		 -> ?_printf(2), ?_sprintf(2), STR_75(9), STR_74(12), 
 20349 ;;		 -> D.lcd(480), D(482), T(144), cp(4), 
 20350 ;;		 -> cb(4), STR_3(5), V(192), 
 20351 ;; Auto vars:     Size  Location     Type
 20352 ;;  nuls            7  [STACK] unsigned char [7]
 20353 ;;  l               2  [STACK] int 
 20354 ;;  p               2  [STACK] int 
 20355 ;;  cp              2  [STACK] PTR unsigned char 
 20356 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_75(9), 
 20357 ;;		 -> STR_74(12), D.lcd(480), D(482), T(144), 
 20358 ;;		 -> cp(4), cb(4), STR_3(5), V(192), 
 20359 ;;  w               2  [STACK] int 
 20360 ;;  i               2  [STACK] int 
 20361 ;; Return value:  Size  Location     Type
 20362 ;;                  2  [STACK] int 
 20363 ;; Registers used:
 20364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20365 ;; Tracked objects:
 20366 ;;		On entry : 0/0
 20367 ;;		On exit  : 0/0
 20368 ;;		Unchanged: 0/0
 20369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20374 ;;Total ram usage:        0 bytes
 20375 ;; Hardware stack levels used:    1
 20376 ;; Hardware stack levels required when called:   18
 20377 ;; This function calls:
 20378 ;;		_fputc
 20379 ;;		_strlen
 20380 ;; This function is called by:
 20381 ;;		_vfpfcnvrt
 20382 ;; This function uses a reentrant model
 20383 ;;
 20384                           
 20385                           	psect	text77
 20386  0180FA                     __ptext77:
 20387                           	opt callstack 0
 20388  0180FA                     _stoa:
 20389                           	opt callstack 0
 20390                           
 20391                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20392  0180FA  0E11               	movlw	17
 20393  0180FC  26E1               	addwf	fsr1l,f,c
 20394  0180FE  0E00               	movlw	0
 20395  018100  22E2               	addwfc	fsr1h,f,c
 20396                           
 20397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 20398                           
 20399                           ;incstack = 0
 20400 ;; hardware stack exceeded
 20401  018102  EE20  F100         	lfsr	2,stoa@F1166
 20402                           
 20403                           ;stkvar	_nuls @ sp[(-17)+0]
 20404  018106  0E07               	movlw	7
 20405  018108  6E01               	movwf	btemp^0,c
 20406  01810A  0EEF               	movlw	-17
 20407  01810C                     us1293999:
 20408  01810C  006F FF7B FFE3     	movff	postinc2,plusw1
 20409  018112  28E8               	incf	wreg,w,c
 20410  018114  2E01               	decfsz	btemp^0,f,c
 20411  018116  D7FA               	bra	us1293999
 20412                           
 20413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 20414                           ;stkvar	_s @ sp[(-17)+-4]
 20415  018118  0EEB               	movlw	-21
 20416  01811A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20417  018120  0EEC               	movlw	-20
 20418  018122  006F FF8C  F00C    	movff	plusw1,btemp+11
 20419                           
 20420                           ;stkvar	_cp @ sp[(-17)+11]
 20421  018128  0EFB               	movlw	-5
 20422  01812A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20423  018130  0EFA               	movlw	-6
 20424  018132  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20425                           
 20426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 20427                           ;stkvar	_cp @ sp[(-17)+11]
 20428  018138  0EFA               	movlw	-6
 20429  01813A  006F FF8C  F001    	movff	plusw1,btemp
 20430  018140  0EFB               	movlw	-5
 20431  018142  50E3               	movf	plusw1,w,c
 20432  018144  1001               	iorwf	btemp^0,w,c
 20433  018146  A4D8               	btfss	status,2,c
 20434  018148  D00E               	goto	l13807
 20435                           
 20436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 20437                           ;stkvar	_nuls @ sp[(-17)+0]
 20438  01814A  0EEF               	movlw	239
 20439  01814C  24E1               	addwf	fsr1l,w,c
 20440  01814E  6E0B               	movwf	(btemp+10)^0,c
 20441  018150  0EFF               	movlw	255
 20442  018152  20E2               	addwfc	fsr1h,w,c
 20443  018154  6E0C               	movwf	(btemp+11)^0,c
 20444                           
 20445                           ;stkvar	_cp @ sp[(-17)+11]
 20446  018156  0EFB               	movlw	-5
 20447  018158  0060  F033  FFE3   	movff	btemp+11,plusw1
 20448  01815E  0EFA               	movlw	-6
 20449  018160  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20450  018166                     l13807:
 20451                           
 20452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 20453                           ;stkvar	_cp @ sp[(-17)+11]
 20454  018166  0EFA               	movlw	-6
 20455  018168  006F FF8F FFE6     	movff	plusw1,postinc1
 20456  01816E  006F FF8F FFE6     	movff	plusw1,postinc1
 20457  018174  ECB8  F0DF         	call	_strlen	;wreg free
 20458                           
 20459                           ;stkvar	_l @ sp[(-17)+7]
 20460  018178  0EF6               	movlw	-10
 20461  01817A  0060  F007  FFE3   	movff	btemp,plusw1
 20462  018180  0EF7               	movlw	-9
 20463  018182  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20464                           
 20465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 20466                           ;stkvar	_p @ sp[(-17)+9]
 20467  018188  0EF8               	movlw	-8
 20468  01818A  0060  F0F3  FFE3   	movff	_prec,plusw1
 20469  018190  0EF9               	movlw	-7
 20470  018192  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20471                           
 20472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 20473                           ;stkvar	_p @ sp[(-17)+9]
 20474  018198  0EF9               	movlw	-7
 20475  01819A  BEE3               	btfsc	plusw1,7,c
 20476  01819C  D023               	goto	l2563
 20477                           
 20478                           ;stkvar	_l @ sp[(-17)+7]
 20479                           ;stkvar	_p @ sp[(-17)+9]
 20480  01819E  50E1               	movf	fsr1l,w,c
 20481  0181A0  0FF8               	addlw	-8
 20482  0181A2  6ED9               	movwf	fsr2l,c
 20483  0181A4  50E2               	movf	fsr1h,w,c
 20484  0181A6  6EDA               	movwf	fsr2h,c
 20485  0181A8  0EFF               	movlw	255
 20486  0181AA  22DA               	addwfc	fsr2h,f,c
 20487  0181AC  0EF6               	movlw	-10
 20488  0181AE  50E3               	movf	plusw1,w,c
 20489  0181B0  5CDE               	subwf	postinc2,w,c
 20490  0181B2  50DE               	movf	postinc2,w,c
 20491  0181B4  0A80               	xorlw	128
 20492  0181B6  6E01               	movwf	btemp^0,c
 20493  0181B8  0EF7               	movlw	-9
 20494  0181BA  50E3               	movf	plusw1,w,c
 20495  0181BC  0A80               	xorlw	128
 20496  0181BE  5801               	subwfb	btemp^0,w,c
 20497  0181C0  B0D8               	btfsc	status,0,c
 20498  0181C2  D010               	goto	l2563
 20499                           
 20500                           ;stkvar	_p @ sp[(-17)+9]
 20501                           ;stkvar	_l @ sp[(-17)+7]
 20502  0181C4  0EF8               	movlw	-8
 20503  0181C6  006F FF8C  F001    	movff	plusw1,btemp
 20504  0181CC  0EF6               	movlw	-10
 20505  0181CE  0060  F007  FFE3   	movff	btemp,plusw1
 20506  0181D4  0EF9               	movlw	-7
 20507  0181D6  006F FF8C  F001    	movff	plusw1,btemp
 20508  0181DC  0EF7               	movlw	-9
 20509  0181DE  0060  F007  FFE3   	movff	btemp,plusw1
 20510  0181E4                     l2563:
 20511                           
 20512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 20513                           ;stkvar	_l @ sp[(-17)+7]
 20514                           ;stkvar	_p @ sp[(-17)+9]
 20515  0181E4  0EF6               	movlw	-10
 20516  0181E6  006F FF8C  F001    	movff	plusw1,btemp
 20517  0181EC  0EF8               	movlw	-8
 20518  0181EE  0060  F007  FFE3   	movff	btemp,plusw1
 20519  0181F4  0EF7               	movlw	-9
 20520  0181F6  006F FF8C  F001    	movff	plusw1,btemp
 20521  0181FC  0EF9               	movlw	-7
 20522  0181FE  0060  F007  FFE3   	movff	btemp,plusw1
 20523                           
 20524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 20525                           ;stkvar	_w @ sp[(-17)+13]
 20526  018204  0EFC               	movlw	-4
 20527  018206  0060  F0EB  FFE3   	movff	_width,plusw1
 20528  01820C  0EFD               	movlw	-3
 20529  01820E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20530                           
 20531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 20532  018214  A03E               	btfss	_flags^0,0,c
 20533  018216  D01F               	goto	l13827
 20534  018218  D031               	goto	u12980
 20535  01821A                     l13823:
 20536                           
 20537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 20538                           ;stkvar	_fp @ sp[(-17)+-2]
 20539  01821A  0EED               	movlw	-19
 20540  01821C  006F FF8F FFE6     	movff	plusw1,postinc1
 20541  018222  006F FF8F FFE6     	movff	plusw1,postinc1
 20542  018228  0E20               	movlw	32
 20543  01822A  6EE6               	movwf	postinc1,c
 20544  01822C  0E00               	movlw	0
 20545  01822E  6EE6               	movwf	postinc1,c
 20546  018230  EC94  F0D4         	call	_fputc	;wreg free
 20547                           
 20548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 20549                           ;stkvar	_l @ sp[(-17)+7]
 20550  018234  0EF6               	movlw	-10
 20551  018236  50E3               	movf	plusw1,w,c
 20552  018238  0F01               	addlw	1
 20553  01823A  6E01               	movwf	btemp^0,c
 20554  01823C  0EF6               	movlw	-10
 20555  01823E  0060  F007  FFE3   	movff	btemp,plusw1
 20556  018244  6A01               	clrf	btemp^0,c
 20557  018246  0EF7               	movlw	-9
 20558  018248  50E3               	movf	plusw1,w,c
 20559  01824A  2001               	addwfc	btemp^0,w,c
 20560  01824C  6E01               	movwf	btemp^0,c
 20561  01824E  0EF7               	movlw	-9
 20562  018250  0060  F007  FFE3   	movff	btemp,plusw1
 20563  018256                     l13827:
 20564                           
 20565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 20566                           ;stkvar	_w @ sp[(-17)+13]
 20567                           ;stkvar	_l @ sp[(-17)+7]
 20568  018256  50E1               	movf	fsr1l,w,c
 20569  018258  0FF6               	addlw	-10
 20570  01825A  6ED9               	movwf	fsr2l,c
 20571  01825C  50E2               	movf	fsr1h,w,c
 20572  01825E  6EDA               	movwf	fsr2h,c
 20573  018260  0EFF               	movlw	255
 20574  018262  22DA               	addwfc	fsr2h,f,c
 20575  018264  0EFC               	movlw	-4
 20576  018266  50E3               	movf	plusw1,w,c
 20577  018268  5CDE               	subwf	postinc2,w,c
 20578  01826A  50DE               	movf	postinc2,w,c
 20579  01826C  0A80               	xorlw	128
 20580  01826E  6E01               	movwf	btemp^0,c
 20581  018270  0EFD               	movlw	-3
 20582  018272  50E3               	movf	plusw1,w,c
 20583  018274  0A80               	xorlw	128
 20584  018276  5801               	subwfb	btemp^0,w,c
 20585  018278  A0D8               	btfss	status,0,c
 20586  01827A  D7CF               	goto	l13823
 20587  01827C                     u12980:
 20588                           
 20589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 20590                           ;stkvar	_i @ sp[(-17)+15]
 20591  01827C  0EFE               	movlw	-2
 20592  01827E  6AE3               	clrf	plusw1,c
 20593  018280  0EFF               	movlw	-1
 20594  018282  6AE3               	clrf	plusw1,c
 20595                           
 20596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 20597  018284  D045               	goto	l13837
 20598  018286                     l13831:
 20599                           
 20600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 20601                           ;stkvar	_fp @ sp[(-17)+-2]
 20602  018286  0EED               	movlw	-19
 20603  018288  006F FF8F FFE6     	movff	plusw1,postinc1
 20604  01828E  006F FF8F FFE6     	movff	plusw1,postinc1
 20605                           
 20606                           ;stkvar	_cp @ sp[(-19)+11]
 20607  018294  0EF8               	movlw	-8
 20608  018296  006F FF8F FFF6     	movff	plusw1,tblptrl
 20609  01829C  0EF9               	movlw	-7
 20610  01829E  006F FF8F FFF7     	movff	plusw1,tblptrh
 20611  0182A4  0E00               	movlw	low (__mediumconst shr (0+16))
 20612  0182A6  6EF8               	movwf	tblptru,c
 20613  0182A8  0E1F               	movlw	(high __ramtop+-1)
 20614  0182AA  64F7               	cpfsgt	tblptrh,c
 20615  0182AC  D003               	bra	u12997
 20616  0182AE  0008               	tblrd		*
 20617  0182B0  50F5               	movf	tablat,w,c
 20618  0182B2  D007               	bra	u12990
 20619  0182B4                     u12997:
 20620  0182B4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20621  0182BA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20622  0182C0  50EF               	movf	indf0,w,c
 20623  0182C2                     u12990:
 20624  0182C2  6EE6               	movwf	postinc1,c
 20625  0182C4  0E00               	movlw	0
 20626  0182C6  6EE6               	movwf	postinc1,c
 20627  0182C8  EC94  F0D4         	call	_fputc	;wreg free
 20628                           
 20629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 20630                           ;stkvar	_cp @ sp[(-17)+11]
 20631  0182CC  0EFA               	movlw	-6
 20632  0182CE  50E3               	movf	plusw1,w,c
 20633  0182D0  0F01               	addlw	1
 20634  0182D2  6E01               	movwf	btemp^0,c
 20635  0182D4  0EFA               	movlw	-6
 20636  0182D6  0060  F007  FFE3   	movff	btemp,plusw1
 20637  0182DC  6A01               	clrf	btemp^0,c
 20638  0182DE  0EFB               	movlw	-5
 20639  0182E0  50E3               	movf	plusw1,w,c
 20640  0182E2  2001               	addwfc	btemp^0,w,c
 20641  0182E4  6E01               	movwf	btemp^0,c
 20642  0182E6  0EFB               	movlw	-5
 20643  0182E8  0060  F007  FFE3   	movff	btemp,plusw1
 20644                           
 20645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 20646                           ;stkvar	_i @ sp[(-17)+15]
 20647  0182EE  0EFE               	movlw	-2
 20648  0182F0  50E3               	movf	plusw1,w,c
 20649  0182F2  0F01               	addlw	1
 20650  0182F4  6E01               	movwf	btemp^0,c
 20651  0182F6  0EFE               	movlw	-2
 20652  0182F8  0060  F007  FFE3   	movff	btemp,plusw1
 20653  0182FE  6A01               	clrf	btemp^0,c
 20654  018300  0EFF               	movlw	-1
 20655  018302  50E3               	movf	plusw1,w,c
 20656  018304  2001               	addwfc	btemp^0,w,c
 20657  018306  6E01               	movwf	btemp^0,c
 20658  018308  0EFF               	movlw	-1
 20659  01830A  0060  F007  FFE3   	movff	btemp,plusw1
 20660  018310                     l13837:
 20661                           
 20662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 20663                           ;stkvar	_p @ sp[(-17)+9]
 20664                           ;stkvar	_i @ sp[(-17)+15]
 20665  018310  50E1               	movf	fsr1l,w,c
 20666  018312  0FFE               	addlw	-2
 20667  018314  6ED9               	movwf	fsr2l,c
 20668  018316  50E2               	movf	fsr1h,w,c
 20669  018318  6EDA               	movwf	fsr2h,c
 20670  01831A  0EFF               	movlw	255
 20671  01831C  22DA               	addwfc	fsr2h,f,c
 20672  01831E  0EF8               	movlw	-8
 20673  018320  50E3               	movf	plusw1,w,c
 20674  018322  5CDE               	subwf	postinc2,w,c
 20675  018324  50DE               	movf	postinc2,w,c
 20676  018326  0A80               	xorlw	128
 20677  018328  6E01               	movwf	btemp^0,c
 20678  01832A  0EF9               	movlw	-7
 20679  01832C  50E3               	movf	plusw1,w,c
 20680  01832E  0A80               	xorlw	128
 20681  018330  5801               	subwfb	btemp^0,w,c
 20682  018332  A0D8               	btfss	status,0,c
 20683  018334  D7A8               	goto	l13831
 20684                           
 20685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 20686  018336  B03E               	btfsc	_flags^0,0,c
 20687  018338  D01F               	goto	l13845
 20688  01833A  D031               	goto	u13020
 20689  01833C                     l13841:
 20690                           
 20691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 20692                           ;stkvar	_fp @ sp[(-17)+-2]
 20693  01833C  0EED               	movlw	-19
 20694  01833E  006F FF8F FFE6     	movff	plusw1,postinc1
 20695  018344  006F FF8F FFE6     	movff	plusw1,postinc1
 20696  01834A  0E20               	movlw	32
 20697  01834C  6EE6               	movwf	postinc1,c
 20698  01834E  0E00               	movlw	0
 20699  018350  6EE6               	movwf	postinc1,c
 20700  018352  EC94  F0D4         	call	_fputc	;wreg free
 20701                           
 20702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 20703                           ;stkvar	_l @ sp[(-17)+7]
 20704  018356  0EF6               	movlw	-10
 20705  018358  50E3               	movf	plusw1,w,c
 20706  01835A  0F01               	addlw	1
 20707  01835C  6E01               	movwf	btemp^0,c
 20708  01835E  0EF6               	movlw	-10
 20709  018360  0060  F007  FFE3   	movff	btemp,plusw1
 20710  018366  6A01               	clrf	btemp^0,c
 20711  018368  0EF7               	movlw	-9
 20712  01836A  50E3               	movf	plusw1,w,c
 20713  01836C  2001               	addwfc	btemp^0,w,c
 20714  01836E  6E01               	movwf	btemp^0,c
 20715  018370  0EF7               	movlw	-9
 20716  018372  0060  F007  FFE3   	movff	btemp,plusw1
 20717  018378                     l13845:
 20718                           
 20719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 20720                           ;stkvar	_w @ sp[(-17)+13]
 20721                           ;stkvar	_l @ sp[(-17)+7]
 20722  018378  50E1               	movf	fsr1l,w,c
 20723  01837A  0FF6               	addlw	-10
 20724  01837C  6ED9               	movwf	fsr2l,c
 20725  01837E  50E2               	movf	fsr1h,w,c
 20726  018380  6EDA               	movwf	fsr2h,c
 20727  018382  0EFF               	movlw	255
 20728  018384  22DA               	addwfc	fsr2h,f,c
 20729  018386  0EFC               	movlw	-4
 20730  018388  50E3               	movf	plusw1,w,c
 20731  01838A  5CDE               	subwf	postinc2,w,c
 20732  01838C  50DE               	movf	postinc2,w,c
 20733  01838E  0A80               	xorlw	128
 20734  018390  6E01               	movwf	btemp^0,c
 20735  018392  0EFD               	movlw	-3
 20736  018394  50E3               	movf	plusw1,w,c
 20737  018396  0A80               	xorlw	128
 20738  018398  5801               	subwfb	btemp^0,w,c
 20739  01839A  A0D8               	btfss	status,0,c
 20740  01839C  D7CF               	goto	l13841
 20741  01839E                     u13020:
 20742                           
 20743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 20744                           ;stkvar	_l @ sp[(-17)+7]
 20745  01839E  0EF6               	movlw	-10
 20746  0183A0  006F FF8C  F001    	movff	plusw1,btemp
 20747  0183A6  0EF7               	movlw	-9
 20748  0183A8  006F FF8C  F002    	movff	plusw1,btemp+1
 20749                           
 20750                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20751  0183AE  0EEB               	movlw	235
 20752  0183B0  26E1               	addwf	fsr1l,f,c
 20753  0183B2  0EFF               	movlw	255
 20754  0183B4  22E2               	addwfc	fsr1h,f,c
 20755  0183B6  0012               	return		;funcret
 20756  0183B8                     __end_of_stoa:
 20757                           	opt callstack 0
 20758                           
 20759 ;; *************** function _efgtoa *****************
 20760 ;; Defined at:
 20761 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20762 ;; Parameters:    Size  Location     Type
 20763 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20764 ;;		 -> f(6), NULL(0), 
 20765 ;;  f               4  [STACK] PTR struct _IO_FILE
 20766 ;;  c               1  [STACK] unsigned char 
 20767 ;; Auto vars:     Size  Location     Type
 20768 ;;  u               4  [STACK] unsigned char 
 20769 ;;  g               4  [STACK] unsigned char 
 20770 ;;  l               4  [STACK] unsigned char 
 20771 ;;  h               4  [STACK] unsigned char 
 20772 ;;  ou              4  [STACK] unsigned char 
 20773 ;;  n               2  [STACK] int 
 20774 ;;  e               2  [STACK] int 
 20775 ;;  i               2  [STACK] int 
 20776 ;;  w               2  [STACK] int 
 20777 ;;  p               2  [STACK] int 
 20778 ;;  sign            2  [STACK] int 
 20779 ;;  d               2  [STACK] int 
 20780 ;;  ne              2  [STACK] int 
 20781 ;;  m               2  [STACK] int 
 20782 ;;  pp              2  [STACK] int 
 20783 ;;  t               2  [STACK] int 
 20784 ;;  mode            1  [STACK] unsigned char 
 20785 ;;  nmode           1  [STACK] unsigned char 
 20786 ;; Return value:  Size  Location     Type
 20787 ;;                  2  [STACK] int 
 20788 ;; Registers used:
 20789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 20790 ;; Tracked objects:
 20791 ;;		On entry : 0/0
 20792 ;;		On exit  : 0/0
 20793 ;;		Unchanged: 0/0
 20794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20799 ;;Total ram usage:        0 bytes
 20800 ;; Hardware stack levels used:    1
 20801 ;; Hardware stack levels required when called:   20
 20802 ;; This function calls:
 20803 ;;		___awdiv
 20804 ;;		___awmod
 20805 ;;		___fladd
 20806 ;;		___fldiv
 20807 ;;		___fleq
 20808 ;;		___flge
 20809 ;;		___flmul
 20810 ;;		___flneg
 20811 ;;		___flsub
 20812 ;;		___fltol
 20813 ;;		___fpclassifyf
 20814 ;;		_floorf
 20815 ;;		_isupper
 20816 ;;		_pad
 20817 ;;		_strcpy
 20818 ;;		_tolower
 20819 ;; This function is called by:
 20820 ;;		_vfpfcnvrt
 20821 ;; This function uses a reentrant model
 20822 ;;
 20823                           
 20824                           	psect	text78
 20825  011292                     __ptext78:
 20826                           	opt callstack 0
 20827  011292                     _efgtoa:
 20828                           	opt callstack 0
 20829                           
 20830                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20831  011292  0E38               	movlw	56
 20832  011294  26E1               	addwf	fsr1l,f,c
 20833  011296  0E00               	movlw	0
 20834  011298  22E2               	addwfc	fsr1h,f,c
 20835                           
 20836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 20837                           ;stkvar	_sign @ sp[(-56)+42]
 20838                           
 20839                           ;incstack = 0
 20840 ;; hardware stack exceeded
 20841  01129A  0EF2               	movlw	-14
 20842  01129C  6AE3               	clrf	plusw1,c
 20843  01129E  0EF3               	movlw	-13
 20844  0112A0  6AE3               	clrf	plusw1,c
 20845                           
 20846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 20847                           ;stkvar	_f @ sp[(-56)+-6]
 20848  0112A2  0EC2               	movlw	-62
 20849  0112A4  006F FF8C  F009    	movff	plusw1,btemp+8
 20850  0112AA  0EC3               	movlw	-61
 20851  0112AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 20852  0112B2  0EC4               	movlw	-60
 20853  0112B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20854  0112BA  0EC5               	movlw	-59
 20855  0112BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20856                           
 20857                           ;stkvar	_g @ sp[(-56)+16]
 20858  0112C2  0ED8               	movlw	-40
 20859  0112C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 20860  0112CA  0ED9               	movlw	-39
 20861  0112CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20862  0112D2  0EDA               	movlw	-38
 20863  0112D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20864  0112DA  0EDB               	movlw	-37
 20865  0112DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20866                           
 20867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 20868                           ;stkvar	_g @ sp[(-56)+16]
 20869  0112E2  0EDB               	movlw	-37
 20870  0112E4  AEE3               	btfss	plusw1,7,c
 20871  0112E6  D02B               	goto	l13505
 20872                           
 20873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 20874  0112E8  0E01               	movlw	1
 20875  0112EA  6E0B               	movwf	(btemp+10)^0,c
 20876  0112EC  0E00               	movlw	0
 20877  0112EE  6E0C               	movwf	(btemp+11)^0,c
 20878                           
 20879                           ;stkvar	_sign @ sp[(-56)+42]
 20880  0112F0  0EF2               	movlw	-14
 20881  0112F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20882  0112F8  0EF3               	movlw	-13
 20883  0112FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 20884                           
 20885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 20886                           ;stkvar	_g @ sp[(-56)+16]
 20887  011300  0ED8               	movlw	-40
 20888  011302  006F FF8F FFE6     	movff	plusw1,postinc1
 20889  011308  006F FF8F FFE6     	movff	plusw1,postinc1
 20890  01130E  006F FF8F FFE6     	movff	plusw1,postinc1
 20891  011314  006F FF8F FFE6     	movff	plusw1,postinc1
 20892  01131A  ECDA  F0E6         	call	___flneg	;wreg free
 20893                           
 20894                           ;stkvar	_g @ sp[(-56)+16]
 20895  01131E  0ED8               	movlw	-40
 20896  011320  0060  F007  FFE3   	movff	btemp,plusw1
 20897  011326  0ED9               	movlw	-39
 20898  011328  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20899  01132E  0EDA               	movlw	-38
 20900  011330  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20901  011336  0EDB               	movlw	-37
 20902  011338  0060  F013  FFE3   	movff	btemp+3,plusw1
 20903  01133E                     l13505:
 20904                           
 20905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 20906                           ;stkvar	_n @ sp[(-56)+32]
 20907  01133E  0EE8               	movlw	-24
 20908  011340  6AE3               	clrf	plusw1,c
 20909  011342  0EE9               	movlw	-23
 20910  011344  6AE3               	clrf	plusw1,c
 20911                           
 20912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 20913                           ;stkvar	_w @ sp[(-56)+38]
 20914  011346  0EEE               	movlw	-18
 20915  011348  0060  F0EB  FFE3   	movff	_width,plusw1
 20916  01134E  0EEF               	movlw	-17
 20917  011350  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20918                           
 20919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 20920                           ;stkvar	_sign @ sp[(-56)+42]
 20921  011356  0EF2               	movlw	-14
 20922  011358  006F FF8C  F001    	movff	plusw1,btemp
 20923  01135E  0EF3               	movlw	-13
 20924  011360  50E3               	movf	plusw1,w,c
 20925  011362  1001               	iorwf	btemp^0,w,c
 20926  011364  A4D8               	btfss	status,2,c
 20927  011366  D002               	goto	u12430
 20928  011368  A43E               	btfss	_flags^0,2,c
 20929  01136A  D036               	goto	l13525
 20930  01136C                     u12430:
 20931                           
 20932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 20933                           ;stkvar	_sign @ sp[(-56)+42]
 20934  01136C  0EF2               	movlw	-14
 20935  01136E  006F FF8C  F001    	movff	plusw1,btemp
 20936  011374  0EF3               	movlw	-13
 20937  011376  50E3               	movf	plusw1,w,c
 20938  011378  1001               	iorwf	btemp^0,w,c
 20939  01137A  A4D8               	btfss	status,2,c
 20940  01137C  D002               	goto	l13517
 20941  01137E  0E2B               	movlw	43
 20942  011380  D001               	goto	L22
 20943  011382                     l13517:
 20944  011382  0E2D               	movlw	45
 20945  011384                     L22:
 20946  011384  6E0B               	movwf	(btemp+10)^0,c
 20947  011386  0E00               	movlw	0
 20948  011388  6E0C               	movwf	(btemp+11)^0,c
 20949                           
 20950                           ;stkvar	_efgtoa$6785 @ sp[(-56)+10]
 20951  01138A  0ED2               	movlw	-46
 20952  01138C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20953  011392  0ED3               	movlw	-45
 20954  011394  0060  F033  FFE3   	movff	btemp+11,plusw1
 20955                           
 20956                           ;stkvar	_efgtoa$6785 @ sp[(-56)+10]
 20957  01139A  0ED2               	movlw	-46
 20958  01139C  006F FF8C  F354    	movff	plusw1,_dbuf
 20959                           
 20960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 20961                           ;stkvar	_n @ sp[(-56)+32]
 20962  0113A2  0EE8               	movlw	-24
 20963  0113A4  50E3               	movf	plusw1,w,c
 20964  0113A6  0F01               	addlw	1
 20965  0113A8  6E01               	movwf	btemp^0,c
 20966  0113AA  0EE8               	movlw	-24
 20967  0113AC  0060  F007  FFE3   	movff	btemp,plusw1
 20968  0113B2  6A01               	clrf	btemp^0,c
 20969  0113B4  0EE9               	movlw	-23
 20970  0113B6  50E3               	movf	plusw1,w,c
 20971  0113B8  2001               	addwfc	btemp^0,w,c
 20972  0113BA  6E01               	movwf	btemp^0,c
 20973  0113BC  0EE9               	movlw	-23
 20974  0113BE  0060  F007  FFE3   	movff	btemp,plusw1
 20975                           
 20976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 20977                           ;stkvar	_w @ sp[(-56)+38]
 20978  0113C4  50E1               	movf	fsr1l,w,c
 20979  0113C6  0FEE               	addlw	-18
 20980  0113C8  6ED9               	movwf	fsr2l,c
 20981  0113CA  50E2               	movf	fsr1h,w,c
 20982  0113CC  6EDA               	movwf	fsr2h,c
 20983  0113CE  0EFF               	movlw	255
 20984  0113D0  22DA               	addwfc	fsr2h,f,c
 20985  0113D2  06DE               	decf	postinc2,f,c
 20986  0113D4  0E00               	movlw	0
 20987  0113D6  5ADD               	subwfb	postdec2,f,c
 20988  0113D8                     l13525:
 20989                           
 20990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 20991                           ;stkvar	_g @ sp[(-56)+16]
 20992  0113D8  0ED8               	movlw	-40
 20993  0113DA  006F FF8F FFE6     	movff	plusw1,postinc1
 20994  0113E0  006F FF8F FFE6     	movff	plusw1,postinc1
 20995  0113E6  006F FF8F FFE6     	movff	plusw1,postinc1
 20996  0113EC  006F FF8F FFE6     	movff	plusw1,postinc1
 20997  0113F2  EC47  F0CC         	call	___fpclassifyf	;wreg free
 20998  0113F6  0401               	decf	btemp^0,w,c
 20999  0113F8  1002               	iorwf	(btemp+1)^0,w,c
 21000  0113FA  A4D8               	btfss	status,2,c
 21001  0113FC  D076               	goto	l13543
 21002  0113FE  0EBF               	movlw	191
 21003  011400  6E0B               	movwf	(btemp+10)^0,c
 21004  011402  0EFF               	movlw	255
 21005  011404  6E0C               	movwf	(btemp+11)^0,c
 21006                           
 21007                           ;stkvar	_c @ sp[(-56)+-7]
 21008  011406  0EC1               	movlw	-63
 21009  011408  50E3               	movf	plusw1,w,c
 21010  01140A  6E09               	movwf	(btemp+8)^0,c
 21011  01140C  6A0A               	clrf	(btemp+9)^0,c
 21012  01140E  500B               	movf	(btemp+10)^0,w,c
 21013  011410  2609               	addwf	(btemp+8)^0,f,c
 21014  011412  500C               	movf	(btemp+11)^0,w,c
 21015  011414  220A               	addwfc	(btemp+9)^0,f,c
 21016  011416  500A               	movf	(btemp+9)^0,w,c
 21017  011418  E106               	bnz	u12460
 21018  01141A  0E1A               	movlw	26
 21019  01141C  5C09               	subwf	(btemp+8)^0,w,c
 21020  01141E  B0D8               	btfsc	status,0,c
 21021  011420  D002               	goto	u12460
 21022  011422  0E01               	movlw	1
 21023  011424  D001               	goto	u12470
 21024  011426                     u12460:
 21025  011426  0E00               	movlw	0
 21026  011428                     u12470:
 21027  011428  6E0B               	movwf	(btemp+10)^0,c
 21028  01142A  6A0C               	clrf	(btemp+11)^0,c
 21029                           
 21030                           ;stkvar	_efgtoa$6786 @ sp[(-56)+8]
 21031  01142C  0ED0               	movlw	-48
 21032  01142E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21033  011434  0ED1               	movlw	-47
 21034  011436  0060  F033  FFE3   	movff	btemp+11,plusw1
 21035                           
 21036                           ;stkvar	_efgtoa$6786 @ sp[(-56)+8]
 21037  01143C  0ED0               	movlw	-48
 21038  01143E  006F FF8C  F001    	movff	plusw1,btemp
 21039  011444  0ED1               	movlw	-47
 21040  011446  50E3               	movf	plusw1,w,c
 21041  011448  1001               	iorwf	btemp^0,w,c
 21042  01144A  B4D8               	btfsc	status,2,c
 21043  01144C  D017               	goto	l13535
 21044                           
 21045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 21046  01144E  0ED7               	movlw	low STR_94
 21047  011450  6EE6               	movwf	postinc1,c
 21048  011452  0EFF               	movlw	high STR_94
 21049  011454  6EE6               	movwf	postinc1,c
 21050                           
 21051                           ;stkvar	_n @ sp[(-58)+32]
 21052  011456  0E54               	movlw	low _dbuf
 21053  011458  6E0B               	movwf	(btemp+10)^0,c
 21054  01145A  0E03               	movlw	high _dbuf
 21055  01145C  6E0C               	movwf	(btemp+11)^0,c
 21056  01145E  0EE6               	movlw	-26
 21057  011460  50E3               	movf	plusw1,w,c
 21058  011462  260B               	addwf	(btemp+10)^0,f,c
 21059  011464  0EE7               	movlw	-25
 21060  011466  50E3               	movf	plusw1,w,c
 21061  011468  220C               	addwfc	(btemp+11)^0,f,c
 21062  01146A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21063  011470  0060  F033  FFE6   	movff	btemp+11,postinc1
 21064  011476  ECB2  F0DA         	call	_strcpy	;wreg free
 21065                           
 21066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 21067  01147A  D016               	goto	l13537
 21068  01147C                     l13535:
 21069                           
 21070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 21071  01147C  0EDF               	movlw	low STR_95
 21072  01147E  6EE6               	movwf	postinc1,c
 21073  011480  0EFF               	movlw	high STR_95
 21074  011482  6EE6               	movwf	postinc1,c
 21075                           
 21076                           ;stkvar	_n @ sp[(-58)+32]
 21077  011484  0E54               	movlw	low _dbuf
 21078  011486  6E0B               	movwf	(btemp+10)^0,c
 21079  011488  0E03               	movlw	high _dbuf
 21080  01148A  6E0C               	movwf	(btemp+11)^0,c
 21081  01148C  0EE6               	movlw	-26
 21082  01148E  50E3               	movf	plusw1,w,c
 21083  011490  260B               	addwf	(btemp+10)^0,f,c
 21084  011492  0EE7               	movlw	-25
 21085  011494  50E3               	movf	plusw1,w,c
 21086  011496  220C               	addwfc	(btemp+11)^0,f,c
 21087  011498  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21088  01149E  0060  F033  FFE6   	movff	btemp+11,postinc1
 21089  0114A4  ECB2  F0DA         	call	_strcpy	;wreg free
 21090  0114A8                     l13537:
 21091                           
 21092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 21093                           ;stkvar	_w @ sp[(-56)+38]
 21094  0114A8  50E1               	movf	fsr1l,w,c
 21095  0114AA  0FEE               	addlw	-18
 21096  0114AC  6ED9               	movwf	fsr2l,c
 21097  0114AE  50E2               	movf	fsr1h,w,c
 21098  0114B0  6EDA               	movwf	fsr2h,c
 21099  0114B2  0EFF               	movlw	255
 21100  0114B4  22DA               	addwfc	fsr2h,f,c
 21101  0114B6  0EFD               	movlw	253
 21102  0114B8  26DE               	addwf	postinc2,f,c
 21103  0114BA  0EFF               	movlw	255
 21104  0114BC  22DD               	addwfc	postdec2,f,c
 21105  0114BE                     l13539:
 21106                           
 21107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 21108                           ;stkvar	_w @ sp[(-56)+38]
 21109  0114BE  0EEE               	movlw	-18
 21110  0114C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21111  0114C6  006F FF8F FFE6     	movff	plusw1,postinc1
 21112  0114CC  0E54               	movlw	low _dbuf
 21113  0114CE  6EE6               	movwf	postinc1,c
 21114  0114D0  0E03               	movlw	high _dbuf
 21115  0114D2  6EE6               	movwf	postinc1,c
 21116                           
 21117                           ;stkvar	_fp @ sp[(-60)+-2]
 21118  0114D4  0EC2               	movlw	-62
 21119  0114D6  006F FF8F FFE6     	movff	plusw1,postinc1
 21120  0114DC  006F FF8F FFE6     	movff	plusw1,postinc1
 21121  0114E2  ECCF  F0D6         	call	_pad	;wreg free
 21122  0114E6  EF66  F092         	goto	l2481
 21123  0114EA                     l13543:
 21124                           
 21125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 21126                           ;stkvar	_g @ sp[(-56)+16]
 21127  0114EA  0ED8               	movlw	-40
 21128  0114EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21129  0114F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21130  0114F8  006F FF8F FFE6     	movff	plusw1,postinc1
 21131  0114FE  006F FF8F FFE6     	movff	plusw1,postinc1
 21132  011504  EC47  F0CC         	call	___fpclassifyf	;wreg free
 21133  011508  5001               	movf	btemp^0,w,c
 21134  01150A  1002               	iorwf	(btemp+1)^0,w,c
 21135  01150C  A4D8               	btfss	status,2,c
 21136  01150E  D056               	goto	l13561
 21137  011510  0EBF               	movlw	191
 21138  011512  6E0B               	movwf	(btemp+10)^0,c
 21139  011514  0EFF               	movlw	255
 21140  011516  6E0C               	movwf	(btemp+11)^0,c
 21141                           
 21142                           ;stkvar	_c @ sp[(-56)+-7]
 21143  011518  0EC1               	movlw	-63
 21144  01151A  50E3               	movf	plusw1,w,c
 21145  01151C  6E09               	movwf	(btemp+8)^0,c
 21146  01151E  6A0A               	clrf	(btemp+9)^0,c
 21147  011520  500B               	movf	(btemp+10)^0,w,c
 21148  011522  2609               	addwf	(btemp+8)^0,f,c
 21149  011524  500C               	movf	(btemp+11)^0,w,c
 21150  011526  220A               	addwfc	(btemp+9)^0,f,c
 21151  011528  500A               	movf	(btemp+9)^0,w,c
 21152  01152A  E106               	bnz	u12500
 21153  01152C  0E1A               	movlw	26
 21154  01152E  5C09               	subwf	(btemp+8)^0,w,c
 21155  011530  B0D8               	btfsc	status,0,c
 21156  011532  D002               	goto	u12500
 21157  011534  0E01               	movlw	1
 21158  011536  D001               	goto	u12510
 21159  011538                     u12500:
 21160  011538  0E00               	movlw	0
 21161  01153A                     u12510:
 21162  01153A  6E0B               	movwf	(btemp+10)^0,c
 21163  01153C  6A0C               	clrf	(btemp+11)^0,c
 21164                           
 21165                           ;stkvar	_efgtoa$6790 @ sp[(-56)+6]
 21166  01153E  0ECE               	movlw	-50
 21167  011540  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21168  011546  0ECF               	movlw	-49
 21169  011548  0060  F033  FFE3   	movff	btemp+11,plusw1
 21170                           
 21171                           ;stkvar	_efgtoa$6790 @ sp[(-56)+6]
 21172  01154E  0ECE               	movlw	-50
 21173  011550  006F FF8C  F001    	movff	plusw1,btemp
 21174  011556  0ECF               	movlw	-49
 21175  011558  50E3               	movf	plusw1,w,c
 21176  01155A  1001               	iorwf	btemp^0,w,c
 21177  01155C  B4D8               	btfsc	status,2,c
 21178  01155E  D017               	goto	l13553
 21179                           
 21180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 21181  011560  0EDB               	movlw	low STR_98
 21182  011562  6EE6               	movwf	postinc1,c
 21183  011564  0EFF               	movlw	high STR_98
 21184  011566  6EE6               	movwf	postinc1,c
 21185                           
 21186                           ;stkvar	_n @ sp[(-58)+32]
 21187  011568  0E54               	movlw	low _dbuf
 21188  01156A  6E0B               	movwf	(btemp+10)^0,c
 21189  01156C  0E03               	movlw	high _dbuf
 21190  01156E  6E0C               	movwf	(btemp+11)^0,c
 21191  011570  0EE6               	movlw	-26
 21192  011572  50E3               	movf	plusw1,w,c
 21193  011574  260B               	addwf	(btemp+10)^0,f,c
 21194  011576  0EE7               	movlw	-25
 21195  011578  50E3               	movf	plusw1,w,c
 21196  01157A  220C               	addwfc	(btemp+11)^0,f,c
 21197  01157C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21198  011582  0060  F033  FFE6   	movff	btemp+11,postinc1
 21199  011588  ECB2  F0DA         	call	_strcpy	;wreg free
 21200                           
 21201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 21202  01158C  D78D               	goto	l13537
 21203  01158E                     l13553:
 21204                           
 21205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 21206  01158E  0EE3               	movlw	low STR_99
 21207  011590  6EE6               	movwf	postinc1,c
 21208  011592  0EFF               	movlw	high STR_99
 21209  011594  6EE6               	movwf	postinc1,c
 21210                           
 21211                           ;stkvar	_n @ sp[(-58)+32]
 21212  011596  0E54               	movlw	low _dbuf
 21213  011598  6E0B               	movwf	(btemp+10)^0,c
 21214  01159A  0E03               	movlw	high _dbuf
 21215  01159C  6E0C               	movwf	(btemp+11)^0,c
 21216  01159E  0EE6               	movlw	-26
 21217  0115A0  50E3               	movf	plusw1,w,c
 21218  0115A2  260B               	addwf	(btemp+10)^0,f,c
 21219  0115A4  0EE7               	movlw	-25
 21220  0115A6  50E3               	movf	plusw1,w,c
 21221  0115A8  220C               	addwfc	(btemp+11)^0,f,c
 21222  0115AA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21223  0115B0  0060  F033  FFE6   	movff	btemp+11,postinc1
 21224  0115B6  ECB2  F0DA         	call	_strcpy	;wreg free
 21225  0115BA  D776               	goto	l13537
 21226  0115BC                     l13561:
 21227                           
 21228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 21229  0115BC  0E00               	movlw	0
 21230  0115BE  6E09               	movwf	(btemp+8)^0,c
 21231  0115C0  0E00               	movlw	0
 21232  0115C2  6E0A               	movwf	(btemp+9)^0,c
 21233  0115C4  0E80               	movlw	128
 21234  0115C6  6E0B               	movwf	(btemp+10)^0,c
 21235  0115C8  0E3F               	movlw	63
 21236  0115CA  6E0C               	movwf	(btemp+11)^0,c
 21237                           
 21238                           ;stkvar	_u @ sp[(-56)+12]
 21239  0115CC  0ED4               	movlw	-44
 21240  0115CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 21241  0115D4  0ED5               	movlw	-43
 21242  0115D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21243  0115DC  0ED6               	movlw	-42
 21244  0115DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21245  0115E4  0ED7               	movlw	-41
 21246  0115E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21247                           
 21248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 21249                           ;stkvar	_e @ sp[(-56)+34]
 21250  0115EC  0EEA               	movlw	-22
 21251  0115EE  6AE3               	clrf	plusw1,c
 21252  0115F0  0EEB               	movlw	-21
 21253  0115F2  6AE3               	clrf	plusw1,c
 21254                           
 21255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 21256  0115F4  0E00               	movlw	0
 21257  0115F6  6EE6               	movwf	postinc1,c
 21258  0115F8  0E00               	movlw	0
 21259  0115FA  6EE6               	movwf	postinc1,c
 21260  0115FC  0E00               	movlw	0
 21261  0115FE  6EE6               	movwf	postinc1,c
 21262  011600  0E00               	movlw	0
 21263  011602  6EE6               	movwf	postinc1,c
 21264                           
 21265                           ;stkvar	_g @ sp[(-60)+16]
 21266  011604  0ED4               	movlw	-44
 21267  011606  006F FF8F FFE6     	movff	plusw1,postinc1
 21268  01160C  006F FF8F FFE6     	movff	plusw1,postinc1
 21269  011612  006F FF8F FFE6     	movff	plusw1,postinc1
 21270  011618  006F FF8F FFE6     	movff	plusw1,postinc1
 21271  01161E  EC83  F0DB         	call	___fleq	;wreg free
 21272  011622  A001               	btfss	btemp& (0+255),0,c
 21273  011624  D039               	goto	l13573
 21274  011626  D0BC               	goto	u12550
 21275  011628                     l13569:
 21276                           
 21277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 21278  011628  0E00               	movlw	0
 21279  01162A  6EE6               	movwf	postinc1,c
 21280  01162C  0E00               	movlw	0
 21281  01162E  6EE6               	movwf	postinc1,c
 21282  011630  0E20               	movlw	32
 21283  011632  6EE6               	movwf	postinc1,c
 21284  011634  0E41               	movlw	65
 21285  011636  6EE6               	movwf	postinc1,c
 21286                           
 21287                           ;stkvar	_u @ sp[(-60)+12]
 21288  011638  0ED0               	movlw	-48
 21289  01163A  006F FF8F FFE6     	movff	plusw1,postinc1
 21290  011640  006F FF8F FFE6     	movff	plusw1,postinc1
 21291  011646  006F FF8F FFE6     	movff	plusw1,postinc1
 21292  01164C  006F FF8F FFE6     	movff	plusw1,postinc1
 21293  011652  EC52  F0A5         	call	___flmul	;wreg free
 21294                           
 21295                           ;stkvar	_u @ sp[(-56)+12]
 21296  011656  0ED4               	movlw	-44
 21297  011658  0060  F007  FFE3   	movff	btemp,plusw1
 21298  01165E  0ED5               	movlw	-43
 21299  011660  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21300  011666  0ED6               	movlw	-42
 21301  011668  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21302  01166E  0ED7               	movlw	-41
 21303  011670  0060  F013  FFE3   	movff	btemp+3,plusw1
 21304                           
 21305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 21306                           ;stkvar	_e @ sp[(-56)+34]
 21307  011676  0EEA               	movlw	-22
 21308  011678  50E3               	movf	plusw1,w,c
 21309  01167A  0F01               	addlw	1
 21310  01167C  6E01               	movwf	btemp^0,c
 21311  01167E  0EEA               	movlw	-22
 21312  011680  0060  F007  FFE3   	movff	btemp,plusw1
 21313  011686  6A01               	clrf	btemp^0,c
 21314  011688  0EEB               	movlw	-21
 21315  01168A  50E3               	movf	plusw1,w,c
 21316  01168C  2001               	addwfc	btemp^0,w,c
 21317  01168E  6E01               	movwf	btemp^0,c
 21318  011690  0EEB               	movlw	-21
 21319  011692  0060  F007  FFE3   	movff	btemp,plusw1
 21320  011698                     l13573:
 21321                           
 21322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 21323  011698  0E00               	movlw	0
 21324  01169A  6EE6               	movwf	postinc1,c
 21325  01169C  0E00               	movlw	0
 21326  01169E  6EE6               	movwf	postinc1,c
 21327  0116A0  0E20               	movlw	32
 21328  0116A2  6EE6               	movwf	postinc1,c
 21329  0116A4  0E41               	movlw	65
 21330  0116A6  6EE6               	movwf	postinc1,c
 21331                           
 21332                           ;stkvar	_u @ sp[(-60)+12]
 21333  0116A8  0ED0               	movlw	-48
 21334  0116AA  006F FF8F FFE6     	movff	plusw1,postinc1
 21335  0116B0  006F FF8F FFE6     	movff	plusw1,postinc1
 21336  0116B6  006F FF8F FFE6     	movff	plusw1,postinc1
 21337  0116BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21338  0116C2  EC52  F0A5         	call	___flmul	;wreg free
 21339  0116C6  0060  F007  FFE6   	movff	btemp,postinc1
 21340  0116CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21341  0116D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21342  0116D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 21343                           
 21344                           ;stkvar	_g @ sp[(-60)+16]
 21345  0116DE  0ED4               	movlw	-44
 21346  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 21347  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 21348  0116EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21349  0116F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21350  0116F8  EC07  F0D0         	call	___flge	;wreg free
 21351  0116FC  A001               	btfss	btemp& (0+255),0,c
 21352  0116FE  D032               	goto	l13579
 21353  011700  D793               	goto	l13569
 21354  011702                     l13575:
 21355                           
 21356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 21357  011702  0E00               	movlw	0
 21358  011704  6EE6               	movwf	postinc1,c
 21359  011706  0E00               	movlw	0
 21360  011708  6EE6               	movwf	postinc1,c
 21361  01170A  0E20               	movlw	32
 21362  01170C  6EE6               	movwf	postinc1,c
 21363  01170E  0E41               	movlw	65
 21364  011710  6EE6               	movwf	postinc1,c
 21365                           
 21366                           ;stkvar	_u @ sp[(-60)+12]
 21367  011712  0ED0               	movlw	-48
 21368  011714  006F FF8F FFE6     	movff	plusw1,postinc1
 21369  01171A  006F FF8F FFE6     	movff	plusw1,postinc1
 21370  011720  006F FF8F FFE6     	movff	plusw1,postinc1
 21371  011726  006F FF8F FFE6     	movff	plusw1,postinc1
 21372  01172C  EC45  F0AD         	call	___fldiv	;wreg free
 21373                           
 21374                           ;stkvar	_u @ sp[(-56)+12]
 21375  011730  0ED4               	movlw	-44
 21376  011732  0060  F007  FFE3   	movff	btemp,plusw1
 21377  011738  0ED5               	movlw	-43
 21378  01173A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21379  011740  0ED6               	movlw	-42
 21380  011742  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21381  011748  0ED7               	movlw	-41
 21382  01174A  0060  F013  FFE3   	movff	btemp+3,plusw1
 21383                           
 21384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 21385                           ;stkvar	_e @ sp[(-56)+34]
 21386  011750  50E1               	movf	fsr1l,w,c
 21387  011752  0FEA               	addlw	-22
 21388  011754  6ED9               	movwf	fsr2l,c
 21389  011756  50E2               	movf	fsr1h,w,c
 21390  011758  6EDA               	movwf	fsr2h,c
 21391  01175A  0EFF               	movlw	255
 21392  01175C  22DA               	addwfc	fsr2h,f,c
 21393  01175E  06DE               	decf	postinc2,f,c
 21394  011760  0E00               	movlw	0
 21395  011762  5ADD               	subwfb	postdec2,f,c
 21396  011764                     l13579:
 21397                           
 21398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 21399                           ;stkvar	_u @ sp[(-56)+12]
 21400  011764  0ED4               	movlw	-44
 21401  011766  006F FF8F FFE6     	movff	plusw1,postinc1
 21402  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 21403  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 21404  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 21405                           
 21406                           ;stkvar	_g @ sp[(-60)+16]
 21407  01177E  0ED4               	movlw	-44
 21408  011780  006F FF8F FFE6     	movff	plusw1,postinc1
 21409  011786  006F FF8F FFE6     	movff	plusw1,postinc1
 21410  01178C  006F FF8F FFE6     	movff	plusw1,postinc1
 21411  011792  006F FF8F FFE6     	movff	plusw1,postinc1
 21412  011798  EC07  F0D0         	call	___flge	;wreg free
 21413  01179C  A001               	btfss	btemp& (0+255),0,c
 21414  01179E  D7B1               	goto	l13575
 21415  0117A0                     u12550:
 21416                           
 21417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 21418                           ;stkvar	_c @ sp[(-56)+-7]
 21419  0117A0  0EC1               	movlw	-63
 21420  0117A2  50E3               	movf	plusw1,w,c
 21421  0117A4  6EE6               	movwf	postinc1,c
 21422  0117A6  0E00               	movlw	0
 21423  0117A8  6EE6               	movwf	postinc1,c
 21424  0117AA  ECFF  F0E1         	call	_tolower	;wreg free
 21425                           
 21426                           ;stkvar	_mode @ sp[(-56)+54]
 21427  0117AE  0EFE               	movlw	-2
 21428  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
 21429                           
 21430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 21431                           ;stkvar	_mode @ sp[(-56)+54]
 21432                           ;stkvar	_nmode @ sp[(-56)+55]
 21433  0117B6  0EFE               	movlw	-2
 21434  0117B8  006F FF8C  F001    	movff	plusw1,btemp
 21435  0117BE  0EFF               	movlw	-1
 21436  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
 21437                           
 21438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 21439                           ;stkvar	_mode @ sp[(-56)+54]
 21440  0117C6  0EFE               	movlw	-2
 21441  0117C8  006F FF8C  F001    	movff	plusw1,btemp
 21442  0117CE  0E67               	movlw	103
 21443  0117D0  1801               	xorwf	btemp^0,w,c
 21444  0117D2  A4D8               	btfss	status,2,c
 21445  0117D4  D025               	goto	l13597
 21446                           
 21447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 21448  0117D6  503C               	movf	_prec^0,w,c
 21449  0117D8  103D               	iorwf	(_prec+1)^0,w,c
 21450  0117DA  A4D8               	btfss	status,2,c
 21451  0117DC  D004               	goto	l13591
 21452                           
 21453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 21454  0117DE  0E00               	movlw	0
 21455  0117E0  6E3D               	movwf	(_prec+1)^0,c
 21456  0117E2  0E01               	movlw	1
 21457  0117E4  6E3C               	movwf	_prec^0,c
 21458  0117E6                     l13591:
 21459                           
 21460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 21461  0117E6  BE3D               	btfsc	(_prec+1)^0,7,c
 21462  0117E8  D005               	goto	u12580
 21463  0117EA  503D               	movf	(_prec+1)^0,w,c
 21464  0117EC  E110               	bnz	l13595
 21465  0117EE  043C               	decf	_prec^0,w,c
 21466  0117F0  B0D8               	btfsc	status,0,c
 21467  0117F2  D00D               	goto	l13595
 21468  0117F4                     u12580:
 21469  0117F4  0E06               	movlw	6
 21470  0117F6  6E0B               	movwf	(btemp+10)^0,c
 21471  0117F8  0E00               	movlw	0
 21472  0117FA  6E0C               	movwf	(btemp+11)^0,c
 21473                           
 21474                           ;stkvar	_p @ sp[(-56)+40]
 21475  0117FC  0EF0               	movlw	-16
 21476  0117FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21477  011804  0EF1               	movlw	-15
 21478  011806  0060  F033  FFE3   	movff	btemp+11,plusw1
 21479  01180C  D00C               	goto	l13603
 21480  01180E                     l13595:
 21481                           
 21482                           ;stkvar	_p @ sp[(-56)+40]
 21483  01180E  0EF0               	movlw	-16
 21484  011810  0060  F0F3  FFE3   	movff	_prec,plusw1
 21485  011816  0EF1               	movlw	-15
 21486  011818  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 21487  01181E  D003               	goto	l13603
 21488  011820                     l13597:
 21489                           
 21490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 21491  011820  AE3D               	btfss	(_prec+1)^0,7,c
 21492  011822  D7F5               	goto	l13595
 21493  011824  D7E7               	goto	u12580
 21494  011826                     l13603:
 21495                           
 21496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 21497                           ;stkvar	_mode @ sp[(-56)+54]
 21498  011826  0EFE               	movlw	-2
 21499  011828  006F FF8C  F001    	movff	plusw1,btemp
 21500  01182E  0E67               	movlw	103
 21501  011830  1801               	xorwf	btemp^0,w,c
 21502  011832  A4D8               	btfss	status,2,c
 21503  011834  D02F               	goto	l13613
 21504                           
 21505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 21506                           ;stkvar	_e @ sp[(-56)+34]
 21507  011836  0EEB               	movlw	-21
 21508  011838  AEE3               	btfss	plusw1,7,c
 21509  01183A  D00E               	goto	u12610
 21510  01183C  0EEA               	movlw	-22
 21511  01183E  006F FF8C  F001    	movff	plusw1,btemp
 21512  011844  0EFC               	movlw	252
 21513  011846  5E01               	subwf	btemp^0,f,c
 21514  011848  0EEB               	movlw	-21
 21515  01184A  006F FF8C  F001    	movff	plusw1,btemp
 21516  011850  0EFF               	movlw	255
 21517  011852  5A01               	subwfb	btemp^0,f,c
 21518  011854  A0D8               	btfss	status,0,c
 21519  011856  D018               	goto	l13611
 21520  011858                     u12610:
 21521                           
 21522                           ;stkvar	_e @ sp[(-56)+34]
 21523                           ;stkvar	_p @ sp[(-56)+40]
 21524  011858  0EF0               	movlw	-16
 21525  01185A  50E3               	movf	plusw1,w,c
 21526  01185C  0FFF               	addlw	255
 21527  01185E  6E0B               	movwf	(btemp+10)^0,c
 21528  011860  0EF1               	movlw	-15
 21529  011862  006F FF8C  F00C    	movff	plusw1,btemp+11
 21530  011868  0EFF               	movlw	255
 21531  01186A  220C               	addwfc	(btemp+11)^0,f,c
 21532  01186C  0EEA               	movlw	-22
 21533  01186E  50E3               	movf	plusw1,w,c
 21534  011870  5C0B               	subwf	(btemp+10)^0,w,c
 21535  011872  500C               	movf	(btemp+11)^0,w,c
 21536  011874  0A80               	xorlw	128
 21537  011876  6E01               	movwf	btemp^0,c
 21538  011878  0EEB               	movlw	-21
 21539  01187A  50E3               	movf	plusw1,w,c
 21540  01187C  0A80               	xorlw	128
 21541  01187E  5801               	subwfb	btemp^0,w,c
 21542  011880  A0D8               	btfss	status,0,c
 21543  011882  D002               	goto	l13611
 21544                           
 21545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 21546  011884  0E66               	movlw	102
 21547  011886  D001               	goto	L23
 21548  011888                     l13611:
 21549                           
 21550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 21551  011888  0E65               	movlw	101
 21552  01188A                     L23:
 21553  01188A  6E0C               	movwf	(btemp+11)^0,c
 21554                           
 21555                           ;stkvar	_nmode @ sp[(-56)+55]
 21556  01188C  0EFF               	movlw	-1
 21557  01188E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21558  011894                     l13613:
 21559                           
 21560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 21561                           ;stkvar	_p @ sp[(-56)+40]
 21562                           ;stkvar	_m @ sp[(-56)+48]
 21563  011894  0EF0               	movlw	-16
 21564  011896  006F FF8C  F001    	movff	plusw1,btemp
 21565  01189C  0EF8               	movlw	-8
 21566  01189E  0060  F007  FFE3   	movff	btemp,plusw1
 21567  0118A4  0EF1               	movlw	-15
 21568  0118A6  006F FF8C  F001    	movff	plusw1,btemp
 21569  0118AC  0EF9               	movlw	-7
 21570  0118AE  0060  F007  FFE3   	movff	btemp,plusw1
 21571                           
 21572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 21573                           ;stkvar	_mode @ sp[(-56)+54]
 21574  0118B4  0EFE               	movlw	-2
 21575  0118B6  006F FF8C  F001    	movff	plusw1,btemp
 21576  0118BC  0E67               	movlw	103
 21577  0118BE  1801               	xorwf	btemp^0,w,c
 21578  0118C0  A4D8               	btfss	status,2,c
 21579  0118C2  D00B               	goto	u12650
 21580                           
 21581                           ;stkvar	_nmode @ sp[(-56)+55]
 21582  0118C4  0EFF               	movlw	-1
 21583  0118C6  006F FF8C  F001    	movff	plusw1,btemp
 21584  0118CC  0E66               	movlw	102
 21585  0118CE  1801               	xorwf	btemp^0,w,c
 21586  0118D0  A4D8               	btfss	status,2,c
 21587  0118D2  D014               	goto	l2510
 21588                           
 21589                           ;stkvar	_e @ sp[(-56)+34]
 21590  0118D4  0EEB               	movlw	-21
 21591  0118D6  AEE3               	btfss	plusw1,7,c
 21592  0118D8  D011               	goto	l2510
 21593  0118DA                     u12650:
 21594                           
 21595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 21596                           ;stkvar	_m @ sp[(-56)+48]
 21597  0118DA  0EF8               	movlw	-8
 21598  0118DC  50E3               	movf	plusw1,w,c
 21599  0118DE  0F01               	addlw	1
 21600  0118E0  6E01               	movwf	btemp^0,c
 21601  0118E2  0EF8               	movlw	-8
 21602  0118E4  0060  F007  FFE3   	movff	btemp,plusw1
 21603  0118EA  6A01               	clrf	btemp^0,c
 21604  0118EC  0EF9               	movlw	-7
 21605  0118EE  50E3               	movf	plusw1,w,c
 21606  0118F0  2001               	addwfc	btemp^0,w,c
 21607  0118F2  6E01               	movwf	btemp^0,c
 21608  0118F4  0EF9               	movlw	-7
 21609  0118F6  0060  F007  FFE3   	movff	btemp,plusw1
 21610  0118FC                     l2510:
 21611                           
 21612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 21613                           ;stkvar	_nmode @ sp[(-56)+55]
 21614  0118FC  0EFF               	movlw	-1
 21615  0118FE  006F FF8C  F001    	movff	plusw1,btemp
 21616  011904  0E66               	movlw	102
 21617  011906  1801               	xorwf	btemp^0,w,c
 21618  011908  A4D8               	btfss	status,2,c
 21619  01190A  D03B               	goto	l13633
 21620                           
 21621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 21622                           ;stkvar	_e @ sp[(-56)+34]
 21623  01190C  0EEB               	movlw	-21
 21624  01190E  AEE3               	btfss	plusw1,7,c
 21625  011910  D01C               	goto	l13629
 21626                           
 21627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 21628  011912  0E00               	movlw	0
 21629  011914  6E09               	movwf	(btemp+8)^0,c
 21630  011916  0E00               	movlw	0
 21631  011918  6E0A               	movwf	(btemp+9)^0,c
 21632  01191A  0E80               	movlw	128
 21633  01191C  6E0B               	movwf	(btemp+10)^0,c
 21634  01191E  0E3F               	movlw	63
 21635  011920  6E0C               	movwf	(btemp+11)^0,c
 21636                           
 21637                           ;stkvar	_u @ sp[(-56)+12]
 21638  011922  0ED4               	movlw	-44
 21639  011924  0060  F027  FFE3   	movff	btemp+8,plusw1
 21640  01192A  0ED5               	movlw	-43
 21641  01192C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21642  011932  0ED6               	movlw	-42
 21643  011934  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21644  01193A  0ED7               	movlw	-41
 21645  01193C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21646                           
 21647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 21648                           ;stkvar	_e @ sp[(-56)+34]
 21649  011942  0EEA               	movlw	-22
 21650  011944  6AE3               	clrf	plusw1,c
 21651  011946  0EEB               	movlw	-21
 21652  011948  6AE3               	clrf	plusw1,c
 21653  01194A                     l13629:
 21654                           
 21655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 21656                           ;stkvar	_mode @ sp[(-56)+54]
 21657  01194A  0EFE               	movlw	-2
 21658  01194C  006F FF8C  F001    	movff	plusw1,btemp
 21659  011952  0E67               	movlw	103
 21660  011954  1801               	xorwf	btemp^0,w,c
 21661  011956  B4D8               	btfsc	status,2,c
 21662  011958  D014               	goto	l13633
 21663                           
 21664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 21665                           ;stkvar	_e @ sp[(-56)+34]
 21666                           ;stkvar	_m @ sp[(-56)+48]
 21667  01195A  0EF8               	movlw	-8
 21668  01195C  50E3               	movf	plusw1,w,c
 21669  01195E  6E01               	movwf	btemp^0,c
 21670  011960  0EEA               	movlw	-22
 21671  011962  50E3               	movf	plusw1,w,c
 21672  011964  2601               	addwf	btemp^0,f,c
 21673  011966  0EF8               	movlw	-8
 21674  011968  0060  F007  FFE3   	movff	btemp,plusw1
 21675  01196E  0EF9               	movlw	-7
 21676  011970  50E3               	movf	plusw1,w,c
 21677  011972  6E01               	movwf	btemp^0,c
 21678  011974  0EEB               	movlw	-21
 21679  011976  50E3               	movf	plusw1,w,c
 21680  011978  2201               	addwfc	btemp^0,f,c
 21681  01197A  0EF9               	movlw	-7
 21682  01197C  0060  F007  FFE3   	movff	btemp,plusw1
 21683  011982                     l13633:
 21684                           
 21685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 21686                           ;stkvar	_i @ sp[(-56)+36]
 21687  011982  0EEC               	movlw	-20
 21688  011984  6AE3               	clrf	plusw1,c
 21689  011986  0EED               	movlw	-19
 21690  011988  6AE3               	clrf	plusw1,c
 21691                           
 21692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 21693                           ;stkvar	_g @ sp[(-56)+16]
 21694  01198A  0ED8               	movlw	-40
 21695  01198C  006F FF8C  F009    	movff	plusw1,btemp+8
 21696  011992  0ED9               	movlw	-39
 21697  011994  006F FF8C  F00A    	movff	plusw1,btemp+9
 21698  01199A  0EDA               	movlw	-38
 21699  01199C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21700  0119A2  0EDB               	movlw	-37
 21701  0119A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21702                           
 21703                           ;stkvar	_h @ sp[(-56)+24]
 21704  0119AA  0EE0               	movlw	-32
 21705  0119AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21706  0119B2  0EE1               	movlw	-31
 21707  0119B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21708  0119BA  0EE2               	movlw	-30
 21709  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21710  0119C2  0EE3               	movlw	-29
 21711  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21712                           
 21713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 21714                           ;stkvar	_u @ sp[(-56)+12]
 21715  0119CA  0ED4               	movlw	-44
 21716  0119CC  006F FF8C  F009    	movff	plusw1,btemp+8
 21717  0119D2  0ED5               	movlw	-43
 21718  0119D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 21719  0119DA  0ED6               	movlw	-42
 21720  0119DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21721  0119E2  0ED7               	movlw	-41
 21722  0119E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21723                           
 21724                           ;stkvar	_ou @ sp[(-56)+28]
 21725  0119EA  0EE4               	movlw	-28
 21726  0119EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21727  0119F2  0EE5               	movlw	-27
 21728  0119F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21729  0119FA  0EE6               	movlw	-26
 21730  0119FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21731  011A02  0EE7               	movlw	-25
 21732  011A04  0060  F033  FFE3   	movff	btemp+11,plusw1
 21733                           
 21734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 21735  011A0A  D0D6               	goto	l13649
 21736  011A0C                     l13639:
 21737                           
 21738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 21739                           ;stkvar	_u @ sp[(-56)+12]
 21740  011A0C  0ED4               	movlw	-44
 21741  011A0E  006F FF8F FFE6     	movff	plusw1,postinc1
 21742  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 21743  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 21744  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 21745                           
 21746                           ;stkvar	_h @ sp[(-60)+24]
 21747  011A26  0EDC               	movlw	-36
 21748  011A28  006F FF8F FFE6     	movff	plusw1,postinc1
 21749  011A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 21750  011A34  006F FF8F FFE6     	movff	plusw1,postinc1
 21751  011A3A  006F FF8F FFE6     	movff	plusw1,postinc1
 21752  011A40  EC45  F0AD         	call	___fldiv	;wreg free
 21753  011A44  0060  F007  FFE6   	movff	btemp,postinc1
 21754  011A4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21755  011A50  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21756  011A56  0060  F013  FFE6   	movff	btemp+3,postinc1
 21757  011A5C  ECA3  F0B8         	call	_floorf	;wreg free
 21758                           
 21759                           ;stkvar	_l @ sp[(-56)+20]
 21760  011A60  0EDC               	movlw	-36
 21761  011A62  0060  F007  FFE3   	movff	btemp,plusw1
 21762  011A68  0EDD               	movlw	-35
 21763  011A6A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21764  011A70  0EDE               	movlw	-34
 21765  011A72  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21766  011A78  0EDF               	movlw	-33
 21767  011A7A  0060  F013  FFE3   	movff	btemp+3,plusw1
 21768                           
 21769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 21770                           ;stkvar	_l @ sp[(-56)+20]
 21771  011A80  0EDC               	movlw	-36
 21772  011A82  006F FF8F FFE6     	movff	plusw1,postinc1
 21773  011A88  006F FF8F FFE6     	movff	plusw1,postinc1
 21774  011A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 21775  011A94  006F FF8F FFE6     	movff	plusw1,postinc1
 21776  011A9A  EC4E  F0CF         	call	___fltol	;wreg free
 21777  011A9E  0060  F004  F00B   	movff	btemp,btemp+10
 21778  011AA4  0060  F008  F00C   	movff	btemp+1,btemp+11
 21779                           
 21780                           ;stkvar	_d @ sp[(-56)+44]
 21781  011AAA  0EF4               	movlw	-12
 21782  011AAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21783  011AB2  0EF5               	movlw	-11
 21784  011AB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21785                           
 21786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 21787                           ;stkvar	_u @ sp[(-56)+12]
 21788  011ABA  0ED4               	movlw	-44
 21789  011ABC  006F FF8F FFE6     	movff	plusw1,postinc1
 21790  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 21791  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 21792  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 21793                           
 21794                           ;stkvar	_l @ sp[(-60)+20]
 21795  011AD4  0ED8               	movlw	-40
 21796  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 21797  011ADC  006F FF8F FFE6     	movff	plusw1,postinc1
 21798  011AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21799  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
 21800  011AEE  EC52  F0A5         	call	___flmul	;wreg free
 21801  011AF2  0060  F007  FFE6   	movff	btemp,postinc1
 21802  011AF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21803  011AFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21804  011B04  0060  F013  FFE6   	movff	btemp+3,postinc1
 21805                           
 21806                           ;stkvar	_h @ sp[(-60)+24]
 21807  011B0A  0EDC               	movlw	-36
 21808  011B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 21809  011B12  006F FF8F FFE6     	movff	plusw1,postinc1
 21810  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
 21811  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 21812  011B24  EC8D  F0E7         	call	___flsub	;wreg free
 21813                           
 21814                           ;stkvar	_h @ sp[(-56)+24]
 21815  011B28  0EE0               	movlw	-32
 21816  011B2A  0060  F007  FFE3   	movff	btemp,plusw1
 21817  011B30  0EE1               	movlw	-31
 21818  011B32  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21819  011B38  0EE2               	movlw	-30
 21820  011B3A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21821  011B40  0EE3               	movlw	-29
 21822  011B42  0060  F013  FFE3   	movff	btemp+3,plusw1
 21823                           
 21824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 21825  011B48  0E00               	movlw	0
 21826  011B4A  6EE6               	movwf	postinc1,c
 21827  011B4C  0E00               	movlw	0
 21828  011B4E  6EE6               	movwf	postinc1,c
 21829  011B50  0E20               	movlw	32
 21830  011B52  6EE6               	movwf	postinc1,c
 21831  011B54  0E41               	movlw	65
 21832  011B56  6EE6               	movwf	postinc1,c
 21833                           
 21834                           ;stkvar	_u @ sp[(-60)+12]
 21835  011B58  0ED0               	movlw	-48
 21836  011B5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21837  011B60  006F FF8F FFE6     	movff	plusw1,postinc1
 21838  011B66  006F FF8F FFE6     	movff	plusw1,postinc1
 21839  011B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 21840  011B72  EC45  F0AD         	call	___fldiv	;wreg free
 21841                           
 21842                           ;stkvar	_u @ sp[(-56)+12]
 21843  011B76  0ED4               	movlw	-44
 21844  011B78  0060  F007  FFE3   	movff	btemp,plusw1
 21845  011B7E  0ED5               	movlw	-43
 21846  011B80  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21847  011B86  0ED6               	movlw	-42
 21848  011B88  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21849  011B8E  0ED7               	movlw	-41
 21850  011B90  0060  F013  FFE3   	movff	btemp+3,plusw1
 21851                           
 21852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 21853                           ;stkvar	_i @ sp[(-56)+36]
 21854  011B96  0EEC               	movlw	-20
 21855  011B98  50E3               	movf	plusw1,w,c
 21856  011B9A  0F01               	addlw	1
 21857  011B9C  6E01               	movwf	btemp^0,c
 21858  011B9E  0EEC               	movlw	-20
 21859  011BA0  0060  F007  FFE3   	movff	btemp,plusw1
 21860  011BA6  6A01               	clrf	btemp^0,c
 21861  011BA8  0EED               	movlw	-19
 21862  011BAA  50E3               	movf	plusw1,w,c
 21863  011BAC  2001               	addwfc	btemp^0,w,c
 21864  011BAE  6E01               	movwf	btemp^0,c
 21865  011BB0  0EED               	movlw	-19
 21866  011BB2  0060  F007  FFE3   	movff	btemp,plusw1
 21867  011BB8                     l13649:
 21868                           
 21869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 21870                           ;stkvar	_m @ sp[(-56)+48]
 21871                           ;stkvar	_i @ sp[(-56)+36]
 21872  011BB8  50E1               	movf	fsr1l,w,c
 21873  011BBA  0FEC               	addlw	-20
 21874  011BBC  6ED9               	movwf	fsr2l,c
 21875  011BBE  50E2               	movf	fsr1h,w,c
 21876  011BC0  6EDA               	movwf	fsr2h,c
 21877  011BC2  0EFF               	movlw	255
 21878  011BC4  22DA               	addwfc	fsr2h,f,c
 21879  011BC6  0EF8               	movlw	-8
 21880  011BC8  50E3               	movf	plusw1,w,c
 21881  011BCA  5CDE               	subwf	postinc2,w,c
 21882  011BCC  50DE               	movf	postinc2,w,c
 21883  011BCE  0A80               	xorlw	128
 21884  011BD0  6E01               	movwf	btemp^0,c
 21885  011BD2  0EF9               	movlw	-7
 21886  011BD4  50E3               	movf	plusw1,w,c
 21887  011BD6  0A80               	xorlw	128
 21888  011BD8  5801               	subwfb	btemp^0,w,c
 21889  011BDA  A0D8               	btfss	status,0,c
 21890  011BDC  D717               	goto	l13639
 21891                           
 21892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 21893  011BDE  0E00               	movlw	0
 21894  011BE0  6EE6               	movwf	postinc1,c
 21895  011BE2  0E00               	movlw	0
 21896  011BE4  6EE6               	movwf	postinc1,c
 21897  011BE6  0EA0               	movlw	160
 21898  011BE8  6EE6               	movwf	postinc1,c
 21899  011BEA  0E40               	movlw	64
 21900  011BEC  6EE6               	movwf	postinc1,c
 21901                           
 21902                           ;stkvar	_u @ sp[(-60)+12]
 21903  011BEE  0ED0               	movlw	-48
 21904  011BF0  006F FF8F FFE6     	movff	plusw1,postinc1
 21905  011BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 21906  011BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 21907  011C02  006F FF8F FFE6     	movff	plusw1,postinc1
 21908  011C08  EC52  F0A5         	call	___flmul	;wreg free
 21909                           
 21910                           ;stkvar	_l @ sp[(-56)+20]
 21911  011C0C  0EDC               	movlw	-36
 21912  011C0E  0060  F007  FFE3   	movff	btemp,plusw1
 21913  011C14  0EDD               	movlw	-35
 21914  011C16  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21915  011C1C  0EDE               	movlw	-34
 21916  011C1E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21917  011C24  0EDF               	movlw	-33
 21918  011C26  0060  F013  FFE3   	movff	btemp+3,plusw1
 21919                           
 21920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 21921                           ;stkvar	_l @ sp[(-56)+20]
 21922  011C2C  0EDC               	movlw	-36
 21923  011C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 21924  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 21925  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 21926  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 21927                           
 21928                           ;stkvar	_h @ sp[(-60)+24]
 21929  011C46  0EDC               	movlw	-36
 21930  011C48  006F FF8F FFE6     	movff	plusw1,postinc1
 21931  011C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 21932  011C54  006F FF8F FFE6     	movff	plusw1,postinc1
 21933  011C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21934  011C60  EC07  F0D0         	call	___flge	;wreg free
 21935  011C64  A001               	btfss	btemp& (0+255),0,c
 21936  011C66  D021               	goto	u12720
 21937                           
 21938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 21939                           ;stkvar	_l @ sp[(-56)+20]
 21940                           
 21941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 21942                           
 21943                           ;stkvar	_l @ sp[(-56)+20]
 21944                           
 21945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 21946  011C68  0EDC               	movlw	-36
 21947  011C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 21948  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 21949  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 21950  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21951                           
 21952                           ;stkvar	_h @ sp[(-60)+24]
 21953  011C82  0EDC               	movlw	-36
 21954  011C84  006F FF8F FFE6     	movff	plusw1,postinc1
 21955  011C8A  006F FF8F FFE6     	movff	plusw1,postinc1
 21956  011C90  006F FF8F FFE6     	movff	plusw1,postinc1
 21957  011C96  006F FF8F FFE6     	movff	plusw1,postinc1
 21958  011C9C  EC83  F0DB         	call	___fleq	;wreg free
 21959  011CA0  A001               	btfss	btemp& (0+255),0,c
 21960  011CA2  D01B               	goto	l13663
 21961                           
 21962                           ;stkvar	_d @ sp[(-56)+44]
 21963  011CA4  0EF4               	movlw	-12
 21964  011CA6  B0E3               	btfsc	plusw1,0,c
 21965  011CA8  D018               	goto	l13663
 21966  011CAA                     u12720:
 21967                           
 21968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 21969  011CAA  0E00               	movlw	0
 21970  011CAC  6E09               	movwf	(btemp+8)^0,c
 21971  011CAE  0E00               	movlw	0
 21972  011CB0  6E0A               	movwf	(btemp+9)^0,c
 21973  011CB2  0E00               	movlw	0
 21974  011CB4  6E0B               	movwf	(btemp+10)^0,c
 21975  011CB6  0E00               	movlw	0
 21976  011CB8  6E0C               	movwf	(btemp+11)^0,c
 21977                           
 21978                           ;stkvar	_l @ sp[(-56)+20]
 21979  011CBA  0EDC               	movlw	-36
 21980  011CBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21981  011CC2  0EDD               	movlw	-35
 21982  011CC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21983  011CCA  0EDE               	movlw	-34
 21984  011CCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21985  011CD2  0EDF               	movlw	-33
 21986  011CD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21987  011CDA                     l13663:
 21988                           
 21989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 21990                           ;stkvar	_l @ sp[(-56)+20]
 21991  011CDA  0EDC               	movlw	-36
 21992  011CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 21993  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21994  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 21995  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 21996                           
 21997                           ;stkvar	_g @ sp[(-60)+16]
 21998  011CF4  0ED4               	movlw	-44
 21999  011CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 22000  011CFC  006F FF8F FFE6     	movff	plusw1,postinc1
 22001  011D02  006F FF8F FFE6     	movff	plusw1,postinc1
 22002  011D08  006F FF8F FFE6     	movff	plusw1,postinc1
 22003  011D0E  EC67  F0A9         	call	___fladd	;wreg free
 22004                           
 22005                           ;stkvar	_h @ sp[(-56)+24]
 22006  011D12  0EE0               	movlw	-32
 22007  011D14  0060  F007  FFE3   	movff	btemp,plusw1
 22008  011D1A  0EE1               	movlw	-31
 22009  011D1C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22010  011D22  0EE2               	movlw	-30
 22011  011D24  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22012  011D2A  0EE3               	movlw	-29
 22013  011D2C  0060  F013  FFE3   	movff	btemp+3,plusw1
 22014                           
 22015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 22016                           ;stkvar	_ou @ sp[(-56)+28]
 22017  011D32  0EE4               	movlw	-28
 22018  011D34  006F FF8C  F009    	movff	plusw1,btemp+8
 22019  011D3A  0EE5               	movlw	-27
 22020  011D3C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22021  011D42  0EE6               	movlw	-26
 22022  011D44  006F FF8C  F00B    	movff	plusw1,btemp+10
 22023  011D4A  0EE7               	movlw	-25
 22024  011D4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22025                           
 22026                           ;stkvar	_u @ sp[(-56)+12]
 22027  011D52  0ED4               	movlw	-44
 22028  011D54  0060  F027  FFE3   	movff	btemp+8,plusw1
 22029  011D5A  0ED5               	movlw	-43
 22030  011D5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22031  011D62  0ED6               	movlw	-42
 22032  011D64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22033  011D6A  0ED7               	movlw	-41
 22034  011D6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22035                           
 22036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 22037                           ;stkvar	_nmode @ sp[(-56)+55]
 22038  011D72  0EFF               	movlw	-1
 22039  011D74  006F FF8C  F001    	movff	plusw1,btemp
 22040  011D7A  0E65               	movlw	101
 22041  011D7C  1801               	xorwf	btemp^0,w,c
 22042  011D7E  B4D8               	btfsc	status,2,c
 22043  011D80  D011               	goto	l13671
 22044                           
 22045                           ;stkvar	_e @ sp[(-56)+34]
 22046                           ;stkvar	_ne @ sp[(-56)+46]
 22047  011D82  0EEA               	movlw	-22
 22048  011D84  006F FF8C  F001    	movff	plusw1,btemp
 22049  011D8A  0EF6               	movlw	-10
 22050  011D8C  0060  F007  FFE3   	movff	btemp,plusw1
 22051  011D92  0EEB               	movlw	-21
 22052  011D94  006F FF8C  F001    	movff	plusw1,btemp
 22053  011D9A  0EF7               	movlw	-9
 22054  011D9C  0060  F007  FFE3   	movff	btemp,plusw1
 22055  011DA2  D004               	goto	l2525
 22056  011DA4                     l13671:
 22057                           
 22058                           ;stkvar	_ne @ sp[(-56)+46]
 22059  011DA4  0EF6               	movlw	-10
 22060  011DA6  6AE3               	clrf	plusw1,c
 22061  011DA8  0EF7               	movlw	-9
 22062  011DAA  6AE3               	clrf	plusw1,c
 22063  011DAC                     l2525:
 22064                           
 22065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 22066                           ;stkvar	_pp @ sp[(-56)+50]
 22067  011DAC  0EFA               	movlw	-6
 22068  011DAE  6AE3               	clrf	plusw1,c
 22069  011DB0  0EFB               	movlw	-5
 22070  011DB2  6AE3               	clrf	plusw1,c
 22071                           
 22072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 22073                           ;stkvar	_t @ sp[(-56)+52]
 22074  011DB4  0EFC               	movlw	-4
 22075  011DB6  6AE3               	clrf	plusw1,c
 22076  011DB8  0EFD               	movlw	-3
 22077  011DBA  6AE3               	clrf	plusw1,c
 22078                           
 22079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 22080                           ;stkvar	_i @ sp[(-56)+36]
 22081  011DBC  0EEC               	movlw	-20
 22082  011DBE  6AE3               	clrf	plusw1,c
 22083  011DC0  0EED               	movlw	-19
 22084  011DC2  6AE3               	clrf	plusw1,c
 22085                           
 22086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 22087  011DC4  D1B7               	goto	l13723
 22088  011DC6                     l13673:
 22089                           
 22090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 22091                           ;stkvar	_u @ sp[(-56)+12]
 22092  011DC6  0ED4               	movlw	-44
 22093  011DC8  006F FF8F FFE6     	movff	plusw1,postinc1
 22094  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 22095  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 22096  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 22097                           
 22098                           ;stkvar	_h @ sp[(-60)+24]
 22099  011DE0  0EDC               	movlw	-36
 22100  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 22101  011DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 22102  011DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 22103  011DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 22104  011DFA  EC45  F0AD         	call	___fldiv	;wreg free
 22105  011DFE  0060  F007  FFE6   	movff	btemp,postinc1
 22106  011E04  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22107  011E0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22108  011E10  0060  F013  FFE6   	movff	btemp+3,postinc1
 22109  011E16  ECA3  F0B8         	call	_floorf	;wreg free
 22110                           
 22111                           ;stkvar	_l @ sp[(-56)+20]
 22112  011E1A  0EDC               	movlw	-36
 22113  011E1C  0060  F007  FFE3   	movff	btemp,plusw1
 22114  011E22  0EDD               	movlw	-35
 22115  011E24  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22116  011E2A  0EDE               	movlw	-34
 22117  011E2C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22118  011E32  0EDF               	movlw	-33
 22119  011E34  0060  F013  FFE3   	movff	btemp+3,plusw1
 22120                           
 22121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 22122                           ;stkvar	_l @ sp[(-56)+20]
 22123  011E3A  0EDC               	movlw	-36
 22124  011E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 22125  011E42  006F FF8F FFE6     	movff	plusw1,postinc1
 22126  011E48  006F FF8F FFE6     	movff	plusw1,postinc1
 22127  011E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 22128  011E54  EC4E  F0CF         	call	___fltol	;wreg free
 22129  011E58  0060  F004  F00B   	movff	btemp,btemp+10
 22130  011E5E  0060  F008  F00C   	movff	btemp+1,btemp+11
 22131                           
 22132                           ;stkvar	_d @ sp[(-56)+44]
 22133  011E64  0EF4               	movlw	-12
 22134  011E66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22135  011E6C  0EF5               	movlw	-11
 22136  011E6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22137                           
 22138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 22139  011E74  B83E               	btfsc	_flags^0,4,c
 22140  011E76  D026               	goto	l13687
 22141                           
 22142                           ;stkvar	_d @ sp[(-56)+44]
 22143  011E78  0EF4               	movlw	-12
 22144  011E7A  006F FF8C  F001    	movff	plusw1,btemp
 22145  011E80  0EF5               	movlw	-11
 22146  011E82  50E3               	movf	plusw1,w,c
 22147  011E84  1001               	iorwf	btemp^0,w,c
 22148  011E86  A4D8               	btfss	status,2,c
 22149  011E88  D01D               	goto	l13687
 22150                           
 22151                           ;stkvar	_mode @ sp[(-56)+54]
 22152  011E8A  0EFE               	movlw	-2
 22153  011E8C  006F FF8C  F001    	movff	plusw1,btemp
 22154  011E92  0E67               	movlw	103
 22155  011E94  1801               	xorwf	btemp^0,w,c
 22156  011E96  A4D8               	btfss	status,2,c
 22157  011E98  D015               	goto	l13687
 22158                           
 22159                           ;stkvar	_ne @ sp[(-56)+46]
 22160  011E9A  0EF7               	movlw	-9
 22161  011E9C  AEE3               	btfss	plusw1,7,c
 22162  011E9E  D012               	goto	l13687
 22163                           
 22164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 22165                           ;stkvar	_t @ sp[(-56)+52]
 22166  011EA0  0EFC               	movlw	-4
 22167  011EA2  50E3               	movf	plusw1,w,c
 22168  011EA4  0F01               	addlw	1
 22169  011EA6  6E01               	movwf	btemp^0,c
 22170  011EA8  0EFC               	movlw	-4
 22171  011EAA  0060  F007  FFE3   	movff	btemp,plusw1
 22172  011EB0  6A01               	clrf	btemp^0,c
 22173  011EB2  0EFD               	movlw	-3
 22174  011EB4  50E3               	movf	plusw1,w,c
 22175  011EB6  2001               	addwfc	btemp^0,w,c
 22176  011EB8  6E01               	movwf	btemp^0,c
 22177  011EBA  0EFD               	movlw	-3
 22178  011EBC  0060  F007  FFE3   	movff	btemp,plusw1
 22179                           
 22180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 22181  011EC2  D0AF               	goto	l13715
 22182  011EC4                     l13687:
 22183                           
 22184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 22185                           ;stkvar	_pp @ sp[(-56)+50]
 22186  011EC4  0EFA               	movlw	-6
 22187  011EC6  006F FF8C  F001    	movff	plusw1,btemp
 22188  011ECC  0EFB               	movlw	-5
 22189  011ECE  50E3               	movf	plusw1,w,c
 22190  011ED0  1001               	iorwf	btemp^0,w,c
 22191  011ED2  A4D8               	btfss	status,2,c
 22192  011ED4  D070               	goto	l13707
 22193                           
 22194                           ;stkvar	_ne @ sp[(-56)+46]
 22195  011ED6  0EF7               	movlw	-9
 22196  011ED8  AEE3               	btfss	plusw1,7,c
 22197  011EDA  D06D               	goto	l13707
 22198                           
 22199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 22200                           ;stkvar	_n @ sp[(-56)+32]
 22201  011EDC  0EE8               	movlw	-24
 22202  011EDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22203  011EE4  0EE9               	movlw	-23
 22204  011EE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22205  011EEC  0E54               	movlw	low _dbuf
 22206  011EEE  240B               	addwf	(btemp+10)^0,w,c
 22207  011EF0  6ED9               	movwf	fsr2l,c
 22208  011EF2  0E03               	movlw	high _dbuf
 22209  011EF4  200C               	addwfc	(btemp+11)^0,w,c
 22210  011EF6  6EDA               	movwf	fsr2h,c
 22211  011EF8  0E2E               	movlw	46
 22212  011EFA  6EDF               	movwf	indf2,c
 22213                           
 22214                           ;stkvar	_n @ sp[(-56)+32]
 22215  011EFC  0EE8               	movlw	-24
 22216  011EFE  50E3               	movf	plusw1,w,c
 22217  011F00  0F01               	addlw	1
 22218  011F02  6E01               	movwf	btemp^0,c
 22219  011F04  0EE8               	movlw	-24
 22220  011F06  0060  F007  FFE3   	movff	btemp,plusw1
 22221  011F0C  6A01               	clrf	btemp^0,c
 22222  011F0E  0EE9               	movlw	-23
 22223  011F10  50E3               	movf	plusw1,w,c
 22224  011F12  2001               	addwfc	btemp^0,w,c
 22225  011F14  6E01               	movwf	btemp^0,c
 22226  011F16  0EE9               	movlw	-23
 22227  011F18  0060  F007  FFE3   	movff	btemp,plusw1
 22228                           
 22229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 22230                           ;stkvar	_w @ sp[(-56)+38]
 22231  011F1E  50E1               	movf	fsr1l,w,c
 22232  011F20  0FEE               	addlw	-18
 22233  011F22  6ED9               	movwf	fsr2l,c
 22234  011F24  50E2               	movf	fsr1h,w,c
 22235  011F26  6EDA               	movwf	fsr2h,c
 22236  011F28  0EFF               	movlw	255
 22237  011F2A  22DA               	addwfc	fsr2h,f,c
 22238  011F2C  06DE               	decf	postinc2,f,c
 22239  011F2E  0E00               	movlw	0
 22240  011F30  5ADD               	subwfb	postdec2,f,c
 22241                           
 22242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 22243  011F32  0E01               	movlw	1
 22244  011F34  6E0B               	movwf	(btemp+10)^0,c
 22245  011F36  0E00               	movlw	0
 22246  011F38  6E0C               	movwf	(btemp+11)^0,c
 22247                           
 22248                           ;stkvar	_pp @ sp[(-56)+50]
 22249  011F3A  0EFA               	movlw	-6
 22250  011F3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22251  011F42  0EFB               	movlw	-5
 22252  011F44  0060  F033  FFE3   	movff	btemp+11,plusw1
 22253  011F4A  D035               	goto	l13707
 22254  011F4C                     l13699:
 22255                           
 22256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 22257                           ;stkvar	_n @ sp[(-56)+32]
 22258  011F4C  0EE8               	movlw	-24
 22259  011F4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22260  011F54  0EE9               	movlw	-23
 22261  011F56  006F FF8C  F00C    	movff	plusw1,btemp+11
 22262  011F5C  0E54               	movlw	low _dbuf
 22263  011F5E  240B               	addwf	(btemp+10)^0,w,c
 22264  011F60  6ED9               	movwf	fsr2l,c
 22265  011F62  0E03               	movlw	high _dbuf
 22266  011F64  200C               	addwfc	(btemp+11)^0,w,c
 22267  011F66  6EDA               	movwf	fsr2h,c
 22268  011F68  0E30               	movlw	48
 22269  011F6A  6EDF               	movwf	indf2,c
 22270                           
 22271                           ;stkvar	_n @ sp[(-56)+32]
 22272  011F6C  0EE8               	movlw	-24
 22273  011F6E  50E3               	movf	plusw1,w,c
 22274  011F70  0F01               	addlw	1
 22275  011F72  6E01               	movwf	btemp^0,c
 22276  011F74  0EE8               	movlw	-24
 22277  011F76  0060  F007  FFE3   	movff	btemp,plusw1
 22278  011F7C  6A01               	clrf	btemp^0,c
 22279  011F7E  0EE9               	movlw	-23
 22280  011F80  50E3               	movf	plusw1,w,c
 22281  011F82  2001               	addwfc	btemp^0,w,c
 22282  011F84  6E01               	movwf	btemp^0,c
 22283  011F86  0EE9               	movlw	-23
 22284  011F88  0060  F007  FFE3   	movff	btemp,plusw1
 22285                           
 22286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 22287                           ;stkvar	_w @ sp[(-56)+38]
 22288  011F8E  50E1               	movf	fsr1l,w,c
 22289  011F90  0FEE               	addlw	-18
 22290  011F92  6ED9               	movwf	fsr2l,c
 22291  011F94  50E2               	movf	fsr1h,w,c
 22292  011F96  6EDA               	movwf	fsr2h,c
 22293  011F98  0EFF               	movlw	255
 22294  011F9A  22DA               	addwfc	fsr2h,f,c
 22295  011F9C  06DE               	decf	postinc2,f,c
 22296  011F9E  0E00               	movlw	0
 22297  011FA0  5ADD               	subwfb	postdec2,f,c
 22298                           
 22299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 22300                           ;stkvar	_t @ sp[(-56)+52]
 22301  011FA2  50E1               	movf	fsr1l,w,c
 22302  011FA4  0FFC               	addlw	-4
 22303  011FA6  6ED9               	movwf	fsr2l,c
 22304  011FA8  50E2               	movf	fsr1h,w,c
 22305  011FAA  6EDA               	movwf	fsr2h,c
 22306  011FAC  0EFF               	movlw	255
 22307  011FAE  22DA               	addwfc	fsr2h,f,c
 22308  011FB0  06DE               	decf	postinc2,f,c
 22309  011FB2  0E00               	movlw	0
 22310  011FB4  5ADD               	subwfb	postdec2,f,c
 22311  011FB6                     l13707:
 22312                           
 22313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 22314                           ;stkvar	_t @ sp[(-56)+52]
 22315  011FB6  0EFC               	movlw	-4
 22316  011FB8  006F FF8C  F001    	movff	plusw1,btemp
 22317  011FBE  0EFD               	movlw	-3
 22318  011FC0  50E3               	movf	plusw1,w,c
 22319  011FC2  1001               	iorwf	btemp^0,w,c
 22320  011FC4  A4D8               	btfss	status,2,c
 22321  011FC6  D7C2               	goto	l13699
 22322                           
 22323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 22324                           ;stkvar	_n @ sp[(-56)+32]
 22325  011FC8  0EE8               	movlw	-24
 22326  011FCA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22327  011FD0  0EE9               	movlw	-23
 22328  011FD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22329  011FD8  0E54               	movlw	low _dbuf
 22330  011FDA  240B               	addwf	(btemp+10)^0,w,c
 22331  011FDC  6ED9               	movwf	fsr2l,c
 22332  011FDE  0E03               	movlw	high _dbuf
 22333  011FE0  200C               	addwfc	(btemp+11)^0,w,c
 22334  011FE2  6EDA               	movwf	fsr2h,c
 22335                           
 22336                           ;stkvar	_d @ sp[(-56)+44]
 22337  011FE4  0EF4               	movlw	-12
 22338  011FE6  50E3               	movf	plusw1,w,c
 22339  011FE8  0F30               	addlw	48
 22340  011FEA  6EDF               	movwf	indf2,c
 22341                           
 22342                           ;stkvar	_n @ sp[(-56)+32]
 22343  011FEC  0EE8               	movlw	-24
 22344  011FEE  50E3               	movf	plusw1,w,c
 22345  011FF0  0F01               	addlw	1
 22346  011FF2  6E01               	movwf	btemp^0,c
 22347  011FF4  0EE8               	movlw	-24
 22348  011FF6  0060  F007  FFE3   	movff	btemp,plusw1
 22349  011FFC  6A01               	clrf	btemp^0,c
 22350  011FFE  0EE9               	movlw	-23
 22351  012000  50E3               	movf	plusw1,w,c
 22352  012002  2001               	addwfc	btemp^0,w,c
 22353  012004  6E01               	movwf	btemp^0,c
 22354  012006  0EE9               	movlw	-23
 22355  012008  0060  F007  FFE3   	movff	btemp,plusw1
 22356                           
 22357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 22358                           ;stkvar	_w @ sp[(-56)+38]
 22359  01200E  50E1               	movf	fsr1l,w,c
 22360  012010  0FEE               	addlw	-18
 22361  012012  6ED9               	movwf	fsr2l,c
 22362  012014  50E2               	movf	fsr1h,w,c
 22363  012016  6EDA               	movwf	fsr2h,c
 22364  012018  0EFF               	movlw	255
 22365  01201A  22DA               	addwfc	fsr2h,f,c
 22366  01201C  06DE               	decf	postinc2,f,c
 22367  01201E  0E00               	movlw	0
 22368  012020  5ADD               	subwfb	postdec2,f,c
 22369  012022                     l13715:
 22370                           
 22371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 22372                           ;stkvar	_u @ sp[(-56)+12]
 22373  012022  0ED4               	movlw	-44
 22374  012024  006F FF8F FFE6     	movff	plusw1,postinc1
 22375  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 22376  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 22377  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 22378                           
 22379                           ;stkvar	_l @ sp[(-60)+20]
 22380  01203C  0ED8               	movlw	-40
 22381  01203E  006F FF8F FFE6     	movff	plusw1,postinc1
 22382  012044  006F FF8F FFE6     	movff	plusw1,postinc1
 22383  01204A  006F FF8F FFE6     	movff	plusw1,postinc1
 22384  012050  006F FF8F FFE6     	movff	plusw1,postinc1
 22385  012056  EC52  F0A5         	call	___flmul	;wreg free
 22386  01205A  0060  F007  FFE6   	movff	btemp,postinc1
 22387  012060  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22388  012066  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22389  01206C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22390                           
 22391                           ;stkvar	_h @ sp[(-60)+24]
 22392  012072  0EDC               	movlw	-36
 22393  012074  006F FF8F FFE6     	movff	plusw1,postinc1
 22394  01207A  006F FF8F FFE6     	movff	plusw1,postinc1
 22395  012080  006F FF8F FFE6     	movff	plusw1,postinc1
 22396  012086  006F FF8F FFE6     	movff	plusw1,postinc1
 22397  01208C  EC8D  F0E7         	call	___flsub	;wreg free
 22398                           
 22399                           ;stkvar	_h @ sp[(-56)+24]
 22400  012090  0EE0               	movlw	-32
 22401  012092  0060  F007  FFE3   	movff	btemp,plusw1
 22402  012098  0EE1               	movlw	-31
 22403  01209A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22404  0120A0  0EE2               	movlw	-30
 22405  0120A2  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22406  0120A8  0EE3               	movlw	-29
 22407  0120AA  0060  F013  FFE3   	movff	btemp+3,plusw1
 22408                           
 22409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 22410  0120B0  0E00               	movlw	0
 22411  0120B2  6EE6               	movwf	postinc1,c
 22412  0120B4  0E00               	movlw	0
 22413  0120B6  6EE6               	movwf	postinc1,c
 22414  0120B8  0E20               	movlw	32
 22415  0120BA  6EE6               	movwf	postinc1,c
 22416  0120BC  0E41               	movlw	65
 22417  0120BE  6EE6               	movwf	postinc1,c
 22418                           
 22419                           ;stkvar	_u @ sp[(-60)+12]
 22420  0120C0  0ED0               	movlw	-48
 22421  0120C2  006F FF8F FFE6     	movff	plusw1,postinc1
 22422  0120C8  006F FF8F FFE6     	movff	plusw1,postinc1
 22423  0120CE  006F FF8F FFE6     	movff	plusw1,postinc1
 22424  0120D4  006F FF8F FFE6     	movff	plusw1,postinc1
 22425  0120DA  EC45  F0AD         	call	___fldiv	;wreg free
 22426                           
 22427                           ;stkvar	_u @ sp[(-56)+12]
 22428  0120DE  0ED4               	movlw	-44
 22429  0120E0  0060  F007  FFE3   	movff	btemp,plusw1
 22430  0120E6  0ED5               	movlw	-43
 22431  0120E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22432  0120EE  0ED6               	movlw	-42
 22433  0120F0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22434  0120F6  0ED7               	movlw	-41
 22435  0120F8  0060  F013  FFE3   	movff	btemp+3,plusw1
 22436                           
 22437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 22438                           ;stkvar	_ne @ sp[(-56)+46]
 22439  0120FE  50E1               	movf	fsr1l,w,c
 22440  012100  0FF6               	addlw	-10
 22441  012102  6ED9               	movwf	fsr2l,c
 22442  012104  50E2               	movf	fsr1h,w,c
 22443  012106  6EDA               	movwf	fsr2h,c
 22444  012108  0EFF               	movlw	255
 22445  01210A  22DA               	addwfc	fsr2h,f,c
 22446  01210C  06DE               	decf	postinc2,f,c
 22447  01210E  0E00               	movlw	0
 22448  012110  5ADD               	subwfb	postdec2,f,c
 22449                           
 22450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 22451                           ;stkvar	_i @ sp[(-56)+36]
 22452  012112  0EEC               	movlw	-20
 22453  012114  50E3               	movf	plusw1,w,c
 22454  012116  0F01               	addlw	1
 22455  012118  6E01               	movwf	btemp^0,c
 22456  01211A  0EEC               	movlw	-20
 22457  01211C  0060  F007  FFE3   	movff	btemp,plusw1
 22458  012122  6A01               	clrf	btemp^0,c
 22459  012124  0EED               	movlw	-19
 22460  012126  50E3               	movf	plusw1,w,c
 22461  012128  2001               	addwfc	btemp^0,w,c
 22462  01212A  6E01               	movwf	btemp^0,c
 22463  01212C  0EED               	movlw	-19
 22464  01212E  0060  F007  FFE3   	movff	btemp,plusw1
 22465  012134                     l13723:
 22466                           
 22467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 22468                           ;stkvar	_m @ sp[(-56)+48]
 22469                           ;stkvar	_i @ sp[(-56)+36]
 22470  012134  50E1               	movf	fsr1l,w,c
 22471  012136  0FEC               	addlw	-20
 22472  012138  6ED9               	movwf	fsr2l,c
 22473  01213A  50E2               	movf	fsr1h,w,c
 22474  01213C  6EDA               	movwf	fsr2h,c
 22475  01213E  0EFF               	movlw	255
 22476  012140  22DA               	addwfc	fsr2h,f,c
 22477  012142  0EF8               	movlw	-8
 22478  012144  50E3               	movf	plusw1,w,c
 22479  012146  5CDE               	subwf	postinc2,w,c
 22480  012148  50DE               	movf	postinc2,w,c
 22481  01214A  0A80               	xorlw	128
 22482  01214C  6E01               	movwf	btemp^0,c
 22483  01214E  0EF9               	movlw	-7
 22484  012150  50E3               	movf	plusw1,w,c
 22485  012152  0A80               	xorlw	128
 22486  012154  5801               	subwfb	btemp^0,w,c
 22487  012156  B0D8               	btfsc	status,0,c
 22488  012158  D00E               	goto	u12820
 22489                           
 22490                           ;stkvar	_n @ sp[(-56)+32]
 22491  01215A  0EE9               	movlw	-23
 22492  01215C  BEE3               	btfsc	plusw1,7,c
 22493  01215E  D633               	goto	l13673
 22494  012160  0EE9               	movlw	-23
 22495  012162  50E3               	movf	plusw1,w,c
 22496  012164  E108               	bnz	u12820
 22497  012166  0EE8               	movlw	-24
 22498  012168  006F FF8C  F001    	movff	plusw1,btemp
 22499  01216E  0E4B               	movlw	75
 22500  012170  5E01               	subwf	btemp^0,f,c
 22501  012172  A0D8               	btfss	status,0,c
 22502  012174  D628               	goto	l13673
 22503  012176                     u12820:
 22504                           
 22505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 22506                           ;stkvar	_pp @ sp[(-56)+50]
 22507  012176  0EFA               	movlw	-6
 22508  012178  006F FF8C  F001    	movff	plusw1,btemp
 22509  01217E  0EFB               	movlw	-5
 22510  012180  50E3               	movf	plusw1,w,c
 22511  012182  1001               	iorwf	btemp^0,w,c
 22512  012184  B4D8               	btfsc	status,2,c
 22513  012186  A83E               	btfss	_flags^0,4,c
 22514  012188  D021               	goto	l13735
 22515                           
 22516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 22517                           ;stkvar	_n @ sp[(-56)+32]
 22518  01218A  0EE8               	movlw	-24
 22519  01218C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22520  012192  0EE9               	movlw	-23
 22521  012194  006F FF8C  F00C    	movff	plusw1,btemp+11
 22522  01219A  0E54               	movlw	low _dbuf
 22523  01219C  240B               	addwf	(btemp+10)^0,w,c
 22524  01219E  6ED9               	movwf	fsr2l,c
 22525  0121A0  0E03               	movlw	high _dbuf
 22526  0121A2  200C               	addwfc	(btemp+11)^0,w,c
 22527  0121A4  6EDA               	movwf	fsr2h,c
 22528  0121A6  0E2E               	movlw	46
 22529  0121A8  6EDF               	movwf	indf2,c
 22530                           
 22531                           ;stkvar	_n @ sp[(-56)+32]
 22532  0121AA  0EE8               	movlw	-24
 22533  0121AC  50E3               	movf	plusw1,w,c
 22534  0121AE  0F01               	addlw	1
 22535  0121B0  6E01               	movwf	btemp^0,c
 22536  0121B2  0EE8               	movlw	-24
 22537  0121B4  0060  F007  FFE3   	movff	btemp,plusw1
 22538  0121BA  6A01               	clrf	btemp^0,c
 22539  0121BC  0EE9               	movlw	-23
 22540  0121BE  50E3               	movf	plusw1,w,c
 22541  0121C0  2001               	addwfc	btemp^0,w,c
 22542  0121C2  6E01               	movwf	btemp^0,c
 22543  0121C4  0EE9               	movlw	-23
 22544  0121C6  0060  F007  FFE3   	movff	btemp,plusw1
 22545  0121CC                     l13735:
 22546                           
 22547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 22548                           ;stkvar	_n @ sp[(-56)+32]
 22549  0121CC  0EE8               	movlw	-24
 22550  0121CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22551  0121D4  0EE9               	movlw	-23
 22552  0121D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22553  0121DC  0E54               	movlw	low _dbuf
 22554  0121DE  240B               	addwf	(btemp+10)^0,w,c
 22555  0121E0  6ED9               	movwf	fsr2l,c
 22556  0121E2  0E03               	movlw	high _dbuf
 22557  0121E4  200C               	addwfc	(btemp+11)^0,w,c
 22558  0121E6  6EDA               	movwf	fsr2h,c
 22559  0121E8  0E00               	movlw	0
 22560  0121EA  6EDF               	movwf	indf2,c
 22561                           
 22562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 22563                           ;stkvar	_nmode @ sp[(-56)+55]
 22564  0121EC  0EFF               	movlw	-1
 22565  0121EE  006F FF8C  F001    	movff	plusw1,btemp
 22566  0121F4  0E65               	movlw	101
 22567  0121F6  1801               	xorwf	btemp^0,w,c
 22568  0121F8  A4D8               	btfss	status,2,c
 22569  0121FA  EF5F  F08A         	goto	l13539
 22570                           
 22571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 22572  0121FE  0E4F               	movlw	79
 22573  012200  6E0B               	movwf	(btemp+10)^0,c
 22574  012202  0E00               	movlw	0
 22575  012204  6E0C               	movwf	(btemp+11)^0,c
 22576                           
 22577                           ;stkvar	_i @ sp[(-56)+36]
 22578  012206  0EEC               	movlw	-20
 22579  012208  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22580  01220E  0EED               	movlw	-19
 22581  012210  0060  F033  FFE3   	movff	btemp+11,plusw1
 22582                           
 22583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 22584                           ;stkvar	_i @ sp[(-56)+36]
 22585  012216  0EEC               	movlw	-20
 22586  012218  006F FF8C  F00B    	movff	plusw1,btemp+10
 22587  01221E  0EED               	movlw	-19
 22588  012220  006F FF8C  F00C    	movff	plusw1,btemp+11
 22589  012226  0E54               	movlw	low _dbuf
 22590  012228  240B               	addwf	(btemp+10)^0,w,c
 22591  01222A  6ED9               	movwf	fsr2l,c
 22592  01222C  0E03               	movlw	high _dbuf
 22593  01222E  200C               	addwfc	(btemp+11)^0,w,c
 22594  012230  6EDA               	movwf	fsr2h,c
 22595  012232  0E00               	movlw	0
 22596  012234  6EDF               	movwf	indf2,c
 22597                           
 22598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 22599                           ;stkvar	_sign @ sp[(-56)+42]
 22600  012236  0EF2               	movlw	-14
 22601  012238  6AE3               	clrf	plusw1,c
 22602  01223A  0EF3               	movlw	-13
 22603  01223C  6AE3               	clrf	plusw1,c
 22604                           
 22605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 22606                           ;stkvar	_e @ sp[(-56)+34]
 22607  01223E  0EEB               	movlw	-21
 22608  012240  AEE3               	btfss	plusw1,7,c
 22609  012242  D012               	goto	l13749
 22610                           
 22611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 22612  012244  0E01               	movlw	1
 22613  012246  6E0B               	movwf	(btemp+10)^0,c
 22614  012248  0E00               	movlw	0
 22615  01224A  6E0C               	movwf	(btemp+11)^0,c
 22616                           
 22617                           ;stkvar	_sign @ sp[(-56)+42]
 22618  01224C  0EF2               	movlw	-14
 22619  01224E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22620  012254  0EF3               	movlw	-13
 22621  012256  0060  F033  FFE3   	movff	btemp+11,plusw1
 22622                           
 22623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 22624                           ;stkvar	_e @ sp[(-56)+34]
 22625                           ;stkvar	_e @ sp[(-56)+34]
 22626  01225C  0EEA               	movlw	-22
 22627  01225E  6CE3               	negf	plusw1,c
 22628  012260  0EEB               	movlw	-21
 22629  012262  1EE3               	comf	plusw1,f,c
 22630  012264  B0D8               	btfsc	status,0,c
 22631  012266  2AE3               	incf	plusw1,f,c
 22632  012268                     l13749:
 22633                           
 22634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 22635  012268  0E02               	movlw	2
 22636  01226A  6E0B               	movwf	(btemp+10)^0,c
 22637  01226C  0E00               	movlw	0
 22638  01226E  6E0C               	movwf	(btemp+11)^0,c
 22639                           
 22640                           ;stkvar	_p @ sp[(-56)+40]
 22641  012270  0EF0               	movlw	-16
 22642  012272  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22643  012278  0EF1               	movlw	-15
 22644  01227A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22645                           
 22646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 22647  012280  D051               	goto	l13761
 22648  012282                     l13751:
 22649                           
 22650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 22651                           ;stkvar	_i @ sp[(-56)+36]
 22652  012282  50E1               	movf	fsr1l,w,c
 22653  012284  0FEC               	addlw	-20
 22654  012286  6ED9               	movwf	fsr2l,c
 22655  012288  50E2               	movf	fsr1h,w,c
 22656  01228A  6EDA               	movwf	fsr2h,c
 22657  01228C  0EFF               	movlw	255
 22658  01228E  22DA               	addwfc	fsr2h,f,c
 22659  012290  06DE               	decf	postinc2,f,c
 22660  012292  0E00               	movlw	0
 22661  012294  5ADD               	subwfb	postdec2,f,c
 22662                           
 22663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 22664                           ;stkvar	_i @ sp[(-56)+36]
 22665  012296  0EEC               	movlw	-20
 22666  012298  006F FF8C  F00B    	movff	plusw1,btemp+10
 22667  01229E  0EED               	movlw	-19
 22668  0122A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22669  0122A6  0E54               	movlw	low _dbuf
 22670  0122A8  240B               	addwf	(btemp+10)^0,w,c
 22671  0122AA  6ED9               	movwf	fsr2l,c
 22672  0122AC  0E03               	movlw	high _dbuf
 22673  0122AE  200C               	addwfc	(btemp+11)^0,w,c
 22674  0122B0  6EDA               	movwf	fsr2h,c
 22675  0122B2  0E0A               	movlw	10
 22676  0122B4  6EE6               	movwf	postinc1,c
 22677  0122B6  0E00               	movlw	0
 22678  0122B8  6EE6               	movwf	postinc1,c
 22679                           
 22680                           ;stkvar	_e @ sp[(-58)+34]
 22681  0122BA  0EE8               	movlw	-24
 22682  0122BC  006F FF8F FFE6     	movff	plusw1,postinc1
 22683  0122C2  006F FF8F FFE6     	movff	plusw1,postinc1
 22684  0122C8  EC43  F0D6         	call	___awmod	;wreg free
 22685  0122CC  5001               	movf	btemp^0,w,c
 22686  0122CE  0F30               	addlw	48
 22687  0122D0  6EDF               	movwf	indf2,c
 22688                           
 22689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 22690  0122D2  0E0A               	movlw	10
 22691  0122D4  6EE6               	movwf	postinc1,c
 22692  0122D6  0E00               	movlw	0
 22693  0122D8  6EE6               	movwf	postinc1,c
 22694                           
 22695                           ;stkvar	_e @ sp[(-58)+34]
 22696  0122DA  0EE8               	movlw	-24
 22697  0122DC  006F FF8F FFE6     	movff	plusw1,postinc1
 22698  0122E2  006F FF8F FFE6     	movff	plusw1,postinc1
 22699  0122E8  EC15  F0D2         	call	___awdiv	;wreg free
 22700                           
 22701                           ;stkvar	_e @ sp[(-56)+34]
 22702  0122EC  0EEA               	movlw	-22
 22703  0122EE  0060  F007  FFE3   	movff	btemp,plusw1
 22704  0122F4  0EEB               	movlw	-21
 22705  0122F6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22706                           
 22707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 22708                           ;stkvar	_p @ sp[(-56)+40]
 22709  0122FC  50E1               	movf	fsr1l,w,c
 22710  0122FE  0FF0               	addlw	-16
 22711  012300  6ED9               	movwf	fsr2l,c
 22712  012302  50E2               	movf	fsr1h,w,c
 22713  012304  6EDA               	movwf	fsr2h,c
 22714  012306  0EFF               	movlw	255
 22715  012308  22DA               	addwfc	fsr2h,f,c
 22716  01230A  06DE               	decf	postinc2,f,c
 22717  01230C  0E00               	movlw	0
 22718  01230E  5ADD               	subwfb	postdec2,f,c
 22719                           
 22720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 22721                           ;stkvar	_w @ sp[(-56)+38]
 22722  012310  50E1               	movf	fsr1l,w,c
 22723  012312  0FEE               	addlw	-18
 22724  012314  6ED9               	movwf	fsr2l,c
 22725  012316  50E2               	movf	fsr1h,w,c
 22726  012318  6EDA               	movwf	fsr2h,c
 22727  01231A  0EFF               	movlw	255
 22728  01231C  22DA               	addwfc	fsr2h,f,c
 22729  01231E  06DE               	decf	postinc2,f,c
 22730  012320  0E00               	movlw	0
 22731  012322  5ADD               	subwfb	postdec2,f,c
 22732  012324                     l13761:
 22733                           
 22734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 22735                           ;stkvar	_e @ sp[(-56)+34]
 22736  012324  0EEA               	movlw	-22
 22737  012326  006F FF8C  F001    	movff	plusw1,btemp
 22738  01232C  0EEB               	movlw	-21
 22739  01232E  50E3               	movf	plusw1,w,c
 22740  012330  1001               	iorwf	btemp^0,w,c
 22741  012332  A4D8               	btfss	status,2,c
 22742  012334  D7A6               	goto	l13751
 22743                           
 22744                           ;stkvar	_p @ sp[(-56)+40]
 22745  012336  0EF1               	movlw	-15
 22746  012338  BEE3               	btfsc	plusw1,7,c
 22747  01233A  D007               	goto	u12880
 22748  01233C  0EF1               	movlw	-15
 22749  01233E  50E3               	movf	plusw1,w,c
 22750  012340  E1A0               	bnz	l13751
 22751  012342  0EF0               	movlw	-16
 22752  012344  04E3               	decf	plusw1,w,c
 22753  012346  B0D8               	btfsc	status,0,c
 22754  012348  D79C               	goto	l13751
 22755  01234A                     u12880:
 22756                           
 22757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 22758                           ;stkvar	_i @ sp[(-56)+36]
 22759  01234A  50E1               	movf	fsr1l,w,c
 22760  01234C  0FEC               	addlw	-20
 22761  01234E  6ED9               	movwf	fsr2l,c
 22762  012350  50E2               	movf	fsr1h,w,c
 22763  012352  6EDA               	movwf	fsr2h,c
 22764  012354  0EFF               	movlw	255
 22765  012356  22DA               	addwfc	fsr2h,f,c
 22766  012358  06DE               	decf	postinc2,f,c
 22767  01235A  0E00               	movlw	0
 22768  01235C  5ADD               	subwfb	postdec2,f,c
 22769                           
 22770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 22771                           ;stkvar	_sign @ sp[(-56)+42]
 22772  01235E  0EF2               	movlw	-14
 22773  012360  006F FF8C  F001    	movff	plusw1,btemp
 22774  012366  0EF3               	movlw	-13
 22775  012368  50E3               	movf	plusw1,w,c
 22776  01236A  1001               	iorwf	btemp^0,w,c
 22777  01236C  A4D8               	btfss	status,2,c
 22778  01236E  D002               	goto	l13771
 22779  012370  0E2B               	movlw	43
 22780  012372  D001               	goto	L24
 22781  012374                     l13771:
 22782  012374  0E2D               	movlw	45
 22783  012376                     L24:
 22784  012376  6E0B               	movwf	(btemp+10)^0,c
 22785  012378  0E00               	movlw	0
 22786  01237A  6E0C               	movwf	(btemp+11)^0,c
 22787                           
 22788                           ;stkvar	_efgtoa$6794 @ sp[(-56)+4]
 22789  01237C  0ECC               	movlw	-52
 22790  01237E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22791  012384  0ECD               	movlw	-51
 22792  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
 22793                           
 22794                           ;stkvar	_efgtoa$6794 @ sp[(-56)+4]
 22795                           ;stkvar	_i @ sp[(-56)+36]
 22796  01238C  0EEC               	movlw	-20
 22797  01238E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22798  012394  0EED               	movlw	-19
 22799  012396  006F FF8C  F00C    	movff	plusw1,btemp+11
 22800  01239C  0E54               	movlw	low _dbuf
 22801  01239E  240B               	addwf	(btemp+10)^0,w,c
 22802  0123A0  6ED9               	movwf	fsr2l,c
 22803  0123A2  0E03               	movlw	high _dbuf
 22804  0123A4  200C               	addwfc	(btemp+11)^0,w,c
 22805  0123A6  6EDA               	movwf	fsr2h,c
 22806  0123A8  0ECC               	movlw	-52
 22807  0123AA  006F FF8F FFDF     	movff	plusw1,indf2
 22808                           
 22809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 22810                           ;stkvar	_w @ sp[(-56)+38]
 22811  0123B0  50E1               	movf	fsr1l,w,c
 22812  0123B2  0FEE               	addlw	-18
 22813  0123B4  6ED9               	movwf	fsr2l,c
 22814  0123B6  50E2               	movf	fsr1h,w,c
 22815  0123B8  6EDA               	movwf	fsr2h,c
 22816  0123BA  0EFF               	movlw	255
 22817  0123BC  22DA               	addwfc	fsr2h,f,c
 22818  0123BE  06DE               	decf	postinc2,f,c
 22819  0123C0  0E00               	movlw	0
 22820  0123C2  5ADD               	subwfb	postdec2,f,c
 22821                           
 22822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 22823                           ;stkvar	_i @ sp[(-56)+36]
 22824  0123C4  50E1               	movf	fsr1l,w,c
 22825  0123C6  0FEC               	addlw	-20
 22826  0123C8  6ED9               	movwf	fsr2l,c
 22827  0123CA  50E2               	movf	fsr1h,w,c
 22828  0123CC  6EDA               	movwf	fsr2h,c
 22829  0123CE  0EFF               	movlw	255
 22830  0123D0  22DA               	addwfc	fsr2h,f,c
 22831  0123D2  06DE               	decf	postinc2,f,c
 22832  0123D4  0E00               	movlw	0
 22833  0123D6  5ADD               	subwfb	postdec2,f,c
 22834  0123D8  0EBF               	movlw	191
 22835  0123DA  6E0B               	movwf	(btemp+10)^0,c
 22836  0123DC  0EFF               	movlw	255
 22837  0123DE  6E0C               	movwf	(btemp+11)^0,c
 22838                           
 22839                           ;stkvar	_c @ sp[(-56)+-7]
 22840  0123E0  0EC1               	movlw	-63
 22841  0123E2  50E3               	movf	plusw1,w,c
 22842  0123E4  6E09               	movwf	(btemp+8)^0,c
 22843  0123E6  6A0A               	clrf	(btemp+9)^0,c
 22844  0123E8  500B               	movf	(btemp+10)^0,w,c
 22845  0123EA  2609               	addwf	(btemp+8)^0,f,c
 22846  0123EC  500C               	movf	(btemp+11)^0,w,c
 22847  0123EE  220A               	addwfc	(btemp+9)^0,f,c
 22848  0123F0  500A               	movf	(btemp+9)^0,w,c
 22849  0123F2  E106               	bnz	u12900
 22850  0123F4  0E1A               	movlw	26
 22851  0123F6  5C09               	subwf	(btemp+8)^0,w,c
 22852  0123F8  B0D8               	btfsc	status,0,c
 22853  0123FA  D002               	goto	u12900
 22854  0123FC  0E01               	movlw	1
 22855  0123FE  D001               	goto	u12910
 22856  012400                     u12900:
 22857  012400  0E00               	movlw	0
 22858  012402                     u12910:
 22859  012402  6E0B               	movwf	(btemp+10)^0,c
 22860  012404  6A0C               	clrf	(btemp+11)^0,c
 22861                           
 22862                           ;stkvar	_efgtoa$6796 @ sp[(-56)+0]
 22863  012406  0EC8               	movlw	-56
 22864  012408  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22865  01240E  0EC9               	movlw	-55
 22866  012410  0060  F033  FFE3   	movff	btemp+11,plusw1
 22867                           
 22868                           ;stkvar	_efgtoa$6796 @ sp[(-56)+0]
 22869  012416  0EC8               	movlw	-56
 22870  012418  006F FF8C  F001    	movff	plusw1,btemp
 22871  01241E  0EC9               	movlw	-55
 22872  012420  50E3               	movf	plusw1,w,c
 22873  012422  1001               	iorwf	btemp^0,w,c
 22874  012424  A4D8               	btfss	status,2,c
 22875  012426  D002               	goto	l13787
 22876  012428  0E65               	movlw	101
 22877  01242A  D001               	goto	L25
 22878  01242C                     l13787:
 22879  01242C  0E45               	movlw	69
 22880  01242E                     L25:
 22881  01242E  6E0B               	movwf	(btemp+10)^0,c
 22882  012430  0E00               	movlw	0
 22883  012432  6E0C               	movwf	(btemp+11)^0,c
 22884                           
 22885                           ;stkvar	_efgtoa$6795 @ sp[(-56)+2]
 22886  012434  0ECA               	movlw	-54
 22887  012436  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22888  01243C  0ECB               	movlw	-53
 22889  01243E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22890                           
 22891                           ;stkvar	_efgtoa$6795 @ sp[(-56)+2]
 22892                           ;stkvar	_i @ sp[(-56)+36]
 22893  012444  0EEC               	movlw	-20
 22894  012446  006F FF8C  F00B    	movff	plusw1,btemp+10
 22895  01244C  0EED               	movlw	-19
 22896  01244E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22897  012454  0E54               	movlw	low _dbuf
 22898  012456  240B               	addwf	(btemp+10)^0,w,c
 22899  012458  6ED9               	movwf	fsr2l,c
 22900  01245A  0E03               	movlw	high _dbuf
 22901  01245C  200C               	addwfc	(btemp+11)^0,w,c
 22902  01245E  6EDA               	movwf	fsr2h,c
 22903  012460  0ECA               	movlw	-54
 22904  012462  006F FF8F FFDF     	movff	plusw1,indf2
 22905                           
 22906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 22907                           ;stkvar	_w @ sp[(-56)+38]
 22908  012468  50E1               	movf	fsr1l,w,c
 22909  01246A  0FEE               	addlw	-18
 22910  01246C  6ED9               	movwf	fsr2l,c
 22911  01246E  50E2               	movf	fsr1h,w,c
 22912  012470  6EDA               	movwf	fsr2h,c
 22913  012472  0EFF               	movlw	255
 22914  012474  22DA               	addwfc	fsr2h,f,c
 22915  012476  06DE               	decf	postinc2,f,c
 22916  012478  0E00               	movlw	0
 22917  01247A  5ADD               	subwfb	postdec2,f,c
 22918                           
 22919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 22920                           ;stkvar	_i @ sp[(-56)+36]
 22921  01247C  0EEC               	movlw	-20
 22922  01247E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22923  012484  0EED               	movlw	-19
 22924  012486  006F FF8C  F00C    	movff	plusw1,btemp+11
 22925  01248C  0E54               	movlw	low _dbuf
 22926  01248E  240B               	addwf	(btemp+10)^0,w,c
 22927  012490  6E09               	movwf	(btemp+8)^0,c
 22928  012492  0E03               	movlw	high _dbuf
 22929  012494  200C               	addwfc	(btemp+11)^0,w,c
 22930  012496  6E0A               	movwf	(btemp+9)^0,c
 22931  012498  0060  F027  FFE6   	movff	btemp+8,postinc1
 22932  01249E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22933                           
 22934                           ;stkvar	_n @ sp[(-58)+32]
 22935  0124A4  0E54               	movlw	low _dbuf
 22936  0124A6  6E0B               	movwf	(btemp+10)^0,c
 22937  0124A8  0E03               	movlw	high _dbuf
 22938  0124AA  6E0C               	movwf	(btemp+11)^0,c
 22939  0124AC  0EE6               	movlw	-26
 22940  0124AE  50E3               	movf	plusw1,w,c
 22941  0124B0  260B               	addwf	(btemp+10)^0,f,c
 22942  0124B2  0EE7               	movlw	-25
 22943  0124B4  50E3               	movf	plusw1,w,c
 22944  0124B6  220C               	addwfc	(btemp+11)^0,f,c
 22945  0124B8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22946  0124BE  0060  F033  FFE6   	movff	btemp+11,postinc1
 22947  0124C4  ECB2  F0DA         	call	_strcpy	;wreg free
 22948  0124C8  EF5F  F08A         	goto	l13539
 22949  0124CC                     l2481:
 22950                           
 22951                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 22952  0124CC  0EC1               	movlw	193
 22953  0124CE  26E1               	addwf	fsr1l,f,c
 22954  0124D0  0EFF               	movlw	255
 22955  0124D2  22E2               	addwfc	fsr1h,f,c
 22956  0124D4  0012               	return		;funcret
 22957  0124D6                     __end_of_efgtoa:
 22958                           	opt callstack 0
 22959                           
 22960 ;; *************** function _tolower *****************
 22961 ;; Defined at:
 22962 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;  c               2  [STACK] int 
 22965 ;; Auto vars:     Size  Location     Type
 22966 ;;		None
 22967 ;; Return value:  Size  Location     Type
 22968 ;;                  2  [STACK] int 
 22969 ;; Registers used:
 22970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22971 ;; Tracked objects:
 22972 ;;		On entry : 0/0
 22973 ;;		On exit  : 0/0
 22974 ;;		Unchanged: 0/0
 22975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22980 ;;Total ram usage:        0 bytes
 22981 ;; Hardware stack levels used:    1
 22982 ;; Hardware stack levels required when called:   16
 22983 ;; This function calls:
 22984 ;;		_isupper
 22985 ;; This function is called by:
 22986 ;;		_efgtoa
 22987 ;;		_vfpfcnvrt
 22988 ;; This function uses a reentrant model
 22989 ;;
 22990                           
 22991                           	psect	text79
 22992  01C3FE                     __ptext79:
 22993                           	opt callstack 0
 22994  01C3FE                     _tolower:
 22995                           	opt callstack 0
 22996                           
 22997                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22998  01C3FE  52E6               	movf	postinc1,f,c
 22999  01C400  52E6               	movf	postinc1,f,c
 23000                           
 23001                           ;stkvar	_c @ sp[(-2)+-2]
 23002                           
 23003                           ;incstack = 0
 23004 ;; hardware stack exceeded
 23005  01C402  0EFC               	movlw	-4
 23006  01C404  50E3               	movf	plusw1,w,c
 23007  01C406  0FBF               	addlw	191
 23008  01C408  6E0B               	movwf	(btemp+10)^0,c
 23009  01C40A  0EFD               	movlw	-3
 23010  01C40C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23011  01C412  0EFF               	movlw	255
 23012  01C414  220C               	addwfc	(btemp+11)^0,f,c
 23013  01C416  500C               	movf	(btemp+11)^0,w,c
 23014  01C418  E106               	bnz	u6750
 23015  01C41A  0E1A               	movlw	26
 23016  01C41C  5C0B               	subwf	(btemp+10)^0,w,c
 23017  01C41E  B0D8               	btfsc	status,0,c
 23018  01C420  D002               	goto	u6750
 23019  01C422  0E01               	movlw	1
 23020  01C424  D001               	goto	u6760
 23021  01C426                     u6750:
 23022  01C426  0E00               	movlw	0
 23023  01C428                     u6760:
 23024  01C428  6E0B               	movwf	(btemp+10)^0,c
 23025  01C42A  6A0C               	clrf	(btemp+11)^0,c
 23026                           
 23027                           ;stkvar	_tolower$7615 @ sp[(-2)+0]
 23028  01C42C  0EFE               	movlw	-2
 23029  01C42E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23030  01C434  0EFF               	movlw	-1
 23031  01C436  0060  F033  FFE3   	movff	btemp+11,plusw1
 23032                           
 23033                           ;stkvar	_tolower$7615 @ sp[(-2)+0]
 23034  01C43C  0EFE               	movlw	-2
 23035  01C43E  006F FF8C  F001    	movff	plusw1,btemp
 23036  01C444  0EFF               	movlw	-1
 23037  01C446  50E3               	movf	plusw1,w,c
 23038  01C448  1001               	iorwf	btemp^0,w,c
 23039  01C44A  B4D8               	btfsc	status,2,c
 23040  01C44C  D00D               	goto	l8937
 23041                           
 23042                           ;stkvar	_c @ sp[(-2)+-2]
 23043  01C44E  0EFC               	movlw	-4
 23044  01C450  006F FF8C  F001    	movff	plusw1,btemp
 23045  01C456  0EFD               	movlw	-3
 23046  01C458  006F FF8C  F002    	movff	plusw1,btemp+1
 23047  01C45E  0E20               	movlw	32
 23048  01C460  1201               	iorwf	btemp^0,f,c
 23049  01C462  0E00               	movlw	0
 23050  01C464  1202               	iorwf	(btemp+1)^0,f,c
 23051  01C466  D008               	goto	l3753
 23052  01C468                     l8937:
 23053                           
 23054                           ;stkvar	_c @ sp[(-2)+-2]
 23055  01C468  0EFC               	movlw	-4
 23056  01C46A  006F FF8C  F001    	movff	plusw1,btemp
 23057  01C470  0EFD               	movlw	-3
 23058  01C472  006F FF8C  F002    	movff	plusw1,btemp+1
 23059  01C478                     l3753:
 23060                           
 23061                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23062  01C478  52E5               	movf	postdec1,f,c
 23063  01C47A  52E5               	movf	postdec1,f,c
 23064  01C47C  52E5               	movf	postdec1,f,c
 23065  01C47E  52E5               	movf	postdec1,f,c
 23066  01C480  0012               	return		;funcret
 23067  01C482                     __end_of_tolower:
 23068                           	opt callstack 0
 23069                           
 23070 ;; *************** function _isupper *****************
 23071 ;; Defined at:
 23072 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;  c               2  [STACK] int 
 23075 ;; Auto vars:     Size  Location     Type
 23076 ;;		None
 23077 ;; Return value:  Size  Location     Type
 23078 ;;                  2  [STACK] int 
 23079 ;; Registers used:
 23080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23081 ;; Tracked objects:
 23082 ;;		On entry : 0/0
 23083 ;;		On exit  : 0/0
 23084 ;;		Unchanged: 0/0
 23085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23090 ;;Total ram usage:        0 bytes
 23091 ;; Hardware stack levels used:    1
 23092 ;; Hardware stack levels required when called:   15
 23093 ;; This function calls:
 23094 ;;		Nothing
 23095 ;; This function is called by:
 23096 ;;		_efgtoa
 23097 ;;		_xtoa
 23098 ;;		_vfpfcnvrt
 23099 ;;		_tolower
 23100 ;; This function uses a reentrant model
 23101 ;;
 23102                           
 23103                           	psect	text80
 23104  01D41C                     __ptext80:
 23105                           	opt callstack 0
 23106  01D41C                     _isupper:
 23107                           	opt callstack 0
 23108                           
 23109                           ;stkvar	_c @ sp[(0)+-2]
 23110                           
 23111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23112                           ;incstack = 0
 23113 ;; hardware stack exceeded
 23114  01D41C  0EFE               	movlw	-2
 23115  01D41E  50E3               	movf	plusw1,w,c
 23116  01D420  0FBF               	addlw	191
 23117  01D422  6E0B               	movwf	(btemp+10)^0,c
 23118  01D424  0EFF               	movlw	-1
 23119  01D426  006F FF8C  F00C    	movff	plusw1,btemp+11
 23120  01D42C  0EFF               	movlw	255
 23121  01D42E  220C               	addwfc	(btemp+11)^0,f,c
 23122  01D430  500C               	movf	(btemp+11)^0,w,c
 23123  01D432  E106               	bnz	u6100
 23124  01D434  0E1A               	movlw	26
 23125  01D436  5C0B               	subwf	(btemp+10)^0,w,c
 23126  01D438  B0D8               	btfsc	status,0,c
 23127  01D43A  D002               	goto	u6100
 23128  01D43C  0E01               	movlw	1
 23129  01D43E  D001               	goto	u6110
 23130  01D440                     u6100:
 23131  01D440  0E00               	movlw	0
 23132  01D442                     u6110:
 23133  01D442  6E01               	movwf	btemp^0,c
 23134  01D444  6A02               	clrf	(btemp+1)^0,c
 23135                           
 23136                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23137  01D446  52E5               	movf	postdec1,f,c
 23138  01D448  52E5               	movf	postdec1,f,c
 23139  01D44A  0012               	return		;funcret
 23140  01D44C                     __end_of_isupper:
 23141                           	opt callstack 0
 23142                           
 23143 ;; *************** function _strcpy *****************
 23144 ;; Defined at:
 23145 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 23146 ;; Parameters:    Size  Location     Type
 23147 ;;  dest            2  [STACK] PTR unsigned char 
 23148 ;;		 -> dbuf(80), 
 23149 ;;  src             2  [STACK] PTR const unsigned char 
 23150 ;;		 -> STR_99(4), STR_98(4), STR_95(4), STR_94(4), 
 23151 ;;		 -> dbuf(80), 
 23152 ;; Auto vars:     Size  Location     Type
 23153 ;;  d               2  [STACK] PTR unsigned char 
 23154 ;;		 -> dbuf(80), 
 23155 ;;  s               2  [STACK] PTR const unsigned char 
 23156 ;;		 -> STR_99(4), STR_98(4), STR_95(4), STR_94(4), 
 23157 ;;		 -> dbuf(80), 
 23158 ;; Return value:  Size  Location     Type
 23159 ;;                  2  [STACK] PTR unsigned char 
 23160 ;; Registers used:
 23161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 23162 ;; Tracked objects:
 23163 ;;		On entry : 0/0
 23164 ;;		On exit  : 0/0
 23165 ;;		Unchanged: 0/0
 23166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23171 ;;Total ram usage:        0 bytes
 23172 ;; Hardware stack levels used:    1
 23173 ;; Hardware stack levels required when called:   15
 23174 ;; This function calls:
 23175 ;;		Nothing
 23176 ;; This function is called by:
 23177 ;;		_efgtoa
 23178 ;; This function uses a reentrant model
 23179 ;;
 23180                           
 23181                           	psect	text81
 23182  01B564                     __ptext81:
 23183                           	opt callstack 0
 23184  01B564                     _strcpy:
 23185                           	opt callstack 0
 23186                           
 23187                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23188  01B564  52E6               	movf	postinc1,f,c
 23189  01B566  52E6               	movf	postinc1,f,c
 23190  01B568  52E6               	movf	postinc1,f,c
 23191  01B56A  52E6               	movf	postinc1,f,c
 23192                           
 23193                           ;stkvar	_src @ sp[(-4)+-4]
 23194                           
 23195                           ;incstack = 0
 23196 ;; hardware stack exceeded
 23197  01B56C  0EF8               	movlw	-8
 23198  01B56E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23199  01B574  0EF9               	movlw	-7
 23200  01B576  006F FF8C  F00C    	movff	plusw1,btemp+11
 23201                           
 23202                           ;stkvar	_s @ sp[(-4)+2]
 23203  01B57C  0EFF               	movlw	-1
 23204  01B57E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23205  01B584  0EFE               	movlw	-2
 23206  01B586  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23207                           
 23208                           ;stkvar	_dest @ sp[(-4)+-2]
 23209  01B58C  0EFA               	movlw	-6
 23210  01B58E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23211  01B594  0EFB               	movlw	-5
 23212  01B596  006F FF8C  F00C    	movff	plusw1,btemp+11
 23213                           
 23214                           ;stkvar	_d @ sp[(-4)+0]
 23215  01B59C  0EFD               	movlw	-3
 23216  01B59E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23217  01B5A4  0EFC               	movlw	-4
 23218  01B5A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23219  01B5AC                     l13401:
 23220                           
 23221                           ;stkvar	_s @ sp[(-4)+2]
 23222  01B5AC  50E1               	movf	fsr1l,w,c
 23223  01B5AE  0FFE               	addlw	-2
 23224  01B5B0  6ED9               	movwf	fsr2l,c
 23225  01B5B2  50E2               	movf	fsr1h,w,c
 23226  01B5B4  6EDA               	movwf	fsr2h,c
 23227  01B5B6  0EFF               	movlw	255
 23228  01B5B8  22DA               	addwfc	fsr2h,f,c
 23229  01B5BA  006F FF7C  F00B    	movff	indf2,btemp+10
 23230  01B5C0  0E01               	movlw	1
 23231  01B5C2  26DE               	addwf	postinc2,f,c
 23232  01B5C4  006F FF7C  F00C    	movff	indf2,btemp+11
 23233  01B5CA  0E00               	movlw	0
 23234  01B5CC  22DD               	addwfc	postdec2,f,c
 23235  01B5CE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 23236  01B5D4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 23237  01B5DA  0E00               	movlw	low (__mediumconst shr (0+16))
 23238  01B5DC  6EF8               	movwf	tblptru,c
 23239                           
 23240                           ;stkvar	_d @ sp[(-4)+0]
 23241  01B5DE  50E1               	movf	fsr1l,w,c
 23242  01B5E0  0FFC               	addlw	-4
 23243  01B5E2  6ED9               	movwf	fsr2l,c
 23244  01B5E4  50E2               	movf	fsr1h,w,c
 23245  01B5E6  6EDA               	movwf	fsr2h,c
 23246  01B5E8  0EFF               	movlw	255
 23247  01B5EA  22DA               	addwfc	fsr2h,f,c
 23248  01B5EC  006F FF7C  F00B    	movff	indf2,btemp+10
 23249  01B5F2  0E01               	movlw	1
 23250  01B5F4  26DE               	addwf	postinc2,f,c
 23251  01B5F6  006F FF7C  F00C    	movff	indf2,btemp+11
 23252  01B5FC  0E00               	movlw	0
 23253  01B5FE  22DD               	addwfc	postdec2,f,c
 23254  01B600  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 23255  01B606  0060  F033  FFDA   	movff	btemp+11,fsr2h
 23256  01B60C  0E1F               	movlw	(high __ramtop+-1)
 23257  01B60E  64F7               	cpfsgt	tblptrh,c
 23258  01B610  D003               	bra	u12207
 23259  01B612  0008               	tblrd		*
 23260  01B614  50F5               	movf	tablat,w,c
 23261  01B616  D007               	bra	u12200
 23262  01B618                     u12207:
 23263  01B618  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23264  01B61E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23265  01B624  50EF               	movf	indf0,w,c
 23266  01B626                     u12200:
 23267  01B626  6EDF               	movwf	indf2,c
 23268  01B628  50DF               	movf	indf2,w,c
 23269  01B62A  A4D8               	btfss	status,2,c
 23270  01B62C  D7BF               	goto	l13401
 23271                           
 23272                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 23273  01B62E  0EF8               	movlw	248
 23274  01B630  26E1               	addwf	fsr1l,f,c
 23275  01B632  0EFF               	movlw	255
 23276  01B634  22E2               	addwfc	fsr1h,f,c
 23277  01B636  0012               	return		;funcret
 23278  01B638                     __end_of_strcpy:
 23279                           	opt callstack 0
 23280                           
 23281 ;; *************** function _floorf *****************
 23282 ;; Defined at:
 23283 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 23284 ;; Parameters:    Size  Location     Type
 23285 ;;  x               4  [STACK] float 
 23286 ;; Auto vars:     Size  Location     Type
 23287 ;;  u               4  [STACK] struct .
 23288 ;;  m               4  [STACK] unsigned long 
 23289 ;;  e               2  [STACK] int 
 23290 ;; Return value:  Size  Location     Type
 23291 ;;                  4  [STACK] float 
 23292 ;; Registers used:
 23293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23294 ;; Tracked objects:
 23295 ;;		On entry : 0/0
 23296 ;;		On exit  : 0/0
 23297 ;;		Unchanged: 0/0
 23298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23303 ;;Total ram usage:        0 bytes
 23304 ;; Hardware stack levels used:    1
 23305 ;; Hardware stack levels required when called:   15
 23306 ;; This function calls:
 23307 ;;		Nothing
 23308 ;; This function is called by:
 23309 ;;		_efgtoa
 23310 ;; This function uses a reentrant model
 23311 ;;
 23312                           
 23313                           	psect	text82
 23314  017146                     __ptext82:
 23315                           	opt callstack 0
 23316  017146                     _floorf:
 23317                           	opt callstack 0
 23318                           
 23319                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23320  017146  0E0A               	movlw	10
 23321  017148  26E1               	addwf	fsr1l,f,c
 23322  01714A  0E00               	movlw	0
 23323  01714C  22E2               	addwfc	fsr1h,f,c
 23324                           
 23325                           ;incstack = 0
 23326 ;; hardware stack exceeded
 23327  01714E  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 23328  017154  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 23329  01715A  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 23330  017160  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 23331                           
 23332                           ;stkvar	_u @ sp[(-10)+0]
 23333  017166  0EF6               	movlw	-10
 23334  017168  0060  F027  FFE3   	movff	btemp+8,plusw1
 23335  01716E  0EF7               	movlw	-9
 23336  017170  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23337  017176  0EF8               	movlw	-8
 23338  017178  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23339  01717E  0EF9               	movlw	-7
 23340  017180  0060  F033  FFE3   	movff	btemp+11,plusw1
 23341                           
 23342                           ;stkvar	_x @ sp[(-10)+-4]
 23343  017186  0EF2               	movlw	-14
 23344  017188  006F FF8C  F009    	movff	plusw1,btemp+8
 23345  01718E  0EF3               	movlw	-13
 23346  017190  006F FF8C  F00A    	movff	plusw1,btemp+9
 23347  017196  0EF4               	movlw	-12
 23348  017198  006F FF8C  F00B    	movff	plusw1,btemp+10
 23349  01719E  0EF5               	movlw	-11
 23350  0171A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23351                           
 23352                           ;stkvar	_u @ sp[(-10)+0]
 23353  0171A6  0EF6               	movlw	-10
 23354  0171A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23355  0171AE  0EF7               	movlw	-9
 23356  0171B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23357  0171B6  0EF8               	movlw	-8
 23358  0171B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23359  0171BE  0EF9               	movlw	-7
 23360  0171C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23361  0171C6  0E81               	movlw	129
 23362  0171C8  6E0B               	movwf	(btemp+10)^0,c
 23363  0171CA  0EFF               	movlw	255
 23364  0171CC  6E0C               	movwf	(btemp+11)^0,c
 23365                           
 23366                           ;stkvar	_u @ sp[(-10)+0]
 23367  0171CE  0EF6               	movlw	-10
 23368  0171D0  006F FF8C  F005    	movff	plusw1,btemp+4
 23369  0171D6  0EF7               	movlw	-9
 23370  0171D8  006F FF8C  F006    	movff	plusw1,btemp+5
 23371  0171DE  0EF8               	movlw	-8
 23372  0171E0  006F FF8C  F007    	movff	plusw1,btemp+6
 23373  0171E6  0EF9               	movlw	-7
 23374  0171E8  006F FF8C  F008    	movff	plusw1,btemp+7
 23375  0171EE  0E18               	movlw	24
 23376  0171F0  D005               	goto	u6780
 23377  0171F2                     u6785:
 23378  0171F2  90D8               	bcf	status,0,c
 23379  0171F4  3208               	rrcf	(btemp+7)^0,f,c
 23380  0171F6  3207               	rrcf	(btemp+6)^0,f,c
 23381  0171F8  3206               	rrcf	(btemp+5)^0,f,c
 23382  0171FA  3205               	rrcf	(btemp+4)^0,f,c
 23383  0171FC                     u6780:
 23384  0171FC  2EE8               	decfsz	wreg,f,c
 23385  0171FE  D7F9               	goto	u6785
 23386  017200  0060  F014  F009   	movff	btemp+4,btemp+8
 23387  017206  0060  F018  F00A   	movff	btemp+5,btemp+9
 23388  01720C  0EFF               	movlw	255
 23389  01720E  1609               	andwf	(btemp+8)^0,f,c
 23390  017210  0E00               	movlw	0
 23391  017212  160A               	andwf	(btemp+9)^0,f,c
 23392  017214  500B               	movf	(btemp+10)^0,w,c
 23393  017216  2609               	addwf	(btemp+8)^0,f,c
 23394  017218  500C               	movf	(btemp+11)^0,w,c
 23395  01721A  220A               	addwfc	(btemp+9)^0,f,c
 23396                           
 23397                           ;stkvar	_e @ sp[(-10)+8]
 23398  01721C  0EFE               	movlw	-2
 23399  01721E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23400  017224  0EFF               	movlw	-1
 23401  017226  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23402                           
 23403                           ;stkvar	_e @ sp[(-10)+8]
 23404  01722C  0EFF               	movlw	-1
 23405  01722E  BEE3               	btfsc	plusw1,7,c
 23406  017230  D019               	goto	l8951
 23407  017232  0EFF               	movlw	-1
 23408  017234  50E3               	movf	plusw1,w,c
 23409  017236  E108               	bnz	u6790
 23410  017238  0EFE               	movlw	-2
 23411  01723A  006F FF8C  F001    	movff	plusw1,btemp
 23412  017240  0E17               	movlw	23
 23413  017242  5E01               	subwf	btemp^0,f,c
 23414  017244  A0D8               	btfss	status,0,c
 23415  017246  D00E               	goto	l8951
 23416  017248                     u6790:
 23417                           
 23418                           ;stkvar	_x @ sp[(-10)+-4]
 23419  017248  0EF2               	movlw	-14
 23420  01724A  006F FF8C  F001    	movff	plusw1,btemp
 23421  017250  0EF3               	movlw	-13
 23422  017252  006F FF8C  F002    	movff	plusw1,btemp+1
 23423  017258  0EF4               	movlw	-12
 23424  01725A  006F FF8C  F003    	movff	plusw1,btemp+2
 23425  017260  0EF5               	movlw	-11
 23426  017262  D11F               	goto	L26
 23427  017264                     l8951:
 23428                           
 23429                           ;stkvar	_e @ sp[(-10)+8]
 23430  017264  0EFF               	movlw	-1
 23431  017266  BEE3               	btfsc	plusw1,7,c
 23432  017268  D0B4               	goto	l8967
 23433                           
 23434                           ;stkvar	_e @ sp[(-10)+8]
 23435  01726A  0EFE               	movlw	-2
 23436  01726C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23437  017272  0EFF               	movlw	255
 23438  017274  6E05               	movwf	(btemp+4)^0,c
 23439  017276  0EFF               	movlw	255
 23440  017278  6E06               	movwf	(btemp+5)^0,c
 23441  01727A  0E7F               	movlw	127
 23442  01727C  6E07               	movwf	(btemp+6)^0,c
 23443  01727E  0E00               	movlw	0
 23444  017280  6E08               	movwf	(btemp+7)^0,c
 23445  017282                     u6815:
 23446  017282  660C               	tstfsz	(btemp+11)^0,c
 23447  017284  D001               	goto	u6816
 23448  017286  D007               	goto	u6817
 23449  017288                     u6816:
 23450  017288  3408               	rlcf	(btemp+7)^0,w,c
 23451  01728A  3208               	rrcf	(btemp+7)^0,f,c
 23452  01728C  3207               	rrcf	(btemp+6)^0,f,c
 23453  01728E  3206               	rrcf	(btemp+5)^0,f,c
 23454  017290  3205               	rrcf	(btemp+4)^0,f,c
 23455  017292  2E0C               	decfsz	(btemp+11)^0,f,c
 23456  017294  D7F6               	goto	u6815
 23457  017296                     u6817:
 23458                           
 23459                           ;stkvar	_m @ sp[(-10)+4]
 23460  017296  0EFA               	movlw	-6
 23461  017298  0060  F017  FFE3   	movff	btemp+4,plusw1
 23462  01729E  0EFB               	movlw	-5
 23463  0172A0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23464  0172A6  0EFC               	movlw	-4
 23465  0172A8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23466  0172AE  0EFD               	movlw	-3
 23467  0172B0  0060  F023  FFE3   	movff	btemp+7,plusw1
 23468                           
 23469                           ;stkvar	_m @ sp[(-10)+4]
 23470                           ;stkvar	_u @ sp[(-10)+0]
 23471  0172B6  0EF6               	movlw	-10
 23472  0172B8  006F FF8C  F009    	movff	plusw1,btemp+8
 23473  0172BE  0EF7               	movlw	-9
 23474  0172C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23475  0172C6  0EF8               	movlw	-8
 23476  0172C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23477  0172CE  0EF9               	movlw	-7
 23478  0172D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23479  0172D6  0EFA               	movlw	-6
 23480  0172D8  50E3               	movf	plusw1,w,c
 23481  0172DA  1609               	andwf	(btemp+8)^0,f,c
 23482  0172DC  0EFB               	movlw	-5
 23483  0172DE  50E3               	movf	plusw1,w,c
 23484  0172E0  160A               	andwf	(btemp+9)^0,f,c
 23485  0172E2  0EFC               	movlw	-4
 23486  0172E4  50E3               	movf	plusw1,w,c
 23487  0172E6  160B               	andwf	(btemp+10)^0,f,c
 23488  0172E8  0EFD               	movlw	-3
 23489  0172EA  50E3               	movf	plusw1,w,c
 23490  0172EC  160C               	andwf	(btemp+11)^0,f,c
 23491  0172EE  5009               	movf	(btemp+8)^0,w,c
 23492  0172F0  100A               	iorwf	(btemp+9)^0,w,c
 23493  0172F2  100B               	iorwf	(btemp+10)^0,w,c
 23494  0172F4  100C               	iorwf	(btemp+11)^0,w,c
 23495  0172F6  B4D8               	btfsc	status,2,c
 23496  0172F8  D7A7               	goto	u6790
 23497                           
 23498                           ;stkvar	_u @ sp[(-10)+0]
 23499  0172FA  0EF6               	movlw	-10
 23500  0172FC  006F FF8C  F009    	movff	plusw1,btemp+8
 23501  017302  0EF7               	movlw	-9
 23502  017304  006F FF8C  F00A    	movff	plusw1,btemp+9
 23503  01730A  0EF8               	movlw	-8
 23504  01730C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23505  017312  0EF9               	movlw	-7
 23506  017314  006F FF8C  F00C    	movff	plusw1,btemp+11
 23507  01731A  0E20               	movlw	32
 23508  01731C  D005               	goto	u6830
 23509  01731E                     u6835:
 23510  01731E  90D8               	bcf	status,0,c
 23511  017320  320C               	rrcf	(btemp+11)^0,f,c
 23512  017322  320B               	rrcf	(btemp+10)^0,f,c
 23513  017324  320A               	rrcf	(btemp+9)^0,f,c
 23514  017326  3209               	rrcf	(btemp+8)^0,f,c
 23515  017328                     u6830:
 23516  017328  2EE8               	decfsz	wreg,f,c
 23517  01732A  D7F9               	goto	u6835
 23518  01732C  5009               	movf	(btemp+8)^0,w,c
 23519  01732E  B4D8               	btfsc	status,2,c
 23520  017330  D028               	goto	l8965
 23521                           
 23522                           ;stkvar	_m @ sp[(-10)+4]
 23523                           ;stkvar	_u @ sp[(-10)+0]
 23524  017332  0EF6               	movlw	-10
 23525  017334  50E3               	movf	plusw1,w,c
 23526  017336  6E01               	movwf	btemp^0,c
 23527  017338  0EFA               	movlw	-6
 23528  01733A  50E3               	movf	plusw1,w,c
 23529  01733C  2601               	addwf	btemp^0,f,c
 23530  01733E  0EF6               	movlw	-10
 23531  017340  0060  F007  FFE3   	movff	btemp,plusw1
 23532  017346  0EF7               	movlw	-9
 23533  017348  50E3               	movf	plusw1,w,c
 23534  01734A  6E01               	movwf	btemp^0,c
 23535  01734C  0EFB               	movlw	-5
 23536  01734E  50E3               	movf	plusw1,w,c
 23537  017350  2201               	addwfc	btemp^0,f,c
 23538  017352  0EF7               	movlw	-9
 23539  017354  0060  F007  FFE3   	movff	btemp,plusw1
 23540  01735A  0EF8               	movlw	-8
 23541  01735C  50E3               	movf	plusw1,w,c
 23542  01735E  6E01               	movwf	btemp^0,c
 23543  017360  0EFC               	movlw	-4
 23544  017362  50E3               	movf	plusw1,w,c
 23545  017364  2201               	addwfc	btemp^0,f,c
 23546  017366  0EF8               	movlw	-8
 23547  017368  0060  F007  FFE3   	movff	btemp,plusw1
 23548  01736E  0EF9               	movlw	-7
 23549  017370  50E3               	movf	plusw1,w,c
 23550  017372  6E01               	movwf	btemp^0,c
 23551  017374  0EFD               	movlw	-3
 23552  017376  50E3               	movf	plusw1,w,c
 23553  017378  2201               	addwfc	btemp^0,f,c
 23554  01737A  0EF9               	movlw	-7
 23555  01737C  0060  F007  FFE3   	movff	btemp,plusw1
 23556  017382                     l8965:
 23557                           
 23558                           ;stkvar	_m @ sp[(-10)+4]
 23559  017382  0EFA               	movlw	-6
 23560  017384  006F FF8C  F009    	movff	plusw1,btemp+8
 23561  01738A  0EFB               	movlw	-5
 23562  01738C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23563  017392  0EFC               	movlw	-4
 23564  017394  006F FF8C  F00B    	movff	plusw1,btemp+10
 23565  01739A  0EFD               	movlw	-3
 23566  01739C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23567  0173A2  1C09               	comf	(btemp+8)^0,w,c
 23568  0173A4  6E05               	movwf	(btemp+4)^0,c
 23569  0173A6  1C0A               	comf	(btemp+9)^0,w,c
 23570  0173A8  6E06               	movwf	(btemp+5)^0,c
 23571  0173AA  1C0B               	comf	(btemp+10)^0,w,c
 23572  0173AC  6E07               	movwf	(btemp+6)^0,c
 23573  0173AE  1C0C               	comf	(btemp+11)^0,w,c
 23574  0173B0  6E08               	movwf	(btemp+7)^0,c
 23575                           
 23576                           ;stkvar	_u @ sp[(-10)+0]
 23577  0173B2  50E1               	movf	fsr1l,w,c
 23578  0173B4  0FF6               	addlw	-10
 23579  0173B6  6ED9               	movwf	fsr2l,c
 23580  0173B8  50E2               	movf	fsr1h,w,c
 23581  0173BA  6EDA               	movwf	fsr2h,c
 23582  0173BC  0EFF               	movlw	255
 23583  0173BE  22DA               	addwfc	fsr2h,f,c
 23584  0173C0  5005               	movf	(btemp+4)^0,w,c
 23585  0173C2  16DE               	andwf	postinc2,f,c
 23586  0173C4  5006               	movf	(btemp+5)^0,w,c
 23587  0173C6  16DE               	andwf	postinc2,f,c
 23588  0173C8  5007               	movf	(btemp+6)^0,w,c
 23589  0173CA  16DE               	andwf	postinc2,f,c
 23590  0173CC  5008               	movf	(btemp+7)^0,w,c
 23591  0173CE  16DE               	andwf	postinc2,f,c
 23592  0173D0  D05B               	goto	l8975
 23593  0173D2                     l8967:
 23594                           
 23595                           ;stkvar	_u @ sp[(-10)+0]
 23596  0173D2  0EF6               	movlw	-10
 23597  0173D4  006F FF8C  F009    	movff	plusw1,btemp+8
 23598  0173DA  0EF7               	movlw	-9
 23599  0173DC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23600  0173E2  0EF8               	movlw	-8
 23601  0173E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23602  0173EA  0EF9               	movlw	-7
 23603  0173EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23604  0173F2  0E20               	movlw	32
 23605  0173F4  D005               	goto	u6850
 23606  0173F6                     u6855:
 23607  0173F6  90D8               	bcf	status,0,c
 23608  0173F8  320C               	rrcf	(btemp+11)^0,f,c
 23609  0173FA  320B               	rrcf	(btemp+10)^0,f,c
 23610  0173FC  320A               	rrcf	(btemp+9)^0,f,c
 23611  0173FE  3209               	rrcf	(btemp+8)^0,f,c
 23612  017400                     u6850:
 23613  017400  2EE8               	decfsz	wreg,f,c
 23614  017402  D7F9               	goto	u6855
 23615  017404  6609               	tstfsz	(btemp+8)^0,c
 23616  017406  D009               	goto	l8971
 23617                           
 23618                           ;stkvar	_u @ sp[(-10)+0]
 23619  017408  0EF6               	movlw	-10
 23620  01740A  6AE3               	clrf	plusw1,c
 23621  01740C  0EF7               	movlw	-9
 23622  01740E  6AE3               	clrf	plusw1,c
 23623  017410  0EF8               	movlw	-8
 23624  017412  6AE3               	clrf	plusw1,c
 23625  017414  0EF9               	movlw	-7
 23626  017416  6AE3               	clrf	plusw1,c
 23627  017418  D037               	goto	l8975
 23628  01741A                     l8971:
 23629                           
 23630                           ;stkvar	_u @ sp[(-10)+0]
 23631  01741A  0EF6               	movlw	-10
 23632  01741C  006F FF8C  F009    	movff	plusw1,btemp+8
 23633  017422  0EF7               	movlw	-9
 23634  017424  006F FF8C  F00A    	movff	plusw1,btemp+9
 23635  01742A  0EF8               	movlw	-8
 23636  01742C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23637  017432  0EF9               	movlw	-7
 23638  017434  006F FF8C  F00C    	movff	plusw1,btemp+11
 23639  01743A  90D8               	bcf	status,0,c
 23640  01743C  3409               	rlcf	(btemp+8)^0,w,c
 23641  01743E  6E05               	movwf	(btemp+4)^0,c
 23642  017440  340A               	rlcf	(btemp+9)^0,w,c
 23643  017442  6E06               	movwf	(btemp+5)^0,c
 23644  017444  340B               	rlcf	(btemp+10)^0,w,c
 23645  017446  6E07               	movwf	(btemp+6)^0,c
 23646  017448  340C               	rlcf	(btemp+11)^0,w,c
 23647  01744A  6E08               	movwf	(btemp+7)^0,c
 23648  01744C  5005               	movf	(btemp+4)^0,w,c
 23649  01744E  1006               	iorwf	(btemp+5)^0,w,c
 23650  017450  1007               	iorwf	(btemp+6)^0,w,c
 23651  017452  1008               	iorwf	(btemp+7)^0,w,c
 23652  017454  B4D8               	btfsc	status,2,c
 23653  017456  D018               	goto	l8975
 23654  017458  0E00               	movlw	0
 23655  01745A  6E09               	movwf	(btemp+8)^0,c
 23656  01745C  0E00               	movlw	0
 23657  01745E  6E0A               	movwf	(btemp+9)^0,c
 23658  017460  0E80               	movlw	128
 23659  017462  6E0B               	movwf	(btemp+10)^0,c
 23660  017464  0EBF               	movlw	191
 23661  017466  6E0C               	movwf	(btemp+11)^0,c
 23662                           
 23663                           ;stkvar	_u @ sp[(-10)+0]
 23664  017468  0EF6               	movlw	-10
 23665  01746A  0060  F027  FFE3   	movff	btemp+8,plusw1
 23666  017470  0EF7               	movlw	-9
 23667  017472  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23668  017478  0EF8               	movlw	-8
 23669  01747A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23670  017480  0EF9               	movlw	-7
 23671  017482  0060  F033  FFE3   	movff	btemp+11,plusw1
 23672  017488                     l8975:
 23673                           
 23674                           ;stkvar	_u @ sp[(-10)+0]
 23675  017488  0EF6               	movlw	-10
 23676  01748A  006F FF8C  F001    	movff	plusw1,btemp
 23677  017490  0EF7               	movlw	-9
 23678  017492  006F FF8C  F002    	movff	plusw1,btemp+1
 23679  017498  0EF8               	movlw	-8
 23680  01749A  006F FF8C  F003    	movff	plusw1,btemp+2
 23681  0174A0  0EF9               	movlw	-7
 23682  0174A2                     L26:
 23683  0174A2  006F FF8C  F004    	movff	plusw1,btemp+3
 23684                           
 23685                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23686  0174A8  0EF2               	movlw	242
 23687  0174AA  26E1               	addwf	fsr1l,f,c
 23688  0174AC  0EFF               	movlw	255
 23689  0174AE  22E2               	addwfc	fsr1h,f,c
 23690  0174B0  0012               	return		;funcret
 23691  0174B2                     __end_of_floorf:
 23692                           	opt callstack 0
 23693                           
 23694 ;; *************** function ___fpclassifyf *****************
 23695 ;; Defined at:
 23696 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 23697 ;; Parameters:    Size  Location     Type
 23698 ;;  x               4  [STACK] float 
 23699 ;; Auto vars:     Size  Location     Type
 23700 ;;  u               4  [STACK] struct .
 23701 ;;  e               2  [STACK] int 
 23702 ;; Return value:  Size  Location     Type
 23703 ;;                  2  [STACK] int 
 23704 ;; Registers used:
 23705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 23706 ;; Tracked objects:
 23707 ;;		On entry : 0/0
 23708 ;;		On exit  : 0/0
 23709 ;;		Unchanged: 0/0
 23710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23715 ;;Total ram usage:        0 bytes
 23716 ;; Hardware stack levels used:    1
 23717 ;; Hardware stack levels required when called:   15
 23718 ;; This function calls:
 23719 ;;		Nothing
 23720 ;; This function is called by:
 23721 ;;		_efgtoa
 23722 ;; This function uses a reentrant model
 23723 ;;
 23724                           
 23725                           	psect	text83
 23726  01988E                     __ptext83:
 23727                           	opt callstack 0
 23728  01988E                     ___fpclassifyf:
 23729                           	opt callstack 0
 23730                           
 23731                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23732  01988E  0E06               	movlw	6
 23733  019890  26E1               	addwf	fsr1l,f,c
 23734  019892  0E00               	movlw	0
 23735  019894  22E2               	addwfc	fsr1h,f,c
 23736                           
 23737                           ;incstack = 0
 23738 ;; hardware stack exceeded
 23739  019896  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 23740  01989C  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 23741  0198A2  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 23742  0198A8  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 23743                           
 23744                           ;stkvar	_u @ sp[(-6)+0]
 23745  0198AE  0EFA               	movlw	-6
 23746  0198B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23747  0198B6  0EFB               	movlw	-5
 23748  0198B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23749  0198BE  0EFC               	movlw	-4
 23750  0198C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23751  0198C6  0EFD               	movlw	-3
 23752  0198C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23753                           
 23754                           ;stkvar	_x @ sp[(-6)+-4]
 23755  0198CE  0EF6               	movlw	-10
 23756  0198D0  006F FF8C  F009    	movff	plusw1,btemp+8
 23757  0198D6  0EF7               	movlw	-9
 23758  0198D8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23759  0198DE  0EF8               	movlw	-8
 23760  0198E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23761  0198E6  0EF9               	movlw	-7
 23762  0198E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23763                           
 23764                           ;stkvar	_u @ sp[(-6)+0]
 23765  0198EE  0EFA               	movlw	-6
 23766  0198F0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23767  0198F6  0EFB               	movlw	-5
 23768  0198F8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23769  0198FE  0EFC               	movlw	-4
 23770  019900  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23771  019906  0EFD               	movlw	-3
 23772  019908  0060  F033  FFE3   	movff	btemp+11,plusw1
 23773                           
 23774                           ;stkvar	_u @ sp[(-6)+0]
 23775  01990E  0EFA               	movlw	-6
 23776  019910  006F FF8C  F009    	movff	plusw1,btemp+8
 23777  019916  0EFB               	movlw	-5
 23778  019918  006F FF8C  F00A    	movff	plusw1,btemp+9
 23779  01991E  0EFC               	movlw	-4
 23780  019920  006F FF8C  F00B    	movff	plusw1,btemp+10
 23781  019926  0EFD               	movlw	-3
 23782  019928  006F FF8C  F00C    	movff	plusw1,btemp+11
 23783  01992E  0E18               	movlw	24
 23784  019930  D005               	goto	u6660
 23785  019932                     u6665:
 23786  019932  90D8               	bcf	status,0,c
 23787  019934  320C               	rrcf	(btemp+11)^0,f,c
 23788  019936  320B               	rrcf	(btemp+10)^0,f,c
 23789  019938  320A               	rrcf	(btemp+9)^0,f,c
 23790  01993A  3209               	rrcf	(btemp+8)^0,f,c
 23791  01993C                     u6660:
 23792  01993C  2EE8               	decfsz	wreg,f,c
 23793  01993E  D7F9               	goto	u6665
 23794  019940  0060  F024  F007   	movff	btemp+8,btemp+6
 23795  019946  0060  F028  F008   	movff	btemp+9,btemp+7
 23796  01994C  0EFF               	movlw	255
 23797  01994E  1607               	andwf	(btemp+6)^0,f,c
 23798  019950  0E00               	movlw	0
 23799  019952  1608               	andwf	(btemp+7)^0,f,c
 23800                           
 23801                           ;stkvar	_e @ sp[(-6)+4]
 23802  019954  0EFE               	movlw	-2
 23803  019956  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23804  01995C  0EFF               	movlw	-1
 23805  01995E  0060  F023  FFE3   	movff	btemp+7,plusw1
 23806                           
 23807                           ;stkvar	_e @ sp[(-6)+4]
 23808  019964  0EFE               	movlw	-2
 23809  019966  006F FF8C  F001    	movff	plusw1,btemp
 23810  01996C  0EFF               	movlw	-1
 23811  01996E  50E3               	movf	plusw1,w,c
 23812  019970  1001               	iorwf	btemp^0,w,c
 23813  019972  A4D8               	btfss	status,2,c
 23814  019974  D023               	goto	l8913
 23815                           
 23816                           ;stkvar	_u @ sp[(-6)+0]
 23817  019976  0EFA               	movlw	-6
 23818  019978  006F FF8C  F009    	movff	plusw1,btemp+8
 23819  01997E  0EFB               	movlw	-5
 23820  019980  006F FF8C  F00A    	movff	plusw1,btemp+9
 23821  019986  0EFC               	movlw	-4
 23822  019988  006F FF8C  F00B    	movff	plusw1,btemp+10
 23823  01998E  0EFD               	movlw	-3
 23824  019990  006F FF8C  F00C    	movff	plusw1,btemp+11
 23825  019996  90D8               	bcf	status,0,c
 23826  019998  3409               	rlcf	(btemp+8)^0,w,c
 23827  01999A  6E05               	movwf	(btemp+4)^0,c
 23828  01999C  340A               	rlcf	(btemp+9)^0,w,c
 23829  01999E  6E06               	movwf	(btemp+5)^0,c
 23830  0199A0  340B               	rlcf	(btemp+10)^0,w,c
 23831  0199A2  6E07               	movwf	(btemp+6)^0,c
 23832  0199A4  340C               	rlcf	(btemp+11)^0,w,c
 23833  0199A6  6E08               	movwf	(btemp+7)^0,c
 23834  0199A8  5005               	movf	(btemp+4)^0,w,c
 23835  0199AA  1006               	iorwf	(btemp+5)^0,w,c
 23836  0199AC  1007               	iorwf	(btemp+6)^0,w,c
 23837  0199AE  1008               	iorwf	(btemp+7)^0,w,c
 23838  0199B0  A4D8               	btfss	status,2,c
 23839  0199B2  D002               	goto	l8909
 23840  0199B4  0E02               	movlw	2
 23841  0199B6  D02E               	goto	L27
 23842  0199B8                     l8909:
 23843  0199B8  0E03               	movlw	3
 23844  0199BA  D02C               	goto	L27
 23845  0199BC                     l8913:
 23846                           
 23847                           ;stkvar	_e @ sp[(-6)+4]
 23848  0199BC  0EFE               	movlw	-2
 23849  0199BE  28E3               	incf	plusw1,w,c
 23850  0199C0  E128               	bnz	l8919
 23851  0199C2  0EFF               	movlw	-1
 23852  0199C4  50E3               	movf	plusw1,w,c
 23853  0199C6  A4D8               	btfss	status,2,c
 23854  0199C8  D024               	goto	l8919
 23855                           
 23856                           ;stkvar	_u @ sp[(-6)+0]
 23857  0199CA  0EFA               	movlw	-6
 23858  0199CC  006F FF8C  F009    	movff	plusw1,btemp+8
 23859  0199D2  0EFB               	movlw	-5
 23860  0199D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 23861  0199DA  0EFC               	movlw	-4
 23862  0199DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23863  0199E2  0EFD               	movlw	-3
 23864  0199E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23865  0199EA  0E09               	movlw	9
 23866  0199EC                     u6705:
 23867  0199EC  90D8               	bcf	status,0,c
 23868  0199EE  3609               	rlcf	(btemp+8)^0,f,c
 23869  0199F0  360A               	rlcf	(btemp+9)^0,f,c
 23870  0199F2  360B               	rlcf	(btemp+10)^0,f,c
 23871  0199F4  360C               	rlcf	(btemp+11)^0,f,c
 23872  0199F6  2EE8               	decfsz	wreg,f,c
 23873  0199F8  D7F9               	goto	u6705
 23874  0199FA  5009               	movf	(btemp+8)^0,w,c
 23875  0199FC  100A               	iorwf	(btemp+9)^0,w,c
 23876  0199FE  100B               	iorwf	(btemp+10)^0,w,c
 23877  019A00  100C               	iorwf	(btemp+11)^0,w,c
 23878  019A02  A4D8               	btfss	status,2,c
 23879  019A04  D002               	goto	u6710
 23880  019A06  0E01               	movlw	1
 23881  019A08  D001               	goto	u6720
 23882  019A0A                     u6710:
 23883  019A0A  0E00               	movlw	0
 23884  019A0C                     u6720:
 23885  019A0C  6E01               	movwf	btemp^0,c
 23886  019A0E  6A02               	clrf	(btemp+1)^0,c
 23887  019A10  D004               	goto	l3363
 23888  019A12                     l8919:
 23889  019A12  0E04               	movlw	4
 23890  019A14                     L27:
 23891  019A14  6E01               	movwf	btemp^0,c
 23892  019A16  0E00               	movlw	0
 23893  019A18  6E02               	movwf	(btemp+1)^0,c
 23894  019A1A                     l3363:
 23895                           
 23896                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 23897  019A1A  0EF6               	movlw	246
 23898  019A1C  26E1               	addwf	fsr1l,f,c
 23899  019A1E  0EFF               	movlw	255
 23900  019A20  22E2               	addwfc	fsr1h,f,c
 23901  019A22  0012               	return		;funcret
 23902  019A24                     __end_of___fpclassifyf:
 23903                           	opt callstack 0
 23904                           
 23905 ;; *************** function ___fltol *****************
 23906 ;; Defined at:
 23907 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 23908 ;; Parameters:    Size  Location     Type
 23909 ;;  f1              4  [STACK] int 
 23910 ;; Auto vars:     Size  Location     Type
 23911 ;;  exp1            1  [STACK] unsigned char 
 23912 ;;  sign1           1  [STACK] unsigned char 
 23913 ;; Return value:  Size  Location     Type
 23914 ;;                  4  [STACK] long 
 23915 ;; Registers used:
 23916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23917 ;; Tracked objects:
 23918 ;;		On entry : 0/0
 23919 ;;		On exit  : 0/0
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;Total ram usage:        0 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:   15
 23929 ;; This function calls:
 23930 ;;		Nothing
 23931 ;; This function is called by:
 23932 ;;		_main
 23933 ;;		_convert_dac_raw
 23934 ;;		_calc_bsoc
 23935 ;;		_init_bsoc
 23936 ;;		_efgtoa
 23937 ;; This function uses a reentrant model
 23938 ;;
 23939                           
 23940                           	psect	text84
 23941  019E9C                     __ptext84:
 23942                           	opt callstack 0
 23943  019E9C                     ___fltol:
 23944                           	opt callstack 0
 23945                           
 23946                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23947  019E9C  52E6               	movf	postinc1,f,c
 23948  019E9E  52E6               	movf	postinc1,f,c
 23949                           
 23950                           ;stkvar	_f1 @ sp[(-2)+-4]
 23951                           
 23952                           ;incstack = 0
 23953 ;; hardware stack exceeded
 23954  019EA0  0EFA               	movlw	-6
 23955  019EA2  006F FF8C  F009    	movff	plusw1,btemp+8
 23956  019EA8  0EFB               	movlw	-5
 23957  019EAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 23958  019EB0  0EFC               	movlw	-4
 23959  019EB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 23960  019EB8  0EFD               	movlw	-3
 23961  019EBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23962  019EC0  0E18               	movlw	24
 23963  019EC2  D005               	goto	u7870
 23964  019EC4                     u7875:
 23965  019EC4  90D8               	bcf	status,0,c
 23966  019EC6  320C               	rrcf	(btemp+11)^0,f,c
 23967  019EC8  320B               	rrcf	(btemp+10)^0,f,c
 23968  019ECA  320A               	rrcf	(btemp+9)^0,f,c
 23969  019ECC  3209               	rrcf	(btemp+8)^0,f,c
 23970  019ECE                     u7870:
 23971  019ECE  2EE8               	decfsz	wreg,f,c
 23972  019ED0  D7F9               	goto	u7875
 23973                           
 23974                           ;stkvar	_exp1 @ sp[(-2)+0]
 23975  019ED2  0EFE               	movlw	-2
 23976  019ED4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23977  019EDA  0EFE               	movlw	-2
 23978  019EDC  50E3               	movf	plusw1,w,c
 23979  019EDE  A4D8               	btfss	status,2,c
 23980  019EE0  D006               	goto	l9539
 23981  019EE2                     u7880:
 23982  019EE2  0E00               	movlw	0
 23983  019EE4  6E01               	movwf	btemp^0,c
 23984  019EE6  6A02               	clrf	(btemp+1)^0,c
 23985  019EE8  6A03               	clrf	(btemp+2)^0,c
 23986  019EEA  6A04               	clrf	(btemp+3)^0,c
 23987  019EEC  D08B               	goto	l2979
 23988  019EEE                     l9539:
 23989                           
 23990                           ;stkvar	_f1 @ sp[(-2)+-4]
 23991  019EEE  0EFA               	movlw	-6
 23992  019EF0  006F FF8C  F009    	movff	plusw1,btemp+8
 23993  019EF6  0EFB               	movlw	-5
 23994  019EF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23995  019EFE  0EFC               	movlw	-4
 23996  019F00  006F FF8C  F00B    	movff	plusw1,btemp+10
 23997  019F06  0EFD               	movlw	-3
 23998  019F08  006F FF8C  F00C    	movff	plusw1,btemp+11
 23999  019F0E  0E20               	movlw	32
 24000  019F10  D005               	goto	u7890
 24001  019F12                     u7895:
 24002  019F12  90D8               	bcf	status,0,c
 24003  019F14  320C               	rrcf	(btemp+11)^0,f,c
 24004  019F16  320B               	rrcf	(btemp+10)^0,f,c
 24005  019F18  320A               	rrcf	(btemp+9)^0,f,c
 24006  019F1A  3209               	rrcf	(btemp+8)^0,f,c
 24007  019F1C                     u7890:
 24008  019F1C  2EE8               	decfsz	wreg,f,c
 24009  019F1E  D7F9               	goto	u7895
 24010                           
 24011                           ;stkvar	_sign1 @ sp[(-2)+1]
 24012  019F20  0EFF               	movlw	-1
 24013  019F22  0060  F027  FFE3   	movff	btemp+8,plusw1
 24014                           
 24015                           ;stkvar	_f1 @ sp[(-2)+-4]
 24016  019F28  0EFC               	movlw	-4
 24017  019F2A  8EE3               	bsf	plusw1,7,c
 24018                           
 24019                           ;stkvar	_f1 @ sp[(-2)+-4]
 24020  019F2C  50E1               	movf	fsr1l,w,c
 24021  019F2E  0FFA               	addlw	-6
 24022  019F30  6ED9               	movwf	fsr2l,c
 24023  019F32  50E2               	movf	fsr1h,w,c
 24024  019F34  6EDA               	movwf	fsr2h,c
 24025  019F36  0EFF               	movlw	255
 24026  019F38  22DA               	addwfc	fsr2h,f,c
 24027  019F3A  0EFF               	movlw	255
 24028  019F3C  16DE               	andwf	postinc2,f,c
 24029  019F3E  0EFF               	movlw	255
 24030  019F40  16DE               	andwf	postinc2,f,c
 24031  019F42  0EFF               	movlw	255
 24032  019F44  16DE               	andwf	postinc2,f,c
 24033  019F46  0E00               	movlw	0
 24034  019F48  16DE               	andwf	postinc2,f,c
 24035                           
 24036                           ;stkvar	_exp1 @ sp[(-2)+0]
 24037  019F4A  0EFE               	movlw	-2
 24038  019F4C  006F FF8C  F001    	movff	plusw1,btemp
 24039  019F52  0E96               	movlw	150
 24040  019F54  5E01               	subwf	btemp^0,f,c
 24041  019F56  0EFE               	movlw	-2
 24042  019F58  0060  F007  FFE3   	movff	btemp,plusw1
 24043                           
 24044                           ;stkvar	_exp1 @ sp[(-2)+0]
 24045  019F5E  0EFE               	movlw	-2
 24046  019F60  AEE3               	btfss	plusw1,7,c
 24047  019F62  D014               	goto	l9557
 24048                           
 24049                           ;stkvar	_exp1 @ sp[(-2)+0]
 24050  019F64  0EFE               	movlw	-2
 24051  019F66  50E3               	movf	plusw1,w,c
 24052  019F68  0A80               	xorlw	128
 24053  019F6A  0F97               	addlw	151
 24054  019F6C  A0D8               	btfss	status,0,c
 24055  019F6E  D7B9               	goto	u7880
 24056  019F70                     l9555:
 24057                           
 24058                           ;stkvar	_f1 @ sp[(-2)+-4]
 24059  019F70  90D8               	bcf	status,0,c
 24060  019F72  0EFD               	movlw	-3
 24061  019F74  32E3               	rrcf	plusw1,f,c
 24062  019F76  0EFC               	movlw	-4
 24063  019F78  32E3               	rrcf	plusw1,f,c
 24064  019F7A  0EFB               	movlw	-5
 24065  019F7C  32E3               	rrcf	plusw1,f,c
 24066  019F7E  0EFA               	movlw	-6
 24067  019F80  32E3               	rrcf	plusw1,f,c
 24068                           
 24069                           ;stkvar	_exp1 @ sp[(-2)+0]
 24070  019F82  0EFE               	movlw	-2
 24071  019F84  2AE3               	incf	plusw1,f,c
 24072  019F86  B4D8               	btfsc	status,2,c
 24073  019F88  D018               	goto	u7940
 24074  019F8A  D7F2               	goto	l9555
 24075  019F8C                     l9557:
 24076                           
 24077                           ;stkvar	_exp1 @ sp[(-2)+0]
 24078  019F8C  0EFE               	movlw	-2
 24079  019F8E  006F FF8C  F001    	movff	plusw1,btemp
 24080  019F94  0E1F               	movlw	31
 24081  019F96  6401               	cpfsgt	btemp^0,c
 24082  019F98  D00C               	goto	l9565
 24083  019F9A  D7A3               	goto	u7880
 24084  019F9C                     l9563:
 24085                           
 24086                           ;stkvar	_f1 @ sp[(-2)+-4]
 24087  019F9C  90D8               	bcf	status,0,c
 24088  019F9E  0EFA               	movlw	-6
 24089  019FA0  36E3               	rlcf	plusw1,f,c
 24090  019FA2  0EFB               	movlw	-5
 24091  019FA4  36E3               	rlcf	plusw1,f,c
 24092  019FA6  0EFC               	movlw	-4
 24093  019FA8  36E3               	rlcf	plusw1,f,c
 24094  019FAA  0EFD               	movlw	-3
 24095  019FAC  36E3               	rlcf	plusw1,f,c
 24096                           
 24097                           ;stkvar	_exp1 @ sp[(-2)+0]
 24098  019FAE  0EFE               	movlw	-2
 24099  019FB0  06E3               	decf	plusw1,f,c
 24100  019FB2                     l9565:
 24101                           
 24102                           ;stkvar	_exp1 @ sp[(-2)+0]
 24103  019FB2  0EFE               	movlw	-2
 24104  019FB4  50E3               	movf	plusw1,w,c
 24105  019FB6  A4D8               	btfss	status,2,c
 24106  019FB8  D7F1               	goto	l9563
 24107  019FBA                     u7940:
 24108                           
 24109                           ;stkvar	_sign1 @ sp[(-2)+1]
 24110  019FBA  0EFF               	movlw	-1
 24111  019FBC  50E3               	movf	plusw1,w,c
 24112  019FBE  B4D8               	btfsc	status,2,c
 24113  019FC0  D011               	goto	u7960
 24114                           
 24115                           ;stkvar	_f1 @ sp[(-2)+-4]
 24116                           ;stkvar	_f1 @ sp[(-2)+-4]
 24117  019FC2  0EFA               	movlw	-6
 24118  019FC4  6CE3               	negf	plusw1,c
 24119  019FC6  0EFB               	movlw	-5
 24120  019FC8  1EE3               	comf	plusw1,f,c
 24121  019FCA  0EFC               	movlw	-4
 24122  019FCC  1EE3               	comf	plusw1,f,c
 24123  019FCE  0EFD               	movlw	-3
 24124  019FD0  1EE3               	comf	plusw1,f,c
 24125  019FD2  E308               	bnc	u7960
 24126  019FD4  0EFB               	movlw	-5
 24127  019FD6  2AE3               	incf	plusw1,f,c
 24128  019FD8  E305               	bnc	u7960
 24129  019FDA  0EFC               	movlw	-4
 24130  019FDC  2AE3               	incf	plusw1,f,c
 24131  019FDE  E302               	bnc	u7960
 24132  019FE0  0EFD               	movlw	-3
 24133  019FE2  2AE3               	incf	plusw1,f,c
 24134  019FE4                     u7960:
 24135                           
 24136                           ;stkvar	_f1 @ sp[(-2)+-4]
 24137  019FE4  0EFA               	movlw	-6
 24138  019FE6  006F FF8C  F001    	movff	plusw1,btemp
 24139  019FEC  0EFB               	movlw	-5
 24140  019FEE  006F FF8C  F002    	movff	plusw1,btemp+1
 24141  019FF4  0EFC               	movlw	-4
 24142  019FF6  006F FF8C  F003    	movff	plusw1,btemp+2
 24143  019FFC  0EFD               	movlw	-3
 24144  019FFE  006F FF8C  F004    	movff	plusw1,btemp+3
 24145  01A004                     l2979:
 24146                           
 24147                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24148  01A004  0EFA               	movlw	250
 24149  01A006  26E1               	addwf	fsr1l,f,c
 24150  01A008  0EFF               	movlw	255
 24151  01A00A  22E2               	addwfc	fsr1h,f,c
 24152  01A00C  0012               	return		;funcret
 24153  01A00E                     __end_of___fltol:
 24154                           	opt callstack 0
 24155                           
 24156 ;; *************** function ___flneg *****************
 24157 ;; Defined at:
 24158 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;  f1              4  [STACK] long 
 24161 ;; Auto vars:     Size  Location     Type
 24162 ;;		None
 24163 ;; Return value:  Size  Location     Type
 24164 ;;                  4  [STACK] long 
 24165 ;; Registers used:
 24166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 24167 ;; Tracked objects:
 24168 ;;		On entry : 0/0
 24169 ;;		On exit  : 0/0
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24176 ;;Total ram usage:        0 bytes
 24177 ;; Hardware stack levels used:    1
 24178 ;; Hardware stack levels required when called:   15
 24179 ;; This function calls:
 24180 ;;		Nothing
 24181 ;; This function is called by:
 24182 ;;		_calc_bsoc
 24183 ;;		_efgtoa
 24184 ;; This function uses a reentrant model
 24185 ;;
 24186                           
 24187                           	psect	text85
 24188  01CDB4                     __ptext85:
 24189                           	opt callstack 0
 24190  01CDB4                     ___flneg:
 24191                           	opt callstack 0
 24192                           
 24193                           ;stkvar	_f1 @ sp[(0)+-4]
 24194                           
 24195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24196                           ;incstack = 0
 24197 ;; hardware stack exceeded
 24198  01CDB4  0EFC               	movlw	-4
 24199  01CDB6  50E3               	movf	plusw1,w,c
 24200  01CDB8  E10A               	bnz	u7860
 24201  01CDBA  0EFD               	movlw	-3
 24202  01CDBC  50E3               	movf	plusw1,w,c
 24203  01CDBE  E107               	bnz	u7860
 24204  01CDC0  0EFE               	movlw	-2
 24205  01CDC2  50E3               	movf	plusw1,w,c
 24206  01CDC4  E104               	bnz	u7860
 24207  01CDC6  0EFF               	movlw	-1
 24208  01CDC8  50E3               	movf	plusw1,w,c
 24209  01CDCA  B4D8               	btfsc	status,2,c
 24210  01CDCC  D002               	goto	l9529
 24211  01CDCE                     u7860:
 24212                           
 24213                           ;stkvar	_f1 @ sp[(0)+-4]
 24214  01CDCE  0EFF               	movlw	-1
 24215  01CDD0  7EE3               	btg	plusw1,7,c
 24216  01CDD2                     l9529:
 24217                           
 24218                           ;stkvar	_f1 @ sp[(0)+-4]
 24219  01CDD2  0EFC               	movlw	-4
 24220  01CDD4  006F FF8C  F001    	movff	plusw1,btemp
 24221  01CDDA  0EFD               	movlw	-3
 24222  01CDDC  006F FF8C  F002    	movff	plusw1,btemp+1
 24223  01CDE2  0EFE               	movlw	-2
 24224  01CDE4  006F FF8C  F003    	movff	plusw1,btemp+2
 24225  01CDEA  0EFF               	movlw	-1
 24226  01CDEC  006F FF8C  F004    	movff	plusw1,btemp+3
 24227                           
 24228                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24229  01CDF2  52E5               	movf	postdec1,f,c
 24230  01CDF4  52E5               	movf	postdec1,f,c
 24231  01CDF6  52E5               	movf	postdec1,f,c
 24232  01CDF8  52E5               	movf	postdec1,f,c
 24233  01CDFA  0012               	return		;funcret
 24234  01CDFC                     __end_of___flneg:
 24235                           	opt callstack 0
 24236                           
 24237 ;; *************** function ___fleq *****************
 24238 ;; Defined at:
 24239 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 24240 ;; Parameters:    Size  Location     Type
 24241 ;;  ff1             4  [STACK] long 
 24242 ;;  ff2             4  [STACK] long 
 24243 ;; Auto vars:     Size  Location     Type
 24244 ;;		None
 24245 ;; Return value:  Size  Location     Type
 24246 ;;		None               void
 24247 ;; Registers used:
 24248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24249 ;; Tracked objects:
 24250 ;;		On entry : 0/0
 24251 ;;		On exit  : 0/0
 24252 ;;		Unchanged: 0/0
 24253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24258 ;;Total ram usage:        0 bytes
 24259 ;; Hardware stack levels used:    1
 24260 ;; Hardware stack levels required when called:   15
 24261 ;; This function calls:
 24262 ;;		Nothing
 24263 ;; This function is called by:
 24264 ;;		_efgtoa
 24265 ;; This function uses a reentrant model
 24266 ;;
 24267                           
 24268                           	psect	text86
 24269  01B706                     __ptext86:
 24270                           	opt callstack 0
 24271  01B706                     ___fleq:
 24272                           	opt callstack 0
 24273                           
 24274                           ;stkvar	_ff1 @ sp[(0)+-4]
 24275                           
 24276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24277                           ;incstack = 0
 24278 ;; hardware stack exceeded
 24279  01B706  50E1               	movf	fsr1l,w,c
 24280  01B708  0FFC               	addlw	-4
 24281  01B70A  6ED9               	movwf	fsr2l,c
 24282  01B70C  50E2               	movf	fsr1h,w,c
 24283  01B70E  6EDA               	movwf	fsr2h,c
 24284  01B710  0EFF               	movlw	255
 24285  01B712  22DA               	addwfc	fsr2h,f,c
 24286  01B714  0E00               	movlw	0
 24287  01B716  14DE               	andwf	postinc2,w,c
 24288  01B718  6E09               	movwf	(btemp+8)^0,c
 24289  01B71A  0E00               	movlw	0
 24290  01B71C  14DE               	andwf	postinc2,w,c
 24291  01B71E  6E0A               	movwf	(btemp+9)^0,c
 24292  01B720  0E80               	movlw	128
 24293  01B722  14DE               	andwf	postinc2,w,c
 24294  01B724  6E0B               	movwf	(btemp+10)^0,c
 24295  01B726  0E7F               	movlw	127
 24296  01B728  14DE               	andwf	postinc2,w,c
 24297  01B72A  6E0C               	movwf	(btemp+11)^0,c
 24298  01B72C  5009               	movf	(btemp+8)^0,w,c
 24299  01B72E  100A               	iorwf	(btemp+9)^0,w,c
 24300  01B730  100B               	iorwf	(btemp+10)^0,w,c
 24301  01B732  100C               	iorwf	(btemp+11)^0,w,c
 24302  01B734  A4D8               	btfss	status,2,c
 24303  01B736  D008               	goto	l9487
 24304                           
 24305                           ;stkvar	_ff1 @ sp[(0)+-4]
 24306  01B738  0EFC               	movlw	-4
 24307  01B73A  6AE3               	clrf	plusw1,c
 24308  01B73C  0EFD               	movlw	-3
 24309  01B73E  6AE3               	clrf	plusw1,c
 24310  01B740  0EFE               	movlw	-2
 24311  01B742  6AE3               	clrf	plusw1,c
 24312  01B744  0EFF               	movlw	-1
 24313  01B746  6AE3               	clrf	plusw1,c
 24314  01B748                     l9487:
 24315                           
 24316                           ;stkvar	_ff2 @ sp[(0)+-8]
 24317  01B748  50E1               	movf	fsr1l,w,c
 24318  01B74A  0FF8               	addlw	-8
 24319  01B74C  6ED9               	movwf	fsr2l,c
 24320  01B74E  50E2               	movf	fsr1h,w,c
 24321  01B750  6EDA               	movwf	fsr2h,c
 24322  01B752  0EFF               	movlw	255
 24323  01B754  22DA               	addwfc	fsr2h,f,c
 24324  01B756  0E00               	movlw	0
 24325  01B758  14DE               	andwf	postinc2,w,c
 24326  01B75A  6E09               	movwf	(btemp+8)^0,c
 24327  01B75C  0E00               	movlw	0
 24328  01B75E  14DE               	andwf	postinc2,w,c
 24329  01B760  6E0A               	movwf	(btemp+9)^0,c
 24330  01B762  0E80               	movlw	128
 24331  01B764  14DE               	andwf	postinc2,w,c
 24332  01B766  6E0B               	movwf	(btemp+10)^0,c
 24333  01B768  0E7F               	movlw	127
 24334  01B76A  14DE               	andwf	postinc2,w,c
 24335  01B76C  6E0C               	movwf	(btemp+11)^0,c
 24336  01B76E  5009               	movf	(btemp+8)^0,w,c
 24337  01B770  100A               	iorwf	(btemp+9)^0,w,c
 24338  01B772  100B               	iorwf	(btemp+10)^0,w,c
 24339  01B774  100C               	iorwf	(btemp+11)^0,w,c
 24340  01B776  A4D8               	btfss	status,2,c
 24341  01B778  D008               	goto	l9491
 24342                           
 24343                           ;stkvar	_ff2 @ sp[(0)+-8]
 24344  01B77A  0EF8               	movlw	-8
 24345  01B77C  6AE3               	clrf	plusw1,c
 24346  01B77E  0EF9               	movlw	-7
 24347  01B780  6AE3               	clrf	plusw1,c
 24348  01B782  0EFA               	movlw	-6
 24349  01B784  6AE3               	clrf	plusw1,c
 24350  01B786  0EFB               	movlw	-5
 24351  01B788  6AE3               	clrf	plusw1,c
 24352  01B78A                     l9491:
 24353                           
 24354                           ;stkvar	_ff2 @ sp[(0)+-8]
 24355                           ;stkvar	_ff1 @ sp[(0)+-4]
 24356  01B78A  50E1               	movf	fsr1l,w,c
 24357  01B78C  0FFC               	addlw	-4
 24358  01B78E  6ED9               	movwf	fsr2l,c
 24359  01B790  50E2               	movf	fsr1h,w,c
 24360  01B792  6EDA               	movwf	fsr2h,c
 24361  01B794  0EFF               	movlw	255
 24362  01B796  22DA               	addwfc	fsr2h,f,c
 24363  01B798  0EF8               	movlw	-8
 24364  01B79A  50E3               	movf	plusw1,w,c
 24365  01B79C  18DE               	xorwf	postinc2,w,c
 24366  01B79E  E10D               	bnz	u7800
 24367  01B7A0  0EF9               	movlw	-7
 24368  01B7A2  50E3               	movf	plusw1,w,c
 24369  01B7A4  18DE               	xorwf	postinc2,w,c
 24370  01B7A6  E109               	bnz	u7800
 24371  01B7A8  0EFA               	movlw	-6
 24372  01B7AA  50E3               	movf	plusw1,w,c
 24373  01B7AC  18DE               	xorwf	postinc2,w,c
 24374  01B7AE  E105               	bnz	u7800
 24375  01B7B0  0EFB               	movlw	-5
 24376  01B7B2  50E3               	movf	plusw1,w,c
 24377  01B7B4  18DE               	xorwf	postinc2,w,c
 24378  01B7B6  B4D8               	btfsc	status,2,c
 24379  01B7B8  D002               	goto	l9495
 24380  01B7BA                     u7800:
 24381  01B7BA  9001               	bcf	btemp& (0+255),0,c
 24382  01B7BC  D001               	goto	l2941
 24383  01B7BE                     l9495:
 24384  01B7BE  8001               	bsf	btemp& (0+255),0,c
 24385  01B7C0                     l2941:
 24386                           
 24387                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 24388  01B7C0  0EF8               	movlw	248
 24389  01B7C2  26E1               	addwf	fsr1l,f,c
 24390  01B7C4  0EFF               	movlw	255
 24391  01B7C6  22E2               	addwfc	fsr1h,f,c
 24392  01B7C8  0012               	return		;funcret
 24393  01B7CA                     __end_of___fleq:
 24394                           	opt callstack 0
 24395                           
 24396 ;; *************** function ___awmod *****************
 24397 ;; Defined at:
 24398 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 24399 ;; Parameters:    Size  Location     Type
 24400 ;;  dividend        2  [STACK] int 
 24401 ;;  divisor         2  [STACK] int 
 24402 ;; Auto vars:     Size  Location     Type
 24403 ;;  sign            1  [STACK] unsigned char 
 24404 ;;  counter         1  [STACK] unsigned char 
 24405 ;; Return value:  Size  Location     Type
 24406 ;;                  2  [STACK] int 
 24407 ;; Registers used:
 24408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24409 ;; Tracked objects:
 24410 ;;		On entry : 0/0
 24411 ;;		On exit  : 0/0
 24412 ;;		Unchanged: 0/0
 24413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24418 ;;Total ram usage:        0 bytes
 24419 ;; Hardware stack levels used:    1
 24420 ;; Hardware stack levels required when called:   15
 24421 ;; This function calls:
 24422 ;;		Nothing
 24423 ;; This function is called by:
 24424 ;;		_efgtoa
 24425 ;; This function uses a reentrant model
 24426 ;;
 24427                           
 24428                           	psect	text87
 24429  01AC86                     __ptext87:
 24430                           	opt callstack 0
 24431  01AC86                     ___awmod:
 24432                           	opt callstack 0
 24433                           
 24434                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24435  01AC86  52E6               	movf	postinc1,f,c
 24436  01AC88  52E6               	movf	postinc1,f,c
 24437                           
 24438                           ;stkvar	_sign @ sp[(-2)+0]
 24439                           
 24440                           ;incstack = 0
 24441 ;; hardware stack exceeded
 24442  01AC8A  0EFE               	movlw	-2
 24443  01AC8C  6AE3               	clrf	plusw1,c
 24444                           
 24445                           ;stkvar	_dividend @ sp[(-2)+-2]
 24446  01AC8E  0EFD               	movlw	-3
 24447  01AC90  AEE3               	btfss	plusw1,7,c
 24448  01AC92  D009               	goto	l9453
 24449                           
 24450                           ;stkvar	_dividend @ sp[(-2)+-2]
 24451                           ;stkvar	_dividend @ sp[(-2)+-2]
 24452  01AC94  0EFC               	movlw	-4
 24453  01AC96  6CE3               	negf	plusw1,c
 24454  01AC98  0EFD               	movlw	-3
 24455  01AC9A  1EE3               	comf	plusw1,f,c
 24456  01AC9C  B0D8               	btfsc	status,0,c
 24457  01AC9E  2AE3               	incf	plusw1,f,c
 24458                           
 24459                           ;stkvar	_sign @ sp[(-2)+0]
 24460  01ACA0  0EFE               	movlw	-2
 24461  01ACA2  6AE3               	clrf	plusw1,c
 24462  01ACA4  2AE3               	incf	plusw1,f,c
 24463  01ACA6                     l9453:
 24464                           
 24465                           ;stkvar	_divisor @ sp[(-2)+-4]
 24466  01ACA6  0EFB               	movlw	-5
 24467  01ACA8  AEE3               	btfss	plusw1,7,c
 24468  01ACAA  D006               	goto	l9457
 24469                           
 24470                           ;stkvar	_divisor @ sp[(-2)+-4]
 24471                           ;stkvar	_divisor @ sp[(-2)+-4]
 24472  01ACAC  0EFA               	movlw	-6
 24473  01ACAE  6CE3               	negf	plusw1,c
 24474  01ACB0  0EFB               	movlw	-5
 24475  01ACB2  1EE3               	comf	plusw1,f,c
 24476  01ACB4  B0D8               	btfsc	status,0,c
 24477  01ACB6  2AE3               	incf	plusw1,f,c
 24478  01ACB8                     l9457:
 24479                           
 24480                           ;stkvar	_divisor @ sp[(-2)+-4]
 24481  01ACB8  0EFA               	movlw	-6
 24482  01ACBA  006F FF8C  F001    	movff	plusw1,btemp
 24483  01ACC0  0EFB               	movlw	-5
 24484  01ACC2  50E3               	movf	plusw1,w,c
 24485  01ACC4  1001               	iorwf	btemp^0,w,c
 24486  01ACC6  B4D8               	btfsc	status,2,c
 24487  01ACC8  D053               	goto	u7760
 24488                           
 24489                           ;stkvar	_counter @ sp[(-2)+1]
 24490  01ACCA  0EFF               	movlw	-1
 24491  01ACCC  6AE3               	clrf	plusw1,c
 24492  01ACCE  D012               	goto	L28
 24493  01ACD0                     l9461:
 24494                           
 24495                           ;stkvar	_divisor @ sp[(-2)+-4]
 24496  01ACD0  0EFA               	movlw	-6
 24497  01ACD2  50E3               	movf	plusw1,w,c
 24498  01ACD4  90D8               	bcf	status,0,c
 24499  01ACD6  34E8               	rlcf	wreg,w,c
 24500  01ACD8  6E01               	movwf	btemp^0,c
 24501  01ACDA  0EFA               	movlw	-6
 24502  01ACDC  0060  F007  FFE3   	movff	btemp,plusw1
 24503  01ACE2  0EFB               	movlw	-5
 24504  01ACE4  50E3               	movf	plusw1,w,c
 24505  01ACE6  34E8               	rlcf	wreg,w,c
 24506  01ACE8  6E01               	movwf	btemp^0,c
 24507  01ACEA  0EFB               	movlw	-5
 24508  01ACEC  0060  F007  FFE3   	movff	btemp,plusw1
 24509                           
 24510                           ;stkvar	_counter @ sp[(-2)+1]
 24511  01ACF2  0EFF               	movlw	-1
 24512  01ACF4                     L28:
 24513  01ACF4  2AE3               	incf	plusw1,f,c
 24514                           
 24515                           ;stkvar	_divisor @ sp[(-2)+-4]
 24516  01ACF6  0EFB               	movlw	-5
 24517  01ACF8  AEE3               	btfss	plusw1,7,c
 24518  01ACFA  D7EA               	goto	l9461
 24519  01ACFC                     u7740:
 24520                           
 24521                           ;stkvar	_divisor @ sp[(-2)+-4]
 24522  01ACFC  0EFA               	movlw	-6
 24523  01ACFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24524  01AD04  0EFB               	movlw	-5
 24525  01AD06  006F FF8C  F00C    	movff	plusw1,btemp+11
 24526                           
 24527                           ;stkvar	_dividend @ sp[(-2)+-2]
 24528  01AD0C  0EFC               	movlw	-4
 24529  01AD0E  006F FF8C  F009    	movff	plusw1,btemp+8
 24530  01AD14  0EFD               	movlw	-3
 24531  01AD16  006F FF8C  F00A    	movff	plusw1,btemp+9
 24532  01AD1C  500B               	movf	(btemp+10)^0,w,c
 24533  01AD1E  5C09               	subwf	(btemp+8)^0,w,c
 24534  01AD20  500C               	movf	(btemp+11)^0,w,c
 24535  01AD22  580A               	subwfb	(btemp+9)^0,w,c
 24536  01AD24  A0D8               	btfss	status,0,c
 24537  01AD26  D014               	goto	l9471
 24538                           
 24539                           ;stkvar	_divisor @ sp[(-2)+-4]
 24540                           ;stkvar	_dividend @ sp[(-2)+-2]
 24541  01AD28  0EFC               	movlw	-4
 24542  01AD2A  50E3               	movf	plusw1,w,c
 24543  01AD2C  6E01               	movwf	btemp^0,c
 24544  01AD2E  0EFA               	movlw	-6
 24545  01AD30  50E3               	movf	plusw1,w,c
 24546  01AD32  5E01               	subwf	btemp^0,f,c
 24547  01AD34  0EFC               	movlw	-4
 24548  01AD36  0060  F007  FFE3   	movff	btemp,plusw1
 24549  01AD3C  0EFD               	movlw	-3
 24550  01AD3E  50E3               	movf	plusw1,w,c
 24551  01AD40  6E01               	movwf	btemp^0,c
 24552  01AD42  0EFB               	movlw	-5
 24553  01AD44  50E3               	movf	plusw1,w,c
 24554  01AD46  5A01               	subwfb	btemp^0,f,c
 24555  01AD48  0EFD               	movlw	-3
 24556  01AD4A  0060  F007  FFE3   	movff	btemp,plusw1
 24557  01AD50                     l9471:
 24558                           
 24559                           ;stkvar	_divisor @ sp[(-2)+-4]
 24560  01AD50  90D8               	bcf	status,0,c
 24561  01AD52  0EFB               	movlw	-5
 24562  01AD54  32E3               	rrcf	plusw1,f,c
 24563  01AD56  0EFA               	movlw	-6
 24564  01AD58  32E3               	rrcf	plusw1,f,c
 24565                           
 24566                           ;stkvar	_counter @ sp[(-2)+1]
 24567  01AD5A  0EFF               	movlw	-1
 24568  01AD5C  50E3               	movf	plusw1,w,c
 24569  01AD5E  6E01               	movwf	btemp^0,c
 24570  01AD60  0E01               	movlw	1
 24571  01AD62  5E01               	subwf	btemp^0,f,c
 24572  01AD64  0EFF               	movlw	-1
 24573  01AD66  0060  F007  FFE3   	movff	btemp,plusw1
 24574  01AD6C  A4D8               	btfss	status,2,c
 24575  01AD6E  D7C6               	goto	u7740
 24576  01AD70                     u7760:
 24577                           
 24578                           ;stkvar	_sign @ sp[(-2)+0]
 24579  01AD70  0EFE               	movlw	-2
 24580  01AD72  50E3               	movf	plusw1,w,c
 24581  01AD74  B4D8               	btfsc	status,2,c
 24582  01AD76  D006               	goto	l9479
 24583                           
 24584                           ;stkvar	_dividend @ sp[(-2)+-2]
 24585                           ;stkvar	_dividend @ sp[(-2)+-2]
 24586  01AD78  0EFC               	movlw	-4
 24587  01AD7A  6CE3               	negf	plusw1,c
 24588  01AD7C  0EFD               	movlw	-3
 24589  01AD7E  1EE3               	comf	plusw1,f,c
 24590  01AD80  B0D8               	btfsc	status,0,c
 24591  01AD82  2AE3               	incf	plusw1,f,c
 24592  01AD84                     l9479:
 24593                           
 24594                           ;stkvar	_dividend @ sp[(-2)+-2]
 24595  01AD84  0EFC               	movlw	-4
 24596  01AD86  006F FF8C  F001    	movff	plusw1,btemp
 24597  01AD8C  0EFD               	movlw	-3
 24598  01AD8E  006F FF8C  F002    	movff	plusw1,btemp+1
 24599                           
 24600                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24601  01AD94  0EFA               	movlw	250
 24602  01AD96  26E1               	addwf	fsr1l,f,c
 24603  01AD98  0EFF               	movlw	255
 24604  01AD9A  22E2               	addwfc	fsr1h,f,c
 24605  01AD9C  0012               	return		;funcret
 24606  01AD9E                     __end_of___awmod:
 24607                           	opt callstack 0
 24608                           
 24609 ;; *************** function ___awdiv *****************
 24610 ;; Defined at:
 24611 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 24612 ;; Parameters:    Size  Location     Type
 24613 ;;  dividend        2  [STACK] int 
 24614 ;;  divisor         2  [STACK] int 
 24615 ;; Auto vars:     Size  Location     Type
 24616 ;;  quotient        2  [STACK] int 
 24617 ;;  sign            1  [STACK] unsigned char 
 24618 ;;  counter         1  [STACK] unsigned char 
 24619 ;; Return value:  Size  Location     Type
 24620 ;;                  2  [STACK] int 
 24621 ;; Registers used:
 24622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24623 ;; Tracked objects:
 24624 ;;		On entry : 0/0
 24625 ;;		On exit  : 0/0
 24626 ;;		Unchanged: 0/0
 24627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24632 ;;Total ram usage:        0 bytes
 24633 ;; Hardware stack levels used:    1
 24634 ;; Hardware stack levels required when called:   15
 24635 ;; This function calls:
 24636 ;;		Nothing
 24637 ;; This function is called by:
 24638 ;;		_efgtoa
 24639 ;; This function uses a reentrant model
 24640 ;;
 24641                           
 24642                           	psect	text88
 24643  01A42A                     __ptext88:
 24644                           	opt callstack 0
 24645  01A42A                     ___awdiv:
 24646                           	opt callstack 0
 24647                           
 24648                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24649  01A42A  52E6               	movf	postinc1,f,c
 24650  01A42C  52E6               	movf	postinc1,f,c
 24651  01A42E  52E6               	movf	postinc1,f,c
 24652  01A430  52E6               	movf	postinc1,f,c
 24653                           
 24654                           ;stkvar	_sign @ sp[(-4)+2]
 24655                           
 24656                           ;incstack = 0
 24657 ;; hardware stack exceeded
 24658  01A432  0EFE               	movlw	-2
 24659  01A434  6AE3               	clrf	plusw1,c
 24660                           
 24661                           ;stkvar	_divisor @ sp[(-4)+-4]
 24662  01A436  0EF9               	movlw	-7
 24663  01A438  AEE3               	btfss	plusw1,7,c
 24664  01A43A  D009               	goto	l9407
 24665                           
 24666                           ;stkvar	_divisor @ sp[(-4)+-4]
 24667                           ;stkvar	_divisor @ sp[(-4)+-4]
 24668  01A43C  0EF8               	movlw	-8
 24669  01A43E  6CE3               	negf	plusw1,c
 24670  01A440  0EF9               	movlw	-7
 24671  01A442  1EE3               	comf	plusw1,f,c
 24672  01A444  B0D8               	btfsc	status,0,c
 24673  01A446  2AE3               	incf	plusw1,f,c
 24674                           
 24675                           ;stkvar	_sign @ sp[(-4)+2]
 24676  01A448  0EFE               	movlw	-2
 24677  01A44A  6AE3               	clrf	plusw1,c
 24678  01A44C  2AE3               	incf	plusw1,f,c
 24679  01A44E                     l9407:
 24680                           
 24681                           ;stkvar	_dividend @ sp[(-4)+-2]
 24682  01A44E  0EFB               	movlw	-5
 24683  01A450  AEE3               	btfss	plusw1,7,c
 24684  01A452  D008               	goto	l9413
 24685                           
 24686                           ;stkvar	_dividend @ sp[(-4)+-2]
 24687                           ;stkvar	_dividend @ sp[(-4)+-2]
 24688  01A454  0EFA               	movlw	-6
 24689  01A456  6CE3               	negf	plusw1,c
 24690  01A458  0EFB               	movlw	-5
 24691  01A45A  1EE3               	comf	plusw1,f,c
 24692  01A45C  B0D8               	btfsc	status,0,c
 24693  01A45E  2AE3               	incf	plusw1,f,c
 24694                           
 24695                           ;stkvar	_sign @ sp[(-4)+2]
 24696  01A460  0EFE               	movlw	-2
 24697  01A462  70E3               	btg	plusw1,0,c
 24698  01A464                     l9413:
 24699                           
 24700                           ;stkvar	_quotient @ sp[(-4)+0]
 24701  01A464  0EFC               	movlw	-4
 24702  01A466  6AE3               	clrf	plusw1,c
 24703  01A468  0EFD               	movlw	-3
 24704  01A46A  6AE3               	clrf	plusw1,c
 24705                           
 24706                           ;stkvar	_divisor @ sp[(-4)+-4]
 24707  01A46C  0EF8               	movlw	-8
 24708  01A46E  006F FF8C  F001    	movff	plusw1,btemp
 24709  01A474  0EF9               	movlw	-7
 24710  01A476  50E3               	movf	plusw1,w,c
 24711  01A478  1001               	iorwf	btemp^0,w,c
 24712  01A47A  B4D8               	btfsc	status,2,c
 24713  01A47C  D066               	goto	u7690
 24714                           
 24715                           ;stkvar	_counter @ sp[(-4)+3]
 24716  01A47E  0EFF               	movlw	-1
 24717  01A480  6AE3               	clrf	plusw1,c
 24718  01A482  D012               	goto	L29
 24719  01A484                     l9419:
 24720                           
 24721                           ;stkvar	_divisor @ sp[(-4)+-4]
 24722  01A484  0EF8               	movlw	-8
 24723  01A486  50E3               	movf	plusw1,w,c
 24724  01A488  90D8               	bcf	status,0,c
 24725  01A48A  34E8               	rlcf	wreg,w,c
 24726  01A48C  6E01               	movwf	btemp^0,c
 24727  01A48E  0EF8               	movlw	-8
 24728  01A490  0060  F007  FFE3   	movff	btemp,plusw1
 24729  01A496  0EF9               	movlw	-7
 24730  01A498  50E3               	movf	plusw1,w,c
 24731  01A49A  34E8               	rlcf	wreg,w,c
 24732  01A49C  6E01               	movwf	btemp^0,c
 24733  01A49E  0EF9               	movlw	-7
 24734  01A4A0  0060  F007  FFE3   	movff	btemp,plusw1
 24735                           
 24736                           ;stkvar	_counter @ sp[(-4)+3]
 24737  01A4A6  0EFF               	movlw	-1
 24738  01A4A8                     L29:
 24739  01A4A8  2AE3               	incf	plusw1,f,c
 24740                           
 24741                           ;stkvar	_divisor @ sp[(-4)+-4]
 24742  01A4AA  0EF9               	movlw	-7
 24743  01A4AC  AEE3               	btfss	plusw1,7,c
 24744  01A4AE  D7EA               	goto	l9419
 24745  01A4B0                     u7670:
 24746                           
 24747                           ;stkvar	_quotient @ sp[(-4)+0]
 24748  01A4B0  0EFC               	movlw	-4
 24749  01A4B2  50E3               	movf	plusw1,w,c
 24750  01A4B4  90D8               	bcf	status,0,c
 24751  01A4B6  34E8               	rlcf	wreg,w,c
 24752  01A4B8  6E01               	movwf	btemp^0,c
 24753  01A4BA  0EFC               	movlw	-4
 24754  01A4BC  0060  F007  FFE3   	movff	btemp,plusw1
 24755  01A4C2  0EFD               	movlw	-3
 24756  01A4C4  50E3               	movf	plusw1,w,c
 24757  01A4C6  34E8               	rlcf	wreg,w,c
 24758  01A4C8  6E01               	movwf	btemp^0,c
 24759  01A4CA  0EFD               	movlw	-3
 24760  01A4CC  0060  F007  FFE3   	movff	btemp,plusw1
 24761                           
 24762                           ;stkvar	_divisor @ sp[(-4)+-4]
 24763  01A4D2  0EF8               	movlw	-8
 24764  01A4D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24765  01A4DA  0EF9               	movlw	-7
 24766  01A4DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24767                           
 24768                           ;stkvar	_dividend @ sp[(-4)+-2]
 24769  01A4E2  0EFA               	movlw	-6
 24770  01A4E4  006F FF8C  F009    	movff	plusw1,btemp+8
 24771  01A4EA  0EFB               	movlw	-5
 24772  01A4EC  006F FF8C  F00A    	movff	plusw1,btemp+9
 24773  01A4F2  500B               	movf	(btemp+10)^0,w,c
 24774  01A4F4  5C09               	subwf	(btemp+8)^0,w,c
 24775  01A4F6  500C               	movf	(btemp+11)^0,w,c
 24776  01A4F8  580A               	subwfb	(btemp+9)^0,w,c
 24777  01A4FA  A0D8               	btfss	status,0,c
 24778  01A4FC  D016               	goto	l9433
 24779                           
 24780                           ;stkvar	_divisor @ sp[(-4)+-4]
 24781                           ;stkvar	_dividend @ sp[(-4)+-2]
 24782  01A4FE  0EFA               	movlw	-6
 24783  01A500  50E3               	movf	plusw1,w,c
 24784  01A502  6E01               	movwf	btemp^0,c
 24785  01A504  0EF8               	movlw	-8
 24786  01A506  50E3               	movf	plusw1,w,c
 24787  01A508  5E01               	subwf	btemp^0,f,c
 24788  01A50A  0EFA               	movlw	-6
 24789  01A50C  0060  F007  FFE3   	movff	btemp,plusw1
 24790  01A512  0EFB               	movlw	-5
 24791  01A514  50E3               	movf	plusw1,w,c
 24792  01A516  6E01               	movwf	btemp^0,c
 24793  01A518  0EF9               	movlw	-7
 24794  01A51A  50E3               	movf	plusw1,w,c
 24795  01A51C  5A01               	subwfb	btemp^0,f,c
 24796  01A51E  0EFB               	movlw	-5
 24797  01A520  0060  F007  FFE3   	movff	btemp,plusw1
 24798                           
 24799                           ;stkvar	_quotient @ sp[(-4)+0]
 24800  01A526  0EFC               	movlw	-4
 24801  01A528  80E3               	bsf	plusw1,0,c
 24802  01A52A                     l9433:
 24803                           
 24804                           ;stkvar	_divisor @ sp[(-4)+-4]
 24805  01A52A  90D8               	bcf	status,0,c
 24806  01A52C  0EF9               	movlw	-7
 24807  01A52E  32E3               	rrcf	plusw1,f,c
 24808  01A530  0EF8               	movlw	-8
 24809  01A532  32E3               	rrcf	plusw1,f,c
 24810                           
 24811                           ;stkvar	_counter @ sp[(-4)+3]
 24812  01A534  0EFF               	movlw	-1
 24813  01A536  50E3               	movf	plusw1,w,c
 24814  01A538  6E01               	movwf	btemp^0,c
 24815  01A53A  0E01               	movlw	1
 24816  01A53C  5E01               	subwf	btemp^0,f,c
 24817  01A53E  0EFF               	movlw	-1
 24818  01A540  0060  F007  FFE3   	movff	btemp,plusw1
 24819  01A546  A4D8               	btfss	status,2,c
 24820  01A548  D7B3               	goto	u7670
 24821  01A54A                     u7690:
 24822                           
 24823                           ;stkvar	_sign @ sp[(-4)+2]
 24824  01A54A  0EFE               	movlw	-2
 24825  01A54C  50E3               	movf	plusw1,w,c
 24826  01A54E  B4D8               	btfsc	status,2,c
 24827  01A550  D006               	goto	l9441
 24828                           
 24829                           ;stkvar	_quotient @ sp[(-4)+0]
 24830                           ;stkvar	_quotient @ sp[(-4)+0]
 24831  01A552  0EFC               	movlw	-4
 24832  01A554  6CE3               	negf	plusw1,c
 24833  01A556  0EFD               	movlw	-3
 24834  01A558  1EE3               	comf	plusw1,f,c
 24835  01A55A  B0D8               	btfsc	status,0,c
 24836  01A55C  2AE3               	incf	plusw1,f,c
 24837  01A55E                     l9441:
 24838                           
 24839                           ;stkvar	_quotient @ sp[(-4)+0]
 24840  01A55E  0EFC               	movlw	-4
 24841  01A560  006F FF8C  F001    	movff	plusw1,btemp
 24842  01A566  0EFD               	movlw	-3
 24843  01A568  006F FF8C  F002    	movff	plusw1,btemp+1
 24844                           
 24845                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24846  01A56E  0EF8               	movlw	248
 24847  01A570  26E1               	addwf	fsr1l,f,c
 24848  01A572  0EFF               	movlw	255
 24849  01A574  22E2               	addwfc	fsr1h,f,c
 24850  01A576  0012               	return		;funcret
 24851  01A578                     __end_of___awdiv:
 24852                           	opt callstack 0
 24853                           
 24854 ;; *************** function _dtoa *****************
 24855 ;; Defined at:
 24856 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24857 ;; Parameters:    Size  Location     Type
 24858 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24859 ;;		 -> f(6), NULL(0), 
 24860 ;;  d               8  [STACK] long long 
 24861 ;; Auto vars:     Size  Location     Type
 24862 ;;  n               8  [STACK] long long 
 24863 ;;  i               2  [STACK] int 
 24864 ;;  s               2  [STACK] int 
 24865 ;;  w               2  [STACK] int 
 24866 ;;  p               2  [STACK] int 
 24867 ;; Return value:  Size  Location     Type
 24868 ;;                  2  [STACK] int 
 24869 ;; Registers used:
 24870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 24871 ;; Tracked objects:
 24872 ;;		On entry : 0/0
 24873 ;;		On exit  : 0/0
 24874 ;;		Unchanged: 0/0
 24875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24880 ;;Total ram usage:        0 bytes
 24881 ;; Hardware stack levels used:    1
 24882 ;; Hardware stack levels required when called:   20
 24883 ;; This function calls:
 24884 ;;		___aodiv
 24885 ;;		___aomod
 24886 ;;		_abs
 24887 ;;		_pad
 24888 ;; This function is called by:
 24889 ;;		_vfpfcnvrt
 24890 ;; This function uses a reentrant model
 24891 ;;
 24892                           
 24893                           	psect	text89
 24894  0164C0                     __ptext89:
 24895                           	opt callstack 0
 24896  0164C0                     _dtoa:
 24897                           	opt callstack 0
 24898                           
 24899                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 24900  0164C0  0E12               	movlw	18
 24901  0164C2  26E1               	addwf	fsr1l,f,c
 24902  0164C4  0E00               	movlw	0
 24903  0164C6  22E2               	addwfc	fsr1h,f,c
 24904                           
 24905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 24906                           ;stkvar	_d @ sp[(-18)+-10]
 24907                           
 24908                           ;incstack = 0
 24909 ;; hardware stack exceeded
 24910  0164C8  0EE4               	movlw	228
 24911  0164CA  24E1               	addwf	fsr1l,w,c
 24912  0164CC  6ED9               	movwf	fsr2l,c
 24913  0164CE  0EFF               	movlw	255
 24914  0164D0  20E2               	addwfc	fsr1h,w,c
 24915  0164D2  6EDA               	movwf	fsr2h,c
 24916                           
 24917                           ;stkvar	_n @ sp[(-18)+2]
 24918  0164D4  0E08               	movlw	8
 24919  0164D6  6E01               	movwf	btemp^0,c
 24920  0164D8  0EF0               	movlw	-16
 24921  0164DA                     us1224999:
 24922  0164DA  006F FF7B FFE3     	movff	postinc2,plusw1
 24923  0164E0  28E8               	incf	wreg,w,c
 24924  0164E2  2E01               	decfsz	btemp^0,f,c
 24925  0164E4  D7FA               	bra	us1224999
 24926                           
 24927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 24928                           ;stkvar	_n @ sp[(-18)+2]
 24929  0164E6  0EF7               	movlw	-9
 24930  0164E8  AEE3               	btfss	plusw1,7,c
 24931  0164EA  D002               	goto	u12250
 24932  0164EC  0E01               	movlw	1
 24933  0164EE  D001               	goto	u12260
 24934  0164F0                     u12250:
 24935  0164F0  0E00               	movlw	0
 24936  0164F2                     u12260:
 24937  0164F2  6E0B               	movwf	(btemp+10)^0,c
 24938  0164F4  6A0C               	clrf	(btemp+11)^0,c
 24939                           
 24940                           ;stkvar	_s @ sp[(-18)+12]
 24941  0164F6  0EFA               	movlw	-6
 24942  0164F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24943  0164FE  0EFB               	movlw	-5
 24944  016500  0060  F033  FFE3   	movff	btemp+11,plusw1
 24945                           
 24946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 24947                           ;stkvar	_s @ sp[(-18)+12]
 24948  016506  0EFA               	movlw	-6
 24949  016508  006F FF8C  F001    	movff	plusw1,btemp
 24950  01650E  0EFB               	movlw	-5
 24951  016510  50E3               	movf	plusw1,w,c
 24952  016512  1001               	iorwf	btemp^0,w,c
 24953  016514  B4D8               	btfsc	status,2,c
 24954  016516  D025               	goto	u12280
 24955                           
 24956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 24957                           ;stkvar	_n @ sp[(-18)+2]
 24958                           ;stkvar	_n @ sp[(-18)+2]
 24959  016518  0EF0               	movlw	-16
 24960  01651A  6CE3               	negf	plusw1,c
 24961  01651C  0EF1               	movlw	-15
 24962  01651E  1EE3               	comf	plusw1,f,c
 24963  016520  0EF2               	movlw	-14
 24964  016522  1EE3               	comf	plusw1,f,c
 24965  016524  0EF3               	movlw	-13
 24966  016526  1EE3               	comf	plusw1,f,c
 24967  016528  0EF4               	movlw	-12
 24968  01652A  1EE3               	comf	plusw1,f,c
 24969  01652C  0EF5               	movlw	-11
 24970  01652E  1EE3               	comf	plusw1,f,c
 24971  016530  0EF6               	movlw	-10
 24972  016532  1EE3               	comf	plusw1,f,c
 24973  016534  0EF7               	movlw	-9
 24974  016536  1EE3               	comf	plusw1,f,c
 24975  016538  E314               	bnc	u12280
 24976  01653A  0EF1               	movlw	-15
 24977  01653C  2AE3               	incf	plusw1,f,c
 24978  01653E  E311               	bnc	u12280
 24979  016540  0EF2               	movlw	-14
 24980  016542  2AE3               	incf	plusw1,f,c
 24981  016544  E30E               	bnc	u12280
 24982  016546  0EF3               	movlw	-13
 24983  016548  2AE3               	incf	plusw1,f,c
 24984  01654A  E30B               	bnc	u12280
 24985  01654C  0EF4               	movlw	-12
 24986  01654E  2AE3               	incf	plusw1,f,c
 24987  016550  E308               	bnc	u12280
 24988  016552  0EF5               	movlw	-11
 24989  016554  2AE3               	incf	plusw1,f,c
 24990  016556  E305               	bnc	u12280
 24991  016558  0EF6               	movlw	-10
 24992  01655A  2AE3               	incf	plusw1,f,c
 24993  01655C  E302               	bnc	u12280
 24994  01655E  0EF7               	movlw	-9
 24995  016560  2AE3               	incf	plusw1,f,c
 24996  016562                     u12280:
 24997                           
 24998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 24999  016562  AE3D               	btfss	(_prec+1)^0,7,c
 25000                           
 25001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 25002  016564  923E               	bcf	_flags^0,1,c
 25003                           
 25004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 25005  016566  BE3D               	btfsc	(_prec+1)^0,7,c
 25006  016568  D005               	goto	u12300
 25007  01656A  503D               	movf	(_prec+1)^0,w,c
 25008  01656C  E110               	bnz	l13445
 25009  01656E  043C               	decf	_prec^0,w,c
 25010  016570  B0D8               	btfsc	status,0,c
 25011  016572  D00D               	goto	l13445
 25012  016574                     u12300:
 25013  016574  0E01               	movlw	1
 25014  016576  6E0B               	movwf	(btemp+10)^0,c
 25015  016578  0E00               	movlw	0
 25016  01657A  6E0C               	movwf	(btemp+11)^0,c
 25017                           
 25018                           ;stkvar	_p @ sp[(-18)+16]
 25019  01657C  0EFE               	movlw	-2
 25020  01657E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25021  016584  0EFF               	movlw	-1
 25022  016586  0060  F033  FFE3   	movff	btemp+11,plusw1
 25023  01658C  D008               	goto	l2445
 25024  01658E                     l13445:
 25025                           
 25026                           ;stkvar	_p @ sp[(-18)+16]
 25027  01658E  0EFE               	movlw	-2
 25028  016590  0060  F0F3  FFE3   	movff	_prec,plusw1
 25029  016596  0EFF               	movlw	-1
 25030  016598  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 25031  01659E                     l2445:
 25032                           
 25033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 25034                           ;stkvar	_w @ sp[(-18)+14]
 25035  01659E  0EFC               	movlw	-4
 25036  0165A0  0060  F0EB  FFE3   	movff	_width,plusw1
 25037  0165A6  0EFD               	movlw	-3
 25038  0165A8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 25039                           
 25040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 25041                           ;stkvar	_s @ sp[(-18)+12]
 25042  0165AE  0EFA               	movlw	-6
 25043  0165B0  006F FF8C  F001    	movff	plusw1,btemp
 25044  0165B6  0EFB               	movlw	-5
 25045  0165B8  50E3               	movf	plusw1,w,c
 25046  0165BA  1001               	iorwf	btemp^0,w,c
 25047  0165BC  A4D8               	btfss	status,2,c
 25048  0165BE  D002               	goto	u12320
 25049  0165C0  A43E               	btfss	_flags^0,2,c
 25050  0165C2  D00A               	goto	l13453
 25051  0165C4                     u12320:
 25052                           
 25053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 25054                           ;stkvar	_w @ sp[(-18)+14]
 25055  0165C4  50E1               	movf	fsr1l,w,c
 25056  0165C6  0FFC               	addlw	-4
 25057  0165C8  6ED9               	movwf	fsr2l,c
 25058  0165CA  50E2               	movf	fsr1h,w,c
 25059  0165CC  6EDA               	movwf	fsr2h,c
 25060  0165CE  0EFF               	movlw	255
 25061  0165D0  22DA               	addwfc	fsr2h,f,c
 25062  0165D2  06DE               	decf	postinc2,f,c
 25063  0165D4  0E00               	movlw	0
 25064  0165D6  5ADD               	subwfb	postdec2,f,c
 25065  0165D8                     l13453:
 25066                           
 25067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 25068  0165D8  0E4F               	movlw	79
 25069  0165DA  6E0B               	movwf	(btemp+10)^0,c
 25070  0165DC  0E00               	movlw	0
 25071  0165DE  6E0C               	movwf	(btemp+11)^0,c
 25072                           
 25073                           ;stkvar	_i @ sp[(-18)+10]
 25074  0165E0  0EF8               	movlw	-8
 25075  0165E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25076  0165E8  0EF9               	movlw	-7
 25077  0165EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25078                           
 25079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 25080  0165F0  0103               	movlb	3	; () banked
 25081  0165F2  6BA3               	clrf	(_dbuf+79)& (0+255),b
 25082                           
 25083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 25084  0165F4  D109               	goto	l13467
 25085  0165F6                     l13457:
 25086                           
 25087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 25088                           ;stkvar	_i @ sp[(-18)+10]
 25089  0165F6  50E1               	movf	fsr1l,w,c
 25090  0165F8  0FF8               	addlw	-8
 25091  0165FA  6ED9               	movwf	fsr2l,c
 25092  0165FC  50E2               	movf	fsr1h,w,c
 25093  0165FE  6EDA               	movwf	fsr2h,c
 25094  016600  0EFF               	movlw	255
 25095  016602  22DA               	addwfc	fsr2h,f,c
 25096  016604  06DE               	decf	postinc2,f,c
 25097  016606  0E00               	movlw	0
 25098  016608  5ADD               	subwfb	postdec2,f,c
 25099                           
 25100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 25101  01660A  0E0A               	movlw	10
 25102  01660C  6EE6               	movwf	postinc1,c
 25103  01660E  0E00               	movlw	0
 25104  016610  6EE6               	movwf	postinc1,c
 25105  016612  0E00               	movlw	0
 25106  016614  6EE6               	movwf	postinc1,c
 25107  016616  0E00               	movlw	0
 25108  016618  6EE6               	movwf	postinc1,c
 25109  01661A  0E00               	movlw	0
 25110  01661C  6EE6               	movwf	postinc1,c
 25111  01661E  0E00               	movlw	0
 25112  016620  6EE6               	movwf	postinc1,c
 25113  016622  0E00               	movlw	0
 25114  016624  6EE6               	movwf	postinc1,c
 25115  016626  0E00               	movlw	0
 25116  016628  6EE6               	movwf	postinc1,c
 25117                           
 25118                           ;stkvar	_n @ sp[(-26)+2]
 25119  01662A  50E1               	movf	fsr1l,w,c
 25120  01662C  0FE8               	addlw	-24
 25121  01662E  6ED9               	movwf	fsr2l,c
 25122  016630  50E2               	movf	fsr1h,w,c
 25123  016632  6EDA               	movwf	fsr2h,c
 25124  016634  0EFF               	movlw	255
 25125  016636  22DA               	addwfc	fsr2h,f,c
 25126  016638  006F FF7B FFE6     	movff	postinc2,postinc1
 25127  01663E  006F FF7B FFE6     	movff	postinc2,postinc1
 25128  016644  006F FF7B FFE6     	movff	postinc2,postinc1
 25129  01664A  006F FF7B FFE6     	movff	postinc2,postinc1
 25130  016650  006F FF7B FFE6     	movff	postinc2,postinc1
 25131  016656  006F FF7B FFE6     	movff	postinc2,postinc1
 25132  01665C  006F FF7B FFE6     	movff	postinc2,postinc1
 25133  016662  006F FF7B FFE6     	movff	postinc2,postinc1
 25134  016668  EC79  F0C5         	call	___aomod	;wreg free
 25135  01666C  52E5               	movf	postdec1,f,c
 25136  01666E  006F FF9C  F018    	movff	indf1,btemp+23
 25137  016674  52E5               	movf	postdec1,f,c
 25138  016676  006F FF9C  F017    	movff	indf1,btemp+22
 25139  01667C  52E5               	movf	postdec1,f,c
 25140  01667E  006F FF9C  F016    	movff	indf1,btemp+21
 25141  016684  52E5               	movf	postdec1,f,c
 25142  016686  006F FF9C  F015    	movff	indf1,btemp+20
 25143  01668C  52E5               	movf	postdec1,f,c
 25144  01668E  006F FF9C  F014    	movff	indf1,btemp+19
 25145  016694  52E5               	movf	postdec1,f,c
 25146  016696  006F FF9C  F013    	movff	indf1,btemp+18
 25147  01669C  52E5               	movf	postdec1,f,c
 25148  01669E  006F FF9C  F012    	movff	indf1,btemp+17
 25149  0166A4  52E5               	movf	postdec1,f,c
 25150  0166A6  006F FF9C  F011    	movff	indf1,btemp+16
 25151  0166AC  0EF8               	movlw	248
 25152  0166AE  26E1               	addwf	fsr1l,f,c
 25153  0166B0  0EFF               	movlw	255
 25154  0166B2  22E2               	addwfc	fsr1h,f,c
 25155  0166B4  0060  F044  F00B   	movff	btemp+16,btemp+10
 25156  0166BA  0060  F048  F00C   	movff	btemp+17,btemp+11
 25157  0166C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25158  0166C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 25159  0166CC  EC6A  F0E7         	call	_abs	;wreg free
 25160  0166D0  0E30               	movlw	48
 25161  0166D2  2601               	addwf	btemp^0,f,c
 25162                           
 25163                           ;stkvar	_i @ sp[(-18)+10]
 25164  0166D4  0EF8               	movlw	-8
 25165  0166D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25166  0166DC  0EF9               	movlw	-7
 25167  0166DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25168  0166E4  0E54               	movlw	low _dbuf
 25169  0166E6  240B               	addwf	(btemp+10)^0,w,c
 25170  0166E8  6ED9               	movwf	fsr2l,c
 25171  0166EA  0E03               	movlw	high _dbuf
 25172  0166EC  200C               	addwfc	(btemp+11)^0,w,c
 25173  0166EE  6EDA               	movwf	fsr2h,c
 25174  0166F0  0060  F007  FFDF   	movff	btemp,indf2
 25175                           
 25176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 25177                           ;stkvar	_p @ sp[(-18)+16]
 25178  0166F6  50E1               	movf	fsr1l,w,c
 25179  0166F8  0FFE               	addlw	-2
 25180  0166FA  6ED9               	movwf	fsr2l,c
 25181  0166FC  50E2               	movf	fsr1h,w,c
 25182  0166FE  6EDA               	movwf	fsr2h,c
 25183  016700  0EFF               	movlw	255
 25184  016702  22DA               	addwfc	fsr2h,f,c
 25185  016704  06DE               	decf	postinc2,f,c
 25186  016706  0E00               	movlw	0
 25187  016708  5ADD               	subwfb	postdec2,f,c
 25188                           
 25189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 25190                           ;stkvar	_w @ sp[(-18)+14]
 25191  01670A  50E1               	movf	fsr1l,w,c
 25192  01670C  0FFC               	addlw	-4
 25193  01670E  6ED9               	movwf	fsr2l,c
 25194  016710  50E2               	movf	fsr1h,w,c
 25195  016712  6EDA               	movwf	fsr2h,c
 25196  016714  0EFF               	movlw	255
 25197  016716  22DA               	addwfc	fsr2h,f,c
 25198  016718  06DE               	decf	postinc2,f,c
 25199  01671A  0E00               	movlw	0
 25200  01671C  5ADD               	subwfb	postdec2,f,c
 25201                           
 25202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 25203  01671E  0E0A               	movlw	10
 25204  016720  6EE6               	movwf	postinc1,c
 25205  016722  0E00               	movlw	0
 25206  016724  6EE6               	movwf	postinc1,c
 25207  016726  0E00               	movlw	0
 25208  016728  6EE6               	movwf	postinc1,c
 25209  01672A  0E00               	movlw	0
 25210  01672C  6EE6               	movwf	postinc1,c
 25211  01672E  0E00               	movlw	0
 25212  016730  6EE6               	movwf	postinc1,c
 25213  016732  0E00               	movlw	0
 25214  016734  6EE6               	movwf	postinc1,c
 25215  016736  0E00               	movlw	0
 25216  016738  6EE6               	movwf	postinc1,c
 25217  01673A  0E00               	movlw	0
 25218  01673C  6EE6               	movwf	postinc1,c
 25219                           
 25220                           ;stkvar	_n @ sp[(-26)+2]
 25221  01673E  50E1               	movf	fsr1l,w,c
 25222  016740  0FE8               	addlw	-24
 25223  016742  6ED9               	movwf	fsr2l,c
 25224  016744  50E2               	movf	fsr1h,w,c
 25225  016746  6EDA               	movwf	fsr2h,c
 25226  016748  0EFF               	movlw	255
 25227  01674A  22DA               	addwfc	fsr2h,f,c
 25228  01674C  006F FF7B FFE6     	movff	postinc2,postinc1
 25229  016752  006F FF7B FFE6     	movff	postinc2,postinc1
 25230  016758  006F FF7B FFE6     	movff	postinc2,postinc1
 25231  01675E  006F FF7B FFE6     	movff	postinc2,postinc1
 25232  016764  006F FF7B FFE6     	movff	postinc2,postinc1
 25233  01676A  006F FF7B FFE6     	movff	postinc2,postinc1
 25234  016770  006F FF7B FFE6     	movff	postinc2,postinc1
 25235  016776  006F FF7B FFE6     	movff	postinc2,postinc1
 25236  01677C  ECDC  F0C1         	call	___aodiv	;wreg free
 25237  016780  52E5               	movf	postdec1,f,c
 25238  016782  006F FF9C  F018    	movff	indf1,btemp+23
 25239  016788  52E5               	movf	postdec1,f,c
 25240  01678A  006F FF9C  F017    	movff	indf1,btemp+22
 25241  016790  52E5               	movf	postdec1,f,c
 25242  016792  006F FF9C  F016    	movff	indf1,btemp+21
 25243  016798  52E5               	movf	postdec1,f,c
 25244  01679A  006F FF9C  F015    	movff	indf1,btemp+20
 25245  0167A0  52E5               	movf	postdec1,f,c
 25246  0167A2  006F FF9C  F014    	movff	indf1,btemp+19
 25247  0167A8  52E5               	movf	postdec1,f,c
 25248  0167AA  006F FF9C  F013    	movff	indf1,btemp+18
 25249  0167B0  52E5               	movf	postdec1,f,c
 25250  0167B2  006F FF9C  F012    	movff	indf1,btemp+17
 25251  0167B8  52E5               	movf	postdec1,f,c
 25252  0167BA  006F FF9C  F011    	movff	indf1,btemp+16
 25253  0167C0  0EF8               	movlw	248
 25254  0167C2  26E1               	addwf	fsr1l,f,c
 25255  0167C4  0EFF               	movlw	255
 25256  0167C6  22E2               	addwfc	fsr1h,f,c
 25257                           
 25258                           ;stkvar	_n @ sp[(-18)+2]
 25259  0167C8  0EF0               	movlw	-16
 25260  0167CA  0060  F047  FFE3   	movff	btemp+16,plusw1
 25261  0167D0  0EF1               	movlw	-15
 25262  0167D2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 25263  0167D8  0EF2               	movlw	-14
 25264  0167DA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 25265  0167E0  0EF3               	movlw	-13
 25266  0167E2  0060  F053  FFE3   	movff	btemp+19,plusw1
 25267  0167E8  0EF4               	movlw	-12
 25268  0167EA  0060  F057  FFE3   	movff	btemp+20,plusw1
 25269  0167F0  0EF5               	movlw	-11
 25270  0167F2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 25271  0167F8  0EF6               	movlw	-10
 25272  0167FA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 25273  016800  0EF7               	movlw	-9
 25274  016802  0060  F063  FFE3   	movff	btemp+23,plusw1
 25275  016808                     l13467:
 25276                           
 25277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 25278                           ;stkvar	_i @ sp[(-18)+10]
 25279  016808  0EF9               	movlw	-7
 25280  01680A  BEE3               	btfsc	plusw1,7,c
 25281  01680C  D036               	goto	u12370
 25282  01680E  0EF9               	movlw	-7
 25283  016810  50E3               	movf	plusw1,w,c
 25284  016812  E104               	bnz	u12330
 25285  016814  0EF8               	movlw	-8
 25286  016816  04E3               	decf	plusw1,w,c
 25287  016818  A0D8               	btfss	status,0,c
 25288  01681A  D02F               	goto	u12370
 25289  01681C                     u12330:
 25290                           
 25291                           ;stkvar	_n @ sp[(-18)+2]
 25292  01681C  0EF0               	movlw	-16
 25293  01681E  50E3               	movf	plusw1,w,c
 25294  016820  E115               	bnz	u12341
 25295  016822  0EF1               	movlw	-15
 25296  016824  50E3               	movf	plusw1,w,c
 25297  016826  E112               	bnz	u12341
 25298  016828  0EF2               	movlw	-14
 25299  01682A  50E3               	movf	plusw1,w,c
 25300  01682C  E10F               	bnz	u12341
 25301  01682E  0EF3               	movlw	-13
 25302  016830  50E3               	movf	plusw1,w,c
 25303  016832  E10C               	bnz	u12341
 25304  016834  0EF4               	movlw	-12
 25305  016836  50E3               	movf	plusw1,w,c
 25306  016838  E109               	bnz	u12341
 25307  01683A  0EF5               	movlw	-11
 25308  01683C  50E3               	movf	plusw1,w,c
 25309  01683E  E106               	bnz	u12341
 25310  016840  0EF6               	movlw	-10
 25311  016842  50E3               	movf	plusw1,w,c
 25312  016844  E103               	bnz	u12341
 25313  016846  0EF7               	movlw	-9
 25314  016848  50E3               	movf	plusw1,w,c
 25315  01684A  A4D8               	btfss	status,2,c
 25316  01684C                     u12341:
 25317  01684C  D6D4               	goto	l13457
 25318                           
 25319                           ;stkvar	_p @ sp[(-18)+16]
 25320  01684E  0EFF               	movlw	-1
 25321  016850  BEE3               	btfsc	plusw1,7,c
 25322  016852  D007               	goto	u12350
 25323  016854  0EFF               	movlw	-1
 25324  016856  50E3               	movf	plusw1,w,c
 25325  016858  E103               	bnz	u12351
 25326  01685A  0EFE               	movlw	-2
 25327  01685C  04E3               	decf	plusw1,w,c
 25328  01685E  B0D8               	btfsc	status,0,c
 25329  016860                     u12351:
 25330  016860  D6CA               	goto	l13457
 25331  016862                     u12350:
 25332                           
 25333                           ;stkvar	_w @ sp[(-18)+14]
 25334  016862  0EFD               	movlw	-3
 25335  016864  BEE3               	btfsc	plusw1,7,c
 25336  016866  D009               	goto	u12370
 25337  016868  0EFD               	movlw	-3
 25338  01686A  50E3               	movf	plusw1,w,c
 25339  01686C  E104               	bnz	u12360
 25340  01686E  0EFC               	movlw	-4
 25341  016870  04E3               	decf	plusw1,w,c
 25342  016872  A0D8               	btfss	status,0,c
 25343  016874  D002               	goto	u12370
 25344  016876                     u12360:
 25345  016876  B23E               	btfsc	_flags^0,1,c
 25346  016878  D6BE               	goto	l13457
 25347  01687A                     u12370:
 25348                           
 25349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 25350                           ;stkvar	_s @ sp[(-18)+12]
 25351  01687A  0EFA               	movlw	-6
 25352  01687C  006F FF8C  F001    	movff	plusw1,btemp
 25353  016882  0EFB               	movlw	-5
 25354  016884  50E3               	movf	plusw1,w,c
 25355  016886  1001               	iorwf	btemp^0,w,c
 25356  016888  A4D8               	btfss	status,2,c
 25357  01688A  D002               	goto	u12390
 25358  01688C  A43E               	btfss	_flags^0,2,c
 25359  01688E  D033               	goto	l13491
 25360  016890                     u12390:
 25361                           
 25362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 25363                           ;stkvar	_i @ sp[(-18)+10]
 25364  016890  50E1               	movf	fsr1l,w,c
 25365  016892  0FF8               	addlw	-8
 25366  016894  6ED9               	movwf	fsr2l,c
 25367  016896  50E2               	movf	fsr1h,w,c
 25368  016898  6EDA               	movwf	fsr2h,c
 25369  01689A  0EFF               	movlw	255
 25370  01689C  22DA               	addwfc	fsr2h,f,c
 25371  01689E  06DE               	decf	postinc2,f,c
 25372  0168A0  0E00               	movlw	0
 25373  0168A2  5ADD               	subwfb	postdec2,f,c
 25374                           
 25375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 25376                           ;stkvar	_s @ sp[(-18)+12]
 25377  0168A4  0EFA               	movlw	-6
 25378  0168A6  006F FF8C  F001    	movff	plusw1,btemp
 25379  0168AC  0EFB               	movlw	-5
 25380  0168AE  50E3               	movf	plusw1,w,c
 25381  0168B0  1001               	iorwf	btemp^0,w,c
 25382  0168B2  A4D8               	btfss	status,2,c
 25383  0168B4  D002               	goto	l13487
 25384  0168B6  0E2B               	movlw	43
 25385  0168B8  D001               	goto	L30
 25386  0168BA                     l13487:
 25387  0168BA  0E2D               	movlw	45
 25388  0168BC                     L30:
 25389  0168BC  6E0B               	movwf	(btemp+10)^0,c
 25390  0168BE  0E00               	movlw	0
 25391  0168C0  6E0C               	movwf	(btemp+11)^0,c
 25392                           
 25393                           ;stkvar	_dtoa$6762 @ sp[(-18)+0]
 25394  0168C2  0EEE               	movlw	-18
 25395  0168C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25396  0168CA  0EEF               	movlw	-17
 25397  0168CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25398                           
 25399                           ;stkvar	_dtoa$6762 @ sp[(-18)+0]
 25400                           ;stkvar	_i @ sp[(-18)+10]
 25401  0168D2  0EF8               	movlw	-8
 25402  0168D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25403  0168DA  0EF9               	movlw	-7
 25404  0168DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25405  0168E2  0E54               	movlw	low _dbuf
 25406  0168E4  240B               	addwf	(btemp+10)^0,w,c
 25407  0168E6  6ED9               	movwf	fsr2l,c
 25408  0168E8  0E03               	movlw	high _dbuf
 25409  0168EA  200C               	addwfc	(btemp+11)^0,w,c
 25410  0168EC  6EDA               	movwf	fsr2h,c
 25411  0168EE  0EEE               	movlw	-18
 25412  0168F0  006F FF8F FFDF     	movff	plusw1,indf2
 25413  0168F6                     l13491:
 25414                           
 25415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 25416                           ;stkvar	_w @ sp[(-18)+14]
 25417  0168F6  0EFC               	movlw	-4
 25418  0168F8  006F FF8F FFE6     	movff	plusw1,postinc1
 25419  0168FE  006F FF8F FFE6     	movff	plusw1,postinc1
 25420                           
 25421                           ;stkvar	_i @ sp[(-20)+10]
 25422  016904  0E54               	movlw	low _dbuf
 25423  016906  6E0B               	movwf	(btemp+10)^0,c
 25424  016908  0E03               	movlw	high _dbuf
 25425  01690A  6E0C               	movwf	(btemp+11)^0,c
 25426  01690C  0EF6               	movlw	-10
 25427  01690E  50E3               	movf	plusw1,w,c
 25428  016910  260B               	addwf	(btemp+10)^0,f,c
 25429  016912  0EF7               	movlw	-9
 25430  016914  50E3               	movf	plusw1,w,c
 25431  016916  220C               	addwfc	(btemp+11)^0,f,c
 25432  016918  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25433  01691E  0060  F033  FFE6   	movff	btemp+11,postinc1
 25434                           
 25435                           ;stkvar	_fp @ sp[(-22)+-2]
 25436  016924  0EE8               	movlw	-24
 25437  016926  006F FF8F FFE6     	movff	plusw1,postinc1
 25438  01692C  006F FF8F FFE6     	movff	plusw1,postinc1
 25439  016932  ECCF  F0D6         	call	_pad	;wreg free
 25440                           
 25441                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 25442  016936  0EE4               	movlw	228
 25443  016938  26E1               	addwf	fsr1l,f,c
 25444  01693A  0EFF               	movlw	255
 25445  01693C  22E2               	addwfc	fsr1h,f,c
 25446  01693E  0012               	return		;funcret
 25447  016940                     __end_of_dtoa:
 25448                           	opt callstack 0
 25449                           
 25450 ;; *************** function _abs *****************
 25451 ;; Defined at:
 25452 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 25453 ;; Parameters:    Size  Location     Type
 25454 ;;  a               2  [STACK] int 
 25455 ;; Auto vars:     Size  Location     Type
 25456 ;;		None
 25457 ;; Return value:  Size  Location     Type
 25458 ;;                  2  [STACK] int 
 25459 ;; Registers used:
 25460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 25461 ;; Tracked objects:
 25462 ;;		On entry : 0/3
 25463 ;;		On exit  : 0/0
 25464 ;;		Unchanged: 0/0
 25465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25470 ;;Total ram usage:        0 bytes
 25471 ;; Hardware stack levels used:    1
 25472 ;; Hardware stack levels required when called:   15
 25473 ;; This function calls:
 25474 ;;		Nothing
 25475 ;; This function is called by:
 25476 ;;		_dtoa
 25477 ;; This function uses a reentrant model
 25478 ;;
 25479                           
 25480                           	psect	text90
 25481  01CED4                     __ptext90:
 25482                           	opt callstack 0
 25483  01CED4                     _abs:
 25484                           	opt callstack 0
 25485                           
 25486                           ;stkvar	_a @ sp[(0)+-2]
 25487                           
 25488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25489                           ;incstack = 0
 25490 ;; hardware stack exceeded
 25491  01CED4  0EFF               	movlw	-1
 25492  01CED6  BEE3               	btfsc	plusw1,7,c
 25493  01CED8  D007               	goto	u6650
 25494  01CEDA  0EFF               	movlw	-1
 25495  01CEDC  50E3               	movf	plusw1,w,c
 25496  01CEDE  E112               	bnz	l8895
 25497  01CEE0  0EFE               	movlw	-2
 25498  01CEE2  04E3               	decf	plusw1,w,c
 25499  01CEE4  B0D8               	btfsc	status,0,c
 25500  01CEE6  D00E               	goto	l8895
 25501  01CEE8                     u6650:
 25502                           
 25503                           ;stkvar	_a @ sp[(0)+-2]
 25504  01CEE8  0EFE               	movlw	-2
 25505  01CEEA  006F FF8C  F001    	movff	plusw1,btemp
 25506  01CEF0  1E01               	comf	btemp^0,f,c
 25507  01CEF2  0EFF               	movlw	-1
 25508  01CEF4  006F FF8C  F002    	movff	plusw1,btemp+1
 25509  01CEFA  1E02               	comf	(btemp+1)^0,f,c
 25510  01CEFC  2A01               	incf	btemp^0,f,c
 25511  01CEFE  B4D8               	btfsc	status,2,c
 25512  01CF00  2A02               	incf	(btemp+1)^0,f,c
 25513  01CF02  D008               	goto	l3371
 25514  01CF04                     l8895:
 25515                           
 25516                           ;stkvar	_a @ sp[(0)+-2]
 25517  01CF04  0EFE               	movlw	-2
 25518  01CF06  006F FF8C  F001    	movff	plusw1,btemp
 25519  01CF0C  0EFF               	movlw	-1
 25520  01CF0E  006F FF8C  F002    	movff	plusw1,btemp+1
 25521  01CF14                     l3371:
 25522                           
 25523                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 25524  01CF14  52E5               	movf	postdec1,f,c
 25525  01CF16  52E5               	movf	postdec1,f,c
 25526  01CF18  0012               	return		;funcret
 25527  01CF1A                     __end_of_abs:
 25528                           	opt callstack 0
 25529                           
 25530 ;; *************** function ___aomod *****************
 25531 ;; Defined at:
 25532 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 25533 ;; Parameters:    Size  Location     Type
 25534 ;;  dividend        8  [STACK] long long 
 25535 ;;  divisor         8  [STACK] long long 
 25536 ;; Auto vars:     Size  Location     Type
 25537 ;;  sign            1  [STACK] unsigned char 
 25538 ;;  counter         1  [STACK] unsigned char 
 25539 ;; Return value:  Size  Location     Type
 25540 ;;                  8  [STACK] long long 
 25541 ;; Registers used:
 25542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25543 ;; Tracked objects:
 25544 ;;		On entry : 0/3
 25545 ;;		On exit  : 0/0
 25546 ;;		Unchanged: 0/0
 25547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25552 ;;Total ram usage:        0 bytes
 25553 ;; Hardware stack levels used:    1
 25554 ;; Hardware stack levels required when called:   15
 25555 ;; This function calls:
 25556 ;;		Nothing
 25557 ;; This function is called by:
 25558 ;;		_dtoa
 25559 ;; This function uses a reentrant model
 25560 ;;
 25561                           
 25562                           	psect	text91
 25563  018AF2                     __ptext91:
 25564                           	opt callstack 0
 25565  018AF2                     ___aomod:
 25566                           	opt callstack 0
 25567                           
 25568                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 25569  018AF2  52E6               	movf	postinc1,f,c
 25570  018AF4  52E6               	movf	postinc1,f,c
 25571                           
 25572                           ;stkvar	_sign @ sp[(-2)+0]
 25573                           
 25574                           ;incstack = 0
 25575 ;; hardware stack exceeded
 25576  018AF6  0EFE               	movlw	-2
 25577  018AF8  6AE3               	clrf	plusw1,c
 25578                           
 25579                           ;stkvar	_dividend @ sp[(-2)+-8]
 25580  018AFA  0EFD               	movlw	-3
 25581  018AFC  AEE3               	btfss	plusw1,7,c
 25582  018AFE  D028               	goto	l9053
 25583                           
 25584                           ;stkvar	_dividend @ sp[(-2)+-8]
 25585                           ;stkvar	_dividend @ sp[(-2)+-8]
 25586  018B00  0EF6               	movlw	-10
 25587  018B02  6CE3               	negf	plusw1,c
 25588  018B04  0EF7               	movlw	-9
 25589  018B06  1EE3               	comf	plusw1,f,c
 25590  018B08  0EF8               	movlw	-8
 25591  018B0A  1EE3               	comf	plusw1,f,c
 25592  018B0C  0EF9               	movlw	-7
 25593  018B0E  1EE3               	comf	plusw1,f,c
 25594  018B10  0EFA               	movlw	-6
 25595  018B12  1EE3               	comf	plusw1,f,c
 25596  018B14  0EFB               	movlw	-5
 25597  018B16  1EE3               	comf	plusw1,f,c
 25598  018B18  0EFC               	movlw	-4
 25599  018B1A  1EE3               	comf	plusw1,f,c
 25600  018B1C  0EFD               	movlw	-3
 25601  018B1E  1EE3               	comf	plusw1,f,c
 25602  018B20  E314               	bnc	u7080
 25603  018B22  0EF7               	movlw	-9
 25604  018B24  2AE3               	incf	plusw1,f,c
 25605  018B26  E311               	bnc	u7080
 25606  018B28  0EF8               	movlw	-8
 25607  018B2A  2AE3               	incf	plusw1,f,c
 25608  018B2C  E30E               	bnc	u7080
 25609  018B2E  0EF9               	movlw	-7
 25610  018B30  2AE3               	incf	plusw1,f,c
 25611  018B32  E30B               	bnc	u7080
 25612  018B34  0EFA               	movlw	-6
 25613  018B36  2AE3               	incf	plusw1,f,c
 25614  018B38  E308               	bnc	u7080
 25615  018B3A  0EFB               	movlw	-5
 25616  018B3C  2AE3               	incf	plusw1,f,c
 25617  018B3E  E305               	bnc	u7080
 25618  018B40  0EFC               	movlw	-4
 25619  018B42  2AE3               	incf	plusw1,f,c
 25620  018B44  E302               	bnc	u7080
 25621  018B46  0EFD               	movlw	-3
 25622  018B48  2AE3               	incf	plusw1,f,c
 25623  018B4A                     u7080:
 25624                           
 25625                           ;stkvar	_sign @ sp[(-2)+0]
 25626  018B4A  0EFE               	movlw	-2
 25627  018B4C  6AE3               	clrf	plusw1,c
 25628  018B4E  2AE3               	incf	plusw1,f,c
 25629  018B50                     l9053:
 25630                           
 25631                           ;stkvar	_divisor @ sp[(-2)+-16]
 25632  018B50  0EF5               	movlw	-11
 25633  018B52  AEE3               	btfss	plusw1,7,c
 25634  018B54  D025               	goto	u7100
 25635                           
 25636                           ;stkvar	_divisor @ sp[(-2)+-16]
 25637                           ;stkvar	_divisor @ sp[(-2)+-16]
 25638  018B56  0EEE               	movlw	-18
 25639  018B58  6CE3               	negf	plusw1,c
 25640  018B5A  0EEF               	movlw	-17
 25641  018B5C  1EE3               	comf	plusw1,f,c
 25642  018B5E  0EF0               	movlw	-16
 25643  018B60  1EE3               	comf	plusw1,f,c
 25644  018B62  0EF1               	movlw	-15
 25645  018B64  1EE3               	comf	plusw1,f,c
 25646  018B66  0EF2               	movlw	-14
 25647  018B68  1EE3               	comf	plusw1,f,c
 25648  018B6A  0EF3               	movlw	-13
 25649  018B6C  1EE3               	comf	plusw1,f,c
 25650  018B6E  0EF4               	movlw	-12
 25651  018B70  1EE3               	comf	plusw1,f,c
 25652  018B72  0EF5               	movlw	-11
 25653  018B74  1EE3               	comf	plusw1,f,c
 25654  018B76  E314               	bnc	u7100
 25655  018B78  0EEF               	movlw	-17
 25656  018B7A  2AE3               	incf	plusw1,f,c
 25657  018B7C  E311               	bnc	u7100
 25658  018B7E  0EF0               	movlw	-16
 25659  018B80  2AE3               	incf	plusw1,f,c
 25660  018B82  E30E               	bnc	u7100
 25661  018B84  0EF1               	movlw	-15
 25662  018B86  2AE3               	incf	plusw1,f,c
 25663  018B88  E30B               	bnc	u7100
 25664  018B8A  0EF2               	movlw	-14
 25665  018B8C  2AE3               	incf	plusw1,f,c
 25666  018B8E  E308               	bnc	u7100
 25667  018B90  0EF3               	movlw	-13
 25668  018B92  2AE3               	incf	plusw1,f,c
 25669  018B94  E305               	bnc	u7100
 25670  018B96  0EF4               	movlw	-12
 25671  018B98  2AE3               	incf	plusw1,f,c
 25672  018B9A  E302               	bnc	u7100
 25673  018B9C  0EF5               	movlw	-11
 25674  018B9E  2AE3               	incf	plusw1,f,c
 25675  018BA0                     u7100:
 25676                           
 25677                           ;stkvar	_divisor @ sp[(-2)+-16]
 25678  018BA0  0EEE               	movlw	-18
 25679  018BA2  50E3               	movf	plusw1,w,c
 25680  018BA4  E116               	bnz	u7110
 25681  018BA6  0EEF               	movlw	-17
 25682  018BA8  50E3               	movf	plusw1,w,c
 25683  018BAA  E113               	bnz	u7110
 25684  018BAC  0EF0               	movlw	-16
 25685  018BAE  50E3               	movf	plusw1,w,c
 25686  018BB0  E110               	bnz	u7110
 25687  018BB2  0EF1               	movlw	-15
 25688  018BB4  50E3               	movf	plusw1,w,c
 25689  018BB6  E10D               	bnz	u7110
 25690  018BB8  0EF2               	movlw	-14
 25691  018BBA  50E3               	movf	plusw1,w,c
 25692  018BBC  E10A               	bnz	u7110
 25693  018BBE  0EF3               	movlw	-13
 25694  018BC0  50E3               	movf	plusw1,w,c
 25695  018BC2  E107               	bnz	u7110
 25696  018BC4  0EF4               	movlw	-12
 25697  018BC6  50E3               	movf	plusw1,w,c
 25698  018BC8  E104               	bnz	u7110
 25699  018BCA  0EF5               	movlw	-11
 25700  018BCC  50E3               	movf	plusw1,w,c
 25701  018BCE  B4D8               	btfsc	status,2,c
 25702  018BD0  D075               	goto	u7140
 25703  018BD2                     u7110:
 25704                           
 25705                           ;stkvar	_counter @ sp[(-2)+1]
 25706  018BD2  0EFF               	movlw	-1
 25707  018BD4  6AE3               	clrf	plusw1,c
 25708  018BD6  D012               	goto	L31
 25709  018BD8                     l9061:
 25710                           
 25711                           ;stkvar	_divisor @ sp[(-2)+-16]
 25712  018BD8  90D8               	bcf	status,0,c
 25713  018BDA  0EEE               	movlw	-18
 25714  018BDC  36E3               	rlcf	plusw1,f,c
 25715  018BDE  0EEF               	movlw	-17
 25716  018BE0  36E3               	rlcf	plusw1,f,c
 25717  018BE2  0EF0               	movlw	-16
 25718  018BE4  36E3               	rlcf	plusw1,f,c
 25719  018BE6  0EF1               	movlw	-15
 25720  018BE8  36E3               	rlcf	plusw1,f,c
 25721  018BEA  0EF2               	movlw	-14
 25722  018BEC  36E3               	rlcf	plusw1,f,c
 25723  018BEE  0EF3               	movlw	-13
 25724  018BF0  36E3               	rlcf	plusw1,f,c
 25725  018BF2  0EF4               	movlw	-12
 25726  018BF4  36E3               	rlcf	plusw1,f,c
 25727  018BF6  0EF5               	movlw	-11
 25728  018BF8  36E3               	rlcf	plusw1,f,c
 25729                           
 25730                           ;stkvar	_counter @ sp[(-2)+1]
 25731  018BFA  0EFF               	movlw	-1
 25732  018BFC                     L31:
 25733  018BFC  2AE3               	incf	plusw1,f,c
 25734                           
 25735                           ;stkvar	_divisor @ sp[(-2)+-16]
 25736  018BFE  0EF5               	movlw	-11
 25737  018C00  AEE3               	btfss	plusw1,7,c
 25738  018C02  D7EA               	goto	l9061
 25739  018C04                     u7120:
 25740                           
 25741                           ;stkvar	_divisor @ sp[(-2)+-16]
 25742                           ;stkvar	_dividend @ sp[(-2)+-8]
 25743  018C04  50E1               	movf	fsr1l,w,c
 25744  018C06  0FF6               	addlw	-10
 25745  018C08  6ED9               	movwf	fsr2l,c
 25746  018C0A  50E2               	movf	fsr1h,w,c
 25747  018C0C  6EDA               	movwf	fsr2h,c
 25748  018C0E  0EFF               	movlw	255
 25749  018C10  22DA               	addwfc	fsr2h,f,c
 25750  018C12  0EEE               	movlw	-18
 25751  018C14  50E3               	movf	plusw1,w,c
 25752  018C16  5CDE               	subwf	postinc2,w,c
 25753  018C18  0EEF               	movlw	-17
 25754  018C1A  50E3               	movf	plusw1,w,c
 25755  018C1C  58DE               	subwfb	postinc2,w,c
 25756  018C1E  0EF0               	movlw	-16
 25757  018C20  50E3               	movf	plusw1,w,c
 25758  018C22  58DE               	subwfb	postinc2,w,c
 25759  018C24  0EF1               	movlw	-15
 25760  018C26  50E3               	movf	plusw1,w,c
 25761  018C28  58DE               	subwfb	postinc2,w,c
 25762  018C2A  0EF2               	movlw	-14
 25763  018C2C  50E3               	movf	plusw1,w,c
 25764  018C2E  58DE               	subwfb	postinc2,w,c
 25765  018C30  0EF3               	movlw	-13
 25766  018C32  50E3               	movf	plusw1,w,c
 25767  018C34  58DE               	subwfb	postinc2,w,c
 25768  018C36  0EF4               	movlw	-12
 25769  018C38  50E3               	movf	plusw1,w,c
 25770  018C3A  58DE               	subwfb	postinc2,w,c
 25771  018C3C  0EF5               	movlw	-11
 25772  018C3E  50E3               	movf	plusw1,w,c
 25773  018C40  58DE               	subwfb	postinc2,w,c
 25774  018C42  A0D8               	btfss	status,0,c
 25775  018C44  D01F               	goto	l9069
 25776                           
 25777                           ;stkvar	_divisor @ sp[(-2)+-16]
 25778                           ;stkvar	_dividend @ sp[(-2)+-8]
 25779  018C46  50E1               	movf	fsr1l,w,c
 25780  018C48  0FF6               	addlw	-10
 25781  018C4A  6ED9               	movwf	fsr2l,c
 25782  018C4C  50E2               	movf	fsr1h,w,c
 25783  018C4E  6EDA               	movwf	fsr2h,c
 25784  018C50  0EFF               	movlw	255
 25785  018C52  22DA               	addwfc	fsr2h,f,c
 25786  018C54  0EEE               	movlw	-18
 25787  018C56  50E3               	movf	plusw1,w,c
 25788  018C58  5EDE               	subwf	postinc2,f,c
 25789  018C5A  0EEF               	movlw	-17
 25790  018C5C  50E3               	movf	plusw1,w,c
 25791  018C5E  5ADE               	subwfb	postinc2,f,c
 25792  018C60  0EF0               	movlw	-16
 25793  018C62  50E3               	movf	plusw1,w,c
 25794  018C64  5ADE               	subwfb	postinc2,f,c
 25795  018C66  0EF1               	movlw	-15
 25796  018C68  50E3               	movf	plusw1,w,c
 25797  018C6A  5ADE               	subwfb	postinc2,f,c
 25798  018C6C  0EF2               	movlw	-14
 25799  018C6E  50E3               	movf	plusw1,w,c
 25800  018C70  5ADE               	subwfb	postinc2,f,c
 25801  018C72  0EF3               	movlw	-13
 25802  018C74  50E3               	movf	plusw1,w,c
 25803  018C76  5ADE               	subwfb	postinc2,f,c
 25804  018C78  0EF4               	movlw	-12
 25805  018C7A  50E3               	movf	plusw1,w,c
 25806  018C7C  5ADE               	subwfb	postinc2,f,c
 25807  018C7E  0EF5               	movlw	-11
 25808  018C80  50E3               	movf	plusw1,w,c
 25809  018C82  5ADE               	subwfb	postinc2,f,c
 25810  018C84                     l9069:
 25811                           
 25812                           ;stkvar	_divisor @ sp[(-2)+-16]
 25813  018C84  90D8               	bcf	status,0,c
 25814  018C86  0EF5               	movlw	-11
 25815  018C88  32E3               	rrcf	plusw1,f,c
 25816  018C8A  0EF4               	movlw	-12
 25817  018C8C  32E3               	rrcf	plusw1,f,c
 25818  018C8E  0EF3               	movlw	-13
 25819  018C90  32E3               	rrcf	plusw1,f,c
 25820  018C92  0EF2               	movlw	-14
 25821  018C94  32E3               	rrcf	plusw1,f,c
 25822  018C96  0EF1               	movlw	-15
 25823  018C98  32E3               	rrcf	plusw1,f,c
 25824  018C9A  0EF0               	movlw	-16
 25825  018C9C  32E3               	rrcf	plusw1,f,c
 25826  018C9E  0EEF               	movlw	-17
 25827  018CA0  32E3               	rrcf	plusw1,f,c
 25828  018CA2  0EEE               	movlw	-18
 25829  018CA4  32E3               	rrcf	plusw1,f,c
 25830                           
 25831                           ;stkvar	_counter @ sp[(-2)+1]
 25832  018CA6  0EFF               	movlw	-1
 25833  018CA8  50E3               	movf	plusw1,w,c
 25834  018CAA  6E01               	movwf	btemp^0,c
 25835  018CAC  0E01               	movlw	1
 25836  018CAE  5E01               	subwf	btemp^0,f,c
 25837  018CB0  0EFF               	movlw	-1
 25838  018CB2  0060  F007  FFE3   	movff	btemp,plusw1
 25839  018CB8  A4D8               	btfss	status,2,c
 25840  018CBA  D7A4               	goto	u7120
 25841  018CBC                     u7140:
 25842                           
 25843                           ;stkvar	_sign @ sp[(-2)+0]
 25844  018CBC  0EFE               	movlw	-2
 25845  018CBE  50E3               	movf	plusw1,w,c
 25846  018CC0  B4D8               	btfsc	status,2,c
 25847  018CC2  D025               	goto	u7160
 25848                           
 25849                           ;stkvar	_dividend @ sp[(-2)+-8]
 25850                           ;stkvar	_dividend @ sp[(-2)+-8]
 25851  018CC4  0EF6               	movlw	-10
 25852  018CC6  6CE3               	negf	plusw1,c
 25853  018CC8  0EF7               	movlw	-9
 25854  018CCA  1EE3               	comf	plusw1,f,c
 25855  018CCC  0EF8               	movlw	-8
 25856  018CCE  1EE3               	comf	plusw1,f,c
 25857  018CD0  0EF9               	movlw	-7
 25858  018CD2  1EE3               	comf	plusw1,f,c
 25859  018CD4  0EFA               	movlw	-6
 25860  018CD6  1EE3               	comf	plusw1,f,c
 25861  018CD8  0EFB               	movlw	-5
 25862  018CDA  1EE3               	comf	plusw1,f,c
 25863  018CDC  0EFC               	movlw	-4
 25864  018CDE  1EE3               	comf	plusw1,f,c
 25865  018CE0  0EFD               	movlw	-3
 25866  018CE2  1EE3               	comf	plusw1,f,c
 25867  018CE4  E314               	bnc	u7160
 25868  018CE6  0EF7               	movlw	-9
 25869  018CE8  2AE3               	incf	plusw1,f,c
 25870  018CEA  E311               	bnc	u7160
 25871  018CEC  0EF8               	movlw	-8
 25872  018CEE  2AE3               	incf	plusw1,f,c
 25873  018CF0  E30E               	bnc	u7160
 25874  018CF2  0EF9               	movlw	-7
 25875  018CF4  2AE3               	incf	plusw1,f,c
 25876  018CF6  E30B               	bnc	u7160
 25877  018CF8  0EFA               	movlw	-6
 25878  018CFA  2AE3               	incf	plusw1,f,c
 25879  018CFC  E308               	bnc	u7160
 25880  018CFE  0EFB               	movlw	-5
 25881  018D00  2AE3               	incf	plusw1,f,c
 25882  018D02  E305               	bnc	u7160
 25883  018D04  0EFC               	movlw	-4
 25884  018D06  2AE3               	incf	plusw1,f,c
 25885  018D08  E302               	bnc	u7160
 25886  018D0A  0EFD               	movlw	-3
 25887  018D0C  2AE3               	incf	plusw1,f,c
 25888  018D0E                     u7160:
 25889                           
 25890                           ;stkvar	_dividend @ sp[(-2)+-8]
 25891  018D0E  0EF6               	movlw	246
 25892  018D10  24E1               	addwf	fsr1l,w,c
 25893  018D12  6ED9               	movwf	fsr2l,c
 25894  018D14  0EFF               	movlw	255
 25895  018D16  20E2               	addwfc	fsr1h,w,c
 25896  018D18  6EDA               	movwf	fsr2h,c
 25897                           
 25898                           ;stkvar	?___aomod @ sp[(-2)+-8]
 25899  018D1A  0E08               	movlw	8
 25900  018D1C  6E01               	movwf	btemp^0,c
 25901  018D1E  0EF6               	movlw	-10
 25902  018D20                     us717999:
 25903  018D20  006F FF7B FFE3     	movff	postinc2,plusw1
 25904  018D26  28E8               	incf	wreg,w,c
 25905  018D28  2E01               	decfsz	btemp^0,f,c
 25906  018D2A  D7FA               	bra	us717999
 25907                           
 25908                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 25909  018D2C  52E5               	movf	postdec1,f,c
 25910  018D2E  52E5               	movf	postdec1,f,c
 25911  018D30  0012               	return		;funcret
 25912  018D32                     __end_of___aomod:
 25913                           	opt callstack 0
 25914                           
 25915 ;; *************** function ___aodiv *****************
 25916 ;; Defined at:
 25917 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 25918 ;; Parameters:    Size  Location     Type
 25919 ;;  dividend        8  [STACK] long long 
 25920 ;;  divisor         8  [STACK] long long 
 25921 ;; Auto vars:     Size  Location     Type
 25922 ;;  quotient        8  [STACK] long long 
 25923 ;;  sign            1  [STACK] unsigned char 
 25924 ;;  counter         1  [STACK] unsigned char 
 25925 ;; Return value:  Size  Location     Type
 25926 ;;                  8  [STACK] long long 
 25927 ;; Registers used:
 25928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25929 ;; Tracked objects:
 25930 ;;		On entry : 0/3
 25931 ;;		On exit  : 0/0
 25932 ;;		Unchanged: 0/0
 25933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25938 ;;Total ram usage:        0 bytes
 25939 ;; Hardware stack levels used:    1
 25940 ;; Hardware stack levels required when called:   15
 25941 ;; This function calls:
 25942 ;;		Nothing
 25943 ;; This function is called by:
 25944 ;;		_dtoa
 25945 ;; This function uses a reentrant model
 25946 ;;
 25947                           
 25948                           	psect	text92
 25949  0183B8                     __ptext92:
 25950                           	opt callstack 0
 25951  0183B8                     ___aodiv:
 25952                           	opt callstack 0
 25953                           
 25954                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 25955  0183B8  0E0A               	movlw	10
 25956  0183BA  26E1               	addwf	fsr1l,f,c
 25957  0183BC  0E00               	movlw	0
 25958  0183BE  22E2               	addwfc	fsr1h,f,c
 25959                           
 25960                           ;stkvar	_sign @ sp[(-10)+8]
 25961                           
 25962                           ;incstack = 0
 25963 ;; hardware stack exceeded
 25964  0183C0  0EFE               	movlw	-2
 25965  0183C2  6AE3               	clrf	plusw1,c
 25966                           
 25967                           ;stkvar	_divisor @ sp[(-10)+-16]
 25968  0183C4  0EED               	movlw	-19
 25969  0183C6  AEE3               	btfss	plusw1,7,c
 25970  0183C8  D028               	goto	l9009
 25971                           
 25972                           ;stkvar	_divisor @ sp[(-10)+-16]
 25973                           ;stkvar	_divisor @ sp[(-10)+-16]
 25974  0183CA  0EE6               	movlw	-26
 25975  0183CC  6CE3               	negf	plusw1,c
 25976  0183CE  0EE7               	movlw	-25
 25977  0183D0  1EE3               	comf	plusw1,f,c
 25978  0183D2  0EE8               	movlw	-24
 25979  0183D4  1EE3               	comf	plusw1,f,c
 25980  0183D6  0EE9               	movlw	-23
 25981  0183D8  1EE3               	comf	plusw1,f,c
 25982  0183DA  0EEA               	movlw	-22
 25983  0183DC  1EE3               	comf	plusw1,f,c
 25984  0183DE  0EEB               	movlw	-21
 25985  0183E0  1EE3               	comf	plusw1,f,c
 25986  0183E2  0EEC               	movlw	-20
 25987  0183E4  1EE3               	comf	plusw1,f,c
 25988  0183E6  0EED               	movlw	-19
 25989  0183E8  1EE3               	comf	plusw1,f,c
 25990  0183EA  E314               	bnc	u6960
 25991  0183EC  0EE7               	movlw	-25
 25992  0183EE  2AE3               	incf	plusw1,f,c
 25993  0183F0  E311               	bnc	u6960
 25994  0183F2  0EE8               	movlw	-24
 25995  0183F4  2AE3               	incf	plusw1,f,c
 25996  0183F6  E30E               	bnc	u6960
 25997  0183F8  0EE9               	movlw	-23
 25998  0183FA  2AE3               	incf	plusw1,f,c
 25999  0183FC  E30B               	bnc	u6960
 26000  0183FE  0EEA               	movlw	-22
 26001  018400  2AE3               	incf	plusw1,f,c
 26002  018402  E308               	bnc	u6960
 26003  018404  0EEB               	movlw	-21
 26004  018406  2AE3               	incf	plusw1,f,c
 26005  018408  E305               	bnc	u6960
 26006  01840A  0EEC               	movlw	-20
 26007  01840C  2AE3               	incf	plusw1,f,c
 26008  01840E  E302               	bnc	u6960
 26009  018410  0EED               	movlw	-19
 26010  018412  2AE3               	incf	plusw1,f,c
 26011  018414                     u6960:
 26012                           
 26013                           ;stkvar	_sign @ sp[(-10)+8]
 26014  018414  0EFE               	movlw	-2
 26015  018416  6AE3               	clrf	plusw1,c
 26016  018418  2AE3               	incf	plusw1,f,c
 26017  01841A                     l9009:
 26018                           
 26019                           ;stkvar	_dividend @ sp[(-10)+-8]
 26020  01841A  0EF5               	movlw	-11
 26021  01841C  AEE3               	btfss	plusw1,7,c
 26022  01841E  D027               	goto	l9015
 26023                           
 26024                           ;stkvar	_dividend @ sp[(-10)+-8]
 26025                           ;stkvar	_dividend @ sp[(-10)+-8]
 26026  018420  0EEE               	movlw	-18
 26027  018422  6CE3               	negf	plusw1,c
 26028  018424  0EEF               	movlw	-17
 26029  018426  1EE3               	comf	plusw1,f,c
 26030  018428  0EF0               	movlw	-16
 26031  01842A  1EE3               	comf	plusw1,f,c
 26032  01842C  0EF1               	movlw	-15
 26033  01842E  1EE3               	comf	plusw1,f,c
 26034  018430  0EF2               	movlw	-14
 26035  018432  1EE3               	comf	plusw1,f,c
 26036  018434  0EF3               	movlw	-13
 26037  018436  1EE3               	comf	plusw1,f,c
 26038  018438  0EF4               	movlw	-12
 26039  01843A  1EE3               	comf	plusw1,f,c
 26040  01843C  0EF5               	movlw	-11
 26041  01843E  1EE3               	comf	plusw1,f,c
 26042  018440  E314               	bnc	u6980
 26043  018442  0EEF               	movlw	-17
 26044  018444  2AE3               	incf	plusw1,f,c
 26045  018446  E311               	bnc	u6980
 26046  018448  0EF0               	movlw	-16
 26047  01844A  2AE3               	incf	plusw1,f,c
 26048  01844C  E30E               	bnc	u6980
 26049  01844E  0EF1               	movlw	-15
 26050  018450  2AE3               	incf	plusw1,f,c
 26051  018452  E30B               	bnc	u6980
 26052  018454  0EF2               	movlw	-14
 26053  018456  2AE3               	incf	plusw1,f,c
 26054  018458  E308               	bnc	u6980
 26055  01845A  0EF3               	movlw	-13
 26056  01845C  2AE3               	incf	plusw1,f,c
 26057  01845E  E305               	bnc	u6980
 26058  018460  0EF4               	movlw	-12
 26059  018462  2AE3               	incf	plusw1,f,c
 26060  018464  E302               	bnc	u6980
 26061  018466  0EF5               	movlw	-11
 26062  018468  2AE3               	incf	plusw1,f,c
 26063  01846A                     u6980:
 26064                           
 26065                           ;stkvar	_sign @ sp[(-10)+8]
 26066  01846A  0EFE               	movlw	-2
 26067  01846C  70E3               	btg	plusw1,0,c
 26068  01846E                     l9015:
 26069                           
 26070                           ;stkvar	_quotient @ sp[(-10)+0]
 26071  01846E  0E07               	movlw	7
 26072  018470  6E01               	movwf	btemp^0,c
 26073  018472  0EF6               	movlw	-10
 26074  018474                     u6991:
 26075  018474  6AE3               	clrf	plusw1,c
 26076  018476  2AE8               	incf	wreg,f,c
 26077  018478  0601               	decf	btemp^0,f,c
 26078  01847A  E2FC               	bc	u6991
 26079                           
 26080                           ;stkvar	_divisor @ sp[(-10)+-16]
 26081  01847C  0EE6               	movlw	-26
 26082  01847E  50E3               	movf	plusw1,w,c
 26083  018480  E116               	bnz	u7000
 26084  018482  0EE7               	movlw	-25
 26085  018484  50E3               	movf	plusw1,w,c
 26086  018486  E113               	bnz	u7000
 26087  018488  0EE8               	movlw	-24
 26088  01848A  50E3               	movf	plusw1,w,c
 26089  01848C  E110               	bnz	u7000
 26090  01848E  0EE9               	movlw	-23
 26091  018490  50E3               	movf	plusw1,w,c
 26092  018492  E10D               	bnz	u7000
 26093  018494  0EEA               	movlw	-22
 26094  018496  50E3               	movf	plusw1,w,c
 26095  018498  E10A               	bnz	u7000
 26096  01849A  0EEB               	movlw	-21
 26097  01849C  50E3               	movf	plusw1,w,c
 26098  01849E  E107               	bnz	u7000
 26099  0184A0  0EEC               	movlw	-20
 26100  0184A2  50E3               	movf	plusw1,w,c
 26101  0184A4  E104               	bnz	u7000
 26102  0184A6  0EED               	movlw	-19
 26103  0184A8  50E3               	movf	plusw1,w,c
 26104  0184AA  B4D8               	btfsc	status,2,c
 26105  0184AC  D088               	goto	u7030
 26106  0184AE                     u7000:
 26107                           
 26108                           ;stkvar	_counter @ sp[(-10)+9]
 26109  0184AE  0EFF               	movlw	-1
 26110  0184B0  6AE3               	clrf	plusw1,c
 26111  0184B2  D012               	goto	L32
 26112  0184B4                     l9021:
 26113                           
 26114                           ;stkvar	_divisor @ sp[(-10)+-16]
 26115  0184B4  90D8               	bcf	status,0,c
 26116  0184B6  0EE6               	movlw	-26
 26117  0184B8  36E3               	rlcf	plusw1,f,c
 26118  0184BA  0EE7               	movlw	-25
 26119  0184BC  36E3               	rlcf	plusw1,f,c
 26120  0184BE  0EE8               	movlw	-24
 26121  0184C0  36E3               	rlcf	plusw1,f,c
 26122  0184C2  0EE9               	movlw	-23
 26123  0184C4  36E3               	rlcf	plusw1,f,c
 26124  0184C6  0EEA               	movlw	-22
 26125  0184C8  36E3               	rlcf	plusw1,f,c
 26126  0184CA  0EEB               	movlw	-21
 26127  0184CC  36E3               	rlcf	plusw1,f,c
 26128  0184CE  0EEC               	movlw	-20
 26129  0184D0  36E3               	rlcf	plusw1,f,c
 26130  0184D2  0EED               	movlw	-19
 26131  0184D4  36E3               	rlcf	plusw1,f,c
 26132                           
 26133                           ;stkvar	_counter @ sp[(-10)+9]
 26134  0184D6  0EFF               	movlw	-1
 26135  0184D8                     L32:
 26136  0184D8  2AE3               	incf	plusw1,f,c
 26137                           
 26138                           ;stkvar	_divisor @ sp[(-10)+-16]
 26139  0184DA  0EED               	movlw	-19
 26140  0184DC  AEE3               	btfss	plusw1,7,c
 26141  0184DE  D7EA               	goto	l9021
 26142  0184E0                     u7010:
 26143                           
 26144                           ;stkvar	_quotient @ sp[(-10)+0]
 26145  0184E0  90D8               	bcf	status,0,c
 26146  0184E2  0EF6               	movlw	-10
 26147  0184E4  36E3               	rlcf	plusw1,f,c
 26148  0184E6  0EF7               	movlw	-9
 26149  0184E8  36E3               	rlcf	plusw1,f,c
 26150  0184EA  0EF8               	movlw	-8
 26151  0184EC  36E3               	rlcf	plusw1,f,c
 26152  0184EE  0EF9               	movlw	-7
 26153  0184F0  36E3               	rlcf	plusw1,f,c
 26154  0184F2  0EFA               	movlw	-6
 26155  0184F4  36E3               	rlcf	plusw1,f,c
 26156  0184F6  0EFB               	movlw	-5
 26157  0184F8  36E3               	rlcf	plusw1,f,c
 26158  0184FA  0EFC               	movlw	-4
 26159  0184FC  36E3               	rlcf	plusw1,f,c
 26160  0184FE  0EFD               	movlw	-3
 26161  018500  36E3               	rlcf	plusw1,f,c
 26162                           
 26163                           ;stkvar	_divisor @ sp[(-10)+-16]
 26164                           ;stkvar	_dividend @ sp[(-10)+-8]
 26165  018502  50E1               	movf	fsr1l,w,c
 26166  018504  0FEE               	addlw	-18
 26167  018506  6ED9               	movwf	fsr2l,c
 26168  018508  50E2               	movf	fsr1h,w,c
 26169  01850A  6EDA               	movwf	fsr2h,c
 26170  01850C  0EFF               	movlw	255
 26171  01850E  22DA               	addwfc	fsr2h,f,c
 26172  018510  0EE6               	movlw	-26
 26173  018512  50E3               	movf	plusw1,w,c
 26174  018514  5CDE               	subwf	postinc2,w,c
 26175  018516  0EE7               	movlw	-25
 26176  018518  50E3               	movf	plusw1,w,c
 26177  01851A  58DE               	subwfb	postinc2,w,c
 26178  01851C  0EE8               	movlw	-24
 26179  01851E  50E3               	movf	plusw1,w,c
 26180  018520  58DE               	subwfb	postinc2,w,c
 26181  018522  0EE9               	movlw	-23
 26182  018524  50E3               	movf	plusw1,w,c
 26183  018526  58DE               	subwfb	postinc2,w,c
 26184  018528  0EEA               	movlw	-22
 26185  01852A  50E3               	movf	plusw1,w,c
 26186  01852C  58DE               	subwfb	postinc2,w,c
 26187  01852E  0EEB               	movlw	-21
 26188  018530  50E3               	movf	plusw1,w,c
 26189  018532  58DE               	subwfb	postinc2,w,c
 26190  018534  0EEC               	movlw	-20
 26191  018536  50E3               	movf	plusw1,w,c
 26192  018538  58DE               	subwfb	postinc2,w,c
 26193  01853A  0EED               	movlw	-19
 26194  01853C  50E3               	movf	plusw1,w,c
 26195  01853E  58DE               	subwfb	postinc2,w,c
 26196  018540  A0D8               	btfss	status,0,c
 26197  018542  D021               	goto	l9033
 26198                           
 26199                           ;stkvar	_divisor @ sp[(-10)+-16]
 26200                           ;stkvar	_dividend @ sp[(-10)+-8]
 26201  018544  50E1               	movf	fsr1l,w,c
 26202  018546  0FEE               	addlw	-18
 26203  018548  6ED9               	movwf	fsr2l,c
 26204  01854A  50E2               	movf	fsr1h,w,c
 26205  01854C  6EDA               	movwf	fsr2h,c
 26206  01854E  0EFF               	movlw	255
 26207  018550  22DA               	addwfc	fsr2h,f,c
 26208  018552  0EE6               	movlw	-26
 26209  018554  50E3               	movf	plusw1,w,c
 26210  018556  5EDE               	subwf	postinc2,f,c
 26211  018558  0EE7               	movlw	-25
 26212  01855A  50E3               	movf	plusw1,w,c
 26213  01855C  5ADE               	subwfb	postinc2,f,c
 26214  01855E  0EE8               	movlw	-24
 26215  018560  50E3               	movf	plusw1,w,c
 26216  018562  5ADE               	subwfb	postinc2,f,c
 26217  018564  0EE9               	movlw	-23
 26218  018566  50E3               	movf	plusw1,w,c
 26219  018568  5ADE               	subwfb	postinc2,f,c
 26220  01856A  0EEA               	movlw	-22
 26221  01856C  50E3               	movf	plusw1,w,c
 26222  01856E  5ADE               	subwfb	postinc2,f,c
 26223  018570  0EEB               	movlw	-21
 26224  018572  50E3               	movf	plusw1,w,c
 26225  018574  5ADE               	subwfb	postinc2,f,c
 26226  018576  0EEC               	movlw	-20
 26227  018578  50E3               	movf	plusw1,w,c
 26228  01857A  5ADE               	subwfb	postinc2,f,c
 26229  01857C  0EED               	movlw	-19
 26230  01857E  50E3               	movf	plusw1,w,c
 26231  018580  5ADE               	subwfb	postinc2,f,c
 26232                           
 26233                           ;stkvar	_quotient @ sp[(-10)+0]
 26234  018582  0EF6               	movlw	-10
 26235  018584  80E3               	bsf	plusw1,0,c
 26236  018586                     l9033:
 26237                           
 26238                           ;stkvar	_divisor @ sp[(-10)+-16]
 26239  018586  90D8               	bcf	status,0,c
 26240  018588  0EED               	movlw	-19
 26241  01858A  32E3               	rrcf	plusw1,f,c
 26242  01858C  0EEC               	movlw	-20
 26243  01858E  32E3               	rrcf	plusw1,f,c
 26244  018590  0EEB               	movlw	-21
 26245  018592  32E3               	rrcf	plusw1,f,c
 26246  018594  0EEA               	movlw	-22
 26247  018596  32E3               	rrcf	plusw1,f,c
 26248  018598  0EE9               	movlw	-23
 26249  01859A  32E3               	rrcf	plusw1,f,c
 26250  01859C  0EE8               	movlw	-24
 26251  01859E  32E3               	rrcf	plusw1,f,c
 26252  0185A0  0EE7               	movlw	-25
 26253  0185A2  32E3               	rrcf	plusw1,f,c
 26254  0185A4  0EE6               	movlw	-26
 26255  0185A6  32E3               	rrcf	plusw1,f,c
 26256                           
 26257                           ;stkvar	_counter @ sp[(-10)+9]
 26258  0185A8  0EFF               	movlw	-1
 26259  0185AA  50E3               	movf	plusw1,w,c
 26260  0185AC  6E01               	movwf	btemp^0,c
 26261  0185AE  0E01               	movlw	1
 26262  0185B0  5E01               	subwf	btemp^0,f,c
 26263  0185B2  0EFF               	movlw	-1
 26264  0185B4  0060  F007  FFE3   	movff	btemp,plusw1
 26265  0185BA  A4D8               	btfss	status,2,c
 26266  0185BC  D791               	goto	u7010
 26267  0185BE                     u7030:
 26268                           
 26269                           ;stkvar	_sign @ sp[(-10)+8]
 26270  0185BE  0EFE               	movlw	-2
 26271  0185C0  50E3               	movf	plusw1,w,c
 26272  0185C2  B4D8               	btfsc	status,2,c
 26273  0185C4  D025               	goto	u7050
 26274                           
 26275                           ;stkvar	_quotient @ sp[(-10)+0]
 26276                           ;stkvar	_quotient @ sp[(-10)+0]
 26277  0185C6  0EF6               	movlw	-10
 26278  0185C8  6CE3               	negf	plusw1,c
 26279  0185CA  0EF7               	movlw	-9
 26280  0185CC  1EE3               	comf	plusw1,f,c
 26281  0185CE  0EF8               	movlw	-8
 26282  0185D0  1EE3               	comf	plusw1,f,c
 26283  0185D2  0EF9               	movlw	-7
 26284  0185D4  1EE3               	comf	plusw1,f,c
 26285  0185D6  0EFA               	movlw	-6
 26286  0185D8  1EE3               	comf	plusw1,f,c
 26287  0185DA  0EFB               	movlw	-5
 26288  0185DC  1EE3               	comf	plusw1,f,c
 26289  0185DE  0EFC               	movlw	-4
 26290  0185E0  1EE3               	comf	plusw1,f,c
 26291  0185E2  0EFD               	movlw	-3
 26292  0185E4  1EE3               	comf	plusw1,f,c
 26293  0185E6  E314               	bnc	u7050
 26294  0185E8  0EF7               	movlw	-9
 26295  0185EA  2AE3               	incf	plusw1,f,c
 26296  0185EC  E311               	bnc	u7050
 26297  0185EE  0EF8               	movlw	-8
 26298  0185F0  2AE3               	incf	plusw1,f,c
 26299  0185F2  E30E               	bnc	u7050
 26300  0185F4  0EF9               	movlw	-7
 26301  0185F6  2AE3               	incf	plusw1,f,c
 26302  0185F8  E30B               	bnc	u7050
 26303  0185FA  0EFA               	movlw	-6
 26304  0185FC  2AE3               	incf	plusw1,f,c
 26305  0185FE  E308               	bnc	u7050
 26306  018600  0EFB               	movlw	-5
 26307  018602  2AE3               	incf	plusw1,f,c
 26308  018604  E305               	bnc	u7050
 26309  018606  0EFC               	movlw	-4
 26310  018608  2AE3               	incf	plusw1,f,c
 26311  01860A  E302               	bnc	u7050
 26312  01860C  0EFD               	movlw	-3
 26313  01860E  2AE3               	incf	plusw1,f,c
 26314  018610                     u7050:
 26315                           
 26316                           ;stkvar	_quotient @ sp[(-10)+0]
 26317  018610  0EF6               	movlw	246
 26318  018612  24E1               	addwf	fsr1l,w,c
 26319  018614  6ED9               	movwf	fsr2l,c
 26320  018616  0EFF               	movlw	255
 26321  018618  20E2               	addwfc	fsr1h,w,c
 26322  01861A  6EDA               	movwf	fsr2h,c
 26323                           
 26324                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 26325  01861C  0E08               	movlw	8
 26326  01861E  6E01               	movwf	btemp^0,c
 26327  018620  0EEE               	movlw	-18
 26328  018622                     us706999:
 26329  018622  006F FF7B FFE3     	movff	postinc2,plusw1
 26330  018628  28E8               	incf	wreg,w,c
 26331  01862A  2E01               	decfsz	btemp^0,f,c
 26332  01862C  D7FA               	bra	us706999
 26333                           
 26334                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 26335  01862E  0EF6               	movlw	246
 26336  018630  26E1               	addwf	fsr1l,f,c
 26337  018632  0EFF               	movlw	255
 26338  018634  22E2               	addwfc	fsr1h,f,c
 26339  018636  0012               	return		;funcret
 26340  018638                     __end_of___aodiv:
 26341                           	opt callstack 0
 26342                           
 26343 ;; *************** function _ctoa *****************
 26344 ;; Defined at:
 26345 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26346 ;; Parameters:    Size  Location     Type
 26347 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26348 ;;		 -> f(6), NULL(0), 
 26349 ;;  c               1  [STACK] unsigned char 
 26350 ;; Auto vars:     Size  Location     Type
 26351 ;;  w               2  [STACK] int 
 26352 ;;  l               2    0        int 
 26353 ;; Return value:  Size  Location     Type
 26354 ;;                  2  [STACK] int 
 26355 ;; Registers used:
 26356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26357 ;; Tracked objects:
 26358 ;;		On entry : 0/0
 26359 ;;		On exit  : 0/0
 26360 ;;		Unchanged: 0/0
 26361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26366 ;;Total ram usage:        0 bytes
 26367 ;; Hardware stack levels used:    1
 26368 ;; Hardware stack levels required when called:   20
 26369 ;; This function calls:
 26370 ;;		_pad
 26371 ;; This function is called by:
 26372 ;;		_vfpfcnvrt
 26373 ;; This function uses a reentrant model
 26374 ;;
 26375                           
 26376                           	psect	text93
 26377  01C2F2                     __ptext93:
 26378                           	opt callstack 0
 26379  01C2F2                     _ctoa:
 26380                           	opt callstack 0
 26381                           
 26382                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26383  01C2F2  52E6               	movf	postinc1,f,c
 26384  01C2F4  52E6               	movf	postinc1,f,c
 26385                           
 26386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 26387                           
 26388                           ;incstack = 0
 26389 ;; hardware stack exceeded
 26390  01C2F6  503A               	movf	_width^0,w,c
 26391  01C2F8  103B               	iorwf	(_width+1)^0,w,c
 26392  01C2FA  A4D8               	btfss	status,2,c
 26393  01C2FC  D009               	goto	l13419
 26394                           
 26395                           ;stkvar	_w @ sp[(-2)+0]
 26396  01C2FE  0EFE               	movlw	-2
 26397  01C300  0060  F0EB  FFE3   	movff	_width,plusw1
 26398  01C306  0EFF               	movlw	-1
 26399  01C308  0060  F0EF  FFE3   	movff	_width+1,plusw1
 26400  01C30E  D016               	goto	l13421
 26401  01C310                     l13419:
 26402  01C310  0EFF               	movlw	255
 26403  01C312  6E0B               	movwf	(btemp+10)^0,c
 26404  01C314  0EFF               	movlw	255
 26405  01C316  6E0C               	movwf	(btemp+11)^0,c
 26406  01C318  0060  F0E8  F009   	movff	_width,btemp+8
 26407  01C31E  0060  F0EC  F00A   	movff	_width+1,btemp+9
 26408  01C324  500B               	movf	(btemp+10)^0,w,c
 26409  01C326  2609               	addwf	(btemp+8)^0,f,c
 26410  01C328  500C               	movf	(btemp+11)^0,w,c
 26411  01C32A  220A               	addwfc	(btemp+9)^0,f,c
 26412                           
 26413                           ;stkvar	_w @ sp[(-2)+0]
 26414  01C32C  0EFE               	movlw	-2
 26415  01C32E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26416  01C334  0EFF               	movlw	-1
 26417  01C336  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26418  01C33C                     l13421:
 26419                           
 26420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 26421                           ;stkvar	_c @ sp[(-2)+-3]
 26422  01C33C  0EFB               	movlw	-5
 26423  01C33E  006F FF8C  F354    	movff	plusw1,_dbuf
 26424                           
 26425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 26426  01C344  0103               	movlb	3	; () banked
 26427  01C346  6B55               	clrf	(_dbuf+1)& (0+255),b
 26428                           
 26429                           ; BSR set to: 3
 26430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 26431                           ;stkvar	_w @ sp[(-2)+0]
 26432  01C348  0EFE               	movlw	-2
 26433  01C34A  006F FF8F FFE6     	movff	plusw1,postinc1
 26434  01C350  006F FF8F FFE6     	movff	plusw1,postinc1
 26435  01C356  0E54               	movlw	low _dbuf
 26436  01C358  6EE6               	movwf	postinc1,c
 26437  01C35A  0E03               	movlw	high _dbuf
 26438  01C35C  6EE6               	movwf	postinc1,c
 26439                           
 26440                           ;stkvar	_fp @ sp[(-6)+-2]
 26441  01C35E  0EF8               	movlw	-8
 26442  01C360  006F FF8F FFE6     	movff	plusw1,postinc1
 26443  01C366  006F FF8F FFE6     	movff	plusw1,postinc1
 26444  01C36C  ECCF  F0D6         	call	_pad	;wreg free
 26445                           
 26446                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 26447  01C370  0EFB               	movlw	251
 26448  01C372  26E1               	addwf	fsr1l,f,c
 26449  01C374  0EFF               	movlw	255
 26450  01C376  22E2               	addwfc	fsr1h,f,c
 26451  01C378  0012               	return		;funcret
 26452  01C37A                     __end_of_ctoa:
 26453                           	opt callstack 0
 26454                           
 26455 ;; *************** function _pad *****************
 26456 ;; Defined at:
 26457 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26458 ;; Parameters:    Size  Location     Type
 26459 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26460 ;;		 -> f(6), NULL(0), 
 26461 ;;  buf             2  [STACK] PTR unsigned char 
 26462 ;;		 -> dbuf(80), 
 26463 ;;  p               2  [STACK] int 
 26464 ;; Auto vars:     Size  Location     Type
 26465 ;;  w               2  [STACK] int 
 26466 ;;  i               2  [STACK] int 
 26467 ;; Return value:  Size  Location     Type
 26468 ;;                  2  [STACK] int 
 26469 ;; Registers used:
 26470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26471 ;; Tracked objects:
 26472 ;;		On entry : 0/3
 26473 ;;		On exit  : 0/0
 26474 ;;		Unchanged: 0/0
 26475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26480 ;;Total ram usage:        0 bytes
 26481 ;; Hardware stack levels used:    1
 26482 ;; Hardware stack levels required when called:   19
 26483 ;; This function calls:
 26484 ;;		_fputc
 26485 ;;		_fputs
 26486 ;;		_strlen
 26487 ;; This function is called by:
 26488 ;;		_ctoa
 26489 ;;		_dtoa
 26490 ;;		_efgtoa
 26491 ;;		_utoa
 26492 ;;		_xtoa
 26493 ;; This function uses a reentrant model
 26494 ;;
 26495                           
 26496                           	psect	text94
 26497  01AD9E                     __ptext94:
 26498                           	opt callstack 0
 26499  01AD9E                     _pad:
 26500                           	opt callstack 0
 26501                           
 26502                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26503  01AD9E  52E6               	movf	postinc1,f,c
 26504  01ADA0  52E6               	movf	postinc1,f,c
 26505  01ADA2  52E6               	movf	postinc1,f,c
 26506  01ADA4  52E6               	movf	postinc1,f,c
 26507                           
 26508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 26509                           
 26510                           ;incstack = 0
 26511 ;; hardware stack exceeded
 26512  01ADA6  A03E               	btfss	_flags^0,0,c
 26513  01ADA8  D010               	goto	l13381
 26514                           
 26515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 26516                           ;stkvar	_fp @ sp[(-4)+-2]
 26517  01ADAA  0EFA               	movlw	-6
 26518  01ADAC  006F FF8F FFE6     	movff	plusw1,postinc1
 26519  01ADB2  006F FF8F FFE6     	movff	plusw1,postinc1
 26520                           
 26521                           ;stkvar	_buf @ sp[(-6)+-4]
 26522  01ADB8  0EF6               	movlw	-10
 26523  01ADBA  006F FF8F FFE6     	movff	plusw1,postinc1
 26524  01ADC0  006F FF8F FFE6     	movff	plusw1,postinc1
 26525  01ADC6  EC09  F0E0         	call	_fputs	;wreg free
 26526  01ADCA                     l13381:
 26527                           
 26528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 26529                           ;stkvar	_p @ sp[(-4)+-6]
 26530  01ADCA  0EF7               	movlw	-9
 26531  01ADCC  BEE3               	btfsc	plusw1,7,c
 26532  01ADCE  D011               	goto	l13385
 26533                           
 26534                           ;stkvar	_p @ sp[(-4)+-6]
 26535                           ;stkvar	_w @ sp[(-4)+0]
 26536  01ADD0  0EF6               	movlw	-10
 26537  01ADD2  006F FF8C  F001    	movff	plusw1,btemp
 26538  01ADD8  0EFC               	movlw	-4
 26539  01ADDA  0060  F007  FFE3   	movff	btemp,plusw1
 26540  01ADE0  0EF7               	movlw	-9
 26541  01ADE2  006F FF8C  F001    	movff	plusw1,btemp
 26542  01ADE8  0EFD               	movlw	-3
 26543  01ADEA  0060  F007  FFE3   	movff	btemp,plusw1
 26544  01ADF0  D004               	goto	l2425
 26545  01ADF2                     l13385:
 26546                           
 26547                           ;stkvar	_w @ sp[(-4)+0]
 26548  01ADF2  0EFC               	movlw	-4
 26549  01ADF4  6AE3               	clrf	plusw1,c
 26550  01ADF6  0EFD               	movlw	-3
 26551  01ADF8  6AE3               	clrf	plusw1,c
 26552  01ADFA                     l2425:
 26553                           
 26554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 26555                           ;stkvar	_i @ sp[(-4)+2]
 26556  01ADFA  0EFE               	movlw	-2
 26557  01ADFC  6AE3               	clrf	plusw1,c
 26558  01ADFE  0EFF               	movlw	-1
 26559  01AE00  6AE3               	clrf	plusw1,c
 26560                           
 26561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 26562  01AE02  D01E               	goto	l13391
 26563  01AE04                     l13387:
 26564                           
 26565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 26566                           ;stkvar	_fp @ sp[(-4)+-2]
 26567  01AE04  0EFA               	movlw	-6
 26568  01AE06  006F FF8F FFE6     	movff	plusw1,postinc1
 26569  01AE0C  006F FF8F FFE6     	movff	plusw1,postinc1
 26570  01AE12  0E20               	movlw	32
 26571  01AE14  6EE6               	movwf	postinc1,c
 26572  01AE16  0E00               	movlw	0
 26573  01AE18  6EE6               	movwf	postinc1,c
 26574  01AE1A  EC94  F0D4         	call	_fputc	;wreg free
 26575                           
 26576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 26577                           ;stkvar	_i @ sp[(-4)+2]
 26578  01AE1E  0EFE               	movlw	-2
 26579  01AE20  50E3               	movf	plusw1,w,c
 26580  01AE22  0F01               	addlw	1
 26581  01AE24  6E01               	movwf	btemp^0,c
 26582  01AE26  0EFE               	movlw	-2
 26583  01AE28  0060  F007  FFE3   	movff	btemp,plusw1
 26584  01AE2E  6A01               	clrf	btemp^0,c
 26585  01AE30  0EFF               	movlw	-1
 26586  01AE32  50E3               	movf	plusw1,w,c
 26587  01AE34  2001               	addwfc	btemp^0,w,c
 26588  01AE36  6E01               	movwf	btemp^0,c
 26589  01AE38  0EFF               	movlw	-1
 26590  01AE3A  0060  F007  FFE3   	movff	btemp,plusw1
 26591  01AE40                     l13391:
 26592                           
 26593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 26594                           ;stkvar	_w @ sp[(-4)+0]
 26595                           ;stkvar	_i @ sp[(-4)+2]
 26596  01AE40  50E1               	movf	fsr1l,w,c
 26597  01AE42  0FFE               	addlw	-2
 26598  01AE44  6ED9               	movwf	fsr2l,c
 26599  01AE46  50E2               	movf	fsr1h,w,c
 26600  01AE48  6EDA               	movwf	fsr2h,c
 26601  01AE4A  0EFF               	movlw	255
 26602  01AE4C  22DA               	addwfc	fsr2h,f,c
 26603  01AE4E  0EFC               	movlw	-4
 26604  01AE50  50E3               	movf	plusw1,w,c
 26605  01AE52  5CDE               	subwf	postinc2,w,c
 26606  01AE54  50DE               	movf	postinc2,w,c
 26607  01AE56  0A80               	xorlw	128
 26608  01AE58  6E01               	movwf	btemp^0,c
 26609  01AE5A  0EFD               	movlw	-3
 26610  01AE5C  50E3               	movf	plusw1,w,c
 26611  01AE5E  0A80               	xorlw	128
 26612  01AE60  5801               	subwfb	btemp^0,w,c
 26613  01AE62  A0D8               	btfss	status,0,c
 26614  01AE64  D7CF               	goto	l13387
 26615                           
 26616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 26617  01AE66  B03E               	btfsc	_flags^0,0,c
 26618  01AE68  D010               	goto	l13395
 26619                           
 26620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 26621                           ;stkvar	_fp @ sp[(-4)+-2]
 26622  01AE6A  0EFA               	movlw	-6
 26623  01AE6C  006F FF8F FFE6     	movff	plusw1,postinc1
 26624  01AE72  006F FF8F FFE6     	movff	plusw1,postinc1
 26625                           
 26626                           ;stkvar	_buf @ sp[(-6)+-4]
 26627  01AE78  0EF6               	movlw	-10
 26628  01AE7A  006F FF8F FFE6     	movff	plusw1,postinc1
 26629  01AE80  006F FF8F FFE6     	movff	plusw1,postinc1
 26630  01AE86  EC09  F0E0         	call	_fputs	;wreg free
 26631  01AE8A                     l13395:
 26632                           
 26633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 26634                           ;stkvar	_w @ sp[(-4)+0]
 26635                           ;stkvar	_buf @ sp[(-4)+-4]
 26636  01AE8A  0EF8               	movlw	-8
 26637  01AE8C  006F FF8F FFE6     	movff	plusw1,postinc1
 26638  01AE92  006F FF8F FFE6     	movff	plusw1,postinc1
 26639  01AE98  ECB8  F0DF         	call	_strlen	;wreg free
 26640  01AE9C  0EFC               	movlw	-4
 26641  01AE9E  50E3               	movf	plusw1,w,c
 26642  01AEA0  2601               	addwf	btemp^0,f,c
 26643  01AEA2  0EFD               	movlw	-3
 26644  01AEA4  50E3               	movf	plusw1,w,c
 26645  01AEA6  2202               	addwfc	(btemp+1)^0,f,c
 26646                           
 26647                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 26648  01AEA8  0EF6               	movlw	246
 26649  01AEAA  26E1               	addwf	fsr1l,f,c
 26650  01AEAC  0EFF               	movlw	255
 26651  01AEAE  22E2               	addwfc	fsr1h,f,c
 26652  01AEB0  0012               	return		;funcret
 26653  01AEB2                     __end_of_pad:
 26654                           	opt callstack 0
 26655                           
 26656 ;; *************** function _strlen *****************
 26657 ;; Defined at:
 26658 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;  s               2  [STACK] PTR const unsigned char 
 26661 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 26662 ;;		 -> spin(120), STR_75(9), STR_74(12), D.lcd(480), 
 26663 ;;		 -> D(482), T(144), port_data(512), cp(4), 
 26664 ;;		 -> cb(4), STR_3(5), V(192), 
 26665 ;; Auto vars:     Size  Location     Type
 26666 ;;  a               2  [STACK] PTR const unsigned char 
 26667 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 26668 ;;		 -> spin(120), STR_75(9), STR_74(12), D.lcd(480), 
 26669 ;;		 -> D(482), T(144), port_data(512), cp(4), 
 26670 ;;		 -> cb(4), STR_3(5), V(192), 
 26671 ;; Return value:  Size  Location     Type
 26672 ;;                  2  [STACK] unsigned int 
 26673 ;; Registers used:
 26674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 26675 ;; Tracked objects:
 26676 ;;		On entry : 0/0
 26677 ;;		On exit  : 0/0
 26678 ;;		Unchanged: 0/0
 26679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26684 ;;Total ram usage:        0 bytes
 26685 ;; Hardware stack levels used:    1
 26686 ;; Hardware stack levels required when called:   15
 26687 ;; This function calls:
 26688 ;;		Nothing
 26689 ;; This function is called by:
 26690 ;;		_eaDogM_WriteString
 26691 ;;		_spinners
 26692 ;;		_calc_bsoc
 26693 ;;		_pad
 26694 ;;		_stoa
 26695 ;; This function uses a reentrant model
 26696 ;;
 26697                           
 26698                           	psect	text95
 26699  01BF70                     __ptext95:
 26700                           	opt callstack 0
 26701  01BF70                     _strlen:
 26702                           	opt callstack 0
 26703                           
 26704                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26705  01BF70  52E6               	movf	postinc1,f,c
 26706  01BF72  52E6               	movf	postinc1,f,c
 26707                           
 26708                           ;stkvar	_s @ sp[(-2)+-2]
 26709                           
 26710                           ;incstack = 0
 26711 ;; hardware stack exceeded
 26712  01BF74  0EFC               	movlw	-4
 26713  01BF76  006F FF8C  F00B    	movff	plusw1,btemp+10
 26714  01BF7C  0EFD               	movlw	-3
 26715  01BF7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26716                           
 26717                           ;stkvar	_a @ sp[(-2)+0]
 26718  01BF84  0EFF               	movlw	-1
 26719  01BF86  0060  F033  FFE3   	movff	btemp+11,plusw1
 26720  01BF8C  0EFE               	movlw	-2
 26721  01BF8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26722  01BF94  D011               	goto	l13321
 26723  01BF96                     l13319:
 26724                           
 26725                           ;stkvar	_s @ sp[(-2)+-2]
 26726  01BF96  0EFC               	movlw	-4
 26727  01BF98  50E3               	movf	plusw1,w,c
 26728  01BF9A  0F01               	addlw	1
 26729  01BF9C  6E01               	movwf	btemp^0,c
 26730  01BF9E  0EFC               	movlw	-4
 26731  01BFA0  0060  F007  FFE3   	movff	btemp,plusw1
 26732  01BFA6  6A01               	clrf	btemp^0,c
 26733  01BFA8  0EFD               	movlw	-3
 26734  01BFAA  50E3               	movf	plusw1,w,c
 26735  01BFAC  2001               	addwfc	btemp^0,w,c
 26736  01BFAE  6E01               	movwf	btemp^0,c
 26737  01BFB0  0EFD               	movlw	-3
 26738  01BFB2  0060  F007  FFE3   	movff	btemp,plusw1
 26739  01BFB8                     l13321:
 26740                           
 26741                           ;stkvar	_s @ sp[(-2)+-2]
 26742  01BFB8  0EFC               	movlw	-4
 26743  01BFBA  006F FF8F FFF6     	movff	plusw1,tblptrl
 26744  01BFC0  0EFD               	movlw	-3
 26745  01BFC2  006F FF8F FFF7     	movff	plusw1,tblptrh
 26746  01BFC8  0E00               	movlw	low (__mediumconst shr (0+16))
 26747  01BFCA  6EF8               	movwf	tblptru,c
 26748  01BFCC  0E1F               	movlw	(high __ramtop+-1)
 26749  01BFCE  64F7               	cpfsgt	tblptrh,c
 26750  01BFD0  D003               	bra	u12087
 26751  01BFD2  0008               	tblrd		*
 26752  01BFD4  50F5               	movf	tablat,w,c
 26753  01BFD6  D007               	bra	u12080
 26754  01BFD8                     u12087:
 26755  01BFD8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26756  01BFDE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26757  01BFE4  50EF               	movf	indf0,w,c
 26758  01BFE6                     u12080:
 26759  01BFE6  0900               	iorlw	0
 26760  01BFE8  A4D8               	btfss	status,2,c
 26761  01BFEA  D7D5               	goto	l13319
 26762                           
 26763                           ;stkvar	_a @ sp[(-2)+0]
 26764                           ;stkvar	_s @ sp[(-2)+-2]
 26765  01BFEC  0EFC               	movlw	-4
 26766  01BFEE  006F FF8C  F001    	movff	plusw1,btemp
 26767  01BFF4  0EFD               	movlw	-3
 26768  01BFF6  006F FF8C  F002    	movff	plusw1,btemp+1
 26769  01BFFC  0EFE               	movlw	-2
 26770  01BFFE  50E3               	movf	plusw1,w,c
 26771  01C000  5E01               	subwf	btemp^0,f,c
 26772  01C002  0EFF               	movlw	-1
 26773  01C004  50E3               	movf	plusw1,w,c
 26774  01C006  5A02               	subwfb	(btemp+1)^0,f,c
 26775                           
 26776                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 26777  01C008  52E5               	movf	postdec1,f,c
 26778  01C00A  52E5               	movf	postdec1,f,c
 26779  01C00C  52E5               	movf	postdec1,f,c
 26780  01C00E  52E5               	movf	postdec1,f,c
 26781  01C010  0012               	return		;funcret
 26782  01C012                     __end_of_strlen:
 26783                           	opt callstack 0
 26784                           
 26785 ;; *************** function _fputs *****************
 26786 ;; Defined at:
 26787 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 26788 ;; Parameters:    Size  Location     Type
 26789 ;;  s               2  [STACK] PTR const unsigned char 
 26790 ;;		 -> dbuf(80), 
 26791 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26792 ;;		 -> f(6), NULL(0), 
 26793 ;; Auto vars:     Size  Location     Type
 26794 ;;  i               2  [STACK] int 
 26795 ;;  c               1  [STACK] unsigned char 
 26796 ;; Return value:  Size  Location     Type
 26797 ;;                  2  [STACK] int 
 26798 ;; Registers used:
 26799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 26800 ;; Tracked objects:
 26801 ;;		On entry : 0/3
 26802 ;;		On exit  : 0/0
 26803 ;;		Unchanged: 0/0
 26804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26809 ;;Total ram usage:        0 bytes
 26810 ;; Hardware stack levels used:    1
 26811 ;; Hardware stack levels required when called:   18
 26812 ;; This function calls:
 26813 ;;		_fputc
 26814 ;; This function is called by:
 26815 ;;		_pad
 26816 ;; This function uses a reentrant model
 26817 ;;
 26818                           
 26819                           	psect	text96
 26820  01C012                     __ptext96:
 26821                           	opt callstack 0
 26822  01C012                     _fputs:
 26823                           	opt callstack 0
 26824                           
 26825                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26826  01C012  52E6               	movf	postinc1,f,c
 26827  01C014  52E6               	movf	postinc1,f,c
 26828  01C016  52E6               	movf	postinc1,f,c
 26829                           
 26830                           ;stkvar	_i @ sp[(-3)+0]
 26831                           
 26832                           ;incstack = 0
 26833 ;; hardware stack exceeded
 26834  01C018  0EFD               	movlw	-3
 26835  01C01A  6AE3               	clrf	plusw1,c
 26836  01C01C  0EFE               	movlw	-2
 26837  01C01E  6AE3               	clrf	plusw1,c
 26838  01C020  D01F               	goto	l13333
 26839  01C022                     l13329:
 26840                           
 26841                           ;stkvar	_fp @ sp[(-3)+-4]
 26842  01C022  0EF9               	movlw	-7
 26843  01C024  006F FF8F FFE6     	movff	plusw1,postinc1
 26844  01C02A  006F FF8F FFE6     	movff	plusw1,postinc1
 26845                           
 26846                           ;stkvar	_c @ sp[(-5)+2]
 26847  01C030  0EFD               	movlw	-3
 26848  01C032  50E3               	movf	plusw1,w,c
 26849  01C034  6EE6               	movwf	postinc1,c
 26850  01C036  0E00               	movlw	0
 26851  01C038  6EE6               	movwf	postinc1,c
 26852  01C03A  EC94  F0D4         	call	_fputc	;wreg free
 26853                           
 26854                           ;stkvar	_i @ sp[(-3)+0]
 26855  01C03E  0EFD               	movlw	-3
 26856  01C040  50E3               	movf	plusw1,w,c
 26857  01C042  0F01               	addlw	1
 26858  01C044  6E01               	movwf	btemp^0,c
 26859  01C046  0EFD               	movlw	-3
 26860  01C048  0060  F007  FFE3   	movff	btemp,plusw1
 26861  01C04E  6A01               	clrf	btemp^0,c
 26862  01C050  0EFE               	movlw	-2
 26863  01C052  50E3               	movf	plusw1,w,c
 26864  01C054  2001               	addwfc	btemp^0,w,c
 26865  01C056  6E01               	movwf	btemp^0,c
 26866  01C058  0EFE               	movlw	-2
 26867  01C05A  0060  F007  FFE3   	movff	btemp,plusw1
 26868  01C060                     l13333:
 26869                           
 26870                           ;stkvar	_i @ sp[(-3)+0]
 26871  01C060  0EFD               	movlw	-3
 26872  01C062  006F FF8C  F00B    	movff	plusw1,btemp+10
 26873  01C068  0EFE               	movlw	-2
 26874  01C06A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26875                           
 26876                           ;stkvar	_s @ sp[(-3)+-2]
 26877  01C070  0EFB               	movlw	-5
 26878  01C072  006F FF8C  F009    	movff	plusw1,btemp+8
 26879  01C078  0EFC               	movlw	-4
 26880  01C07A  006F FF8C  F00A    	movff	plusw1,btemp+9
 26881  01C080  500B               	movf	(btemp+10)^0,w,c
 26882  01C082  2409               	addwf	(btemp+8)^0,w,c
 26883  01C084  6ED9               	movwf	fsr2l,c
 26884  01C086  500C               	movf	(btemp+11)^0,w,c
 26885  01C088  200A               	addwfc	(btemp+9)^0,w,c
 26886  01C08A  6EDA               	movwf	fsr2h,c
 26887  01C08C  50DF               	movf	indf2,w,c
 26888  01C08E  6E0C               	movwf	(btemp+11)^0,c
 26889                           
 26890                           ;stkvar	_c @ sp[(-3)+2]
 26891  01C090  0EFF               	movlw	-1
 26892  01C092  0060  F033  FFE3   	movff	btemp+11,plusw1
 26893  01C098  0EFF               	movlw	-1
 26894  01C09A  50E3               	movf	plusw1,w,c
 26895  01C09C  A4D8               	btfss	status,2,c
 26896  01C09E  D7C1               	goto	l13329
 26897                           
 26898                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26899  01C0A0  0EF9               	movlw	249
 26900  01C0A2  26E1               	addwf	fsr1l,f,c
 26901  01C0A4  0EFF               	movlw	255
 26902  01C0A6  22E2               	addwfc	fsr1h,f,c
 26903  01C0A8  0012               	return		;funcret
 26904  01C0AA                     __end_of_fputs:
 26905                           	opt callstack 0
 26906                           
 26907 ;; *************** function _fputc *****************
 26908 ;; Defined at:
 26909 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 26910 ;; Parameters:    Size  Location     Type
 26911 ;;  c               2  [STACK] int 
 26912 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26913 ;;		 -> f(6), NULL(0), 
 26914 ;; Auto vars:     Size  Location     Type
 26915 ;;		None
 26916 ;; Return value:  Size  Location     Type
 26917 ;;                  2  [STACK] int 
 26918 ;; Registers used:
 26919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 26920 ;; Tracked objects:
 26921 ;;		On entry : 0/0
 26922 ;;		On exit  : 0/0
 26923 ;;		Unchanged: 0/0
 26924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26929 ;;Total ram usage:        0 bytes
 26930 ;; Hardware stack levels used:    1
 26931 ;; Hardware stack levels required when called:   17
 26932 ;; This function calls:
 26933 ;;		_putch
 26934 ;; This function is called by:
 26935 ;;		_pad
 26936 ;;		_stoa
 26937 ;;		_vfpfcnvrt
 26938 ;;		_fputs
 26939 ;; This function uses a reentrant model
 26940 ;;
 26941                           
 26942                           	psect	text97
 26943  01A928                     __ptext97:
 26944                           	opt callstack 0
 26945  01A928                     _fputc:
 26946                           	opt callstack 0
 26947                           
 26948                           ;stkvar	_fp @ sp[(0)+-4]
 26949                           
 26950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26951                           ;incstack = 0
 26952 ;; hardware stack exceeded
 26953  01A928  0EFC               	movlw	-4
 26954  01A92A  006F FF8C  F001    	movff	plusw1,btemp
 26955  01A930  0EFD               	movlw	-3
 26956  01A932  50E3               	movf	plusw1,w,c
 26957  01A934  1001               	iorwf	btemp^0,w,c
 26958  01A936  B4D8               	btfsc	status,2,c
 26959  01A938  D009               	goto	u12050
 26960                           
 26961                           ;stkvar	_fp @ sp[(0)+-4]
 26962  01A93A  0EFC               	movlw	-4
 26963  01A93C  006F FF8C  F001    	movff	plusw1,btemp
 26964  01A942  0EFD               	movlw	-3
 26965  01A944  50E3               	movf	plusw1,w,c
 26966  01A946  1001               	iorwf	btemp^0,w,c
 26967  01A948  A4D8               	btfss	status,2,c
 26968  01A94A  D006               	goto	l13307
 26969  01A94C                     u12050:
 26970                           
 26971                           ;stkvar	_c @ sp[(0)+-2]
 26972  01A94C  0EFE               	movlw	-2
 26973  01A94E  50E3               	movf	plusw1,w,c
 26974  01A950  6EE6               	movwf	postinc1,c
 26975  01A952  ECE4  F0EC         	call	_putch	;wreg free
 26976  01A956  D075               	goto	l3471
 26977  01A958                     l13307:
 26978                           
 26979                           ;stkvar	_fp @ sp[(0)+-4]
 26980  01A958  0EFC               	movlw	-4
 26981  01A95A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26982  01A960  0EFD               	movlw	-3
 26983  01A962  006F FF8C  F00C    	movff	plusw1,btemp+11
 26984  01A968  0E04               	movlw	4
 26985  01A96A  240B               	addwf	(btemp+10)^0,w,c
 26986  01A96C  6ED9               	movwf	fsr2l,c
 26987  01A96E  0E00               	movlw	0
 26988  01A970  200C               	addwfc	(btemp+11)^0,w,c
 26989  01A972  6EDA               	movwf	fsr2h,c
 26990  01A974  50DE               	movf	postinc2,w,c
 26991  01A976  10DE               	iorwf	postinc2,w,c
 26992  01A978  B4D8               	btfsc	status,2,c
 26993  01A97A  D026               	goto	u12070
 26994                           
 26995                           ;stkvar	_fp @ sp[(0)+-4]
 26996  01A97C  0EFC               	movlw	-4
 26997  01A97E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26998  01A984  0EFD               	movlw	-3
 26999  01A986  006F FF8C  F00C    	movff	plusw1,btemp+11
 27000  01A98C  0E04               	movlw	4
 27001  01A98E  240B               	addwf	(btemp+10)^0,w,c
 27002  01A990  6ED9               	movwf	fsr2l,c
 27003  01A992  0E00               	movlw	0
 27004  01A994  200C               	addwfc	(btemp+11)^0,w,c
 27005  01A996  6EDA               	movwf	fsr2h,c
 27006                           
 27007                           ;stkvar	_fp @ sp[(0)+-4]
 27008  01A998  0EFC               	movlw	-4
 27009  01A99A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27010  01A9A0  0EFD               	movlw	-3
 27011  01A9A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27012  01A9A8  0E02               	movlw	2
 27013  01A9AA  240B               	addwf	(btemp+10)^0,w,c
 27014  01A9AC  6EE9               	movwf	fsr0l,c
 27015  01A9AE  0E00               	movlw	0
 27016  01A9B0  200C               	addwfc	(btemp+11)^0,w,c
 27017  01A9B2  6EEA               	movwf	fsr0h,c
 27018  01A9B4  50DE               	movf	postinc2,w,c
 27019  01A9B6  5CEE               	subwf	postinc0,w,c
 27020  01A9B8  50EE               	movf	postinc0,w,c
 27021  01A9BA  0A80               	xorlw	128
 27022  01A9BC  6E01               	movwf	btemp^0,c
 27023  01A9BE  50DE               	movf	postinc2,w,c
 27024  01A9C0  0A80               	xorlw	128
 27025  01A9C2  5801               	subwfb	btemp^0,w,c
 27026  01A9C4  B0D8               	btfsc	status,0,c
 27027  01A9C6  D03D               	goto	l3471
 27028  01A9C8                     u12070:
 27029                           
 27030                           ;stkvar	_c @ sp[(0)+-2]
 27031                           ;stkvar	_fp @ sp[(0)+-4]
 27032  01A9C8  0EFC               	movlw	-4
 27033  01A9CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 27034  01A9D0  0EFD               	movlw	-3
 27035  01A9D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27036  01A9D8  0E02               	movlw	2
 27037  01A9DA  240B               	addwf	(btemp+10)^0,w,c
 27038  01A9DC  6ED9               	movwf	fsr2l,c
 27039  01A9DE  0E00               	movlw	0
 27040  01A9E0  200C               	addwfc	(btemp+11)^0,w,c
 27041  01A9E2  6EDA               	movwf	fsr2h,c
 27042  01A9E4  006F FF78  F00B    	movff	postinc2,btemp+10
 27043  01A9EA  006F FF74  F00C    	movff	postdec2,btemp+11
 27044                           
 27045                           ;stkvar	_fp @ sp[(0)+-4]
 27046  01A9F0  0EFC               	movlw	-4
 27047  01A9F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27048  01A9F8  0EFD               	movlw	-3
 27049  01A9FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27050  01AA00  006F FF78  F009    	movff	postinc2,btemp+8
 27051  01AA06  006F FF74  F00A    	movff	postdec2,btemp+9
 27052  01AA0C  500B               	movf	(btemp+10)^0,w,c
 27053  01AA0E  2409               	addwf	(btemp+8)^0,w,c
 27054  01AA10  6ED9               	movwf	fsr2l,c
 27055  01AA12  500C               	movf	(btemp+11)^0,w,c
 27056  01AA14  200A               	addwfc	(btemp+9)^0,w,c
 27057  01AA16  6EDA               	movwf	fsr2h,c
 27058  01AA18  0EFE               	movlw	-2
 27059  01AA1A  006F FF8F FFDF     	movff	plusw1,indf2
 27060                           
 27061                           ;stkvar	_fp @ sp[(0)+-4]
 27062  01AA20  0EFC               	movlw	-4
 27063  01AA22  006F FF8C  F00B    	movff	plusw1,btemp+10
 27064  01AA28  0EFD               	movlw	-3
 27065  01AA2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27066  01AA30  0E02               	movlw	2
 27067  01AA32  240B               	addwf	(btemp+10)^0,w,c
 27068  01AA34  6ED9               	movwf	fsr2l,c
 27069  01AA36  0E00               	movlw	0
 27070  01AA38  200C               	addwfc	(btemp+11)^0,w,c
 27071  01AA3A  6EDA               	movwf	fsr2h,c
 27072  01AA3C  2ADE               	incf	postinc2,f,c
 27073  01AA3E  0E00               	movlw	0
 27074  01AA40  22DD               	addwfc	postdec2,f,c
 27075  01AA42                     l3471:
 27076                           
 27077                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 27078  01AA42  52E5               	movf	postdec1,f,c
 27079  01AA44  52E5               	movf	postdec1,f,c
 27080  01AA46  52E5               	movf	postdec1,f,c
 27081  01AA48  52E5               	movf	postdec1,f,c
 27082  01AA4A  0012               	return		;funcret
 27083  01AA4C                     __end_of_fputc:
 27084                           	opt callstack 0
 27085                           
 27086 ;; *************** function _putch *****************
 27087 ;; Defined at:
 27088 ;;		line 421 in file "eadog.c"
 27089 ;; Parameters:    Size  Location     Type
 27090 ;;  c               1  [STACK] unsigned char 
 27091 ;; Auto vars:     Size  Location     Type
 27092 ;;		None
 27093 ;; Return value:  Size  Location     Type
 27094 ;;                  1  [STACK] void 
 27095 ;; Registers used:
 27096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27097 ;; Tracked objects:
 27098 ;;		On entry : 0/0
 27099 ;;		On exit  : 0/0
 27100 ;;		Unchanged: 0/0
 27101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27106 ;;Total ram usage:        0 bytes
 27107 ;; Hardware stack levels used:    1
 27108 ;; Hardware stack levels required when called:   16
 27109 ;; This function calls:
 27110 ;;		_ringBufS_put_dma
 27111 ;; This function is called by:
 27112 ;;		_fputc
 27113 ;; This function uses a reentrant model
 27114 ;;
 27115                           
 27116                           	psect	text98
 27117  01D9C8                     __ptext98:
 27118                           	opt callstack 0
 27119  01D9C8                     _putch:
 27120                           	opt callstack 0
 27121                           
 27122                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 27123                           ;stkvar	_c @ sp[(0)+-1]
 27124                           
 27125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27126                           ;incstack = 0
 27127 ;; hardware stack exceeded
 27128  01D9C8  0EFF               	movlw	-1
 27129  01D9CA  50E3               	movf	plusw1,w,c
 27130  01D9CC  6EE6               	movwf	postinc1,c
 27131  01D9CE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 27132  01D9D4  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 27133  01D9DA  ECBC  F0DE         	call	_ringBufS_put_dma	;wreg free
 27134                           
 27135                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 27136  01D9DE  52E5               	movf	postdec1,f,c
 27137  01D9E0  0012               	return		;funcret
 27138  01D9E2                     __end_of_putch:
 27139                           	opt callstack 0
 27140                           
 27141 ;; *************** function _ringBufS_put_dma *****************
 27142 ;; Defined at:
 27143 ;;		line 67 in file "ringbufs.c"
 27144 ;; Parameters:    Size  Location     Type
 27145 ;;  _this           2  [STACK] PTR struct ringBufS_t
 27146 ;;		 -> ring_buf1(67), 
 27147 ;;  c               1  [STACK] const unsigned char 
 27148 ;; Auto vars:     Size  Location     Type
 27149 ;;		None
 27150 ;; Return value:  Size  Location     Type
 27151 ;;                  1  [STACK] void 
 27152 ;; Registers used:
 27153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27154 ;; Tracked objects:
 27155 ;;		On entry : 0/0
 27156 ;;		On exit  : 0/0
 27157 ;;		Unchanged: 0/0
 27158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27163 ;;Total ram usage:        0 bytes
 27164 ;; Hardware stack levels used:    1
 27165 ;; Hardware stack levels required when called:   15
 27166 ;; This function calls:
 27167 ;;		Nothing
 27168 ;; This function is called by:
 27169 ;;		_putch
 27170 ;; This function uses a reentrant model
 27171 ;;
 27172                           
 27173                           	psect	text99
 27174  01BD78                     __ptext99:
 27175                           	opt callstack 0
 27176  01BD78                     _ringBufS_put_dma:
 27177                           	opt callstack 0
 27178                           
 27179                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 27180                           ;stkvar	__this @ sp[(0)+-2]
 27181                           
 27182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27183                           ;incstack = 0
 27184 ;; hardware stack exceeded
 27185  01BD78  0EFE               	movlw	-2
 27186  01BD7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27187  01BD80  0EFF               	movlw	-1
 27188  01BD82  006F FF8C  F00C    	movff	plusw1,btemp+11
 27189  01BD88  0E42               	movlw	66
 27190  01BD8A  240B               	addwf	(btemp+10)^0,w,c
 27191  01BD8C  6ED9               	movwf	fsr2l,c
 27192  01BD8E  0E00               	movlw	0
 27193  01BD90  200C               	addwfc	(btemp+11)^0,w,c
 27194  01BD92  6EDA               	movwf	fsr2h,c
 27195  01BD94  0E40               	movlw	64
 27196  01BD96  60DF               	cpfslt	indf2,c
 27197  01BD98  D040               	goto	l1726
 27198                           
 27199                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 27200                           ;stkvar	_c @ sp[(0)+-3]
 27201                           ;stkvar	__this @ sp[(0)+-2]
 27202  01BD9A  0EFE               	movlw	-2
 27203  01BD9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 27204  01BDA2  0EFF               	movlw	-1
 27205  01BDA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27206  01BDAA  0E40               	movlw	64
 27207  01BDAC  240B               	addwf	(btemp+10)^0,w,c
 27208  01BDAE  6ED9               	movwf	fsr2l,c
 27209  01BDB0  0E00               	movlw	0
 27210  01BDB2  200C               	addwfc	(btemp+11)^0,w,c
 27211  01BDB4  6EDA               	movwf	fsr2h,c
 27212  01BDB6  50DF               	movf	indf2,w,c
 27213  01BDB8  6E0C               	movwf	(btemp+11)^0,c
 27214                           
 27215                           ;stkvar	__this @ sp[(0)+-2]
 27216  01BDBA  0EFE               	movlw	-2
 27217  01BDBC  006F FF8C  F009    	movff	plusw1,btemp+8
 27218  01BDC2  0EFF               	movlw	-1
 27219  01BDC4  006F FF8C  F00A    	movff	plusw1,btemp+9
 27220  01BDCA  500C               	movf	(btemp+11)^0,w,c
 27221  01BDCC  2409               	addwf	(btemp+8)^0,w,c
 27222  01BDCE  6ED9               	movwf	fsr2l,c
 27223  01BDD0  0E00               	movlw	0
 27224  01BDD2  200A               	addwfc	(btemp+9)^0,w,c
 27225  01BDD4  6EDA               	movwf	fsr2h,c
 27226  01BDD6  0EFD               	movlw	-3
 27227  01BDD8  006F FF8F FFDF     	movff	plusw1,indf2
 27228                           
 27229                           ;ringbufs.c: 71:   ++_this->head;
 27230                           ;stkvar	__this @ sp[(0)+-2]
 27231  01BDDE  0EFE               	movlw	-2
 27232  01BDE0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27233  01BDE6  0EFF               	movlw	-1
 27234  01BDE8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27235  01BDEE  0E40               	movlw	64
 27236  01BDF0  240B               	addwf	(btemp+10)^0,w,c
 27237  01BDF2  6ED9               	movwf	fsr2l,c
 27238  01BDF4  0E00               	movlw	0
 27239  01BDF6  200C               	addwfc	(btemp+11)^0,w,c
 27240  01BDF8  6EDA               	movwf	fsr2h,c
 27241  01BDFA  2ADF               	incf	indf2,f,c
 27242                           
 27243                           ;ringbufs.c: 72:   ++_this->count;
 27244                           ;stkvar	__this @ sp[(0)+-2]
 27245  01BDFC  0EFE               	movlw	-2
 27246  01BDFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27247  01BE04  0EFF               	movlw	-1
 27248  01BE06  006F FF8C  F00C    	movff	plusw1,btemp+11
 27249  01BE0C  0E42               	movlw	66
 27250  01BE0E  240B               	addwf	(btemp+10)^0,w,c
 27251  01BE10  6ED9               	movwf	fsr2l,c
 27252  01BE12  0E00               	movlw	0
 27253  01BE14  200C               	addwfc	(btemp+11)^0,w,c
 27254  01BE16  6EDA               	movwf	fsr2h,c
 27255  01BE18  2ADF               	incf	indf2,f,c
 27256  01BE1A                     l1726:
 27257                           
 27258                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 27259  01BE1A  52E5               	movf	postdec1,f,c
 27260  01BE1C  52E5               	movf	postdec1,f,c
 27261  01BE1E  52E5               	movf	postdec1,f,c
 27262  01BE20  0012               	return		;funcret
 27263  01BE22                     __end_of_ringBufS_put_dma:
 27264                           	opt callstack 0
 27265                           
 27266 ;; *************** function _atoi *****************
 27267 ;; Defined at:
 27268 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 27269 ;; Parameters:    Size  Location     Type
 27270 ;;  s               2  [STACK] PTR const unsigned char 
 27271 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 27272 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 27273 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 27274 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 27275 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 27276 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 27277 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 27278 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 27279 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 27280 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 27281 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 27282 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 27283 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 27284 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 27285 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 27286 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 27287 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 27288 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 27289 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 27290 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 27291 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 27292 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 27293 ;;		 -> STR_1(21), 
 27294 ;; Auto vars:     Size  Location     Type
 27295 ;;  n               2  [STACK] int 
 27296 ;;  neg             2  [STACK] int 
 27297 ;; Return value:  Size  Location     Type
 27298 ;;                  2  [STACK] int 
 27299 ;; Registers used:
 27300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 27301 ;; Tracked objects:
 27302 ;;		On entry : 0/0
 27303 ;;		On exit  : 0/0
 27304 ;;		Unchanged: 0/0
 27305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27310 ;;Total ram usage:        0 bytes
 27311 ;; Hardware stack levels used:    1
 27312 ;; Hardware stack levels required when called:   16
 27313 ;; This function calls:
 27314 ;;		_isdigit
 27315 ;;		_isspace
 27316 ;; This function is called by:
 27317 ;;		_vfpfcnvrt
 27318 ;; This function uses a reentrant model
 27319 ;;
 27320                           
 27321                           	psect	text100
 27322  018638                     __ptext100:
 27323                           	opt callstack 0
 27324  018638                     _atoi:
 27325                           	opt callstack 0
 27326                           
 27327                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27328  018638  0E09               	movlw	9
 27329  01863A  26E1               	addwf	fsr1l,f,c
 27330  01863C  0E00               	movlw	0
 27331  01863E  22E2               	addwfc	fsr1h,f,c
 27332                           
 27333                           ;stkvar	_n @ sp[(-9)+5]
 27334                           
 27335                           ;incstack = 0
 27336 ;; hardware stack exceeded
 27337  018640  0EFC               	movlw	-4
 27338  018642  6AE3               	clrf	plusw1,c
 27339  018644  0EFD               	movlw	-3
 27340  018646  6AE3               	clrf	plusw1,c
 27341                           
 27342                           ;stkvar	_neg @ sp[(-9)+7]
 27343  018648  0EFE               	movlw	-2
 27344  01864A  6AE3               	clrf	plusw1,c
 27345  01864C  0EFF               	movlw	-1
 27346  01864E  6AE3               	clrf	plusw1,c
 27347  018650  D011               	goto	l10209
 27348  018652                     l10207:
 27349                           
 27350                           ;stkvar	_s @ sp[(-9)+-2]
 27351  018652  0EF5               	movlw	-11
 27352  018654  50E3               	movf	plusw1,w,c
 27353  018656  0F01               	addlw	1
 27354  018658  6E01               	movwf	btemp^0,c
 27355  01865A  0EF5               	movlw	-11
 27356  01865C  0060  F007  FFE3   	movff	btemp,plusw1
 27357  018662  6A01               	clrf	btemp^0,c
 27358  018664  0EF6               	movlw	-10
 27359  018666  50E3               	movf	plusw1,w,c
 27360  018668  2001               	addwfc	btemp^0,w,c
 27361  01866A  6E01               	movwf	btemp^0,c
 27362  01866C  0EF6               	movlw	-10
 27363  01866E  0060  F007  FFE3   	movff	btemp,plusw1
 27364  018674                     l10209:
 27365                           
 27366                           ;stkvar	_atoi$7345 @ sp[(-9)+4]
 27367  018674  0EFB               	movlw	-5
 27368  018676  6AE3               	clrf	plusw1,c
 27369  018678  2AE3               	incf	plusw1,f,c
 27370                           
 27371                           ;stkvar	_s @ sp[(-9)+-2]
 27372  01867A  50E1               	movf	fsr1l,w,c
 27373  01867C  0FF5               	addlw	-11
 27374  01867E  6ED9               	movwf	fsr2l,c
 27375  018680  50E2               	movf	fsr1h,w,c
 27376  018682  6EDA               	movwf	fsr2h,c
 27377  018684  0EFF               	movlw	255
 27378  018686  22DA               	addwfc	fsr2h,f,c
 27379  018688  006F FF7B FFF6     	movff	postinc2,tblptrl
 27380  01868E  006F FF77 FFF7     	movff	postdec2,tblptrh
 27381  018694                     	if	0	;tblptru may be non-zero
 27382  018694                     	endif
 27383  018694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27384  018694  0E00               	movlw	low (__mediumconst shr (0+16))
 27385  018696  6EF8               	movwf	tblptru,c
 27386  018698                     	endif
 27387  018698  0008               	tblrd		*
 27388  01869A  50F5               	movf	tablat,w,c
 27389  01869C  0A20               	xorlw	32
 27390  01869E  B4D8               	btfsc	status,2,c
 27391  0186A0  D023               	goto	l10217
 27392  0186A2  0EF7               	movlw	247
 27393  0186A4  6E0B               	movwf	(btemp+10)^0,c
 27394  0186A6  0EFF               	movlw	255
 27395  0186A8  6E0C               	movwf	(btemp+11)^0,c
 27396                           
 27397                           ;stkvar	_s @ sp[(-9)+-2]
 27398  0186AA  50E1               	movf	fsr1l,w,c
 27399  0186AC  0FF5               	addlw	-11
 27400  0186AE  6ED9               	movwf	fsr2l,c
 27401  0186B0  50E2               	movf	fsr1h,w,c
 27402  0186B2  6EDA               	movwf	fsr2h,c
 27403  0186B4  0EFF               	movlw	255
 27404  0186B6  22DA               	addwfc	fsr2h,f,c
 27405  0186B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 27406  0186BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 27407  0186C4                     	if	0	;tblptru may be non-zero
 27408  0186C4                     	endif
 27409  0186C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27410  0186C4  0E00               	movlw	low (__mediumconst shr (0+16))
 27411  0186C6  6EF8               	movwf	tblptru,c
 27412  0186C8                     	endif
 27413  0186C8  0008               	tblrd		*
 27414  0186CA  50F5               	movf	tablat,w,c
 27415  0186CC  6E09               	movwf	(btemp+8)^0,c
 27416  0186CE  6A0A               	clrf	(btemp+9)^0,c
 27417  0186D0  500B               	movf	(btemp+10)^0,w,c
 27418  0186D2  2609               	addwf	(btemp+8)^0,f,c
 27419  0186D4  500C               	movf	(btemp+11)^0,w,c
 27420  0186D6  220A               	addwfc	(btemp+9)^0,f,c
 27421  0186D8  500A               	movf	(btemp+9)^0,w,c
 27422  0186DA  E104               	bnz	u9190
 27423  0186DC  0E05               	movlw	5
 27424  0186DE  5C09               	subwf	(btemp+8)^0,w,c
 27425  0186E0  A0D8               	btfss	status,0,c
 27426  0186E2  D002               	goto	l10217
 27427  0186E4                     u9190:
 27428                           
 27429                           ;stkvar	_atoi$7345 @ sp[(-9)+4]
 27430  0186E4  0EFB               	movlw	-5
 27431  0186E6  6AE3               	clrf	plusw1,c
 27432  0186E8                     l10217:
 27433                           
 27434                           ;stkvar	_atoi$7345 @ sp[(-9)+4]
 27435  0186E8  0EFB               	movlw	-5
 27436  0186EA  50E3               	movf	plusw1,w,c
 27437  0186EC  6E0B               	movwf	(btemp+10)^0,c
 27438  0186EE  6A0C               	clrf	(btemp+11)^0,c
 27439                           
 27440                           ;stkvar	_atoi$7344 @ sp[(-9)+2]
 27441  0186F0  0EF9               	movlw	-7
 27442  0186F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27443  0186F8  0EFA               	movlw	-6
 27444  0186FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27445                           
 27446                           ;stkvar	_atoi$7344 @ sp[(-9)+2]
 27447  018700  0EF9               	movlw	-7
 27448  018702  006F FF8C  F001    	movff	plusw1,btemp
 27449  018708  0EFA               	movlw	-6
 27450  01870A  50E3               	movf	plusw1,w,c
 27451  01870C  1001               	iorwf	btemp^0,w,c
 27452  01870E  B4D8               	btfsc	status,2,c
 27453  018710  D01F               	goto	l10227
 27454  018712  D79F               	goto	l10207
 27455  018714                     l10223:
 27456  018714  0E01               	movlw	1
 27457  018716  6E0B               	movwf	(btemp+10)^0,c
 27458  018718  0E00               	movlw	0
 27459  01871A  6E0C               	movwf	(btemp+11)^0,c
 27460                           
 27461                           ;stkvar	_neg @ sp[(-9)+7]
 27462  01871C  0EFE               	movlw	-2
 27463  01871E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27464  018724  0EFF               	movlw	-1
 27465  018726  0060  F033  FFE3   	movff	btemp+11,plusw1
 27466  01872C                     l10225:
 27467                           
 27468                           ;stkvar	_s @ sp[(-9)+-2]
 27469  01872C  0EF5               	movlw	-11
 27470  01872E  50E3               	movf	plusw1,w,c
 27471  018730  0F01               	addlw	1
 27472  018732  6E01               	movwf	btemp^0,c
 27473  018734  0EF5               	movlw	-11
 27474  018736  0060  F007  FFE3   	movff	btemp,plusw1
 27475  01873C  6A01               	clrf	btemp^0,c
 27476  01873E  0EF6               	movlw	-10
 27477  018740  50E3               	movf	plusw1,w,c
 27478  018742  2001               	addwfc	btemp^0,w,c
 27479  018744  6E01               	movwf	btemp^0,c
 27480  018746  0EF6               	movlw	-10
 27481  018748  0060  F007  FFE3   	movff	btemp,plusw1
 27482  01874E  D053               	goto	l10233
 27483  018750                     l10227:
 27484                           
 27485                           ;stkvar	_s @ sp[(-9)+-2]
 27486  018750  50E1               	movf	fsr1l,w,c
 27487  018752  0FF5               	addlw	-11
 27488  018754  6ED9               	movwf	fsr2l,c
 27489  018756  50E2               	movf	fsr1h,w,c
 27490  018758  6EDA               	movwf	fsr2h,c
 27491  01875A  0EFF               	movlw	255
 27492  01875C  22DA               	addwfc	fsr2h,f,c
 27493  01875E  006F FF7B FFF6     	movff	postinc2,tblptrl
 27494  018764  006F FF77 FFF7     	movff	postdec2,tblptrh
 27495  01876A                     	if	0	;tblptru may be non-zero
 27496  01876A                     	endif
 27497  01876A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27498  01876A  0E00               	movlw	low (__mediumconst shr (0+16))
 27499  01876C  6EF8               	movwf	tblptru,c
 27500  01876E                     	endif
 27501  01876E  0008               	tblrd		*
 27502  018770  50F5               	movf	tablat,w,c
 27503  018772  6E0B               	movwf	(btemp+10)^0,c
 27504  018774  6A0C               	clrf	(btemp+11)^0,c
 27505                           
 27506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27507                           ; Switch size 1, requested type "simple"
 27508                           ; Number of cases is 1, Range of values is 0 to 0
 27509                           ; switch strategies available:
 27510                           ; Name         Instructions Cycles
 27511                           ; simple_byte            4     3 (average)
 27512                           ;	Chosen strategy is simple_byte
 27513  018776  500C               	movf	(btemp+11)^0,w,c
 27514  018778  0A00               	xorlw	0	; case 0
 27515  01877A  A4D8               	btfss	status,2,c
 27516  01877C  D03C               	goto	l10233
 27517                           
 27518                           ; Switch size 1, requested type "simple"
 27519                           ; Number of cases is 2, Range of values is 43 to 45
 27520                           ; switch strategies available:
 27521                           ; Name         Instructions Cycles
 27522                           ; simple_byte            7     4 (average)
 27523                           ;	Chosen strategy is simple_byte
 27524  01877E  500B               	movf	(btemp+10)^0,w,c
 27525  018780  0A2B               	xorlw	43	; case 43
 27526  018782  B4D8               	btfsc	status,2,c
 27527  018784  D7D3               	goto	l10225
 27528  018786  0A06               	xorlw	6	; case 45
 27529  018788  B4D8               	btfsc	status,2,c
 27530  01878A  D7C4               	goto	l10223
 27531  01878C  D034               	goto	l10233
 27532  01878E                     l10229:
 27533                           
 27534                           ;stkvar	_n @ sp[(-9)+5]
 27535  01878E  0EFC               	movlw	-4
 27536  018790  006F FF8C  F00B    	movff	plusw1,btemp+10
 27537  018796  0EFD               	movlw	-3
 27538  018798  006F FF8C  F00C    	movff	plusw1,btemp+11
 27539  01879E  0E0A               	movlw	10
 27540  0187A0  020B               	mulwf	(btemp+10)^0,c
 27541  0187A2  006F FFCC  F009    	movff	prodl,btemp+8
 27542  0187A8  006F FFD0  F00A    	movff	prodh,btemp+9
 27543  0187AE  020C               	mulwf	(btemp+11)^0,c
 27544  0187B0  50F3               	movf	prodl,w,c
 27545  0187B2  260A               	addwf	(btemp+9)^0,f,c
 27546                           
 27547                           ;stkvar	_s @ sp[(-9)+-2]
 27548  0187B4  50E1               	movf	fsr1l,w,c
 27549  0187B6  0FF5               	addlw	-11
 27550  0187B8  6ED9               	movwf	fsr2l,c
 27551  0187BA  50E2               	movf	fsr1h,w,c
 27552  0187BC  6EDA               	movwf	fsr2h,c
 27553  0187BE  0EFF               	movlw	255
 27554  0187C0  22DA               	addwfc	fsr2h,f,c
 27555  0187C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 27556  0187C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 27557  0187CE                     	if	0	;tblptru may be non-zero
 27558  0187CE                     	endif
 27559  0187CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27560  0187CE  0E00               	movlw	low (__mediumconst shr (0+16))
 27561  0187D0  6EF8               	movwf	tblptru,c
 27562  0187D2                     	endif
 27563  0187D2  0008               	tblrd		*
 27564  0187D4  50F5               	movf	tablat,w,c
 27565  0187D6  5E09               	subwf	(btemp+8)^0,f,c
 27566  0187D8  0E00               	movlw	0
 27567  0187DA  5A0A               	subwfb	(btemp+9)^0,f,c
 27568  0187DC  0E30               	movlw	48
 27569  0187DE  2609               	addwf	(btemp+8)^0,f,c
 27570  0187E0  0E00               	movlw	0
 27571  0187E2  220A               	addwfc	(btemp+9)^0,f,c
 27572                           
 27573                           ;stkvar	_n @ sp[(-9)+5]
 27574  0187E4  0EFC               	movlw	-4
 27575  0187E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 27576  0187EC  0EFD               	movlw	-3
 27577  0187EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27578  0187F4  D79B               	goto	l10225
 27579  0187F6                     l10233:
 27580  0187F6  0ED0               	movlw	208
 27581  0187F8  6E0B               	movwf	(btemp+10)^0,c
 27582  0187FA  0EFF               	movlw	255
 27583  0187FC  6E0C               	movwf	(btemp+11)^0,c
 27584                           
 27585                           ;stkvar	_s @ sp[(-9)+-2]
 27586  0187FE  50E1               	movf	fsr1l,w,c
 27587  018800  0FF5               	addlw	-11
 27588  018802  6ED9               	movwf	fsr2l,c
 27589  018804  50E2               	movf	fsr1h,w,c
 27590  018806  6EDA               	movwf	fsr2h,c
 27591  018808  0EFF               	movlw	255
 27592  01880A  22DA               	addwfc	fsr2h,f,c
 27593  01880C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27594  018812  006F FF77 FFF7     	movff	postdec2,tblptrh
 27595  018818                     	if	0	;tblptru may be non-zero
 27596  018818                     	endif
 27597  018818                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27598  018818  0E00               	movlw	low (__mediumconst shr (0+16))
 27599  01881A  6EF8               	movwf	tblptru,c
 27600  01881C                     	endif
 27601  01881C  0008               	tblrd		*
 27602  01881E  50F5               	movf	tablat,w,c
 27603  018820  6E09               	movwf	(btemp+8)^0,c
 27604  018822  6A0A               	clrf	(btemp+9)^0,c
 27605  018824  500B               	movf	(btemp+10)^0,w,c
 27606  018826  2609               	addwf	(btemp+8)^0,f,c
 27607  018828  500C               	movf	(btemp+11)^0,w,c
 27608  01882A  220A               	addwfc	(btemp+9)^0,f,c
 27609  01882C  500A               	movf	(btemp+9)^0,w,c
 27610  01882E  E106               	bnz	u9210
 27611  018830  0E0A               	movlw	10
 27612  018832  5C09               	subwf	(btemp+8)^0,w,c
 27613  018834  B0D8               	btfsc	status,0,c
 27614  018836  D002               	goto	u9210
 27615  018838  0E01               	movlw	1
 27616  01883A  D001               	goto	u9220
 27617  01883C                     u9210:
 27618  01883C  0E00               	movlw	0
 27619  01883E                     u9220:
 27620  01883E  6E0B               	movwf	(btemp+10)^0,c
 27621  018840  6A0C               	clrf	(btemp+11)^0,c
 27622                           
 27623                           ;stkvar	_atoi$7346 @ sp[(-9)+0]
 27624  018842  0EF7               	movlw	-9
 27625  018844  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27626  01884A  0EF8               	movlw	-8
 27627  01884C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27628                           
 27629                           ;stkvar	_atoi$7346 @ sp[(-9)+0]
 27630  018852  0EF7               	movlw	-9
 27631  018854  006F FF8C  F001    	movff	plusw1,btemp
 27632  01885A  0EF8               	movlw	-8
 27633  01885C  50E3               	movf	plusw1,w,c
 27634  01885E  1001               	iorwf	btemp^0,w,c
 27635  018860  A4D8               	btfss	status,2,c
 27636  018862  D795               	goto	l10229
 27637                           
 27638                           ;stkvar	_neg @ sp[(-9)+7]
 27639  018864  0EFE               	movlw	-2
 27640  018866  006F FF8C  F001    	movff	plusw1,btemp
 27641  01886C  0EFF               	movlw	-1
 27642  01886E  50E3               	movf	plusw1,w,c
 27643  018870  1001               	iorwf	btemp^0,w,c
 27644  018872  A4D8               	btfss	status,2,c
 27645  018874  D00E               	goto	l10243
 27646                           
 27647                           ;stkvar	_n @ sp[(-9)+5]
 27648  018876  0EFC               	movlw	-4
 27649  018878  006F FF8C  F001    	movff	plusw1,btemp
 27650  01887E  1E01               	comf	btemp^0,f,c
 27651  018880  0EFD               	movlw	-3
 27652  018882  006F FF8C  F002    	movff	plusw1,btemp+1
 27653  018888  1E02               	comf	(btemp+1)^0,f,c
 27654  01888A  2A01               	incf	btemp^0,f,c
 27655  01888C  B4D8               	btfsc	status,2,c
 27656  01888E  2A02               	incf	(btemp+1)^0,f,c
 27657  018890  D008               	goto	l3402
 27658  018892                     l10243:
 27659                           
 27660                           ;stkvar	_n @ sp[(-9)+5]
 27661  018892  0EFC               	movlw	-4
 27662  018894  006F FF8C  F001    	movff	plusw1,btemp
 27663  01889A  0EFD               	movlw	-3
 27664  01889C  006F FF8C  F002    	movff	plusw1,btemp+1
 27665  0188A2                     l3402:
 27666                           
 27667                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 27668  0188A2  0EF5               	movlw	245
 27669  0188A4  26E1               	addwf	fsr1l,f,c
 27670  0188A6  0EFF               	movlw	255
 27671  0188A8  22E2               	addwfc	fsr1h,f,c
 27672  0188AA  0012               	return		;funcret
 27673  0188AC                     __end_of_atoi:
 27674                           	opt callstack 0
 27675                           
 27676 ;; *************** function _isspace *****************
 27677 ;; Defined at:
 27678 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 27679 ;; Parameters:    Size  Location     Type
 27680 ;;  c               2  [STACK] int 
 27681 ;; Auto vars:     Size  Location     Type
 27682 ;;		None
 27683 ;; Return value:  Size  Location     Type
 27684 ;;                  2  [STACK] int 
 27685 ;; Registers used:
 27686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27687 ;; Tracked objects:
 27688 ;;		On entry : 0/0
 27689 ;;		On exit  : 0/0
 27690 ;;		Unchanged: 0/0
 27691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27696 ;;Total ram usage:        0 bytes
 27697 ;; Hardware stack levels used:    1
 27698 ;; Hardware stack levels required when called:   15
 27699 ;; This function calls:
 27700 ;;		Nothing
 27701 ;; This function is called by:
 27702 ;;		_atoi
 27703 ;; This function uses a reentrant model
 27704 ;;
 27705                           
 27706                           	psect	text101
 27707  01CBDC                     __ptext101:
 27708                           	opt callstack 0
 27709  01CBDC                     _isspace:
 27710                           	opt callstack 0
 27711                           
 27712                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27713  01CBDC  52E6               	movf	postinc1,f,c
 27714                           
 27715                           ;stkvar	_isspace$7395 @ sp[(-1)+0]
 27716                           
 27717                           ;incstack = 0
 27718 ;; hardware stack exceeded
 27719  01CBDE  0EFF               	movlw	-1
 27720  01CBE0  6AE3               	clrf	plusw1,c
 27721  01CBE2  2AE3               	incf	plusw1,f,c
 27722                           
 27723                           ;stkvar	_c @ sp[(-1)+-2]
 27724  01CBE4  0EFD               	movlw	-3
 27725  01CBE6  006F FF8C  F001    	movff	plusw1,btemp
 27726  01CBEC  0E20               	movlw	32
 27727  01CBEE  1801               	xorwf	btemp^0,w,c
 27728  01CBF0  E104               	bnz	u8080
 27729  01CBF2  0EFE               	movlw	-2
 27730  01CBF4  50E3               	movf	plusw1,w,c
 27731  01CBF6  B4D8               	btfsc	status,2,c
 27732  01CBF8  D012               	goto	l9627
 27733  01CBFA                     u8080:
 27734                           
 27735                           ;stkvar	_c @ sp[(-1)+-2]
 27736  01CBFA  0EFD               	movlw	-3
 27737  01CBFC  50E3               	movf	plusw1,w,c
 27738  01CBFE  0FF7               	addlw	247
 27739  01CC00  6E0B               	movwf	(btemp+10)^0,c
 27740  01CC02  0EFE               	movlw	-2
 27741  01CC04  006F FF8C  F00C    	movff	plusw1,btemp+11
 27742  01CC0A  0EFF               	movlw	255
 27743  01CC0C  220C               	addwfc	(btemp+11)^0,f,c
 27744  01CC0E  500C               	movf	(btemp+11)^0,w,c
 27745  01CC10  E104               	bnz	u8090
 27746  01CC12  0E05               	movlw	5
 27747  01CC14  5C0B               	subwf	(btemp+10)^0,w,c
 27748  01CC16  A0D8               	btfss	status,0,c
 27749  01CC18  D002               	goto	l9627
 27750  01CC1A                     u8090:
 27751                           
 27752                           ;stkvar	_isspace$7395 @ sp[(-1)+0]
 27753  01CC1A  0EFF               	movlw	-1
 27754  01CC1C  6AE3               	clrf	plusw1,c
 27755  01CC1E                     l9627:
 27756                           
 27757                           ;stkvar	_isspace$7395 @ sp[(-1)+0]
 27758  01CC1E  0EFF               	movlw	-1
 27759  01CC20  50E3               	movf	plusw1,w,c
 27760  01CC22  6E01               	movwf	btemp^0,c
 27761  01CC24  6A02               	clrf	(btemp+1)^0,c
 27762                           
 27763                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27764  01CC26  52E5               	movf	postdec1,f,c
 27765  01CC28  52E5               	movf	postdec1,f,c
 27766  01CC2A  52E5               	movf	postdec1,f,c
 27767  01CC2C  0012               	return		;funcret
 27768  01CC2E                     __end_of_isspace:
 27769                           	opt callstack 0
 27770                           
 27771 ;; *************** function _isdigit *****************
 27772 ;; Defined at:
 27773 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 27774 ;; Parameters:    Size  Location     Type
 27775 ;;  c               2  [STACK] int 
 27776 ;; Auto vars:     Size  Location     Type
 27777 ;;		None
 27778 ;; Return value:  Size  Location     Type
 27779 ;;                  2  [STACK] int 
 27780 ;; Registers used:
 27781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27782 ;; Tracked objects:
 27783 ;;		On entry : 0/0
 27784 ;;		On exit  : 0/0
 27785 ;;		Unchanged: 0/0
 27786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27791 ;;Total ram usage:        0 bytes
 27792 ;; Hardware stack levels used:    1
 27793 ;; Hardware stack levels required when called:   15
 27794 ;; This function calls:
 27795 ;;		Nothing
 27796 ;; This function is called by:
 27797 ;;		_vfpfcnvrt
 27798 ;;		_atoi
 27799 ;; This function uses a reentrant model
 27800 ;;
 27801                           
 27802                           	psect	text102
 27803  01D44C                     __ptext102:
 27804                           	opt callstack 0
 27805  01D44C                     _isdigit:
 27806                           	opt callstack 0
 27807                           
 27808                           ;stkvar	_c @ sp[(0)+-2]
 27809                           
 27810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27811                           ;incstack = 0
 27812 ;; hardware stack exceeded
 27813  01D44C  0EFE               	movlw	-2
 27814  01D44E  50E3               	movf	plusw1,w,c
 27815  01D450  0FD0               	addlw	208
 27816  01D452  6E0B               	movwf	(btemp+10)^0,c
 27817  01D454  0EFF               	movlw	-1
 27818  01D456  006F FF8C  F00C    	movff	plusw1,btemp+11
 27819  01D45C  0EFF               	movlw	255
 27820  01D45E  220C               	addwfc	(btemp+11)^0,f,c
 27821  01D460  500C               	movf	(btemp+11)^0,w,c
 27822  01D462  E106               	bnz	u6930
 27823  01D464  0E0A               	movlw	10
 27824  01D466  5C0B               	subwf	(btemp+10)^0,w,c
 27825  01D468  B0D8               	btfsc	status,0,c
 27826  01D46A  D002               	goto	u6930
 27827  01D46C  0E01               	movlw	1
 27828  01D46E  D001               	goto	u6940
 27829  01D470                     u6930:
 27830  01D470  0E00               	movlw	0
 27831  01D472                     u6940:
 27832  01D472  6E01               	movwf	btemp^0,c
 27833  01D474  6A02               	clrf	(btemp+1)^0,c
 27834                           
 27835                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27836  01D476  52E5               	movf	postdec1,f,c
 27837  01D478  52E5               	movf	postdec1,f,c
 27838  01D47A  0012               	return		;funcret
 27839  01D47C                     __end_of_isdigit:
 27840                           	opt callstack 0
 27841                           
 27842 ;; *************** function _set_vterm *****************
 27843 ;; Defined at:
 27844 ;;		line 107 in file "mconfig.c"
 27845 ;; Parameters:    Size  Location     Type
 27846 ;;  vterm           1  [STACK] const unsigned char 
 27847 ;; Auto vars:     Size  Location     Type
 27848 ;;		None
 27849 ;; Return value:  Size  Location     Type
 27850 ;;                  1  [STACK] unsigned char 
 27851 ;; Registers used:
 27852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 27853 ;; Tracked objects:
 27854 ;;		On entry : 0/1
 27855 ;;		On exit  : 0/0
 27856 ;;		Unchanged: 0/0
 27857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27862 ;;Total ram usage:        0 bytes
 27863 ;; Hardware stack levels used:    1
 27864 ;; Hardware stack levels required when called:   15
 27865 ;; This function calls:
 27866 ;;		Nothing
 27867 ;; This function is called by:
 27868 ;;		_main
 27869 ;;		_check_help
 27870 ;; This function uses a reentrant model
 27871 ;;
 27872                           
 27873                           	psect	text103
 27874  01D96E                     __ptext103:
 27875                           	opt callstack 0
 27876  01D96E                     _set_vterm:
 27877                           	opt callstack 15
 27878                           
 27879                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 27880                           ;stkvar	_vterm @ sp[(0)+-1]
 27881                           
 27882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27883                           ;incstack = 0
 27884  01D96E  0EFF               	movlw	-1
 27885  01D970  006F FF8C  F00C    	movff	plusw1,btemp+11
 27886  01D976  0E03               	movlw	3
 27887  01D978  160C               	andwf	(btemp+11)^0,f,c
 27888  01D97A  EE22  F322         	lfsr	2,_D+480
 27889  01D97E  50DF               	movf	223,w,c
 27890  01D980  180C               	xorwf	(btemp+11)^0,w,c
 27891  01D982  0BFE               	andlw	-2
 27892  01D984  180C               	xorwf	(btemp+11)^0,w,c
 27893  01D986  6EDF               	movwf	223,c
 27894                           
 27895                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27896  01D988  52E5               	movf	postdec1,f,c
 27897  01D98A  0012               	return		;funcret
 27898  01D98C                     __end_of_set_vterm:
 27899                           	opt callstack 0
 27900                           
 27901 ;; *************** function _set_temp_display_help *****************
 27902 ;; Defined at:
 27903 ;;		line 211 in file "mconfig.c"
 27904 ;; Parameters:    Size  Location     Type
 27905 ;;  new_response    1  [STACK] const enum E16677
 27906 ;; Auto vars:     Size  Location     Type
 27907 ;;		None
 27908 ;; Return value:  Size  Location     Type
 27909 ;;                  1  [STACK] enum E16677
 27910 ;; Registers used:
 27911 ;;		wreg, fsr1l, fsr1h
 27912 ;; Tracked objects:
 27913 ;;		On entry : 0/2
 27914 ;;		On exit  : 3F/2
 27915 ;;		Unchanged: 0/0
 27916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27921 ;;Total ram usage:        0 bytes
 27922 ;; Hardware stack levels used:    1
 27923 ;; Hardware stack levels required when called:   15
 27924 ;; This function calls:
 27925 ;;		Nothing
 27926 ;; This function is called by:
 27927 ;;		_check_help
 27928 ;; This function uses a reentrant model
 27929 ;;
 27930                           
 27931                           	psect	text104
 27932  01DAD8                     __ptext104:
 27933                           	opt callstack 0
 27934  01DAD8                     _set_temp_display_help:
 27935                           	opt callstack 14
 27936                           
 27937                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 27938                           
 27939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27940                           ;incstack = 0
 27941  01DAD8  0102               	movlb	2	; () banked
 27942  01DADA  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 27943                           
 27944                           ; BSR set to: 2
 27945                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 27946                           ;stkvar	_new_response_info @ sp[(0)+-1]
 27947  01DADC  0EFF               	movlw	-1
 27948  01DADE  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 27949                           
 27950                           ; BSR set to: 2
 27951                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 27952  01DAE4  52E5               	movf	postdec1,f,c
 27953  01DAE6  0012               	return		;funcret
 27954  01DAE8                     __end_of_set_temp_display_help:
 27955                           	opt callstack 0
 27956                           
 27957 ;; *************** function _set_display_info *****************
 27958 ;; Defined at:
 27959 ;;		line 200 in file "mconfig.c"
 27960 ;; Parameters:    Size  Location     Type
 27961 ;;  new_response    1  [STACK] const enum E16677
 27962 ;; Auto vars:     Size  Location     Type
 27963 ;;		None
 27964 ;; Return value:  Size  Location     Type
 27965 ;;                  1  [STACK] enum E17160
 27966 ;; Registers used:
 27967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27968 ;; Tracked objects:
 27969 ;;		On entry : 0/2
 27970 ;;		On exit  : 0/0
 27971 ;;		Unchanged: 0/0
 27972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27977 ;;Total ram usage:        0 bytes
 27978 ;; Hardware stack levels used:    1
 27979 ;; Hardware stack levels required when called:   16
 27980 ;; This function calls:
 27981 ;;		_TimerDone
 27982 ;; This function is called by:
 27983 ;;		_main
 27984 ;;		_check_help
 27985 ;; This function uses a reentrant model
 27986 ;;
 27987                           
 27988                           	psect	text105
 27989  01D98C                     __ptext105:
 27990                           	opt callstack 0
 27991  01D98C                     _set_display_info:
 27992                           	opt callstack 14
 27993                           
 27994                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 27995                           
 27996                           ; BSR set to: 2
 27997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27998                           ;incstack = 0
 27999  01D98C  0E07               	movlw	7
 28000  01D98E  6EE6               	movwf	postinc1,c
 28001  01D990  ECC1  F0EA         	call	_TimerDone	;wreg free
 28002  01D994  5001               	movf	btemp^0,w,c
 28003  01D996  B4D8               	btfsc	status,2,c
 28004  01D998  D006               	goto	l1861
 28005                           
 28006                           ;mconfig.c: 205:   old_info = V.response.info;
 28007  01D99A  0102               	movlb	2	; () banked
 28008  01D99C  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 28009                           
 28010                           ; BSR set to: 2
 28011                           ;mconfig.c: 206:   V.response.info = new_response_info;
 28012                           ;stkvar	_new_response_info @ sp[(0)+-1]
 28013  01D99E  0EFF               	movlw	-1
 28014  01D9A0  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 28015  01D9A6                     l1861:
 28016                           
 28017                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 28018  01D9A6  52E5               	movf	postdec1,f,c
 28019  01D9A8  0012               	return		;funcret
 28020  01D9AA                     __end_of_set_display_info:
 28021                           	opt callstack 0
 28022                           
 28023 ;; *************** function _mode_lamp_dim *****************
 28024 ;; Defined at:
 28025 ;;		line 13 in file "mconfig.c"
 28026 ;; Parameters:    Size  Location     Type
 28027 ;;  level           2  [STACK] const unsigned short 
 28028 ;; Auto vars:     Size  Location     Type
 28029 ;;		None
 28030 ;; Return value:  Size  Location     Type
 28031 ;;                  1  [STACK] void 
 28032 ;; Registers used:
 28033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 28034 ;; Tracked objects:
 28035 ;;		On entry : 0/2
 28036 ;;		On exit  : 0/0
 28037 ;;		Unchanged: 0/0
 28038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28043 ;;Total ram usage:        0 bytes
 28044 ;; Hardware stack levels used:    1
 28045 ;; Hardware stack levels required when called:   16
 28046 ;; This function calls:
 28047 ;;		_PWM8_LoadDutyValue
 28048 ;; This function is called by:
 28049 ;;		_main
 28050 ;;		_check_help
 28051 ;; This function uses a reentrant model
 28052 ;;
 28053                           
 28054                           	psect	text106
 28055  01D9FE                     __ptext106:
 28056                           	opt callstack 0
 28057  01D9FE                     _mode_lamp_dim:
 28058                           	opt callstack 14
 28059                           
 28060                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 28061                           ;stkvar	_level @ sp[(0)+-2]
 28062                           
 28063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28064                           ;incstack = 0
 28065  01D9FE  0EFE               	movlw	-2
 28066  01DA00  006F FF8F FFE6     	movff	plusw1,postinc1
 28067  01DA06  006F FF8F FFE6     	movff	plusw1,postinc1
 28068  01DA0C  ECD2  F0E7         	call	_PWM8_LoadDutyValue	;wreg free
 28069                           
 28070                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 28071  01DA10  52E5               	movf	postdec1,f,c
 28072  01DA12  52E5               	movf	postdec1,f,c
 28073  01DA14  0012               	return		;funcret
 28074  01DA16                     __end_of_mode_lamp_dim:
 28075                           	opt callstack 0
 28076                           
 28077 ;; *************** function _mode_lamp_bright *****************
 28078 ;; Defined at:
 28079 ;;		line 18 in file "mconfig.c"
 28080 ;; Parameters:    Size  Location     Type
 28081 ;;		None
 28082 ;; Auto vars:     Size  Location     Type
 28083 ;;		None
 28084 ;; Return value:  Size  Location     Type
 28085 ;;                  1  [STACK] void 
 28086 ;; Registers used:
 28087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 28088 ;; Tracked objects:
 28089 ;;		On entry : 0/0
 28090 ;;		On exit  : 0/0
 28091 ;;		Unchanged: 0/0
 28092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28097 ;;Total ram usage:        0 bytes
 28098 ;; Hardware stack levels used:    1
 28099 ;; Hardware stack levels required when called:   16
 28100 ;; This function calls:
 28101 ;;		_PWM8_LoadDutyValue
 28102 ;; This function is called by:
 28103 ;;		_check_help
 28104 ;; This function uses a reentrant model
 28105 ;;
 28106                           
 28107                           	psect	text107
 28108  01DB06                     __ptext107:
 28109                           	opt callstack 0
 28110  01DB06                     _mode_lamp_bright:
 28111                           	opt callstack 13
 28112                           
 28113                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 28114                           
 28115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28116                           ;incstack = 0
 28117  01DB06  0E2C               	movlw	44
 28118  01DB08  6EE6               	movwf	postinc1,c
 28119  01DB0A  0E01               	movlw	1
 28120  01DB0C  6EE6               	movwf	postinc1,c
 28121  01DB0E  ECD2  F0E7         	call	_PWM8_LoadDutyValue	;wreg free
 28122                           
 28123                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28124  01DB12  0012               	return		;funcret
 28125  01DB14                     __end_of_mode_lamp_bright:
 28126                           	opt callstack 0
 28127                           
 28128 ;; *************** function _PWM8_LoadDutyValue *****************
 28129 ;; Defined at:
 28130 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 28131 ;; Parameters:    Size  Location     Type
 28132 ;;  dutyValue       2  [STACK] unsigned short 
 28133 ;; Auto vars:     Size  Location     Type
 28134 ;;		None
 28135 ;; Return value:  Size  Location     Type
 28136 ;;                  1  [STACK] void 
 28137 ;; Registers used:
 28138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 28139 ;; Tracked objects:
 28140 ;;		On entry : 0/2
 28141 ;;		On exit  : 0/0
 28142 ;;		Unchanged: 0/0
 28143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28148 ;;Total ram usage:        0 bytes
 28149 ;; Hardware stack levels used:    1
 28150 ;; Hardware stack levels required when called:   15
 28151 ;; This function calls:
 28152 ;;		Nothing
 28153 ;; This function is called by:
 28154 ;;		_mode_lamp_dim
 28155 ;;		_mode_lamp_bright
 28156 ;; This function uses a reentrant model
 28157 ;;
 28158                           
 28159                           	psect	text108
 28160  01CFA4                     __ptext108:
 28161                           	opt callstack 0
 28162  01CFA4                     _PWM8_LoadDutyValue:
 28163                           	opt callstack 14
 28164                           
 28165                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 28166                           ;stkvar	_dutyValue @ sp[(0)+-2]
 28167                           
 28168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28169                           ;incstack = 0
 28170  01CFA4  0EFE               	movlw	-2
 28171  01CFA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 28172  01CFAC  0EFF               	movlw	-1
 28173  01CFAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28174  01CFB4  90D8               	bcf	status,0,c
 28175  01CFB6  320C               	rrcf	(btemp+11)^0,f,c
 28176  01CFB8  320B               	rrcf	(btemp+10)^0,f,c
 28177  01CFBA  90D8               	bcf	status,0,c
 28178  01CFBC  320C               	rrcf	(btemp+11)^0,f,c
 28179  01CFBE  320B               	rrcf	(btemp+10)^0,f,c
 28180  01CFC0  500B               	movf	(btemp+10)^0,w,c
 28181  01CFC2  6E61               	movwf	97,c	;volatile
 28182                           
 28183                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 28184                           ;stkvar	_dutyValue @ sp[(0)+-2]
 28185  01CFC4  0EFE               	movlw	-2
 28186  01CFC6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28187  01CFCC  0E03               	movlw	3
 28188  01CFCE  160C               	andwf	(btemp+11)^0,f,c
 28189  01CFD0  0E06               	movlw	6
 28190  01CFD2  6E01               	movwf	btemp^0,c
 28191  01CFD4                     u10095:
 28192  01CFD4  90D8               	bcf	status,0,c
 28193  01CFD6  360C               	rlcf	(btemp+11)^0,f,c
 28194  01CFD8  2E01               	decfsz	btemp^0,f,c
 28195  01CFDA  D7FC               	goto	u10095
 28196  01CFDC  500C               	movf	(btemp+11)^0,w,c
 28197  01CFDE  6E60               	movwf	96,c	;volatile
 28198                           
 28199                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 28200  01CFE0  52E5               	movf	postdec1,f,c
 28201  01CFE2  52E5               	movf	postdec1,f,c
 28202  01CFE4  0012               	return		;funcret
 28203  01CFE6                     __end_of_PWM8_LoadDutyValue:
 28204                           	opt callstack 0
 28205                           
 28206 ;; *************** function _help_button *****************
 28207 ;; Defined at:
 28208 ;;		line 26 in file "mconfig.c"
 28209 ;; Parameters:    Size  Location     Type
 28210 ;;		None
 28211 ;; Auto vars:     Size  Location     Type
 28212 ;;		None
 28213 ;; Return value:  Size  Location     Type
 28214 ;;                  1  [STACK] _Bool 
 28215 ;; Registers used:
 28216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28217 ;; Tracked objects:
 28218 ;;		On entry : 0/2
 28219 ;;		On exit  : 0/0
 28220 ;;		Unchanged: 0/0
 28221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28226 ;;Total ram usage:        0 bytes
 28227 ;; Hardware stack levels used:    1
 28228 ;; Hardware stack levels required when called:   16
 28229 ;; This function calls:
 28230 ;;		_StartTimer
 28231 ;;		_TimerDone
 28232 ;; This function is called by:
 28233 ;;		_check_help
 28234 ;; This function uses a reentrant model
 28235 ;;
 28236                           
 28237                           	psect	text109
 28238  01D1E0                     __ptext109:
 28239                           	opt callstack 0
 28240  01D1E0                     _help_button:
 28241                           	opt callstack 13
 28242                           
 28243                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 28244                           
 28245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28246                           ;incstack = 0
 28247  01D1E0  B0CB               	btfsc	203,0,c	;volatile
 28248  01D1E2  D00C               	goto	l1804
 28249                           
 28250                           ;mconfig.c: 29:   V.help = 1;
 28251  01D1E4  0102               	movlb	2	; () banked
 28252  01D1E6  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 28253                           
 28254                           ; BSR set to: 2
 28255                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 28256  01D1E8  0E08               	movlw	8
 28257  01D1EA  6EE6               	movwf	postinc1,c
 28258  01D1EC  ECC1  F0EA         	call	_TimerDone	;wreg free
 28259  01D1F0  5001               	movf	btemp^0,w,c
 28260  01D1F2  B4D8               	btfsc	status,2,c
 28261  01D1F4  D003               	goto	l1804
 28262                           
 28263                           ;mconfig.c: 31:    return 1;
 28264  01D1F6  0E01               	movlw	1
 28265  01D1F8  6E01               	movwf	btemp^0,c
 28266  01D1FA  0012               	return	
 28267  01D1FC                     l1804:
 28268                           
 28269                           ;mconfig.c: 34:  if (!V.help)
 28270  01D1FC  0102               	movlb	2	; () banked
 28271  01D1FE  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 28272  01D200  D008               	goto	l11609
 28273                           
 28274                           ; BSR set to: 2
 28275                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 28276  01D202  0E2C               	movlw	44
 28277  01D204  6EE6               	movwf	postinc1,c
 28278  01D206  0E01               	movlw	1
 28279  01D208  6EE6               	movwf	postinc1,c
 28280  01D20A  0E08               	movlw	8
 28281  01D20C  6EE6               	movwf	postinc1,c
 28282  01D20E  EC33  F0E8         	call	_StartTimer	;wreg free
 28283  01D212                     l11609:
 28284                           
 28285                           ;mconfig.c: 37:  return 0;
 28286  01D212  0E00               	movlw	0
 28287  01D214  6E01               	movwf	btemp^0,c
 28288                           
 28289                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 28290  01D216  0012               	return		;funcret
 28291  01D218                     __end_of_help_button:
 28292                           	opt callstack 0
 28293                           
 28294 ;; *************** function _TimerDone *****************
 28295 ;; Defined at:
 28296 ;;		line 20 in file "timers.c"
 28297 ;; Parameters:    Size  Location     Type
 28298 ;;  timer           1  [STACK] const unsigned char 
 28299 ;; Auto vars:     Size  Location     Type
 28300 ;;		None
 28301 ;; Return value:  Size  Location     Type
 28302 ;;                  1  [STACK] _Bool 
 28303 ;; Registers used:
 28304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28305 ;; Tracked objects:
 28306 ;;		On entry : 0/2
 28307 ;;		On exit  : 0/0
 28308 ;;		Unchanged: 0/0
 28309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28314 ;;Total ram usage:        0 bytes
 28315 ;; Hardware stack levels used:    1
 28316 ;; Hardware stack levels required when called:   15
 28317 ;; This function calls:
 28318 ;;		Nothing
 28319 ;; This function is called by:
 28320 ;;		_main
 28321 ;;		_WaitMs
 28322 ;;		_help_button
 28323 ;;		_check_help
 28324 ;;		_set_display_info
 28325 ;;		_update_adc_result
 28326 ;;		_esr_check
 28327 ;; This function uses a reentrant model
 28328 ;;
 28329                           
 28330                           	psect	text110
 28331  01D582                     __ptext110:
 28332                           	opt callstack 0
 28333  01D582                     _TimerDone:
 28334                           	opt callstack 14
 28335                           
 28336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28337                           ;incstack = 0
 28338  01D582  0004               	clrwdt		;# 
 28339                           
 28340                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 28341                           ;stkvar	_timer @ sp[(0)+-1]
 28342  01D584  0EFF               	movlw	-1
 28343  01D586  50E3               	movf	plusw1,w,c
 28344  01D588  0D02               	mullw	2
 28345  01D58A  0ED7               	movlw	low _tickCount
 28346  01D58C  24F3               	addwf	243,w,c
 28347  01D58E  6ED9               	movwf	fsr2l,c
 28348  01D590  0E01               	movlw	high _tickCount
 28349  01D592  20F4               	addwfc	prodh,w,c
 28350  01D594  6EDA               	movwf	fsr2h,c
 28351  01D596  50DE               	movf	postinc2,w,c
 28352  01D598  10DE               	iorwf	postinc2,w,c
 28353  01D59A  A4D8               	btfss	status,2,c
 28354  01D59C  D002               	goto	l10661
 28355                           
 28356                           ;timers.c: 24:   return 1;
 28357  01D59E  0E01               	movlw	1
 28358  01D5A0  D001               	goto	L33
 28359  01D5A2                     l10661:
 28360                           
 28361                           ;timers.c: 26:  return 0;
 28362  01D5A2  0E00               	movlw	0
 28363  01D5A4                     L33:
 28364  01D5A4  6E01               	movwf	btemp^0,c
 28365                           
 28366                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 28367  01D5A6  52E5               	movf	postdec1,f,c
 28368  01D5A8  0012               	return		;funcret
 28369  01D5AA                     __end_of_TimerDone:
 28370                           	opt callstack 0
 28371                           
 28372 ;; *************** function _StartTimer *****************
 28373 ;; Defined at:
 28374 ;;		line 12 in file "timers.c"
 28375 ;; Parameters:    Size  Location     Type
 28376 ;;  timer           1  [STACK] const unsigned char 
 28377 ;;  count           2  [STACK] const unsigned short 
 28378 ;; Auto vars:     Size  Location     Type
 28379 ;;		None
 28380 ;; Return value:  Size  Location     Type
 28381 ;;                  1  [STACK] void 
 28382 ;; Registers used:
 28383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28384 ;; Tracked objects:
 28385 ;;		On entry : 0/0
 28386 ;;		On exit  : 0/0
 28387 ;;		Unchanged: 0/0
 28388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28393 ;;Total ram usage:        0 bytes
 28394 ;; Hardware stack levels used:    1
 28395 ;; Hardware stack levels required when called:   15
 28396 ;; This function calls:
 28397 ;;		Nothing
 28398 ;; This function is called by:
 28399 ;;		_main
 28400 ;;		_WaitMs
 28401 ;;		_help_button
 28402 ;;		_check_help
 28403 ;;		_update_adc_result
 28404 ;;		_calc_bsoc
 28405 ;;		_esr_check
 28406 ;; This function uses a reentrant model
 28407 ;;
 28408                           
 28409                           	psect	text111
 28410  01D066                     __ptext111:
 28411                           	opt callstack 0
 28412  01D066                     _StartTimer:
 28413                           	opt callstack 0
 28414                           
 28415                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 28416                           ;stkvar	_count @ sp[(0)+-3]
 28417                           
 28418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28419                           ;incstack = 0
 28420 ;; hardware stack exceeded
 28421  01D066  0EFD               	movlw	-3
 28422  01D068  006F FF8C  F00B    	movff	plusw1,btemp+10
 28423  01D06E  0EFE               	movlw	-2
 28424  01D070  006F FF8C  F00C    	movff	plusw1,btemp+11
 28425  01D076  90D8               	bcf	status,0,c
 28426  01D078  340B               	rlcf	(btemp+10)^0,w,c
 28427  01D07A  6E09               	movwf	(btemp+8)^0,c
 28428  01D07C  340C               	rlcf	(btemp+11)^0,w,c
 28429  01D07E  6E0A               	movwf	(btemp+9)^0,c
 28430                           
 28431                           ;stkvar	_timer @ sp[(0)+-1]
 28432  01D080  0EFF               	movlw	-1
 28433  01D082  50E3               	movf	plusw1,w,c
 28434  01D084  0D02               	mullw	2
 28435  01D086  0ED7               	movlw	low _tickCount
 28436  01D088  24F3               	addwf	243,w,c
 28437  01D08A  6ED9               	movwf	fsr2l,c
 28438  01D08C  0E01               	movlw	high _tickCount
 28439  01D08E  20F4               	addwfc	prodh,w,c
 28440  01D090  6EDA               	movwf	fsr2h,c
 28441  01D092  0060  F027  FFDE   	movff	btemp+8,postinc2
 28442  01D098  0060  F02B  FFDD   	movff	btemp+9,postdec2
 28443                           
 28444                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 28445  01D09E  52E5               	movf	postdec1,f,c
 28446  01D0A0  52E5               	movf	postdec1,f,c
 28447  01D0A2  52E5               	movf	postdec1,f,c
 28448  01D0A4  0012               	return		;funcret
 28449  01D0A6                     __end_of_StartTimer:
 28450                           	opt callstack 0
 28451                           
 28452 ;; *************** function _display_info *****************
 28453 ;; Defined at:
 28454 ;;		line 190 in file "mconfig.c"
 28455 ;; Parameters:    Size  Location     Type
 28456 ;;		None
 28457 ;; Auto vars:     Size  Location     Type
 28458 ;;		None
 28459 ;; Return value:  Size  Location     Type
 28460 ;;                  1  [STACK] enum E16677
 28461 ;; Registers used:
 28462 ;;		btemp
 28463 ;; Tracked objects:
 28464 ;;		On entry : 0/2
 28465 ;;		On exit  : 0/0
 28466 ;;		Unchanged: 0/0
 28467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28472 ;;Total ram usage:        0 bytes
 28473 ;; Hardware stack levels used:    1
 28474 ;; Hardware stack levels required when called:   15
 28475 ;; This function calls:
 28476 ;;		Nothing
 28477 ;; This function is called by:
 28478 ;;		_check_help
 28479 ;; This function uses a reentrant model
 28480 ;;
 28481                           
 28482                           	psect	text112
 28483  01DB94                     __ptext112:
 28484                           	opt callstack 0
 28485  01DB94                     _display_info:
 28486                           	opt callstack 14
 28487                           
 28488                           ;mconfig.c: 192:  return V.response.info;
 28489                           
 28490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28491                           ;incstack = 0
 28492  01DB94  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 28493                           
 28494                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 28495  01DB9A  0012               	return		;funcret
 28496  01DB9C                     __end_of_display_info:
 28497                           	opt callstack 0
 28498                           
 28499 ;; *************** function _display_help *****************
 28500 ;; Defined at:
 28501 ;;		line 195 in file "mconfig.c"
 28502 ;; Parameters:    Size  Location     Type
 28503 ;;		None
 28504 ;; Auto vars:     Size  Location     Type
 28505 ;;		None
 28506 ;; Return value:  Size  Location     Type
 28507 ;;                  1  [STACK] enum E16677
 28508 ;; Registers used:
 28509 ;;		btemp
 28510 ;; Tracked objects:
 28511 ;;		On entry : 3F/2
 28512 ;;		On exit  : 0/0
 28513 ;;		Unchanged: 0/0
 28514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28519 ;;Total ram usage:        0 bytes
 28520 ;; Hardware stack levels used:    1
 28521 ;; Hardware stack levels required when called:   15
 28522 ;; This function calls:
 28523 ;;		Nothing
 28524 ;; This function is called by:
 28525 ;;		_check_help
 28526 ;; This function uses a reentrant model
 28527 ;;
 28528                           
 28529                           	psect	text113
 28530  01DB9C                     __ptext113:
 28531                           	opt callstack 0
 28532  01DB9C                     _display_help:
 28533                           	opt callstack 14
 28534                           
 28535                           ;mconfig.c: 197:  return V.response.help_temp;
 28536                           
 28537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28538                           ;incstack = 0
 28539  01DB9C  0060  FA94  F001   	movff	_V+165,btemp	;volatile
 28540                           
 28541                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 28542  01DBA2  0012               	return		;funcret
 28543  01DBA4                     __end_of_display_help:
 28544                           	opt callstack 0
 28545                           
 28546 ;; *************** function _check_enter_button *****************
 28547 ;; Defined at:
 28548 ;;		line 49 in file "hid.c"
 28549 ;; Parameters:    Size  Location     Type
 28550 ;;  h               1  [STACK] PTR struct H_data
 28551 ;;		 -> H(9), 
 28552 ;; Auto vars:     Size  Location     Type
 28553 ;;		None
 28554 ;; Return value:  Size  Location     Type
 28555 ;;                  1  [STACK] _Bool 
 28556 ;; Registers used:
 28557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28558 ;; Tracked objects:
 28559 ;;		On entry : 0/0
 28560 ;;		On exit  : 0/0
 28561 ;;		Unchanged: 0/0
 28562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28567 ;;Total ram usage:        0 bytes
 28568 ;; Hardware stack levels used:    1
 28569 ;; Hardware stack levels required when called:   15
 28570 ;; This function calls:
 28571 ;;		Nothing
 28572 ;; This function is called by:
 28573 ;;		_main
 28574 ;; This function uses a reentrant model
 28575 ;;
 28576                           
 28577                           	psect	text114
 28578  01D0A6                     __ptext114:
 28579                           	opt callstack 0
 28580  01D0A6                     _check_enter_button:
 28581                           	opt callstack 15
 28582                           
 28583                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 28584                           ;stkvar	_h @ sp[(0)+-1]
 28585                           
 28586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28587                           ;incstack = 0
 28588  01D0A6  0EFF               	movlw	-1
 28589  01D0A8  50E3               	movf	plusw1,w,c
 28590  01D0AA  6ED9               	movwf	fsr2l,c
 28591  01D0AC  6ADA               	clrf	fsr2h,c
 28592  01D0AE  0E04               	movlw	4
 28593  01D0B0  26D9               	addwf	fsr2l,f,c
 28594  01D0B2  50DF               	movf	indf2,w,c
 28595  01D0B4  A4D8               	btfss	status,2,c
 28596  01D0B6  D013               	goto	l12535
 28597                           
 28598                           ;stkvar	_h @ sp[(0)+-1]
 28599  01D0B8  0EFF               	movlw	-1
 28600  01D0BA  50E3               	movf	plusw1,w,c
 28601  01D0BC  6ED9               	movwf	fsr2l,c
 28602  01D0BE  6ADA               	clrf	fsr2h,c
 28603  01D0C0  0E05               	movlw	5
 28604  01D0C2  26D9               	addwf	fsr2l,f,c
 28605  01D0C4  50DF               	movf	indf2,w,c
 28606  01D0C6  A4D8               	btfss	status,2,c
 28607  01D0C8  D00A               	goto	l12535
 28608                           
 28609                           ;hid.c: 52:   h->wait_enter = 1;
 28610                           ;stkvar	_h @ sp[(0)+-1]
 28611  01D0CA  0EFF               	movlw	-1
 28612  01D0CC  50E3               	movf	plusw1,w,c
 28613  01D0CE  6ED9               	movwf	fsr2l,c
 28614  01D0D0  6ADA               	clrf	fsr2h,c
 28615  01D0D2  0E04               	movlw	4
 28616  01D0D4  26D9               	addwf	fsr2l,f,c
 28617  01D0D6  0E01               	movlw	1
 28618  01D0D8  6EDF               	movwf	indf2,c
 28619                           
 28620                           ;hid.c: 53:   return 1;
 28621  01D0DA  0E01               	movlw	1
 28622  01D0DC  D001               	goto	L34
 28623  01D0DE                     l12535:
 28624                           
 28625                           ;hid.c: 55:  return 0;
 28626  01D0DE  0E00               	movlw	0
 28627  01D0E0                     L34:
 28628  01D0E0  6E01               	movwf	btemp^0,c
 28629                           
 28630                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 28631  01D0E2  52E5               	movf	postdec1,f,c
 28632  01D0E4  0012               	return		;funcret
 28633  01D0E6                     __end_of_check_enter_button:
 28634                           	opt callstack 0
 28635                           
 28636 ;; *************** function _calc_ror_data *****************
 28637 ;; Defined at:
 28638 ;;		line 102 in file "mbmc.c"
 28639 ;; Parameters:    Size  Location     Type
 28640 ;;		None
 28641 ;; Auto vars:     Size  Location     Type
 28642 ;;		None
 28643 ;; Return value:  Size  Location     Type
 28644 ;;                  1  [STACK] void 
 28645 ;; Registers used:
 28646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28647 ;; Tracked objects:
 28648 ;;		On entry : 0/0
 28649 ;;		On exit  : 0/0
 28650 ;;		Unchanged: 0/0
 28651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28656 ;;Total ram usage:        0 bytes
 28657 ;; Hardware stack levels used:    1
 28658 ;; Hardware stack levels required when called:   18
 28659 ;; This function calls:
 28660 ;;		___flge
 28661 ;;		___flsub
 28662 ;;		_conv_raw_result
 28663 ;;		_fabsf
 28664 ;; This function is called by:
 28665 ;;		_main
 28666 ;; This function uses a reentrant model
 28667 ;;
 28668                           
 28669                           	psect	text115
 28670  019A24                     __ptext115:
 28671                           	opt callstack 0
 28672  019A24                     _calc_ror_data:
 28673                           	opt callstack 12
 28674                           
 28675                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 28676                           
 28677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28678                           ;incstack = 0
 28679  019A24  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 28680  019A2A  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 28681  019A30  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 28682  019A36  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 28683  019A3C  0E00               	movlw	0
 28684  019A3E  6EE6               	movwf	postinc1,c
 28685  019A40  0E00               	movlw	0
 28686  019A42  6EE6               	movwf	postinc1,c
 28687  019A44  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28688  019A48  0060  F007  FFE6   	movff	btemp,postinc1
 28689  019A4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28690  019A54  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28691  019A5A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28692  019A60  EC8D  F0E7         	call	___flsub	;wreg free
 28693  019A64  0060  F007  FFE6   	movff	btemp,postinc1
 28694  019A6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28695  019A70  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28696  019A76  0060  F013  FFE6   	movff	btemp+3,postinc1
 28697  019A7C  EC0F  F0DE         	call	_fabsf	;wreg free
 28698  019A80  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 28699  019A86  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 28700  019A8C  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 28701  019A92  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 28702                           
 28703                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 28704  019A98  0E00               	movlw	0
 28705  019A9A  6EE6               	movwf	postinc1,c
 28706  019A9C  0E00               	movlw	0
 28707  019A9E  6EE6               	movwf	postinc1,c
 28708  019AA0  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28709  019AA4  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 28710  019AAA  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 28711  019AB0  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 28712  019AB6  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 28713                           
 28714                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 28715  019ABC  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 28716  019AC2  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 28717  019AC8  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 28718  019ACE  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 28719  019AD4  0E00               	movlw	0
 28720  019AD6  6EE6               	movwf	postinc1,c
 28721  019AD8  0E04               	movlw	4
 28722  019ADA  6EE6               	movwf	postinc1,c
 28723  019ADC  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28724  019AE0  0060  F007  FFE6   	movff	btemp,postinc1
 28725  019AE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28726  019AEC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28727  019AF2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28728  019AF8  EC8D  F0E7         	call	___flsub	;wreg free
 28729  019AFC  0060  F007  FFE6   	movff	btemp,postinc1
 28730  019B02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28731  019B08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28732  019B0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28733  019B14  EC0F  F0DE         	call	_fabsf	;wreg free
 28734  019B18  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 28735  019B1E  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 28736  019B24  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 28737  019B2A  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 28738                           
 28739                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 28740  019B30  0EE7               	movlw	231
 28741  019B32  6EE6               	movwf	postinc1,c
 28742  019B34  0E1D               	movlw	29
 28743  019B36  6EE6               	movwf	postinc1,c
 28744  019B38  0EA7               	movlw	167
 28745  019B3A  6EE6               	movwf	postinc1,c
 28746  019B3C  0E3B               	movlw	59
 28747  019B3E  6EE6               	movwf	postinc1,c
 28748  019B40  EE22  F06B         	lfsr	2,_C+108	;volatile
 28749  019B44  006F FF7B FFE6     	movff	postinc2,postinc1
 28750  019B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 28751  019B50  006F FF7B FFE6     	movff	postinc2,postinc1
 28752  019B56  006F FF7B FFE6     	movff	postinc2,postinc1
 28753  019B5C  EC07  F0D0         	call	___flge	;wreg free
 28754  019B60  B001               	btfsc	btemp& (0+255),0,c
 28755  019B62  D010               	goto	l12185
 28756                           
 28757                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 28758  019B64  0EB0               	movlw	176
 28759  019B66  006F FFA0  F86B    	movff	wreg,_C+108	;volatile
 28760  019B6C  0E03               	movlw	3
 28761  019B6E  006F FFA0  F86C    	movff	wreg,_C+109	;volatile
 28762  019B74  0E67               	movlw	103
 28763  019B76  006F FFA0  F86D    	movff	wreg,_C+110	;volatile
 28764  019B7C  0E3C               	movlw	60
 28765  019B7E  006F FFA0  F86E    	movff	wreg,_C+111	;volatile
 28766  019B84                     l12185:
 28767                           
 28768                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 28769  019B84  0E00               	movlw	0
 28770  019B86  6EE6               	movwf	postinc1,c
 28771  019B88  0E04               	movlw	4
 28772  019B8A  6EE6               	movwf	postinc1,c
 28773  019B8C  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28774  019B90  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 28775  019B96  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 28776  019B9C  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 28777  019BA2  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 28778                           
 28779                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 28780  019BA8  0012               	return		;funcret
 28781  019BAA                     __end_of_calc_ror_data:
 28782                           	opt callstack 0
 28783                           
 28784 ;; *************** function _fabsf *****************
 28785 ;; Defined at:
 28786 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 28787 ;; Parameters:    Size  Location     Type
 28788 ;;  x               4  [STACK] float 
 28789 ;; Auto vars:     Size  Location     Type
 28790 ;;  u               4  [STACK] struct .
 28791 ;; Return value:  Size  Location     Type
 28792 ;;                  4  [STACK] float 
 28793 ;; Registers used:
 28794 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28795 ;; Tracked objects:
 28796 ;;		On entry : 0/0
 28797 ;;		On exit  : 0/0
 28798 ;;		Unchanged: 0/0
 28799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28804 ;;Total ram usage:        0 bytes
 28805 ;; Hardware stack levels used:    1
 28806 ;; Hardware stack levels required when called:   15
 28807 ;; This function calls:
 28808 ;;		Nothing
 28809 ;; This function is called by:
 28810 ;;		_main
 28811 ;;		_calc_ror_data
 28812 ;;		_calc_bsoc
 28813 ;;		_esr_check
 28814 ;; This function uses a reentrant model
 28815 ;;
 28816                           
 28817                           	psect	text116
 28818  01BC1E                     __ptext116:
 28819                           	opt callstack 0
 28820  01BC1E                     _fabsf:
 28821                           	opt callstack 0
 28822                           
 28823                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28824  01BC1E  52E6               	movf	postinc1,f,c
 28825  01BC20  52E6               	movf	postinc1,f,c
 28826  01BC22  52E6               	movf	postinc1,f,c
 28827  01BC24  52E6               	movf	postinc1,f,c
 28828                           
 28829                           ;incstack = 0
 28830 ;; hardware stack exceeded
 28831  01BC26  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 28832  01BC2C  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 28833  01BC32  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 28834  01BC38  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 28835                           
 28836                           ;stkvar	_u @ sp[(-4)+0]
 28837  01BC3E  0EFC               	movlw	-4
 28838  01BC40  0060  F027  FFE3   	movff	btemp+8,plusw1
 28839  01BC46  0EFD               	movlw	-3
 28840  01BC48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28841  01BC4E  0EFE               	movlw	-2
 28842  01BC50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28843  01BC56  0EFF               	movlw	-1
 28844  01BC58  0060  F033  FFE3   	movff	btemp+11,plusw1
 28845                           
 28846                           ;stkvar	_x @ sp[(-4)+-4]
 28847  01BC5E  0EF8               	movlw	-8
 28848  01BC60  006F FF8C  F009    	movff	plusw1,btemp+8
 28849  01BC66  0EF9               	movlw	-7
 28850  01BC68  006F FF8C  F00A    	movff	plusw1,btemp+9
 28851  01BC6E  0EFA               	movlw	-6
 28852  01BC70  006F FF8C  F00B    	movff	plusw1,btemp+10
 28853  01BC76  0EFB               	movlw	-5
 28854  01BC78  006F FF8C  F00C    	movff	plusw1,btemp+11
 28855                           
 28856                           ;stkvar	_u @ sp[(-4)+0]
 28857  01BC7E  0EFC               	movlw	-4
 28858  01BC80  0060  F027  FFE3   	movff	btemp+8,plusw1
 28859  01BC86  0EFD               	movlw	-3
 28860  01BC88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28861  01BC8E  0EFE               	movlw	-2
 28862  01BC90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28863  01BC96  0EFF               	movlw	-1
 28864  01BC98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28865                           
 28866                           ;stkvar	_u @ sp[(-4)+0]
 28867  01BC9E  0EFF               	movlw	-1
 28868  01BCA0  9EE3               	bcf	plusw1,7,c
 28869                           
 28870                           ;stkvar	_u @ sp[(-4)+0]
 28871  01BCA2  0EFC               	movlw	-4
 28872  01BCA4  006F FF8C  F001    	movff	plusw1,btemp
 28873  01BCAA  0EFD               	movlw	-3
 28874  01BCAC  006F FF8C  F002    	movff	plusw1,btemp+1
 28875  01BCB2  0EFE               	movlw	-2
 28876  01BCB4  006F FF8C  F003    	movff	plusw1,btemp+2
 28877  01BCBA  0EFF               	movlw	-1
 28878  01BCBC  006F FF8C  F004    	movff	plusw1,btemp+3
 28879                           
 28880                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 28881  01BCC2  0EF8               	movlw	248
 28882  01BCC4  26E1               	addwf	fsr1l,f,c
 28883  01BCC6  0EFF               	movlw	255
 28884  01BCC8  22E2               	addwfc	fsr1h,f,c
 28885  01BCCA  0012               	return		;funcret
 28886  01BCCC                     __end_of_fabsf:
 28887                           	opt callstack 0
 28888                           
 28889 ;; *************** function _conv_raw_result *****************
 28890 ;; Defined at:
 28891 ;;		line 133 in file "daq.c"
 28892 ;; Parameters:    Size  Location     Type
 28893 ;;  chan            1  [STACK] const enum E16605
 28894 ;;  to_what         1  [STACK] const enum E16997
 28895 ;; Auto vars:     Size  Location     Type
 28896 ;;		None
 28897 ;; Return value:  Size  Location     Type
 28898 ;;                  4  [STACK] float 
 28899 ;; Registers used:
 28900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28901 ;; Tracked objects:
 28902 ;;		On entry : 0/0
 28903 ;;		On exit  : 0/0
 28904 ;;		Unchanged: 0/0
 28905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28910 ;;Total ram usage:        0 bytes
 28911 ;; Hardware stack levels used:    1
 28912 ;; Hardware stack levels required when called:   17
 28913 ;; This function calls:
 28914 ;;		___fldiv
 28915 ;;		___flmul
 28916 ;;		___flsub
 28917 ;;		___xxtofl
 28918 ;;		_get_raw_result
 28919 ;;		_nanf
 28920 ;; This function is called by:
 28921 ;;		_main
 28922 ;;		_convert_adc_data
 28923 ;;		_calc_ror_data
 28924 ;;		_check_day_time
 28925 ;;		_init_bsoc
 28926 ;;		_esr_check
 28927 ;; This function uses a reentrant model
 28928 ;;
 28929                           
 28930                           	psect	text117
 28931  016004                     __ptext117:
 28932                           	opt callstack 0
 28933  016004                     _conv_raw_result:
 28934                           	opt callstack 0
 28935                           
 28936                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 28937                           
 28938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28939                           ;incstack = 0
 28940 ;; hardware stack exceeded
 28941  016004  D24A               	goto	l10643
 28942  016006                     l10589:
 28943                           
 28944                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 28945                           ;stkvar	_chan @ sp[(0)+-1]
 28946  016006  0EFF               	movlw	-1
 28947  016008  006F FF8C  F00C    	movff	plusw1,btemp+11
 28948  01600E  0E77               	movlw	119
 28949  016010  6E09               	movwf	(btemp+8)^0,c
 28950  016012  0E3C               	movlw	60
 28951  016014  6E0A               	movwf	(btemp+9)^0,c
 28952  016016  2A0C               	incf	(btemp+11)^0,f,c
 28953  016018  D003               	goto	u9784
 28954  01601A                     u9785:
 28955  01601A  340A               	rlcf	(btemp+9)^0,w,c
 28956  01601C  320A               	rrcf	(btemp+9)^0,f,c
 28957  01601E  3209               	rrcf	(btemp+8)^0,f,c
 28958  016020                     u9784:
 28959  016020  2E0C               	decfsz	(btemp+11)^0,f,c
 28960  016022  D7FB               	goto	u9785
 28961  016024  B009               	btfsc	(btemp+8)^0,0,c
 28962  016026  D007               	goto	l10595
 28963                           
 28964                           ;daq.c: 139:    return nanf("");
 28965  016028  0EE7               	movlw	low (STR_93+126)
 28966  01602A  6EE6               	movwf	postinc1,c
 28967  01602C  0EFA               	movlw	high (STR_93+126)
 28968  01602E  6EE6               	movwf	postinc1,c
 28969  016030  ECDB  F0E4         	call	_nanf	;wreg free
 28970  016034  D242               	goto	l1961
 28971  016036                     l10595:
 28972                           
 28973                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 28974                           ;stkvar	_chan @ sp[(0)+-1]
 28975  016036  0EFF               	movlw	-1
 28976  016038  006F FF8C  F00C    	movff	plusw1,btemp+11
 28977  01603E  0E03               	movlw	3
 28978  016040  6E09               	movwf	(btemp+8)^0,c
 28979  016042  0E00               	movlw	0
 28980  016044  6E0A               	movwf	(btemp+9)^0,c
 28981  016046  2A0C               	incf	(btemp+11)^0,f,c
 28982  016048  D003               	goto	u9804
 28983  01604A                     u9805:
 28984  01604A  340A               	rlcf	(btemp+9)^0,w,c
 28985  01604C  320A               	rrcf	(btemp+9)^0,f,c
 28986  01604E  3209               	rrcf	(btemp+8)^0,f,c
 28987  016050                     u9804:
 28988  016050  2E0C               	decfsz	(btemp+11)^0,f,c
 28989  016052  D7FB               	goto	u9805
 28990  016054  A009               	btfss	(btemp+8)^0,0,c
 28991  016056  D0F3               	goto	l10609
 28992                           
 28993                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 28994                           ;stkvar	_chan @ sp[(0)+-1]
 28995  016058  0EFF               	movlw	-1
 28996  01605A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28997  016060  0E01               	movlw	1
 28998  016062  6E09               	movwf	(btemp+8)^0,c
 28999  016064  0E00               	movlw	0
 29000  016066  6E0A               	movwf	(btemp+9)^0,c
 29001  016068  2A0C               	incf	(btemp+11)^0,f,c
 29002  01606A  D003               	goto	u9824
 29003  01606C                     u9825:
 29004  01606C  340A               	rlcf	(btemp+9)^0,w,c
 29005  01606E  320A               	rrcf	(btemp+9)^0,f,c
 29006  016070  3209               	rrcf	(btemp+8)^0,f,c
 29007  016072                     u9824:
 29008  016072  2E0C               	decfsz	(btemp+11)^0,f,c
 29009  016074  D7FB               	goto	u9825
 29010  016076  A009               	btfss	(btemp+8)^0,0,c
 29011  016078  D071               	goto	l10605
 29012                           
 29013                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 29014  01607A  0060  F4C7  FFE6   	movff	_R+42,postinc1
 29015  016080  0060  F4CB  FFE6   	movff	_R+43,postinc1
 29016  016086  0060  F4CF  FFE6   	movff	_R+44,postinc1
 29017  01608C  0060  F4D3  FFE6   	movff	_R+45,postinc1
 29018  016092  0060  F4B4  F009   	movff	_R+38,btemp+8	;volatile
 29019  016098  0060  F4B8  F00A   	movff	_R+39,btemp+9	;volatile
 29020  01609E  0E00               	movlw	0
 29021  0160A0  BE0A               	btfsc	(btemp+9)^0,7,c
 29022  0160A2  0EFF               	movlw	255
 29023  0160A4  6E0B               	movwf	(btemp+10)^0,c
 29024  0160A6  6E0C               	movwf	(btemp+11)^0,c
 29025  0160A8  0060  F027  FFE6   	movff	btemp+8,postinc1
 29026  0160AE  0060  F02B  FFE6   	movff	btemp+9,postinc1
 29027  0160B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29028  0160BA  0060  F033  FFE6   	movff	btemp+11,postinc1
 29029  0160C0  0E01               	movlw	1
 29030  0160C2  6EE6               	movwf	postinc1,c
 29031  0160C4  ECB2  F0C8         	call	___xxtofl	;wreg free
 29032  0160C8  0060  F007  FFE6   	movff	btemp,postinc1
 29033  0160CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29034  0160D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29035  0160DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 29036                           
 29037                           ;stkvar	_chan @ sp[(-8)+-1]
 29038  0160E0  0EF7               	movlw	-9
 29039  0160E2  50E3               	movf	plusw1,w,c
 29040  0160E4  6EE6               	movwf	postinc1,c
 29041  0160E6  EC57  F0EC         	call	_get_raw_result	;wreg free
 29042  0160EA  0060  F004  F00B   	movff	btemp,btemp+10
 29043  0160F0  0060  F008  F00C   	movff	btemp+1,btemp+11
 29044  0160F6  500B               	movf	(btemp+10)^0,w,c
 29045  0160F8  6E05               	movwf	(btemp+4)^0,c
 29046  0160FA  500C               	movf	(btemp+11)^0,w,c
 29047  0160FC  6E06               	movwf	(btemp+5)^0,c
 29048  0160FE  6A07               	clrf	(btemp+6)^0,c
 29049  016100  6A08               	clrf	(btemp+7)^0,c
 29050  016102  0060  F017  FFE6   	movff	btemp+4,postinc1
 29051  016108  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29052  01610E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29053  016114  0060  F023  FFE6   	movff	btemp+7,postinc1
 29054  01611A  0E00               	movlw	0
 29055  01611C  6EE6               	movwf	postinc1,c
 29056  01611E  ECB2  F0C8         	call	___xxtofl	;wreg free
 29057  016122  0060  F007  FFE6   	movff	btemp,postinc1
 29058  016128  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29059  01612E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29060  016134  0060  F013  FFE6   	movff	btemp+3,postinc1
 29061  01613A  EC8D  F0E7         	call	___flsub	;wreg free
 29062  01613E  0060  F007  FFE6   	movff	btemp,postinc1
 29063  016144  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29064  01614A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29065  016150  0060  F013  FFE6   	movff	btemp+3,postinc1
 29066  016156  EC52  F0A5         	call	___flmul	;wreg free
 29067  01615A  D1AF               	goto	l1961
 29068  01615C                     l10605:
 29069                           
 29070                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 29071  01615C  0060  F4D7  FFE6   	movff	_R+46,postinc1
 29072  016162  0060  F4DB  FFE6   	movff	_R+47,postinc1
 29073  016168  0060  F4DF  FFE6   	movff	_R+48,postinc1
 29074  01616E  0060  F4E3  FFE6   	movff	_R+49,postinc1
 29075  016174  0060  F4BC  F009   	movff	_R+40,btemp+8	;volatile
 29076  01617A  0060  F4C0  F00A   	movff	_R+41,btemp+9	;volatile
 29077  016180  0E00               	movlw	0
 29078  016182  BE0A               	btfsc	(btemp+9)^0,7,c
 29079  016184  0EFF               	movlw	255
 29080  016186  6E0B               	movwf	(btemp+10)^0,c
 29081  016188  6E0C               	movwf	(btemp+11)^0,c
 29082  01618A  0060  F027  FFE6   	movff	btemp+8,postinc1
 29083  016190  0060  F02B  FFE6   	movff	btemp+9,postinc1
 29084  016196  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29085  01619C  0060  F033  FFE6   	movff	btemp+11,postinc1
 29086  0161A2  0E01               	movlw	1
 29087  0161A4  6EE6               	movwf	postinc1,c
 29088  0161A6  ECB2  F0C8         	call	___xxtofl	;wreg free
 29089  0161AA  0060  F007  FFE6   	movff	btemp,postinc1
 29090  0161B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29091  0161B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29092  0161BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 29093                           
 29094                           ;stkvar	_chan @ sp[(-8)+-1]
 29095  0161C2  0EF7               	movlw	-9
 29096  0161C4  50E3               	movf	plusw1,w,c
 29097  0161C6  6EE6               	movwf	postinc1,c
 29098  0161C8  EC57  F0EC         	call	_get_raw_result	;wreg free
 29099  0161CC  0060  F004  F00B   	movff	btemp,btemp+10
 29100  0161D2  0060  F008  F00C   	movff	btemp+1,btemp+11
 29101  0161D8  500B               	movf	(btemp+10)^0,w,c
 29102  0161DA  6E05               	movwf	(btemp+4)^0,c
 29103  0161DC  500C               	movf	(btemp+11)^0,w,c
 29104  0161DE  6E06               	movwf	(btemp+5)^0,c
 29105  0161E0  6A07               	clrf	(btemp+6)^0,c
 29106  0161E2  6A08               	clrf	(btemp+7)^0,c
 29107  0161E4  0060  F017  FFE6   	movff	btemp+4,postinc1
 29108  0161EA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29109  0161F0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29110  0161F6  0060  F023  FFE6   	movff	btemp+7,postinc1
 29111  0161FC  0E00               	movlw	0
 29112  0161FE  6EE6               	movwf	postinc1,c
 29113  016200  ECB2  F0C8         	call	___xxtofl	;wreg free
 29114  016204  0060  F007  FFE6   	movff	btemp,postinc1
 29115  01620A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29116  016210  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29117  016216  0060  F013  FFE6   	movff	btemp+3,postinc1
 29118  01621C  EC8D  F0E7         	call	___flsub	;wreg free
 29119  016220  0060  F007  FFE6   	movff	btemp,postinc1
 29120  016226  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29121  01622C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29122  016232  0060  F013  FFE6   	movff	btemp+3,postinc1
 29123  016238  EC52  F0A5         	call	___flmul	;wreg free
 29124  01623C  D13E               	goto	l1961
 29125  01623E                     l10609:
 29126                           
 29127                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 29128                           ;stkvar	_chan @ sp[(0)+-1]
 29129  01623E  0EFF               	movlw	-1
 29130  016240  006F FF8C  F00C    	movff	plusw1,btemp+11
 29131  016246  0E00               	movlw	0
 29132  016248  6E09               	movwf	(btemp+8)^0,c
 29133  01624A  0E08               	movlw	8
 29134  01624C  6E0A               	movwf	(btemp+9)^0,c
 29135  01624E  2A0C               	incf	(btemp+11)^0,f,c
 29136  016250  D003               	goto	u9844
 29137  016252                     u9845:
 29138  016252  340A               	rlcf	(btemp+9)^0,w,c
 29139  016254  320A               	rrcf	(btemp+9)^0,f,c
 29140  016256  3209               	rrcf	(btemp+8)^0,f,c
 29141  016258                     u9844:
 29142  016258  2E0C               	decfsz	(btemp+11)^0,f,c
 29143  01625A  D7FB               	goto	u9845
 29144  01625C  A009               	btfss	(btemp+8)^0,0,c
 29145  01625E  D008               	goto	l10617
 29146                           
 29147                           ;daq.c: 149:     return 25.0;
 29148  016260  0E00               	movlw	0
 29149  016262  6E01               	movwf	btemp^0,c
 29150  016264  0E00               	movlw	0
 29151  016266  6E02               	movwf	(btemp+1)^0,c
 29152  016268  0EC8               	movlw	200
 29153  01626A  6E03               	movwf	(btemp+2)^0,c
 29154  01626C  0E41               	movlw	65
 29155  01626E  D113               	goto	L35
 29156  016270                     l10617:
 29157                           
 29158                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 29159  016270  0E00               	movlw	0
 29160  016272  6EE6               	movwf	postinc1,c
 29161  016274  0E00               	movlw	0
 29162  016276  6EE6               	movwf	postinc1,c
 29163  016278  0E7A               	movlw	122
 29164  01627A  6EE6               	movwf	postinc1,c
 29165  01627C  0E44               	movlw	68
 29166  01627E  6EE6               	movwf	postinc1,c
 29167  016280  0E61               	movlw	97
 29168  016282  6EE6               	movwf	postinc1,c
 29169  016284  0E03               	movlw	3
 29170  016286  6EE6               	movwf	postinc1,c
 29171  016288  0E84               	movlw	132
 29172  01628A  6EE6               	movwf	postinc1,c
 29173  01628C  0E40               	movlw	64
 29174  01628E  6EE6               	movwf	postinc1,c
 29175                           
 29176                           ;stkvar	_chan @ sp[(-8)+-1]
 29177  016290  0EF7               	movlw	-9
 29178  016292  50E3               	movf	plusw1,w,c
 29179  016294  6EE6               	movwf	postinc1,c
 29180  016296  EC57  F0EC         	call	_get_raw_result	;wreg free
 29181  01629A  0060  F004  F00B   	movff	btemp,btemp+10
 29182  0162A0  0060  F008  F00C   	movff	btemp+1,btemp+11
 29183  0162A6  500B               	movf	(btemp+10)^0,w,c
 29184  0162A8  6E05               	movwf	(btemp+4)^0,c
 29185  0162AA  500C               	movf	(btemp+11)^0,w,c
 29186  0162AC  6E06               	movwf	(btemp+5)^0,c
 29187  0162AE  6A07               	clrf	(btemp+6)^0,c
 29188  0162B0  6A08               	clrf	(btemp+7)^0,c
 29189  0162B2  0060  F017  FFE6   	movff	btemp+4,postinc1
 29190  0162B8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29191  0162BE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29192  0162C4  0060  F023  FFE6   	movff	btemp+7,postinc1
 29193  0162CA  0E00               	movlw	0
 29194  0162CC  6EE6               	movwf	postinc1,c
 29195  0162CE  ECB2  F0C8         	call	___xxtofl	;wreg free
 29196  0162D2  0060  F007  FFE6   	movff	btemp,postinc1
 29197  0162D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29198  0162DE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29199  0162E4  0060  F013  FFE6   	movff	btemp+3,postinc1
 29200  0162EA  EC52  F0A5         	call	___flmul	;wreg free
 29201  0162EE  0060  F007  FFE6   	movff	btemp,postinc1
 29202  0162F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29203  0162FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29204  016300  0060  F013  FFE6   	movff	btemp+3,postinc1
 29205  016306  EC45  F0AD         	call	___fldiv	;wreg free
 29206  01630A  D0D7               	goto	l1961
 29207  01630C                     l10621:
 29208                           
 29209                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 29210                           ;stkvar	_chan @ sp[(0)+-1]
 29211  01630C  0EFF               	movlw	-1
 29212  01630E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29213  016314  0E03               	movlw	3
 29214  016316  6E09               	movwf	(btemp+8)^0,c
 29215  016318  0E00               	movlw	0
 29216  01631A  6E0A               	movwf	(btemp+9)^0,c
 29217  01631C  2A0C               	incf	(btemp+11)^0,f,c
 29218  01631E  D003               	goto	u9864
 29219  016320                     u9865:
 29220  016320  340A               	rlcf	(btemp+9)^0,w,c
 29221  016322  320A               	rrcf	(btemp+9)^0,f,c
 29222  016324  3209               	rrcf	(btemp+8)^0,f,c
 29223  016326                     u9864:
 29224  016326  2E0C               	decfsz	(btemp+11)^0,f,c
 29225  016328  D7FB               	goto	u9865
 29226  01632A  B009               	btfsc	(btemp+8)^0,0,c
 29227  01632C  D011               	goto	u9890
 29228                           
 29229                           ;stkvar	_chan @ sp[(0)+-1]
 29230  01632E  0EFF               	movlw	-1
 29231  016330  006F FF8C  F00C    	movff	plusw1,btemp+11
 29232  016336  0E00               	movlw	0
 29233  016338  6E09               	movwf	(btemp+8)^0,c
 29234  01633A  0E08               	movlw	8
 29235  01633C  6E0A               	movwf	(btemp+9)^0,c
 29236  01633E  2A0C               	incf	(btemp+11)^0,f,c
 29237  016340  D003               	goto	u9884
 29238  016342                     u9885:
 29239  016342  340A               	rlcf	(btemp+9)^0,w,c
 29240  016344  320A               	rrcf	(btemp+9)^0,f,c
 29241  016346  3209               	rrcf	(btemp+8)^0,f,c
 29242  016348                     u9884:
 29243  016348  2E0C               	decfsz	(btemp+11)^0,f,c
 29244  01634A  D7FB               	goto	u9885
 29245  01634C  A009               	btfss	(btemp+8)^0,0,c
 29246  01634E  D04E               	goto	l10629
 29247  016350                     u9890:
 29248                           
 29249                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 29250  016350  0E00               	movlw	0
 29251  016352  6EE6               	movwf	postinc1,c
 29252  016354  0E00               	movlw	0
 29253  016356  6EE6               	movwf	postinc1,c
 29254  016358  0E7A               	movlw	122
 29255  01635A  6EE6               	movwf	postinc1,c
 29256  01635C  0E44               	movlw	68
 29257  01635E  6EE6               	movwf	postinc1,c
 29258  016360  0E00               	movlw	0
 29259  016362  6EE6               	movwf	postinc1,c
 29260  016364  0E00               	movlw	0
 29261  016366  6EE6               	movwf	postinc1,c
 29262  016368  0E20               	movlw	32
 29263  01636A  6EE6               	movwf	postinc1,c
 29264  01636C  0E3F               	movlw	63
 29265  01636E  6EE6               	movwf	postinc1,c
 29266                           
 29267                           ;stkvar	_chan @ sp[(-8)+-1]
 29268  016370  0EF7               	movlw	-9
 29269  016372  50E3               	movf	plusw1,w,c
 29270  016374  6EE6               	movwf	postinc1,c
 29271  016376  EC57  F0EC         	call	_get_raw_result	;wreg free
 29272  01637A  0060  F004  F00B   	movff	btemp,btemp+10
 29273  016380  0060  F008  F00C   	movff	btemp+1,btemp+11
 29274  016386  500B               	movf	(btemp+10)^0,w,c
 29275  016388  6E05               	movwf	(btemp+4)^0,c
 29276  01638A  500C               	movf	(btemp+11)^0,w,c
 29277  01638C  6E06               	movwf	(btemp+5)^0,c
 29278  01638E  6A07               	clrf	(btemp+6)^0,c
 29279  016390  6A08               	clrf	(btemp+7)^0,c
 29280  016392  0060  F017  FFE6   	movff	btemp+4,postinc1
 29281  016398  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29282  01639E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29283  0163A4  0060  F023  FFE6   	movff	btemp+7,postinc1
 29284  0163AA  0E00               	movlw	0
 29285  0163AC  6EE6               	movwf	postinc1,c
 29286  0163AE  ECB2  F0C8         	call	___xxtofl	;wreg free
 29287  0163B2  0060  F007  FFE6   	movff	btemp,postinc1
 29288  0163B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29289  0163BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29290  0163C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 29291  0163CA  EC52  F0A5         	call	___flmul	;wreg free
 29292  0163CE  0060  F007  FFE6   	movff	btemp,postinc1
 29293  0163D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29294  0163DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29295  0163E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 29296  0163E6  EC45  F0AD         	call	___fldiv	;wreg free
 29297  0163EA  D067               	goto	l1961
 29298  0163EC                     l10629:
 29299                           
 29300                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 29301  0163EC  0E00               	movlw	0
 29302  0163EE  6EE6               	movwf	postinc1,c
 29303  0163F0  0E00               	movlw	0
 29304  0163F2  6EE6               	movwf	postinc1,c
 29305  0163F4  0E7A               	movlw	122
 29306  0163F6  6EE6               	movwf	postinc1,c
 29307  0163F8  0E44               	movlw	68
 29308  0163FA  6EE6               	movwf	postinc1,c
 29309  0163FC  0E61               	movlw	97
 29310  0163FE  6EE6               	movwf	postinc1,c
 29311  016400  0E03               	movlw	3
 29312  016402  6EE6               	movwf	postinc1,c
 29313  016404  0E84               	movlw	132
 29314  016406  6EE6               	movwf	postinc1,c
 29315  016408  0E40               	movlw	64
 29316  01640A  6EE6               	movwf	postinc1,c
 29317                           
 29318                           ;stkvar	_chan @ sp[(-8)+-1]
 29319  01640C  0EF7               	movlw	-9
 29320  01640E  50E3               	movf	plusw1,w,c
 29321  016410  6EE6               	movwf	postinc1,c
 29322  016412  EC57  F0EC         	call	_get_raw_result	;wreg free
 29323  016416  0060  F004  F00B   	movff	btemp,btemp+10
 29324  01641C  0060  F008  F00C   	movff	btemp+1,btemp+11
 29325  016422  500B               	movf	(btemp+10)^0,w,c
 29326  016424  6E05               	movwf	(btemp+4)^0,c
 29327  016426  500C               	movf	(btemp+11)^0,w,c
 29328  016428  6E06               	movwf	(btemp+5)^0,c
 29329  01642A  6A07               	clrf	(btemp+6)^0,c
 29330  01642C  6A08               	clrf	(btemp+7)^0,c
 29331  01642E  0060  F017  FFE6   	movff	btemp+4,postinc1
 29332  016434  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29333  01643A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29334  016440  0060  F023  FFE6   	movff	btemp+7,postinc1
 29335  016446  0E00               	movlw	0
 29336  016448  6EE6               	movwf	postinc1,c
 29337  01644A  ECB2  F0C8         	call	___xxtofl	;wreg free
 29338  01644E  0060  F007  FFE6   	movff	btemp,postinc1
 29339  016454  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29340  01645A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29341  016460  0060  F013  FFE6   	movff	btemp+3,postinc1
 29342  016466  EC52  F0A5         	call	___flmul	;wreg free
 29343  01646A  0060  F007  FFE6   	movff	btemp,postinc1
 29344  016470  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29345  016476  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29346  01647C  0060  F013  FFE6   	movff	btemp+3,postinc1
 29347  016482  EC45  F0AD         	call	___fldiv	;wreg free
 29348  016486  D019               	goto	l1961
 29349  016488                     l10635:
 29350                           
 29351                           ;daq.c: 162:   return 0.0;
 29352  016488  0E00               	movlw	0
 29353  01648A  6E01               	movwf	btemp^0,c
 29354  01648C  0E00               	movlw	0
 29355  01648E  6E02               	movwf	(btemp+1)^0,c
 29356  016490  0E00               	movlw	0
 29357  016492  6E03               	movwf	(btemp+2)^0,c
 29358  016494  0E00               	movlw	0
 29359  016496                     L35:
 29360  016496  6E04               	movwf	(btemp+3)^0,c
 29361  016498  D010               	goto	l1961
 29362  01649A                     l10643:
 29363                           
 29364                           ;stkvar	_to_what @ sp[(0)+-2]
 29365  01649A  0EFE               	movlw	-2
 29366  01649C  50E3               	movf	plusw1,w,c
 29367  01649E  6E0B               	movwf	(btemp+10)^0,c
 29368  0164A0  6A0C               	clrf	(btemp+11)^0,c
 29369                           
 29370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29371                           ; Switch size 1, requested type "simple"
 29372                           ; Number of cases is 1, Range of values is 0 to 0
 29373                           ; switch strategies available:
 29374                           ; Name         Instructions Cycles
 29375                           ; simple_byte            4     3 (average)
 29376                           ;	Chosen strategy is simple_byte
 29377  0164A2  500C               	movf	(btemp+11)^0,w,c
 29378  0164A4  0A00               	xorlw	0	; case 0
 29379  0164A6  A4D8               	btfss	status,2,c
 29380  0164A8  D7EF               	goto	l10635
 29381                           
 29382                           ; Switch size 1, requested type "simple"
 29383                           ; Number of cases is 2, Range of values is 0 to 1
 29384                           ; switch strategies available:
 29385                           ; Name         Instructions Cycles
 29386                           ; simple_byte            7     4 (average)
 29387                           ;	Chosen strategy is simple_byte
 29388  0164AA  500B               	movf	(btemp+10)^0,w,c
 29389  0164AC  0A00               	xorlw	0	; case 0
 29390  0164AE  B4D8               	btfsc	status,2,c
 29391  0164B0  D5AA               	goto	l10589
 29392  0164B2  0A01               	xorlw	1	; case 1
 29393  0164B4  B4D8               	btfsc	status,2,c
 29394  0164B6  D72A               	goto	l10621
 29395  0164B8  D7E7               	goto	l10635
 29396  0164BA                     l1961:
 29397                           
 29398                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29399  0164BA  52E5               	movf	postdec1,f,c
 29400  0164BC  52E5               	movf	postdec1,f,c
 29401  0164BE  0012               	return		;funcret
 29402  0164C0                     __end_of_conv_raw_result:
 29403                           	opt callstack 0
 29404                           
 29405 ;; *************** function _nanf *****************
 29406 ;; Defined at:
 29407 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 29408 ;; Parameters:    Size  Location     Type
 29409 ;;  s               2  [STACK] PTR const unsigned char 
 29410 ;;		 -> STR_130(1), STR_92(1), 
 29411 ;; Auto vars:     Size  Location     Type
 29412 ;;  u               4  [STACK] struct .
 29413 ;; Return value:  Size  Location     Type
 29414 ;;                  4  [STACK] float 
 29415 ;; Registers used:
 29416 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 29417 ;; Tracked objects:
 29418 ;;		On entry : 0/0
 29419 ;;		On exit  : 0/0
 29420 ;;		Unchanged: 0/0
 29421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29426 ;;Total ram usage:        0 bytes
 29427 ;; Hardware stack levels used:    1
 29428 ;; Hardware stack levels required when called:   15
 29429 ;; This function calls:
 29430 ;;		Nothing
 29431 ;; This function is called by:
 29432 ;;		_conv_raw_result
 29433 ;; This function uses a reentrant model
 29434 ;;
 29435                           
 29436                           	psect	text118
 29437  01C9B6                     __ptext118:
 29438                           	opt callstack 0
 29439  01C9B6                     _nanf:
 29440                           	opt callstack 0
 29441                           
 29442                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29443  01C9B6  52E6               	movf	postinc1,f,c
 29444  01C9B8  52E6               	movf	postinc1,f,c
 29445  01C9BA  52E6               	movf	postinc1,f,c
 29446  01C9BC  52E6               	movf	postinc1,f,c
 29447                           
 29448                           ;incstack = 0
 29449 ;; hardware stack exceeded
 29450  01C9BE  0EFF               	movlw	255
 29451  01C9C0  6E09               	movwf	(btemp+8)^0,c
 29452  01C9C2  0EFF               	movlw	255
 29453  01C9C4  6E0A               	movwf	(btemp+9)^0,c
 29454  01C9C6  0EFF               	movlw	255
 29455  01C9C8  6E0B               	movwf	(btemp+10)^0,c
 29456  01C9CA  0E7F               	movlw	127
 29457  01C9CC  6E0C               	movwf	(btemp+11)^0,c
 29458                           
 29459                           ;stkvar	_u @ sp[(-4)+0]
 29460  01C9CE  0EFC               	movlw	-4
 29461  01C9D0  0060  F027  FFE3   	movff	btemp+8,plusw1
 29462  01C9D6  0EFD               	movlw	-3
 29463  01C9D8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29464  01C9DE  0EFE               	movlw	-2
 29465  01C9E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29466  01C9E6  0EFF               	movlw	-1
 29467  01C9E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29468                           
 29469                           ;stkvar	_u @ sp[(-4)+0]
 29470  01C9EE  0EFC               	movlw	-4
 29471  01C9F0  006F FF8C  F001    	movff	plusw1,btemp
 29472  01C9F6  0EFD               	movlw	-3
 29473  01C9F8  006F FF8C  F002    	movff	plusw1,btemp+1
 29474  01C9FE  0EFE               	movlw	-2
 29475  01CA00  006F FF8C  F003    	movff	plusw1,btemp+2
 29476  01CA06  0EFF               	movlw	-1
 29477  01CA08  006F FF8C  F004    	movff	plusw1,btemp+3
 29478                           
 29479                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 29480  01CA0E  0EFA               	movlw	250
 29481  01CA10  26E1               	addwf	fsr1l,f,c
 29482  01CA12  0EFF               	movlw	255
 29483  01CA14  22E2               	addwfc	fsr1h,f,c
 29484  01CA16  0012               	return		;funcret
 29485  01CA18                     __end_of_nanf:
 29486                           	opt callstack 0
 29487                           
 29488 ;; *************** function _get_raw_result *****************
 29489 ;; Defined at:
 29490 ;;		line 125 in file "daq.c"
 29491 ;; Parameters:    Size  Location     Type
 29492 ;;  index           1  [STACK] const enum E16605
 29493 ;; Auto vars:     Size  Location     Type
 29494 ;;		None
 29495 ;; Return value:  Size  Location     Type
 29496 ;;                  2  [STACK] unsigned short 
 29497 ;; Registers used:
 29498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 29499 ;; Tracked objects:
 29500 ;;		On entry : 0/2
 29501 ;;		On exit  : 0/0
 29502 ;;		Unchanged: 0/0
 29503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29508 ;;Total ram usage:        0 bytes
 29509 ;; Hardware stack levels used:    1
 29510 ;; Hardware stack levels required when called:   15
 29511 ;; This function calls:
 29512 ;;		Nothing
 29513 ;; This function is called by:
 29514 ;;		_main
 29515 ;;		_current_sensor_cal
 29516 ;;		_conv_raw_result
 29517 ;; This function uses a reentrant model
 29518 ;;
 29519                           
 29520                           	psect	text119
 29521  01D8AE                     __ptext119:
 29522                           	opt callstack 0
 29523  01D8AE                     _get_raw_result:
 29524                           	opt callstack 0
 29525                           
 29526                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 29527                           ;stkvar	_index @ sp[(0)+-1]
 29528                           
 29529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29530                           ;incstack = 0
 29531 ;; hardware stack exceeded
 29532  01D8AE  0EFF               	movlw	-1
 29533  01D8B0  50E3               	movf	plusw1,w,c
 29534  01D8B2  0D02               	mullw	2
 29535  01D8B4  0E07               	movlw	low _R
 29536  01D8B6  24F3               	addwf	243,w,c
 29537  01D8B8  6ED9               	movwf	fsr2l,c
 29538  01D8BA  0E01               	movlw	high _R
 29539  01D8BC  20F4               	addwfc	prodh,w,c
 29540  01D8BE  6EDA               	movwf	fsr2h,c
 29541  01D8C0  006F FF78  F001    	movff	postinc2,btemp
 29542  01D8C6  006F FF74  F002    	movff	postdec2,btemp+1
 29543                           
 29544                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 29545  01D8CC  52E5               	movf	postdec1,f,c
 29546  01D8CE  0012               	return		;funcret
 29547  01D8D0                     __end_of_get_raw_result:
 29548                           	opt callstack 0
 29549                           
 29550 ;; *************** function ___xxtofl *****************
 29551 ;; Defined at:
 29552 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 29553 ;; Parameters:    Size  Location     Type
 29554 ;;  sign            1  [STACK] unsigned char 
 29555 ;;  val             4  [STACK] long 
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;  arg             4  [STACK] unsigned long 
 29558 ;;  exp             1  [STACK] unsigned char 
 29559 ;; Return value:  Size  Location     Type
 29560 ;;                  4  [STACK] unsigned char 
 29561 ;; Registers used:
 29562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 29563 ;; Tracked objects:
 29564 ;;		On entry : 0/1
 29565 ;;		On exit  : 0/0
 29566 ;;		Unchanged: 0/0
 29567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29572 ;;Total ram usage:        0 bytes
 29573 ;; Hardware stack levels used:    1
 29574 ;; Hardware stack levels required when called:   15
 29575 ;; This function calls:
 29576 ;;		Nothing
 29577 ;; This function is called by:
 29578 ;;		_current_sensor_cal
 29579 ;;		_conv_raw_result
 29580 ;;		_init_bsoc
 29581 ;; This function uses a reentrant model
 29582 ;;
 29583                           
 29584                           	psect	text120
 29585  019164                     __ptext120:
 29586                           	opt callstack 0
 29587  019164                     ___xxtofl:
 29588                           	opt callstack 0
 29589                           
 29590                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29591  019164  0E05               	movlw	5
 29592  019166  26E1               	addwf	fsr1l,f,c
 29593  019168  0E00               	movlw	0
 29594  01916A  22E2               	addwfc	fsr1h,f,c
 29595                           
 29596                           ;stkvar	_sign @ sp[(-5)+-1]
 29597                           
 29598                           ;incstack = 0
 29599 ;; hardware stack exceeded
 29600  01916C  0EFA               	movlw	-6
 29601  01916E  50E3               	movf	plusw1,w,c
 29602  019170  B4D8               	btfsc	status,2,c
 29603  019172  D01D               	goto	l10517
 29604                           
 29605                           ;stkvar	_val @ sp[(-5)+-5]
 29606  019174  0EF9               	movlw	-7
 29607  019176  AEE3               	btfss	plusw1,7,c
 29608  019178  D01A               	goto	l10517
 29609                           
 29610                           ;stkvar	_val @ sp[(-5)+-5]
 29611  01917A  0EF6               	movlw	-10
 29612  01917C  006F FF8C  F009    	movff	plusw1,btemp+8
 29613  019182  0EF7               	movlw	-9
 29614  019184  006F FF8C  F00A    	movff	plusw1,btemp+9
 29615  01918A  0EF8               	movlw	-8
 29616  01918C  006F FF8C  F00B    	movff	plusw1,btemp+10
 29617  019192  0EF9               	movlw	-7
 29618  019194  006F FF8C  F00C    	movff	plusw1,btemp+11
 29619  01919A  1E09               	comf	(btemp+8)^0,f,c
 29620  01919C  1E0A               	comf	(btemp+9)^0,f,c
 29621  01919E  1E0B               	comf	(btemp+10)^0,f,c
 29622  0191A0  1E0C               	comf	(btemp+11)^0,f,c
 29623  0191A2  2A09               	incf	(btemp+8)^0,f,c
 29624  0191A4  0E00               	movlw	0
 29625  0191A6  220A               	addwfc	(btemp+9)^0,f,c
 29626  0191A8  220B               	addwfc	(btemp+10)^0,f,c
 29627  0191AA  220C               	addwfc	(btemp+11)^0,f,c
 29628  0191AC  D010               	goto	L36
 29629  0191AE                     l10517:
 29630                           
 29631                           ;stkvar	_val @ sp[(-5)+-5]
 29632  0191AE  0EF6               	movlw	-10
 29633  0191B0  006F FF8C  F009    	movff	plusw1,btemp+8
 29634  0191B6  0EF7               	movlw	-9
 29635  0191B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 29636  0191BE  0EF8               	movlw	-8
 29637  0191C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 29638  0191C6  0EF9               	movlw	-7
 29639  0191C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29640  0191CE                     L36:
 29641                           
 29642                           ;stkvar	_arg @ sp[(-5)+0]
 29643  0191CE  0EFB               	movlw	-5
 29644  0191D0  0060  F027  FFE3   	movff	btemp+8,plusw1
 29645  0191D6  0EFC               	movlw	-4
 29646  0191D8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29647  0191DE  0EFD               	movlw	-3
 29648  0191E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29649  0191E6  0EFE               	movlw	-2
 29650  0191E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29651                           
 29652                           ;stkvar	_val @ sp[(-5)+-5]
 29653  0191EE  0EF6               	movlw	-10
 29654  0191F0  50E3               	movf	plusw1,w,c
 29655  0191F2  E113               	bnz	l10525
 29656  0191F4  0EF7               	movlw	-9
 29657  0191F6  50E3               	movf	plusw1,w,c
 29658  0191F8  E110               	bnz	l10525
 29659  0191FA  0EF8               	movlw	-8
 29660  0191FC  50E3               	movf	plusw1,w,c
 29661  0191FE  E10D               	bnz	l10525
 29662  019200  0EF9               	movlw	-7
 29663  019202  50E3               	movf	plusw1,w,c
 29664  019204  A4D8               	btfss	status,2,c
 29665  019206  D009               	goto	l10525
 29666  019208  0E00               	movlw	0
 29667  01920A  6E01               	movwf	btemp^0,c
 29668  01920C  0E00               	movlw	0
 29669  01920E  6E02               	movwf	(btemp+1)^0,c
 29670  019210  0E00               	movlw	0
 29671  019212  6E03               	movwf	(btemp+2)^0,c
 29672  019214  0E00               	movlw	0
 29673  019216  6E04               	movwf	(btemp+3)^0,c
 29674  019218  D0A2               	goto	l3340
 29675  01921A                     l10525:
 29676  01921A  0E96               	movlw	150
 29677  01921C  6E0C               	movwf	(btemp+11)^0,c
 29678                           
 29679                           ;stkvar	_exp @ sp[(-5)+4]
 29680  01921E  0EFF               	movlw	-1
 29681  019220  0060  F033  FFE3   	movff	btemp+11,plusw1
 29682  019226  D00B               	goto	l10529
 29683  019228                     l10527:
 29684                           
 29685                           ;stkvar	_exp @ sp[(-5)+4]
 29686  019228  0EFF               	movlw	-1
 29687  01922A  2AE3               	incf	plusw1,f,c
 29688                           
 29689                           ;stkvar	_arg @ sp[(-5)+0]
 29690  01922C  90D8               	bcf	status,0,c
 29691  01922E  0EFE               	movlw	-2
 29692  019230  32E3               	rrcf	plusw1,f,c
 29693  019232  0EFD               	movlw	-3
 29694  019234  32E3               	rrcf	plusw1,f,c
 29695  019236  0EFC               	movlw	-4
 29696  019238  32E3               	rrcf	plusw1,f,c
 29697  01923A  0EFB               	movlw	-5
 29698  01923C  32E3               	rrcf	plusw1,f,c
 29699  01923E                     l10529:
 29700                           
 29701                           ;stkvar	_arg @ sp[(-5)+0]
 29702  01923E  50E1               	movf	fsr1l,w,c
 29703  019240  0FFB               	addlw	-5
 29704  019242  6ED9               	movwf	fsr2l,c
 29705  019244  50E2               	movf	fsr1h,w,c
 29706  019246  6EDA               	movwf	fsr2h,c
 29707  019248  0EFF               	movlw	255
 29708  01924A  22DA               	addwfc	fsr2h,f,c
 29709  01924C  52DE               	movf	postinc2,f,c
 29710  01924E  52DE               	movf	postinc2,f,c
 29711  019250  52DE               	movf	postinc2,f,c
 29712  019252  0EFE               	movlw	254
 29713  019254  14DD               	andwf	postdec2,w,c
 29714  019256  B4D8               	btfsc	status,2,c
 29715  019258  D018               	goto	l10537
 29716  01925A  D7E6               	goto	l10527
 29717  01925C                     l10531:
 29718                           
 29719                           ;stkvar	_exp @ sp[(-5)+4]
 29720  01925C  0EFF               	movlw	-1
 29721  01925E  2AE3               	incf	plusw1,f,c
 29722                           
 29723                           ;stkvar	_arg @ sp[(-5)+0]
 29724  019260  50E1               	movf	fsr1l,w,c
 29725  019262  0FFB               	addlw	-5
 29726  019264  6ED9               	movwf	fsr2l,c
 29727  019266  50E2               	movf	fsr1h,w,c
 29728  019268  6EDA               	movwf	fsr2h,c
 29729  01926A  0EFF               	movlw	255
 29730  01926C  22DA               	addwfc	fsr2h,f,c
 29731  01926E  2ADE               	incf	postinc2,f,c
 29732  019270  0E00               	movlw	0
 29733  019272  22DE               	addwfc	postinc2,f,c
 29734  019274  22DE               	addwfc	postinc2,f,c
 29735  019276  22DE               	addwfc	postinc2,f,c
 29736                           
 29737                           ;stkvar	_arg @ sp[(-5)+0]
 29738  019278  90D8               	bcf	status,0,c
 29739  01927A  0EFE               	movlw	-2
 29740  01927C  32E3               	rrcf	plusw1,f,c
 29741  01927E  0EFD               	movlw	-3
 29742  019280  32E3               	rrcf	plusw1,f,c
 29743  019282  0EFC               	movlw	-4
 29744  019284  32E3               	rrcf	plusw1,f,c
 29745  019286  0EFB               	movlw	-5
 29746  019288  32E3               	rrcf	plusw1,f,c
 29747  01928A                     l10537:
 29748                           
 29749                           ;stkvar	_arg @ sp[(-5)+0]
 29750  01928A  50E1               	movf	fsr1l,w,c
 29751  01928C  0FFB               	addlw	-5
 29752  01928E  6ED9               	movwf	fsr2l,c
 29753  019290  50E2               	movf	fsr1h,w,c
 29754  019292  6EDA               	movwf	fsr2h,c
 29755  019294  0EFF               	movlw	255
 29756  019296  22DA               	addwfc	fsr2h,f,c
 29757  019298  52DE               	movf	postinc2,f,c
 29758  01929A  52DE               	movf	postinc2,f,c
 29759  01929C  52DE               	movf	postinc2,f,c
 29760  01929E  0EFF               	movlw	255
 29761  0192A0  14DD               	andwf	postdec2,w,c
 29762  0192A2  B4D8               	btfsc	status,2,c
 29763  0192A4  D00C               	goto	l10541
 29764  0192A6  D7DA               	goto	l10531
 29765  0192A8                     l10539:
 29766                           
 29767                           ;stkvar	_exp @ sp[(-5)+4]
 29768  0192A8  0EFF               	movlw	-1
 29769  0192AA  06E3               	decf	plusw1,f,c
 29770                           
 29771                           ;stkvar	_arg @ sp[(-5)+0]
 29772  0192AC  90D8               	bcf	status,0,c
 29773  0192AE  0EFB               	movlw	-5
 29774  0192B0  36E3               	rlcf	plusw1,f,c
 29775  0192B2  0EFC               	movlw	-4
 29776  0192B4  36E3               	rlcf	plusw1,f,c
 29777  0192B6  0EFD               	movlw	-3
 29778  0192B8  36E3               	rlcf	plusw1,f,c
 29779  0192BA  0EFE               	movlw	-2
 29780  0192BC  36E3               	rlcf	plusw1,f,c
 29781  0192BE                     l10541:
 29782                           
 29783                           ;stkvar	_arg @ sp[(-5)+0]
 29784  0192BE  0EFD               	movlw	-3
 29785  0192C0  BEE3               	btfsc	plusw1,7,c
 29786  0192C2  D007               	goto	u9710
 29787                           
 29788                           ;stkvar	_exp @ sp[(-5)+4]
 29789  0192C4  0EFF               	movlw	-1
 29790  0192C6  006F FF8C  F001    	movff	plusw1,btemp
 29791  0192CC  0E02               	movlw	2
 29792  0192CE  6001               	cpfslt	btemp^0,c
 29793  0192D0  D7EB               	goto	l10539
 29794  0192D2                     u9710:
 29795                           
 29796                           ;stkvar	_exp @ sp[(-5)+4]
 29797  0192D2  0EFF               	movlw	-1
 29798  0192D4  B0E3               	btfsc	plusw1,0,c
 29799  0192D6  D002               	goto	l10549
 29800                           
 29801                           ;stkvar	_arg @ sp[(-5)+0]
 29802  0192D8  0EFD               	movlw	-3
 29803  0192DA  9EE3               	bcf	plusw1,7,c
 29804  0192DC                     l10549:
 29805                           
 29806                           ;stkvar	_exp @ sp[(-5)+4]
 29807  0192DC  50E1               	movf	fsr1l,w,c
 29808  0192DE  0FFF               	addlw	-1
 29809  0192E0  6ED9               	movwf	fsr2l,c
 29810  0192E2  50E2               	movf	fsr1h,w,c
 29811  0192E4  6EDA               	movwf	fsr2h,c
 29812  0192E6  0EFF               	movlw	255
 29813  0192E8  22DA               	addwfc	fsr2h,f,c
 29814  0192EA  90D8               	bcf	status,0,c
 29815  0192EC  32DF               	rrcf	indf2,f,c
 29816                           
 29817                           ;stkvar	_exp @ sp[(-5)+4]
 29818  0192EE  0EFF               	movlw	-1
 29819  0192F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29820  0192F6  0060  F030  F005   	movff	btemp+11,btemp+4
 29821  0192FC  6A06               	clrf	(btemp+5)^0,c
 29822  0192FE  6A07               	clrf	(btemp+6)^0,c
 29823  019300  6A08               	clrf	(btemp+7)^0,c
 29824  019302  0060  F014  F008   	movff	btemp+4,btemp+7
 29825  019308  6A07               	clrf	(btemp+6)^0,c
 29826  01930A  6A06               	clrf	(btemp+5)^0,c
 29827  01930C  6A05               	clrf	(btemp+4)^0,c
 29828                           
 29829                           ;stkvar	_arg @ sp[(-5)+0]
 29830  01930E  50E1               	movf	fsr1l,w,c
 29831  019310  0FFB               	addlw	-5
 29832  019312  6ED9               	movwf	fsr2l,c
 29833  019314  50E2               	movf	fsr1h,w,c
 29834  019316  6EDA               	movwf	fsr2h,c
 29835  019318  0EFF               	movlw	255
 29836  01931A  22DA               	addwfc	fsr2h,f,c
 29837  01931C  5005               	movf	(btemp+4)^0,w,c
 29838  01931E  12DE               	iorwf	postinc2,f,c
 29839  019320  5006               	movf	(btemp+5)^0,w,c
 29840  019322  12DE               	iorwf	postinc2,f,c
 29841  019324  5007               	movf	(btemp+6)^0,w,c
 29842  019326  12DE               	iorwf	postinc2,f,c
 29843  019328  5008               	movf	(btemp+7)^0,w,c
 29844  01932A  12DE               	iorwf	postinc2,f,c
 29845                           
 29846                           ;stkvar	_sign @ sp[(-5)+-1]
 29847  01932C  0EFA               	movlw	-6
 29848  01932E  50E3               	movf	plusw1,w,c
 29849  019330  B4D8               	btfsc	status,2,c
 29850  019332  D005               	goto	l10559
 29851                           
 29852                           ;stkvar	_val @ sp[(-5)+-5]
 29853  019334  0EF9               	movlw	-7
 29854  019336  AEE3               	btfss	plusw1,7,c
 29855  019338  D002               	goto	l10559
 29856                           
 29857                           ;stkvar	_arg @ sp[(-5)+0]
 29858  01933A  0EFE               	movlw	-2
 29859  01933C  8EE3               	bsf	plusw1,7,c
 29860  01933E                     l10559:
 29861                           
 29862                           ;stkvar	_arg @ sp[(-5)+0]
 29863  01933E  0EFB               	movlw	-5
 29864  019340  006F FF8C  F001    	movff	plusw1,btemp
 29865  019346  0EFC               	movlw	-4
 29866  019348  006F FF8C  F002    	movff	plusw1,btemp+1
 29867  01934E  0EFD               	movlw	-3
 29868  019350  006F FF8C  F003    	movff	plusw1,btemp+2
 29869  019356  0EFE               	movlw	-2
 29870  019358  006F FF8C  F004    	movff	plusw1,btemp+3
 29871  01935E                     l3340:
 29872                           
 29873                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 29874  01935E  0EF6               	movlw	246
 29875  019360  26E1               	addwf	fsr1l,f,c
 29876  019362  0EFF               	movlw	255
 29877  019364  22E2               	addwfc	fsr1h,f,c
 29878  019366  0012               	return		;funcret
 29879  019368                     __end_of___xxtofl:
 29880                           	opt callstack 0
 29881                           
 29882 ;; *************** function ___fldiv *****************
 29883 ;; Defined at:
 29884 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 29885 ;; Parameters:    Size  Location     Type
 29886 ;;  b               4  [STACK] unsigned char 
 29887 ;;  a               4  [STACK] unsigned char 
 29888 ;; Auto vars:     Size  Location     Type
 29889 ;;  grs             4  [STACK] unsigned long 
 29890 ;;  rem             4  [STACK] unsigned long 
 29891 ;;  new_exp         2  [STACK] short 
 29892 ;;  aexp            1  [STACK] unsigned char 
 29893 ;;  bexp            1  [STACK] unsigned char 
 29894 ;;  sign            1  [STACK] unsigned char 
 29895 ;; Return value:  Size  Location     Type
 29896 ;;                  4  [STACK] unsigned char 
 29897 ;; Registers used:
 29898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 29899 ;; Tracked objects:
 29900 ;;		On entry : 0/0
 29901 ;;		On exit  : 0/0
 29902 ;;		Unchanged: 0/0
 29903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29908 ;;Total ram usage:        0 bytes
 29909 ;; Hardware stack levels used:    1
 29910 ;; Hardware stack levels required when called:   15
 29911 ;; This function calls:
 29912 ;;		Nothing
 29913 ;; This function is called by:
 29914 ;;		_current_sensor_cal
 29915 ;;		_conv_raw_result
 29916 ;;		_convert_dac_raw
 29917 ;;		_calc_bsoc
 29918 ;;		_init_bsoc
 29919 ;;		_esr_check
 29920 ;;		_efgtoa
 29921 ;; This function uses a reentrant model
 29922 ;;
 29923                           
 29924                           	psect	text121
 29925  015A8A                     __ptext121:
 29926                           	opt callstack 0
 29927  015A8A                     ___fldiv:
 29928                           	opt callstack 0
 29929                           
 29930                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29931  015A8A  0E0D               	movlw	13
 29932  015A8C  26E1               	addwf	fsr1l,f,c
 29933  015A8E  0E00               	movlw	0
 29934  015A90  22E2               	addwfc	fsr1h,f,c
 29935                           
 29936                           ;stkvar	_b @ sp[(-13)+-4]
 29937                           
 29938                           ;incstack = 0
 29939 ;; hardware stack exceeded
 29940  015A92  0EF2               	movlw	242
 29941  015A94  24E1               	addwf	fsr1l,w,c
 29942  015A96  6ED9               	movwf	fsr2l,c
 29943  015A98  0EFF               	movlw	255
 29944  015A9A  20E2               	addwfc	fsr1h,w,c
 29945  015A9C  6EDA               	movwf	fsr2h,c
 29946  015A9E  50DF               	movf	indf2,w,c
 29947  015AA0  6E0C               	movwf	(btemp+11)^0,c
 29948  015AA2  0E80               	movlw	128
 29949  015AA4  160C               	andwf	(btemp+11)^0,f,c
 29950                           
 29951                           ;stkvar	_sign @ sp[(-13)+12]
 29952  015AA6  0EFF               	movlw	-1
 29953  015AA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29954                           
 29955                           ;stkvar	_b @ sp[(-13)+-4]
 29956  015AAE  0EF2               	movlw	242
 29957  015AB0  24E1               	addwf	fsr1l,w,c
 29958  015AB2  6ED9               	movwf	fsr2l,c
 29959  015AB4  0EFF               	movlw	255
 29960  015AB6  20E2               	addwfc	fsr1h,w,c
 29961  015AB8  6EDA               	movwf	fsr2h,c
 29962  015ABA  50DF               	movf	indf2,w,c
 29963  015ABC  6E0C               	movwf	(btemp+11)^0,c
 29964  015ABE  90D8               	bcf	status,0,c
 29965  015AC0  340C               	rlcf	(btemp+11)^0,w,c
 29966  015AC2  6E0B               	movwf	(btemp+10)^0,c
 29967                           
 29968                           ;stkvar	_bexp @ sp[(-13)+11]
 29969  015AC4  0EFE               	movlw	-2
 29970  015AC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29971                           
 29972                           ;stkvar	_b @ sp[(-13)+-4]
 29973  015ACC  0EF1               	movlw	241
 29974  015ACE  24E1               	addwf	fsr1l,w,c
 29975  015AD0  6ED9               	movwf	fsr2l,c
 29976  015AD2  0EFF               	movlw	255
 29977  015AD4  20E2               	addwfc	fsr1h,w,c
 29978  015AD6  6EDA               	movwf	fsr2h,c
 29979  015AD8  AEDF               	btfss	indf2,7,c
 29980  015ADA  D002               	goto	l9089
 29981                           
 29982                           ;stkvar	_bexp @ sp[(-13)+11]
 29983  015ADC  0EFE               	movlw	-2
 29984  015ADE  80E3               	bsf	plusw1,0,c
 29985  015AE0                     l9089:
 29986                           
 29987                           ;stkvar	_bexp @ sp[(-13)+11]
 29988  015AE0  0EFE               	movlw	-2
 29989  015AE2  50E3               	movf	plusw1,w,c
 29990  015AE4  B4D8               	btfsc	status,2,c
 29991  015AE6  D027               	goto	l9099
 29992                           
 29993                           ;stkvar	_bexp @ sp[(-13)+11]
 29994  015AE8  0EFE               	movlw	-2
 29995  015AEA  28E3               	incf	plusw1,w,c
 29996  015AEC  A4D8               	btfss	status,2,c
 29997  015AEE  D018               	goto	l9095
 29998  015AF0  0E00               	movlw	0
 29999  015AF2  6E09               	movwf	(btemp+8)^0,c
 30000  015AF4  0E00               	movlw	0
 30001  015AF6  6E0A               	movwf	(btemp+9)^0,c
 30002  015AF8  0E00               	movlw	0
 30003  015AFA  6E0B               	movwf	(btemp+10)^0,c
 30004  015AFC  0E00               	movlw	0
 30005  015AFE  6E0C               	movwf	(btemp+11)^0,c
 30006                           
 30007                           ;stkvar	_b @ sp[(-13)+-4]
 30008  015B00  0EEF               	movlw	-17
 30009  015B02  0060  F027  FFE3   	movff	btemp+8,plusw1
 30010  015B08  0EF0               	movlw	-16
 30011  015B0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30012  015B10  0EF1               	movlw	-15
 30013  015B12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30014  015B18  0EF2               	movlw	-14
 30015  015B1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30016  015B20                     l9095:
 30017                           
 30018                           ;stkvar	_b @ sp[(-13)+-4]
 30019  015B20  0EF1               	movlw	-15
 30020  015B22  8EE3               	bsf	plusw1,7,c
 30021                           
 30022                           ;stkvar	_b @ sp[(-13)+-4]
 30023  015B24  0EF2               	movlw	242
 30024  015B26  24E1               	addwf	fsr1l,w,c
 30025  015B28  6ED9               	movwf	fsr2l,c
 30026  015B2A  0EFF               	movlw	255
 30027  015B2C  20E2               	addwfc	fsr1h,w,c
 30028  015B2E  6EDA               	movwf	fsr2h,c
 30029  015B30  0E00               	movlw	0
 30030  015B32  6EDF               	movwf	indf2,c
 30031  015B34  D018               	goto	l9101
 30032  015B36                     l9099:
 30033  015B36  0E00               	movlw	0
 30034  015B38  6E09               	movwf	(btemp+8)^0,c
 30035  015B3A  0E00               	movlw	0
 30036  015B3C  6E0A               	movwf	(btemp+9)^0,c
 30037  015B3E  0E00               	movlw	0
 30038  015B40  6E0B               	movwf	(btemp+10)^0,c
 30039  015B42  0E00               	movlw	0
 30040  015B44  6E0C               	movwf	(btemp+11)^0,c
 30041                           
 30042                           ;stkvar	_b @ sp[(-13)+-4]
 30043  015B46  0EEF               	movlw	-17
 30044  015B48  0060  F027  FFE3   	movff	btemp+8,plusw1
 30045  015B4E  0EF0               	movlw	-16
 30046  015B50  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30047  015B56  0EF1               	movlw	-15
 30048  015B58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30049  015B5E  0EF2               	movlw	-14
 30050  015B60  0060  F033  FFE3   	movff	btemp+11,plusw1
 30051  015B66                     l9101:
 30052                           
 30053                           ;stkvar	_a @ sp[(-13)+-8]
 30054  015B66  0EEE               	movlw	238
 30055  015B68  24E1               	addwf	fsr1l,w,c
 30056  015B6A  6ED9               	movwf	fsr2l,c
 30057  015B6C  0EFF               	movlw	255
 30058  015B6E  20E2               	addwfc	fsr1h,w,c
 30059  015B70  6EDA               	movwf	fsr2h,c
 30060  015B72  50DF               	movf	indf2,w,c
 30061  015B74  6E0C               	movwf	(btemp+11)^0,c
 30062  015B76  0E80               	movlw	128
 30063  015B78  160C               	andwf	(btemp+11)^0,f,c
 30064                           
 30065                           ;stkvar	_sign @ sp[(-13)+12]
 30066  015B7A  50E1               	movf	fsr1l,w,c
 30067  015B7C  0FFF               	addlw	-1
 30068  015B7E  6ED9               	movwf	fsr2l,c
 30069  015B80  50E2               	movf	fsr1h,w,c
 30070  015B82  6EDA               	movwf	fsr2h,c
 30071  015B84  0EFF               	movlw	255
 30072  015B86  22DA               	addwfc	fsr2h,f,c
 30073  015B88  500C               	movf	(btemp+11)^0,w,c
 30074  015B8A  1ADF               	xorwf	indf2,f,c
 30075                           
 30076                           ;stkvar	_a @ sp[(-13)+-8]
 30077  015B8C  0EEE               	movlw	238
 30078  015B8E  24E1               	addwf	fsr1l,w,c
 30079  015B90  6ED9               	movwf	fsr2l,c
 30080  015B92  0EFF               	movlw	255
 30081  015B94  20E2               	addwfc	fsr1h,w,c
 30082  015B96  6EDA               	movwf	fsr2h,c
 30083  015B98  50DF               	movf	indf2,w,c
 30084  015B9A  6E0C               	movwf	(btemp+11)^0,c
 30085  015B9C  90D8               	bcf	status,0,c
 30086  015B9E  340C               	rlcf	(btemp+11)^0,w,c
 30087  015BA0  6E0B               	movwf	(btemp+10)^0,c
 30088                           
 30089                           ;stkvar	_aexp @ sp[(-13)+10]
 30090  015BA2  0EFD               	movlw	-3
 30091  015BA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30092                           
 30093                           ;stkvar	_a @ sp[(-13)+-8]
 30094  015BAA  0EED               	movlw	237
 30095  015BAC  24E1               	addwf	fsr1l,w,c
 30096  015BAE  6ED9               	movwf	fsr2l,c
 30097  015BB0  0EFF               	movlw	255
 30098  015BB2  20E2               	addwfc	fsr1h,w,c
 30099  015BB4  6EDA               	movwf	fsr2h,c
 30100  015BB6  AEDF               	btfss	indf2,7,c
 30101  015BB8  D002               	goto	l9109
 30102                           
 30103                           ;stkvar	_aexp @ sp[(-13)+10]
 30104  015BBA  0EFD               	movlw	-3
 30105  015BBC  80E3               	bsf	plusw1,0,c
 30106  015BBE                     l9109:
 30107                           
 30108                           ;stkvar	_aexp @ sp[(-13)+10]
 30109  015BBE  0EFD               	movlw	-3
 30110  015BC0  50E3               	movf	plusw1,w,c
 30111  015BC2  B4D8               	btfsc	status,2,c
 30112  015BC4  D027               	goto	l9119
 30113                           
 30114                           ;stkvar	_aexp @ sp[(-13)+10]
 30115  015BC6  0EFD               	movlw	-3
 30116  015BC8  28E3               	incf	plusw1,w,c
 30117  015BCA  A4D8               	btfss	status,2,c
 30118  015BCC  D018               	goto	l9115
 30119  015BCE  0E00               	movlw	0
 30120  015BD0  6E09               	movwf	(btemp+8)^0,c
 30121  015BD2  0E00               	movlw	0
 30122  015BD4  6E0A               	movwf	(btemp+9)^0,c
 30123  015BD6  0E00               	movlw	0
 30124  015BD8  6E0B               	movwf	(btemp+10)^0,c
 30125  015BDA  0E00               	movlw	0
 30126  015BDC  6E0C               	movwf	(btemp+11)^0,c
 30127                           
 30128                           ;stkvar	_a @ sp[(-13)+-8]
 30129  015BDE  0EEB               	movlw	-21
 30130  015BE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 30131  015BE6  0EEC               	movlw	-20
 30132  015BE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30133  015BEE  0EED               	movlw	-19
 30134  015BF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30135  015BF6  0EEE               	movlw	-18
 30136  015BF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30137  015BFE                     l9115:
 30138                           
 30139                           ;stkvar	_a @ sp[(-13)+-8]
 30140  015BFE  0EED               	movlw	-19
 30141  015C00  8EE3               	bsf	plusw1,7,c
 30142                           
 30143                           ;stkvar	_a @ sp[(-13)+-8]
 30144  015C02  0EEE               	movlw	238
 30145  015C04  24E1               	addwf	fsr1l,w,c
 30146  015C06  6ED9               	movwf	fsr2l,c
 30147  015C08  0EFF               	movlw	255
 30148  015C0A  20E2               	addwfc	fsr1h,w,c
 30149  015C0C  6EDA               	movwf	fsr2h,c
 30150  015C0E  0E00               	movlw	0
 30151  015C10  6EDF               	movwf	indf2,c
 30152  015C12  D018               	goto	l9121
 30153  015C14                     l9119:
 30154  015C14  0E00               	movlw	0
 30155  015C16  6E09               	movwf	(btemp+8)^0,c
 30156  015C18  0E00               	movlw	0
 30157  015C1A  6E0A               	movwf	(btemp+9)^0,c
 30158  015C1C  0E00               	movlw	0
 30159  015C1E  6E0B               	movwf	(btemp+10)^0,c
 30160  015C20  0E00               	movlw	0
 30161  015C22  6E0C               	movwf	(btemp+11)^0,c
 30162                           
 30163                           ;stkvar	_a @ sp[(-13)+-8]
 30164  015C24  0EEB               	movlw	-21
 30165  015C26  0060  F027  FFE3   	movff	btemp+8,plusw1
 30166  015C2C  0EEC               	movlw	-20
 30167  015C2E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30168  015C34  0EED               	movlw	-19
 30169  015C36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30170  015C3C  0EEE               	movlw	-18
 30171  015C3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30172  015C44                     l9121:
 30173                           
 30174                           ;stkvar	_a @ sp[(-13)+-8]
 30175  015C44  0EEB               	movlw	-21
 30176  015C46  50E3               	movf	plusw1,w,c
 30177  015C48  E139               	bnz	l9133
 30178  015C4A  0EEC               	movlw	-20
 30179  015C4C  50E3               	movf	plusw1,w,c
 30180  015C4E  E136               	bnz	l9133
 30181  015C50  0EED               	movlw	-19
 30182  015C52  50E3               	movf	plusw1,w,c
 30183  015C54  E133               	bnz	l9133
 30184  015C56  0EEE               	movlw	-18
 30185  015C58  50E3               	movf	plusw1,w,c
 30186  015C5A  A4D8               	btfss	status,2,c
 30187  015C5C  D02F               	goto	l9133
 30188                           
 30189                           ;stkvar	_b @ sp[(-13)+-4]
 30190  015C5E  0EEF               	movlw	-17
 30191  015C60  6AE3               	clrf	plusw1,c
 30192  015C62  0EF0               	movlw	-16
 30193  015C64  6AE3               	clrf	plusw1,c
 30194  015C66  0EF1               	movlw	-15
 30195  015C68  6AE3               	clrf	plusw1,c
 30196  015C6A  0EF2               	movlw	-14
 30197  015C6C  6AE3               	clrf	plusw1,c
 30198                           
 30199                           ;stkvar	_b @ sp[(-13)+-4]
 30200  015C6E  0EF1               	movlw	241
 30201  015C70  24E1               	addwf	fsr1l,w,c
 30202  015C72  6ED9               	movwf	fsr2l,c
 30203  015C74  0EFF               	movlw	255
 30204  015C76  20E2               	addwfc	fsr1h,w,c
 30205  015C78  6EDA               	movwf	fsr2h,c
 30206  015C7A  0E80               	movlw	128
 30207  015C7C  12DE               	iorwf	postinc2,f,c
 30208  015C7E  0E7F               	movlw	127
 30209  015C80  12DD               	iorwf	postdec2,f,c
 30210  015C82                     l9127:
 30211                           
 30212                           ;stkvar	_sign @ sp[(-13)+12]
 30213  015C82  0EFF               	movlw	-1
 30214  015C84  006F FF8C  F00C    	movff	plusw1,btemp+11
 30215                           
 30216                           ;stkvar	_b @ sp[(-13)+-4]
 30217  015C8A  0EF2               	movlw	242
 30218  015C8C  24E1               	addwf	fsr1l,w,c
 30219  015C8E  6ED9               	movwf	fsr2l,c
 30220  015C90  0EFF               	movlw	255
 30221  015C92  20E2               	addwfc	fsr1h,w,c
 30222  015C94  6EDA               	movwf	fsr2h,c
 30223  015C96  500C               	movf	(btemp+11)^0,w,c
 30224  015C98  12DF               	iorwf	indf2,f,c
 30225                           
 30226                           ;stkvar	_b @ sp[(-13)+-4]
 30227  015C9A  0EEF               	movlw	-17
 30228  015C9C  006F FF8C  F001    	movff	plusw1,btemp
 30229  015CA2  0EF0               	movlw	-16
 30230  015CA4  006F FF8C  F002    	movff	plusw1,btemp+1
 30231  015CAA  0EF1               	movlw	-15
 30232  015CAC  006F FF8C  F003    	movff	plusw1,btemp+2
 30233  015CB2  0EF2               	movlw	-14
 30234  015CB4  006F FF8C  F004    	movff	plusw1,btemp+3
 30235  015CBA  D19F               	goto	l3264
 30236  015CBC                     l9133:
 30237                           
 30238                           ;stkvar	_bexp @ sp[(-13)+11]
 30239  015CBC  0EFE               	movlw	-2
 30240  015CBE  50E3               	movf	plusw1,w,c
 30241  015CC0  A4D8               	btfss	status,2,c
 30242  015CC2  D009               	goto	l9141
 30243  015CC4  0E00               	movlw	0
 30244  015CC6  6E01               	movwf	btemp^0,c
 30245  015CC8  0E00               	movlw	0
 30246  015CCA  6E02               	movwf	(btemp+1)^0,c
 30247  015CCC  0E00               	movlw	0
 30248  015CCE  6E03               	movwf	(btemp+2)^0,c
 30249  015CD0  0E00               	movlw	0
 30250  015CD2  6E04               	movwf	(btemp+3)^0,c
 30251  015CD4  D192               	goto	l3264
 30252  015CD6                     l9141:
 30253                           
 30254                           ;stkvar	_bexp @ sp[(-13)+11]
 30255  015CD6  0EFE               	movlw	-2
 30256  015CD8  50E3               	movf	plusw1,w,c
 30257  015CDA  6E0B               	movwf	(btemp+10)^0,c
 30258  015CDC  6A0C               	clrf	(btemp+11)^0,c
 30259                           
 30260                           ;stkvar	_aexp @ sp[(-13)+10]
 30261  015CDE  0EFD               	movlw	-3
 30262  015CE0  50E3               	movf	plusw1,w,c
 30263  015CE2  5E0B               	subwf	(btemp+10)^0,f,c
 30264  015CE4  0E00               	movlw	0
 30265  015CE6  5A0C               	subwfb	(btemp+11)^0,f,c
 30266  015CE8  0E7F               	movlw	127
 30267  015CEA  260B               	addwf	(btemp+10)^0,f,c
 30268  015CEC  0E00               	movlw	0
 30269  015CEE  220C               	addwfc	(btemp+11)^0,f,c
 30270                           
 30271                           ;stkvar	_new_exp @ sp[(-13)+8]
 30272  015CF0  0EFB               	movlw	-5
 30273  015CF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30274  015CF8  0EFC               	movlw	-4
 30275  015CFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30276                           
 30277                           ;stkvar	_b @ sp[(-13)+-4]
 30278  015D00  0EEF               	movlw	-17
 30279  015D02  006F FF8C  F009    	movff	plusw1,btemp+8
 30280  015D08  0EF0               	movlw	-16
 30281  015D0A  006F FF8C  F00A    	movff	plusw1,btemp+9
 30282  015D10  0EF1               	movlw	-15
 30283  015D12  006F FF8C  F00B    	movff	plusw1,btemp+10
 30284  015D18  0EF2               	movlw	-14
 30285  015D1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30286                           
 30287                           ;stkvar	_rem @ sp[(-13)+4]
 30288  015D20  0EF7               	movlw	-9
 30289  015D22  0060  F027  FFE3   	movff	btemp+8,plusw1
 30290  015D28  0EF8               	movlw	-8
 30291  015D2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30292  015D30  0EF9               	movlw	-7
 30293  015D32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30294  015D38  0EFA               	movlw	-6
 30295  015D3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30296                           
 30297                           ;stkvar	_b @ sp[(-13)+-4]
 30298  015D40  0EEF               	movlw	-17
 30299  015D42  6AE3               	clrf	plusw1,c
 30300  015D44  0EF0               	movlw	-16
 30301  015D46  6AE3               	clrf	plusw1,c
 30302  015D48  0EF1               	movlw	-15
 30303  015D4A  6AE3               	clrf	plusw1,c
 30304  015D4C  0EF2               	movlw	-14
 30305  015D4E  6AE3               	clrf	plusw1,c
 30306                           
 30307                           ;stkvar	_grs @ sp[(-13)+0]
 30308  015D50  0EF3               	movlw	-13
 30309  015D52  6AE3               	clrf	plusw1,c
 30310  015D54  0EF4               	movlw	-12
 30311  015D56  6AE3               	clrf	plusw1,c
 30312  015D58  0EF5               	movlw	-11
 30313  015D5A  6AE3               	clrf	plusw1,c
 30314  015D5C  0EF6               	movlw	-10
 30315  015D5E  6AE3               	clrf	plusw1,c
 30316                           
 30317                           ;stkvar	_aexp @ sp[(-13)+10]
 30318  015D60  0EFD               	movlw	-3
 30319  015D62  6AE3               	clrf	plusw1,c
 30320  015D64  D050               	goto	l9169
 30321  015D66                     l9151:
 30322                           
 30323                           ;stkvar	_aexp @ sp[(-13)+10]
 30324  015D66  0EFD               	movlw	-3
 30325  015D68  50E3               	movf	plusw1,w,c
 30326  015D6A  B4D8               	btfsc	status,2,c
 30327  015D6C  D020               	goto	l9161
 30328                           
 30329                           ;stkvar	_rem @ sp[(-13)+4]
 30330  015D6E  90D8               	bcf	status,0,c
 30331  015D70  0EF7               	movlw	-9
 30332  015D72  36E3               	rlcf	plusw1,f,c
 30333  015D74  0EF8               	movlw	-8
 30334  015D76  36E3               	rlcf	plusw1,f,c
 30335  015D78  0EF9               	movlw	-7
 30336  015D7A  36E3               	rlcf	plusw1,f,c
 30337  015D7C  0EFA               	movlw	-6
 30338  015D7E  36E3               	rlcf	plusw1,f,c
 30339                           
 30340                           ;stkvar	_b @ sp[(-13)+-4]
 30341  015D80  90D8               	bcf	status,0,c
 30342  015D82  0EEF               	movlw	-17
 30343  015D84  36E3               	rlcf	plusw1,f,c
 30344  015D86  0EF0               	movlw	-16
 30345  015D88  36E3               	rlcf	plusw1,f,c
 30346  015D8A  0EF1               	movlw	-15
 30347  015D8C  36E3               	rlcf	plusw1,f,c
 30348  015D8E  0EF2               	movlw	-14
 30349  015D90  36E3               	rlcf	plusw1,f,c
 30350                           
 30351                           ;stkvar	_grs @ sp[(-13)+0]
 30352  015D92  0EF6               	movlw	-10
 30353  015D94  AEE3               	btfss	plusw1,7,c
 30354  015D96  D002               	goto	l9159
 30355                           
 30356                           ;stkvar	_b @ sp[(-13)+-4]
 30357  015D98  0EEF               	movlw	-17
 30358  015D9A  80E3               	bsf	plusw1,0,c
 30359  015D9C                     l9159:
 30360                           
 30361                           ;stkvar	_grs @ sp[(-13)+0]
 30362  015D9C  90D8               	bcf	status,0,c
 30363  015D9E  0EF3               	movlw	-13
 30364  015DA0  36E3               	rlcf	plusw1,f,c
 30365  015DA2  0EF4               	movlw	-12
 30366  015DA4  36E3               	rlcf	plusw1,f,c
 30367  015DA6  0EF5               	movlw	-11
 30368  015DA8  36E3               	rlcf	plusw1,f,c
 30369  015DAA  0EF6               	movlw	-10
 30370  015DAC  36E3               	rlcf	plusw1,f,c
 30371  015DAE                     l9161:
 30372                           
 30373                           ;stkvar	_a @ sp[(-13)+-8]
 30374                           ;stkvar	_rem @ sp[(-13)+4]
 30375  015DAE  50E1               	movf	fsr1l,w,c
 30376  015DB0  0FF7               	addlw	-9
 30377  015DB2  6ED9               	movwf	fsr2l,c
 30378  015DB4  50E2               	movf	fsr1h,w,c
 30379  015DB6  6EDA               	movwf	fsr2h,c
 30380  015DB8  0EFF               	movlw	255
 30381  015DBA  22DA               	addwfc	fsr2h,f,c
 30382  015DBC  0EEB               	movlw	-21
 30383  015DBE  50E3               	movf	plusw1,w,c
 30384  015DC0  5CDE               	subwf	postinc2,w,c
 30385  015DC2  0EEC               	movlw	-20
 30386  015DC4  50E3               	movf	plusw1,w,c
 30387  015DC6  58DE               	subwfb	postinc2,w,c
 30388  015DC8  0EED               	movlw	-19
 30389  015DCA  50E3               	movf	plusw1,w,c
 30390  015DCC  58DE               	subwfb	postinc2,w,c
 30391  015DCE  0EEE               	movlw	-18
 30392  015DD0  50E3               	movf	plusw1,w,c
 30393  015DD2  58DE               	subwfb	postinc2,w,c
 30394  015DD4  A0D8               	btfss	status,0,c
 30395  015DD6  D015               	goto	l9167
 30396                           
 30397                           ;stkvar	_grs @ sp[(-13)+0]
 30398  015DD8  0EF6               	movlw	-10
 30399  015DDA  8CE3               	bsf	plusw1,6,c
 30400                           
 30401                           ;stkvar	_a @ sp[(-13)+-8]
 30402                           ;stkvar	_rem @ sp[(-13)+4]
 30403  015DDC  50E1               	movf	fsr1l,w,c
 30404  015DDE  0FF7               	addlw	-9
 30405  015DE0  6ED9               	movwf	fsr2l,c
 30406  015DE2  50E2               	movf	fsr1h,w,c
 30407  015DE4  6EDA               	movwf	fsr2h,c
 30408  015DE6  0EFF               	movlw	255
 30409  015DE8  22DA               	addwfc	fsr2h,f,c
 30410  015DEA  0EEB               	movlw	-21
 30411  015DEC  50E3               	movf	plusw1,w,c
 30412  015DEE  5EDE               	subwf	postinc2,f,c
 30413  015DF0  0EEC               	movlw	-20
 30414  015DF2  50E3               	movf	plusw1,w,c
 30415  015DF4  5ADE               	subwfb	postinc2,f,c
 30416  015DF6  0EED               	movlw	-19
 30417  015DF8  50E3               	movf	plusw1,w,c
 30418  015DFA  5ADE               	subwfb	postinc2,f,c
 30419  015DFC  0EEE               	movlw	-18
 30420  015DFE  50E3               	movf	plusw1,w,c
 30421  015E00  5ADE               	subwfb	postinc2,f,c
 30422  015E02                     l9167:
 30423                           
 30424                           ;stkvar	_aexp @ sp[(-13)+10]
 30425  015E02  0EFD               	movlw	-3
 30426  015E04  2AE3               	incf	plusw1,f,c
 30427  015E06                     l9169:
 30428                           
 30429                           ;stkvar	_aexp @ sp[(-13)+10]
 30430  015E06  0EFD               	movlw	-3
 30431  015E08  006F FF8C  F001    	movff	plusw1,btemp
 30432  015E0E  0E19               	movlw	25
 30433  015E10  6401               	cpfsgt	btemp^0,c
 30434  015E12  D7A9               	goto	l9151
 30435                           
 30436                           ;stkvar	_rem @ sp[(-13)+4]
 30437  015E14  0EF7               	movlw	-9
 30438  015E16  50E3               	movf	plusw1,w,c
 30439  015E18  E10A               	bnz	u7300
 30440  015E1A  0EF8               	movlw	-8
 30441  015E1C  50E3               	movf	plusw1,w,c
 30442  015E1E  E107               	bnz	u7300
 30443  015E20  0EF9               	movlw	-7
 30444  015E22  50E3               	movf	plusw1,w,c
 30445  015E24  E104               	bnz	u7300
 30446  015E26  0EFA               	movlw	-6
 30447  015E28  50E3               	movf	plusw1,w,c
 30448  015E2A  B4D8               	btfsc	status,2,c
 30449  015E2C  D024               	goto	l9185
 30450  015E2E                     u7300:
 30451                           
 30452                           ;stkvar	_grs @ sp[(-13)+0]
 30453  015E2E  0EF3               	movlw	-13
 30454  015E30  80E3               	bsf	plusw1,0,c
 30455  015E32  D021               	goto	l9185
 30456  015E34                     l9175:
 30457                           
 30458                           ;stkvar	_b @ sp[(-13)+-4]
 30459  015E34  90D8               	bcf	status,0,c
 30460  015E36  0EEF               	movlw	-17
 30461  015E38  36E3               	rlcf	plusw1,f,c
 30462  015E3A  0EF0               	movlw	-16
 30463  015E3C  36E3               	rlcf	plusw1,f,c
 30464  015E3E  0EF1               	movlw	-15
 30465  015E40  36E3               	rlcf	plusw1,f,c
 30466  015E42  0EF2               	movlw	-14
 30467  015E44  36E3               	rlcf	plusw1,f,c
 30468                           
 30469                           ;stkvar	_grs @ sp[(-13)+0]
 30470  015E46  0EF6               	movlw	-10
 30471  015E48  AEE3               	btfss	plusw1,7,c
 30472  015E4A  D002               	goto	l9181
 30473                           
 30474                           ;stkvar	_b @ sp[(-13)+-4]
 30475  015E4C  0EEF               	movlw	-17
 30476  015E4E  80E3               	bsf	plusw1,0,c
 30477  015E50                     l9181:
 30478                           
 30479                           ;stkvar	_grs @ sp[(-13)+0]
 30480  015E50  90D8               	bcf	status,0,c
 30481  015E52  0EF3               	movlw	-13
 30482  015E54  36E3               	rlcf	plusw1,f,c
 30483  015E56  0EF4               	movlw	-12
 30484  015E58  36E3               	rlcf	plusw1,f,c
 30485  015E5A  0EF5               	movlw	-11
 30486  015E5C  36E3               	rlcf	plusw1,f,c
 30487  015E5E  0EF6               	movlw	-10
 30488  015E60  36E3               	rlcf	plusw1,f,c
 30489                           
 30490                           ;stkvar	_new_exp @ sp[(-13)+8]
 30491  015E62  50E1               	movf	fsr1l,w,c
 30492  015E64  0FFB               	addlw	-5
 30493  015E66  6ED9               	movwf	fsr2l,c
 30494  015E68  50E2               	movf	fsr1h,w,c
 30495  015E6A  6EDA               	movwf	fsr2h,c
 30496  015E6C  0EFF               	movlw	255
 30497  015E6E  22DA               	addwfc	fsr2h,f,c
 30498  015E70  06DE               	decf	postinc2,f,c
 30499  015E72  0E00               	movlw	0
 30500  015E74  5ADD               	subwfb	postdec2,f,c
 30501  015E76                     l9185:
 30502                           
 30503                           ;stkvar	_b @ sp[(-13)+-4]
 30504  015E76  0EF1               	movlw	-15
 30505  015E78  AEE3               	btfss	plusw1,7,c
 30506  015E7A  D7DC               	goto	l9175
 30507                           
 30508                           ;stkvar	_aexp @ sp[(-13)+10]
 30509  015E7C  0EFD               	movlw	-3
 30510  015E7E  6AE3               	clrf	plusw1,c
 30511                           
 30512                           ;stkvar	_grs @ sp[(-13)+0]
 30513  015E80  0EF6               	movlw	-10
 30514  015E82  AEE3               	btfss	plusw1,7,c
 30515  015E84  D020               	goto	l9199
 30516                           
 30517                           ;stkvar	_grs @ sp[(-13)+0]
 30518  015E86  50E1               	movf	fsr1l,w,c
 30519  015E88  0FF3               	addlw	-13
 30520  015E8A  6ED9               	movwf	fsr2l,c
 30521  015E8C  50E2               	movf	fsr1h,w,c
 30522  015E8E  6EDA               	movwf	fsr2h,c
 30523  015E90  0EFF               	movlw	255
 30524  015E92  22DA               	addwfc	fsr2h,f,c
 30525  015E94  0EFF               	movlw	255
 30526  015E96  14DE               	andwf	postinc2,w,c
 30527  015E98  6E09               	movwf	(btemp+8)^0,c
 30528  015E9A  0EFF               	movlw	255
 30529  015E9C  14DE               	andwf	postinc2,w,c
 30530  015E9E  6E0A               	movwf	(btemp+9)^0,c
 30531  015EA0  0EFF               	movlw	255
 30532  015EA2  14DE               	andwf	postinc2,w,c
 30533  015EA4  6E0B               	movwf	(btemp+10)^0,c
 30534  015EA6  0E7F               	movlw	127
 30535  015EA8  14DE               	andwf	postinc2,w,c
 30536  015EAA  6E0C               	movwf	(btemp+11)^0,c
 30537  015EAC  5009               	movf	(btemp+8)^0,w,c
 30538  015EAE  100A               	iorwf	(btemp+9)^0,w,c
 30539  015EB0  100B               	iorwf	(btemp+10)^0,w,c
 30540  015EB2  100C               	iorwf	(btemp+11)^0,w,c
 30541  015EB4  B4D8               	btfsc	status,2,c
 30542  015EB6  D004               	goto	l9195
 30543  015EB8                     u7340:
 30544                           
 30545                           ;stkvar	_aexp @ sp[(-13)+10]
 30546  015EB8  0EFD               	movlw	-3
 30547  015EBA  6AE3               	clrf	plusw1,c
 30548  015EBC  2AE3               	incf	plusw1,f,c
 30549  015EBE  D003               	goto	l9199
 30550  015EC0                     l9195:
 30551                           
 30552                           ;stkvar	_b @ sp[(-13)+-4]
 30553  015EC0  0EEF               	movlw	-17
 30554  015EC2  B0E3               	btfsc	plusw1,0,c
 30555  015EC4  D7F9               	goto	u7340
 30556  015EC6                     l9199:
 30557                           
 30558                           ;stkvar	_aexp @ sp[(-13)+10]
 30559  015EC6  0EFD               	movlw	-3
 30560  015EC8  50E3               	movf	plusw1,w,c
 30561  015ECA  B4D8               	btfsc	status,2,c
 30562  015ECC  D036               	goto	l9209
 30563                           
 30564                           ;stkvar	_b @ sp[(-13)+-4]
 30565  015ECE  50E1               	movf	fsr1l,w,c
 30566  015ED0  0FEF               	addlw	-17
 30567  015ED2  6ED9               	movwf	fsr2l,c
 30568  015ED4  50E2               	movf	fsr1h,w,c
 30569  015ED6  6EDA               	movwf	fsr2h,c
 30570  015ED8  0EFF               	movlw	255
 30571  015EDA  22DA               	addwfc	fsr2h,f,c
 30572  015EDC  2ADE               	incf	postinc2,f,c
 30573  015EDE  0E00               	movlw	0
 30574  015EE0  22DE               	addwfc	postinc2,f,c
 30575  015EE2  22DE               	addwfc	postinc2,f,c
 30576  015EE4  22DE               	addwfc	postinc2,f,c
 30577                           
 30578                           ;stkvar	_b @ sp[(-13)+-4]
 30579  015EE6  0EF2               	movlw	-14
 30580  015EE8  A0E3               	btfss	plusw1,0,c
 30581  015EEA  D027               	goto	l9209
 30582  015EEC  0E01               	movlw	1
 30583  015EEE  6E0C               	movwf	(btemp+11)^0,c
 30584                           
 30585                           ;stkvar	_b @ sp[(-13)+-4]
 30586  015EF0  50E1               	movf	fsr1l,w,c
 30587  015EF2  0FEF               	addlw	-17
 30588  015EF4  6ED9               	movwf	fsr2l,c
 30589  015EF6  50E2               	movf	fsr1h,w,c
 30590  015EF8  6EDA               	movwf	fsr2h,c
 30591  015EFA  0EFF               	movlw	255
 30592  015EFC  22DA               	addwfc	fsr2h,f,c
 30593  015EFE  280C               	incf	(btemp+11)^0,w,c
 30594  015F00  52DE               	movf	postinc2,f,c
 30595  015F02  D008               	goto	u7380
 30596  015F04                     u7385:
 30597  015F04  52DE               	movf	postinc2,f,c
 30598  015F06  90D8               	bcf	status,0,c
 30599  015F08  BEDC               	btfsc	preinc2,7,c
 30600  015F0A  80D8               	bsf	status,0,c
 30601  015F0C  32DD               	rrcf	postdec2,f,c
 30602  015F0E  32DD               	rrcf	postdec2,f,c
 30603  015F10  32DD               	rrcf	postdec2,f,c
 30604  015F12  32DE               	rrcf	postinc2,f,c
 30605  015F14                     u7380:
 30606  015F14  2EE8               	decfsz	wreg,f,c
 30607  015F16  D7F6               	goto	u7385
 30608                           
 30609                           ;stkvar	_new_exp @ sp[(-13)+8]
 30610  015F18  0EFB               	movlw	-5
 30611  015F1A  50E3               	movf	plusw1,w,c
 30612  015F1C  0F01               	addlw	1
 30613  015F1E  6E01               	movwf	btemp^0,c
 30614  015F20  0EFB               	movlw	-5
 30615  015F22  0060  F007  FFE3   	movff	btemp,plusw1
 30616  015F28  6A01               	clrf	btemp^0,c
 30617  015F2A  0EFC               	movlw	-4
 30618  015F2C  50E3               	movf	plusw1,w,c
 30619  015F2E  2001               	addwfc	btemp^0,w,c
 30620  015F30  6E01               	movwf	btemp^0,c
 30621  015F32  0EFC               	movlw	-4
 30622  015F34  0060  F007  FFE3   	movff	btemp,plusw1
 30623  015F3A                     l9209:
 30624                           
 30625                           ;stkvar	_new_exp @ sp[(-13)+8]
 30626  015F3A  0EFC               	movlw	-4
 30627  015F3C  BEE3               	btfsc	plusw1,7,c
 30628  015F3E  D01B               	goto	l9215
 30629  015F40  0EFC               	movlw	-4
 30630  015F42  50E3               	movf	plusw1,w,c
 30631  015F44  E104               	bnz	u7390
 30632  015F46  0EFB               	movlw	-5
 30633  015F48  28E3               	incf	plusw1,w,c
 30634  015F4A  A0D8               	btfss	status,0,c
 30635  015F4C  D014               	goto	l9215
 30636  015F4E                     u7390:
 30637  015F4E  0EFF               	movlw	255
 30638  015F50  6E0B               	movwf	(btemp+10)^0,c
 30639  015F52  0E00               	movlw	0
 30640  015F54  6E0C               	movwf	(btemp+11)^0,c
 30641                           
 30642                           ;stkvar	_new_exp @ sp[(-13)+8]
 30643  015F56  0EFB               	movlw	-5
 30644  015F58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30645  015F5E  0EFC               	movlw	-4
 30646  015F60  0060  F033  FFE3   	movff	btemp+11,plusw1
 30647                           
 30648                           ;stkvar	_b @ sp[(-13)+-4]
 30649  015F66  0EEF               	movlw	-17
 30650  015F68  6AE3               	clrf	plusw1,c
 30651  015F6A  0EF0               	movlw	-16
 30652  015F6C  6AE3               	clrf	plusw1,c
 30653  015F6E  0EF1               	movlw	-15
 30654  015F70  6AE3               	clrf	plusw1,c
 30655  015F72  0EF2               	movlw	-14
 30656  015F74  6AE3               	clrf	plusw1,c
 30657  015F76                     l9215:
 30658                           
 30659                           ;stkvar	_new_exp @ sp[(-13)+8]
 30660  015F76  0EFC               	movlw	-4
 30661  015F78  BEE3               	btfsc	plusw1,7,c
 30662  015F7A  D007               	goto	u7400
 30663  015F7C  0EFC               	movlw	-4
 30664  015F7E  50E3               	movf	plusw1,w,c
 30665  015F80  E112               	bnz	l9221
 30666  015F82  0EFB               	movlw	-5
 30667  015F84  04E3               	decf	plusw1,w,c
 30668  015F86  B0D8               	btfsc	status,0,c
 30669  015F88  D00E               	goto	l9221
 30670  015F8A                     u7400:
 30671                           
 30672                           ;stkvar	_new_exp @ sp[(-13)+8]
 30673  015F8A  0EFB               	movlw	-5
 30674  015F8C  6AE3               	clrf	plusw1,c
 30675  015F8E  0EFC               	movlw	-4
 30676  015F90  6AE3               	clrf	plusw1,c
 30677                           
 30678                           ;stkvar	_b @ sp[(-13)+-4]
 30679  015F92  0EEF               	movlw	-17
 30680  015F94  6AE3               	clrf	plusw1,c
 30681  015F96  0EF0               	movlw	-16
 30682  015F98  6AE3               	clrf	plusw1,c
 30683  015F9A  0EF1               	movlw	-15
 30684  015F9C  6AE3               	clrf	plusw1,c
 30685  015F9E  0EF2               	movlw	-14
 30686  015FA0  6AE3               	clrf	plusw1,c
 30687                           
 30688                           ;stkvar	_sign @ sp[(-13)+12]
 30689  015FA2  0EFF               	movlw	-1
 30690  015FA4  6AE3               	clrf	plusw1,c
 30691  015FA6                     l9221:
 30692                           
 30693                           ;stkvar	_new_exp @ sp[(-13)+8]
 30694                           ;stkvar	_bexp @ sp[(-13)+11]
 30695  015FA6  0EFB               	movlw	-5
 30696  015FA8  006F FF8C  F001    	movff	plusw1,btemp
 30697  015FAE  0EFE               	movlw	-2
 30698  015FB0  0060  F007  FFE3   	movff	btemp,plusw1
 30699                           
 30700                           ;stkvar	_bexp @ sp[(-13)+11]
 30701  015FB6  0EFE               	movlw	-2
 30702  015FB8  A0E3               	btfss	plusw1,0,c
 30703  015FBA  D009               	goto	l9227
 30704                           
 30705                           ;stkvar	_b @ sp[(-13)+-4]
 30706  015FBC  0EF1               	movlw	241
 30707  015FBE  24E1               	addwf	fsr1l,w,c
 30708  015FC0  6ED9               	movwf	fsr2l,c
 30709  015FC2  0EFF               	movlw	255
 30710  015FC4  20E2               	addwfc	fsr1h,w,c
 30711  015FC6  6EDA               	movwf	fsr2h,c
 30712  015FC8  0E00               	movlw	0
 30713  015FCA  8EDB               	bsf	plusw2,7,c
 30714  015FCC  D008               	goto	l9229
 30715  015FCE                     l9227:
 30716                           
 30717                           ;stkvar	_b @ sp[(-13)+-4]
 30718  015FCE  0EF1               	movlw	241
 30719  015FD0  24E1               	addwf	fsr1l,w,c
 30720  015FD2  6ED9               	movwf	fsr2l,c
 30721  015FD4  0EFF               	movlw	255
 30722  015FD6  20E2               	addwfc	fsr1h,w,c
 30723  015FD8  6EDA               	movwf	fsr2h,c
 30724  015FDA  0E7F               	movlw	127
 30725  015FDC  16DF               	andwf	indf2,f,c
 30726  015FDE                     l9229:
 30727                           
 30728                           ;stkvar	_b @ sp[(-13)+-4]
 30729  015FDE  0EF2               	movlw	242
 30730  015FE0  24E1               	addwf	fsr1l,w,c
 30731  015FE2  6ED9               	movwf	fsr2l,c
 30732  015FE4  0EFF               	movlw	255
 30733  015FE6  20E2               	addwfc	fsr1h,w,c
 30734  015FE8  6EDA               	movwf	fsr2h,c
 30735                           
 30736                           ;stkvar	_bexp @ sp[(-13)+11]
 30737  015FEA  0EFE               	movlw	-2
 30738  015FEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30739  015FF2  90D8               	bcf	status,0,c
 30740  015FF4  300C               	rrcf	(btemp+11)^0,w,c
 30741  015FF6  6EDF               	movwf	indf2,c
 30742  015FF8  D644               	goto	l9127
 30743  015FFA                     l3264:
 30744                           
 30745                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30746  015FFA  0EEB               	movlw	235
 30747  015FFC  26E1               	addwf	fsr1l,f,c
 30748  015FFE  0EFF               	movlw	255
 30749  016000  22E2               	addwfc	fsr1h,f,c
 30750  016002  0012               	return		;funcret
 30751  016004                     __end_of___fldiv:
 30752                           	opt callstack 0
 30753                           
 30754 ;; *************** function ___flge *****************
 30755 ;; Defined at:
 30756 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 30757 ;; Parameters:    Size  Location     Type
 30758 ;;  ff1             4  [STACK] unsigned char 
 30759 ;;  ff2             4  [STACK] unsigned char 
 30760 ;; Auto vars:     Size  Location     Type
 30761 ;;		None
 30762 ;; Return value:  Size  Location     Type
 30763 ;;		None               void
 30764 ;; Registers used:
 30765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 30766 ;; Tracked objects:
 30767 ;;		On entry : 0/1
 30768 ;;		On exit  : 0/0
 30769 ;;		Unchanged: 0/0
 30770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30775 ;;Total ram usage:        0 bytes
 30776 ;; Hardware stack levels used:    1
 30777 ;; Hardware stack levels required when called:   15
 30778 ;; This function calls:
 30779 ;;		Nothing
 30780 ;; This function is called by:
 30781 ;;		_main
 30782 ;;		_convert_dac_raw
 30783 ;;		_calc_ror_data
 30784 ;;		_check_day_time
 30785 ;;		_calc_bsoc
 30786 ;;		_efgtoa
 30787 ;; This function uses a reentrant model
 30788 ;;
 30789                           
 30790                           	psect	text122
 30791  01A00E                     __ptext122:
 30792                           	opt callstack 0
 30793  01A00E                     ___flge:
 30794                           	opt callstack 0
 30795                           
 30796                           ;stkvar	_ff1 @ sp[(0)+-4]
 30797                           
 30798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30799                           ;incstack = 0
 30800 ;; hardware stack exceeded
 30801  01A00E  50E1               	movf	fsr1l,w,c
 30802  01A010  0FFC               	addlw	-4
 30803  01A012  6ED9               	movwf	fsr2l,c
 30804  01A014  50E2               	movf	fsr1h,w,c
 30805  01A016  6EDA               	movwf	fsr2h,c
 30806  01A018  0EFF               	movlw	255
 30807  01A01A  22DA               	addwfc	fsr2h,f,c
 30808  01A01C  0E00               	movlw	0
 30809  01A01E  14DE               	andwf	postinc2,w,c
 30810  01A020  6E09               	movwf	(btemp+8)^0,c
 30811  01A022  0E00               	movlw	0
 30812  01A024  14DE               	andwf	postinc2,w,c
 30813  01A026  6E0A               	movwf	(btemp+9)^0,c
 30814  01A028  0E80               	movlw	128
 30815  01A02A  14DE               	andwf	postinc2,w,c
 30816  01A02C  6E0B               	movwf	(btemp+10)^0,c
 30817  01A02E  0E7F               	movlw	127
 30818  01A030  14DE               	andwf	postinc2,w,c
 30819  01A032  6E0C               	movwf	(btemp+11)^0,c
 30820  01A034  5009               	movf	(btemp+8)^0,w,c
 30821  01A036  100A               	iorwf	(btemp+9)^0,w,c
 30822  01A038  100B               	iorwf	(btemp+10)^0,w,c
 30823  01A03A  100C               	iorwf	(btemp+11)^0,w,c
 30824  01A03C  A4D8               	btfss	status,2,c
 30825  01A03E  D008               	goto	l9503
 30826                           
 30827                           ;stkvar	_ff1 @ sp[(0)+-4]
 30828  01A040  0EFC               	movlw	-4
 30829  01A042  6AE3               	clrf	plusw1,c
 30830  01A044  0EFD               	movlw	-3
 30831  01A046  6AE3               	clrf	plusw1,c
 30832  01A048  0EFE               	movlw	-2
 30833  01A04A  6AE3               	clrf	plusw1,c
 30834  01A04C  0EFF               	movlw	-1
 30835  01A04E  6AE3               	clrf	plusw1,c
 30836  01A050                     l9503:
 30837                           
 30838                           ;stkvar	_ff2 @ sp[(0)+-8]
 30839  01A050  50E1               	movf	fsr1l,w,c
 30840  01A052  0FF8               	addlw	-8
 30841  01A054  6ED9               	movwf	fsr2l,c
 30842  01A056  50E2               	movf	fsr1h,w,c
 30843  01A058  6EDA               	movwf	fsr2h,c
 30844  01A05A  0EFF               	movlw	255
 30845  01A05C  22DA               	addwfc	fsr2h,f,c
 30846  01A05E  0E00               	movlw	0
 30847  01A060  14DE               	andwf	postinc2,w,c
 30848  01A062  6E09               	movwf	(btemp+8)^0,c
 30849  01A064  0E00               	movlw	0
 30850  01A066  14DE               	andwf	postinc2,w,c
 30851  01A068  6E0A               	movwf	(btemp+9)^0,c
 30852  01A06A  0E80               	movlw	128
 30853  01A06C  14DE               	andwf	postinc2,w,c
 30854  01A06E  6E0B               	movwf	(btemp+10)^0,c
 30855  01A070  0E7F               	movlw	127
 30856  01A072  14DE               	andwf	postinc2,w,c
 30857  01A074  6E0C               	movwf	(btemp+11)^0,c
 30858  01A076  5009               	movf	(btemp+8)^0,w,c
 30859  01A078  100A               	iorwf	(btemp+9)^0,w,c
 30860  01A07A  100B               	iorwf	(btemp+10)^0,w,c
 30861  01A07C  100C               	iorwf	(btemp+11)^0,w,c
 30862  01A07E  A4D8               	btfss	status,2,c
 30863  01A080  D008               	goto	l2945
 30864                           
 30865                           ;stkvar	_ff2 @ sp[(0)+-8]
 30866  01A082  0EF8               	movlw	-8
 30867  01A084  6AE3               	clrf	plusw1,c
 30868  01A086  0EF9               	movlw	-7
 30869  01A088  6AE3               	clrf	plusw1,c
 30870  01A08A  0EFA               	movlw	-6
 30871  01A08C  6AE3               	clrf	plusw1,c
 30872  01A08E  0EFB               	movlw	-5
 30873  01A090  6AE3               	clrf	plusw1,c
 30874  01A092                     l2945:
 30875                           
 30876                           ;stkvar	_ff1 @ sp[(0)+-4]
 30877  01A092  0EFF               	movlw	-1
 30878  01A094  AEE3               	btfss	plusw1,7,c
 30879  01A096  D024               	goto	l9509
 30880                           
 30881                           ;stkvar	_ff1 @ sp[(0)+-4]
 30882  01A098  0E00               	movlw	0
 30883  01A09A  6E09               	movwf	(btemp+8)^0,c
 30884  01A09C  0E00               	movlw	0
 30885  01A09E  6E0A               	movwf	(btemp+9)^0,c
 30886  01A0A0  0E00               	movlw	0
 30887  01A0A2  6E0B               	movwf	(btemp+10)^0,c
 30888  01A0A4  0E80               	movlw	128
 30889  01A0A6  6E0C               	movwf	(btemp+11)^0,c
 30890  01A0A8  0EFC               	movlw	-4
 30891  01A0AA  50E3               	movf	plusw1,w,c
 30892  01A0AC  5E09               	subwf	(btemp+8)^0,f,c
 30893  01A0AE  0EFD               	movlw	-3
 30894  01A0B0  50E3               	movf	plusw1,w,c
 30895  01A0B2  5A0A               	subwfb	(btemp+9)^0,f,c
 30896  01A0B4  0EFE               	movlw	-2
 30897  01A0B6  50E3               	movf	plusw1,w,c
 30898  01A0B8  5A0B               	subwfb	(btemp+10)^0,f,c
 30899  01A0BA  0EFF               	movlw	-1
 30900  01A0BC  50E3               	movf	plusw1,w,c
 30901  01A0BE  5A0C               	subwfb	(btemp+11)^0,f,c
 30902                           
 30903                           ;stkvar	_ff1 @ sp[(0)+-4]
 30904  01A0C0  0EFC               	movlw	-4
 30905  01A0C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 30906  01A0C8  0EFD               	movlw	-3
 30907  01A0CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30908  01A0D0  0EFE               	movlw	-2
 30909  01A0D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30910  01A0D8  0EFF               	movlw	-1
 30911  01A0DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30912  01A0E0                     l9509:
 30913                           
 30914                           ;stkvar	_ff2 @ sp[(0)+-8]
 30915  01A0E0  0EFB               	movlw	-5
 30916  01A0E2  AEE3               	btfss	plusw1,7,c
 30917  01A0E4  D024               	goto	l9513
 30918                           
 30919                           ;stkvar	_ff2 @ sp[(0)+-8]
 30920  01A0E6  0E00               	movlw	0
 30921  01A0E8  6E09               	movwf	(btemp+8)^0,c
 30922  01A0EA  0E00               	movlw	0
 30923  01A0EC  6E0A               	movwf	(btemp+9)^0,c
 30924  01A0EE  0E00               	movlw	0
 30925  01A0F0  6E0B               	movwf	(btemp+10)^0,c
 30926  01A0F2  0E80               	movlw	128
 30927  01A0F4  6E0C               	movwf	(btemp+11)^0,c
 30928  01A0F6  0EF8               	movlw	-8
 30929  01A0F8  50E3               	movf	plusw1,w,c
 30930  01A0FA  5E09               	subwf	(btemp+8)^0,f,c
 30931  01A0FC  0EF9               	movlw	-7
 30932  01A0FE  50E3               	movf	plusw1,w,c
 30933  01A100  5A0A               	subwfb	(btemp+9)^0,f,c
 30934  01A102  0EFA               	movlw	-6
 30935  01A104  50E3               	movf	plusw1,w,c
 30936  01A106  5A0B               	subwfb	(btemp+10)^0,f,c
 30937  01A108  0EFB               	movlw	-5
 30938  01A10A  50E3               	movf	plusw1,w,c
 30939  01A10C  5A0C               	subwfb	(btemp+11)^0,f,c
 30940                           
 30941                           ;stkvar	_ff2 @ sp[(0)+-8]
 30942  01A10E  0EF8               	movlw	-8
 30943  01A110  0060  F027  FFE3   	movff	btemp+8,plusw1
 30944  01A116  0EF9               	movlw	-7
 30945  01A118  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30946  01A11E  0EFA               	movlw	-6
 30947  01A120  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30948  01A126  0EFB               	movlw	-5
 30949  01A128  0060  F033  FFE3   	movff	btemp+11,plusw1
 30950  01A12E                     l9513:
 30951                           
 30952                           ;stkvar	_ff1 @ sp[(0)+-4]
 30953  01A12E  0EFF               	movlw	-1
 30954  01A130  7EE3               	btg	plusw1,7,c
 30955                           
 30956                           ;stkvar	_ff2 @ sp[(0)+-8]
 30957  01A132  0EFB               	movlw	-5
 30958  01A134  7EE3               	btg	plusw1,7,c
 30959                           
 30960                           ;stkvar	_ff2 @ sp[(0)+-8]
 30961                           ;stkvar	_ff1 @ sp[(0)+-4]
 30962  01A136  50E1               	movf	fsr1l,w,c
 30963  01A138  0FFC               	addlw	-4
 30964  01A13A  6ED9               	movwf	fsr2l,c
 30965  01A13C  50E2               	movf	fsr1h,w,c
 30966  01A13E  6EDA               	movwf	fsr2h,c
 30967  01A140  0EFF               	movlw	255
 30968  01A142  22DA               	addwfc	fsr2h,f,c
 30969  01A144  0EF8               	movlw	-8
 30970  01A146  50E3               	movf	plusw1,w,c
 30971  01A148  5CDE               	subwf	postinc2,w,c
 30972  01A14A  0EF9               	movlw	-7
 30973  01A14C  50E3               	movf	plusw1,w,c
 30974  01A14E  58DE               	subwfb	postinc2,w,c
 30975  01A150  0EFA               	movlw	-6
 30976  01A152  50E3               	movf	plusw1,w,c
 30977  01A154  58DE               	subwfb	postinc2,w,c
 30978  01A156  0EFB               	movlw	-5
 30979  01A158  50E3               	movf	plusw1,w,c
 30980  01A15A  58DE               	subwfb	postinc2,w,c
 30981  01A15C  B0D8               	btfsc	status,0,c
 30982  01A15E  D002               	goto	l9521
 30983  01A160  9001               	bcf	btemp& (0+255),0,c
 30984  01A162  D001               	goto	l2952
 30985  01A164                     l9521:
 30986  01A164  8001               	bsf	btemp& (0+255),0,c
 30987  01A166                     l2952:
 30988                           
 30989                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 30990  01A166  0EF8               	movlw	248
 30991  01A168  26E1               	addwf	fsr1l,f,c
 30992  01A16A  0EFF               	movlw	255
 30993  01A16C  22E2               	addwfc	fsr1h,f,c
 30994  01A16E  0012               	return		;funcret
 30995  01A170                     __end_of___flge:
 30996                           	opt callstack 0
 30997                           
 30998 ;; *************** function _calc_model_data *****************
 30999 ;; Defined at:
 31000 ;;		line 67 in file "mbmc.c"
 31001 ;; Parameters:    Size  Location     Type
 31002 ;;		None
 31003 ;; Auto vars:     Size  Location     Type
 31004 ;;		None
 31005 ;; Return value:  Size  Location     Type
 31006 ;;                  1  [STACK] void 
 31007 ;; Registers used:
 31008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31009 ;; Tracked objects:
 31010 ;;		On entry : 0/2
 31011 ;;		On exit  : 3F/39
 31012 ;;		Unchanged: 0/0
 31013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31018 ;;Total ram usage:        0 bytes
 31019 ;; Hardware stack levels used:    1
 31020 ;; Hardware stack levels required when called:   18
 31021 ;; This function calls:
 31022 ;;		___fladd
 31023 ;;		___flmul
 31024 ;;		___flsub
 31025 ;;		_lp_filter
 31026 ;;		_start_bsoc
 31027 ;;		_stop_bsoc
 31028 ;; This function is called by:
 31029 ;;		_main
 31030 ;; This function uses a reentrant model
 31031 ;;
 31032                           
 31033                           	psect	text123
 31034  016940                     __ptext123:
 31035                           	opt callstack 0
 31036  016940                     _calc_model_data:
 31037                           	opt callstack 12
 31038                           
 31039                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 31040                           
 31041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31042                           ;incstack = 0
 31043  016940  ECE2  F0ED         	call	_stop_bsoc	;wreg free
 31044                           
 31045                           ; BSR set to: 57
 31046                           ;mbmc.c: 72:  if (!V.calib) {
 31047  016944  0102               	movlb	2	; () banked
 31048  016946  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 31049  016948  A4D8               	btfss	status,2,c
 31050  01694A  D219               	goto	l12485
 31051                           
 31052                           ; BSR set to: 2
 31053                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 31054  01694C  EE21  F3FF         	lfsr	2,_C
 31055  016950  006F FF78  F843    	movff	postinc2,_C+68	;volatile
 31056  016956  006F FF78  F844    	movff	postinc2,_C+69	;volatile
 31057  01695C  006F FF78  F845    	movff	postinc2,_C+70	;volatile
 31058  016962  006F FF74  F846    	movff	postdec2,_C+71	;volatile
 31059                           
 31060                           ; BSR set to: 2
 31061                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 31062  016968  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 31063  01696E  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 31064  016974  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 31065  01697A  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 31066  016980  EE22  F043         	lfsr	2,_C+68	;volatile
 31067  016984  006F FF7B FFE6     	movff	postinc2,postinc1
 31068  01698A  006F FF7B FFE6     	movff	postinc2,postinc1
 31069  016990  006F FF7B FFE6     	movff	postinc2,postinc1
 31070  016996  006F FF7B FFE6     	movff	postinc2,postinc1
 31071  01699C  EC8D  F0E7         	call	___flsub	;wreg free
 31072  0169A0  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 31073  0169A6  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 31074  0169AC  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 31075  0169B2  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 31076                           
 31077                           ;mbmc.c: 75:   bcror = C.c_bat;
 31078  0169B8  C843  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 31079  0169BC  C844  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 31080  0169C0  C845  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 31081  0169C4  C846  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 31082                           
 31083                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 31084  0169C8  EE22  F003         	lfsr	2,_C+4	;volatile
 31085  0169CC  006F FF78  F847    	movff	postinc2,_C+72	;volatile
 31086  0169D2  006F FF78  F848    	movff	postinc2,_C+73	;volatile
 31087  0169D8  006F FF78  F849    	movff	postinc2,_C+74	;volatile
 31088  0169DE  006F FF74  F84A    	movff	postdec2,_C+75	;volatile
 31089                           
 31090                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 31091  0169E4  EE22  F00F         	lfsr	2,_C+16	;volatile
 31092  0169E8  006F FF78  F853    	movff	postinc2,_C+84	;volatile
 31093  0169EE  006F FF78  F854    	movff	postinc2,_C+85	;volatile
 31094  0169F4  006F FF78  F855    	movff	postinc2,_C+86	;volatile
 31095  0169FA  006F FF74  F856    	movff	postdec2,_C+87	;volatile
 31096                           
 31097                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 31098  016A00  EE22  F033         	lfsr	2,_C+52	;volatile
 31099  016A04  006F FF78  F867    	movff	postinc2,_C+104	;volatile
 31100  016A0A  006F FF78  F868    	movff	postinc2,_C+105	;volatile
 31101  016A10  006F FF78  F869    	movff	postinc2,_C+106	;volatile
 31102  016A16  006F FF74  F86A    	movff	postdec2,_C+107	;volatile
 31103                           
 31104                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 31105  016A1C  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 31106  016A22  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 31107  016A28  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 31108  016A2E  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 31109  016A34  EE22  F053         	lfsr	2,_C+84	;volatile
 31110  016A38  006F FF7B FFE6     	movff	postinc2,postinc1
 31111  016A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 31112  016A44  006F FF7B FFE6     	movff	postinc2,postinc1
 31113  016A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 31114  016A50  EC8D  F0E7         	call	___flsub	;wreg free
 31115  016A54  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 31116  016A5A  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 31117  016A60  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 31118  016A66  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 31119                           
 31120                           ;mbmc.c: 80:   bvror = C.v_bat;
 31121  016A6C  C853  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 31122  016A70  C854  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 31123  016A74  C855  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 31124  016A78  C856  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 31125                           
 31126                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 31127  016A7C  EE22  F013         	lfsr	2,_C+20	;volatile
 31128  016A80  006F FF78  F84F    	movff	postinc2,_C+80	;volatile
 31129  016A86  006F FF78  F850    	movff	postinc2,_C+81	;volatile
 31130  016A8C  006F FF78  F851    	movff	postinc2,_C+82	;volatile
 31131  016A92  006F FF74  F852    	movff	postdec2,_C+83	;volatile
 31132                           
 31133                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 31134  016A98  EE22  F007         	lfsr	2,_C+8	;volatile
 31135  016A9C  006F FF78  F84B    	movff	postinc2,_C+76	;volatile
 31136  016AA2  006F FF78  F84C    	movff	postinc2,_C+77	;volatile
 31137  016AA8  006F FF78  F84D    	movff	postinc2,_C+78	;volatile
 31138  016AAE  006F FF74  F84E    	movff	postdec2,_C+79	;volatile
 31139                           
 31140                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 31141  016AB4  EE22  F02F         	lfsr	2,_C+48	;volatile
 31142  016AB8  006F FF78  F863    	movff	postinc2,_C+100	;volatile
 31143  016ABE  006F FF78  F864    	movff	postinc2,_C+101	;volatile
 31144  016AC4  006F FF78  F865    	movff	postinc2,_C+102	;volatile
 31145  016ACA  006F FF74  F866    	movff	postdec2,_C+103	;volatile
 31146                           
 31147                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 31148  016AD0  0E01               	movlw	1
 31149  016AD2  6EE6               	movwf	postinc1,c
 31150  016AD4  0E10               	movlw	16
 31151  016AD6  6EE6               	movwf	postinc1,c
 31152  016AD8  EE21  F3FF         	lfsr	2,_C
 31153  016ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 31154  016AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 31155  016AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 31156  016AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 31157  016AF4  EE22  F003         	lfsr	2,_C+4	;volatile
 31158  016AF8  006F FF7B FFE6     	movff	postinc2,postinc1
 31159  016AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 31160  016B04  006F FF7B FFE6     	movff	postinc2,postinc1
 31161  016B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 31162  016B10  EC8D  F0E7         	call	___flsub	;wreg free
 31163  016B14  0060  F007  FFE6   	movff	btemp,postinc1
 31164  016B1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31165  016B20  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31166  016B26  0060  F013  FFE6   	movff	btemp+3,postinc1
 31167  016B2C  EC99  F0CA         	call	_lp_filter	;wreg free
 31168  016B30  0060  F004  F83F   	movff	btemp,_C+64	;volatile
 31169  016B36  0060  F008  F840   	movff	btemp+1,_C+65	;volatile
 31170  016B3C  0060  F00C  F841   	movff	btemp+2,_C+66	;volatile
 31171  016B42  0060  F010  F842   	movff	btemp+3,_C+67	;volatile
 31172                           
 31173                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 31174  016B48  0E01               	movlw	1
 31175  016B4A  6EE6               	movwf	postinc1,c
 31176  016B4C  0E11               	movlw	17
 31177  016B4E  6EE6               	movwf	postinc1,c
 31178  016B50  EE22  F053         	lfsr	2,_C+84	;volatile
 31179  016B54  006F FF7B FFE6     	movff	postinc2,postinc1
 31180  016B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 31181  016B60  006F FF7B FFE6     	movff	postinc2,postinc1
 31182  016B66  006F FF7B FFE6     	movff	postinc2,postinc1
 31183  016B6C  EE22  F03F         	lfsr	2,_C+64	;volatile
 31184  016B70  006F FF7B FFE6     	movff	postinc2,postinc1
 31185  016B76  006F FF7B FFE6     	movff	postinc2,postinc1
 31186  016B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 31187  016B82  006F FF7B FFE6     	movff	postinc2,postinc1
 31188  016B88  EC52  F0A5         	call	___flmul	;wreg free
 31189  016B8C  0060  F007  FFE6   	movff	btemp,postinc1
 31190  016B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31191  016B98  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31192  016B9E  0060  F013  FFE6   	movff	btemp+3,postinc1
 31193  016BA4  EC99  F0CA         	call	_lp_filter	;wreg free
 31194  016BA8  0060  F004  F873   	movff	btemp,_C+116	;volatile
 31195  016BAE  0060  F008  F874   	movff	btemp+1,_C+117	;volatile
 31196  016BB4  0060  F00C  F875   	movff	btemp+2,_C+118	;volatile
 31197  016BBA  0060  F010  F876   	movff	btemp+3,_C+119	;volatile
 31198                           
 31199                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 31200  016BC0  0E01               	movlw	1
 31201  016BC2  6EE6               	movwf	postinc1,c
 31202  016BC4  0E12               	movlw	18
 31203  016BC6  6EE6               	movwf	postinc1,c
 31204  016BC8  EE22  F04F         	lfsr	2,_C+80	;volatile
 31205  016BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 31206  016BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 31207  016BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 31208  016BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 31209  016BE4  EE22  F047         	lfsr	2,_C+72	;volatile
 31210  016BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 31211  016BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 31212  016BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 31213  016BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 31214  016C00  EC52  F0A5         	call	___flmul	;wreg free
 31215  016C04  0060  F007  FFE6   	movff	btemp,postinc1
 31216  016C0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31217  016C10  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31218  016C16  0060  F013  FFE6   	movff	btemp+3,postinc1
 31219  016C1C  EC99  F0CA         	call	_lp_filter	;wreg free
 31220  016C20  0060  F004  F87B   	movff	btemp,_C+124	;volatile
 31221  016C26  0060  F008  F87C   	movff	btemp+1,_C+125	;volatile
 31222  016C2C  0060  F00C  F87D   	movff	btemp+2,_C+126	;volatile
 31223  016C32  0060  F010  F87E   	movff	btemp+3,_C+127	;volatile
 31224                           
 31225                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 31226  016C38  0E01               	movlw	1
 31227  016C3A  6EE6               	movwf	postinc1,c
 31228  016C3C  0E13               	movlw	19
 31229  016C3E  6EE6               	movwf	postinc1,c
 31230  016C40  0E00               	movlw	0
 31231  016C42  6EE6               	movwf	postinc1,c
 31232  016C44  0E00               	movlw	0
 31233  016C46  6EE6               	movwf	postinc1,c
 31234  016C48  0E60               	movlw	96
 31235  016C4A  6EE6               	movwf	postinc1,c
 31236  016C4C  0EC1               	movlw	193
 31237  016C4E  6EE6               	movwf	postinc1,c
 31238  016C50  EE22  F063         	lfsr	2,_C+100	;volatile
 31239  016C54  006F FF7B FFE6     	movff	postinc2,postinc1
 31240  016C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 31241  016C60  006F FF7B FFE6     	movff	postinc2,postinc1
 31242  016C66  006F FF7B FFE6     	movff	postinc2,postinc1
 31243  016C6C  EE22  F03F         	lfsr	2,_C+64	;volatile
 31244  016C70  006F FF7B FFE6     	movff	postinc2,postinc1
 31245  016C76  006F FF7B FFE6     	movff	postinc2,postinc1
 31246  016C7C  006F FF7B FFE6     	movff	postinc2,postinc1
 31247  016C82  006F FF7B FFE6     	movff	postinc2,postinc1
 31248  016C88  EC52  F0A5         	call	___flmul	;wreg free
 31249  016C8C  0060  F007  FFE6   	movff	btemp,postinc1
 31250  016C92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31251  016C98  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31252  016C9E  0060  F013  FFE6   	movff	btemp+3,postinc1
 31253  016CA4  EC67  F0A9         	call	___fladd	;wreg free
 31254  016CA8  0060  F007  FFE6   	movff	btemp,postinc1
 31255  016CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31256  016CB4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31257  016CBA  0060  F013  FFE6   	movff	btemp+3,postinc1
 31258  016CC0  EC99  F0CA         	call	_lp_filter	;wreg free
 31259  016CC4  0060  F004  F877   	movff	btemp,_C+120	;volatile
 31260  016CCA  0060  F008  F878   	movff	btemp+1,_C+121	;volatile
 31261  016CD0  0060  F00C  F879   	movff	btemp+2,_C+122	;volatile
 31262  016CD6  0060  F010  F87A   	movff	btemp+3,_C+123	;volatile
 31263                           
 31264                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 31265  016CDC  0E01               	movlw	1
 31266  016CDE  6EE6               	movwf	postinc1,c
 31267  016CE0  0E14               	movlw	20
 31268  016CE2  6EE6               	movwf	postinc1,c
 31269  016CE4  EE22  F053         	lfsr	2,_C+84	;volatile
 31270  016CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 31271  016CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 31272  016CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 31273  016CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 31274  016D00  EE22  F043         	lfsr	2,_C+68	;volatile
 31275  016D04  006F FF7B FFE6     	movff	postinc2,postinc1
 31276  016D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 31277  016D10  006F FF7B FFE6     	movff	postinc2,postinc1
 31278  016D16  006F FF7B FFE6     	movff	postinc2,postinc1
 31279  016D1C  EC52  F0A5         	call	___flmul	;wreg free
 31280  016D20  0060  F007  FFE6   	movff	btemp,postinc1
 31281  016D26  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31282  016D2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31283  016D32  0060  F013  FFE6   	movff	btemp+3,postinc1
 31284  016D38  EC99  F0CA         	call	_lp_filter	;wreg free
 31285  016D3C  0060  F004  F87F   	movff	btemp,_C+128	;volatile
 31286  016D42  0060  F008  F880   	movff	btemp+1,_C+129	;volatile
 31287  016D48  0060  F00C  F881   	movff	btemp+2,_C+130	;volatile
 31288  016D4E  0060  F010  F882   	movff	btemp+3,_C+131	;volatile
 31289                           
 31290                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 31291  016D54  EE22  F077         	lfsr	2,_C+120	;volatile
 31292  016D58  0E03               	movlw	3
 31293  016D5A  AEDB               	btfss	plusw2,7,c
 31294  016D5C  D010               	goto	l12485
 31295                           
 31296                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 31297  016D5E  0E17               	movlw	23
 31298  016D60  006F FFA0  F877    	movff	wreg,_C+120	;volatile
 31299  016D66  0EB7               	movlw	183
 31300  016D68  006F FFA0  F878    	movff	wreg,_C+121	;volatile
 31301  016D6E  0ED1               	movlw	209
 31302  016D70  006F FFA0  F879    	movff	wreg,_C+122	;volatile
 31303  016D76  0E38               	movlw	56
 31304  016D78  006F FFA0  F87A    	movff	wreg,_C+123	;volatile
 31305  016D7E                     l12485:
 31306                           
 31307                           ;mbmc.c: 95:  start_bsoc();
 31308  016D7E  EC68  F0EC         	call	_start_bsoc	;wreg free
 31309                           
 31310                           ; BSR set to: 57
 31311                           ;mbmc.c: 96:  C.update = 1;
 31312  016D82  0E01               	movlw	1
 31313  016D84  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 31314                           
 31315                           ; BSR set to: 57
 31316                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31317  016D8A  0012               	return		;funcret
 31318  016D8C                     __end_of_calc_model_data:
 31319                           	opt callstack 0
 31320                           
 31321 ;; *************** function _stop_bsoc *****************
 31322 ;; Defined at:
 31323 ;;		line 130 in file "bsoc.c"
 31324 ;; Parameters:    Size  Location     Type
 31325 ;;		None
 31326 ;; Auto vars:     Size  Location     Type
 31327 ;;		None
 31328 ;; Return value:  Size  Location     Type
 31329 ;;                  1  [STACK] void 
 31330 ;; Registers used:
 31331 ;;		None
 31332 ;; Tracked objects:
 31333 ;;		On entry : 0/2
 31334 ;;		On exit  : 3F/39
 31335 ;;		Unchanged: 0/0
 31336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31341 ;;Total ram usage:        0 bytes
 31342 ;; Hardware stack levels used:    1
 31343 ;; Hardware stack levels required when called:   15
 31344 ;; This function calls:
 31345 ;;		Nothing
 31346 ;; This function is called by:
 31347 ;;		_calc_model_data
 31348 ;; This function uses a reentrant model
 31349 ;;
 31350                           
 31351                           	psect	text124
 31352  01DBC4                     __ptext124:
 31353                           	opt callstack 0
 31354  01DBC4                     _stop_bsoc:
 31355                           	opt callstack 14
 31356                           
 31357                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 31358                           
 31359                           ; BSR set to: 57
 31360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31361                           ;incstack = 0
 31362  01DBC4  0139               	movlb	57	; () banked
 31363  01DBC6  9D96               	bcf	150,6,b	;volatile
 31364                           
 31365                           ; BSR set to: 57
 31366                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 31367  01DBC8  0012               	return		;funcret
 31368  01DBCA                     __end_of_stop_bsoc:
 31369                           	opt callstack 0
 31370                           
 31371 ;; *************** function _start_bsoc *****************
 31372 ;; Defined at:
 31373 ;;		line 121 in file "bsoc.c"
 31374 ;; Parameters:    Size  Location     Type
 31375 ;;		None
 31376 ;; Auto vars:     Size  Location     Type
 31377 ;;		None
 31378 ;; Return value:  Size  Location     Type
 31379 ;;                  1  [STACK] void 
 31380 ;; Registers used:
 31381 ;;		wreg, status,2, status,0, btemp+11
 31382 ;; Tracked objects:
 31383 ;;		On entry : 0/2
 31384 ;;		On exit  : 3F/39
 31385 ;;		Unchanged: 0/0
 31386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31391 ;;Total ram usage:        0 bytes
 31392 ;; Hardware stack levels used:    1
 31393 ;; Hardware stack levels required when called:   15
 31394 ;; This function calls:
 31395 ;;		Nothing
 31396 ;; This function is called by:
 31397 ;;		_calc_model_data
 31398 ;; This function uses a reentrant model
 31399 ;;
 31400                           
 31401                           	psect	text125
 31402  01D8D0                     __ptext125:
 31403                           	opt callstack 0
 31404  01D8D0                     _start_bsoc:
 31405                           	opt callstack 14
 31406                           
 31407                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 31408                           
 31409                           ; BSR set to: 57
 31410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31411                           ;incstack = 0
 31412  01D8D0  0139               	movlb	57	; () banked
 31413  01D8D2  8D96               	bsf	150,6,b	;volatile
 31414                           
 31415                           ; BSR set to: 57
 31416  01D8D4  A4BE               	btfss	190,2,c	;volatile
 31417  01D8D6  D002               	goto	u10630
 31418  01D8D8  0E01               	movlw	1
 31419  01D8DA  D001               	goto	u10636
 31420  01D8DC                     u10630:
 31421  01D8DC  0E00               	movlw	0
 31422  01D8DE                     u10636:
 31423  01D8DE  0AFF               	xorlw	255
 31424  01D8E0  6E0C               	movwf	(btemp+11)^0,c
 31425  01D8E2  460C               	rlncf	(btemp+11)^0,f,c
 31426  01D8E4  460C               	rlncf	(btemp+11)^0,f,c
 31427  01D8E6  50BE               	movf	190,w,c	;volatile
 31428  01D8E8  180C               	xorwf	(btemp+11)^0,w,c
 31429  01D8EA  0BFB               	andlw	-5
 31430  01D8EC  180C               	xorwf	(btemp+11)^0,w,c
 31431  01D8EE  6EBE               	movwf	190,c	;volatile
 31432                           
 31433                           ; BSR set to: 57
 31434                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 31435  01D8F0  0012               	return		;funcret
 31436  01D8F2                     __end_of_start_bsoc:
 31437                           	opt callstack 0
 31438                           
 31439 ;; *************** function _lp_filter *****************
 31440 ;; Defined at:
 31441 ;;		line 29 in file "mbmc.c"
 31442 ;; Parameters:    Size  Location     Type
 31443 ;;  new             4  [STACK] const float 
 31444 ;;  bn              1  [STACK] const unsigned char 
 31445 ;;  slow            1  [STACK] const char 
 31446 ;; Auto vars:     Size  Location     Type
 31447 ;;  lp_speed        4  [STACK] float 
 31448 ;; Return value:  Size  Location     Type
 31449 ;;                  4  [STACK] float 
 31450 ;; Registers used:
 31451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31452 ;; Tracked objects:
 31453 ;;		On entry : 0/2
 31454 ;;		On exit  : 0/0
 31455 ;;		Unchanged: 0/0
 31456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31461 ;;Total ram usage:        0 bytes
 31462 ;; Hardware stack levels used:    1
 31463 ;; Hardware stack levels required when called:   17
 31464 ;; This function calls:
 31465 ;;		___fladd
 31466 ;;		___flmul
 31467 ;;		___flsub
 31468 ;; This function is called by:
 31469 ;;		_main
 31470 ;;		_convert_adc_data
 31471 ;;		_calc_model_data
 31472 ;; This function uses a reentrant model
 31473 ;;
 31474                           
 31475                           	psect	text126
 31476  019532                     __ptext126:
 31477                           	opt callstack 0
 31478  019532                     _lp_filter:
 31479                           	opt callstack 0
 31480                           
 31481                           ; BSR set to: 57
 31482                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31483  019532  52E6               	movf	postinc1,f,c
 31484  019534  52E6               	movf	postinc1,f,c
 31485  019536  52E6               	movf	postinc1,f,c
 31486  019538  52E6               	movf	postinc1,f,c
 31487                           
 31488                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 31489                           ;stkvar	_bn @ sp[(-4)+-5]
 31490                           
 31491                           ;incstack = 0
 31492  01953A  0EF7               	movlw	-9
 31493  01953C  006F FF8C  F001    	movff	plusw1,btemp
 31494  019542  0E14               	movlw	20
 31495  019544  6401               	cpfsgt	btemp^0,c
 31496  019546  D011               	goto	l11473
 31497  019548                     u10390:
 31498                           
 31499                           ;mbmc.c: 35:   return new;
 31500                           ;stkvar	_new @ sp[(-4)+-4]
 31501  019548  0EF8               	movlw	-8
 31502  01954A  006F FF8C  F001    	movff	plusw1,btemp
 31503  019550  0EF9               	movlw	-7
 31504  019552  006F FF8C  F002    	movff	plusw1,btemp+1
 31505  019558  0EFA               	movlw	-6
 31506  01955A  006F FF8C  F003    	movff	plusw1,btemp+2
 31507  019560  0EFB               	movlw	-5
 31508  019562  006F FF8C  F004    	movff	plusw1,btemp+3
 31509  019568  D0BD               	goto	l2111
 31510  01956A                     l11473:
 31511                           
 31512                           ;mbmc.c: 37:  if (slow == (-1)) {
 31513                           ;stkvar	_slow @ sp[(-4)+-6]
 31514  01956A  0EF6               	movlw	-10
 31515  01956C  28E3               	incf	plusw1,w,c
 31516  01956E  A4D8               	btfss	status,2,c
 31517  019570  D012               	goto	l11481
 31518                           
 31519                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 31520                           ;stkvar	_bn @ sp[(-4)+-5]
 31521  019572  0EF7               	movlw	-9
 31522  019574  50E3               	movf	plusw1,w,c
 31523  019576  0D04               	mullw	4
 31524  019578  0E00               	movlw	low lp_filter@smooth
 31525  01957A  24F3               	addwf	243,w,c
 31526  01957C  6ED9               	movwf	fsr2l,c
 31527  01957E  0E03               	movlw	high lp_filter@smooth
 31528  019580  20F4               	addwfc	prodh,w,c
 31529  019582  6EDA               	movwf	fsr2h,c
 31530  019584  0E00               	movlw	0
 31531  019586  6EDE               	movwf	postinc2,c
 31532  019588  0E00               	movlw	0
 31533  01958A  6EDE               	movwf	postinc2,c
 31534  01958C  0E00               	movlw	0
 31535  01958E  6EDE               	movwf	postinc2,c
 31536  019590  0E00               	movlw	0
 31537  019592  6EDD               	movwf	postdec2,c
 31538  019594  D7D9               	goto	u10390
 31539  019596                     l11481:
 31540                           
 31541                           ;mbmc.c: 42:  if (slow) {
 31542                           ;stkvar	_slow @ sp[(-4)+-6]
 31543  019596  0EF6               	movlw	-10
 31544  019598  50E3               	movf	plusw1,w,c
 31545  01959A  B4D8               	btfsc	status,2,c
 31546  01959C  D006               	goto	l11485
 31547                           
 31548                           ;mbmc.c: 43:   lp_speed = 0.033;
 31549  01959E  0E02               	movlw	2
 31550  0195A0  6E09               	movwf	(btemp+8)^0,c
 31551  0195A2  0E2B               	movlw	43
 31552  0195A4  6E0A               	movwf	(btemp+9)^0,c
 31553  0195A6  0E07               	movlw	7
 31554  0195A8  D005               	goto	L37
 31555  0195AA                     l11485:
 31556                           
 31557                           ;mbmc.c: 45:   lp_speed = 0.066;
 31558  0195AA  0E02               	movlw	2
 31559  0195AC  6E09               	movwf	(btemp+8)^0,c
 31560  0195AE  0E2B               	movlw	43
 31561  0195B0  6E0A               	movwf	(btemp+9)^0,c
 31562  0195B2  0E87               	movlw	135
 31563  0195B4                     L37:
 31564  0195B4  6E0B               	movwf	(btemp+10)^0,c
 31565  0195B6  0E3D               	movlw	61
 31566  0195B8  6E0C               	movwf	(btemp+11)^0,c
 31567                           
 31568                           ;stkvar	_lp_speed @ sp[(-4)+0]
 31569  0195BA  0EFC               	movlw	-4
 31570  0195BC  0060  F027  FFE3   	movff	btemp+8,plusw1
 31571  0195C2  0EFD               	movlw	-3
 31572  0195C4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31573  0195CA  0EFE               	movlw	-2
 31574  0195CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31575  0195D2  0EFF               	movlw	-1
 31576  0195D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31577                           
 31578                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 31579                           ;stkvar	_bn @ sp[(-4)+-5]
 31580  0195DA  0EF7               	movlw	-9
 31581  0195DC  50E3               	movf	plusw1,w,c
 31582  0195DE  0D04               	mullw	4
 31583  0195E0  0E00               	movlw	low lp_filter@smooth
 31584  0195E2  24F3               	addwf	243,w,c
 31585  0195E4  6ED9               	movwf	fsr2l,c
 31586  0195E6  0E03               	movlw	high lp_filter@smooth
 31587  0195E8  20F4               	addwfc	prodh,w,c
 31588  0195EA  6EDA               	movwf	fsr2h,c
 31589  0195EC  006F FF7B FFE6     	movff	postinc2,postinc1
 31590  0195F2  006F FF7B FFE6     	movff	postinc2,postinc1
 31591  0195F8  006F FF7B FFE6     	movff	postinc2,postinc1
 31592  0195FE  006F FF7B FFE6     	movff	postinc2,postinc1
 31593                           
 31594                           ;stkvar	_lp_speed @ sp[(-8)+0]
 31595  019604  0EF8               	movlw	-8
 31596  019606  006F FF8F FFE6     	movff	plusw1,postinc1
 31597  01960C  006F FF8F FFE6     	movff	plusw1,postinc1
 31598  019612  006F FF8F FFE6     	movff	plusw1,postinc1
 31599  019618  006F FF8F FFE6     	movff	plusw1,postinc1
 31600                           
 31601                           ;stkvar	_bn @ sp[(-12)+-5]
 31602  01961E  0EEF               	movlw	-17
 31603  019620  50E3               	movf	plusw1,w,c
 31604  019622  0D04               	mullw	4
 31605  019624  0E00               	movlw	low lp_filter@smooth
 31606  019626  24F3               	addwf	243,w,c
 31607  019628  6ED9               	movwf	fsr2l,c
 31608  01962A  0E03               	movlw	high lp_filter@smooth
 31609  01962C  20F4               	addwfc	prodh,w,c
 31610  01962E  6EDA               	movwf	fsr2h,c
 31611  019630  006F FF7B FFE6     	movff	postinc2,postinc1
 31612  019636  006F FF7B FFE6     	movff	postinc2,postinc1
 31613  01963C  006F FF7B FFE6     	movff	postinc2,postinc1
 31614  019642  006F FF7B FFE6     	movff	postinc2,postinc1
 31615                           
 31616                           ;stkvar	_new @ sp[(-16)+-4]
 31617  019648  0EEC               	movlw	-20
 31618  01964A  006F FF8F FFE6     	movff	plusw1,postinc1
 31619  019650  006F FF8F FFE6     	movff	plusw1,postinc1
 31620  019656  006F FF8F FFE6     	movff	plusw1,postinc1
 31621  01965C  006F FF8F FFE6     	movff	plusw1,postinc1
 31622  019662  EC8D  F0E7         	call	___flsub	;wreg free
 31623  019666  0060  F007  FFE6   	movff	btemp,postinc1
 31624  01966C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31625  019672  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31626  019678  0060  F013  FFE6   	movff	btemp+3,postinc1
 31627  01967E  EC52  F0A5         	call	___flmul	;wreg free
 31628  019682  0060  F007  FFE6   	movff	btemp,postinc1
 31629  019688  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31630  01968E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31631  019694  0060  F013  FFE6   	movff	btemp+3,postinc1
 31632  01969A  EC67  F0A9         	call	___fladd	;wreg free
 31633                           
 31634                           ;stkvar	_bn @ sp[(-4)+-5]
 31635  01969E  0EF7               	movlw	-9
 31636  0196A0  50E3               	movf	plusw1,w,c
 31637  0196A2  0D04               	mullw	4
 31638  0196A4  0E00               	movlw	low lp_filter@smooth
 31639  0196A6  24F3               	addwf	243,w,c
 31640  0196A8  6ED9               	movwf	fsr2l,c
 31641  0196AA  0E03               	movlw	high lp_filter@smooth
 31642  0196AC  20F4               	addwfc	prodh,w,c
 31643  0196AE  6EDA               	movwf	fsr2h,c
 31644  0196B0  0060  F007  FFDE   	movff	btemp,postinc2
 31645  0196B6  0060  F00B  FFDE   	movff	btemp+1,postinc2
 31646  0196BC  0060  F00F  FFDE   	movff	btemp+2,postinc2
 31647  0196C2  0060  F013  FFDD   	movff	btemp+3,postdec2
 31648  0196C8  52DD               	movf	postdec2,f,c
 31649  0196CA  52DD               	movf	postdec2,f,c
 31650  0196CC  006F FF78  F001    	movff	postinc2,btemp
 31651  0196D2  006F FF78  F002    	movff	postinc2,btemp+1
 31652  0196D8  006F FF78  F003    	movff	postinc2,btemp+2
 31653  0196DE  006F FF78  F004    	movff	postinc2,btemp+3
 31654  0196E4                     l2111:
 31655                           
 31656                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 31657  0196E4  0EF6               	movlw	246
 31658  0196E6  26E1               	addwf	fsr1l,f,c
 31659  0196E8  0EFF               	movlw	255
 31660  0196EA  22E2               	addwfc	fsr1h,f,c
 31661  0196EC  0012               	return		;funcret
 31662  0196EE                     __end_of_lp_filter:
 31663                           	opt callstack 0
 31664                           
 31665 ;; *************** function ___flsub *****************
 31666 ;; Defined at:
 31667 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 31668 ;; Parameters:    Size  Location     Type
 31669 ;;  b               4  [STACK] float 
 31670 ;;  a               4  [STACK] float 
 31671 ;; Auto vars:     Size  Location     Type
 31672 ;;		None
 31673 ;; Return value:  Size  Location     Type
 31674 ;;                  4  [STACK] float 
 31675 ;; Registers used:
 31676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31677 ;; Tracked objects:
 31678 ;;		On entry : 0/0
 31679 ;;		On exit  : 0/0
 31680 ;;		Unchanged: 0/0
 31681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31686 ;;Total ram usage:        0 bytes
 31687 ;; Hardware stack levels used:    1
 31688 ;; Hardware stack levels required when called:   16
 31689 ;; This function calls:
 31690 ;;		___fladd
 31691 ;; This function is called by:
 31692 ;;		_conv_raw_result
 31693 ;;		_lp_filter
 31694 ;;		_calc_model_data
 31695 ;;		_calc_ror_data
 31696 ;;		_esr_check
 31697 ;;		_efgtoa
 31698 ;; This function uses a reentrant model
 31699 ;;
 31700                           
 31701                           	psect	text127
 31702  01CF1A                     __ptext127:
 31703                           	opt callstack 0
 31704  01CF1A                     ___flsub:
 31705                           	opt callstack 0
 31706                           
 31707                           ;stkvar	_a @ sp[(0)+-8]
 31708                           
 31709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31710                           ;incstack = 0
 31711 ;; hardware stack exceeded
 31712  01CF1A  0EFB               	movlw	-5
 31713  01CF1C  7EE3               	btg	plusw1,7,c
 31714                           
 31715                           ;stkvar	_a @ sp[(0)+-8]
 31716  01CF1E  0EF8               	movlw	-8
 31717  01CF20  006F FF8F FFE6     	movff	plusw1,postinc1
 31718  01CF26  006F FF8F FFE6     	movff	plusw1,postinc1
 31719  01CF2C  006F FF8F FFE6     	movff	plusw1,postinc1
 31720  01CF32  006F FF8F FFE6     	movff	plusw1,postinc1
 31721                           
 31722                           ;stkvar	_b @ sp[(-4)+-4]
 31723  01CF38  0EF8               	movlw	-8
 31724  01CF3A  006F FF8F FFE6     	movff	plusw1,postinc1
 31725  01CF40  006F FF8F FFE6     	movff	plusw1,postinc1
 31726  01CF46  006F FF8F FFE6     	movff	plusw1,postinc1
 31727  01CF4C  006F FF8F FFE6     	movff	plusw1,postinc1
 31728  01CF52  EC67  F0A9         	call	___fladd	;wreg free
 31729                           
 31730                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 31731  01CF56  0EF8               	movlw	248
 31732  01CF58  26E1               	addwf	fsr1l,f,c
 31733  01CF5A  0EFF               	movlw	255
 31734  01CF5C  22E2               	addwfc	fsr1h,f,c
 31735  01CF5E  0012               	return		;funcret
 31736  01CF60                     __end_of___flsub:
 31737                           	opt callstack 0
 31738                           
 31739 ;; *************** function ___fladd *****************
 31740 ;; Defined at:
 31741 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 31742 ;; Parameters:    Size  Location     Type
 31743 ;;  b               4  [STACK] float 
 31744 ;;  a               4  [STACK] float 
 31745 ;; Auto vars:     Size  Location     Type
 31746 ;;  grs             1  [STACK] unsigned char 
 31747 ;;  bexp            1  [STACK] unsigned char 
 31748 ;;  aexp            1  [STACK] unsigned char 
 31749 ;;  signs           1  [STACK] unsigned char 
 31750 ;; Return value:  Size  Location     Type
 31751 ;;                  4  [STACK] unsigned char 
 31752 ;; Registers used:
 31753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31754 ;; Tracked objects:
 31755 ;;		On entry : 0/0
 31756 ;;		On exit  : 0/0
 31757 ;;		Unchanged: 0/0
 31758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31763 ;;Total ram usage:        0 bytes
 31764 ;; Hardware stack levels used:    1
 31765 ;; Hardware stack levels required when called:   15
 31766 ;; This function calls:
 31767 ;;		Nothing
 31768 ;; This function is called by:
 31769 ;;		_main
 31770 ;;		_lp_filter
 31771 ;;		_calc_model_data
 31772 ;;		_efgtoa
 31773 ;;		___asfladd
 31774 ;;		___flsub
 31775 ;; This function uses a reentrant model
 31776 ;;
 31777                           
 31778                           	psect	text128
 31779  0152CE                     __ptext128:
 31780                           	opt callstack 0
 31781  0152CE                     ___fladd:
 31782                           	opt callstack 0
 31783                           
 31784                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31785  0152CE  52E6               	movf	postinc1,f,c
 31786  0152D0  52E6               	movf	postinc1,f,c
 31787  0152D2  52E6               	movf	postinc1,f,c
 31788  0152D4  52E6               	movf	postinc1,f,c
 31789                           
 31790                           ;stkvar	_b @ sp[(-4)+-4]
 31791                           
 31792                           ;incstack = 0
 31793 ;; hardware stack exceeded
 31794  0152D6  0EFB               	movlw	251
 31795  0152D8  24E1               	addwf	fsr1l,w,c
 31796  0152DA  6ED9               	movwf	fsr2l,c
 31797  0152DC  0EFF               	movlw	255
 31798  0152DE  20E2               	addwfc	fsr1h,w,c
 31799  0152E0  6EDA               	movwf	fsr2h,c
 31800  0152E2  50DF               	movf	indf2,w,c
 31801  0152E4  6E0C               	movwf	(btemp+11)^0,c
 31802  0152E6  0E80               	movlw	128
 31803  0152E8  160C               	andwf	(btemp+11)^0,f,c
 31804                           
 31805                           ;stkvar	_signs @ sp[(-4)+3]
 31806  0152EA  0EFF               	movlw	-1
 31807  0152EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31808                           
 31809                           ;stkvar	_b @ sp[(-4)+-4]
 31810  0152F2  0EFB               	movlw	251
 31811  0152F4  24E1               	addwf	fsr1l,w,c
 31812  0152F6  6ED9               	movwf	fsr2l,c
 31813  0152F8  0EFF               	movlw	255
 31814  0152FA  20E2               	addwfc	fsr1h,w,c
 31815  0152FC  6EDA               	movwf	fsr2h,c
 31816  0152FE  50DF               	movf	indf2,w,c
 31817  015300  6E0C               	movwf	(btemp+11)^0,c
 31818  015302  90D8               	bcf	status,0,c
 31819  015304  340C               	rlcf	(btemp+11)^0,w,c
 31820  015306  6E0B               	movwf	(btemp+10)^0,c
 31821                           
 31822                           ;stkvar	_bexp @ sp[(-4)+1]
 31823  015308  0EFD               	movlw	-3
 31824  01530A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31825                           
 31826                           ;stkvar	_b @ sp[(-4)+-4]
 31827  015310  0EFA               	movlw	250
 31828  015312  24E1               	addwf	fsr1l,w,c
 31829  015314  6ED9               	movwf	fsr2l,c
 31830  015316  0EFF               	movlw	255
 31831  015318  20E2               	addwfc	fsr1h,w,c
 31832  01531A  6EDA               	movwf	fsr2h,c
 31833  01531C  AEDF               	btfss	indf2,7,c
 31834  01531E  D002               	goto	l8611
 31835                           
 31836                           ;stkvar	_bexp @ sp[(-4)+1]
 31837  015320  0EFD               	movlw	-3
 31838  015322  80E3               	bsf	plusw1,0,c
 31839  015324                     l8611:
 31840                           
 31841                           ;stkvar	_bexp @ sp[(-4)+1]
 31842  015324  0EFD               	movlw	-3
 31843  015326  50E3               	movf	plusw1,w,c
 31844  015328  B4D8               	btfsc	status,2,c
 31845  01532A  D027               	goto	l8621
 31846                           
 31847                           ;stkvar	_bexp @ sp[(-4)+1]
 31848  01532C  0EFD               	movlw	-3
 31849  01532E  28E3               	incf	plusw1,w,c
 31850  015330  A4D8               	btfss	status,2,c
 31851  015332  D018               	goto	l8617
 31852  015334  0E00               	movlw	0
 31853  015336  6E09               	movwf	(btemp+8)^0,c
 31854  015338  0E00               	movlw	0
 31855  01533A  6E0A               	movwf	(btemp+9)^0,c
 31856  01533C  0E00               	movlw	0
 31857  01533E  6E0B               	movwf	(btemp+10)^0,c
 31858  015340  0E00               	movlw	0
 31859  015342  6E0C               	movwf	(btemp+11)^0,c
 31860                           
 31861                           ;stkvar	_b @ sp[(-4)+-4]
 31862  015344  0EF8               	movlw	-8
 31863  015346  0060  F027  FFE3   	movff	btemp+8,plusw1
 31864  01534C  0EF9               	movlw	-7
 31865  01534E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31866  015354  0EFA               	movlw	-6
 31867  015356  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31868  01535C  0EFB               	movlw	-5
 31869  01535E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31870  015364                     l8617:
 31871                           
 31872                           ;stkvar	_b @ sp[(-4)+-4]
 31873  015364  0EFA               	movlw	-6
 31874  015366  8EE3               	bsf	plusw1,7,c
 31875                           
 31876                           ;stkvar	_b @ sp[(-4)+-4]
 31877  015368  0EFB               	movlw	251
 31878  01536A  24E1               	addwf	fsr1l,w,c
 31879  01536C  6ED9               	movwf	fsr2l,c
 31880  01536E  0EFF               	movlw	255
 31881  015370  20E2               	addwfc	fsr1h,w,c
 31882  015372  6EDA               	movwf	fsr2h,c
 31883  015374  0E00               	movlw	0
 31884  015376  6EDF               	movwf	indf2,c
 31885  015378  D018               	goto	l8623
 31886  01537A                     l8621:
 31887  01537A  0E00               	movlw	0
 31888  01537C  6E09               	movwf	(btemp+8)^0,c
 31889  01537E  0E00               	movlw	0
 31890  015380  6E0A               	movwf	(btemp+9)^0,c
 31891  015382  0E00               	movlw	0
 31892  015384  6E0B               	movwf	(btemp+10)^0,c
 31893  015386  0E00               	movlw	0
 31894  015388  6E0C               	movwf	(btemp+11)^0,c
 31895                           
 31896                           ;stkvar	_b @ sp[(-4)+-4]
 31897  01538A  0EF8               	movlw	-8
 31898  01538C  0060  F027  FFE3   	movff	btemp+8,plusw1
 31899  015392  0EF9               	movlw	-7
 31900  015394  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31901  01539A  0EFA               	movlw	-6
 31902  01539C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31903  0153A2  0EFB               	movlw	-5
 31904  0153A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31905  0153AA                     l8623:
 31906                           
 31907                           ;stkvar	_a @ sp[(-4)+-8]
 31908  0153AA  0EF7               	movlw	247
 31909  0153AC  24E1               	addwf	fsr1l,w,c
 31910  0153AE  6ED9               	movwf	fsr2l,c
 31911  0153B0  0EFF               	movlw	255
 31912  0153B2  20E2               	addwfc	fsr1h,w,c
 31913  0153B4  6EDA               	movwf	fsr2h,c
 31914  0153B6  50DF               	movf	indf2,w,c
 31915  0153B8  6E0C               	movwf	(btemp+11)^0,c
 31916  0153BA  0E80               	movlw	128
 31917  0153BC  160C               	andwf	(btemp+11)^0,f,c
 31918                           
 31919                           ;stkvar	_aexp @ sp[(-4)+2]
 31920  0153BE  0EFE               	movlw	-2
 31921  0153C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 31922                           
 31923                           ;stkvar	_signs @ sp[(-4)+3]
 31924                           ;stkvar	_aexp @ sp[(-4)+2]
 31925  0153C6  50E1               	movf	fsr1l,w,c
 31926  0153C8  0FFE               	addlw	-2
 31927  0153CA  6ED9               	movwf	fsr2l,c
 31928  0153CC  50E2               	movf	fsr1h,w,c
 31929  0153CE  6EDA               	movwf	fsr2h,c
 31930  0153D0  0EFF               	movlw	255
 31931  0153D2  22DA               	addwfc	fsr2h,f,c
 31932  0153D4  0EFF               	movlw	-1
 31933  0153D6  50E3               	movf	plusw1,w,c
 31934  0153D8  18DE               	xorwf	postinc2,w,c
 31935  0153DA  B4D8               	btfsc	status,2,c
 31936  0153DC  D002               	goto	l8629
 31937                           
 31938                           ;stkvar	_signs @ sp[(-4)+3]
 31939  0153DE  0EFF               	movlw	-1
 31940  0153E0  8CE3               	bsf	plusw1,6,c
 31941  0153E2                     l8629:
 31942                           
 31943                           ;stkvar	_a @ sp[(-4)+-8]
 31944  0153E2  0EF7               	movlw	247
 31945  0153E4  24E1               	addwf	fsr1l,w,c
 31946  0153E6  6ED9               	movwf	fsr2l,c
 31947  0153E8  0EFF               	movlw	255
 31948  0153EA  20E2               	addwfc	fsr1h,w,c
 31949  0153EC  6EDA               	movwf	fsr2h,c
 31950  0153EE  50DF               	movf	indf2,w,c
 31951  0153F0  6E0C               	movwf	(btemp+11)^0,c
 31952  0153F2  90D8               	bcf	status,0,c
 31953  0153F4  340C               	rlcf	(btemp+11)^0,w,c
 31954  0153F6  6E0B               	movwf	(btemp+10)^0,c
 31955                           
 31956                           ;stkvar	_aexp @ sp[(-4)+2]
 31957  0153F8  0EFE               	movlw	-2
 31958  0153FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31959                           
 31960                           ;stkvar	_a @ sp[(-4)+-8]
 31961  015400  0EF6               	movlw	246
 31962  015402  24E1               	addwf	fsr1l,w,c
 31963  015404  6ED9               	movwf	fsr2l,c
 31964  015406  0EFF               	movlw	255
 31965  015408  20E2               	addwfc	fsr1h,w,c
 31966  01540A  6EDA               	movwf	fsr2h,c
 31967  01540C  AEDF               	btfss	indf2,7,c
 31968  01540E  D002               	goto	l8635
 31969                           
 31970                           ;stkvar	_aexp @ sp[(-4)+2]
 31971  015410  0EFE               	movlw	-2
 31972  015412  80E3               	bsf	plusw1,0,c
 31973  015414                     l8635:
 31974                           
 31975                           ;stkvar	_aexp @ sp[(-4)+2]
 31976  015414  0EFE               	movlw	-2
 31977  015416  50E3               	movf	plusw1,w,c
 31978  015418  B4D8               	btfsc	status,2,c
 31979  01541A  D027               	goto	l8645
 31980                           
 31981                           ;stkvar	_aexp @ sp[(-4)+2]
 31982  01541C  0EFE               	movlw	-2
 31983  01541E  28E3               	incf	plusw1,w,c
 31984  015420  A4D8               	btfss	status,2,c
 31985  015422  D018               	goto	l8641
 31986  015424  0E00               	movlw	0
 31987  015426  6E09               	movwf	(btemp+8)^0,c
 31988  015428  0E00               	movlw	0
 31989  01542A  6E0A               	movwf	(btemp+9)^0,c
 31990  01542C  0E00               	movlw	0
 31991  01542E  6E0B               	movwf	(btemp+10)^0,c
 31992  015430  0E00               	movlw	0
 31993  015432  6E0C               	movwf	(btemp+11)^0,c
 31994                           
 31995                           ;stkvar	_a @ sp[(-4)+-8]
 31996  015434  0EF4               	movlw	-12
 31997  015436  0060  F027  FFE3   	movff	btemp+8,plusw1
 31998  01543C  0EF5               	movlw	-11
 31999  01543E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32000  015444  0EF6               	movlw	-10
 32001  015446  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32002  01544C  0EF7               	movlw	-9
 32003  01544E  0060  F033  FFE3   	movff	btemp+11,plusw1
 32004  015454                     l8641:
 32005                           
 32006                           ;stkvar	_a @ sp[(-4)+-8]
 32007  015454  0EF6               	movlw	-10
 32008  015456  8EE3               	bsf	plusw1,7,c
 32009                           
 32010                           ;stkvar	_a @ sp[(-4)+-8]
 32011  015458  0EF7               	movlw	247
 32012  01545A  24E1               	addwf	fsr1l,w,c
 32013  01545C  6ED9               	movwf	fsr2l,c
 32014  01545E  0EFF               	movlw	255
 32015  015460  20E2               	addwfc	fsr1h,w,c
 32016  015462  6EDA               	movwf	fsr2h,c
 32017  015464  0E00               	movlw	0
 32018  015466  6EDF               	movwf	indf2,c
 32019  015468  D018               	goto	l8647
 32020  01546A                     l8645:
 32021  01546A  0E00               	movlw	0
 32022  01546C  6E09               	movwf	(btemp+8)^0,c
 32023  01546E  0E00               	movlw	0
 32024  015470  6E0A               	movwf	(btemp+9)^0,c
 32025  015472  0E00               	movlw	0
 32026  015474  6E0B               	movwf	(btemp+10)^0,c
 32027  015476  0E00               	movlw	0
 32028  015478  6E0C               	movwf	(btemp+11)^0,c
 32029                           
 32030                           ;stkvar	_a @ sp[(-4)+-8]
 32031  01547A  0EF4               	movlw	-12
 32032  01547C  0060  F027  FFE3   	movff	btemp+8,plusw1
 32033  015482  0EF5               	movlw	-11
 32034  015484  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32035  01548A  0EF6               	movlw	-10
 32036  01548C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32037  015492  0EF7               	movlw	-9
 32038  015494  0060  F033  FFE3   	movff	btemp+11,plusw1
 32039  01549A                     l8647:
 32040                           
 32041                           ;stkvar	_bexp @ sp[(-4)+1]
 32042                           ;stkvar	_aexp @ sp[(-4)+2]
 32043  01549A  50E1               	movf	fsr1l,w,c
 32044  01549C  0FFE               	addlw	-2
 32045  01549E  6ED9               	movwf	fsr2l,c
 32046  0154A0  50E2               	movf	fsr1h,w,c
 32047  0154A2  6EDA               	movwf	fsr2h,c
 32048  0154A4  0EFF               	movlw	255
 32049  0154A6  22DA               	addwfc	fsr2h,f,c
 32050  0154A8  0EFD               	movlw	-3
 32051  0154AA  50E3               	movf	plusw1,w,c
 32052  0154AC  5CDE               	subwf	postinc2,w,c
 32053  0154AE  B0D8               	btfsc	status,0,c
 32054  0154B0  D0A4               	goto	l8683
 32055                           
 32056                           ;stkvar	_signs @ sp[(-4)+3]
 32057  0154B2  0EFF               	movlw	-1
 32058  0154B4  ACE3               	btfss	plusw1,6,c
 32059  0154B6  D002               	goto	l8653
 32060                           
 32061                           ;stkvar	_signs @ sp[(-4)+3]
 32062  0154B8  0EFF               	movlw	-1
 32063  0154BA  7EE3               	btg	plusw1,7,c
 32064  0154BC                     l8653:
 32065                           
 32066                           ;stkvar	_bexp @ sp[(-4)+1]
 32067                           ;stkvar	_grs @ sp[(-4)+0]
 32068  0154BC  0EFD               	movlw	-3
 32069  0154BE  006F FF8C  F001    	movff	plusw1,btemp
 32070  0154C4  0EFC               	movlw	-4
 32071  0154C6  0060  F007  FFE3   	movff	btemp,plusw1
 32072                           
 32073                           ;stkvar	_aexp @ sp[(-4)+2]
 32074                           ;stkvar	_bexp @ sp[(-4)+1]
 32075  0154CC  0EFE               	movlw	-2
 32076  0154CE  006F FF8C  F001    	movff	plusw1,btemp
 32077  0154D4  0EFD               	movlw	-3
 32078  0154D6  0060  F007  FFE3   	movff	btemp,plusw1
 32079                           
 32080                           ;stkvar	_grs @ sp[(-4)+0]
 32081                           ;stkvar	_aexp @ sp[(-4)+2]
 32082  0154DC  0EFC               	movlw	-4
 32083  0154DE  006F FF8C  F001    	movff	plusw1,btemp
 32084  0154E4  0EFE               	movlw	-2
 32085  0154E6  0060  F007  FFE3   	movff	btemp,plusw1
 32086                           
 32087                           ;stkvar	_b @ sp[(-4)+-4]
 32088                           ;stkvar	_grs @ sp[(-4)+0]
 32089  0154EC  0EF8               	movlw	-8
 32090  0154EE  006F FF8C  F001    	movff	plusw1,btemp
 32091  0154F4  0EFC               	movlw	-4
 32092  0154F6  0060  F007  FFE3   	movff	btemp,plusw1
 32093                           
 32094                           ;stkvar	_a @ sp[(-4)+-8]
 32095                           ;stkvar	_b @ sp[(-4)+-4]
 32096  0154FC  0EF4               	movlw	-12
 32097  0154FE  006F FF8C  F001    	movff	plusw1,btemp
 32098  015504  0EF8               	movlw	-8
 32099  015506  0060  F007  FFE3   	movff	btemp,plusw1
 32100                           
 32101                           ;stkvar	_grs @ sp[(-4)+0]
 32102                           ;stkvar	_a @ sp[(-4)+-8]
 32103  01550C  0EFC               	movlw	-4
 32104  01550E  006F FF8C  F001    	movff	plusw1,btemp
 32105  015514  0EF4               	movlw	-12
 32106  015516  0060  F007  FFE3   	movff	btemp,plusw1
 32107                           
 32108                           ;stkvar	_b @ sp[(-4)+-4]
 32109  01551C  0EF9               	movlw	249
 32110  01551E  24E1               	addwf	fsr1l,w,c
 32111  015520  6ED9               	movwf	fsr2l,c
 32112  015522  0EFF               	movlw	255
 32113  015524  20E2               	addwfc	fsr1h,w,c
 32114  015526  6EDA               	movwf	fsr2h,c
 32115  015528  50DF               	movf	indf2,w,c
 32116  01552A  6E0C               	movwf	(btemp+11)^0,c
 32117                           
 32118                           ;stkvar	_grs @ sp[(-4)+0]
 32119  01552C  0EFC               	movlw	-4
 32120  01552E  0060  F033  FFE3   	movff	btemp+11,plusw1
 32121                           
 32122                           ;stkvar	_a @ sp[(-4)+-8]
 32123  015534  0EF5               	movlw	245
 32124  015536  24E1               	addwf	fsr1l,w,c
 32125  015538  6ED9               	movwf	fsr2l,c
 32126  01553A  0EFF               	movlw	255
 32127  01553C  20E2               	addwfc	fsr1h,w,c
 32128  01553E  6EDA               	movwf	fsr2h,c
 32129                           
 32130                           ;stkvar	_b @ sp[(-4)+-4]
 32131  015540  0EF9               	movlw	249
 32132  015542  24E1               	addwf	fsr1l,w,c
 32133  015544  6EE9               	movwf	fsr0l,c
 32134  015546  0EFF               	movlw	255
 32135  015548  20E2               	addwfc	fsr1h,w,c
 32136  01554A  6EEA               	movwf	fsr0h,c
 32137  01554C  006F FF7F FFEF     	movff	indf2,indf0
 32138                           
 32139                           ;stkvar	_grs @ sp[(-4)+0]
 32140                           ;stkvar	_a @ sp[(-4)+-8]
 32141  015552  0EF5               	movlw	245
 32142  015554  24E1               	addwf	fsr1l,w,c
 32143  015556  6ED9               	movwf	fsr2l,c
 32144  015558  0EFF               	movlw	255
 32145  01555A  20E2               	addwfc	fsr1h,w,c
 32146  01555C  6EDA               	movwf	fsr2h,c
 32147  01555E  0EFC               	movlw	-4
 32148  015560  006F FF8F FFDF     	movff	plusw1,indf2
 32149                           
 32150                           ;stkvar	_b @ sp[(-4)+-4]
 32151  015566  0EFA               	movlw	250
 32152  015568  24E1               	addwf	fsr1l,w,c
 32153  01556A  6ED9               	movwf	fsr2l,c
 32154  01556C  0EFF               	movlw	255
 32155  01556E  20E2               	addwfc	fsr1h,w,c
 32156  015570  6EDA               	movwf	fsr2h,c
 32157  015572  50DF               	movf	indf2,w,c
 32158  015574  6E0C               	movwf	(btemp+11)^0,c
 32159                           
 32160                           ;stkvar	_grs @ sp[(-4)+0]
 32161  015576  0EFC               	movlw	-4
 32162  015578  0060  F033  FFE3   	movff	btemp+11,plusw1
 32163                           
 32164                           ;stkvar	_a @ sp[(-4)+-8]
 32165  01557E  0EF6               	movlw	246
 32166  015580  24E1               	addwf	fsr1l,w,c
 32167  015582  6ED9               	movwf	fsr2l,c
 32168  015584  0EFF               	movlw	255
 32169  015586  20E2               	addwfc	fsr1h,w,c
 32170  015588  6EDA               	movwf	fsr2h,c
 32171                           
 32172                           ;stkvar	_b @ sp[(-4)+-4]
 32173  01558A  0EFA               	movlw	250
 32174  01558C  24E1               	addwf	fsr1l,w,c
 32175  01558E  6EE9               	movwf	fsr0l,c
 32176  015590  0EFF               	movlw	255
 32177  015592  20E2               	addwfc	fsr1h,w,c
 32178  015594  6EEA               	movwf	fsr0h,c
 32179  015596  006F FF7F FFEF     	movff	indf2,indf0
 32180                           
 32181                           ;stkvar	_grs @ sp[(-4)+0]
 32182                           ;stkvar	_a @ sp[(-4)+-8]
 32183  01559C  0EF6               	movlw	246
 32184  01559E  24E1               	addwf	fsr1l,w,c
 32185  0155A0  6ED9               	movwf	fsr2l,c
 32186  0155A2  0EFF               	movlw	255
 32187  0155A4  20E2               	addwfc	fsr1h,w,c
 32188  0155A6  6EDA               	movwf	fsr2h,c
 32189  0155A8  0EFC               	movlw	-4
 32190  0155AA  006F FF8F FFDF     	movff	plusw1,indf2
 32191                           
 32192                           ;stkvar	_b @ sp[(-4)+-4]
 32193  0155B0  0EFB               	movlw	251
 32194  0155B2  24E1               	addwf	fsr1l,w,c
 32195  0155B4  6ED9               	movwf	fsr2l,c
 32196  0155B6  0EFF               	movlw	255
 32197  0155B8  20E2               	addwfc	fsr1h,w,c
 32198  0155BA  6EDA               	movwf	fsr2h,c
 32199  0155BC  50DF               	movf	indf2,w,c
 32200  0155BE  6E0C               	movwf	(btemp+11)^0,c
 32201                           
 32202                           ;stkvar	_grs @ sp[(-4)+0]
 32203  0155C0  0EFC               	movlw	-4
 32204  0155C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 32205                           
 32206                           ;stkvar	_a @ sp[(-4)+-8]
 32207  0155C8  0EF7               	movlw	247
 32208  0155CA  24E1               	addwf	fsr1l,w,c
 32209  0155CC  6ED9               	movwf	fsr2l,c
 32210  0155CE  0EFF               	movlw	255
 32211  0155D0  20E2               	addwfc	fsr1h,w,c
 32212  0155D2  6EDA               	movwf	fsr2h,c
 32213                           
 32214                           ;stkvar	_b @ sp[(-4)+-4]
 32215  0155D4  0EFB               	movlw	251
 32216  0155D6  24E1               	addwf	fsr1l,w,c
 32217  0155D8  6EE9               	movwf	fsr0l,c
 32218  0155DA  0EFF               	movlw	255
 32219  0155DC  20E2               	addwfc	fsr1h,w,c
 32220  0155DE  6EEA               	movwf	fsr0h,c
 32221  0155E0  006F FF7F FFEF     	movff	indf2,indf0
 32222                           
 32223                           ;stkvar	_grs @ sp[(-4)+0]
 32224                           ;stkvar	_a @ sp[(-4)+-8]
 32225  0155E6  0EF7               	movlw	247
 32226  0155E8  24E1               	addwf	fsr1l,w,c
 32227  0155EA  6ED9               	movwf	fsr2l,c
 32228  0155EC  0EFF               	movlw	255
 32229  0155EE  20E2               	addwfc	fsr1h,w,c
 32230  0155F0  6EDA               	movwf	fsr2h,c
 32231  0155F2  0EFC               	movlw	-4
 32232  0155F4  006F FF8F FFDF     	movff	plusw1,indf2
 32233  0155FA                     l8683:
 32234                           
 32235                           ;stkvar	_grs @ sp[(-4)+0]
 32236  0155FA  0EFC               	movlw	-4
 32237  0155FC  6AE3               	clrf	plusw1,c
 32238                           
 32239                           ;stkvar	_aexp @ sp[(-4)+2]
 32240  0155FE  0EFE               	movlw	-2
 32241  015600  50E3               	movf	plusw1,w,c
 32242  015602  6E0B               	movwf	(btemp+10)^0,c
 32243  015604  6A0C               	clrf	(btemp+11)^0,c
 32244                           
 32245                           ;stkvar	_bexp @ sp[(-4)+1]
 32246  015606  0EFD               	movlw	-3
 32247  015608  50E3               	movf	plusw1,w,c
 32248  01560A  5E0B               	subwf	(btemp+10)^0,f,c
 32249  01560C  0E00               	movlw	0
 32250  01560E  5A0C               	subwfb	(btemp+11)^0,f,c
 32251  015610  BE0C               	btfsc	(btemp+11)^0,7,c
 32252  015612  D062               	goto	l8707
 32253  015614  500C               	movf	(btemp+11)^0,w,c
 32254  015616  E104               	bnz	u6210
 32255  015618  0E1A               	movlw	26
 32256  01561A  5C0B               	subwf	(btemp+10)^0,w,c
 32257  01561C  A0D8               	btfss	status,0,c
 32258  01561E  D05C               	goto	l8707
 32259  015620                     u6210:
 32260                           
 32261                           ;stkvar	_b @ sp[(-4)+-4]
 32262  015620  0EF8               	movlw	-8
 32263  015622  50E3               	movf	plusw1,w,c
 32264  015624  E10A               	bnz	u6221
 32265  015626  0EF9               	movlw	-7
 32266  015628  50E3               	movf	plusw1,w,c
 32267  01562A  E107               	bnz	u6221
 32268  01562C  0EFA               	movlw	-6
 32269  01562E  50E3               	movf	plusw1,w,c
 32270  015630  E104               	bnz	u6221
 32271  015632  0EFB               	movlw	-5
 32272  015634  50E3               	movf	plusw1,w,c
 32273  015636  B4D8               	btfsc	status,2,c
 32274  015638  D003               	goto	u6220
 32275  01563A                     u6221:
 32276  01563A  6A0C               	clrf	(btemp+11)^0,c
 32277  01563C  2A0C               	incf	(btemp+11)^0,f,c
 32278  01563E  D001               	goto	u6238
 32279  015640                     u6220:
 32280  015640  6A0C               	clrf	(btemp+11)^0,c
 32281  015642                     u6238:
 32282                           
 32283                           ;stkvar	_grs @ sp[(-4)+0]
 32284  015642  0EFC               	movlw	-4
 32285  015644  0060  F033  FFE3   	movff	btemp+11,plusw1
 32286                           
 32287                           ;stkvar	_b @ sp[(-4)+-4]
 32288  01564A  0EF8               	movlw	-8
 32289  01564C  6AE3               	clrf	plusw1,c
 32290  01564E  0EF9               	movlw	-7
 32291  015650  6AE3               	clrf	plusw1,c
 32292  015652  0EFA               	movlw	-6
 32293  015654  6AE3               	clrf	plusw1,c
 32294  015656  0EFB               	movlw	-5
 32295  015658  6AE3               	clrf	plusw1,c
 32296                           
 32297                           ;stkvar	_aexp @ sp[(-4)+2]
 32298                           ;stkvar	_bexp @ sp[(-4)+1]
 32299  01565A  0EFE               	movlw	-2
 32300  01565C  006F FF8C  F001    	movff	plusw1,btemp
 32301  015662  0EFD               	movlw	-3
 32302  015664  0060  F007  FFE3   	movff	btemp,plusw1
 32303  01566A  D042               	goto	u6270
 32304  01566C                     l8693:
 32305                           
 32306                           ;stkvar	_grs @ sp[(-4)+0]
 32307  01566C  0EFC               	movlw	-4
 32308  01566E  A0E3               	btfss	plusw1,0,c
 32309  015670  D00D               	goto	l8697
 32310                           
 32311                           ;stkvar	_grs @ sp[(-4)+0]
 32312  015672  0EFC               	movlw	-4
 32313  015674  006F FF8C  F00C    	movff	plusw1,btemp+11
 32314  01567A  90D8               	bcf	status,0,c
 32315  01567C  320C               	rrcf	(btemp+11)^0,f,c
 32316  01567E  0E01               	movlw	1
 32317  015680  120C               	iorwf	(btemp+11)^0,f,c
 32318                           
 32319                           ;stkvar	_grs @ sp[(-4)+0]
 32320  015682  0EFC               	movlw	-4
 32321  015684  0060  F033  FFE3   	movff	btemp+11,plusw1
 32322  01568A  D009               	goto	l8699
 32323  01568C                     l8697:
 32324                           
 32325                           ;stkvar	_grs @ sp[(-4)+0]
 32326  01568C  50E1               	movf	fsr1l,w,c
 32327  01568E  0FFC               	addlw	-4
 32328  015690  6ED9               	movwf	fsr2l,c
 32329  015692  50E2               	movf	fsr1h,w,c
 32330  015694  6EDA               	movwf	fsr2h,c
 32331  015696  0EFF               	movlw	255
 32332  015698  22DA               	addwfc	fsr2h,f,c
 32333  01569A  90D8               	bcf	status,0,c
 32334  01569C  32DF               	rrcf	indf2,f,c
 32335  01569E                     l8699:
 32336                           
 32337                           ;stkvar	_b @ sp[(-4)+-4]
 32338  01569E  0EF8               	movlw	-8
 32339  0156A0  A0E3               	btfss	plusw1,0,c
 32340  0156A2  D002               	goto	l8703
 32341                           
 32342                           ;stkvar	_grs @ sp[(-4)+0]
 32343  0156A4  0EFC               	movlw	-4
 32344  0156A6  8EE3               	bsf	plusw1,7,c
 32345  0156A8                     l8703:
 32346  0156A8  0E01               	movlw	1
 32347  0156AA  6E0C               	movwf	(btemp+11)^0,c
 32348                           
 32349                           ;stkvar	_b @ sp[(-4)+-4]
 32350  0156AC  50E1               	movf	fsr1l,w,c
 32351  0156AE  0FF8               	addlw	-8
 32352  0156B0  6ED9               	movwf	fsr2l,c
 32353  0156B2  50E2               	movf	fsr1h,w,c
 32354  0156B4  6EDA               	movwf	fsr2h,c
 32355  0156B6  0EFF               	movlw	255
 32356  0156B8  22DA               	addwfc	fsr2h,f,c
 32357  0156BA  280C               	incf	(btemp+11)^0,w,c
 32358  0156BC  52DE               	movf	postinc2,f,c
 32359  0156BE  D008               	goto	u6260
 32360  0156C0                     u6265:
 32361  0156C0  52DE               	movf	postinc2,f,c
 32362  0156C2  90D8               	bcf	status,0,c
 32363  0156C4  BEDC               	btfsc	preinc2,7,c
 32364  0156C6  80D8               	bsf	status,0,c
 32365  0156C8  32DD               	rrcf	postdec2,f,c
 32366  0156CA  32DD               	rrcf	postdec2,f,c
 32367  0156CC  32DD               	rrcf	postdec2,f,c
 32368  0156CE  32DE               	rrcf	postinc2,f,c
 32369  0156D0                     u6260:
 32370  0156D0  2EE8               	decfsz	wreg,f,c
 32371  0156D2  D7F6               	goto	u6265
 32372                           
 32373                           ;stkvar	_bexp @ sp[(-4)+1]
 32374  0156D4  0EFD               	movlw	-3
 32375  0156D6  2AE3               	incf	plusw1,f,c
 32376  0156D8                     l8707:
 32377                           
 32378                           ;stkvar	_aexp @ sp[(-4)+2]
 32379                           ;stkvar	_bexp @ sp[(-4)+1]
 32380  0156D8  50E1               	movf	fsr1l,w,c
 32381  0156DA  0FFD               	addlw	-3
 32382  0156DC  6ED9               	movwf	fsr2l,c
 32383  0156DE  50E2               	movf	fsr1h,w,c
 32384  0156E0  6EDA               	movwf	fsr2h,c
 32385  0156E2  0EFF               	movlw	255
 32386  0156E4  22DA               	addwfc	fsr2h,f,c
 32387  0156E6  0EFE               	movlw	-2
 32388  0156E8  50E3               	movf	plusw1,w,c
 32389  0156EA  5CDE               	subwf	postinc2,w,c
 32390  0156EC  A0D8               	btfss	status,0,c
 32391  0156EE  D7BE               	goto	l8693
 32392  0156F0                     u6270:
 32393                           
 32394                           ;stkvar	_signs @ sp[(-4)+3]
 32395  0156F0  0EFF               	movlw	-1
 32396  0156F2  BCE3               	btfsc	plusw1,6,c
 32397  0156F4  D066               	goto	l8735
 32398                           
 32399                           ;stkvar	_bexp @ sp[(-4)+1]
 32400  0156F6  0EFD               	movlw	-3
 32401  0156F8  50E3               	movf	plusw1,w,c
 32402  0156FA  B4D8               	btfsc	status,2,c
 32403  0156FC  D0F2               	goto	u6370
 32404                           
 32405                           ;stkvar	_a @ sp[(-4)+-8]
 32406                           ;stkvar	_b @ sp[(-4)+-4]
 32407  0156FE  0EF8               	movlw	-8
 32408  015700  50E3               	movf	plusw1,w,c
 32409  015702  6E01               	movwf	btemp^0,c
 32410  015704  0EF4               	movlw	-12
 32411  015706  50E3               	movf	plusw1,w,c
 32412  015708  2601               	addwf	btemp^0,f,c
 32413  01570A  0EF8               	movlw	-8
 32414  01570C  0060  F007  FFE3   	movff	btemp,plusw1
 32415  015712  0EF9               	movlw	-7
 32416  015714  50E3               	movf	plusw1,w,c
 32417  015716  6E01               	movwf	btemp^0,c
 32418  015718  0EF5               	movlw	-11
 32419  01571A  50E3               	movf	plusw1,w,c
 32420  01571C  2201               	addwfc	btemp^0,f,c
 32421  01571E  0EF9               	movlw	-7
 32422  015720  0060  F007  FFE3   	movff	btemp,plusw1
 32423  015726  0EFA               	movlw	-6
 32424  015728  50E3               	movf	plusw1,w,c
 32425  01572A  6E01               	movwf	btemp^0,c
 32426  01572C  0EF6               	movlw	-10
 32427  01572E  50E3               	movf	plusw1,w,c
 32428  015730  2201               	addwfc	btemp^0,f,c
 32429  015732  0EFA               	movlw	-6
 32430  015734  0060  F007  FFE3   	movff	btemp,plusw1
 32431  01573A  0EFB               	movlw	-5
 32432  01573C  50E3               	movf	plusw1,w,c
 32433  01573E  6E01               	movwf	btemp^0,c
 32434  015740  0EF7               	movlw	-9
 32435  015742  50E3               	movf	plusw1,w,c
 32436  015744  2201               	addwfc	btemp^0,f,c
 32437  015746  0EFB               	movlw	-5
 32438  015748  0060  F007  FFE3   	movff	btemp,plusw1
 32439                           
 32440                           ;stkvar	_b @ sp[(-4)+-4]
 32441  01574E  0EFB               	movlw	-5
 32442  015750  A0E3               	btfss	plusw1,0,c
 32443  015752  D101               	goto	u6410
 32444                           
 32445                           ;stkvar	_grs @ sp[(-4)+0]
 32446  015754  0EFC               	movlw	-4
 32447  015756  A0E3               	btfss	plusw1,0,c
 32448  015758  D00D               	goto	l8725
 32449                           
 32450                           ;stkvar	_grs @ sp[(-4)+0]
 32451  01575A  0EFC               	movlw	-4
 32452  01575C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32453  015762  90D8               	bcf	status,0,c
 32454  015764  320C               	rrcf	(btemp+11)^0,f,c
 32455  015766  0E01               	movlw	1
 32456  015768  120C               	iorwf	(btemp+11)^0,f,c
 32457                           
 32458                           ;stkvar	_grs @ sp[(-4)+0]
 32459  01576A  0EFC               	movlw	-4
 32460  01576C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32461  015772  D009               	goto	l8727
 32462  015774                     l8725:
 32463                           
 32464                           ;stkvar	_grs @ sp[(-4)+0]
 32465  015774  50E1               	movf	fsr1l,w,c
 32466  015776  0FFC               	addlw	-4
 32467  015778  6ED9               	movwf	fsr2l,c
 32468  01577A  50E2               	movf	fsr1h,w,c
 32469  01577C  6EDA               	movwf	fsr2h,c
 32470  01577E  0EFF               	movlw	255
 32471  015780  22DA               	addwfc	fsr2h,f,c
 32472  015782  90D8               	bcf	status,0,c
 32473  015784  32DF               	rrcf	indf2,f,c
 32474  015786                     l8727:
 32475                           
 32476                           ;stkvar	_b @ sp[(-4)+-4]
 32477  015786  0EF8               	movlw	-8
 32478  015788  A0E3               	btfss	plusw1,0,c
 32479  01578A  D002               	goto	l8731
 32480                           
 32481                           ;stkvar	_grs @ sp[(-4)+0]
 32482  01578C  0EFC               	movlw	-4
 32483  01578E  8EE3               	bsf	plusw1,7,c
 32484  015790                     l8731:
 32485  015790  0E01               	movlw	1
 32486  015792  6E0C               	movwf	(btemp+11)^0,c
 32487                           
 32488                           ;stkvar	_b @ sp[(-4)+-4]
 32489  015794  50E1               	movf	fsr1l,w,c
 32490  015796  0FF8               	addlw	-8
 32491  015798  6ED9               	movwf	fsr2l,c
 32492  01579A  50E2               	movf	fsr1h,w,c
 32493  01579C  6EDA               	movwf	fsr2h,c
 32494  01579E  0EFF               	movlw	255
 32495  0157A0  22DA               	addwfc	fsr2h,f,c
 32496  0157A2  280C               	incf	(btemp+11)^0,w,c
 32497  0157A4  52DE               	movf	postinc2,f,c
 32498  0157A6  D008               	goto	u6330
 32499  0157A8                     u6335:
 32500  0157A8  52DE               	movf	postinc2,f,c
 32501  0157AA  90D8               	bcf	status,0,c
 32502  0157AC  BEDC               	btfsc	preinc2,7,c
 32503  0157AE  80D8               	bsf	status,0,c
 32504  0157B0  32DD               	rrcf	postdec2,f,c
 32505  0157B2  32DD               	rrcf	postdec2,f,c
 32506  0157B4  32DD               	rrcf	postdec2,f,c
 32507  0157B6  32DE               	rrcf	postinc2,f,c
 32508  0157B8                     u6330:
 32509  0157B8  2EE8               	decfsz	wreg,f,c
 32510  0157BA  D7F6               	goto	u6335
 32511                           
 32512                           ;stkvar	_bexp @ sp[(-4)+1]
 32513  0157BC  0EFD               	movlw	-3
 32514  0157BE  2AE3               	incf	plusw1,f,c
 32515  0157C0  D0CA               	goto	u6410
 32516  0157C2                     l8735:
 32517                           
 32518                           ;stkvar	_a @ sp[(-4)+-8]
 32519                           ;stkvar	_b @ sp[(-4)+-4]
 32520  0157C2  50E1               	movf	fsr1l,w,c
 32521  0157C4  0FF8               	addlw	-8
 32522  0157C6  6ED9               	movwf	fsr2l,c
 32523  0157C8  50E2               	movf	fsr1h,w,c
 32524  0157CA  6EDA               	movwf	fsr2h,c
 32525  0157CC  0EFF               	movlw	255
 32526  0157CE  22DA               	addwfc	fsr2h,f,c
 32527  0157D0  0EF4               	movlw	-12
 32528  0157D2  50E3               	movf	plusw1,w,c
 32529  0157D4  5CDE               	subwf	postinc2,w,c
 32530  0157D6  0EF5               	movlw	-11
 32531  0157D8  50E3               	movf	plusw1,w,c
 32532  0157DA  58DE               	subwfb	postinc2,w,c
 32533  0157DC  0EF6               	movlw	-10
 32534  0157DE  50E3               	movf	plusw1,w,c
 32535  0157E0  58DE               	subwfb	postinc2,w,c
 32536  0157E2  50DE               	movf	postinc2,w,c
 32537  0157E4  0A80               	xorlw	128
 32538  0157E6  6E01               	movwf	btemp^0,c
 32539  0157E8  0EF7               	movlw	-9
 32540  0157EA  50E3               	movf	plusw1,w,c
 32541  0157EC  0A80               	xorlw	128
 32542  0157EE  5801               	subwfb	btemp^0,w,c
 32543  0157F0  B0D8               	btfsc	status,0,c
 32544  0157F2  D053               	goto	l8747
 32545                           
 32546                           ;stkvar	_b @ sp[(-4)+-4]
 32547                           ;stkvar	_a @ sp[(-4)+-8]
 32548  0157F4  0EF4               	movlw	-12
 32549  0157F6  006F FF8C  F009    	movff	plusw1,btemp+8
 32550  0157FC  0EF5               	movlw	-11
 32551  0157FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 32552  015804  0EF6               	movlw	-10
 32553  015806  006F FF8C  F00B    	movff	plusw1,btemp+10
 32554  01580C  0EF7               	movlw	-9
 32555  01580E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32556  015814  0EF8               	movlw	-8
 32557  015816  50E3               	movf	plusw1,w,c
 32558  015818  5E09               	subwf	(btemp+8)^0,f,c
 32559  01581A  0EF9               	movlw	-7
 32560  01581C  50E3               	movf	plusw1,w,c
 32561  01581E  5A0A               	subwfb	(btemp+9)^0,f,c
 32562  015820  0EFA               	movlw	-6
 32563  015822  50E3               	movf	plusw1,w,c
 32564  015824  5A0B               	subwfb	(btemp+10)^0,f,c
 32565  015826  0EFB               	movlw	-5
 32566  015828  50E3               	movf	plusw1,w,c
 32567  01582A  5A0C               	subwfb	(btemp+11)^0,f,c
 32568  01582C  0EFF               	movlw	255
 32569  01582E  2409               	addwf	(btemp+8)^0,w,c
 32570  015830  6E05               	movwf	(btemp+4)^0,c
 32571  015832  0EFF               	movlw	255
 32572  015834  200A               	addwfc	(btemp+9)^0,w,c
 32573  015836  6E06               	movwf	(btemp+5)^0,c
 32574  015838  0EFF               	movlw	255
 32575  01583A  200B               	addwfc	(btemp+10)^0,w,c
 32576  01583C  6E07               	movwf	(btemp+6)^0,c
 32577  01583E  0EFF               	movlw	255
 32578  015840  200C               	addwfc	(btemp+11)^0,w,c
 32579  015842  6E08               	movwf	(btemp+7)^0,c
 32580                           
 32581                           ;stkvar	_b @ sp[(-4)+-4]
 32582  015844  0EF8               	movlw	-8
 32583  015846  0060  F017  FFE3   	movff	btemp+4,plusw1
 32584  01584C  0EF9               	movlw	-7
 32585  01584E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32586  015854  0EFA               	movlw	-6
 32587  015856  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32588  01585C  0EFB               	movlw	-5
 32589  01585E  0060  F023  FFE3   	movff	btemp+7,plusw1
 32590                           
 32591                           ;stkvar	_signs @ sp[(-4)+3]
 32592  015864  0EFF               	movlw	-1
 32593  015866  7EE3               	btg	plusw1,7,c
 32594                           
 32595                           ;stkvar	_grs @ sp[(-4)+0]
 32596  015868  0EFC               	movlw	-4
 32597  01586A  50E3               	movf	plusw1,w,c
 32598  01586C  0800               	sublw	0
 32599  01586E  6E0C               	movwf	(btemp+11)^0,c
 32600                           
 32601                           ;stkvar	_grs @ sp[(-4)+0]
 32602  015870  0EFC               	movlw	-4
 32603  015872  0060  F033  FFE3   	movff	btemp+11,plusw1
 32604                           
 32605                           ;stkvar	_grs @ sp[(-4)+0]
 32606  015878  0EFC               	movlw	-4
 32607  01587A  50E3               	movf	plusw1,w,c
 32608  01587C  A4D8               	btfss	status,2,c
 32609  01587E  D020               	goto	l8749
 32610                           
 32611                           ;stkvar	_b @ sp[(-4)+-4]
 32612  015880  50E1               	movf	fsr1l,w,c
 32613  015882  0FF8               	addlw	-8
 32614  015884  6ED9               	movwf	fsr2l,c
 32615  015886  50E2               	movf	fsr1h,w,c
 32616  015888  6EDA               	movwf	fsr2h,c
 32617  01588A  0EFF               	movlw	255
 32618  01588C  22DA               	addwfc	fsr2h,f,c
 32619  01588E  2ADE               	incf	postinc2,f,c
 32620  015890  0E00               	movlw	0
 32621  015892  22DE               	addwfc	postinc2,f,c
 32622  015894  22DE               	addwfc	postinc2,f,c
 32623  015896  22DE               	addwfc	postinc2,f,c
 32624  015898  D013               	goto	l8749
 32625  01589A                     l8747:
 32626                           
 32627                           ;stkvar	_a @ sp[(-4)+-8]
 32628                           ;stkvar	_b @ sp[(-4)+-4]
 32629  01589A  50E1               	movf	fsr1l,w,c
 32630  01589C  0FF8               	addlw	-8
 32631  01589E  6ED9               	movwf	fsr2l,c
 32632  0158A0  50E2               	movf	fsr1h,w,c
 32633  0158A2  6EDA               	movwf	fsr2h,c
 32634  0158A4  0EFF               	movlw	255
 32635  0158A6  22DA               	addwfc	fsr2h,f,c
 32636  0158A8  0EF4               	movlw	-12
 32637  0158AA  50E3               	movf	plusw1,w,c
 32638  0158AC  5EDE               	subwf	postinc2,f,c
 32639  0158AE  0EF5               	movlw	-11
 32640  0158B0  50E3               	movf	plusw1,w,c
 32641  0158B2  5ADE               	subwfb	postinc2,f,c
 32642  0158B4  0EF6               	movlw	-10
 32643  0158B6  50E3               	movf	plusw1,w,c
 32644  0158B8  5ADE               	subwfb	postinc2,f,c
 32645  0158BA  0EF7               	movlw	-9
 32646  0158BC  50E3               	movf	plusw1,w,c
 32647  0158BE  5ADE               	subwfb	postinc2,f,c
 32648  0158C0                     l8749:
 32649                           
 32650                           ;stkvar	_b @ sp[(-4)+-4]
 32651  0158C0  0EF8               	movlw	-8
 32652  0158C2  50E3               	movf	plusw1,w,c
 32653  0158C4  E145               	bnz	l8771
 32654  0158C6  0EF9               	movlw	-7
 32655  0158C8  50E3               	movf	plusw1,w,c
 32656  0158CA  E142               	bnz	l8771
 32657  0158CC  0EFA               	movlw	-6
 32658  0158CE  50E3               	movf	plusw1,w,c
 32659  0158D0  E13F               	bnz	l8771
 32660  0158D2  0EFB               	movlw	-5
 32661  0158D4  50E3               	movf	plusw1,w,c
 32662  0158D6  A4D8               	btfss	status,2,c
 32663  0158D8  D03B               	goto	l8771
 32664                           
 32665                           ;stkvar	_grs @ sp[(-4)+0]
 32666  0158DA  0EFC               	movlw	-4
 32667  0158DC  50E3               	movf	plusw1,w,c
 32668  0158DE  A4D8               	btfss	status,2,c
 32669  0158E0  D037               	goto	l8771
 32670  0158E2                     u6370:
 32671  0158E2  0E00               	movlw	0
 32672  0158E4  6E01               	movwf	btemp^0,c
 32673  0158E6  0E00               	movlw	0
 32674  0158E8  6E02               	movwf	(btemp+1)^0,c
 32675  0158EA  0E00               	movlw	0
 32676  0158EC  6E03               	movwf	(btemp+2)^0,c
 32677  0158EE  0E00               	movlw	0
 32678  0158F0  6E04               	movwf	(btemp+3)^0,c
 32679  0158F2  D0C6               	goto	l3219
 32680  0158F4                     l8757:
 32681                           
 32682                           ;stkvar	_b @ sp[(-4)+-4]
 32683  0158F4  90D8               	bcf	status,0,c
 32684  0158F6  0EF8               	movlw	-8
 32685  0158F8  36E3               	rlcf	plusw1,f,c
 32686  0158FA  0EF9               	movlw	-7
 32687  0158FC  36E3               	rlcf	plusw1,f,c
 32688  0158FE  0EFA               	movlw	-6
 32689  015900  36E3               	rlcf	plusw1,f,c
 32690  015902  0EFB               	movlw	-5
 32691  015904  36E3               	rlcf	plusw1,f,c
 32692                           
 32693                           ;stkvar	_grs @ sp[(-4)+0]
 32694  015906  0EFC               	movlw	-4
 32695  015908  AEE3               	btfss	plusw1,7,c
 32696  01590A  D002               	goto	l3231
 32697                           
 32698                           ;stkvar	_b @ sp[(-4)+-4]
 32699  01590C  0EF8               	movlw	-8
 32700  01590E  80E3               	bsf	plusw1,0,c
 32701  015910                     l3231:
 32702                           
 32703                           ;stkvar	_grs @ sp[(-4)+0]
 32704  015910  0EFC               	movlw	-4
 32705  015912  A0E3               	btfss	plusw1,0,c
 32706  015914  D00E               	goto	l8765
 32707                           
 32708                           ;stkvar	_grs @ sp[(-4)+0]
 32709  015916  0EFC               	movlw	-4
 32710  015918  006F FF8C  F00C    	movff	plusw1,btemp+11
 32711  01591E  90D8               	bcf	status,0,c
 32712  015920  340C               	rlcf	(btemp+11)^0,w,c
 32713  015922  6E0B               	movwf	(btemp+10)^0,c
 32714  015924  0E01               	movlw	1
 32715  015926  120B               	iorwf	(btemp+10)^0,f,c
 32716                           
 32717                           ;stkvar	_grs @ sp[(-4)+0]
 32718  015928  0EFC               	movlw	-4
 32719  01592A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32720  015930  D009               	goto	l8767
 32721  015932                     l8765:
 32722                           
 32723                           ;stkvar	_grs @ sp[(-4)+0]
 32724  015932  50E1               	movf	fsr1l,w,c
 32725  015934  0FFC               	addlw	-4
 32726  015936  6ED9               	movwf	fsr2l,c
 32727  015938  50E2               	movf	fsr1h,w,c
 32728  01593A  6EDA               	movwf	fsr2h,c
 32729  01593C  0EFF               	movlw	255
 32730  01593E  22DA               	addwfc	fsr2h,f,c
 32731  015940  90D8               	bcf	status,0,c
 32732  015942  36DF               	rlcf	indf2,f,c
 32733  015944                     l8767:
 32734                           
 32735                           ;stkvar	_bexp @ sp[(-4)+1]
 32736  015944  0EFD               	movlw	-3
 32737  015946  50E3               	movf	plusw1,w,c
 32738  015948  B4D8               	btfsc	status,2,c
 32739  01594A  D002               	goto	l8771
 32740                           
 32741                           ;stkvar	_bexp @ sp[(-4)+1]
 32742  01594C  0EFD               	movlw	-3
 32743  01594E  06E3               	decf	plusw1,f,c
 32744  015950                     l8771:
 32745                           
 32746                           ;stkvar	_b @ sp[(-4)+-4]
 32747  015950  0EFA               	movlw	-6
 32748  015952  AEE3               	btfss	plusw1,7,c
 32749  015954  D7CF               	goto	l8757
 32750  015956                     u6410:
 32751                           
 32752                           ;stkvar	_aexp @ sp[(-4)+2]
 32753  015956  0EFE               	movlw	-2
 32754  015958  6AE3               	clrf	plusw1,c
 32755                           
 32756                           ;stkvar	_grs @ sp[(-4)+0]
 32757  01595A  0EFC               	movlw	-4
 32758  01595C  AEE3               	btfss	plusw1,7,c
 32759  01595E  D00F               	goto	l8785
 32760                           
 32761                           ;stkvar	_grs @ sp[(-4)+0]
 32762  015960  0EFC               	movlw	-4
 32763  015962  006F FF8C  F00C    	movff	plusw1,btemp+11
 32764  015968  0E7F               	movlw	127
 32765  01596A  160C               	andwf	(btemp+11)^0,f,c
 32766  01596C  B4D8               	btfsc	status,2,c
 32767  01596E  D004               	goto	l8781
 32768  015970                     u6430:
 32769                           
 32770                           ;stkvar	_aexp @ sp[(-4)+2]
 32771  015970  0EFE               	movlw	-2
 32772  015972  6AE3               	clrf	plusw1,c
 32773  015974  2AE3               	incf	plusw1,f,c
 32774  015976  D003               	goto	l8785
 32775  015978                     l8781:
 32776                           
 32777                           ;stkvar	_b @ sp[(-4)+-4]
 32778  015978  0EF8               	movlw	-8
 32779  01597A  B0E3               	btfsc	plusw1,0,c
 32780  01597C  D7F9               	goto	u6430
 32781  01597E                     l8785:
 32782                           
 32783                           ;stkvar	_aexp @ sp[(-4)+2]
 32784  01597E  0EFE               	movlw	-2
 32785  015980  50E3               	movf	plusw1,w,c
 32786  015982  B4D8               	btfsc	status,2,c
 32787  015984  D02B               	goto	l8797
 32788                           
 32789                           ;stkvar	_b @ sp[(-4)+-4]
 32790  015986  50E1               	movf	fsr1l,w,c
 32791  015988  0FF8               	addlw	-8
 32792  01598A  6ED9               	movwf	fsr2l,c
 32793  01598C  50E2               	movf	fsr1h,w,c
 32794  01598E  6EDA               	movwf	fsr2h,c
 32795  015990  0EFF               	movlw	255
 32796  015992  22DA               	addwfc	fsr2h,f,c
 32797  015994  2ADE               	incf	postinc2,f,c
 32798  015996  0E00               	movlw	0
 32799  015998  22DE               	addwfc	postinc2,f,c
 32800  01599A  22DE               	addwfc	postinc2,f,c
 32801  01599C  22DE               	addwfc	postinc2,f,c
 32802                           
 32803                           ;stkvar	_b @ sp[(-4)+-4]
 32804  01599E  0EFB               	movlw	-5
 32805  0159A0  A0E3               	btfss	plusw1,0,c
 32806  0159A2  D01C               	goto	l8797
 32807  0159A4  0E01               	movlw	1
 32808  0159A6  6E0C               	movwf	(btemp+11)^0,c
 32809                           
 32810                           ;stkvar	_b @ sp[(-4)+-4]
 32811  0159A8  50E1               	movf	fsr1l,w,c
 32812  0159AA  0FF8               	addlw	-8
 32813  0159AC  6ED9               	movwf	fsr2l,c
 32814  0159AE  50E2               	movf	fsr1h,w,c
 32815  0159B0  6EDA               	movwf	fsr2h,c
 32816  0159B2  0EFF               	movlw	255
 32817  0159B4  22DA               	addwfc	fsr2h,f,c
 32818  0159B6  280C               	incf	(btemp+11)^0,w,c
 32819  0159B8  52DE               	movf	postinc2,f,c
 32820  0159BA  D008               	goto	u6470
 32821  0159BC                     u6475:
 32822  0159BC  52DE               	movf	postinc2,f,c
 32823  0159BE  90D8               	bcf	status,0,c
 32824  0159C0  BEDC               	btfsc	preinc2,7,c
 32825  0159C2  80D8               	bsf	status,0,c
 32826  0159C4  32DD               	rrcf	postdec2,f,c
 32827  0159C6  32DD               	rrcf	postdec2,f,c
 32828  0159C8  32DD               	rrcf	postdec2,f,c
 32829  0159CA  32DE               	rrcf	postinc2,f,c
 32830  0159CC                     u6470:
 32831  0159CC  2EE8               	decfsz	wreg,f,c
 32832  0159CE  D7F6               	goto	u6475
 32833                           
 32834                           ;stkvar	_bexp @ sp[(-4)+1]
 32835  0159D0  0EFD               	movlw	-3
 32836  0159D2  28E3               	incf	plusw1,w,c
 32837  0159D4  B4D8               	btfsc	status,2,c
 32838  0159D6  D002               	goto	l8797
 32839                           
 32840                           ;stkvar	_bexp @ sp[(-4)+1]
 32841  0159D8  0EFD               	movlw	-3
 32842  0159DA  2AE3               	incf	plusw1,f,c
 32843  0159DC                     l8797:
 32844                           
 32845                           ;stkvar	_bexp @ sp[(-4)+1]
 32846  0159DC  0EFD               	movlw	-3
 32847  0159DE  28E3               	incf	plusw1,w,c
 32848  0159E0  B4D8               	btfsc	status,2,c
 32849  0159E2  D004               	goto	u6500
 32850                           
 32851                           ;stkvar	_bexp @ sp[(-4)+1]
 32852  0159E4  0EFD               	movlw	-3
 32853  0159E6  50E3               	movf	plusw1,w,c
 32854  0159E8  A4D8               	btfss	status,2,c
 32855  0159EA  D00E               	goto	l8807
 32856  0159EC                     u6500:
 32857                           
 32858                           ;stkvar	_b @ sp[(-4)+-4]
 32859  0159EC  0EF8               	movlw	-8
 32860  0159EE  6AE3               	clrf	plusw1,c
 32861  0159F0  0EF9               	movlw	-7
 32862  0159F2  6AE3               	clrf	plusw1,c
 32863  0159F4  0EFA               	movlw	-6
 32864  0159F6  6AE3               	clrf	plusw1,c
 32865  0159F8  0EFB               	movlw	-5
 32866  0159FA  6AE3               	clrf	plusw1,c
 32867                           
 32868                           ;stkvar	_bexp @ sp[(-4)+1]
 32869  0159FC  0EFD               	movlw	-3
 32870  0159FE  50E3               	movf	plusw1,w,c
 32871  015A00  A4D8               	btfss	status,2,c
 32872  015A02  D002               	goto	l8807
 32873                           
 32874                           ;stkvar	_signs @ sp[(-4)+3]
 32875  015A04  0EFF               	movlw	-1
 32876  015A06  6AE3               	clrf	plusw1,c
 32877  015A08                     l8807:
 32878                           
 32879                           ;stkvar	_bexp @ sp[(-4)+1]
 32880  015A08  0EFD               	movlw	-3
 32881  015A0A  A0E3               	btfss	plusw1,0,c
 32882  015A0C  D009               	goto	l8811
 32883                           
 32884                           ;stkvar	_b @ sp[(-4)+-4]
 32885  015A0E  0EFA               	movlw	250
 32886  015A10  24E1               	addwf	fsr1l,w,c
 32887  015A12  6ED9               	movwf	fsr2l,c
 32888  015A14  0EFF               	movlw	255
 32889  015A16  20E2               	addwfc	fsr1h,w,c
 32890  015A18  6EDA               	movwf	fsr2h,c
 32891  015A1A  0E00               	movlw	0
 32892  015A1C  8EDB               	bsf	plusw2,7,c
 32893  015A1E  D008               	goto	l8813
 32894  015A20                     l8811:
 32895                           
 32896                           ;stkvar	_b @ sp[(-4)+-4]
 32897  015A20  0EFA               	movlw	250
 32898  015A22  24E1               	addwf	fsr1l,w,c
 32899  015A24  6ED9               	movwf	fsr2l,c
 32900  015A26  0EFF               	movlw	255
 32901  015A28  20E2               	addwfc	fsr1h,w,c
 32902  015A2A  6EDA               	movwf	fsr2h,c
 32903  015A2C  0E7F               	movlw	127
 32904  015A2E  16DF               	andwf	indf2,f,c
 32905  015A30                     l8813:
 32906                           
 32907                           ;stkvar	_b @ sp[(-4)+-4]
 32908  015A30  0EFB               	movlw	251
 32909  015A32  24E1               	addwf	fsr1l,w,c
 32910  015A34  6ED9               	movwf	fsr2l,c
 32911  015A36  0EFF               	movlw	255
 32912  015A38  20E2               	addwfc	fsr1h,w,c
 32913  015A3A  6EDA               	movwf	fsr2h,c
 32914                           
 32915                           ;stkvar	_bexp @ sp[(-4)+1]
 32916  015A3C  0EFD               	movlw	-3
 32917  015A3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32918  015A44  90D8               	bcf	status,0,c
 32919  015A46  300C               	rrcf	(btemp+11)^0,w,c
 32920  015A48  6EDF               	movwf	indf2,c
 32921                           
 32922                           ;stkvar	_signs @ sp[(-4)+3]
 32923  015A4A  0EFF               	movlw	-1
 32924  015A4C  AEE3               	btfss	plusw1,7,c
 32925  015A4E  D008               	goto	l8819
 32926                           
 32927                           ;stkvar	_b @ sp[(-4)+-4]
 32928  015A50  0EFB               	movlw	251
 32929  015A52  24E1               	addwf	fsr1l,w,c
 32930  015A54  6ED9               	movwf	fsr2l,c
 32931  015A56  0EFF               	movlw	255
 32932  015A58  20E2               	addwfc	fsr1h,w,c
 32933  015A5A  6EDA               	movwf	fsr2h,c
 32934  015A5C  0E00               	movlw	0
 32935  015A5E  8EDB               	bsf	plusw2,7,c
 32936  015A60                     l8819:
 32937                           
 32938                           ;stkvar	_b @ sp[(-4)+-4]
 32939  015A60  0EF8               	movlw	-8
 32940  015A62  006F FF8C  F001    	movff	plusw1,btemp
 32941  015A68  0EF9               	movlw	-7
 32942  015A6A  006F FF8C  F002    	movff	plusw1,btemp+1
 32943  015A70  0EFA               	movlw	-6
 32944  015A72  006F FF8C  F003    	movff	plusw1,btemp+2
 32945  015A78  0EFB               	movlw	-5
 32946  015A7A  006F FF8C  F004    	movff	plusw1,btemp+3
 32947  015A80                     l3219:
 32948                           
 32949                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 32950  015A80  0EF4               	movlw	244
 32951  015A82  26E1               	addwf	fsr1l,f,c
 32952  015A84  0EFF               	movlw	255
 32953  015A86  22E2               	addwfc	fsr1h,f,c
 32954  015A88  0012               	return		;funcret
 32955  015A8A                     __end_of___fladd:
 32956                           	opt callstack 0
 32957                           
 32958 ;; *************** function ___flmul *****************
 32959 ;; Defined at:
 32960 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 32961 ;; Parameters:    Size  Location     Type
 32962 ;;  b               4  [STACK] unsigned char 
 32963 ;;  a               4  [STACK] unsigned char 
 32964 ;; Auto vars:     Size  Location     Type
 32965 ;;  prod            4  [STACK] struct .
 32966 ;;  grs             4  [STACK] unsigned long 
 32967 ;;  temp            2  [STACK] struct .
 32968 ;;  bexp            1  [STACK] unsigned char 
 32969 ;;  aexp            1  [STACK] unsigned char 
 32970 ;;  sign            1  [STACK] unsigned char 
 32971 ;; Return value:  Size  Location     Type
 32972 ;;                  4  [STACK] unsigned char 
 32973 ;; Registers used:
 32974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32975 ;; Tracked objects:
 32976 ;;		On entry : 0/1
 32977 ;;		On exit  : 0/0
 32978 ;;		Unchanged: 0/0
 32979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32984 ;;Total ram usage:        0 bytes
 32985 ;; Hardware stack levels used:    1
 32986 ;; Hardware stack levels required when called:   15
 32987 ;; This function calls:
 32988 ;;		Nothing
 32989 ;; This function is called by:
 32990 ;;		_conv_raw_result
 32991 ;;		_lp_filter
 32992 ;;		_calc_model_data
 32993 ;;		_calc_bsoc
 32994 ;;		_init_bsoc
 32995 ;;		_efgtoa
 32996 ;; This function uses a reentrant model
 32997 ;;
 32998                           
 32999                           	psect	text129
 33000  014AA4                     __ptext129:
 33001                           	opt callstack 0
 33002  014AA4                     ___flmul:
 33003                           	opt callstack 0
 33004                           
 33005                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 33006  014AA4  0E0D               	movlw	13
 33007  014AA6  26E1               	addwf	fsr1l,f,c
 33008  014AA8  0E00               	movlw	0
 33009  014AAA  22E2               	addwfc	fsr1h,f,c
 33010                           
 33011                           ;stkvar	_b @ sp[(-13)+-4]
 33012                           
 33013                           ;incstack = 0
 33014 ;; hardware stack exceeded
 33015  014AAC  0EF2               	movlw	242
 33016  014AAE  24E1               	addwf	fsr1l,w,c
 33017  014AB0  6ED9               	movwf	fsr2l,c
 33018  014AB2  0EFF               	movlw	255
 33019  014AB4  20E2               	addwfc	fsr1h,w,c
 33020  014AB6  6EDA               	movwf	fsr2h,c
 33021  014AB8  50DF               	movf	indf2,w,c
 33022  014ABA  6E0C               	movwf	(btemp+11)^0,c
 33023  014ABC  0E80               	movlw	128
 33024  014ABE  160C               	andwf	(btemp+11)^0,f,c
 33025                           
 33026                           ;stkvar	_sign @ sp[(-13)+12]
 33027  014AC0  0EFF               	movlw	-1
 33028  014AC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 33029                           
 33030                           ;stkvar	_b @ sp[(-13)+-4]
 33031  014AC8  0EF2               	movlw	242
 33032  014ACA  24E1               	addwf	fsr1l,w,c
 33033  014ACC  6ED9               	movwf	fsr2l,c
 33034  014ACE  0EFF               	movlw	255
 33035  014AD0  20E2               	addwfc	fsr1h,w,c
 33036  014AD2  6EDA               	movwf	fsr2h,c
 33037  014AD4  50DF               	movf	indf2,w,c
 33038  014AD6  6E0C               	movwf	(btemp+11)^0,c
 33039  014AD8  90D8               	bcf	status,0,c
 33040  014ADA  340C               	rlcf	(btemp+11)^0,w,c
 33041  014ADC  6E0B               	movwf	(btemp+10)^0,c
 33042                           
 33043                           ;stkvar	_bexp @ sp[(-13)+10]
 33044  014ADE  0EFD               	movlw	-3
 33045  014AE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33046                           
 33047                           ;stkvar	_b @ sp[(-13)+-4]
 33048  014AE6  0EF1               	movlw	241
 33049  014AE8  24E1               	addwf	fsr1l,w,c
 33050  014AEA  6ED9               	movwf	fsr2l,c
 33051  014AEC  0EFF               	movlw	255
 33052  014AEE  20E2               	addwfc	fsr1h,w,c
 33053  014AF0  6EDA               	movwf	fsr2h,c
 33054  014AF2  AEDF               	btfss	indf2,7,c
 33055  014AF4  D002               	goto	l9245
 33056                           
 33057                           ;stkvar	_bexp @ sp[(-13)+10]
 33058  014AF6  0EFD               	movlw	-3
 33059  014AF8  80E3               	bsf	plusw1,0,c
 33060  014AFA                     l9245:
 33061                           
 33062                           ;stkvar	_bexp @ sp[(-13)+10]
 33063  014AFA  0EFD               	movlw	-3
 33064  014AFC  50E3               	movf	plusw1,w,c
 33065  014AFE  B4D8               	btfsc	status,2,c
 33066  014B00  D01F               	goto	l9253
 33067                           
 33068                           ;stkvar	_bexp @ sp[(-13)+10]
 33069  014B02  0EFD               	movlw	-3
 33070  014B04  28E3               	incf	plusw1,w,c
 33071  014B06  A4D8               	btfss	status,2,c
 33072  014B08  D018               	goto	l9251
 33073  014B0A  0E00               	movlw	0
 33074  014B0C  6E09               	movwf	(btemp+8)^0,c
 33075  014B0E  0E00               	movlw	0
 33076  014B10  6E0A               	movwf	(btemp+9)^0,c
 33077  014B12  0E00               	movlw	0
 33078  014B14  6E0B               	movwf	(btemp+10)^0,c
 33079  014B16  0E00               	movlw	0
 33080  014B18  6E0C               	movwf	(btemp+11)^0,c
 33081                           
 33082                           ;stkvar	_b @ sp[(-13)+-4]
 33083  014B1A  0EEF               	movlw	-17
 33084  014B1C  0060  F027  FFE3   	movff	btemp+8,plusw1
 33085  014B22  0EF0               	movlw	-16
 33086  014B24  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33087  014B2A  0EF1               	movlw	-15
 33088  014B2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33089  014B32  0EF2               	movlw	-14
 33090  014B34  0060  F033  FFE3   	movff	btemp+11,plusw1
 33091  014B3A                     l9251:
 33092                           
 33093                           ;stkvar	_b @ sp[(-13)+-4]
 33094  014B3A  0EF1               	movlw	-15
 33095  014B3C  8EE3               	bsf	plusw1,7,c
 33096  014B3E  D018               	goto	l9255
 33097  014B40                     l9253:
 33098  014B40  0E00               	movlw	0
 33099  014B42  6E09               	movwf	(btemp+8)^0,c
 33100  014B44  0E00               	movlw	0
 33101  014B46  6E0A               	movwf	(btemp+9)^0,c
 33102  014B48  0E00               	movlw	0
 33103  014B4A  6E0B               	movwf	(btemp+10)^0,c
 33104  014B4C  0E00               	movlw	0
 33105  014B4E  6E0C               	movwf	(btemp+11)^0,c
 33106                           
 33107                           ;stkvar	_b @ sp[(-13)+-4]
 33108  014B50  0EEF               	movlw	-17
 33109  014B52  0060  F027  FFE3   	movff	btemp+8,plusw1
 33110  014B58  0EF0               	movlw	-16
 33111  014B5A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33112  014B60  0EF1               	movlw	-15
 33113  014B62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33114  014B68  0EF2               	movlw	-14
 33115  014B6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 33116  014B70                     l9255:
 33117                           
 33118                           ;stkvar	_a @ sp[(-13)+-8]
 33119  014B70  0EEE               	movlw	238
 33120  014B72  24E1               	addwf	fsr1l,w,c
 33121  014B74  6ED9               	movwf	fsr2l,c
 33122  014B76  0EFF               	movlw	255
 33123  014B78  20E2               	addwfc	fsr1h,w,c
 33124  014B7A  6EDA               	movwf	fsr2h,c
 33125  014B7C  50DF               	movf	indf2,w,c
 33126  014B7E  6E0C               	movwf	(btemp+11)^0,c
 33127  014B80  0E80               	movlw	128
 33128  014B82  160C               	andwf	(btemp+11)^0,f,c
 33129                           
 33130                           ;stkvar	_sign @ sp[(-13)+12]
 33131  014B84  50E1               	movf	fsr1l,w,c
 33132  014B86  0FFF               	addlw	-1
 33133  014B88  6ED9               	movwf	fsr2l,c
 33134  014B8A  50E2               	movf	fsr1h,w,c
 33135  014B8C  6EDA               	movwf	fsr2h,c
 33136  014B8E  0EFF               	movlw	255
 33137  014B90  22DA               	addwfc	fsr2h,f,c
 33138  014B92  500C               	movf	(btemp+11)^0,w,c
 33139  014B94  1ADF               	xorwf	indf2,f,c
 33140                           
 33141                           ;stkvar	_a @ sp[(-13)+-8]
 33142  014B96  0EEE               	movlw	238
 33143  014B98  24E1               	addwf	fsr1l,w,c
 33144  014B9A  6ED9               	movwf	fsr2l,c
 33145  014B9C  0EFF               	movlw	255
 33146  014B9E  20E2               	addwfc	fsr1h,w,c
 33147  014BA0  6EDA               	movwf	fsr2h,c
 33148  014BA2  50DF               	movf	indf2,w,c
 33149  014BA4  6E0C               	movwf	(btemp+11)^0,c
 33150  014BA6  90D8               	bcf	status,0,c
 33151  014BA8  340C               	rlcf	(btemp+11)^0,w,c
 33152  014BAA  6E0B               	movwf	(btemp+10)^0,c
 33153                           
 33154                           ;stkvar	_aexp @ sp[(-13)+11]
 33155  014BAC  0EFE               	movlw	-2
 33156  014BAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33157                           
 33158                           ;stkvar	_a @ sp[(-13)+-8]
 33159  014BB4  0EED               	movlw	237
 33160  014BB6  24E1               	addwf	fsr1l,w,c
 33161  014BB8  6ED9               	movwf	fsr2l,c
 33162  014BBA  0EFF               	movlw	255
 33163  014BBC  20E2               	addwfc	fsr1h,w,c
 33164  014BBE  6EDA               	movwf	fsr2h,c
 33165  014BC0  AEDF               	btfss	indf2,7,c
 33166  014BC2  D002               	goto	l9263
 33167                           
 33168                           ;stkvar	_aexp @ sp[(-13)+11]
 33169  014BC4  0EFE               	movlw	-2
 33170  014BC6  80E3               	bsf	plusw1,0,c
 33171  014BC8                     l9263:
 33172                           
 33173                           ;stkvar	_aexp @ sp[(-13)+11]
 33174  014BC8  0EFE               	movlw	-2
 33175  014BCA  50E3               	movf	plusw1,w,c
 33176  014BCC  B4D8               	btfsc	status,2,c
 33177  014BCE  D01F               	goto	l9271
 33178                           
 33179                           ;stkvar	_aexp @ sp[(-13)+11]
 33180  014BD0  0EFE               	movlw	-2
 33181  014BD2  28E3               	incf	plusw1,w,c
 33182  014BD4  A4D8               	btfss	status,2,c
 33183  014BD6  D018               	goto	l9269
 33184  014BD8  0E00               	movlw	0
 33185  014BDA  6E09               	movwf	(btemp+8)^0,c
 33186  014BDC  0E00               	movlw	0
 33187  014BDE  6E0A               	movwf	(btemp+9)^0,c
 33188  014BE0  0E00               	movlw	0
 33189  014BE2  6E0B               	movwf	(btemp+10)^0,c
 33190  014BE4  0E00               	movlw	0
 33191  014BE6  6E0C               	movwf	(btemp+11)^0,c
 33192                           
 33193                           ;stkvar	_a @ sp[(-13)+-8]
 33194  014BE8  0EEB               	movlw	-21
 33195  014BEA  0060  F027  FFE3   	movff	btemp+8,plusw1
 33196  014BF0  0EEC               	movlw	-20
 33197  014BF2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33198  014BF8  0EED               	movlw	-19
 33199  014BFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33200  014C00  0EEE               	movlw	-18
 33201  014C02  0060  F033  FFE3   	movff	btemp+11,plusw1
 33202  014C08                     l9269:
 33203                           
 33204                           ;stkvar	_a @ sp[(-13)+-8]
 33205  014C08  0EED               	movlw	-19
 33206  014C0A  8EE3               	bsf	plusw1,7,c
 33207  014C0C  D018               	goto	l9273
 33208  014C0E                     l9271:
 33209  014C0E  0E00               	movlw	0
 33210  014C10  6E09               	movwf	(btemp+8)^0,c
 33211  014C12  0E00               	movlw	0
 33212  014C14  6E0A               	movwf	(btemp+9)^0,c
 33213  014C16  0E00               	movlw	0
 33214  014C18  6E0B               	movwf	(btemp+10)^0,c
 33215  014C1A  0E00               	movlw	0
 33216  014C1C  6E0C               	movwf	(btemp+11)^0,c
 33217                           
 33218                           ;stkvar	_a @ sp[(-13)+-8]
 33219  014C1E  0EEB               	movlw	-21
 33220  014C20  0060  F027  FFE3   	movff	btemp+8,plusw1
 33221  014C26  0EEC               	movlw	-20
 33222  014C28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33223  014C2E  0EED               	movlw	-19
 33224  014C30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33225  014C36  0EEE               	movlw	-18
 33226  014C38  0060  F033  FFE3   	movff	btemp+11,plusw1
 33227  014C3E                     l9273:
 33228                           
 33229                           ;stkvar	_aexp @ sp[(-13)+11]
 33230  014C3E  0EFE               	movlw	-2
 33231  014C40  50E3               	movf	plusw1,w,c
 33232  014C42  B4D8               	btfsc	status,2,c
 33233  014C44  D004               	goto	u7490
 33234                           
 33235                           ;stkvar	_bexp @ sp[(-13)+10]
 33236  014C46  0EFD               	movlw	-3
 33237  014C48  50E3               	movf	plusw1,w,c
 33238  014C4A  A4D8               	btfss	status,2,c
 33239  014C4C  D009               	goto	l9281
 33240  014C4E                     u7490:
 33241  014C4E  0E00               	movlw	0
 33242  014C50  6E01               	movwf	btemp^0,c
 33243  014C52  0E00               	movlw	0
 33244  014C54  6E02               	movwf	(btemp+1)^0,c
 33245  014C56  0E00               	movlw	0
 33246  014C58  6E03               	movwf	(btemp+2)^0,c
 33247  014C5A  0E00               	movlw	0
 33248  014C5C  6E04               	movwf	(btemp+3)^0,c
 33249  014C5E  D332               	goto	l3300
 33250  014C60                     l9281:
 33251                           
 33252                           ;stkvar	_b @ sp[(-13)+-4]
 33253  014C60  0EEF               	movlw	-17
 33254  014C62  006F FF8C  F00C    	movff	plusw1,btemp+11
 33255                           
 33256                           ;stkvar	_a @ sp[(-13)+-8]
 33257  014C68  0EED               	movlw	237
 33258  014C6A  24E1               	addwf	fsr1l,w,c
 33259  014C6C  6ED9               	movwf	fsr2l,c
 33260  014C6E  0EFF               	movlw	255
 33261  014C70  20E2               	addwfc	fsr1h,w,c
 33262  014C72  6EDA               	movwf	fsr2h,c
 33263  014C74  50DF               	movf	indf2,w,c
 33264  014C76  020C               	mulwf	(btemp+11)^0,c
 33265                           
 33266                           ;stkvar	_temp @ sp[(-13)+8]
 33267  014C78  0EFB               	movlw	-5
 33268  014C7A  006F FFCF FFE3     	movff	prodl,plusw1
 33269  014C80  0EFC               	movlw	-4
 33270  014C82  006F FFD3 FFE3     	movff	prodh,plusw1
 33271                           
 33272                           ;stkvar	_temp @ sp[(-13)+8]
 33273  014C88  0EFB               	movlw	-5
 33274  014C8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 33275  014C90  0060  F030  F005   	movff	btemp+11,btemp+4
 33276  014C96  6A06               	clrf	(btemp+5)^0,c
 33277  014C98  6A07               	clrf	(btemp+6)^0,c
 33278  014C9A  6A08               	clrf	(btemp+7)^0,c
 33279                           
 33280                           ;stkvar	_grs @ sp[(-13)+4]
 33281  014C9C  0EF7               	movlw	-9
 33282  014C9E  0060  F017  FFE3   	movff	btemp+4,plusw1
 33283  014CA4  0EF8               	movlw	-8
 33284  014CA6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 33285  014CAC  0EF9               	movlw	-7
 33286  014CAE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 33287  014CB4  0EFA               	movlw	-6
 33288  014CB6  0060  F023  FFE3   	movff	btemp+7,plusw1
 33289                           
 33290                           ;stkvar	_temp @ sp[(-13)+8]
 33291  014CBC  0EFC               	movlw	252
 33292  014CBE  24E1               	addwf	fsr1l,w,c
 33293  014CC0  6ED9               	movwf	fsr2l,c
 33294  014CC2  0EFF               	movlw	255
 33295  014CC4  20E2               	addwfc	fsr1h,w,c
 33296  014CC6  6EDA               	movwf	fsr2h,c
 33297  014CC8  50DF               	movf	indf2,w,c
 33298  014CCA  6E0C               	movwf	(btemp+11)^0,c
 33299  014CCC  0060  F030  F005   	movff	btemp+11,btemp+4
 33300  014CD2  6A06               	clrf	(btemp+5)^0,c
 33301  014CD4  6A07               	clrf	(btemp+6)^0,c
 33302  014CD6  6A08               	clrf	(btemp+7)^0,c
 33303                           
 33304                           ;stkvar	_prod @ sp[(-13)+0]
 33305  014CD8  0EF3               	movlw	-13
 33306  014CDA  0060  F017  FFE3   	movff	btemp+4,plusw1
 33307  014CE0  0EF4               	movlw	-12
 33308  014CE2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 33309  014CE8  0EF5               	movlw	-11
 33310  014CEA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 33311  014CF0  0EF6               	movlw	-10
 33312  014CF2  0060  F023  FFE3   	movff	btemp+7,plusw1
 33313                           
 33314                           ;stkvar	_b @ sp[(-13)+-4]
 33315  014CF8  0EF0               	movlw	240
 33316  014CFA  24E1               	addwf	fsr1l,w,c
 33317  014CFC  6ED9               	movwf	fsr2l,c
 33318  014CFE  0EFF               	movlw	255
 33319  014D00  20E2               	addwfc	fsr1h,w,c
 33320  014D02  6EDA               	movwf	fsr2h,c
 33321  014D04  50DF               	movf	indf2,w,c
 33322  014D06  6E0C               	movwf	(btemp+11)^0,c
 33323                           
 33324                           ;stkvar	_a @ sp[(-13)+-8]
 33325  014D08  0EEC               	movlw	236
 33326  014D0A  24E1               	addwf	fsr1l,w,c
 33327  014D0C  6ED9               	movwf	fsr2l,c
 33328  014D0E  0EFF               	movlw	255
 33329  014D10  20E2               	addwfc	fsr1h,w,c
 33330  014D12  6EDA               	movwf	fsr2h,c
 33331  014D14  50DF               	movf	indf2,w,c
 33332  014D16  020C               	mulwf	(btemp+11)^0,c
 33333                           
 33334                           ;stkvar	_temp @ sp[(-13)+8]
 33335  014D18  0EFB               	movlw	-5
 33336  014D1A  006F FFCF FFE3     	movff	prodl,plusw1
 33337  014D20  0EFC               	movlw	-4
 33338  014D22  006F FFD3 FFE3     	movff	prodh,plusw1
 33339                           
 33340                           ;stkvar	_grs @ sp[(-13)+4]
 33341  014D28  50E1               	movf	fsr1l,w,c
 33342  014D2A  0FF7               	addlw	-9
 33343  014D2C  6ED9               	movwf	fsr2l,c
 33344  014D2E  50E2               	movf	fsr1h,w,c
 33345  014D30  6EDA               	movwf	fsr2h,c
 33346  014D32  0EFF               	movlw	255
 33347  014D34  22DA               	addwfc	fsr2h,f,c
 33348                           
 33349                           ;stkvar	_temp @ sp[(-13)+8]
 33350  014D36  0EFB               	movlw	-5
 33351  014D38  50E3               	movf	plusw1,w,c
 33352  014D3A  26DE               	addwf	postinc2,f,c
 33353  014D3C  0E00               	movlw	0
 33354  014D3E  22DE               	addwfc	postinc2,f,c
 33355  014D40  22DE               	addwfc	postinc2,f,c
 33356  014D42  22DE               	addwfc	postinc2,f,c
 33357                           
 33358                           ;stkvar	_prod @ sp[(-13)+0]
 33359  014D44  50E1               	movf	fsr1l,w,c
 33360  014D46  0FF3               	addlw	-13
 33361  014D48  6ED9               	movwf	fsr2l,c
 33362  014D4A  50E2               	movf	fsr1h,w,c
 33363  014D4C  6EDA               	movwf	fsr2h,c
 33364  014D4E  0EFF               	movlw	255
 33365  014D50  22DA               	addwfc	fsr2h,f,c
 33366                           
 33367                           ;stkvar	_temp @ sp[(-13)+8]
 33368  014D52  0EFC               	movlw	252
 33369  014D54  24E1               	addwf	fsr1l,w,c
 33370  014D56  6EE9               	movwf	fsr0l,c
 33371  014D58  0EFF               	movlw	255
 33372  014D5A  20E2               	addwfc	fsr1h,w,c
 33373  014D5C  6EEA               	movwf	fsr0h,c
 33374  014D5E  50EF               	movf	indf0,w,c
 33375  014D60  26DE               	addwf	postinc2,f,c
 33376  014D62  0E00               	movlw	0
 33377  014D64  22DE               	addwfc	postinc2,f,c
 33378  014D66  22DE               	addwfc	postinc2,f,c
 33379  014D68  22DE               	addwfc	postinc2,f,c
 33380                           
 33381                           ;stkvar	_b @ sp[(-13)+-4]
 33382  014D6A  0EF1               	movlw	241
 33383  014D6C  24E1               	addwf	fsr1l,w,c
 33384  014D6E  6ED9               	movwf	fsr2l,c
 33385  014D70  0EFF               	movlw	255
 33386  014D72  20E2               	addwfc	fsr1h,w,c
 33387  014D74  6EDA               	movwf	fsr2h,c
 33388  014D76  50DF               	movf	indf2,w,c
 33389  014D78  6E0C               	movwf	(btemp+11)^0,c
 33390                           
 33391                           ;stkvar	_a @ sp[(-13)+-8]
 33392  014D7A  0EEB               	movlw	-21
 33393  014D7C  50E3               	movf	plusw1,w,c
 33394  014D7E  020C               	mulwf	(btemp+11)^0,c
 33395                           
 33396                           ;stkvar	_temp @ sp[(-13)+8]
 33397  014D80  0EFB               	movlw	-5
 33398  014D82  006F FFCF FFE3     	movff	prodl,plusw1
 33399  014D88  0EFC               	movlw	-4
 33400  014D8A  006F FFD3 FFE3     	movff	prodh,plusw1
 33401                           
 33402                           ;stkvar	_grs @ sp[(-13)+4]
 33403  014D90  50E1               	movf	fsr1l,w,c
 33404  014D92  0FF7               	addlw	-9
 33405  014D94  6ED9               	movwf	fsr2l,c
 33406  014D96  50E2               	movf	fsr1h,w,c
 33407  014D98  6EDA               	movwf	fsr2h,c
 33408  014D9A  0EFF               	movlw	255
 33409  014D9C  22DA               	addwfc	fsr2h,f,c
 33410                           
 33411                           ;stkvar	_temp @ sp[(-13)+8]
 33412  014D9E  0EFB               	movlw	-5
 33413  014DA0  50E3               	movf	plusw1,w,c
 33414  014DA2  26DE               	addwf	postinc2,f,c
 33415  014DA4  0E00               	movlw	0
 33416  014DA6  22DE               	addwfc	postinc2,f,c
 33417  014DA8  22DE               	addwfc	postinc2,f,c
 33418  014DAA  22DE               	addwfc	postinc2,f,c
 33419                           
 33420                           ;stkvar	_prod @ sp[(-13)+0]
 33421  014DAC  50E1               	movf	fsr1l,w,c
 33422  014DAE  0FF3               	addlw	-13
 33423  014DB0  6ED9               	movwf	fsr2l,c
 33424  014DB2  50E2               	movf	fsr1h,w,c
 33425  014DB4  6EDA               	movwf	fsr2h,c
 33426  014DB6  0EFF               	movlw	255
 33427  014DB8  22DA               	addwfc	fsr2h,f,c
 33428                           
 33429                           ;stkvar	_temp @ sp[(-13)+8]
 33430  014DBA  0EFC               	movlw	252
 33431  014DBC  24E1               	addwf	fsr1l,w,c
 33432  014DBE  6EE9               	movwf	fsr0l,c
 33433  014DC0  0EFF               	movlw	255
 33434  014DC2  20E2               	addwfc	fsr1h,w,c
 33435  014DC4  6EEA               	movwf	fsr0h,c
 33436  014DC6  50EF               	movf	indf0,w,c
 33437  014DC8  26DE               	addwf	postinc2,f,c
 33438  014DCA  0E00               	movlw	0
 33439  014DCC  22DE               	addwfc	postinc2,f,c
 33440  014DCE  22DE               	addwfc	postinc2,f,c
 33441  014DD0  22DE               	addwfc	postinc2,f,c
 33442                           
 33443                           ;stkvar	_grs @ sp[(-13)+4]
 33444  014DD2  50E1               	movf	fsr1l,w,c
 33445  014DD4  0FF7               	addlw	-9
 33446  014DD6  6ED9               	movwf	fsr2l,c
 33447  014DD8  50E2               	movf	fsr1h,w,c
 33448  014DDA  6EDA               	movwf	fsr2h,c
 33449  014DDC  0EFF               	movlw	255
 33450  014DDE  22DA               	addwfc	fsr2h,f,c
 33451  014DE0  0E08               	movlw	8
 33452  014DE2                     u7505:
 33453  014DE2  90D8               	bcf	status,0,c
 33454  014DE4  36DE               	rlcf	postinc2,f,c
 33455  014DE6  36DE               	rlcf	postinc2,f,c
 33456  014DE8  36DE               	rlcf	postinc2,f,c
 33457  014DEA  36DD               	rlcf	postdec2,f,c
 33458  014DEC  52DD               	movf	postdec2,f,c
 33459  014DEE  52DD               	movf	postdec2,f,c
 33460  014DF0  2EE8               	decfsz	wreg,f,c
 33461  014DF2  D7F7               	goto	u7505
 33462                           
 33463                           ;stkvar	_b @ sp[(-13)+-4]
 33464  014DF4  0EF0               	movlw	240
 33465  014DF6  24E1               	addwf	fsr1l,w,c
 33466  014DF8  6ED9               	movwf	fsr2l,c
 33467  014DFA  0EFF               	movlw	255
 33468  014DFC  20E2               	addwfc	fsr1h,w,c
 33469  014DFE  6EDA               	movwf	fsr2h,c
 33470  014E00  50DF               	movf	indf2,w,c
 33471  014E02  6E0C               	movwf	(btemp+11)^0,c
 33472                           
 33473                           ;stkvar	_a @ sp[(-13)+-8]
 33474  014E04  0EEB               	movlw	-21
 33475  014E06  50E3               	movf	plusw1,w,c
 33476  014E08  020C               	mulwf	(btemp+11)^0,c
 33477                           
 33478                           ;stkvar	_temp @ sp[(-13)+8]
 33479  014E0A  0EFB               	movlw	-5
 33480  014E0C  006F FFCF FFE3     	movff	prodl,plusw1
 33481  014E12  0EFC               	movlw	-4
 33482  014E14  006F FFD3 FFE3     	movff	prodh,plusw1
 33483                           
 33484                           ;stkvar	_temp @ sp[(-13)+8]
 33485  014E1A  0EFB               	movlw	-5
 33486  014E1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 33487  014E22  0EFC               	movlw	-4
 33488  014E24  006F FF8C  F00C    	movff	plusw1,btemp+11
 33489                           
 33490                           ;stkvar	_grs @ sp[(-13)+4]
 33491  014E2A  50E1               	movf	fsr1l,w,c
 33492  014E2C  0FF7               	addlw	-9
 33493  014E2E  6ED9               	movwf	fsr2l,c
 33494  014E30  50E2               	movf	fsr1h,w,c
 33495  014E32  6EDA               	movwf	fsr2h,c
 33496  014E34  0EFF               	movlw	255
 33497  014E36  22DA               	addwfc	fsr2h,f,c
 33498  014E38  500B               	movf	(btemp+10)^0,w,c
 33499  014E3A  26DE               	addwf	postinc2,f,c
 33500  014E3C  500C               	movf	(btemp+11)^0,w,c
 33501  014E3E  22DE               	addwfc	postinc2,f,c
 33502  014E40  0E00               	movlw	0
 33503  014E42  22DE               	addwfc	postinc2,f,c
 33504  014E44  22DE               	addwfc	postinc2,f,c
 33505                           
 33506                           ;stkvar	_b @ sp[(-13)+-4]
 33507  014E46  0EEF               	movlw	-17
 33508  014E48  006F FF8C  F00C    	movff	plusw1,btemp+11
 33509                           
 33510                           ;stkvar	_a @ sp[(-13)+-8]
 33511  014E4E  0EEC               	movlw	236
 33512  014E50  24E1               	addwf	fsr1l,w,c
 33513  014E52  6ED9               	movwf	fsr2l,c
 33514  014E54  0EFF               	movlw	255
 33515  014E56  20E2               	addwfc	fsr1h,w,c
 33516  014E58  6EDA               	movwf	fsr2h,c
 33517  014E5A  50DF               	movf	indf2,w,c
 33518  014E5C  020C               	mulwf	(btemp+11)^0,c
 33519                           
 33520                           ;stkvar	_temp @ sp[(-13)+8]
 33521  014E5E  0EFB               	movlw	-5
 33522  014E60  006F FFCF FFE3     	movff	prodl,plusw1
 33523  014E66  0EFC               	movlw	-4
 33524  014E68  006F FFD3 FFE3     	movff	prodh,plusw1
 33525                           
 33526                           ;stkvar	_temp @ sp[(-13)+8]
 33527  014E6E  0EFB               	movlw	-5
 33528  014E70  006F FF8C  F00B    	movff	plusw1,btemp+10
 33529  014E76  0EFC               	movlw	-4
 33530  014E78  006F FF8C  F00C    	movff	plusw1,btemp+11
 33531                           
 33532                           ;stkvar	_grs @ sp[(-13)+4]
 33533  014E7E  50E1               	movf	fsr1l,w,c
 33534  014E80  0FF7               	addlw	-9
 33535  014E82  6ED9               	movwf	fsr2l,c
 33536  014E84  50E2               	movf	fsr1h,w,c
 33537  014E86  6EDA               	movwf	fsr2h,c
 33538  014E88  0EFF               	movlw	255
 33539  014E8A  22DA               	addwfc	fsr2h,f,c
 33540  014E8C  500B               	movf	(btemp+10)^0,w,c
 33541  014E8E  26DE               	addwf	postinc2,f,c
 33542  014E90  500C               	movf	(btemp+11)^0,w,c
 33543  014E92  22DE               	addwfc	postinc2,f,c
 33544  014E94  0E00               	movlw	0
 33545  014E96  22DE               	addwfc	postinc2,f,c
 33546  014E98  22DE               	addwfc	postinc2,f,c
 33547                           
 33548                           ;stkvar	_grs @ sp[(-13)+4]
 33549  014E9A  50E1               	movf	fsr1l,w,c
 33550  014E9C  0FF7               	addlw	-9
 33551  014E9E  6ED9               	movwf	fsr2l,c
 33552  014EA0  50E2               	movf	fsr1h,w,c
 33553  014EA2  6EDA               	movwf	fsr2h,c
 33554  014EA4  0EFF               	movlw	255
 33555  014EA6  22DA               	addwfc	fsr2h,f,c
 33556  014EA8  0E08               	movlw	8
 33557  014EAA                     u7515:
 33558  014EAA  90D8               	bcf	status,0,c
 33559  014EAC  36DE               	rlcf	postinc2,f,c
 33560  014EAE  36DE               	rlcf	postinc2,f,c
 33561  014EB0  36DE               	rlcf	postinc2,f,c
 33562  014EB2  36DD               	rlcf	postdec2,f,c
 33563  014EB4  52DD               	movf	postdec2,f,c
 33564  014EB6  52DD               	movf	postdec2,f,c
 33565  014EB8  2EE8               	decfsz	wreg,f,c
 33566  014EBA  D7F7               	goto	u7515
 33567                           
 33568                           ;stkvar	_b @ sp[(-13)+-4]
 33569  014EBC  0EEF               	movlw	-17
 33570  014EBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 33571                           
 33572                           ;stkvar	_a @ sp[(-13)+-8]
 33573  014EC4  0EEB               	movlw	-21
 33574  014EC6  50E3               	movf	plusw1,w,c
 33575  014EC8  020C               	mulwf	(btemp+11)^0,c
 33576                           
 33577                           ;stkvar	_temp @ sp[(-13)+8]
 33578  014ECA  0EFB               	movlw	-5
 33579  014ECC  006F FFCF FFE3     	movff	prodl,plusw1
 33580  014ED2  0EFC               	movlw	-4
 33581  014ED4  006F FFD3 FFE3     	movff	prodh,plusw1
 33582                           
 33583                           ;stkvar	_temp @ sp[(-13)+8]
 33584  014EDA  0EFB               	movlw	-5
 33585  014EDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 33586  014EE2  0EFC               	movlw	-4
 33587  014EE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 33588                           
 33589                           ;stkvar	_grs @ sp[(-13)+4]
 33590  014EEA  50E1               	movf	fsr1l,w,c
 33591  014EEC  0FF7               	addlw	-9
 33592  014EEE  6ED9               	movwf	fsr2l,c
 33593  014EF0  50E2               	movf	fsr1h,w,c
 33594  014EF2  6EDA               	movwf	fsr2h,c
 33595  014EF4  0EFF               	movlw	255
 33596  014EF6  22DA               	addwfc	fsr2h,f,c
 33597  014EF8  500B               	movf	(btemp+10)^0,w,c
 33598  014EFA  26DE               	addwf	postinc2,f,c
 33599  014EFC  500C               	movf	(btemp+11)^0,w,c
 33600  014EFE  22DE               	addwfc	postinc2,f,c
 33601  014F00  0E00               	movlw	0
 33602  014F02  22DE               	addwfc	postinc2,f,c
 33603  014F04  22DE               	addwfc	postinc2,f,c
 33604                           
 33605                           ;stkvar	_b @ sp[(-13)+-4]
 33606  014F06  0EF0               	movlw	240
 33607  014F08  24E1               	addwf	fsr1l,w,c
 33608  014F0A  6ED9               	movwf	fsr2l,c
 33609  014F0C  0EFF               	movlw	255
 33610  014F0E  20E2               	addwfc	fsr1h,w,c
 33611  014F10  6EDA               	movwf	fsr2h,c
 33612  014F12  50DF               	movf	indf2,w,c
 33613  014F14  6E0C               	movwf	(btemp+11)^0,c
 33614                           
 33615                           ;stkvar	_a @ sp[(-13)+-8]
 33616  014F16  0EED               	movlw	237
 33617  014F18  24E1               	addwf	fsr1l,w,c
 33618  014F1A  6ED9               	movwf	fsr2l,c
 33619  014F1C  0EFF               	movlw	255
 33620  014F1E  20E2               	addwfc	fsr1h,w,c
 33621  014F20  6EDA               	movwf	fsr2h,c
 33622  014F22  50DF               	movf	indf2,w,c
 33623  014F24  020C               	mulwf	(btemp+11)^0,c
 33624                           
 33625                           ;stkvar	_temp @ sp[(-13)+8]
 33626  014F26  0EFB               	movlw	-5
 33627  014F28  006F FFCF FFE3     	movff	prodl,plusw1
 33628  014F2E  0EFC               	movlw	-4
 33629  014F30  006F FFD3 FFE3     	movff	prodh,plusw1
 33630                           
 33631                           ;stkvar	_temp @ sp[(-13)+8]
 33632  014F36  0EFB               	movlw	-5
 33633  014F38  006F FF8C  F00B    	movff	plusw1,btemp+10
 33634  014F3E  0EFC               	movlw	-4
 33635  014F40  006F FF8C  F00C    	movff	plusw1,btemp+11
 33636                           
 33637                           ;stkvar	_prod @ sp[(-13)+0]
 33638  014F46  50E1               	movf	fsr1l,w,c
 33639  014F48  0FF3               	addlw	-13
 33640  014F4A  6ED9               	movwf	fsr2l,c
 33641  014F4C  50E2               	movf	fsr1h,w,c
 33642  014F4E  6EDA               	movwf	fsr2h,c
 33643  014F50  0EFF               	movlw	255
 33644  014F52  22DA               	addwfc	fsr2h,f,c
 33645  014F54  500B               	movf	(btemp+10)^0,w,c
 33646  014F56  26DE               	addwf	postinc2,f,c
 33647  014F58  500C               	movf	(btemp+11)^0,w,c
 33648  014F5A  22DE               	addwfc	postinc2,f,c
 33649  014F5C  0E00               	movlw	0
 33650  014F5E  22DE               	addwfc	postinc2,f,c
 33651  014F60  22DE               	addwfc	postinc2,f,c
 33652                           
 33653                           ;stkvar	_b @ sp[(-13)+-4]
 33654  014F62  0EF1               	movlw	241
 33655  014F64  24E1               	addwf	fsr1l,w,c
 33656  014F66  6ED9               	movwf	fsr2l,c
 33657  014F68  0EFF               	movlw	255
 33658  014F6A  20E2               	addwfc	fsr1h,w,c
 33659  014F6C  6EDA               	movwf	fsr2h,c
 33660  014F6E  50DF               	movf	indf2,w,c
 33661  014F70  6E0C               	movwf	(btemp+11)^0,c
 33662                           
 33663                           ;stkvar	_a @ sp[(-13)+-8]
 33664  014F72  0EEC               	movlw	236
 33665  014F74  24E1               	addwf	fsr1l,w,c
 33666  014F76  6ED9               	movwf	fsr2l,c
 33667  014F78  0EFF               	movlw	255
 33668  014F7A  20E2               	addwfc	fsr1h,w,c
 33669  014F7C  6EDA               	movwf	fsr2h,c
 33670  014F7E  50DF               	movf	indf2,w,c
 33671  014F80  020C               	mulwf	(btemp+11)^0,c
 33672                           
 33673                           ;stkvar	_temp @ sp[(-13)+8]
 33674  014F82  0EFB               	movlw	-5
 33675  014F84  006F FFCF FFE3     	movff	prodl,plusw1
 33676  014F8A  0EFC               	movlw	-4
 33677  014F8C  006F FFD3 FFE3     	movff	prodh,plusw1
 33678                           
 33679                           ;stkvar	_temp @ sp[(-13)+8]
 33680  014F92  0EFB               	movlw	-5
 33681  014F94  006F FF8C  F00B    	movff	plusw1,btemp+10
 33682  014F9A  0EFC               	movlw	-4
 33683  014F9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 33684                           
 33685                           ;stkvar	_prod @ sp[(-13)+0]
 33686  014FA2  50E1               	movf	fsr1l,w,c
 33687  014FA4  0FF3               	addlw	-13
 33688  014FA6  6ED9               	movwf	fsr2l,c
 33689  014FA8  50E2               	movf	fsr1h,w,c
 33690  014FAA  6EDA               	movwf	fsr2h,c
 33691  014FAC  0EFF               	movlw	255
 33692  014FAE  22DA               	addwfc	fsr2h,f,c
 33693  014FB0  500B               	movf	(btemp+10)^0,w,c
 33694  014FB2  26DE               	addwf	postinc2,f,c
 33695  014FB4  500C               	movf	(btemp+11)^0,w,c
 33696  014FB6  22DE               	addwfc	postinc2,f,c
 33697  014FB8  0E00               	movlw	0
 33698  014FBA  22DE               	addwfc	postinc2,f,c
 33699  014FBC  22DE               	addwfc	postinc2,f,c
 33700                           
 33701                           ;stkvar	_b @ sp[(-13)+-4]
 33702  014FBE  0EF1               	movlw	241
 33703  014FC0  24E1               	addwf	fsr1l,w,c
 33704  014FC2  6ED9               	movwf	fsr2l,c
 33705  014FC4  0EFF               	movlw	255
 33706  014FC6  20E2               	addwfc	fsr1h,w,c
 33707  014FC8  6EDA               	movwf	fsr2h,c
 33708  014FCA  50DF               	movf	indf2,w,c
 33709  014FCC  6E0C               	movwf	(btemp+11)^0,c
 33710                           
 33711                           ;stkvar	_a @ sp[(-13)+-8]
 33712  014FCE  0EED               	movlw	237
 33713  014FD0  24E1               	addwf	fsr1l,w,c
 33714  014FD2  6ED9               	movwf	fsr2l,c
 33715  014FD4  0EFF               	movlw	255
 33716  014FD6  20E2               	addwfc	fsr1h,w,c
 33717  014FD8  6EDA               	movwf	fsr2h,c
 33718  014FDA  50DF               	movf	indf2,w,c
 33719  014FDC  020C               	mulwf	(btemp+11)^0,c
 33720                           
 33721                           ;stkvar	_temp @ sp[(-13)+8]
 33722  014FDE  0EFB               	movlw	-5
 33723  014FE0  006F FFCF FFE3     	movff	prodl,plusw1
 33724  014FE6  0EFC               	movlw	-4
 33725  014FE8  006F FFD3 FFE3     	movff	prodh,plusw1
 33726                           
 33727                           ;stkvar	_temp @ sp[(-13)+8]
 33728  014FEE  0EFB               	movlw	-5
 33729  014FF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 33730  014FF6  0EFC               	movlw	-4
 33731  014FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 33732  014FFE  500B               	movf	(btemp+10)^0,w,c
 33733  015000  6E05               	movwf	(btemp+4)^0,c
 33734  015002  500C               	movf	(btemp+11)^0,w,c
 33735  015004  6E06               	movwf	(btemp+5)^0,c
 33736  015006  6A07               	clrf	(btemp+6)^0,c
 33737  015008  6A08               	clrf	(btemp+7)^0,c
 33738  01500A  0060  F01C  F008   	movff	btemp+6,btemp+7
 33739  015010  0060  F018  F007   	movff	btemp+5,btemp+6
 33740  015016  0060  F014  F006   	movff	btemp+4,btemp+5
 33741  01501C  6A05               	clrf	(btemp+4)^0,c
 33742                           
 33743                           ;stkvar	_prod @ sp[(-13)+0]
 33744  01501E  50E1               	movf	fsr1l,w,c
 33745  015020  0FF3               	addlw	-13
 33746  015022  6ED9               	movwf	fsr2l,c
 33747  015024  50E2               	movf	fsr1h,w,c
 33748  015026  6EDA               	movwf	fsr2h,c
 33749  015028  0EFF               	movlw	255
 33750  01502A  22DA               	addwfc	fsr2h,f,c
 33751  01502C  5005               	movf	(btemp+4)^0,w,c
 33752  01502E  26DE               	addwf	postinc2,f,c
 33753  015030  5006               	movf	(btemp+5)^0,w,c
 33754  015032  22DE               	addwfc	postinc2,f,c
 33755  015034  5007               	movf	(btemp+6)^0,w,c
 33756  015036  22DE               	addwfc	postinc2,f,c
 33757  015038  5008               	movf	(btemp+7)^0,w,c
 33758  01503A  22DE               	addwfc	postinc2,f,c
 33759                           
 33760                           ;stkvar	_prod @ sp[(-13)+0]
 33761  01503C  50E1               	movf	fsr1l,w,c
 33762  01503E  0FF3               	addlw	-13
 33763  015040  6ED9               	movwf	fsr2l,c
 33764  015042  50E2               	movf	fsr1h,w,c
 33765  015044  6EDA               	movwf	fsr2h,c
 33766  015046  0EFF               	movlw	255
 33767  015048  22DA               	addwfc	fsr2h,f,c
 33768                           
 33769                           ;stkvar	_grs @ sp[(-13)+4]
 33770  01504A  0EFA               	movlw	250
 33771  01504C  24E1               	addwf	fsr1l,w,c
 33772  01504E  6EE9               	movwf	fsr0l,c
 33773  015050  0EFF               	movlw	255
 33774  015052  20E2               	addwfc	fsr1h,w,c
 33775  015054  6EEA               	movwf	fsr0h,c
 33776  015056  50EF               	movf	indf0,w,c
 33777  015058  26DE               	addwf	postinc2,f,c
 33778  01505A  0E00               	movlw	0
 33779  01505C  22DE               	addwfc	postinc2,f,c
 33780  01505E  22DE               	addwfc	postinc2,f,c
 33781  015060  22DE               	addwfc	postinc2,f,c
 33782                           
 33783                           ;stkvar	_grs @ sp[(-13)+4]
 33784  015062  50E1               	movf	fsr1l,w,c
 33785  015064  0FF7               	addlw	-9
 33786  015066  6ED9               	movwf	fsr2l,c
 33787  015068  50E2               	movf	fsr1h,w,c
 33788  01506A  6EDA               	movwf	fsr2h,c
 33789  01506C  0EFF               	movlw	255
 33790  01506E  22DA               	addwfc	fsr2h,f,c
 33791  015070  0E08               	movlw	8
 33792  015072                     u7525:
 33793  015072  90D8               	bcf	status,0,c
 33794  015074  36DE               	rlcf	postinc2,f,c
 33795  015076  36DE               	rlcf	postinc2,f,c
 33796  015078  36DE               	rlcf	postinc2,f,c
 33797  01507A  36DD               	rlcf	postdec2,f,c
 33798  01507C  52DD               	movf	postdec2,f,c
 33799  01507E  52DD               	movf	postdec2,f,c
 33800  015080  2EE8               	decfsz	wreg,f,c
 33801  015082  D7F7               	goto	u7525
 33802  015084  0E82               	movlw	130
 33803  015086  6E0B               	movwf	(btemp+10)^0,c
 33804  015088  0EFF               	movlw	255
 33805  01508A  6E0C               	movwf	(btemp+11)^0,c
 33806                           
 33807                           ;stkvar	_bexp @ sp[(-13)+10]
 33808  01508C  0EFD               	movlw	-3
 33809  01508E  50E3               	movf	plusw1,w,c
 33810  015090  6E09               	movwf	(btemp+8)^0,c
 33811  015092  6A0A               	clrf	(btemp+9)^0,c
 33812                           
 33813                           ;stkvar	_aexp @ sp[(-13)+11]
 33814  015094  0EFE               	movlw	-2
 33815  015096  50E3               	movf	plusw1,w,c
 33816  015098  2609               	addwf	(btemp+8)^0,f,c
 33817  01509A  0E00               	movlw	0
 33818  01509C  220A               	addwfc	(btemp+9)^0,f,c
 33819  01509E  500B               	movf	(btemp+10)^0,w,c
 33820  0150A0  2609               	addwf	(btemp+8)^0,f,c
 33821  0150A2  500C               	movf	(btemp+11)^0,w,c
 33822  0150A4  220A               	addwfc	(btemp+9)^0,f,c
 33823                           
 33824                           ;stkvar	_temp @ sp[(-13)+8]
 33825  0150A6  0EFB               	movlw	-5
 33826  0150A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 33827  0150AE  0EFC               	movlw	-4
 33828  0150B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33829  0150B6  D021               	goto	l9343
 33830  0150B8                     l9333:
 33831                           
 33832                           ;stkvar	_prod @ sp[(-13)+0]
 33833  0150B8  90D8               	bcf	status,0,c
 33834  0150BA  0EF3               	movlw	-13
 33835  0150BC  36E3               	rlcf	plusw1,f,c
 33836  0150BE  0EF4               	movlw	-12
 33837  0150C0  36E3               	rlcf	plusw1,f,c
 33838  0150C2  0EF5               	movlw	-11
 33839  0150C4  36E3               	rlcf	plusw1,f,c
 33840  0150C6  0EF6               	movlw	-10
 33841  0150C8  36E3               	rlcf	plusw1,f,c
 33842                           
 33843                           ;stkvar	_grs @ sp[(-13)+4]
 33844  0150CA  0EFA               	movlw	-6
 33845  0150CC  AEE3               	btfss	plusw1,7,c
 33846  0150CE  D002               	goto	l9339
 33847                           
 33848                           ;stkvar	_prod @ sp[(-13)+0]
 33849  0150D0  0EF3               	movlw	-13
 33850  0150D2  80E3               	bsf	plusw1,0,c
 33851  0150D4                     l9339:
 33852                           
 33853                           ;stkvar	_grs @ sp[(-13)+4]
 33854  0150D4  90D8               	bcf	status,0,c
 33855  0150D6  0EF7               	movlw	-9
 33856  0150D8  36E3               	rlcf	plusw1,f,c
 33857  0150DA  0EF8               	movlw	-8
 33858  0150DC  36E3               	rlcf	plusw1,f,c
 33859  0150DE  0EF9               	movlw	-7
 33860  0150E0  36E3               	rlcf	plusw1,f,c
 33861  0150E2  0EFA               	movlw	-6
 33862  0150E4  36E3               	rlcf	plusw1,f,c
 33863                           
 33864                           ;stkvar	_temp @ sp[(-13)+8]
 33865  0150E6  50E1               	movf	fsr1l,w,c
 33866  0150E8  0FFB               	addlw	-5
 33867  0150EA  6ED9               	movwf	fsr2l,c
 33868  0150EC  50E2               	movf	fsr1h,w,c
 33869  0150EE  6EDA               	movwf	fsr2h,c
 33870  0150F0  0EFF               	movlw	255
 33871  0150F2  22DA               	addwfc	fsr2h,f,c
 33872  0150F4  06DE               	decf	postinc2,f,c
 33873  0150F6  0E00               	movlw	0
 33874  0150F8  5ADD               	subwfb	postdec2,f,c
 33875  0150FA                     l9343:
 33876                           
 33877                           ;stkvar	_prod @ sp[(-13)+0]
 33878  0150FA  0EF5               	movlw	-11
 33879  0150FC  AEE3               	btfss	plusw1,7,c
 33880  0150FE  D7DC               	goto	l9333
 33881                           
 33882                           ;stkvar	_aexp @ sp[(-13)+11]
 33883  015100  0EFE               	movlw	-2
 33884  015102  6AE3               	clrf	plusw1,c
 33885                           
 33886                           ;stkvar	_grs @ sp[(-13)+4]
 33887  015104  0EFA               	movlw	-6
 33888  015106  AEE3               	btfss	plusw1,7,c
 33889  015108  D020               	goto	l9357
 33890                           
 33891                           ;stkvar	_grs @ sp[(-13)+4]
 33892  01510A  50E1               	movf	fsr1l,w,c
 33893  01510C  0FF7               	addlw	-9
 33894  01510E  6ED9               	movwf	fsr2l,c
 33895  015110  50E2               	movf	fsr1h,w,c
 33896  015112  6EDA               	movwf	fsr2h,c
 33897  015114  0EFF               	movlw	255
 33898  015116  22DA               	addwfc	fsr2h,f,c
 33899  015118  0EFF               	movlw	255
 33900  01511A  14DE               	andwf	postinc2,w,c
 33901  01511C  6E09               	movwf	(btemp+8)^0,c
 33902  01511E  0EFF               	movlw	255
 33903  015120  14DE               	andwf	postinc2,w,c
 33904  015122  6E0A               	movwf	(btemp+9)^0,c
 33905  015124  0EFF               	movlw	255
 33906  015126  14DE               	andwf	postinc2,w,c
 33907  015128  6E0B               	movwf	(btemp+10)^0,c
 33908  01512A  0E7F               	movlw	127
 33909  01512C  14DE               	andwf	postinc2,w,c
 33910  01512E  6E0C               	movwf	(btemp+11)^0,c
 33911  015130  5009               	movf	(btemp+8)^0,w,c
 33912  015132  100A               	iorwf	(btemp+9)^0,w,c
 33913  015134  100B               	iorwf	(btemp+10)^0,w,c
 33914  015136  100C               	iorwf	(btemp+11)^0,w,c
 33915  015138  B4D8               	btfsc	status,2,c
 33916  01513A  D004               	goto	l9353
 33917  01513C                     u7560:
 33918                           
 33919                           ;stkvar	_aexp @ sp[(-13)+11]
 33920  01513C  0EFE               	movlw	-2
 33921  01513E  6AE3               	clrf	plusw1,c
 33922  015140  2AE3               	incf	plusw1,f,c
 33923  015142  D003               	goto	l9357
 33924  015144                     l9353:
 33925                           
 33926                           ;stkvar	_prod @ sp[(-13)+0]
 33927  015144  0EF3               	movlw	-13
 33928  015146  B0E3               	btfsc	plusw1,0,c
 33929  015148  D7F9               	goto	u7560
 33930  01514A                     l9357:
 33931                           
 33932                           ;stkvar	_aexp @ sp[(-13)+11]
 33933  01514A  0EFE               	movlw	-2
 33934  01514C  50E3               	movf	plusw1,w,c
 33935  01514E  B4D8               	btfsc	status,2,c
 33936  015150  D036               	goto	l9367
 33937                           
 33938                           ;stkvar	_prod @ sp[(-13)+0]
 33939  015152  50E1               	movf	fsr1l,w,c
 33940  015154  0FF3               	addlw	-13
 33941  015156  6ED9               	movwf	fsr2l,c
 33942  015158  50E2               	movf	fsr1h,w,c
 33943  01515A  6EDA               	movwf	fsr2h,c
 33944  01515C  0EFF               	movlw	255
 33945  01515E  22DA               	addwfc	fsr2h,f,c
 33946  015160  2ADE               	incf	postinc2,f,c
 33947  015162  0E00               	movlw	0
 33948  015164  22DE               	addwfc	postinc2,f,c
 33949  015166  22DE               	addwfc	postinc2,f,c
 33950  015168  22DE               	addwfc	postinc2,f,c
 33951                           
 33952                           ;stkvar	_prod @ sp[(-13)+0]
 33953  01516A  0EF6               	movlw	-10
 33954  01516C  A0E3               	btfss	plusw1,0,c
 33955  01516E  D027               	goto	l9367
 33956  015170  0E01               	movlw	1
 33957  015172  6E0C               	movwf	(btemp+11)^0,c
 33958                           
 33959                           ;stkvar	_prod @ sp[(-13)+0]
 33960  015174  50E1               	movf	fsr1l,w,c
 33961  015176  0FF3               	addlw	-13
 33962  015178  6ED9               	movwf	fsr2l,c
 33963  01517A  50E2               	movf	fsr1h,w,c
 33964  01517C  6EDA               	movwf	fsr2h,c
 33965  01517E  0EFF               	movlw	255
 33966  015180  22DA               	addwfc	fsr2h,f,c
 33967  015182  280C               	incf	(btemp+11)^0,w,c
 33968  015184  52DE               	movf	postinc2,f,c
 33969  015186  D008               	goto	u7600
 33970  015188                     u7605:
 33971  015188  52DE               	movf	postinc2,f,c
 33972  01518A  90D8               	bcf	status,0,c
 33973  01518C  BEDC               	btfsc	preinc2,7,c
 33974  01518E  80D8               	bsf	status,0,c
 33975  015190  32DD               	rrcf	postdec2,f,c
 33976  015192  32DD               	rrcf	postdec2,f,c
 33977  015194  32DD               	rrcf	postdec2,f,c
 33978  015196  32DE               	rrcf	postinc2,f,c
 33979  015198                     u7600:
 33980  015198  2EE8               	decfsz	wreg,f,c
 33981  01519A  D7F6               	goto	u7605
 33982                           
 33983                           ;stkvar	_temp @ sp[(-13)+8]
 33984  01519C  0EFB               	movlw	-5
 33985  01519E  50E3               	movf	plusw1,w,c
 33986  0151A0  0F01               	addlw	1
 33987  0151A2  6E01               	movwf	btemp^0,c
 33988  0151A4  0EFB               	movlw	-5
 33989  0151A6  0060  F007  FFE3   	movff	btemp,plusw1
 33990  0151AC  6A01               	clrf	btemp^0,c
 33991  0151AE  0EFC               	movlw	-4
 33992  0151B0  50E3               	movf	plusw1,w,c
 33993  0151B2  2001               	addwfc	btemp^0,w,c
 33994  0151B4  6E01               	movwf	btemp^0,c
 33995  0151B6  0EFC               	movlw	-4
 33996  0151B8  0060  F007  FFE3   	movff	btemp,plusw1
 33997  0151BE                     l9367:
 33998                           
 33999                           ;stkvar	_temp @ sp[(-13)+8]
 34000  0151BE  0EFC               	movlw	-4
 34001  0151C0  BEE3               	btfsc	plusw1,7,c
 34002  0151C2  D020               	goto	l9371
 34003  0151C4  0EFC               	movlw	-4
 34004  0151C6  50E3               	movf	plusw1,w,c
 34005  0151C8  E104               	bnz	u7610
 34006  0151CA  0EFB               	movlw	-5
 34007  0151CC  28E3               	incf	plusw1,w,c
 34008  0151CE  A0D8               	btfss	status,0,c
 34009  0151D0  D019               	goto	l9371
 34010  0151D2                     u7610:
 34011  0151D2  0E00               	movlw	0
 34012  0151D4  6E09               	movwf	(btemp+8)^0,c
 34013  0151D6  0E00               	movlw	0
 34014  0151D8  6E0A               	movwf	(btemp+9)^0,c
 34015  0151DA  0E80               	movlw	128
 34016  0151DC  6E0B               	movwf	(btemp+10)^0,c
 34017  0151DE  0E7F               	movlw	127
 34018  0151E0  6E0C               	movwf	(btemp+11)^0,c
 34019                           
 34020                           ;stkvar	_prod @ sp[(-13)+0]
 34021  0151E2  0EF3               	movlw	-13
 34022  0151E4  0060  F027  FFE3   	movff	btemp+8,plusw1
 34023  0151EA  0EF4               	movlw	-12
 34024  0151EC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34025  0151F2  0EF5               	movlw	-11
 34026  0151F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34027  0151FA  0EF6               	movlw	-10
 34028  0151FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 34029  015202  D044               	goto	l9387
 34030  015204                     l9371:
 34031                           
 34032                           ;stkvar	_temp @ sp[(-13)+8]
 34033  015204  0EFC               	movlw	-4
 34034  015206  BEE3               	btfsc	plusw1,7,c
 34035  015208  D007               	goto	u7620
 34036  01520A  0EFC               	movlw	-4
 34037  01520C  50E3               	movf	plusw1,w,c
 34038  01520E  E10F               	bnz	l9377
 34039  015210  0EFB               	movlw	-5
 34040  015212  04E3               	decf	plusw1,w,c
 34041  015214  B0D8               	btfsc	status,0,c
 34042  015216  D00B               	goto	l9377
 34043  015218                     u7620:
 34044                           
 34045                           ;stkvar	_prod @ sp[(-13)+0]
 34046  015218  0EF3               	movlw	-13
 34047  01521A  6AE3               	clrf	plusw1,c
 34048  01521C  0EF4               	movlw	-12
 34049  01521E  6AE3               	clrf	plusw1,c
 34050  015220  0EF5               	movlw	-11
 34051  015222  6AE3               	clrf	plusw1,c
 34052  015224  0EF6               	movlw	-10
 34053  015226  6AE3               	clrf	plusw1,c
 34054                           
 34055                           ;stkvar	_sign @ sp[(-13)+12]
 34056  015228  0EFF               	movlw	-1
 34057  01522A  6AE3               	clrf	plusw1,c
 34058  01522C  D02F               	goto	l9387
 34059  01522E                     l9377:
 34060                           
 34061                           ;stkvar	_temp @ sp[(-13)+8]
 34062                           ;stkvar	_bexp @ sp[(-13)+10]
 34063  01522E  0EFB               	movlw	-5
 34064  015230  006F FF8C  F001    	movff	plusw1,btemp
 34065  015236  0EFD               	movlw	-3
 34066  015238  0060  F007  FFE3   	movff	btemp,plusw1
 34067                           
 34068                           ;stkvar	_prod @ sp[(-13)+0]
 34069  01523E  50E1               	movf	fsr1l,w,c
 34070  015240  0FF3               	addlw	-13
 34071  015242  6ED9               	movwf	fsr2l,c
 34072  015244  50E2               	movf	fsr1h,w,c
 34073  015246  6EDA               	movwf	fsr2h,c
 34074  015248  0EFF               	movlw	255
 34075  01524A  22DA               	addwfc	fsr2h,f,c
 34076  01524C  0EFF               	movlw	255
 34077  01524E  16DE               	andwf	postinc2,f,c
 34078  015250  0EFF               	movlw	255
 34079  015252  16DE               	andwf	postinc2,f,c
 34080  015254  0E7F               	movlw	127
 34081  015256  16DE               	andwf	postinc2,f,c
 34082  015258  0E00               	movlw	0
 34083  01525A  16DE               	andwf	postinc2,f,c
 34084                           
 34085                           ;stkvar	_bexp @ sp[(-13)+10]
 34086  01525C  0EFD               	movlw	-3
 34087  01525E  A0E3               	btfss	plusw1,0,c
 34088  015260  D008               	goto	l9385
 34089                           
 34090                           ;stkvar	_prod @ sp[(-13)+0]
 34091  015262  0EF5               	movlw	245
 34092  015264  24E1               	addwf	fsr1l,w,c
 34093  015266  6ED9               	movwf	fsr2l,c
 34094  015268  0EFF               	movlw	255
 34095  01526A  20E2               	addwfc	fsr1h,w,c
 34096  01526C  6EDA               	movwf	fsr2h,c
 34097  01526E  0E00               	movlw	0
 34098  015270  8EDB               	bsf	plusw2,7,c
 34099  015272                     l9385:
 34100                           
 34101                           ;stkvar	_prod @ sp[(-13)+0]
 34102  015272  0EF6               	movlw	246
 34103  015274  24E1               	addwf	fsr1l,w,c
 34104  015276  6ED9               	movwf	fsr2l,c
 34105  015278  0EFF               	movlw	255
 34106  01527A  20E2               	addwfc	fsr1h,w,c
 34107  01527C  6EDA               	movwf	fsr2h,c
 34108                           
 34109                           ;stkvar	_bexp @ sp[(-13)+10]
 34110  01527E  0EFD               	movlw	-3
 34111  015280  006F FF8C  F00C    	movff	plusw1,btemp+11
 34112  015286  90D8               	bcf	status,0,c
 34113  015288  300C               	rrcf	(btemp+11)^0,w,c
 34114  01528A  6EDF               	movwf	indf2,c
 34115  01528C                     l9387:
 34116                           
 34117                           ;stkvar	_sign @ sp[(-13)+12]
 34118  01528C  0EFF               	movlw	-1
 34119  01528E  006F FF8C  F00C    	movff	plusw1,btemp+11
 34120                           
 34121                           ;stkvar	_prod @ sp[(-13)+0]
 34122  015294  0EF6               	movlw	246
 34123  015296  24E1               	addwf	fsr1l,w,c
 34124  015298  6ED9               	movwf	fsr2l,c
 34125  01529A  0EFF               	movlw	255
 34126  01529C  20E2               	addwfc	fsr1h,w,c
 34127  01529E  6EDA               	movwf	fsr2h,c
 34128  0152A0  500C               	movf	(btemp+11)^0,w,c
 34129  0152A2  12DF               	iorwf	indf2,f,c
 34130                           
 34131                           ;stkvar	_prod @ sp[(-13)+0]
 34132  0152A4  0EF3               	movlw	-13
 34133  0152A6  006F FF8C  F001    	movff	plusw1,btemp
 34134  0152AC  0EF4               	movlw	-12
 34135  0152AE  006F FF8C  F002    	movff	plusw1,btemp+1
 34136  0152B4  0EF5               	movlw	-11
 34137  0152B6  006F FF8C  F003    	movff	plusw1,btemp+2
 34138  0152BC  0EF6               	movlw	-10
 34139  0152BE  006F FF8C  F004    	movff	plusw1,btemp+3
 34140  0152C4                     l3300:
 34141                           
 34142                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 34143  0152C4  0EEB               	movlw	235
 34144  0152C6  26E1               	addwf	fsr1l,f,c
 34145  0152C8  0EFF               	movlw	255
 34146  0152CA  22E2               	addwfc	fsr1h,f,c
 34147  0152CC  0012               	return		;funcret
 34148  0152CE                     __end_of___flmul:
 34149                           	opt callstack 0
 34150                           
 34151 ;; *************** function _SYSTEM_Initialize *****************
 34152 ;; Defined at:
 34153 ;;		line 50 in file "mcc_generated_files/mcc.c"
 34154 ;; Parameters:    Size  Location     Type
 34155 ;;		None
 34156 ;; Auto vars:     Size  Location     Type
 34157 ;;		None
 34158 ;; Return value:  Size  Location     Type
 34159 ;;                  1  [STACK] void 
 34160 ;; Registers used:
 34161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 34162 ;; Tracked objects:
 34163 ;;		On entry : 0/0
 34164 ;;		On exit  : 3F/3C
 34165 ;;		Unchanged: 0/0
 34166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34171 ;;Total ram usage:        0 bytes
 34172 ;; Hardware stack levels used:    1
 34173 ;; Hardware stack levels required when called:   17
 34174 ;; This function calls:
 34175 ;;		_ADCC_Initialize
 34176 ;;		_CLKREF_Initialize
 34177 ;;		_CRC_Initialize
 34178 ;;		_DMA1_Initialize
 34179 ;;		_DMA2_Initialize
 34180 ;;		_EXT_INT_Initialize
 34181 ;;		_FVR_Initialize
 34182 ;;		_INTERRUPT_Initialize
 34183 ;;		_OSCILLATOR_Initialize
 34184 ;;		_PIN_MANAGER_Initialize
 34185 ;;		_PMD_Initialize
 34186 ;;		_PWM8_Initialize
 34187 ;;		_SPI1_Initialize
 34188 ;;		_TMR2_Initialize
 34189 ;;		_TMR3_Initialize
 34190 ;;		_TMR5_Initialize
 34191 ;;		_TMR6_Initialize
 34192 ;;		_UART1_Initialize
 34193 ;;		_UART2_Initialize
 34194 ;; This function is called by:
 34195 ;;		_main
 34196 ;; This function uses a reentrant model
 34197 ;;
 34198                           
 34199                           	psect	text130
 34200  01CCCE                     __ptext130:
 34201                           	opt callstack 0
 34202  01CCCE                     _SYSTEM_Initialize:
 34203                           	opt callstack 13
 34204                           
 34205                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 34206                           
 34207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34208                           ;incstack = 0
 34209  01CCCE  EC45  F0E4         	call	_INTERRUPT_Initialize	;wreg free
 34210                           
 34211                           ; BSR set to: 57
 34212                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 34213  01CCD2  EC38  F0ED         	call	_PMD_Initialize	;wreg free
 34214                           
 34215                           ; BSR set to: 57
 34216                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 34217  01CCD6  ECE7  F0E0         	call	_PIN_MANAGER_Initialize	;wreg free
 34218                           
 34219                           ; BSR set to: 58
 34220                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 34221  01CCDA  EC2D  F0ED         	call	_OSCILLATOR_Initialize	;wreg free
 34222                           
 34223                           ; BSR set to: 57
 34224                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 34225  01CCDE  ECD2  F0ED         	call	_FVR_Initialize	;wreg free
 34226                           
 34227                           ; BSR set to: 62
 34228                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 34229  01CCE2  EC30  F0E1         	call	_CRC_Initialize	;wreg free
 34230                           
 34231                           ; BSR set to: 0
 34232                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 34233  01CCE6  ECA7  F0E3         	call	_ADCC_Initialize	;wreg free
 34234                           
 34235                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 34236  01CCEA  EC22  F0ED         	call	_PWM8_Initialize	;wreg free
 34237                           
 34238                           ; BSR set to: 63
 34239                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 34240  01CCEE  EC0B  F0ED         	call	_TMR2_Initialize	;wreg free
 34241                           
 34242                           ; BSR set to: 57
 34243                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 34244  01CCF2  ECAB  F0E9         	call	_EXT_INT_Initialize	;wreg free
 34245                           
 34246                           ; BSR set to: 57
 34247                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 34248  01CCF6  EC98  F0EA         	call	_TMR6_Initialize	;wreg free
 34249                           
 34250                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 34251  01CCFA  EC46  F0E7         	call	_TMR3_Initialize	;wreg free
 34252                           
 34253                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 34254  01CCFE  EC22  F0E7         	call	_TMR5_Initialize	;wreg free
 34255                           
 34256                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 34257  01CD02  ECFE  F0E6         	call	_UART1_Initialize	;wreg free
 34258                           
 34259                           ; BSR set to: 57
 34260                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 34261  01CD06  EC0C  F0E5         	call	_UART2_Initialize	;wreg free
 34262                           
 34263                           ; BSR set to: 57
 34264                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 34265  01CD0A  EC17  F0ED         	call	_SPI1_Initialize	;wreg free
 34266                           
 34267                           ; BSR set to: 61
 34268                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 34269  01CD0E  EC96  F0E5         	call	_DMA2_Initialize	;wreg free
 34270                           
 34271                           ; BSR set to: 59
 34272                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 34273  01CD12  EC72  F0E3         	call	_DMA1_Initialize	;wreg free
 34274                           
 34275                           ; BSR set to: 59
 34276                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 34277  01CD16  ECA1  F0ED         	call	_CLKREF_Initialize	;wreg free
 34278                           
 34279                           ; BSR set to: 60
 34280                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34281  01CD1A  0012               	return		;funcret
 34282  01CD1C                     __end_of_SYSTEM_Initialize:
 34283                           	opt callstack 0
 34284                           
 34285 ;; *************** function _UART2_Initialize *****************
 34286 ;; Defined at:
 34287 ;;		line 78 in file "mcc_generated_files/uart2.c"
 34288 ;; Parameters:    Size  Location     Type
 34289 ;;		None
 34290 ;; Auto vars:     Size  Location     Type
 34291 ;;		None
 34292 ;; Return value:  Size  Location     Type
 34293 ;;                  1  [STACK] void 
 34294 ;; Registers used:
 34295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34296 ;; Tracked objects:
 34297 ;;		On entry : 3F/39
 34298 ;;		On exit  : 3F/39
 34299 ;;		Unchanged: 0/0
 34300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34305 ;;Total ram usage:        0 bytes
 34306 ;; Hardware stack levels used:    1
 34307 ;; Hardware stack levels required when called:   16
 34308 ;; This function calls:
 34309 ;;		_UART2_SetRxInterruptHandler
 34310 ;;		_UART2_SetTxInterruptHandler
 34311 ;; This function is called by:
 34312 ;;		_SYSTEM_Initialize
 34313 ;; This function uses a reentrant model
 34314 ;;
 34315                           
 34316                           	psect	text131
 34317  01CA18                     __ptext131:
 34318                           	opt callstack 0
 34319  01CA18                     _UART2_Initialize:
 34320                           	opt callstack 13
 34321                           
 34322                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 34323                           
 34324                           ; BSR set to: 60
 34325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34326                           ;incstack = 0
 34327  01CA18  0139               	movlb	57	; () banked
 34328  01CA1A  9596               	bcf	150,2,b	;volatile
 34329                           
 34330                           ; BSR set to: 57
 34331                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 34332  01CA1C  0E12               	movlw	low _UART2_Receive_ISR
 34333  01CA1E  6EE6               	movwf	postinc1,c
 34334  01CA20  0ED9               	movlw	high _UART2_Receive_ISR
 34335  01CA22  6EE6               	movwf	postinc1,c
 34336  01CA24  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 34337  01CA26  6EE6               	movwf	postinc1,c
 34338  01CA28  ECE9  F0EA         	call	_UART2_SetRxInterruptHandler	;wreg free
 34339                           
 34340                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 34341  01CA2C  0139               	movlb	57	; () banked
 34342  01CA2E  9796               	bcf	150,3,b	;volatile
 34343                           
 34344                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 34345  01CA30  0E04               	movlw	low _UART2_Transmit_ISR
 34346  01CA32  6EE6               	movwf	postinc1,c
 34347  01CA34  0ED5               	movlw	high _UART2_Transmit_ISR
 34348  01CA36  6EE6               	movwf	postinc1,c
 34349  01CA38  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 34350  01CA3A  6EE6               	movwf	postinc1,c
 34351  01CA3C  ECD5  F0EA         	call	_UART2_SetTxInterruptHandler	;wreg free
 34352                           
 34353                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 34354  01CA40  013D               	movlb	61	; () banked
 34355  01CA42  6BD4               	clrf	212,b	;volatile
 34356                           
 34357                           ; BSR set to: 61
 34358                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 34359  01CA44  6BD6               	clrf	214,b	;volatile
 34360                           
 34361                           ; BSR set to: 61
 34362                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 34363  01CA46  6BD8               	clrf	216,b	;volatile
 34364                           
 34365                           ; BSR set to: 61
 34366                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 34367  01CA48  0EB0               	movlw	176
 34368  01CA4A  6FDA               	movwf	218,b	;volatile
 34369                           
 34370                           ; BSR set to: 61
 34371                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 34372  01CA4C  0E80               	movlw	128
 34373  01CA4E  6FDB               	movwf	219,b	;volatile
 34374                           
 34375                           ; BSR set to: 61
 34376                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 34377  01CA50  6BDC               	clrf	220,b	;volatile
 34378                           
 34379                           ; BSR set to: 61
 34380                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 34381  01CA52  0E82               	movlw	130
 34382  01CA54  6FDD               	movwf	221,b	;volatile
 34383                           
 34384                           ; BSR set to: 61
 34385                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 34386  01CA56  0E06               	movlw	6
 34387  01CA58  6FDE               	movwf	222,b	;volatile
 34388                           
 34389                           ; BSR set to: 61
 34390                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 34391  01CA5A  6BDF               	clrf	223,b	;volatile
 34392                           
 34393                           ; BSR set to: 61
 34394                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 34395  01CA5C  6BE0               	clrf	224,b	;volatile
 34396                           
 34397                           ; BSR set to: 61
 34398                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 34399  01CA5E  6BE1               	clrf	225,b	;volatile
 34400                           
 34401                           ; BSR set to: 61
 34402                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 34403  01CA60  6BE2               	clrf	226,b	;volatile
 34404                           
 34405                           ; BSR set to: 61
 34406                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 34407  01CA62  0100               	movlb	0	; () banked
 34408  01CA64  6BD2               	clrf	_uart2TxHead& (0+255),b	;volatile
 34409                           
 34410                           ; BSR set to: 0
 34411                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 34412  01CA66  6A46               	clrf	_uart2TxTail^0,c	;volatile
 34413                           
 34414                           ; BSR set to: 0
 34415                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 34416  01CA68  0E40               	movlw	64
 34417  01CA6A  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 34418                           
 34419                           ; BSR set to: 0
 34420                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 34421  01CA6C  6A44               	clrf	_uart2RxHead^0,c	;volatile
 34422                           
 34423                           ; BSR set to: 0
 34424                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 34425  01CA6E  6BD1               	clrf	_uart2RxTail& (0+255),b	;volatile
 34426                           
 34427                           ; BSR set to: 0
 34428                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 34429  01CA70  6BD0               	clrf	_uart2RxCount& (0+255),b	;volatile
 34430                           
 34431                           ; BSR set to: 0
 34432                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 34433  01CA72  0139               	movlb	57	; () banked
 34434  01CA74  8596               	bsf	150,2,b	;volatile
 34435                           
 34436                           ; BSR set to: 57
 34437                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34438  01CA76  0012               	return		;funcret
 34439  01CA78                     __end_of_UART2_Initialize:
 34440                           	opt callstack 0
 34441                           
 34442 ;; *************** function _UART2_SetTxInterruptHandler *****************
 34443 ;; Defined at:
 34444 ;;		line 252 in file "mcc_generated_files/uart2.c"
 34445 ;; Parameters:    Size  Location     Type
 34446 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34447 ;;		 -> UART2_Transmit_ISR(1), 
 34448 ;; Auto vars:     Size  Location     Type
 34449 ;;		None
 34450 ;; Return value:  Size  Location     Type
 34451 ;;                  1  [STACK] void 
 34452 ;; Registers used:
 34453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34454 ;; Tracked objects:
 34455 ;;		On entry : 3F/39
 34456 ;;		On exit  : 0/0
 34457 ;;		Unchanged: 0/0
 34458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34463 ;;Total ram usage:        0 bytes
 34464 ;; Hardware stack levels used:    1
 34465 ;; Hardware stack levels required when called:   15
 34466 ;; This function calls:
 34467 ;;		Nothing
 34468 ;; This function is called by:
 34469 ;;		_UART2_Initialize
 34470 ;; This function uses a reentrant model
 34471 ;;
 34472                           
 34473                           	psect	text132
 34474  01D5AA                     __ptext132:
 34475                           	opt callstack 0
 34476  01D5AA                     _UART2_SetTxInterruptHandler:
 34477                           	opt callstack 13
 34478                           
 34479                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 34480                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34481                           
 34482                           ; BSR set to: 57
 34483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34484                           ;incstack = 0
 34485  01D5AA  50E1               	movf	fsr1l,w,c
 34486  01D5AC  0FFD               	addlw	-3
 34487  01D5AE  6ED9               	movwf	fsr2l,c
 34488  01D5B0  50E2               	movf	fsr1h,w,c
 34489  01D5B2  6EDA               	movwf	fsr2h,c
 34490  01D5B4  0EFF               	movlw	255
 34491  01D5B6  22DA               	addwfc	fsr2h,f,c
 34492  01D5B8  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 34493  01D5BE  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 34494  01D5C4  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 34495                           
 34496                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34497  01D5CA  52E5               	movf	postdec1,f,c
 34498  01D5CC  52E5               	movf	postdec1,f,c
 34499  01D5CE  52E5               	movf	postdec1,f,c
 34500  01D5D0  0012               	return		;funcret
 34501  01D5D2                     __end_of_UART2_SetTxInterruptHandler:
 34502                           	opt callstack 0
 34503                           
 34504 ;; *************** function _UART2_SetRxInterruptHandler *****************
 34505 ;; Defined at:
 34506 ;;		line 248 in file "mcc_generated_files/uart2.c"
 34507 ;; Parameters:    Size  Location     Type
 34508 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34509 ;;		 -> UART2_Receive_ISR(1), 
 34510 ;; Auto vars:     Size  Location     Type
 34511 ;;		None
 34512 ;; Return value:  Size  Location     Type
 34513 ;;                  1  [STACK] void 
 34514 ;; Registers used:
 34515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34516 ;; Tracked objects:
 34517 ;;		On entry : 3F/39
 34518 ;;		On exit  : 0/0
 34519 ;;		Unchanged: 0/0
 34520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34525 ;;Total ram usage:        0 bytes
 34526 ;; Hardware stack levels used:    1
 34527 ;; Hardware stack levels required when called:   15
 34528 ;; This function calls:
 34529 ;;		Nothing
 34530 ;; This function is called by:
 34531 ;;		_UART2_Initialize
 34532 ;; This function uses a reentrant model
 34533 ;;
 34534                           
 34535                           	psect	text133
 34536  01D5D2                     __ptext133:
 34537                           	opt callstack 0
 34538  01D5D2                     _UART2_SetRxInterruptHandler:
 34539                           	opt callstack 13
 34540                           
 34541                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 34542                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34543                           
 34544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34545                           ;incstack = 0
 34546  01D5D2  50E1               	movf	fsr1l,w,c
 34547  01D5D4  0FFD               	addlw	-3
 34548  01D5D6  6ED9               	movwf	fsr2l,c
 34549  01D5D8  50E2               	movf	fsr1h,w,c
 34550  01D5DA  6EDA               	movwf	fsr2h,c
 34551  01D5DC  0EFF               	movlw	255
 34552  01D5DE  22DA               	addwfc	fsr2h,f,c
 34553  01D5E0  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 34554  01D5E6  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 34555  01D5EC  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 34556                           
 34557                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34558  01D5F2  52E5               	movf	postdec1,f,c
 34559  01D5F4  52E5               	movf	postdec1,f,c
 34560  01D5F6  52E5               	movf	postdec1,f,c
 34561  01D5F8  0012               	return		;funcret
 34562  01D5FA                     __end_of_UART2_SetRxInterruptHandler:
 34563                           	opt callstack 0
 34564                           
 34565 ;; *************** function _UART1_Initialize *****************
 34566 ;; Defined at:
 34567 ;;		line 75 in file "mcc_generated_files/uart1.c"
 34568 ;; Parameters:    Size  Location     Type
 34569 ;;		None
 34570 ;; Auto vars:     Size  Location     Type
 34571 ;;		None
 34572 ;; Return value:  Size  Location     Type
 34573 ;;                  1  [STACK] void 
 34574 ;; Registers used:
 34575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34576 ;; Tracked objects:
 34577 ;;		On entry : 0/39
 34578 ;;		On exit  : 3F/39
 34579 ;;		Unchanged: 0/0
 34580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34585 ;;Total ram usage:        0 bytes
 34586 ;; Hardware stack levels used:    1
 34587 ;; Hardware stack levels required when called:   16
 34588 ;; This function calls:
 34589 ;;		_UART1_SetRxInterruptHandler
 34590 ;; This function is called by:
 34591 ;;		_SYSTEM_Initialize
 34592 ;; This function uses a reentrant model
 34593 ;;
 34594                           
 34595                           	psect	text134
 34596  01CDFC                     __ptext134:
 34597                           	opt callstack 0
 34598  01CDFC                     _UART1_Initialize:
 34599                           	opt callstack 13
 34600                           
 34601                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 34602                           
 34603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34604                           ;incstack = 0
 34605  01CDFC  0139               	movlb	57	; () banked
 34606  01CDFE  9793               	bcf	147,3,b	;volatile
 34607                           
 34608                           ; BSR set to: 57
 34609                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 34610  01CE00  0EAA               	movlw	low _UART1_Receive_ISR
 34611  01CE02  6EE6               	movwf	postinc1,c
 34612  01CE04  0ED9               	movlw	high _UART1_Receive_ISR
 34613  01CE06  6EE6               	movwf	postinc1,c
 34614  01CE08  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 34615  01CE0A  6EE6               	movwf	postinc1,c
 34616  01CE0C  ECFD  F0EA         	call	_UART1_SetRxInterruptHandler	;wreg free
 34617                           
 34618                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 34619  01CE10  013D               	movlb	61	; () banked
 34620  01CE12  6BEC               	clrf	236,b	;volatile
 34621                           
 34622                           ; BSR set to: 61
 34623                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 34624  01CE14  6BED               	clrf	237,b	;volatile
 34625                           
 34626                           ; BSR set to: 61
 34627                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 34628  01CE16  6BEE               	clrf	238,b	;volatile
 34629                           
 34630                           ; BSR set to: 61
 34631                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 34632  01CE18  6BEF               	clrf	239,b	;volatile
 34633                           
 34634                           ; BSR set to: 61
 34635                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 34636  01CE1A  6BF0               	clrf	240,b	;volatile
 34637                           
 34638                           ; BSR set to: 61
 34639                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 34640  01CE1C  6BF1               	clrf	241,b	;volatile
 34641                           
 34642                           ; BSR set to: 61
 34643                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 34644  01CE1E  0EB0               	movlw	176
 34645  01CE20  6FF2               	movwf	242,b	;volatile
 34646                           
 34647                           ; BSR set to: 61
 34648                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 34649  01CE22  0E80               	movlw	128
 34650  01CE24  6FF3               	movwf	243,b	;volatile
 34651                           
 34652                           ; BSR set to: 61
 34653                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 34654  01CE26  6BF4               	clrf	244,b	;volatile
 34655                           
 34656                           ; BSR set to: 61
 34657                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 34658  01CE28  0E8A               	movlw	138
 34659  01CE2A  6FF5               	movwf	245,b	;volatile
 34660                           
 34661                           ; BSR set to: 61
 34662                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 34663  01CE2C  6BF6               	clrf	246,b	;volatile
 34664                           
 34665                           ; BSR set to: 61
 34666                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 34667  01CE2E  6BF7               	clrf	247,b	;volatile
 34668                           
 34669                           ; BSR set to: 61
 34670                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 34671  01CE30  6BF8               	clrf	248,b	;volatile
 34672                           
 34673                           ; BSR set to: 61
 34674                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 34675  01CE32  6BF9               	clrf	249,b	;volatile
 34676                           
 34677                           ; BSR set to: 61
 34678                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 34679  01CE34  6BFA               	clrf	250,b	;volatile
 34680                           
 34681                           ; BSR set to: 61
 34682                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 34683  01CE36  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34684                           
 34685                           ; BSR set to: 61
 34686                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 34687  01CE38  0100               	movlb	0	; () banked
 34688  01CE3A  6BD4               	clrf	_uart1RxTail& (0+255),b	;volatile
 34689                           
 34690                           ; BSR set to: 0
 34691                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 34692  01CE3C  6BD3               	clrf	_uart1RxCount& (0+255),b	;volatile
 34693                           
 34694                           ; BSR set to: 0
 34695                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 34696  01CE3E  0139               	movlb	57	; () banked
 34697  01CE40  8793               	bsf	147,3,b	;volatile
 34698                           
 34699                           ; BSR set to: 57
 34700                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34701  01CE42  0012               	return		;funcret
 34702  01CE44                     __end_of_UART1_Initialize:
 34703                           	opt callstack 0
 34704                           
 34705 ;; *************** function _UART1_SetRxInterruptHandler *****************
 34706 ;; Defined at:
 34707 ;;		line 207 in file "mcc_generated_files/uart1.c"
 34708 ;; Parameters:    Size  Location     Type
 34709 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34710 ;;		 -> UART1_Receive_ISR(1), 
 34711 ;; Auto vars:     Size  Location     Type
 34712 ;;		None
 34713 ;; Return value:  Size  Location     Type
 34714 ;;                  1  [STACK] void 
 34715 ;; Registers used:
 34716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34717 ;; Tracked objects:
 34718 ;;		On entry : 3F/39
 34719 ;;		On exit  : 0/0
 34720 ;;		Unchanged: 0/0
 34721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34726 ;;Total ram usage:        0 bytes
 34727 ;; Hardware stack levels used:    1
 34728 ;; Hardware stack levels required when called:   15
 34729 ;; This function calls:
 34730 ;;		Nothing
 34731 ;; This function is called by:
 34732 ;;		_UART1_Initialize
 34733 ;; This function uses a reentrant model
 34734 ;;
 34735                           
 34736                           	psect	text135
 34737  01D5FA                     __ptext135:
 34738                           	opt callstack 0
 34739  01D5FA                     _UART1_SetRxInterruptHandler:
 34740                           	opt callstack 13
 34741                           
 34742                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 34743                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34744                           
 34745                           ; BSR set to: 57
 34746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34747                           ;incstack = 0
 34748  01D5FA  50E1               	movf	fsr1l,w,c
 34749  01D5FC  0FFD               	addlw	-3
 34750  01D5FE  6ED9               	movwf	fsr2l,c
 34751  01D600  50E2               	movf	fsr1h,w,c
 34752  01D602  6EDA               	movwf	fsr2h,c
 34753  01D604  0EFF               	movlw	255
 34754  01D606  22DA               	addwfc	fsr2h,f,c
 34755  01D608  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 34756  01D60E  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 34757  01D614  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 34758                           
 34759                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34760  01D61A  52E5               	movf	postdec1,f,c
 34761  01D61C  52E5               	movf	postdec1,f,c
 34762  01D61E  52E5               	movf	postdec1,f,c
 34763  01D620  0012               	return		;funcret
 34764  01D622                     __end_of_UART1_SetRxInterruptHandler:
 34765                           	opt callstack 0
 34766                           
 34767 ;; *************** function _TMR6_Initialize *****************
 34768 ;; Defined at:
 34769 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 34770 ;; Parameters:    Size  Location     Type
 34771 ;;		None
 34772 ;; Auto vars:     Size  Location     Type
 34773 ;;		None
 34774 ;; Return value:  Size  Location     Type
 34775 ;;                  1  [STACK] void 
 34776 ;; Registers used:
 34777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34778 ;; Tracked objects:
 34779 ;;		On entry : 3F/39
 34780 ;;		On exit  : 0/0
 34781 ;;		Unchanged: 0/0
 34782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34787 ;;Total ram usage:        0 bytes
 34788 ;; Hardware stack levels used:    1
 34789 ;; Hardware stack levels required when called:   16
 34790 ;; This function calls:
 34791 ;;		_TMR6_SetInterruptHandler
 34792 ;; This function is called by:
 34793 ;;		_SYSTEM_Initialize
 34794 ;; This function uses a reentrant model
 34795 ;;
 34796                           
 34797                           	psect	text136
 34798  01D530                     __ptext136:
 34799                           	opt callstack 0
 34800  01D530                     _TMR6_Initialize:
 34801                           	opt callstack 13
 34802                           
 34803                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 34804                           
 34805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34806                           ;incstack = 0
 34807  01D530  0E01               	movlw	1
 34808  01D532  6E96               	movwf	150,c	;volatile
 34809                           
 34810                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 34811  01D534  6A95               	clrf	149,c	;volatile
 34812                           
 34813                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 34814  01D536  6A97               	clrf	151,c	;volatile
 34815                           
 34816                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 34817  01D538  0E7C               	movlw	124
 34818  01D53A  6E93               	movwf	147,c	;volatile
 34819                           
 34820                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 34821  01D53C  6A92               	clrf	146,c	;volatile
 34822                           
 34823                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 34824  01D53E  0139               	movlb	57	; () banked
 34825  01D540  91A9               	bcf	169,0,b	;volatile
 34826                           
 34827                           ; BSR set to: 57
 34828                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 34829  01D542  8199               	bsf	153,0,b	;volatile
 34830                           
 34831                           ; BSR set to: 57
 34832                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 34833  01D544  0E1C               	movlw	low _TMR6_DefaultInterruptHandler
 34834  01D546  6EE6               	movwf	postinc1,c
 34835  01D548  0ECD               	movlw	high _TMR6_DefaultInterruptHandler
 34836  01D54A  6EE6               	movwf	postinc1,c
 34837  01D54C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 34838  01D54E  6EE6               	movwf	postinc1,c
 34839  01D550  EC11  F0EB         	call	_TMR6_SetInterruptHandler	;wreg free
 34840                           
 34841                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 34842  01D554  0EE0               	movlw	224
 34843  01D556  6E94               	movwf	148,c	;volatile
 34844                           
 34845                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34846  01D558  0012               	return		;funcret
 34847  01D55A                     __end_of_TMR6_Initialize:
 34848                           	opt callstack 0
 34849                           
 34850 ;; *************** function _TMR6_SetInterruptHandler *****************
 34851 ;; Defined at:
 34852 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 34853 ;; Parameters:    Size  Location     Type
 34854 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34855 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 34856 ;; Auto vars:     Size  Location     Type
 34857 ;;		None
 34858 ;; Return value:  Size  Location     Type
 34859 ;;                  1  [STACK] void 
 34860 ;; Registers used:
 34861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34862 ;; Tracked objects:
 34863 ;;		On entry : 3F/39
 34864 ;;		On exit  : 0/0
 34865 ;;		Unchanged: 0/0
 34866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34871 ;;Total ram usage:        0 bytes
 34872 ;; Hardware stack levels used:    1
 34873 ;; Hardware stack levels required when called:   15
 34874 ;; This function calls:
 34875 ;;		Nothing
 34876 ;; This function is called by:
 34877 ;;		_TMR6_Initialize
 34878 ;; This function uses a reentrant model
 34879 ;;
 34880                           
 34881                           	psect	text137
 34882  01D622                     __ptext137:
 34883                           	opt callstack 0
 34884  01D622                     _TMR6_SetInterruptHandler:
 34885                           	opt callstack 13
 34886                           
 34887                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 34888                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34889                           
 34890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34891                           ;incstack = 0
 34892  01D622  50E1               	movf	fsr1l,w,c
 34893  01D624  0FFD               	addlw	-3
 34894  01D626  6ED9               	movwf	fsr2l,c
 34895  01D628  50E2               	movf	fsr1h,w,c
 34896  01D62A  6EDA               	movwf	fsr2h,c
 34897  01D62C  0EFF               	movlw	255
 34898  01D62E  22DA               	addwfc	fsr2h,f,c
 34899  01D630  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 34900  01D636  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 34901  01D63C  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 34902                           
 34903                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34904  01D642  52E5               	movf	postdec1,f,c
 34905  01D644  52E5               	movf	postdec1,f,c
 34906  01D646  52E5               	movf	postdec1,f,c
 34907  01D648  0012               	return		;funcret
 34908  01D64A                     __end_of_TMR6_SetInterruptHandler:
 34909                           	opt callstack 0
 34910                           
 34911 ;; *************** function _TMR5_Initialize *****************
 34912 ;; Defined at:
 34913 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 34914 ;; Parameters:    Size  Location     Type
 34915 ;;		None
 34916 ;; Auto vars:     Size  Location     Type
 34917 ;;		None
 34918 ;; Return value:  Size  Location     Type
 34919 ;;                  1  [STACK] void 
 34920 ;; Registers used:
 34921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 34922 ;; Tracked objects:
 34923 ;;		On entry : 0/39
 34924 ;;		On exit  : 0/0
 34925 ;;		Unchanged: 0/0
 34926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34931 ;;Total ram usage:        0 bytes
 34932 ;; Hardware stack levels used:    1
 34933 ;; Hardware stack levels required when called:   16
 34934 ;; This function calls:
 34935 ;;		_TMR5_SetInterruptHandler
 34936 ;; This function is called by:
 34937 ;;		_SYSTEM_Initialize
 34938 ;; This function uses a reentrant model
 34939 ;;
 34940                           
 34941                           	psect	text138
 34942  01CE44                     __ptext138:
 34943                           	opt callstack 0
 34944  01CE44                     _TMR5_Initialize:
 34945                           	opt callstack 13
 34946                           
 34947                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 34948                           
 34949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34950                           ;incstack = 0
 34951  01CE44  6A9B               	clrf	155,c	;volatile
 34952                           
 34953                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 34954  01CE46  6A9C               	clrf	156,c	;volatile
 34955                           
 34956                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 34957  01CE48  0E01               	movlw	1
 34958  01CE4A  6E9D               	movwf	157,c	;volatile
 34959                           
 34960                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 34961  01CE4C  0E63               	movlw	99
 34962  01CE4E  6E99               	movwf	153,c	;volatile
 34963                           
 34964                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 34965  01CE50  0EC0               	movlw	192
 34966  01CE52  6E98               	movwf	152,c	;volatile
 34967                           
 34968                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 34969  01CE54  5098               	movf	152,w,c	;volatile
 34970  01CE56  006F FE64  F001    	movff	16281,btemp	;volatile
 34971  01CE5C  6A02               	clrf	(btemp+1)^0,c
 34972  01CE5E  0060  F004  F002   	movff	btemp,btemp+1
 34973  01CE64  6A01               	clrf	btemp^0,c
 34974  01CE66  1001               	iorwf	btemp^0,w,c
 34975  01CE68  0100               	movlb	0	; () banked
 34976  01CE6A  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 34977  01CE6C  5002               	movf	(btemp+1)^0,w,c
 34978  01CE6E  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 34979                           
 34980                           ; BSR set to: 0
 34981                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 34982  01CE70  0139               	movlb	57	; () banked
 34983  01CE72  9DA8               	bcf	168,6,b	;volatile
 34984                           
 34985                           ; BSR set to: 57
 34986                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 34987  01CE74  8D98               	bsf	152,6,b	;volatile
 34988                           
 34989                           ; BSR set to: 57
 34990                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 34991  01CE76  0E18               	movlw	low _TMR5_DefaultInterruptHandler
 34992  01CE78  6EE6               	movwf	postinc1,c
 34993  01CE7A  0ED2               	movlw	high _TMR5_DefaultInterruptHandler
 34994  01CE7C  6EE6               	movwf	postinc1,c
 34995  01CE7E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 34996  01CE80  6EE6               	movwf	postinc1,c
 34997  01CE82  EC25  F0EB         	call	_TMR5_SetInterruptHandler	;wreg free
 34998                           
 34999                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 35000  01CE86  0E31               	movlw	49
 35001  01CE88  6E9A               	movwf	154,c	;volatile
 35002                           
 35003                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35004  01CE8A  0012               	return		;funcret
 35005  01CE8C                     __end_of_TMR5_Initialize:
 35006                           	opt callstack 0
 35007                           
 35008 ;; *************** function _TMR5_SetInterruptHandler *****************
 35009 ;; Defined at:
 35010 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 35011 ;; Parameters:    Size  Location     Type
 35012 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35013 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 35014 ;; Auto vars:     Size  Location     Type
 35015 ;;		None
 35016 ;; Return value:  Size  Location     Type
 35017 ;;                  1  [STACK] void 
 35018 ;; Registers used:
 35019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35020 ;; Tracked objects:
 35021 ;;		On entry : 3F/39
 35022 ;;		On exit  : 0/0
 35023 ;;		Unchanged: 0/0
 35024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35029 ;;Total ram usage:        0 bytes
 35030 ;; Hardware stack levels used:    1
 35031 ;; Hardware stack levels required when called:   15
 35032 ;; This function calls:
 35033 ;;		Nothing
 35034 ;; This function is called by:
 35035 ;;		_TMR5_Initialize
 35036 ;; This function uses a reentrant model
 35037 ;;
 35038                           
 35039                           	psect	text139
 35040  01D64A                     __ptext139:
 35041                           	opt callstack 0
 35042  01D64A                     _TMR5_SetInterruptHandler:
 35043                           	opt callstack 13
 35044                           
 35045                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 35046                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35047                           
 35048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35049                           ;incstack = 0
 35050  01D64A  50E1               	movf	fsr1l,w,c
 35051  01D64C  0FFD               	addlw	-3
 35052  01D64E  6ED9               	movwf	fsr2l,c
 35053  01D650  50E2               	movf	fsr1h,w,c
 35054  01D652  6EDA               	movwf	fsr2h,c
 35055  01D654  0EFF               	movlw	255
 35056  01D656  22DA               	addwfc	fsr2h,f,c
 35057  01D658  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 35058  01D65E  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 35059  01D664  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 35060                           
 35061                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35062  01D66A  52E5               	movf	postdec1,f,c
 35063  01D66C  52E5               	movf	postdec1,f,c
 35064  01D66E  52E5               	movf	postdec1,f,c
 35065  01D670  0012               	return		;funcret
 35066  01D672                     __end_of_TMR5_SetInterruptHandler:
 35067                           	opt callstack 0
 35068                           
 35069 ;; *************** function _TMR3_Initialize *****************
 35070 ;; Defined at:
 35071 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 35072 ;; Parameters:    Size  Location     Type
 35073 ;;		None
 35074 ;; Auto vars:     Size  Location     Type
 35075 ;;		None
 35076 ;; Return value:  Size  Location     Type
 35077 ;;                  1  [STACK] void 
 35078 ;; Registers used:
 35079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 35080 ;; Tracked objects:
 35081 ;;		On entry : 0/39
 35082 ;;		On exit  : 0/0
 35083 ;;		Unchanged: 0/0
 35084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35089 ;;Total ram usage:        0 bytes
 35090 ;; Hardware stack levels used:    1
 35091 ;; Hardware stack levels required when called:   16
 35092 ;; This function calls:
 35093 ;;		_TMR3_SetInterruptHandler
 35094 ;; This function is called by:
 35095 ;;		_SYSTEM_Initialize
 35096 ;; This function uses a reentrant model
 35097 ;;
 35098                           
 35099                           	psect	text140
 35100  01CE8C                     __ptext140:
 35101                           	opt callstack 0
 35102  01CE8C                     _TMR3_Initialize:
 35103                           	opt callstack 13
 35104                           
 35105                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 35106                           
 35107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35108                           ;incstack = 0
 35109  01CE8C  6AA7               	clrf	167,c	;volatile
 35110                           
 35111                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 35112  01CE8E  6AA8               	clrf	168,c	;volatile
 35113                           
 35114                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 35115  01CE90  0E01               	movlw	1
 35116  01CE92  6EA9               	movwf	169,c	;volatile
 35117                           
 35118                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 35119  01CE94  0E3C               	movlw	60
 35120  01CE96  6EA5               	movwf	165,c	;volatile
 35121                           
 35122                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 35123  01CE98  0EB0               	movlw	176
 35124  01CE9A  6EA4               	movwf	164,c	;volatile
 35125                           
 35126                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 35127  01CE9C  50A4               	movf	164,w,c	;volatile
 35128  01CE9E  006F FE94  F001    	movff	16293,btemp	;volatile
 35129  01CEA4  6A02               	clrf	(btemp+1)^0,c
 35130  01CEA6  0060  F004  F002   	movff	btemp,btemp+1
 35131  01CEAC  6A01               	clrf	btemp^0,c
 35132  01CEAE  1001               	iorwf	btemp^0,w,c
 35133  01CEB0  0100               	movlb	0	; () banked
 35134  01CEB2  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 35135  01CEB4  5002               	movf	(btemp+1)^0,w,c
 35136  01CEB6  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 35137                           
 35138                           ; BSR set to: 0
 35139                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 35140  01CEB8  0139               	movlb	57	; () banked
 35141  01CEBA  9DA6               	bcf	166,6,b	;volatile
 35142                           
 35143                           ; BSR set to: 57
 35144                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 35145  01CEBC  8D96               	bsf	150,6,b	;volatile
 35146                           
 35147                           ; BSR set to: 57
 35148                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 35149  01CEBE  0ED4               	movlw	low _TMR3_DefaultInterruptHandler
 35150  01CEC0  6EE6               	movwf	postinc1,c
 35151  01CEC2  0EDB               	movlw	high _TMR3_DefaultInterruptHandler
 35152  01CEC4  6EE6               	movwf	postinc1,c
 35153  01CEC6  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 35154  01CEC8  6EE6               	movwf	postinc1,c
 35155  01CECA  EC39  F0EB         	call	_TMR3_SetInterruptHandler	;wreg free
 35156                           
 35157                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 35158  01CECE  0E31               	movlw	49
 35159  01CED0  6EA6               	movwf	166,c	;volatile
 35160                           
 35161                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35162  01CED2  0012               	return		;funcret
 35163  01CED4                     __end_of_TMR3_Initialize:
 35164                           	opt callstack 0
 35165                           
 35166 ;; *************** function _TMR3_SetInterruptHandler *****************
 35167 ;; Defined at:
 35168 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 35169 ;; Parameters:    Size  Location     Type
 35170 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35171 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 35172 ;; Auto vars:     Size  Location     Type
 35173 ;;		None
 35174 ;; Return value:  Size  Location     Type
 35175 ;;                  1  [STACK] void 
 35176 ;; Registers used:
 35177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35178 ;; Tracked objects:
 35179 ;;		On entry : 0/1
 35180 ;;		On exit  : 0/0
 35181 ;;		Unchanged: 0/0
 35182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35187 ;;Total ram usage:        0 bytes
 35188 ;; Hardware stack levels used:    1
 35189 ;; Hardware stack levels required when called:   15
 35190 ;; This function calls:
 35191 ;;		Nothing
 35192 ;; This function is called by:
 35193 ;;		_TMR3_Initialize
 35194 ;;		_init_bsoc
 35195 ;; This function uses a reentrant model
 35196 ;;
 35197                           
 35198                           	psect	text141
 35199  01D672                     __ptext141:
 35200                           	opt callstack 0
 35201  01D672                     _TMR3_SetInterruptHandler:
 35202                           	opt callstack 14
 35203                           
 35204                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 35205                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35206                           
 35207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35208                           ;incstack = 0
 35209  01D672  50E1               	movf	fsr1l,w,c
 35210  01D674  0FFD               	addlw	-3
 35211  01D676  6ED9               	movwf	fsr2l,c
 35212  01D678  50E2               	movf	fsr1h,w,c
 35213  01D67A  6EDA               	movwf	fsr2h,c
 35214  01D67C  0EFF               	movlw	255
 35215  01D67E  22DA               	addwfc	fsr2h,f,c
 35216  01D680  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 35217  01D686  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 35218  01D68C  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 35219                           
 35220                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35221  01D692  52E5               	movf	postdec1,f,c
 35222  01D694  52E5               	movf	postdec1,f,c
 35223  01D696  52E5               	movf	postdec1,f,c
 35224  01D698  0012               	return		;funcret
 35225  01D69A                     __end_of_TMR3_SetInterruptHandler:
 35226                           	opt callstack 0
 35227                           
 35228 ;; *************** function _TMR2_Initialize *****************
 35229 ;; Defined at:
 35230 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 35231 ;; Parameters:    Size  Location     Type
 35232 ;;		None
 35233 ;; Auto vars:     Size  Location     Type
 35234 ;;		None
 35235 ;; Return value:  Size  Location     Type
 35236 ;;                  1  [STACK] void 
 35237 ;; Registers used:
 35238 ;;		wreg, status,2
 35239 ;; Tracked objects:
 35240 ;;		On entry : 3F/3F
 35241 ;;		On exit  : 3F/39
 35242 ;;		Unchanged: 0/0
 35243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35248 ;;Total ram usage:        0 bytes
 35249 ;; Hardware stack levels used:    1
 35250 ;; Hardware stack levels required when called:   15
 35251 ;; This function calls:
 35252 ;;		Nothing
 35253 ;; This function is called by:
 35254 ;;		_SYSTEM_Initialize
 35255 ;; This function uses a reentrant model
 35256 ;;
 35257                           
 35258                           	psect	text142
 35259  01DA16                     __ptext142:
 35260                           	opt callstack 0
 35261  01DA16                     _TMR2_Initialize:
 35262                           	opt callstack 14
 35263                           
 35264                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 35265                           
 35266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35267                           ;incstack = 0
 35268  01DA16  0E01               	movlw	1
 35269  01DA18  6EAE               	movwf	174,c	;volatile
 35270                           
 35271                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 35272  01DA1A  6AAD               	clrf	173,c	;volatile
 35273                           
 35274                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 35275  01DA1C  6AAF               	clrf	175,c	;volatile
 35276                           
 35277                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 35278  01DA1E  0E63               	movlw	99
 35279  01DA20  6EAB               	movwf	171,c	;volatile
 35280                           
 35281                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 35282  01DA22  6AAA               	clrf	170,c	;volatile
 35283                           
 35284                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 35285  01DA24  0139               	movlb	57	; () banked
 35286  01DA26  95A4               	bcf	164,2,b	;volatile
 35287                           
 35288                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 35289  01DA28  0EC0               	movlw	192
 35290  01DA2A  6EAC               	movwf	172,c	;volatile
 35291                           
 35292                           ; BSR set to: 57
 35293                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35294  01DA2C  0012               	return		;funcret
 35295  01DA2E                     __end_of_TMR2_Initialize:
 35296                           	opt callstack 0
 35297                           
 35298 ;; *************** function _SPI1_Initialize *****************
 35299 ;; Defined at:
 35300 ;;		line 64 in file "mcc_generated_files/spi1.c"
 35301 ;; Parameters:    Size  Location     Type
 35302 ;;		None
 35303 ;; Auto vars:     Size  Location     Type
 35304 ;;		None
 35305 ;; Return value:  Size  Location     Type
 35306 ;;                  1  [STACK] void 
 35307 ;; Registers used:
 35308 ;;		wreg, status,2
 35309 ;; Tracked objects:
 35310 ;;		On entry : 3F/39
 35311 ;;		On exit  : 3F/3D
 35312 ;;		Unchanged: 0/0
 35313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35318 ;;Total ram usage:        0 bytes
 35319 ;; Hardware stack levels used:    1
 35320 ;; Hardware stack levels required when called:   15
 35321 ;; This function calls:
 35322 ;;		Nothing
 35323 ;; This function is called by:
 35324 ;;		_SYSTEM_Initialize
 35325 ;; This function uses a reentrant model
 35326 ;;
 35327                           
 35328                           	psect	text143
 35329  01DA2E                     __ptext143:
 35330                           	opt callstack 0
 35331  01DA2E                     _SPI1_Initialize:
 35332                           	opt callstack 14
 35333                           
 35334                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 35335                           
 35336                           ; BSR set to: 57
 35337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35338                           ;incstack = 0
 35339  01DA2E  0E40               	movlw	64
 35340  01DA30  013D               	movlb	61	; () banked
 35341  01DA32  6F15               	movwf	21,b	;volatile
 35342                           
 35343                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 35344  01DA34  0E03               	movlw	3
 35345  01DA36  6F16               	movwf	22,b	;volatile
 35346                           
 35347                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 35348  01DA38  0E4F               	movlw	79
 35349  01DA3A  6F19               	movwf	25,b	;volatile
 35350                           
 35351                           ; BSR set to: 61
 35352                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 35353  01DA3C  6B1C               	clrf	28,b	;volatile
 35354                           
 35355                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 35356  01DA3E  0E83               	movlw	131
 35357  01DA40  6F14               	movwf	20,b	;volatile
 35358                           
 35359                           ; BSR set to: 61
 35360                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35361  01DA42  0012               	return		;funcret
 35362  01DA44                     __end_of_SPI1_Initialize:
 35363                           	opt callstack 0
 35364                           
 35365 ;; *************** function _PWM8_Initialize *****************
 35366 ;; Defined at:
 35367 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 35368 ;; Parameters:    Size  Location     Type
 35369 ;;		None
 35370 ;; Auto vars:     Size  Location     Type
 35371 ;;		None
 35372 ;; Return value:  Size  Location     Type
 35373 ;;                  1  [STACK] void 
 35374 ;; Registers used:
 35375 ;;		wreg, status,2
 35376 ;; Tracked objects:
 35377 ;;		On entry : 0/0
 35378 ;;		On exit  : 3F/3F
 35379 ;;		Unchanged: 0/0
 35380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35385 ;;Total ram usage:        0 bytes
 35386 ;; Hardware stack levels used:    1
 35387 ;; Hardware stack levels required when called:   15
 35388 ;; This function calls:
 35389 ;;		Nothing
 35390 ;; This function is called by:
 35391 ;;		_SYSTEM_Initialize
 35392 ;; This function uses a reentrant model
 35393 ;;
 35394                           
 35395                           	psect	text144
 35396  01DA44                     __ptext144:
 35397                           	opt callstack 0
 35398  01DA44                     _PWM8_Initialize:
 35399                           	opt callstack 14
 35400                           
 35401                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 35402                           
 35403                           ; BSR set to: 61
 35404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35405                           ;incstack = 0
 35406  01DA44  0E80               	movlw	128
 35407  01DA46  6E62               	movwf	98,c	;volatile
 35408                           
 35409                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 35410  01DA48  6A61               	clrf	97,c	;volatile
 35411                           
 35412                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 35413  01DA4A  0E40               	movlw	64
 35414  01DA4C  6E60               	movwf	96,c	;volatile
 35415                           
 35416                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 35417  01DA4E  013F               	movlb	63	; () banked
 35418  01DA50  515F               	movf	95,w,b	;volatile
 35419  01DA52  0B3F               	andlw	-193
 35420  01DA54  0940               	iorlw	64
 35421  01DA56  6F5F               	movwf	95,b	;volatile
 35422                           
 35423                           ; BSR set to: 63
 35424                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35425  01DA58  0012               	return		;funcret
 35426  01DA5A                     __end_of_PWM8_Initialize:
 35427                           	opt callstack 0
 35428                           
 35429 ;; *************** function _PMD_Initialize *****************
 35430 ;; Defined at:
 35431 ;;		line 91 in file "mcc_generated_files/mcc.c"
 35432 ;; Parameters:    Size  Location     Type
 35433 ;;		None
 35434 ;; Auto vars:     Size  Location     Type
 35435 ;;		None
 35436 ;; Return value:  Size  Location     Type
 35437 ;;                  1  [STACK] void 
 35438 ;; Registers used:
 35439 ;;		None
 35440 ;; Tracked objects:
 35441 ;;		On entry : 3F/39
 35442 ;;		On exit  : 3F/39
 35443 ;;		Unchanged: 0/0
 35444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35449 ;;Total ram usage:        0 bytes
 35450 ;; Hardware stack levels used:    1
 35451 ;; Hardware stack levels required when called:   15
 35452 ;; This function calls:
 35453 ;;		Nothing
 35454 ;; This function is called by:
 35455 ;;		_SYSTEM_Initialize
 35456 ;; This function uses a reentrant model
 35457 ;;
 35458                           
 35459                           	psect	text145
 35460  01DA70                     __ptext145:
 35461                           	opt callstack 0
 35462  01DA70                     _PMD_Initialize:
 35463                           	opt callstack 14
 35464                           
 35465                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 35466                           
 35467                           ; BSR set to: 63
 35468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35469                           ;incstack = 0
 35470  01DA70  0139               	movlb	57	; () banked
 35471  01DA72  6BC0               	clrf	192,b	;volatile
 35472                           
 35473                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 35474  01DA74  6BC1               	clrf	193,b	;volatile
 35475                           
 35476                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 35477  01DA76  6BC2               	clrf	194,b	;volatile
 35478                           
 35479                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 35480  01DA78  6BC3               	clrf	195,b	;volatile
 35481                           
 35482                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 35483  01DA7A  6BC4               	clrf	196,b	;volatile
 35484                           
 35485                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 35486  01DA7C  6BC5               	clrf	197,b	;volatile
 35487                           
 35488                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 35489  01DA7E  6BC6               	clrf	198,b	;volatile
 35490                           
 35491                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 35492  01DA80  6BC7               	clrf	199,b	;volatile
 35493                           
 35494                           ; BSR set to: 57
 35495                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35496  01DA82  0012               	return		;funcret
 35497  01DA84                     __end_of_PMD_Initialize:
 35498                           	opt callstack 0
 35499                           
 35500 ;; *************** function _PIN_MANAGER_Initialize *****************
 35501 ;; Defined at:
 35502 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 35503 ;; Parameters:    Size  Location     Type
 35504 ;;		None
 35505 ;; Auto vars:     Size  Location     Type
 35506 ;;		None
 35507 ;; Return value:  Size  Location     Type
 35508 ;;                  1  [STACK] void 
 35509 ;; Registers used:
 35510 ;;		wreg, status,2
 35511 ;; Tracked objects:
 35512 ;;		On entry : 3F/39
 35513 ;;		On exit  : 3F/3A
 35514 ;;		Unchanged: 0/0
 35515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35520 ;;Total ram usage:        0 bytes
 35521 ;; Hardware stack levels used:    1
 35522 ;; Hardware stack levels required when called:   15
 35523 ;; This function calls:
 35524 ;;		Nothing
 35525 ;; This function is called by:
 35526 ;;		_SYSTEM_Initialize
 35527 ;; This function uses a reentrant model
 35528 ;;
 35529                           
 35530                           	psect	text146
 35531  01C1CE                     __ptext146:
 35532                           	opt callstack 0
 35533  01C1CE                     _PIN_MANAGER_Initialize:
 35534                           	opt callstack 14
 35535                           
 35536                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 35537                           
 35538                           ; BSR set to: 57
 35539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35540                           ;incstack = 0
 35541  01C1CE  0E07               	movlw	7
 35542  01C1D0  6EBE               	movwf	190,c	;volatile
 35543                           
 35544                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 35545  01C1D2  6ABD               	clrf	189,c	;volatile
 35546                           
 35547                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 35548  01C1D4  6ABA               	clrf	186,c	;volatile
 35549                           
 35550                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 35551  01C1D6  0E23               	movlw	35
 35552  01C1D8  6EBF               	movwf	191,c	;volatile
 35553                           
 35554                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 35555  01C1DA  6ABB               	clrf	187,c	;volatile
 35556                           
 35557                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 35558  01C1DC  0E07               	movlw	7
 35559  01C1DE  6EBC               	movwf	188,c	;volatile
 35560                           
 35561                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 35562  01C1E0  6AC6               	clrf	198,c	;volatile
 35563                           
 35564                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 35565  01C1E2  0E0C               	movlw	12
 35566  01C1E4  6EC7               	movwf	199,c	;volatile
 35567                           
 35568                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 35569  01C1E6  68C2               	setf	194,c	;volatile
 35570                           
 35571                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 35572  01C1E8  0EBF               	movlw	191
 35573  01C1EA  6EC3               	movwf	195,c	;volatile
 35574                           
 35575                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 35576  01C1EC  0E90               	movlw	144
 35577  01C1EE  6EC4               	movwf	196,c	;volatile
 35578                           
 35579                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 35580  01C1F0  0E0C               	movlw	12
 35581  01C1F2  6EC5               	movwf	197,c	;volatile
 35582                           
 35583                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 35584  01C1F4  013A               	movlb	58	; () banked
 35585  01C1F6  6B70               	clrf	112,b	;volatile
 35586                           
 35587                           ; BSR set to: 58
 35588                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 35589  01C1F8  6B60               	clrf	96,b	;volatile
 35590                           
 35591                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 35592  01C1FA  0E3C               	movlw	60
 35593  01C1FC  6F50               	movwf	80,b	;volatile
 35594                           
 35595                           ; BSR set to: 58
 35596                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 35597  01C1FE  6B80               	clrf	128,b	;volatile
 35598                           
 35599                           ; BSR set to: 58
 35600                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 35601  01C200  6B90               	clrf	144,b	;volatile
 35602                           
 35603                           ; BSR set to: 58
 35604                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 35605  01C202  6940               	setf	64,b	;volatile
 35606                           
 35607                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 35608  01C204  0E0C               	movlw	12
 35609  01C206  6F71               	movwf	113,b	;volatile
 35610                           
 35611                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 35612  01C208  0E0C               	movlw	12
 35613  01C20A  6F91               	movwf	145,b	;volatile
 35614                           
 35615                           ; BSR set to: 58
 35616                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 35617  01C20C  6B81               	clrf	129,b	;volatile
 35618                           
 35619                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 35620  01C20E  0E83               	movlw	131
 35621  01C210  6F51               	movwf	81,b	;volatile
 35622                           
 35623                           ; BSR set to: 58
 35624                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 35625  01C212  6B41               	clrf	65,b	;volatile
 35626                           
 35627                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 35628  01C214  0E97               	movlw	151
 35629  01C216  6F61               	movwf	97,b	;volatile
 35630                           
 35631                           ; BSR set to: 58
 35632                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 35633  01C218  6B82               	clrf	130,b	;volatile
 35634                           
 35635                           ; BSR set to: 58
 35636                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 35637  01C21A  6B92               	clrf	146,b	;volatile
 35638                           
 35639                           ; BSR set to: 58
 35640                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 35641  01C21C  6B42               	clrf	66,b	;volatile
 35642                           
 35643                           ; BSR set to: 58
 35644                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 35645  01C21E  6B52               	clrf	82,b	;volatile
 35646                           
 35647                           ; BSR set to: 58
 35648                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 35649  01C220  6B62               	clrf	98,b	;volatile
 35650                           
 35651                           ; BSR set to: 58
 35652                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 35653  01C222  6B72               	clrf	114,b	;volatile
 35654                           
 35655                           ; BSR set to: 58
 35656                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 35657  01C224  6943               	setf	67,b	;volatile
 35658                           
 35659                           ; BSR set to: 58
 35660                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 35661  01C226  6953               	setf	83,b	;volatile
 35662                           
 35663                           ; BSR set to: 58
 35664                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 35665  01C228  6963               	setf	99,b	;volatile
 35666                           
 35667                           ; BSR set to: 58
 35668                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 35669  01C22A  6973               	setf	115,b	;volatile
 35670                           
 35671                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 35672  01C22C  0E07               	movlw	7
 35673  01C22E  6F83               	movwf	131,b	;volatile
 35674                           
 35675                           ; BSR set to: 58
 35676                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 35677  01C230  6993               	setf	147,b	;volatile
 35678                           
 35679                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 35680  01C232  0E0F               	movlw	15
 35681  01C234  6FE8               	movwf	232,b	;volatile
 35682                           
 35683                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 35684  01C236  0E13               	movlw	19
 35685  01C238  6FDE               	movwf	222,b	;volatile
 35686                           
 35687                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 35688  01C23A  0E16               	movlw	22
 35689  01C23C  6F0E               	movwf	14,b	;volatile
 35690                           
 35691                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 35692  01C23E  0E1E               	movlw	30
 35693  01C240  6F13               	movwf	19,b	;volatile
 35694                           
 35695                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 35696  01C242  0E08               	movlw	8
 35697  01C244  6FC0               	movwf	192,b	;volatile
 35698                           
 35699                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 35700  01C246  0E10               	movlw	16
 35701  01C248  6F19               	movwf	25,b	;volatile
 35702                           
 35703                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 35704  01C24A  0E09               	movlw	9
 35705  01C24C  6FC1               	movwf	193,b	;volatile
 35706                           
 35707                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 35708  01C24E  0E1F               	movlw	31
 35709  01C250  6F15               	movwf	21,b	;volatile
 35710                           
 35711                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 35712  01C252  0E13               	movlw	19
 35713  01C254  6F16               	movwf	22,b	;volatile
 35714                           
 35715                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 35716  01C256  0E17               	movlw	23
 35717  01C258  6FE5               	movwf	229,b	;volatile
 35718                           
 35719                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 35720  01C25A  0E14               	movlw	20
 35721  01C25C  6FDF               	movwf	223,b	;volatile
 35722                           
 35723                           ; BSR set to: 58
 35724                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 35725  01C25E  0012               	return		;funcret
 35726  01C260                     __end_of_PIN_MANAGER_Initialize:
 35727                           	opt callstack 0
 35728                           
 35729 ;; *************** function _OSCILLATOR_Initialize *****************
 35730 ;; Defined at:
 35731 ;;		line 73 in file "mcc_generated_files/mcc.c"
 35732 ;; Parameters:    Size  Location     Type
 35733 ;;		None
 35734 ;; Auto vars:     Size  Location     Type
 35735 ;;		None
 35736 ;; Return value:  Size  Location     Type
 35737 ;;                  1  [STACK] void 
 35738 ;; Registers used:
 35739 ;;		wreg, status,2
 35740 ;; Tracked objects:
 35741 ;;		On entry : 3F/3A
 35742 ;;		On exit  : 3F/39
 35743 ;;		Unchanged: 0/0
 35744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35749 ;;Total ram usage:        0 bytes
 35750 ;; Hardware stack levels used:    1
 35751 ;; Hardware stack levels required when called:   15
 35752 ;; This function calls:
 35753 ;;		Nothing
 35754 ;; This function is called by:
 35755 ;;		_SYSTEM_Initialize
 35756 ;; This function uses a reentrant model
 35757 ;;
 35758                           
 35759                           	psect	text147
 35760  01DA5A                     __ptext147:
 35761                           	opt callstack 0
 35762  01DA5A                     _OSCILLATOR_Initialize:
 35763                           	opt callstack 14
 35764                           
 35765                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 35766                           
 35767                           ; BSR set to: 58
 35768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35769                           ;incstack = 0
 35770  01DA5A  0E20               	movlw	32
 35771  01DA5C  0139               	movlb	57	; () banked
 35772  01DA5E  6FD9               	movwf	217,b	;volatile
 35773                           
 35774                           ; BSR set to: 57
 35775                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 35776  01DA60  6BDB               	clrf	219,b	;volatile
 35777                           
 35778                           ; BSR set to: 57
 35779                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 35780  01DA62  6BDD               	clrf	221,b	;volatile
 35781                           
 35782                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 35783  01DA64  0E02               	movlw	2
 35784  01DA66  6FDF               	movwf	223,b	;volatile
 35785                           
 35786                           ; BSR set to: 57
 35787                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 35788  01DA68  6BDE               	clrf	222,b	;volatile
 35789  01DA6A                     l171:
 35790                           
 35791                           ; BSR set to: 57
 35792                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 35793  01DA6A  B1DC               	btfsc	220,0,b	;volatile
 35794  01DA6C  0012               	return	
 35795  01DA6E  D7FD               	goto	l171
 35796  01DA70                     __end_of_OSCILLATOR_Initialize:
 35797                           	opt callstack 0
 35798                           
 35799 ;; *************** function _INTERRUPT_Initialize *****************
 35800 ;; Defined at:
 35801 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 35802 ;; Parameters:    Size  Location     Type
 35803 ;;		None
 35804 ;; Auto vars:     Size  Location     Type
 35805 ;;  state           1  [STACK] _Bool 
 35806 ;; Return value:  Size  Location     Type
 35807 ;;                  1  [STACK] void 
 35808 ;; Registers used:
 35809 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 35810 ;; Tracked objects:
 35811 ;;		On entry : 0/0
 35812 ;;		On exit  : 3F/39
 35813 ;;		Unchanged: 0/0
 35814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35819 ;;Total ram usage:        0 bytes
 35820 ;; Hardware stack levels used:    1
 35821 ;; Hardware stack levels required when called:   15
 35822 ;; This function calls:
 35823 ;;		Nothing
 35824 ;; This function is called by:
 35825 ;;		_SYSTEM_Initialize
 35826 ;; This function uses a reentrant model
 35827 ;;
 35828                           
 35829                           	psect	text148
 35830  01C88A                     __ptext148:
 35831                           	opt callstack 0
 35832  01C88A                     _INTERRUPT_Initialize:
 35833                           	opt callstack 0
 35834                           
 35835                           ; BSR set to: 57
 35836                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35837  01C88A  52E6               	movf	postinc1,f,c
 35838                           
 35839                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 35840                           
 35841                           ;incstack = 0
 35842  01C88C  8AD2               	bsf	210,5,c	;volatile
 35843                           
 35844                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 35845  01C88E  AED2               	btfss	16338,7,c	;volatile
 35846  01C890  D003               	goto	u10240
 35847  01C892  6A0C               	clrf	(btemp+11)^0,c
 35848  01C894  2A0C               	incf	(btemp+11)^0,f,c
 35849  01C896  D001               	goto	u10258
 35850  01C898                     u10240:
 35851  01C898  6A0C               	clrf	(btemp+11)^0,c
 35852  01C89A                     u10258:
 35853                           
 35854                           ;stkvar	_state @ sp[(-1)+0]
 35855  01C89A  0EFF               	movlw	-1
 35856  01C89C  0060  F033  FFE3   	movff	btemp+11,plusw1
 35857                           
 35858                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 35859  01C8A2  9ED2               	bcf	16338,7,c	;volatile
 35860                           
 35861                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 35862  01C8A4  0E55               	movlw	85
 35863  01C8A6  6ED4               	movwf	212,c	;volatile
 35864                           
 35865                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 35866  01C8A8  0EAA               	movlw	170
 35867  01C8AA  6ED4               	movwf	212,c	;volatile
 35868                           
 35869                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 35870  01C8AC  90D4               	bcf	212,0,c	;volatile
 35871                           
 35872                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 35873  01C8AE  0138               	movlb	56	; () banked
 35874  01C8B0  6B9F               	clrf	159,b	;volatile
 35875                           
 35876                           ; BSR set to: 56
 35877                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 35878  01C8B2  6B9E               	clrf	158,b	;volatile
 35879                           
 35880                           ; BSR set to: 56
 35881                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 35882  01C8B4  0E08               	movlw	8
 35883  01C8B6  6F9D               	movwf	157,b	;volatile
 35884                           
 35885                           ; BSR set to: 56
 35886                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 35887  01C8B8  0E55               	movlw	85
 35888  01C8BA  6ED4               	movwf	212,c	;volatile
 35889                           
 35890                           ; BSR set to: 56
 35891                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 35892  01C8BC  0EAA               	movlw	170
 35893  01C8BE  6ED4               	movwf	212,c	;volatile
 35894                           
 35895                           ; BSR set to: 56
 35896                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 35897  01C8C0  80D4               	bsf	212,0,c	;volatile
 35898                           
 35899                           ; BSR set to: 56
 35900                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 35901                           ;stkvar	_state @ sp[(-1)+0]
 35902  01C8C2  0EFF               	movlw	-1
 35903  01C8C4  B0E3               	btfsc	plusw1,0,c
 35904  01C8C6  D002               	bra	u10265
 35905  01C8C8  9ED2               	bcf	16338,7,c	;volatile
 35906  01C8CA  D001               	bra	u10266
 35907  01C8CC                     u10265:
 35908  01C8CC  8ED2               	bsf	16338,7,c	;volatile
 35909  01C8CE                     u10266:
 35910                           
 35911                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 35912  01C8CE  0139               	movlb	57	; () banked
 35913  01C8D0  8782               	bsf	130,3,b	;volatile
 35914                           
 35915                           ; BSR set to: 57
 35916                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 35917  01C8D2  8382               	bsf	130,1,b	;volatile
 35918                           
 35919                           ; BSR set to: 57
 35920                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 35921  01C8D4  8182               	bsf	130,0,b	;volatile
 35922                           
 35923                           ; BSR set to: 57
 35924                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 35925  01C8D6  8582               	bsf	130,2,b	;volatile
 35926                           
 35927                           ; BSR set to: 57
 35928                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 35929  01C8D8  8786               	bsf	134,3,b	;volatile
 35930                           
 35931                           ; BSR set to: 57
 35932                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 35933  01C8DA  8586               	bsf	134,2,b	;volatile
 35934                           
 35935                           ; BSR set to: 57
 35936                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 35937  01C8DC  8783               	bsf	131,3,b	;volatile
 35938                           
 35939                           ; BSR set to: 57
 35940                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 35941  01C8DE  8181               	bsf	129,0,b	;volatile
 35942                           
 35943                           ; BSR set to: 57
 35944                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 35945  01C8E0  9185               	bcf	133,0,b	;volatile
 35946                           
 35947                           ; BSR set to: 57
 35948                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 35949  01C8E2  8189               	bsf	137,0,b	;volatile
 35950                           
 35951                           ; BSR set to: 57
 35952                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 35953  01C8E4  9D88               	bcf	136,6,b	;volatile
 35954                           
 35955                           ; BSR set to: 57
 35956                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 35957  01C8E6  9D86               	bcf	134,6,b	;volatile
 35958                           
 35959                           ; BSR set to: 57
 35960                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 35961  01C8E8  8581               	bsf	129,2,b	;volatile
 35962                           
 35963                           ; BSR set to: 57
 35964                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 35965  01C8EA  8781               	bsf	129,3,b	;volatile
 35966                           
 35967                           ; BSR set to: 57
 35968                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 35969  01C8EC  52E5               	movf	postdec1,f,c
 35970  01C8EE  0012               	return		;funcret
 35971  01C8F0                     __end_of_INTERRUPT_Initialize:
 35972                           	opt callstack 0
 35973                           
 35974 ;; *************** function _FVR_Initialize *****************
 35975 ;; Defined at:
 35976 ;;		line 58 in file "mcc_generated_files/fvr.c"
 35977 ;; Parameters:    Size  Location     Type
 35978 ;;		None
 35979 ;; Auto vars:     Size  Location     Type
 35980 ;;		None
 35981 ;; Return value:  Size  Location     Type
 35982 ;;                  1  [STACK] void 
 35983 ;; Registers used:
 35984 ;;		wreg, status,2
 35985 ;; Tracked objects:
 35986 ;;		On entry : 3F/39
 35987 ;;		On exit  : 3F/3E
 35988 ;;		Unchanged: 0/0
 35989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35994 ;;Total ram usage:        0 bytes
 35995 ;; Hardware stack levels used:    1
 35996 ;; Hardware stack levels required when called:   15
 35997 ;; This function calls:
 35998 ;;		Nothing
 35999 ;; This function is called by:
 36000 ;;		_SYSTEM_Initialize
 36001 ;; This function uses a reentrant model
 36002 ;;
 36003                           
 36004                           	psect	text149
 36005  01DBA4                     __ptext149:
 36006                           	opt callstack 0
 36007  01DBA4                     _FVR_Initialize:
 36008                           	opt callstack 14
 36009                           
 36010                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 36011                           
 36012                           ; BSR set to: 57
 36013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36014                           ;incstack = 0
 36015  01DBA4  0EAF               	movlw	175
 36016  01DBA6  013E               	movlb	62	; () banked
 36017  01DBA8  6FC1               	movwf	193,b	;volatile
 36018                           
 36019                           ; BSR set to: 62
 36020                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36021  01DBAA  0012               	return		;funcret
 36022  01DBAC                     __end_of_FVR_Initialize:
 36023                           	opt callstack 0
 36024                           
 36025 ;; *************** function _EXT_INT_Initialize *****************
 36026 ;; Defined at:
 36027 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 36028 ;; Parameters:    Size  Location     Type
 36029 ;;		None
 36030 ;; Auto vars:     Size  Location     Type
 36031 ;;		None
 36032 ;; Return value:  Size  Location     Type
 36033 ;;                  1  [STACK] void 
 36034 ;; Registers used:
 36035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36036 ;; Tracked objects:
 36037 ;;		On entry : 3F/39
 36038 ;;		On exit  : 3F/39
 36039 ;;		Unchanged: 0/0
 36040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36045 ;;Total ram usage:        0 bytes
 36046 ;; Hardware stack levels used:    1
 36047 ;; Hardware stack levels required when called:   16
 36048 ;; This function calls:
 36049 ;;		_INT0_SetInterruptHandler
 36050 ;;		_INT1_SetInterruptHandler
 36051 ;; This function is called by:
 36052 ;;		_SYSTEM_Initialize
 36053 ;; This function uses a reentrant model
 36054 ;;
 36055                           
 36056                           	psect	text150
 36057  01D356                     __ptext150:
 36058                           	opt callstack 0
 36059  01D356                     _EXT_INT_Initialize:
 36060                           	opt callstack 13
 36061                           
 36062                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 36063                           
 36064                           ; BSR set to: 62
 36065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36066                           ;incstack = 0
 36067  01D356  0139               	movlb	57	; () banked
 36068  01D358  91A1               	bcf	161,0,b	;volatile
 36069                           
 36070                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 36071  01D35A  90D2               	bcf	210,0,c	;volatile
 36072                           
 36073                           ; BSR set to: 57
 36074                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 36075  01D35C  0ED6               	movlw	low _INT0_DefaultInterruptHandler
 36076  01D35E  6EE6               	movwf	postinc1,c
 36077  01D360  0EDB               	movlw	high _INT0_DefaultInterruptHandler
 36078  01D362  6EE6               	movwf	postinc1,c
 36079  01D364  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 36080  01D366  6EE6               	movwf	postinc1,c
 36081  01D368  EC61  F0EB         	call	_INT0_SetInterruptHandler	;wreg free
 36082                           
 36083                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 36084  01D36C  0139               	movlb	57	; () banked
 36085  01D36E  8191               	bsf	145,0,b	;volatile
 36086                           
 36087                           ; BSR set to: 57
 36088                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 36089  01D370  91A5               	bcf	165,0,b	;volatile
 36090                           
 36091                           ; BSR set to: 57
 36092                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 36093  01D372  92D2               	bcf	210,1,c	;volatile
 36094                           
 36095                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 36096  01D374  0ED2               	movlw	low _INT1_DefaultInterruptHandler
 36097  01D376  6EE6               	movwf	postinc1,c
 36098  01D378  0EDB               	movlw	high _INT1_DefaultInterruptHandler
 36099  01D37A  6EE6               	movwf	postinc1,c
 36100  01D37C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 36101  01D37E  6EE6               	movwf	postinc1,c
 36102  01D380  EC4D  F0EB         	call	_INT1_SetInterruptHandler	;wreg free
 36103                           
 36104                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 36105  01D384  0139               	movlb	57	; () banked
 36106  01D386  8195               	bsf	149,0,b	;volatile
 36107                           
 36108                           ; BSR set to: 57
 36109                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36110  01D388  0012               	return		;funcret
 36111  01D38A                     __end_of_EXT_INT_Initialize:
 36112                           	opt callstack 0
 36113                           
 36114 ;; *************** function _INT1_SetInterruptHandler *****************
 36115 ;; Defined at:
 36116 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 36117 ;; Parameters:    Size  Location     Type
 36118 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36119 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 36120 ;; Auto vars:     Size  Location     Type
 36121 ;;		None
 36122 ;; Return value:  Size  Location     Type
 36123 ;;                  1  [STACK] void 
 36124 ;; Registers used:
 36125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36126 ;; Tracked objects:
 36127 ;;		On entry : 3F/39
 36128 ;;		On exit  : 0/0
 36129 ;;		Unchanged: 0/0
 36130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36135 ;;Total ram usage:        0 bytes
 36136 ;; Hardware stack levels used:    1
 36137 ;; Hardware stack levels required when called:   15
 36138 ;; This function calls:
 36139 ;;		Nothing
 36140 ;; This function is called by:
 36141 ;;		_EXT_INT_Initialize
 36142 ;;		_start_switch_handler
 36143 ;; This function uses a reentrant model
 36144 ;;
 36145                           
 36146                           	psect	text151
 36147  01D69A                     __ptext151:
 36148                           	opt callstack 0
 36149  01D69A                     _INT1_SetInterruptHandler:
 36150                           	opt callstack 14
 36151                           
 36152                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 36153                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36154                           
 36155                           ; BSR set to: 57
 36156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36157                           ;incstack = 0
 36158  01D69A  50E1               	movf	fsr1l,w,c
 36159  01D69C  0FFD               	addlw	-3
 36160  01D69E  6ED9               	movwf	fsr2l,c
 36161  01D6A0  50E2               	movf	fsr1h,w,c
 36162  01D6A2  6EDA               	movwf	fsr2h,c
 36163  01D6A4  0EFF               	movlw	255
 36164  01D6A6  22DA               	addwfc	fsr2h,f,c
 36165  01D6A8  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 36166  01D6AE  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 36167  01D6B4  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 36168                           
 36169                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36170  01D6BA  52E5               	movf	postdec1,f,c
 36171  01D6BC  52E5               	movf	postdec1,f,c
 36172  01D6BE  52E5               	movf	postdec1,f,c
 36173  01D6C0  0012               	return		;funcret
 36174  01D6C2                     __end_of_INT1_SetInterruptHandler:
 36175                           	opt callstack 0
 36176                           
 36177 ;; *************** function _INT0_SetInterruptHandler *****************
 36178 ;; Defined at:
 36179 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 36180 ;; Parameters:    Size  Location     Type
 36181 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36182 ;;		 -> INT0_DefaultInterruptHandler(1), 
 36183 ;; Auto vars:     Size  Location     Type
 36184 ;;		None
 36185 ;; Return value:  Size  Location     Type
 36186 ;;                  1  [STACK] void 
 36187 ;; Registers used:
 36188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36189 ;; Tracked objects:
 36190 ;;		On entry : 3F/39
 36191 ;;		On exit  : 0/0
 36192 ;;		Unchanged: 0/0
 36193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36198 ;;Total ram usage:        0 bytes
 36199 ;; Hardware stack levels used:    1
 36200 ;; Hardware stack levels required when called:   15
 36201 ;; This function calls:
 36202 ;;		Nothing
 36203 ;; This function is called by:
 36204 ;;		_EXT_INT_Initialize
 36205 ;; This function uses a reentrant model
 36206 ;;
 36207                           
 36208                           	psect	text152
 36209  01D6C2                     __ptext152:
 36210                           	opt callstack 0
 36211  01D6C2                     _INT0_SetInterruptHandler:
 36212                           	opt callstack 13
 36213                           
 36214                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 36215                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36216                           
 36217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36218                           ;incstack = 0
 36219  01D6C2  50E1               	movf	fsr1l,w,c
 36220  01D6C4  0FFD               	addlw	-3
 36221  01D6C6  6ED9               	movwf	fsr2l,c
 36222  01D6C8  50E2               	movf	fsr1h,w,c
 36223  01D6CA  6EDA               	movwf	fsr2h,c
 36224  01D6CC  0EFF               	movlw	255
 36225  01D6CE  22DA               	addwfc	fsr2h,f,c
 36226  01D6D0  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 36227  01D6D6  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 36228  01D6DC  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 36229                           
 36230                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36231  01D6E2  52E5               	movf	postdec1,f,c
 36232  01D6E4  52E5               	movf	postdec1,f,c
 36233  01D6E6  52E5               	movf	postdec1,f,c
 36234  01D6E8  0012               	return		;funcret
 36235  01D6EA                     __end_of_INT0_SetInterruptHandler:
 36236                           	opt callstack 0
 36237                           
 36238 ;; *************** function _DMA2_Initialize *****************
 36239 ;; Defined at:
 36240 ;;		line 61 in file "mcc_generated_files/dma2.c"
 36241 ;; Parameters:    Size  Location     Type
 36242 ;;		None
 36243 ;; Auto vars:     Size  Location     Type
 36244 ;;		None
 36245 ;; Return value:  Size  Location     Type
 36246 ;;                  1  [STACK] void 
 36247 ;; Registers used:
 36248 ;;		wreg, status,2
 36249 ;; Tracked objects:
 36250 ;;		On entry : 3F/3D
 36251 ;;		On exit  : 3F/3B
 36252 ;;		Unchanged: 0/0
 36253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36258 ;;Total ram usage:        0 bytes
 36259 ;; Hardware stack levels used:    1
 36260 ;; Hardware stack levels required when called:   15
 36261 ;; This function calls:
 36262 ;;		Nothing
 36263 ;; This function is called by:
 36264 ;;		_SYSTEM_Initialize
 36265 ;; This function uses a reentrant model
 36266 ;;
 36267                           
 36268                           	psect	text153
 36269  01CB2C                     __ptext153:
 36270                           	opt callstack 0
 36271  01CB2C                     _DMA2_Initialize:
 36272                           	opt callstack 14
 36273                           
 36274                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 36275                           
 36276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36277                           ;incstack = 0
 36278  01CB2C  0E00               	movlw	0
 36279  01CB2E  013B               	movlb	59	; () banked
 36280  01CB30  6FD9               	movwf	217,b	;volatile
 36281  01CB32  0E10               	movlw	16
 36282  01CB34  6FDA               	movwf	218,b	;volatile
 36283  01CB36  0E00               	movlw	0
 36284  01CB38  6FDB               	movwf	219,b	;volatile
 36285                           
 36286                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 36287  01CB3A  0E3F               	movlw	63
 36288  01CB3C  6FD1               	movwf	209,b	;volatile
 36289  01CB3E  0EBB               	movlw	187
 36290  01CB40  6FD0               	movwf	208,b	;volatile
 36291                           
 36292                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 36293  01CB42  0E03               	movlw	3
 36294  01CB44  6FDD               	movwf	221,b	;volatile
 36295                           
 36296                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 36297  01CB46  0E00               	movlw	0
 36298  01CB48  6FD8               	movwf	216,b	;volatile
 36299  01CB4A  0E01               	movlw	1
 36300  01CB4C  6FD7               	movwf	215,b	;volatile
 36301                           
 36302                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 36303  01CB4E  0E00               	movlw	0
 36304  01CB50  6FCF               	movwf	207,b	;volatile
 36305  01CB52  0E01               	movlw	1
 36306  01CB54  6FCE               	movwf	206,b	;volatile
 36307                           
 36308                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 36309  01CB56  0E1C               	movlw	28
 36310  01CB58  6FDF               	movwf	223,b	;volatile
 36311                           
 36312                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 36313  01CB5A  0E3D               	movlw	61
 36314  01CB5C  6FDE               	movwf	222,b	;volatile
 36315                           
 36316                           ; BSR set to: 59
 36317                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 36318  01CB5E  0139               	movlb	57	; () banked
 36319  01CB60  97A5               	bcf	165,3,b	;volatile
 36320                           
 36321                           ; BSR set to: 57
 36322                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 36323  01CB62  95A5               	bcf	165,2,b	;volatile
 36324                           
 36325                           ; BSR set to: 57
 36326                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 36327  01CB64  9BA5               	bcf	165,5,b	;volatile
 36328                           
 36329                           ; BSR set to: 57
 36330                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 36331  01CB66  99A5               	bcf	165,4,b	;volatile
 36332                           
 36333                           ; BSR set to: 57
 36334                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 36335  01CB68  9795               	bcf	149,3,b	;volatile
 36336                           
 36337                           ; BSR set to: 57
 36338                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 36339  01CB6A  9595               	bcf	149,2,b	;volatile
 36340                           
 36341                           ; BSR set to: 57
 36342                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 36343  01CB6C  9B95               	bcf	149,5,b	;volatile
 36344                           
 36345                           ; BSR set to: 57
 36346                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 36347  01CB6E  9995               	bcf	149,4,b	;volatile
 36348  01CB70  9ED2               	bcf	16338,7,c	;# 
 36349  01CB72  0139               	banksel	14831	;# 
 36350  01CB74  0E55               	movlw	85	;# 
 36351  01CB76  6FEF               	movwf	14831,b	;# 
 36352  01CB78  0EAA               	movlw	170	;# 
 36353  01CB7A  6FEF               	movwf	14831,b	;# 
 36354  01CB7C  81EF               	bsf	14831,0,b	;# 
 36355  01CB7E  8ED2               	bsf	16338,7,c	;# 
 36356                           
 36357                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 36358  01CB80  013B               	movlb	59	; () banked
 36359  01CB82  6BDC               	clrf	220,b	;volatile
 36360                           
 36361                           ; BSR set to: 59
 36362                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36363  01CB84  0012               	return		;funcret
 36364  01CB86                     __end_of_DMA2_Initialize:
 36365                           	opt callstack 0
 36366                           
 36367 ;; *************** function _DMA1_Initialize *****************
 36368 ;; Defined at:
 36369 ;;		line 86 in file "mcc_generated_files/dma1.c"
 36370 ;; Parameters:    Size  Location     Type
 36371 ;;		None
 36372 ;; Auto vars:     Size  Location     Type
 36373 ;;		None
 36374 ;; Return value:  Size  Location     Type
 36375 ;;                  1  [STACK] void 
 36376 ;; Registers used:
 36377 ;;		wreg, status,2
 36378 ;; Tracked objects:
 36379 ;;		On entry : 3F/3B
 36380 ;;		On exit  : 3F/3B
 36381 ;;		Unchanged: 0/0
 36382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36387 ;;Total ram usage:        0 bytes
 36388 ;; Hardware stack levels used:    1
 36389 ;; Hardware stack levels required when called:   15
 36390 ;; This function calls:
 36391 ;;		Nothing
 36392 ;; This function is called by:
 36393 ;;		_SYSTEM_Initialize
 36394 ;; This function uses a reentrant model
 36395 ;;
 36396                           
 36397                           	psect	text154
 36398  01C6E4                     __ptext154:
 36399                           	opt callstack 0
 36400  01C6E4                     _DMA1_Initialize:
 36401                           	opt callstack 14
 36402                           
 36403                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 36404                           
 36405                           ; BSR set to: 59
 36406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36407                           ;incstack = 0
 36408  01C6E4  0E00               	movlw	0
 36409  01C6E6  013B               	movlb	59	; () banked
 36410  01C6E8  6FF9               	movwf	249,b	;volatile
 36411  01C6EA  0E10               	movlw	16
 36412  01C6EC  6FFA               	movwf	250,b	;volatile
 36413  01C6EE  0E00               	movlw	0
 36414  01C6F0  6FFB               	movwf	251,b	;volatile
 36415                           
 36416                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 36417  01C6F2  0E3D               	movlw	61
 36418  01C6F4  6FF1               	movwf	241,b	;volatile
 36419  01C6F6  0E11               	movlw	17
 36420  01C6F8  6FF0               	movwf	240,b	;volatile
 36421                           
 36422                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 36423  01C6FA  0E03               	movlw	3
 36424  01C6FC  6FFD               	movwf	253,b	;volatile
 36425                           
 36426                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 36427  01C6FE  0E00               	movlw	0
 36428  01C700  6FF8               	movwf	248,b	;volatile
 36429  01C702  0E01               	movlw	1
 36430  01C704  6FF7               	movwf	247,b	;volatile
 36431                           
 36432                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 36433  01C706  0E00               	movlw	0
 36434  01C708  6FEF               	movwf	239,b	;volatile
 36435  01C70A  0E01               	movlw	1
 36436  01C70C  6FEE               	movwf	238,b	;volatile
 36437                           
 36438                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 36439  01C70E  0E15               	movlw	21
 36440  01C710  6FFF               	movwf	255,b	;volatile
 36441                           
 36442                           ; BSR set to: 59
 36443                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 36444  01C712  6BFE               	clrf	254,b	;volatile
 36445                           
 36446                           ; BSR set to: 59
 36447                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 36448  01C714  0139               	movlb	57	; () banked
 36449  01C716  93A2               	bcf	162,1,b	;volatile
 36450                           
 36451                           ; BSR set to: 57
 36452                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 36453  01C718  91A2               	bcf	162,0,b	;volatile
 36454                           
 36455                           ; BSR set to: 57
 36456                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 36457  01C71A  97A2               	bcf	162,3,b	;volatile
 36458                           
 36459                           ; BSR set to: 57
 36460                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 36461  01C71C  95A2               	bcf	162,2,b	;volatile
 36462                           
 36463                           ; BSR set to: 57
 36464                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 36465  01C71E  8392               	bsf	146,1,b	;volatile
 36466                           
 36467                           ; BSR set to: 57
 36468                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 36469  01C720  8192               	bsf	146,0,b	;volatile
 36470                           
 36471                           ; BSR set to: 57
 36472                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 36473  01C722  8792               	bsf	146,3,b	;volatile
 36474                           
 36475                           ; BSR set to: 57
 36476                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 36477  01C724  8592               	bsf	146,2,b	;volatile
 36478                           
 36479                           ; BSR set to: 57
 36480                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 36481  01C726  6BF1               	clrf	241,b	;volatile
 36482                           
 36483                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 36484  01C728  0E01               	movlw	1
 36485  01C72A  6FF2               	movwf	242,b	;volatile
 36486                           
 36487                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 36488  01C72C  0E04               	movlw	4
 36489  01C72E  6FF3               	movwf	243,b	;volatile
 36490                           
 36491                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 36492  01C730  0E02               	movlw	2
 36493  01C732  6FF4               	movwf	244,b	;volatile
 36494                           
 36495                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 36496  01C734  0E03               	movlw	3
 36497  01C736  6FF7               	movwf	247,b	;volatile
 36498  01C738  9ED2               	bcf	16338,7,c	;# 
 36499  01C73A  0139               	banksel	14831	;# 
 36500  01C73C  0E55               	movlw	85	;# 
 36501  01C73E  6FEF               	movwf	14831,b	;# 
 36502  01C740  0EAA               	movlw	170	;# 
 36503  01C742  6FEF               	movwf	14831,b	;# 
 36504  01C744  81EF               	bsf	14831,0,b	;# 
 36505  01C746  8ED2               	bsf	16338,7,c	;# 
 36506                           
 36507                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 36508  01C748  013B               	movlb	59	; () banked
 36509  01C74A  6BFC               	clrf	252,b	;volatile
 36510                           
 36511                           ; BSR set to: 59
 36512                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36513  01C74C  0012               	return		;funcret
 36514  01C74E                     __end_of_DMA1_Initialize:
 36515                           	opt callstack 0
 36516                           
 36517 ;; *************** function _CRC_Initialize *****************
 36518 ;; Defined at:
 36519 ;;		line 76 in file "mcc_generated_files/crc.c"
 36520 ;; Parameters:    Size  Location     Type
 36521 ;;		None
 36522 ;; Auto vars:     Size  Location     Type
 36523 ;;  seed            2  [STACK] unsigned short 
 36524 ;;  poly            2  [STACK] unsigned short 
 36525 ;; Return value:  Size  Location     Type
 36526 ;;                  1  [STACK] void 
 36527 ;; Registers used:
 36528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 36529 ;; Tracked objects:
 36530 ;;		On entry : 0/39
 36531 ;;		On exit  : 3F/0
 36532 ;;		Unchanged: 0/0
 36533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36538 ;;Total ram usage:        0 bytes
 36539 ;; Hardware stack levels used:    1
 36540 ;; Hardware stack levels required when called:   15
 36541 ;; This function calls:
 36542 ;;		Nothing
 36543 ;; This function is called by:
 36544 ;;		_SYSTEM_Initialize
 36545 ;;		_read_cal_data
 36546 ;;		_write_cal_data
 36547 ;; This function uses a reentrant model
 36548 ;;
 36549                           
 36550                           	psect	text155
 36551  01C260                     __ptext155:
 36552                           	opt callstack 0
 36553  01C260                     _CRC_Initialize:
 36554                           	opt callstack 0
 36555                           
 36556                           ; BSR set to: 59
 36557                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36558  01C260  52E6               	movf	postinc1,f,c
 36559  01C262  52E6               	movf	postinc1,f,c
 36560  01C264  52E6               	movf	postinc1,f,c
 36561  01C266  52E6               	movf	postinc1,f,c
 36562                           
 36563                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 36564                           
 36565                           ;incstack = 0
 36566  01C268  0E80               	movlw	128
 36567  01C26A  0139               	movlb	57	; () banked
 36568  01C26C  6F68               	movwf	104,b	;volatile
 36569                           
 36570                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 36571  01C26E  0E07               	movlw	7
 36572  01C270  6F69               	movwf	105,b	;volatile
 36573                           
 36574                           ; BSR set to: 57
 36575                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 36576  01C272  6B62               	clrf	98,b	;volatile
 36577                           
 36578                           ; BSR set to: 57
 36579                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 36580  01C274  6B63               	clrf	99,b	;volatile
 36581                           
 36582                           ; BSR set to: 57
 36583                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 36584  01C276  6B7C               	clrf	124,b	;volatile
 36585                           
 36586                           ; BSR set to: 57
 36587                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 36588  01C278  6B78               	clrf	120,b	;volatile
 36589                           
 36590                           ; BSR set to: 57
 36591                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 36592  01C27A  6B77               	clrf	119,b	;volatile
 36593                           
 36594                           ; BSR set to: 57
 36595                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 36596  01C27C  6B76               	clrf	118,b	;volatile
 36597                           
 36598                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 36599  01C27E  0E3F               	movlw	63
 36600  01C280  6F7B               	movwf	123,b	;volatile
 36601                           
 36602                           ; BSR set to: 57
 36603                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 36604  01C282  697A               	setf	122,b	;volatile
 36605                           
 36606                           ; BSR set to: 57
 36607                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 36608  01C284  6979               	setf	121,b	;volatile
 36609                           
 36610                           ; BSR set to: 57
 36611                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 36612  01C286  6B7D               	clrf	125,b	;volatile
 36613                           
 36614                           ; BSR set to: 57
 36615                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 36616  01C288  0ED5               	movlw	213
 36617  01C28A  6E0B               	movwf	(btemp+10)^0,c
 36618  01C28C  0E00               	movlw	0
 36619  01C28E  6E0C               	movwf	(btemp+11)^0,c
 36620                           
 36621                           ;stkvar	_poly @ sp[(-4)+2]
 36622  01C290  0EFE               	movlw	-2
 36623  01C292  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36624  01C298  0EFF               	movlw	-1
 36625  01C29A  0060  F033  FFE3   	movff	btemp+11,plusw1
 36626                           
 36627                           ; BSR set to: 57
 36628                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 36629                           ;stkvar	_poly @ sp[(-4)+2]
 36630  01C2A0  0EFF               	movlw	255
 36631  01C2A2  24E1               	addwf	fsr1l,w,c
 36632  01C2A4  6ED9               	movwf	fsr2l,c
 36633  01C2A6  0EFF               	movlw	255
 36634  01C2A8  20E2               	addwfc	fsr1h,w,c
 36635  01C2AA  6EDA               	movwf	fsr2h,c
 36636  01C2AC  50DF               	movf	indf2,w,c
 36637  01C2AE  6F67               	movwf	103,b	;volatile
 36638                           
 36639                           ; BSR set to: 57
 36640                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 36641  01C2B0  0ED5               	movlw	213
 36642  01C2B2  6F66               	movwf	102,b	;volatile
 36643                           
 36644                           ; BSR set to: 57
 36645                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 36646                           ;stkvar	_seed @ sp[(-4)+0]
 36647  01C2B4  0EFC               	movlw	-4
 36648  01C2B6  6AE3               	clrf	plusw1,c
 36649  01C2B8  0EFD               	movlw	-3
 36650  01C2BA  6AE3               	clrf	plusw1,c
 36651                           
 36652                           ; BSR set to: 57
 36653                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 36654                           ;stkvar	_seed @ sp[(-4)+0]
 36655  01C2BC  0EFD               	movlw	253
 36656  01C2BE  24E1               	addwf	fsr1l,w,c
 36657  01C2C0  6ED9               	movwf	fsr2l,c
 36658  01C2C2  0EFF               	movlw	255
 36659  01C2C4  20E2               	addwfc	fsr1h,w,c
 36660  01C2C6  6EDA               	movwf	fsr2h,c
 36661  01C2C8  50DF               	movf	indf2,w,c
 36662  01C2CA  6F63               	movwf	99,b	;volatile
 36663                           
 36664                           ; BSR set to: 57
 36665                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 36666  01C2CC  6B62               	clrf	98,b	;volatile
 36667                           
 36668                           ; BSR set to: 57
 36669                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 36670  01C2CE  3969               	swapf	105,w,b	;volatile
 36671  01C2D0  0B0F               	andlw	15
 36672  01C2D2  6E0C               	movwf	(btemp+11)^0,c
 36673  01C2D4  280C               	incf	(btemp+11)^0,w,c
 36674  01C2D6  0100               	movlb	0	; () banked
 36675  01C2D8  6FD5               	movwf	_crcObj& (0+255),b
 36676                           
 36677                           ; BSR set to: 0
 36678                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 36679  01C2DA  0139               	movlb	57	; () banked
 36680  01C2DC  5169               	movf	105,w,b	;volatile
 36681  01C2DE  0B0F               	andlw	15
 36682  01C2E0  6E0C               	movwf	(btemp+11)^0,c
 36683  01C2E2  280C               	incf	(btemp+11)^0,w,c
 36684  01C2E4  0100               	movlb	0	; () banked
 36685  01C2E6  6FD6               	movwf	(_crcObj+1)& (0+255),b
 36686                           
 36687                           ; BSR set to: 0
 36688                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36689  01C2E8  52E5               	movf	postdec1,f,c
 36690  01C2EA  52E5               	movf	postdec1,f,c
 36691  01C2EC  52E5               	movf	postdec1,f,c
 36692  01C2EE  52E5               	movf	postdec1,f,c
 36693  01C2F0  0012               	return		;funcret
 36694  01C2F2                     __end_of_CRC_Initialize:
 36695                           	opt callstack 0
 36696                           
 36697 ;; *************** function _CLKREF_Initialize *****************
 36698 ;; Defined at:
 36699 ;;		line 58 in file "mcc_generated_files/clkref.c"
 36700 ;; Parameters:    Size  Location     Type
 36701 ;;		None
 36702 ;; Auto vars:     Size  Location     Type
 36703 ;;		None
 36704 ;; Return value:  Size  Location     Type
 36705 ;;                  1  [STACK] void 
 36706 ;; Registers used:
 36707 ;;		wreg, status,2
 36708 ;; Tracked objects:
 36709 ;;		On entry : 3F/3B
 36710 ;;		On exit  : 3F/3C
 36711 ;;		Unchanged: 0/0
 36712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36717 ;;Total ram usage:        0 bytes
 36718 ;; Hardware stack levels used:    1
 36719 ;; Hardware stack levels required when called:   15
 36720 ;; This function calls:
 36721 ;;		Nothing
 36722 ;; This function is called by:
 36723 ;;		_SYSTEM_Initialize
 36724 ;; This function uses a reentrant model
 36725 ;;
 36726                           
 36727                           	psect	text156
 36728  01DB42                     __ptext156:
 36729                           	opt callstack 0
 36730  01DB42                     _CLKREF_Initialize:
 36731                           	opt callstack 14
 36732                           
 36733                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 36734                           
 36735                           ; BSR set to: 0
 36736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36737                           ;incstack = 0
 36738  01DB42  013C               	movlb	60	; () banked
 36739  01DB44  6BE6               	clrf	230,b	;volatile
 36740                           
 36741                           ; BSR set to: 60
 36742                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 36743  01DB46  0E94               	movlw	148
 36744  01DB48  6FE5               	movwf	229,b	;volatile
 36745                           
 36746                           ; BSR set to: 60
 36747                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36748  01DB4A  0012               	return		;funcret
 36749  01DB4C                     __end_of_CLKREF_Initialize:
 36750                           	opt callstack 0
 36751                           
 36752 ;; *************** function _ADCC_Initialize *****************
 36753 ;; Defined at:
 36754 ;;		line 65 in file "mcc_generated_files/adcc.c"
 36755 ;; Parameters:    Size  Location     Type
 36756 ;;		None
 36757 ;; Auto vars:     Size  Location     Type
 36758 ;;		None
 36759 ;; Return value:  Size  Location     Type
 36760 ;;                  1  [STACK] void 
 36761 ;; Registers used:
 36762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 36763 ;; Tracked objects:
 36764 ;;		On entry : 3F/0
 36765 ;;		On exit  : 0/0
 36766 ;;		Unchanged: 0/0
 36767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36772 ;;Total ram usage:        0 bytes
 36773 ;; Hardware stack levels used:    1
 36774 ;; Hardware stack levels required when called:   16
 36775 ;; This function calls:
 36776 ;;		_ADCC_SetADIInterruptHandler
 36777 ;;		_ADCC_SetADTIInterruptHandler
 36778 ;; This function is called by:
 36779 ;;		_SYSTEM_Initialize
 36780 ;; This function uses a reentrant model
 36781 ;;
 36782                           
 36783                           	psect	text157
 36784  01C74E                     __ptext157:
 36785                           	opt callstack 0
 36786  01C74E                     _ADCC_Initialize:
 36787                           	opt callstack 13
 36788                           
 36789                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 36790                           
 36791                           ; BSR set to: 60
 36792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36793                           ;incstack = 0
 36794  01C74E  013E               	movlb	62	; () banked
 36795  01C750  6BDE               	clrf	222,b	;volatile
 36796                           
 36797                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 36798  01C752  6BDF               	clrf	223,b	;volatile
 36799                           
 36800                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 36801  01C754  6BE0               	clrf	224,b	;volatile
 36802                           
 36803                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 36804  01C756  6BE1               	clrf	225,b	;volatile
 36805                           
 36806                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 36807  01C758  6BE4               	clrf	228,b	;volatile
 36808                           
 36809                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 36810  01C75A  6BE5               	clrf	229,b	;volatile
 36811                           
 36812                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 36813  01C75C  6BEA               	clrf	234,b	;volatile
 36814                           
 36815                           ; BSR set to: 62
 36816                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 36817  01C75E  0E40               	movlw	64
 36818  01C760  6FEC               	movwf	236,b	;volatile
 36819                           
 36820                           ; BSR set to: 62
 36821                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 36822  01C762  6BF1               	clrf	241,b	;volatile
 36823                           
 36824                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 36825  01C764  0E20               	movlw	32
 36826  01C766  6FF3               	movwf	243,b	;volatile
 36827                           
 36828                           ; BSR set to: 62
 36829                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 36830  01C768  6BF4               	clrf	244,b	;volatile
 36831                           
 36832                           ; BSR set to: 62
 36833                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 36834  01C76A  6BF5               	clrf	245,b	;volatile
 36835                           
 36836                           ; BSR set to: 62
 36837                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 36838  01C76C  6BF6               	clrf	246,b	;volatile
 36839                           
 36840                           ; BSR set to: 62
 36841                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 36842  01C76E  6BF7               	clrf	247,b	;volatile
 36843                           
 36844                           ; BSR set to: 62
 36845                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 36846  01C770  6BF9               	clrf	249,b	;volatile
 36847                           
 36848                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 36849  01C772  0E5B               	movlw	91
 36850  01C774  6FFA               	movwf	250,b	;volatile
 36851                           
 36852                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 36853  01C776  0E27               	movlw	39
 36854  01C778  6FFB               	movwf	251,b	;volatile
 36855                           
 36856                           ; BSR set to: 62
 36857                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 36858  01C77A  6BFC               	clrf	252,b	;volatile
 36859                           
 36860                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 36861  01C77C  0E02               	movlw	2
 36862  01C77E  6FFD               	movwf	253,b	;volatile
 36863                           
 36864                           ; BSR set to: 62
 36865                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 36866  01C780  6BFE               	clrf	254,b	;volatile
 36867                           
 36868                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 36869  01C782  0E07               	movlw	7
 36870  01C784  6FFF               	movwf	255,b	;volatile
 36871                           
 36872                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 36873  01C786  0E84               	movlw	132
 36874  01C788  6FF8               	movwf	248,b	;volatile
 36875                           
 36876                           ; BSR set to: 62
 36877                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 36878  01C78A  0139               	movlb	57	; () banked
 36879  01C78C  95A1               	bcf	161,2,b	;volatile
 36880                           
 36881                           ; BSR set to: 57
 36882                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 36883  01C78E  8591               	bsf	145,2,b	;volatile
 36884                           
 36885                           ; BSR set to: 57
 36886                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 36887  01C790  0ED8               	movlw	low _ADCC_DefaultInterruptHandler
 36888  01C792  6EE6               	movwf	postinc1,c
 36889  01C794  0EDB               	movlw	high _ADCC_DefaultInterruptHandler
 36890  01C796  6EE6               	movwf	postinc1,c
 36891  01C798  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 36892  01C79A  6EE6               	movwf	postinc1,c
 36893  01C79C  EC89  F0EB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 36894                           
 36895                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 36896  01C7A0  0139               	movlb	57	; () banked
 36897  01C7A2  97A1               	bcf	161,3,b	;volatile
 36898                           
 36899                           ; BSR set to: 57
 36900                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 36901  01C7A4  8791               	bsf	145,3,b	;volatile
 36902                           
 36903                           ; BSR set to: 57
 36904                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 36905  01C7A6  0ED8               	movlw	low _ADCC_DefaultInterruptHandler
 36906  01C7A8  6EE6               	movwf	postinc1,c
 36907  01C7AA  0EDB               	movlw	high _ADCC_DefaultInterruptHandler
 36908  01C7AC  6EE6               	movwf	postinc1,c
 36909  01C7AE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 36910  01C7B0  6EE6               	movwf	postinc1,c
 36911  01C7B2  EC75  F0EB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 36912                           
 36913                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36914  01C7B6  0012               	return		;funcret
 36915  01C7B8                     __end_of_ADCC_Initialize:
 36916                           	opt callstack 0
 36917                           
 36918 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 36919 ;; Defined at:
 36920 ;;		line 336 in file "mcc_generated_files/adcc.c"
 36921 ;; Parameters:    Size  Location     Type
 36922 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36923 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 36924 ;; Auto vars:     Size  Location     Type
 36925 ;;		None
 36926 ;; Return value:  Size  Location     Type
 36927 ;;                  1  [STACK] void 
 36928 ;; Registers used:
 36929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36930 ;; Tracked objects:
 36931 ;;		On entry : 0/1
 36932 ;;		On exit  : 0/0
 36933 ;;		Unchanged: 0/0
 36934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36939 ;;Total ram usage:        0 bytes
 36940 ;; Hardware stack levels used:    1
 36941 ;; Hardware stack levels required when called:   15
 36942 ;; This function calls:
 36943 ;;		Nothing
 36944 ;; This function is called by:
 36945 ;;		_ADCC_Initialize
 36946 ;;		_start_adc_scan
 36947 ;; This function uses a reentrant model
 36948 ;;
 36949                           
 36950                           	psect	text158
 36951  01D6EA                     __ptext158:
 36952                           	opt callstack 0
 36953  01D6EA                     _ADCC_SetADTIInterruptHandler:
 36954                           	opt callstack 14
 36955                           
 36956                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 36957                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36958                           
 36959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36960                           ;incstack = 0
 36961  01D6EA  50E1               	movf	fsr1l,w,c
 36962  01D6EC  0FFD               	addlw	-3
 36963  01D6EE  6ED9               	movwf	fsr2l,c
 36964  01D6F0  50E2               	movf	fsr1h,w,c
 36965  01D6F2  6EDA               	movwf	fsr2h,c
 36966  01D6F4  0EFF               	movlw	255
 36967  01D6F6  22DA               	addwfc	fsr2h,f,c
 36968  01D6F8  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 36969  01D6FE  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 36970  01D704  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 36971                           
 36972                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 36973  01D70A  52E5               	movf	postdec1,f,c
 36974  01D70C  52E5               	movf	postdec1,f,c
 36975  01D70E  52E5               	movf	postdec1,f,c
 36976  01D710  0012               	return		;funcret
 36977  01D712                     __end_of_ADCC_SetADTIInterruptHandler:
 36978                           	opt callstack 0
 36979                           
 36980 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 36981 ;; Defined at:
 36982 ;;		line 323 in file "mcc_generated_files/adcc.c"
 36983 ;; Parameters:    Size  Location     Type
 36984 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36985 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 36986 ;; Auto vars:     Size  Location     Type
 36987 ;;		None
 36988 ;; Return value:  Size  Location     Type
 36989 ;;                  1  [STACK] void 
 36990 ;; Registers used:
 36991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36992 ;; Tracked objects:
 36993 ;;		On entry : 7/1
 36994 ;;		On exit  : 0/0
 36995 ;;		Unchanged: 0/0
 36996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37001 ;;Total ram usage:        0 bytes
 37002 ;; Hardware stack levels used:    1
 37003 ;; Hardware stack levels required when called:   15
 37004 ;; This function calls:
 37005 ;;		Nothing
 37006 ;; This function is called by:
 37007 ;;		_ADCC_Initialize
 37008 ;;		_start_adc_scan
 37009 ;; This function uses a reentrant model
 37010 ;;
 37011                           
 37012                           	psect	text159
 37013  01D712                     __ptext159:
 37014                           	opt callstack 0
 37015  01D712                     _ADCC_SetADIInterruptHandler:
 37016                           	opt callstack 14
 37017                           
 37018                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 37019                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37020                           
 37021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37022                           ;incstack = 0
 37023  01D712  50E1               	movf	fsr1l,w,c
 37024  01D714  0FFD               	addlw	-3
 37025  01D716  6ED9               	movwf	fsr2l,c
 37026  01D718  50E2               	movf	fsr1h,w,c
 37027  01D71A  6EDA               	movwf	fsr2h,c
 37028  01D71C  0EFF               	movlw	255
 37029  01D71E  22DA               	addwfc	fsr2h,f,c
 37030  01D720  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 37031  01D726  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 37032  01D72C  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 37033                           
 37034                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 37035  01D732  52E5               	movf	postdec1,f,c
 37036  01D734  52E5               	movf	postdec1,f,c
 37037  01D736  52E5               	movf	postdec1,f,c
 37038  01D738  0012               	return		;funcret
 37039  01D73A                     __end_of_ADCC_SetADIInterruptHandler:
 37040                           	opt callstack 0
 37041                           
 37042 ;; *************** function _INT1_ISR *****************
 37043 ;; Defined at:
 37044 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 37045 ;; Parameters:    Size  Location     Type
 37046 ;;		None
 37047 ;; Auto vars:     Size  Location     Type
 37048 ;;		None
 37049 ;; Return value:  Size  Location     Type
 37050 ;;                  1    wreg      void 
 37051 ;; Registers used:
 37052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 37053 ;; Tracked objects:
 37054 ;;		On entry : 0/0
 37055 ;;		On exit  : 0/0
 37056 ;;		Unchanged: 0/0
 37057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37062 ;;Total ram usage:        4 bytes
 37063 ;; Hardware stack levels used:    1
 37064 ;; Hardware stack levels required when called:    5
 37065 ;; This function calls:
 37066 ;;		_INT1_CallBack
 37067 ;; This function is called by:
 37068 ;;		Interrupt level 1
 37069 ;; This function uses a non-reentrant model
 37070 ;;
 37071                           
 37072                           	psect	text160
 37073  01D168                     __ptext160:
 37074                           	opt callstack 0
 37075  01D168                     _INT1_ISR:
 37076                           	opt callstack 11
 37077                           
 37078                           ;incstack = 0
 37079  01D168  006F FF60  F027    	movff	status,??_INT1_ISR
 37080  01D16E  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 37081  01D174  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 37082  01D17A  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 37083  01D180  EE16  F10C         	lfsr	1,___intlo_sp
 37084                           
 37085                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 37086  01D184  0139               	movlb	57	; () banked
 37087  01D186  91A5               	bcf	165,0,b	;volatile
 37088                           
 37089                           ; BSR set to: 57
 37090                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 37091  01D188  ECEC  F0EB         	call	_INT1_CallBack	;wreg free
 37092  01D18C  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 37093  01D192  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 37094  01D198  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 37095  01D19E  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 37096  01D1A4  0011               	retfie		f
 37097  01D1A6                     __end_of_INT1_ISR:
 37098                           	opt callstack 0
 37099                           
 37100 ;; *************** function _INT1_CallBack *****************
 37101 ;; Defined at:
 37102 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 37103 ;; Parameters:    Size  Location     Type
 37104 ;;		None
 37105 ;; Auto vars:     Size  Location     Type
 37106 ;;		None
 37107 ;; Return value:  Size  Location     Type
 37108 ;;                  1  [STACK] void 
 37109 ;; Registers used:
 37110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 37111 ;; Tracked objects:
 37112 ;;		On entry : 3F/39
 37113 ;;		On exit  : 0/0
 37114 ;;		Unchanged: 0/0
 37115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37120 ;;Total ram usage:        0 bytes
 37121 ;; Hardware stack levels used:    1
 37122 ;; Hardware stack levels required when called:    4
 37123 ;; This function calls:
 37124 ;;		Absolute function
 37125 ;;		_INT1_DefaultInterruptHandler
 37126 ;;		_switch_handler
 37127 ;; This function is called by:
 37128 ;;		_INT1_ISR
 37129 ;; This function uses a reentrant model
 37130 ;;
 37131                           
 37132                           	psect	text161
 37133  01D7D8                     __ptext161:
 37134                           	opt callstack 0
 37135  01D7D8                     _INT1_CallBack:
 37136                           	opt callstack 11
 37137                           
 37138                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 37139                           
 37140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37141                           ;incstack = 0
 37142  01D7D8  0100               	movlb	0	; () banked
 37143  01D7DA  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 37144  01D7DC  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 37145  01D7DE  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 37146  01D7E0  B4D8               	btfsc	status,2,c
 37147  01D7E2  0012               	return	
 37148                           
 37149                           ; BSR set to: 0
 37150                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 37151  01D7E4  D801               	call	u1100_28
 37152  01D7E6  0012               	return	
 37153  01D7E8                     u1100_28:
 37154  01D7E8  0005               	push	
 37155  01D7EA  6EFA               	movwf	pclath,c
 37156  01D7EC  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 37157  01D7EE  6EFD               	movwf	tosl,c
 37158  01D7F0  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 37159  01D7F2  6EFE               	movwf	tosh,c
 37160  01D7F4  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 37161  01D7F6  6EFF               	movwf	tosu,c
 37162  01D7F8  50FA               	movf	pclath,w,c
 37163  01D7FA  0012               	return		;indir
 37164  01D7FC                     __end_of_INT1_CallBack:
 37165                           	opt callstack 0
 37166                           
 37167 ;; *************** function _INT1_DefaultInterruptHandler *****************
 37168 ;; Defined at:
 37169 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 37170 ;; Parameters:    Size  Location     Type
 37171 ;;		None
 37172 ;; Auto vars:     Size  Location     Type
 37173 ;;		None
 37174 ;; Return value:  Size  Location     Type
 37175 ;;                  1  [STACK] void 
 37176 ;; Registers used:
 37177 ;;		None
 37178 ;; Tracked objects:
 37179 ;;		On entry : 3F/0
 37180 ;;		On exit  : 0/0
 37181 ;;		Unchanged: 0/0
 37182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37187 ;;Total ram usage:        0 bytes
 37188 ;; Hardware stack levels used:    1
 37189 ;; Hardware stack levels required when called:    3
 37190 ;; This function calls:
 37191 ;;		Nothing
 37192 ;; This function is called by:
 37193 ;;		_EXT_INT_Initialize
 37194 ;;		_INT1_CallBack
 37195 ;; This function uses a reentrant model
 37196 ;;
 37197                           
 37198                           	psect	text162
 37199  01DBD2                     __ptext162:
 37200                           	opt callstack 0
 37201  01DBD2                     _INT1_DefaultInterruptHandler:
 37202                           	opt callstack 11
 37203                           
 37204                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37205                           
 37206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37207                           ;incstack = 0
 37208  01DBD2  0012               	return		;funcret
 37209  01DBD4                     __end_of_INT1_DefaultInterruptHandler:
 37210                           	opt callstack 0
 37211                           
 37212 ;; *************** function _switch_handler *****************
 37213 ;; Defined at:
 37214 ;;		line 58 in file "dio.c"
 37215 ;; Parameters:    Size  Location     Type
 37216 ;;		None
 37217 ;; Auto vars:     Size  Location     Type
 37218 ;;  i               1  [STACK] unsigned char 
 37219 ;;  sw_value        1  [STACK] unsigned char 
 37220 ;; Return value:  Size  Location     Type
 37221 ;;                  1  [STACK] void 
 37222 ;; Registers used:
 37223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 37224 ;; Tracked objects:
 37225 ;;		On entry : 3F/0
 37226 ;;		On exit  : 0/0
 37227 ;;		Unchanged: 0/0
 37228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37233 ;;Total ram usage:        0 bytes
 37234 ;; Hardware stack levels used:    1
 37235 ;; Hardware stack levels required when called:    3
 37236 ;; This function calls:
 37237 ;;		Nothing
 37238 ;; This function is called by:
 37239 ;;		_start_switch_handler
 37240 ;;		_INT1_CallBack
 37241 ;; This function uses a reentrant model
 37242 ;;
 37243                           
 37244                           	psect	text163
 37245  01A578                     __ptext163:
 37246                           	opt callstack 0
 37247  01A578                     _switch_handler:
 37248                           	opt callstack 0
 37249                           
 37250                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37251  01A578  52E6               	movf	postinc1,f,c
 37252  01A57A  52E6               	movf	postinc1,f,c
 37253                           
 37254                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 37255                           ;stkvar	_i @ sp[(-2)+0]
 37256                           
 37257                           ;incstack = 0
 37258  01A57C  0EFE               	movlw	-2
 37259  01A57E  6AE3               	clrf	plusw1,c
 37260  01A580  9ABF               	bcf	191,5,c	;volatile
 37261                           
 37262                           ;dio.c: 72:  __nop();
 37263  01A582  F000               	nop	
 37264                           
 37265                           ;dio.c: 73:  __nop();
 37266  01A584  F000               	nop	
 37267                           
 37268                           ;dio.c: 74:  __nop();
 37269  01A586  F000               	nop	
 37270                           
 37271                           ;dio.c: 75:  __nop();
 37272  01A588  F000               	nop	
 37273                           
 37274                           ;dio.c: 76:  __nop();
 37275  01A58A  F000               	nop	
 37276                           
 37277                           ;dio.c: 77:  __nop();
 37278  01A58C  F000               	nop	
 37279  01A58E  D016               	goto	l11739
 37280  01A590                     l11725:
 37281                           
 37282                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 37283  01A590  A6CF               	btfss	207,3,c	;volatile
 37284  01A592  D00E               	goto	u1066_20
 37285  01A594  D00A               	goto	u1066_21
 37286  01A596                     u1064_28:
 37287                           
 37288                           ;stkvar	_sw_value @ sp[(-2)+1]
 37289  01A596  0EFF               	movlw	-1
 37290  01A598  0060  F033  FFE3   	movff	btemp+11,plusw1
 37291                           
 37292                           ;dio.c: 83:    break;
 37293  01A59E  D027               	goto	l11741
 37294  01A5A0                     l11727:
 37295                           
 37296                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 37297  01A5A0  A4CF               	btfss	207,2,c	;volatile
 37298  01A5A2  D006               	goto	u1066_20
 37299  01A5A4  D002               	goto	u1066_21
 37300  01A5A6                     l11729:
 37301                           
 37302                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 37303  01A5A6  A6CD               	btfss	205,3,c	;volatile
 37304  01A5A8  D003               	goto	u1066_20
 37305  01A5AA                     u1066_21:
 37306  01A5AA  6A0C               	clrf	(btemp+11)^0,c
 37307  01A5AC  2A0C               	incf	(btemp+11)^0,f,c
 37308  01A5AE  D7F3               	goto	u1064_28
 37309  01A5B0                     u1066_20:
 37310  01A5B0  6A0C               	clrf	(btemp+11)^0,c
 37311  01A5B2  D7F1               	goto	u1064_28
 37312  01A5B4                     l11731:
 37313                           
 37314                           ;dio.c: 91:    sw_value = 1;
 37315                           ;stkvar	_sw_value @ sp[(-2)+1]
 37316  01A5B4  0EFF               	movlw	-1
 37317  01A5B6  6AE3               	clrf	plusw1,c
 37318  01A5B8  2AE3               	incf	plusw1,f,c
 37319                           
 37320                           ;dio.c: 92:    break;
 37321  01A5BA  D019               	goto	l11741
 37322  01A5BC                     l11739:
 37323                           
 37324                           ;stkvar	_i @ sp[(-2)+0]
 37325  01A5BC  0EFE               	movlw	-2
 37326  01A5BE  50E3               	movf	plusw1,w,c
 37327  01A5C0  6E0B               	movwf	(btemp+10)^0,c
 37328  01A5C2  6A0C               	clrf	(btemp+11)^0,c
 37329                           
 37330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37331                           ; Switch size 1, requested type "simple"
 37332                           ; Number of cases is 1, Range of values is 0 to 0
 37333                           ; switch strategies available:
 37334                           ; Name         Instructions Cycles
 37335                           ; simple_byte            4     3 (average)
 37336                           ;	Chosen strategy is simple_byte
 37337  01A5C4  500C               	movf	(btemp+11)^0,w,c
 37338  01A5C6  0A00               	xorlw	0	; case 0
 37339  01A5C8  A4D8               	btfss	status,2,c
 37340  01A5CA  D7F4               	goto	l11731
 37341                           
 37342                           ; Switch size 1, requested type "simple"
 37343                           ; Number of cases is 5, Range of values is 0 to 4
 37344                           ; switch strategies available:
 37345                           ; Name         Instructions Cycles
 37346                           ; simple_byte           16     9 (average)
 37347                           ;	Chosen strategy is simple_byte
 37348  01A5CC  500B               	movf	(btemp+10)^0,w,c
 37349  01A5CE  0A00               	xorlw	0	; case 0
 37350  01A5D0  B4D8               	btfsc	status,2,c
 37351  01A5D2  D7F0               	goto	l11731
 37352  01A5D4  0A01               	xorlw	1	; case 1
 37353  01A5D6  B4D8               	btfsc	status,2,c
 37354  01A5D8  D7ED               	goto	l11731
 37355  01A5DA  0A03               	xorlw	3	; case 2
 37356  01A5DC  B4D8               	btfsc	status,2,c
 37357  01A5DE  D7E0               	goto	l11727
 37358  01A5E0  0A01               	xorlw	1	; case 3
 37359  01A5E2  B4D8               	btfsc	status,2,c
 37360  01A5E4  D7D5               	goto	l11725
 37361  01A5E6  0A07               	xorlw	7	; case 4
 37362  01A5E8  B4D8               	btfsc	status,2,c
 37363  01A5EA  D7DD               	goto	l11729
 37364  01A5EC  D7E3               	goto	l11731
 37365  01A5EE                     l11741:
 37366                           
 37367                           ;dio.c: 102:   if (sw_value) {
 37368                           ;stkvar	_sw_value @ sp[(-2)+1]
 37369  01A5EE  0EFF               	movlw	-1
 37370  01A5F0  50E3               	movf	plusw1,w,c
 37371  01A5F2  B4D8               	btfsc	status,2,c
 37372  01A5F4  D018               	goto	l11747
 37373                           
 37374                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 37375                           ;stkvar	_i @ sp[(-2)+0]
 37376  01A5F6  0EFE               	movlw	-2
 37377  01A5F8  50E3               	movf	plusw1,w,c
 37378  01A5FA  0D05               	mullw	5
 37379  01A5FC  0EAE               	movlw	low _S
 37380  01A5FE  24F3               	addwf	243,w,c
 37381  01A600  6ED9               	movwf	fsr2l,c
 37382  01A602  0E01               	movlw	high _S
 37383  01A604  20F4               	addwfc	prodh,w,c
 37384  01A606  6EDA               	movwf	fsr2h,c
 37385  01A608  04DE               	decf	postinc2,w,c
 37386  01A60A  A4D8               	btfss	status,2,c
 37387  01A60C  D049               	goto	l11755
 37388                           
 37389                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 37390                           ;stkvar	_i @ sp[(-2)+0]
 37391  01A60E  0EFE               	movlw	-2
 37392  01A610  50E3               	movf	plusw1,w,c
 37393  01A612  0D05               	mullw	5
 37394  01A614  0EAE               	movlw	low _S
 37395  01A616  24F3               	addwf	243,w,c
 37396  01A618  6ED9               	movwf	fsr2l,c
 37397  01A61A  0E01               	movlw	high _S
 37398  01A61C  20F4               	addwfc	prodh,w,c
 37399  01A61E  6EDA               	movwf	fsr2h,c
 37400  01A620  0E00               	movlw	0
 37401  01A622  6EDF               	movwf	indf2,c
 37402  01A624  D03D               	goto	l11755
 37403  01A626                     l11747:
 37404                           
 37405                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 37406                           ;stkvar	_i @ sp[(-2)+0]
 37407  01A626  0EFE               	movlw	-2
 37408  01A628  50E3               	movf	plusw1,w,c
 37409  01A62A  0D05               	mullw	5
 37410  01A62C  0EAE               	movlw	low _S
 37411  01A62E  24F3               	addwf	243,w,c
 37412  01A630  6ED9               	movwf	fsr2l,c
 37413  01A632  0E01               	movlw	high _S
 37414  01A634  20F4               	addwfc	prodh,w,c
 37415  01A636  6EDA               	movwf	fsr2h,c
 37416  01A638  50DF               	movf	indf2,w,c
 37417  01A63A  A4D8               	btfss	status,2,c
 37418  01A63C  D031               	goto	l11755
 37419                           
 37420                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 37421                           ;stkvar	_i @ sp[(-2)+0]
 37422  01A63E  0EFE               	movlw	-2
 37423  01A640  50E3               	movf	plusw1,w,c
 37424  01A642  0D05               	mullw	5
 37425  01A644  0EAE               	movlw	low _S
 37426  01A646  24F3               	addwf	243,w,c
 37427  01A648  6ED9               	movwf	fsr2l,c
 37428  01A64A  0E01               	movlw	high _S
 37429  01A64C  20F4               	addwfc	prodh,w,c
 37430  01A64E  6EDA               	movwf	fsr2h,c
 37431  01A650  0E01               	movlw	1
 37432  01A652  6EDF               	movwf	indf2,c
 37433                           
 37434                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 37435  01A654  EE20  F2BC         	lfsr	2,_V+188	;volatile
 37436                           
 37437                           ;stkvar	_i @ sp[(-2)+0]
 37438  01A658  0EFE               	movlw	-2
 37439  01A65A  50E3               	movf	plusw1,w,c
 37440  01A65C  0D05               	mullw	5
 37441  01A65E  0EAF               	movlw	low (_S+1)
 37442  01A660  24F3               	addwf	243,w,c
 37443  01A662  6EE9               	movwf	fsr0l,c
 37444  01A664  0E01               	movlw	high (_S+1)
 37445  01A666  20F4               	addwfc	prodh,w,c
 37446  01A668  6EEA               	movwf	fsr0h,c
 37447  01A66A  006F FF7B FFEE     	movff	postinc2,postinc0
 37448  01A670  006F FF7B FFEE     	movff	postinc2,postinc0
 37449  01A676  006F FF7B FFEE     	movff	postinc2,postinc0
 37450  01A67C  006F FF7B FFEE     	movff	postinc2,postinc0
 37451                           
 37452                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 37453                           ;stkvar	_i @ sp[(-2)+0]
 37454  01A682  0EFE               	movlw	-2
 37455  01A684  006F FF8C  F00C    	movff	plusw1,btemp+11
 37456  01A68A  0E01               	movlw	1
 37457  01A68C  6E0B               	movwf	(btemp+10)^0,c
 37458  01A68E  2A0C               	incf	(btemp+11)^0,f,c
 37459  01A690  D002               	goto	u1070_24
 37460  01A692                     u1070_25:
 37461  01A692  90D8               	bcf	status,0,c
 37462  01A694  360B               	rlcf	(btemp+10)^0,f,c
 37463  01A696                     u1070_24:
 37464  01A696  2E0C               	decfsz	(btemp+11)^0,f,c
 37465  01A698  D7FC               	goto	u1070_25
 37466  01A69A  500B               	movf	(btemp+10)^0,w,c
 37467  01A69C  0101               	movlb	1	; () banked
 37468  01A69E  13D6               	iorwf	(_S+40)& (0+255),f,b	;volatile
 37469  01A6A0                     l11755:
 37470                           
 37471                           ;dio.c: 113:  } while (++i < 6);
 37472                           ;stkvar	_i @ sp[(-2)+0]
 37473  01A6A0  0EFE               	movlw	-2
 37474  01A6A2  2AE3               	incf	plusw1,f,c
 37475  01A6A4  0EFE               	movlw	-2
 37476  01A6A6  006F FF8C  F001    	movff	plusw1,btemp
 37477  01A6AC  0E05               	movlw	5
 37478  01A6AE  6401               	cpfsgt	btemp^0,c
 37479  01A6B0  D785               	goto	l11739
 37480                           
 37481                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 37482  01A6B2  8ABF               	bsf	191,5,c	;volatile
 37483                           
 37484                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37485  01A6B4  52E5               	movf	postdec1,f,c
 37486  01A6B6  52E5               	movf	postdec1,f,c
 37487  01A6B8  0012               	return		;funcret
 37488  01A6BA                     __end_of_switch_handler:
 37489                           	opt callstack 0
 37490                           
 37491 ;; *************** function _TMR5_ISR *****************
 37492 ;; Defined at:
 37493 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 37494 ;; Parameters:    Size  Location     Type
 37495 ;;		None
 37496 ;; Auto vars:     Size  Location     Type
 37497 ;;		None
 37498 ;; Return value:  Size  Location     Type
 37499 ;;                  1    wreg      void 
 37500 ;; Registers used:
 37501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 37502 ;; Tracked objects:
 37503 ;;		On entry : 0/0
 37504 ;;		On exit  : 3F/0
 37505 ;;		Unchanged: 0/0
 37506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37509 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37510 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37511 ;;Total ram usage:       15 bytes
 37512 ;; Hardware stack levels used:    1
 37513 ;; Hardware stack levels required when called:    9
 37514 ;; This function calls:
 37515 ;;		_TMR5_CallBack
 37516 ;;		_TMR5_WriteTimer
 37517 ;; This function is called by:
 37518 ;;		Interrupt level 1
 37519 ;; This function uses a non-reentrant model
 37520 ;;
 37521                           
 37522                           	psect	text164
 37523  01B3AC                     __ptext164:
 37524                           	opt callstack 0
 37525  01B3AC                     _TMR5_ISR:
 37526                           	opt callstack 7
 37527                           
 37528                           ;incstack = 0
 37529  01B3AC  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 37530  01B3B2  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 37531  01B3B8  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 37532  01B3BE  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 37533  01B3C4  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 37534  01B3CA  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 37535  01B3D0  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 37536  01B3D6  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 37537  01B3DC  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 37538  01B3E2  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 37539  01B3E8  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 37540  01B3EE  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 37541  01B3F4  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 37542  01B3FA  EE16  F10C         	lfsr	1,___intlo_sp
 37543                           
 37544                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 37545  01B3FE  0139               	movlb	57	; () banked
 37546  01B400  9DA8               	bcf	168,6,b	;volatile
 37547                           
 37548                           ; BSR set to: 57
 37549                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 37550  01B402  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 37551  01B408  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 37552  01B40E  EC73  F0E8         	call	_TMR5_WriteTimer	;wreg free
 37553                           
 37554                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 37555  01B412  0102               	movlb	2	; () banked
 37556  01B414  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 37557  01B416  6E2B               	movwf	??_TMR5_ISR^0,c
 37558  01B418  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 37559  01B41A  0E05               	movlw	5
 37560  01B41C  262B               	addwf	??_TMR5_ISR^0,f,c
 37561  01B41E  0E00               	movlw	0
 37562  01B420  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 37563  01B422  0100               	movlb	0	; () banked
 37564  01B424  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 37565  01B426  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 37566  01B428  502B               	movf	??_TMR5_ISR^0,w,c
 37567  01B42A  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 37568  01B42C  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 37569  01B42E  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 37570  01B430  A0D8               	btfss	status,0,c
 37571  01B432  D005               	goto	i1l1021
 37572                           
 37573                           ; BSR set to: 0
 37574                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 37575  01B434  ECFE  F0EB         	call	_TMR5_CallBack	;wreg free
 37576                           
 37577                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 37578  01B438  0100               	movlb	0	; () banked
 37579  01B43A  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 37580  01B43C  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 37581  01B43E                     i1l1021:
 37582                           
 37583                           ; BSR set to: 0
 37584  01B43E  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 37585  01B444  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 37586  01B44A  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 37587  01B450  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 37588  01B456  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 37589  01B45C  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 37590  01B462  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 37591  01B468  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 37592  01B46E  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 37593  01B474  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 37594  01B47A  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 37595  01B480  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 37596  01B486  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 37597  01B48C  0011               	retfie		f
 37598  01B48E                     __end_of_TMR5_ISR:
 37599                           	opt callstack 0
 37600                           
 37601 ;; *************** function _TMR5_WriteTimer *****************
 37602 ;; Defined at:
 37603 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 37604 ;; Parameters:    Size  Location     Type
 37605 ;;  timerVal        2  [STACK] unsigned short 
 37606 ;; Auto vars:     Size  Location     Type
 37607 ;;		None
 37608 ;; Return value:  Size  Location     Type
 37609 ;;                  1  [STACK] void 
 37610 ;; Registers used:
 37611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37612 ;; Tracked objects:
 37613 ;;		On entry : 3F/39
 37614 ;;		On exit  : 0/0
 37615 ;;		Unchanged: 0/0
 37616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37621 ;;Total ram usage:        0 bytes
 37622 ;; Hardware stack levels used:    1
 37623 ;; Hardware stack levels required when called:    3
 37624 ;; This function calls:
 37625 ;;		Nothing
 37626 ;; This function is called by:
 37627 ;;		_TMR5_ISR
 37628 ;; This function uses a reentrant model
 37629 ;;
 37630                           
 37631                           	psect	text165
 37632  01D0E6                     __ptext165:
 37633                           	opt callstack 0
 37634  01D0E6                     _TMR5_WriteTimer:
 37635                           	opt callstack 12
 37636                           
 37637                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 37638                           
 37639                           ; BSR set to: 0
 37640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37641                           ;incstack = 0
 37642  01D0E6  A49A               	btfss	154,2,c	;volatile
 37643  01D0E8  D00F               	goto	l11967
 37644                           
 37645                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 37646  01D0EA  909A               	bcf	154,0,c	;volatile
 37647                           
 37648                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 37649                           ;stkvar	_timerVal @ sp[(0)+-2]
 37650  01D0EC  0EFF               	movlw	255
 37651  01D0EE  24E1               	addwf	fsr1l,w,c
 37652  01D0F0  6ED9               	movwf	fsr2l,c
 37653  01D0F2  0EFF               	movlw	255
 37654  01D0F4  20E2               	addwfc	fsr1h,w,c
 37655  01D0F6  6EDA               	movwf	fsr2h,c
 37656  01D0F8  50DF               	movf	indf2,w,c
 37657  01D0FA  6E99               	movwf	153,c	;volatile
 37658                           
 37659                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 37660                           ;stkvar	_timerVal @ sp[(0)+-2]
 37661  01D0FC  0EFE               	movlw	-2
 37662  01D0FE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 37663                           
 37664                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 37665  01D104  809A               	bsf	154,0,c	;volatile
 37666                           
 37667                           ;mcc_generated_files/tmr5.c: 144:  } else {
 37668  01D106  D00C               	goto	l1004
 37669  01D108                     l11967:
 37670                           
 37671                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 37672                           ;stkvar	_timerVal @ sp[(0)+-2]
 37673  01D108  0EFF               	movlw	255
 37674  01D10A  24E1               	addwf	fsr1l,w,c
 37675  01D10C  6ED9               	movwf	fsr2l,c
 37676  01D10E  0EFF               	movlw	255
 37677  01D110  20E2               	addwfc	fsr1h,w,c
 37678  01D112  6EDA               	movwf	fsr2h,c
 37679  01D114  50DF               	movf	indf2,w,c
 37680  01D116  6E99               	movwf	153,c	;volatile
 37681                           
 37682                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 37683                           ;stkvar	_timerVal @ sp[(0)+-2]
 37684  01D118  0EFE               	movlw	-2
 37685  01D11A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 37686  01D120                     l1004:
 37687                           
 37688                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37689  01D120  52E5               	movf	postdec1,f,c
 37690  01D122  52E5               	movf	postdec1,f,c
 37691  01D124  0012               	return		;funcret
 37692  01D126                     __end_of_TMR5_WriteTimer:
 37693                           	opt callstack 0
 37694                           
 37695 ;; *************** function _TMR5_CallBack *****************
 37696 ;; Defined at:
 37697 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 37698 ;; Parameters:    Size  Location     Type
 37699 ;;		None
 37700 ;; Auto vars:     Size  Location     Type
 37701 ;;		None
 37702 ;; Return value:  Size  Location     Type
 37703 ;;                  1  [STACK] void 
 37704 ;; Registers used:
 37705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 37706 ;; Tracked objects:
 37707 ;;		On entry : 3F/0
 37708 ;;		On exit  : 0/0
 37709 ;;		Unchanged: 0/0
 37710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37715 ;;Total ram usage:        0 bytes
 37716 ;; Hardware stack levels used:    1
 37717 ;; Hardware stack levels required when called:    8
 37718 ;; This function calls:
 37719 ;;		Absolute function
 37720 ;;		_TMR5_DefaultInterruptHandler
 37721 ;; This function is called by:
 37722 ;;		_TMR5_ISR
 37723 ;; This function uses a reentrant model
 37724 ;;
 37725                           
 37726                           	psect	text166
 37727  01D7FC                     __ptext166:
 37728                           	opt callstack 0
 37729  01D7FC                     _TMR5_CallBack:
 37730                           	opt callstack 7
 37731                           
 37732                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 37733                           
 37734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37735                           ;incstack = 0
 37736  01D7FC  0100               	movlb	0	; () banked
 37737  01D7FE  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 37738  01D800  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 37739  01D802  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 37740  01D804  B4D8               	btfsc	status,2,c
 37741  01D806  0012               	return	
 37742                           
 37743                           ; BSR set to: 0
 37744                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 37745  01D808  D801               	call	u1109_28
 37746  01D80A  0012               	return	
 37747  01D80C                     u1109_28:
 37748  01D80C  0005               	push	
 37749  01D80E  6EFA               	movwf	pclath,c
 37750  01D810  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 37751  01D812  6EFD               	movwf	tosl,c
 37752  01D814  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 37753  01D816  6EFE               	movwf	tosh,c
 37754  01D818  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 37755  01D81A  6EFF               	movwf	tosu,c
 37756  01D81C  50FA               	movf	pclath,w,c
 37757  01D81E  0012               	return		;indir
 37758  01D820                     __end_of_TMR5_CallBack:
 37759                           	opt callstack 0
 37760                           
 37761 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 37762 ;; Defined at:
 37763 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 37764 ;; Parameters:    Size  Location     Type
 37765 ;;		None
 37766 ;; Auto vars:     Size  Location     Type
 37767 ;;		None
 37768 ;; Return value:  Size  Location     Type
 37769 ;;                  1  [STACK] void 
 37770 ;; Registers used:
 37771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37772 ;; Tracked objects:
 37773 ;;		On entry : 3F/0
 37774 ;;		On exit  : 0/0
 37775 ;;		Unchanged: 0/0
 37776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37781 ;;Total ram usage:        0 bytes
 37782 ;; Hardware stack levels used:    1
 37783 ;; Hardware stack levels required when called:    7
 37784 ;; This function calls:
 37785 ;;		_check_day_time
 37786 ;; This function is called by:
 37787 ;;		_TMR5_Initialize
 37788 ;;		_TMR5_CallBack
 37789 ;; This function uses a reentrant model
 37790 ;;
 37791                           
 37792                           	psect	text167
 37793  01D218                     __ptext167:
 37794                           	opt callstack 0
 37795  01D218                     _TMR5_DefaultInterruptHandler:
 37796                           	opt callstack 7
 37797                           
 37798                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 37799                           
 37800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37801                           ;incstack = 0
 37802  01D218  A0BE               	btfss	190,0,c	;volatile
 37803  01D21A  D002               	goto	u1030_20
 37804  01D21C  0E01               	movlw	1
 37805  01D21E  D001               	goto	u1030_26
 37806  01D220                     u1030_20:
 37807  01D220  0E00               	movlw	0
 37808  01D222                     u1030_26:
 37809  01D222  0AFF               	xorlw	255
 37810  01D224  6E0C               	movwf	(btemp+11)^0,c
 37811  01D226  50BE               	movf	190,w,c	;volatile
 37812  01D228  180C               	xorwf	(btemp+11)^0,w,c
 37813  01D22A  0BFE               	andlw	-2
 37814  01D22C  180C               	xorwf	(btemp+11)^0,w,c
 37815  01D22E  6EBE               	movwf	190,c	;volatile
 37816                           
 37817                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 37818  01D230  0E01               	movlw	1
 37819  01D232  0102               	movlb	2	; () banked
 37820  01D234  27BC               	addwf	(_V+188)& (0+255),f,b	;volatile
 37821  01D236  0E00               	movlw	0
 37822  01D238  23BD               	addwfc	(_V+189)& (0+255),f,b	;volatile
 37823  01D23A  23BE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 37824  01D23C  23BF               	addwfc	(_V+191)& (0+255),f,b	;volatile
 37825                           
 37826                           ; BSR set to: 2
 37827                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 37828  01D23E  0E01               	movlw	1
 37829  01D240  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 37830  01D242  0E00               	movlw	0
 37831  01D244  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 37832  01D246  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 37833  01D248  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 37834                           
 37835                           ; BSR set to: 2
 37836                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 37837  01D24A  EC77  F0CB         	call	_check_day_time	;wreg free
 37838                           
 37839                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37840  01D24E  0012               	return		;funcret
 37841  01D250                     __end_of_TMR5_DefaultInterruptHandler:
 37842                           	opt callstack 0
 37843                           
 37844 ;; *************** function _check_day_time *****************
 37845 ;; Defined at:
 37846 ;;		line 165 in file "mbmc.c"
 37847 ;; Parameters:    Size  Location     Type
 37848 ;;		None
 37849 ;; Auto vars:     Size  Location     Type
 37850 ;;  light           4  [STACK] float 
 37851 ;; Return value:  Size  Location     Type
 37852 ;;                  1  [STACK] _Bool 
 37853 ;; Registers used:
 37854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37855 ;; Tracked objects:
 37856 ;;		On entry : 3F/2
 37857 ;;		On exit  : 0/0
 37858 ;;		Unchanged: 0/0
 37859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37864 ;;Total ram usage:        0 bytes
 37865 ;; Hardware stack levels used:    1
 37866 ;; Hardware stack levels required when called:    6
 37867 ;; This function calls:
 37868 ;;		___flge
 37869 ;;		_conv_raw_result
 37870 ;;		_get_ac_charger_relay
 37871 ;;		_set_ac_charger_relay
 37872 ;; This function is called by:
 37873 ;;		_TMR5_DefaultInterruptHandler
 37874 ;; This function uses a reentrant model
 37875 ;;
 37876                           
 37877                           	psect	text168
 37878  0196EE                     __ptext168:
 37879                           	opt callstack 0
 37880  0196EE                     _check_day_time:
 37881                           	opt callstack 0
 37882                           
 37883                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37884  0196EE  52E6               	movf	postinc1,f,c
 37885  0196F0  52E6               	movf	postinc1,f,c
 37886  0196F2  52E6               	movf	postinc1,f,c
 37887  0196F4  52E6               	movf	postinc1,f,c
 37888                           
 37889                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 37890                           
 37891                           ;incstack = 0
 37892  0196F6  0E00               	movlw	0
 37893  0196F8  6EE6               	movwf	postinc1,c
 37894  0196FA  0E0D               	movlw	13
 37895  0196FC  6EE6               	movwf	postinc1,c
 37896  0196FE  EC02  F0B0         	call	_conv_raw_result	;wreg free
 37897                           
 37898                           ;stkvar	_light @ sp[(-4)+0]
 37899  019702  0EFC               	movlw	-4
 37900  019704  0060  F007  FFE3   	movff	btemp,plusw1
 37901  01970A  0EFD               	movlw	-3
 37902  01970C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 37903  019712  0EFE               	movlw	-2
 37904  019714  0060  F00F  FFE3   	movff	btemp+2,plusw1
 37905  01971A  0EFF               	movlw	-1
 37906  01971C  0060  F013  FFE3   	movff	btemp+3,plusw1
 37907                           
 37908                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 37909  019722  2A41               	incf	check_day_time@day_delay^0,f,c
 37910  019724  0441               	decf	check_day_time@day_delay^0,w,c
 37911  019726  A4D8               	btfss	status,2,c
 37912  019728  D0A9               	goto	l2175
 37913  01972A  0102               	movlb	2	; () banked
 37914  01972C  51AF               	movf	(_V+175)& (0+255),w,b	;volatile
 37915  01972E  B4D8               	btfsc	status,2,c
 37916  019730  D0A5               	goto	l2175
 37917                           
 37918                           ; BSR set to: 2
 37919                           ;mbmc.c: 173:   if (C.soc > 3) {
 37920  019732  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37921  019736  0E01               	movlw	1
 37922  019738  50DB               	movf	plusw2,w,c
 37923  01973A  E104               	bnz	u1000_20
 37924  01973C  0E04               	movlw	4
 37925  01973E  5CDE               	subwf	postinc2,w,c
 37926  019740  A0D8               	btfss	status,0,c
 37927  019742  D073               	goto	l10819
 37928  019744                     u1000_20:
 37929                           
 37930                           ; BSR set to: 2
 37931                           ;mbmc.c: 174:    if (!C.day) {
 37932  019744  EE22  F139         	lfsr	2,_C+314	;volatile
 37933  019748  50DF               	movf	indf2,w,c
 37934  01974A  A4D8               	btfss	status,2,c
 37935  01974C  D035               	goto	l10807
 37936                           
 37937                           ; BSR set to: 2
 37938                           ;mbmc.c: 175:     if (light > 22.0) {
 37939                           ;stkvar	_light @ sp[(-4)+0]
 37940  01974E  0EFC               	movlw	-4
 37941  019750  006F FF8F FFE6     	movff	plusw1,postinc1
 37942  019756  006F FF8F FFE6     	movff	plusw1,postinc1
 37943  01975C  006F FF8F FFE6     	movff	plusw1,postinc1
 37944  019762  006F FF8F FFE6     	movff	plusw1,postinc1
 37945  019768  0E00               	movlw	0
 37946  01976A  6EE6               	movwf	postinc1,c
 37947  01976C  0E00               	movlw	0
 37948  01976E  6EE6               	movwf	postinc1,c
 37949  019770  0EB0               	movlw	176
 37950  019772  6EE6               	movwf	postinc1,c
 37951  019774  0E41               	movlw	65
 37952  019776  6EE6               	movwf	postinc1,c
 37953  019778  EC07  F0D0         	call	___flge	;wreg free
 37954  01977C  B001               	btfsc	btemp& (0+255),0,c
 37955  01977E  D07E               	goto	l2175
 37956                           
 37957                           ;mbmc.c: 176:      C.day = 1;
 37958  019780  0E01               	movlw	1
 37959  019782  006F FFA0  F939    	movff	wreg,_C+314	;volatile
 37960                           
 37961                           ;mbmc.c: 177:      C.day_start = V.ticks;
 37962  019788  EE20  F281         	lfsr	2,_V+129	;volatile
 37963  01978C  006F FF78  F93A    	movff	postinc2,_C+315	;volatile
 37964  019792  006F FF78  F93B    	movff	postinc2,_C+316	;volatile
 37965  019798  006F FF78  F93C    	movff	postinc2,_C+317	;volatile
 37966  01979E  006F FF74  F93D    	movff	postdec2,_C+318	;volatile
 37967                           
 37968                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 37969  0197A4  EC8A  F0ED         	call	_get_ac_charger_relay	;wreg free
 37970  0197A8  5001               	movf	btemp^0,w,c
 37971  0197AA  B4D8               	btfsc	status,2,c
 37972  0197AC  D06B               	goto	l2171
 37973                           
 37974                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 37975  0197AE  0E00               	movlw	0
 37976  0197B0  6EE6               	movwf	postinc1,c
 37977  0197B2  EC74  F0ED         	call	_set_ac_charger_relay	;wreg free
 37978  0197B6  D066               	goto	l2171
 37979  0197B8                     l10807:
 37980                           
 37981                           ; BSR set to: 2
 37982                           ;mbmc.c: 184:     if (light < 12.0) {
 37983  0197B8  0E00               	movlw	0
 37984  0197BA  6EE6               	movwf	postinc1,c
 37985  0197BC  0E00               	movlw	0
 37986  0197BE  6EE6               	movwf	postinc1,c
 37987  0197C0  0E40               	movlw	64
 37988  0197C2  6EE6               	movwf	postinc1,c
 37989  0197C4  0E41               	movlw	65
 37990  0197C6  6EE6               	movwf	postinc1,c
 37991                           
 37992                           ;stkvar	_light @ sp[(-8)+0]
 37993  0197C8  0EF8               	movlw	-8
 37994  0197CA  006F FF8F FFE6     	movff	plusw1,postinc1
 37995  0197D0  006F FF8F FFE6     	movff	plusw1,postinc1
 37996  0197D6  006F FF8F FFE6     	movff	plusw1,postinc1
 37997  0197DC  006F FF8F FFE6     	movff	plusw1,postinc1
 37998  0197E2  EC07  F0D0         	call	___flge	;wreg free
 37999  0197E6  B001               	btfsc	btemp& (0+255),0,c
 38000  0197E8  D049               	goto	l2175
 38001                           
 38002                           ;mbmc.c: 185:      C.day = 0;
 38003  0197EA  0E00               	movlw	0
 38004  0197EC  006F FFA0  F939    	movff	wreg,_C+314	;volatile
 38005                           
 38006                           ;mbmc.c: 186:      C.day_end = V.ticks;
 38007  0197F2  EE20  F281         	lfsr	2,_V+129	;volatile
 38008  0197F6  006F FF78  F93E    	movff	postinc2,_C+319	;volatile
 38009  0197FC  006F FF78  F93F    	movff	postinc2,_C+320	;volatile
 38010  019802  006F FF78  F940    	movff	postinc2,_C+321	;volatile
 38011  019808  006F FF74  F941    	movff	postdec2,_C+322	;volatile
 38012                           
 38013                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 38014  01980E  EE22  F0B5         	lfsr	2,_C+182	;volatile
 38015  019812  0E01               	movlw	1
 38016  019814  50DB               	movf	plusw2,w,c
 38017  019816  E136               	bnz	l2171
 38018  019818  0E14               	movlw	20
 38019  01981A  5CDE               	subwf	postinc2,w,c
 38020  01981C  B0D8               	btfsc	status,0,c
 38021  01981E  D032               	goto	l2171
 38022                           
 38023                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 38024  019820  0E01               	movlw	1
 38025  019822  6EE6               	movwf	postinc1,c
 38026  019824  EC74  F0ED         	call	_set_ac_charger_relay	;wreg free
 38027  019828  D02D               	goto	l2171
 38028  01982A                     l10819:
 38029                           
 38030                           ; BSR set to: 2
 38031                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 38032  01982A  EE22  F077         	lfsr	2,_C+120	;volatile
 38033  01982E  006F FF7B FFE6     	movff	postinc2,postinc1
 38034  019834  006F FF7B FFE6     	movff	postinc2,postinc1
 38035  01983A  006F FF7B FFE6     	movff	postinc2,postinc1
 38036  019840  006F FF7B FFE6     	movff	postinc2,postinc1
 38037  019846  EE22  F07B         	lfsr	2,_C+124	;volatile
 38038  01984A  006F FF7B FFE6     	movff	postinc2,postinc1
 38039  019850  006F FF7B FFE6     	movff	postinc2,postinc1
 38040  019856  006F FF7B FFE6     	movff	postinc2,postinc1
 38041  01985C  006F FF7B FFE6     	movff	postinc2,postinc1
 38042  019862  EC07  F0D0         	call	___flge	;wreg free
 38043  019866  B001               	btfsc	btemp& (0+255),0,c
 38044  019868  D009               	goto	l2175
 38045                           
 38046                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 38047  01986A  EC8A  F0ED         	call	_get_ac_charger_relay	;wreg free
 38048  01986E  5001               	movf	btemp^0,w,c
 38049  019870  A4D8               	btfss	status,2,c
 38050  019872  D004               	goto	l2175
 38051                           
 38052                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 38053  019874  0E01               	movlw	1
 38054  019876  6EE6               	movwf	postinc1,c
 38055  019878  EC74  F0ED         	call	_set_ac_charger_relay	;wreg free
 38056  01987C                     l2175:
 38057                           
 38058                           ;mbmc.c: 204:  if (day_delay >= 240)
 38059  01987C  0EEF               	movlw	239
 38060  01987E  6441               	cpfsgt	check_day_time@day_delay^0,c
 38061  019880  D001               	goto	l2171
 38062                           
 38063                           ;mbmc.c: 205:   day_delay = 0;
 38064  019882  6A41               	clrf	check_day_time@day_delay^0,c
 38065  019884                     l2171:
 38066                           
 38067                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 38068  019884  52E5               	movf	postdec1,f,c
 38069  019886  52E5               	movf	postdec1,f,c
 38070  019888  52E5               	movf	postdec1,f,c
 38071  01988A  52E5               	movf	postdec1,f,c
 38072  01988C  0012               	return		;funcret
 38073  01988E                     __end_of_check_day_time:
 38074                           	opt callstack 0
 38075                           
 38076 ;; *************** function _set_ac_charger_relay *****************
 38077 ;; Defined at:
 38078 ;;		line 135 in file "mbmc.c"
 38079 ;; Parameters:    Size  Location     Type
 38080 ;;  mode            1  [STACK] const _Bool 
 38081 ;; Auto vars:     Size  Location     Type
 38082 ;;		None
 38083 ;; Return value:  Size  Location     Type
 38084 ;;                  1  [STACK] void 
 38085 ;; Registers used:
 38086 ;;		wreg, fsr1l, fsr1h
 38087 ;; Tracked objects:
 38088 ;;		On entry : 0/2
 38089 ;;		On exit  : 0/0
 38090 ;;		Unchanged: 0/0
 38091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38096 ;;Total ram usage:        0 bytes
 38097 ;; Hardware stack levels used:    1
 38098 ;; Hardware stack levels required when called:    3
 38099 ;; This function calls:
 38100 ;;		Nothing
 38101 ;; This function is called by:
 38102 ;;		_check_day_time
 38103 ;; This function uses a reentrant model
 38104 ;;
 38105                           
 38106                           	psect	text169
 38107  01DAE8                     __ptext169:
 38108                           	opt callstack 0
 38109  01DAE8                     _set_ac_charger_relay:
 38110                           	opt callstack 9
 38111                           
 38112                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 38113                           ;stkvar	_mode @ sp[(0)+-1]
 38114                           
 38115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38116                           ;incstack = 0
 38117  01DAE8  0EFF               	movlw	-1
 38118  01DAEA  B0E3               	btfsc	plusw1,0,c
 38119  01DAEC  D002               	bra	u992_25
 38120  01DAEE  9CBD               	bcf	189,6,c	;volatile
 38121  01DAF0  D001               	bra	u992_26
 38122  01DAF2                     u992_25:
 38123  01DAF2  8CBD               	bsf	189,6,c	;volatile
 38124  01DAF4                     u992_26:
 38125                           
 38126                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 38127  01DAF4  52E5               	movf	postdec1,f,c
 38128  01DAF6  0012               	return		;funcret
 38129  01DAF8                     __end_of_set_ac_charger_relay:
 38130                           	opt callstack 0
 38131                           
 38132 ;; *************** function _get_ac_charger_relay *****************
 38133 ;; Defined at:
 38134 ;;		line 140 in file "mbmc.c"
 38135 ;; Parameters:    Size  Location     Type
 38136 ;;		None
 38137 ;; Auto vars:     Size  Location     Type
 38138 ;;		None
 38139 ;; Return value:  Size  Location     Type
 38140 ;;                  1  [STACK] _Bool 
 38141 ;; Registers used:
 38142 ;;		btemp
 38143 ;; Tracked objects:
 38144 ;;		On entry : 0/2
 38145 ;;		On exit  : 0/0
 38146 ;;		Unchanged: 0/0
 38147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38152 ;;Total ram usage:        0 bytes
 38153 ;; Hardware stack levels used:    1
 38154 ;; Hardware stack levels required when called:    3
 38155 ;; This function calls:
 38156 ;;		Nothing
 38157 ;; This function is called by:
 38158 ;;		_check_day_time
 38159 ;;		_calc_bsoc
 38160 ;; This function uses a reentrant model
 38161 ;;
 38162                           
 38163                           	psect	text170
 38164  01DB14                     __ptext170:
 38165                           	opt callstack 0
 38166  01DB14                     _get_ac_charger_relay:
 38167                           	opt callstack 10
 38168                           
 38169                           ;mbmc.c: 142:  return LATDbits.LATD6;
 38170                           
 38171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38172                           ;incstack = 0
 38173  01DB14  ACBD               	btfss	189,6,c	;volatile
 38174  01DB16  D003               	goto	u1023_20
 38175  01DB18  6A01               	clrf	btemp^0,c
 38176  01DB1A  2A01               	incf	btemp^0,f,c
 38177  01DB1C  0012               	return	
 38178  01DB1E                     u1023_20:
 38179  01DB1E  6A01               	clrf	btemp^0,c
 38180                           
 38181                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 38182  01DB20  0012               	return		;funcret
 38183  01DB22                     __end_of_get_ac_charger_relay:
 38184                           	opt callstack 0
 38185                           
 38186 ;; *************** function _TMR3_ISR *****************
 38187 ;; Defined at:
 38188 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 38189 ;; Parameters:    Size  Location     Type
 38190 ;;		None
 38191 ;; Auto vars:     Size  Location     Type
 38192 ;;		None
 38193 ;; Return value:  Size  Location     Type
 38194 ;;                  1    wreg      void 
 38195 ;; Registers used:
 38196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 38197 ;; Tracked objects:
 38198 ;;		On entry : 0/0
 38199 ;;		On exit  : 3F/0
 38200 ;;		Unchanged: 0/0
 38201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38204 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38205 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38206 ;;Total ram usage:       25 bytes
 38207 ;; Hardware stack levels used:    1
 38208 ;; Hardware stack levels required when called:   14
 38209 ;; This function calls:
 38210 ;;		_TMR3_CallBack
 38211 ;;		_TMR3_WriteTimer
 38212 ;; This function is called by:
 38213 ;;		Interrupt level 1
 38214 ;; This function uses a non-reentrant model
 38215 ;;
 38216                           
 38217                           	psect	text171
 38218  01A170                     __ptext171:
 38219                           	opt callstack 0
 38220  01A170                     _TMR3_ISR:
 38221                           	opt callstack 2
 38222                           
 38223                           ;incstack = 0
 38224  01A170  006F FF60  F0D8    	movff	status,??_TMR3_ISR
 38225  01A176  006F FFD8  F0D9    	movff	tblptrl,??_TMR3_ISR+1
 38226  01A17C  006F FFDC  F0DA    	movff	tblptrh,??_TMR3_ISR+2
 38227  01A182  006F FFE0  F0DB    	movff	tblptru,??_TMR3_ISR+3
 38228  01A188  006F FFD4  F0DC    	movff	tablat,??_TMR3_ISR+4
 38229  01A18E  0060  F004  F0DD   	movff	btemp,??_TMR3_ISR+5
 38230  01A194  0060  F008  F0DE   	movff	btemp+1,??_TMR3_ISR+6
 38231  01A19A  0060  F00C  F0DF   	movff	btemp+2,??_TMR3_ISR+7
 38232  01A1A0  0060  F010  F0E0   	movff	btemp+3,??_TMR3_ISR+8
 38233  01A1A6  0060  F014  F0E1   	movff	btemp+4,??_TMR3_ISR+9
 38234  01A1AC  0060  F018  F0E2   	movff	btemp+5,??_TMR3_ISR+10
 38235  01A1B2  0060  F01C  F0E3   	movff	btemp+6,??_TMR3_ISR+11
 38236  01A1B8  0060  F020  F0E4   	movff	btemp+7,??_TMR3_ISR+12
 38237  01A1BE  0060  F024  F0E5   	movff	btemp+8,??_TMR3_ISR+13
 38238  01A1C4  0060  F028  F0E6   	movff	btemp+9,??_TMR3_ISR+14
 38239  01A1CA  0060  F02C  F0E7   	movff	btemp+10,??_TMR3_ISR+15
 38240  01A1D0  0060  F030  F0E8   	movff	btemp+11,??_TMR3_ISR+16
 38241  01A1D6  0060  F044  F0E9   	movff	btemp+16,??_TMR3_ISR+17
 38242  01A1DC  0060  F048  F0EA   	movff	btemp+17,??_TMR3_ISR+18
 38243  01A1E2  0060  F04C  F0EB   	movff	btemp+18,??_TMR3_ISR+19
 38244  01A1E8  0060  F050  F0EC   	movff	btemp+19,??_TMR3_ISR+20
 38245  01A1EE  0060  F054  F0ED   	movff	btemp+20,??_TMR3_ISR+21
 38246  01A1F4  0060  F058  F0EE   	movff	btemp+21,??_TMR3_ISR+22
 38247  01A1FA  0060  F05C  F0EF   	movff	btemp+22,??_TMR3_ISR+23
 38248  01A200  0060  F060  F0F0   	movff	btemp+23,??_TMR3_ISR+24
 38249  01A206  EE16  F10C         	lfsr	1,___intlo_sp
 38250                           
 38251                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 38252  01A20A  0139               	movlb	57	; () banked
 38253  01A20C  9DA6               	bcf	166,6,b	;volatile
 38254                           
 38255                           ; BSR set to: 57
 38256                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 38257  01A20E  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 38258  01A214  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 38259  01A21A  EC93  F0E8         	call	_TMR3_WriteTimer	;wreg free
 38260                           
 38261                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 38262  01A21E  0100               	movlb	0	; () banked
 38263  01A220  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 38264  01A222  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 38265  01A224  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 38266  01A226  E104               	bnz	i1u1403_20
 38267  01A228  0E28               	movlw	40
 38268  01A22A  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 38269  01A22C  A0D8               	btfss	status,0,c
 38270  01A22E  D005               	goto	i1l1209
 38271  01A230                     i1u1403_20:
 38272                           
 38273                           ; BSR set to: 0
 38274                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 38275  01A230  EC10  F0EC         	call	_TMR3_CallBack	;wreg free
 38276                           
 38277                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 38278  01A234  0100               	movlb	0	; () banked
 38279  01A236  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 38280  01A238  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 38281  01A23A                     i1l1209:
 38282                           
 38283                           ; BSR set to: 0
 38284  01A23A  0060  F3C0  F018   	movff	??_TMR3_ISR+24,btemp+23
 38285  01A240  0060  F3BC  F017   	movff	??_TMR3_ISR+23,btemp+22
 38286  01A246  0060  F3B8  F016   	movff	??_TMR3_ISR+22,btemp+21
 38287  01A24C  0060  F3B4  F015   	movff	??_TMR3_ISR+21,btemp+20
 38288  01A252  0060  F3B0  F014   	movff	??_TMR3_ISR+20,btemp+19
 38289  01A258  0060  F3AC  F013   	movff	??_TMR3_ISR+19,btemp+18
 38290  01A25E  0060  F3A8  F012   	movff	??_TMR3_ISR+18,btemp+17
 38291  01A264  0060  F3A4  F011   	movff	??_TMR3_ISR+17,btemp+16
 38292  01A26A  0060  F3A0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 38293  01A270  0060  F39C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 38294  01A276  0060  F398  F00A   	movff	??_TMR3_ISR+14,btemp+9
 38295  01A27C  0060  F394  F009   	movff	??_TMR3_ISR+13,btemp+8
 38296  01A282  0060  F390  F008   	movff	??_TMR3_ISR+12,btemp+7
 38297  01A288  0060  F38C  F007   	movff	??_TMR3_ISR+11,btemp+6
 38298  01A28E  0060  F388  F006   	movff	??_TMR3_ISR+10,btemp+5
 38299  01A294  0060  F384  F005   	movff	??_TMR3_ISR+9,btemp+4
 38300  01A29A  0060  F380  F004   	movff	??_TMR3_ISR+8,btemp+3
 38301  01A2A0  0060  F37C  F003   	movff	??_TMR3_ISR+7,btemp+2
 38302  01A2A6  0060  F378  F002   	movff	??_TMR3_ISR+6,btemp+1
 38303  01A2AC  0060  F374  F001   	movff	??_TMR3_ISR+5,btemp
 38304  01A2B2  0060  F373  FFF5   	movff	??_TMR3_ISR+4,tablat
 38305  01A2B8  0060  F36F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 38306  01A2BE  0060  F36B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 38307  01A2C4  0060  F367  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 38308  01A2CA  0060  F363  FFD8   	movff	??_TMR3_ISR,status
 38309  01A2D0  0011               	retfie		f
 38310  01A2D2                     __end_of_TMR3_ISR:
 38311                           	opt callstack 0
 38312                           
 38313 ;; *************** function _TMR3_WriteTimer *****************
 38314 ;; Defined at:
 38315 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 38316 ;; Parameters:    Size  Location     Type
 38317 ;;  timerVal        2  [STACK] unsigned short 
 38318 ;; Auto vars:     Size  Location     Type
 38319 ;;		None
 38320 ;; Return value:  Size  Location     Type
 38321 ;;                  1  [STACK] void 
 38322 ;; Registers used:
 38323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38324 ;; Tracked objects:
 38325 ;;		On entry : 3F/39
 38326 ;;		On exit  : 0/0
 38327 ;;		Unchanged: 0/0
 38328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38333 ;;Total ram usage:        0 bytes
 38334 ;; Hardware stack levels used:    1
 38335 ;; Hardware stack levels required when called:    3
 38336 ;; This function calls:
 38337 ;;		Nothing
 38338 ;; This function is called by:
 38339 ;;		_TMR3_ISR
 38340 ;; This function uses a reentrant model
 38341 ;;
 38342                           
 38343                           	psect	text172
 38344  01D126                     __ptext172:
 38345                           	opt callstack 0
 38346  01D126                     _TMR3_WriteTimer:
 38347                           	opt callstack 12
 38348                           
 38349                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 38350                           
 38351                           ; BSR set to: 0
 38352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38353                           ;incstack = 0
 38354  01D126  A4A6               	btfss	166,2,c	;volatile
 38355  01D128  D00F               	goto	l11985
 38356                           
 38357                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 38358  01D12A  90A6               	bcf	166,0,c	;volatile
 38359                           
 38360                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 38361                           ;stkvar	_timerVal @ sp[(0)+-2]
 38362  01D12C  0EFF               	movlw	255
 38363  01D12E  24E1               	addwf	fsr1l,w,c
 38364  01D130  6ED9               	movwf	fsr2l,c
 38365  01D132  0EFF               	movlw	255
 38366  01D134  20E2               	addwfc	fsr1h,w,c
 38367  01D136  6EDA               	movwf	fsr2h,c
 38368  01D138  50DF               	movf	indf2,w,c
 38369  01D13A  6EA5               	movwf	165,c	;volatile
 38370                           
 38371                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 38372                           ;stkvar	_timerVal @ sp[(0)+-2]
 38373  01D13C  0EFE               	movlw	-2
 38374  01D13E  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 38375                           
 38376                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 38377  01D144  80A6               	bsf	166,0,c	;volatile
 38378                           
 38379                           ;mcc_generated_files/tmr3.c: 141:     }
 38380  01D146  D00C               	goto	l1192
 38381  01D148                     l11985:
 38382                           
 38383                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 38384                           ;stkvar	_timerVal @ sp[(0)+-2]
 38385  01D148  0EFF               	movlw	255
 38386  01D14A  24E1               	addwf	fsr1l,w,c
 38387  01D14C  6ED9               	movwf	fsr2l,c
 38388  01D14E  0EFF               	movlw	255
 38389  01D150  20E2               	addwfc	fsr1h,w,c
 38390  01D152  6EDA               	movwf	fsr2h,c
 38391  01D154  50DF               	movf	indf2,w,c
 38392  01D156  6EA5               	movwf	165,c	;volatile
 38393                           
 38394                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 38395                           ;stkvar	_timerVal @ sp[(0)+-2]
 38396  01D158  0EFE               	movlw	-2
 38397  01D15A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 38398  01D160                     l1192:
 38399                           
 38400                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38401  01D160  52E5               	movf	postdec1,f,c
 38402  01D162  52E5               	movf	postdec1,f,c
 38403  01D164  0012               	return		;funcret
 38404  01D166                     __end_of_TMR3_WriteTimer:
 38405                           	opt callstack 0
 38406                           
 38407 ;; *************** function _TMR3_CallBack *****************
 38408 ;; Defined at:
 38409 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 38410 ;; Parameters:    Size  Location     Type
 38411 ;;		None
 38412 ;; Auto vars:     Size  Location     Type
 38413 ;;		None
 38414 ;; Return value:  Size  Location     Type
 38415 ;;                  1  [STACK] void 
 38416 ;; Registers used:
 38417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 38418 ;; Tracked objects:
 38419 ;;		On entry : 3F/0
 38420 ;;		On exit  : 0/0
 38421 ;;		Unchanged: 0/0
 38422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38427 ;;Total ram usage:        0 bytes
 38428 ;; Hardware stack levels used:    1
 38429 ;; Hardware stack levels required when called:   13
 38430 ;; This function calls:
 38431 ;;		Absolute function
 38432 ;;		_TMR3_DefaultInterruptHandler
 38433 ;;		_calc_bsoc
 38434 ;; This function is called by:
 38435 ;;		_TMR3_ISR
 38436 ;; This function uses a reentrant model
 38437 ;;
 38438                           
 38439                           	psect	text173
 38440  01D820                     __ptext173:
 38441                           	opt callstack 0
 38442  01D820                     _TMR3_CallBack:
 38443                           	opt callstack 2
 38444                           
 38445                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 38446                           
 38447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38448                           ;incstack = 0
 38449  01D820  0100               	movlb	0	; () banked
 38450  01D822  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 38451  01D824  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 38452  01D826  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 38453  01D828  B4D8               	btfsc	status,2,c
 38454  01D82A  0012               	return	
 38455                           
 38456                           ; BSR set to: 0
 38457                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 38458  01D82C  D801               	call	u1382_28
 38459  01D82E  0012               	return	
 38460  01D830                     u1382_28:
 38461  01D830  0005               	push	
 38462  01D832  6EFA               	movwf	pclath,c
 38463  01D834  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 38464  01D836  6EFD               	movwf	tosl,c
 38465  01D838  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 38466  01D83A  6EFE               	movwf	tosh,c
 38467  01D83C  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 38468  01D83E  6EFF               	movwf	tosu,c
 38469  01D840  50FA               	movf	pclath,w,c
 38470  01D842  0012               	return		;indir
 38471  01D844                     __end_of_TMR3_CallBack:
 38472                           	opt callstack 0
 38473                           
 38474 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 38475 ;; Defined at:
 38476 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 38477 ;; Parameters:    Size  Location     Type
 38478 ;;		None
 38479 ;; Auto vars:     Size  Location     Type
 38480 ;;		None
 38481 ;; Return value:  Size  Location     Type
 38482 ;;                  1  [STACK] void 
 38483 ;; Registers used:
 38484 ;;		None
 38485 ;; Tracked objects:
 38486 ;;		On entry : 3F/0
 38487 ;;		On exit  : 0/0
 38488 ;;		Unchanged: 0/0
 38489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38494 ;;Total ram usage:        0 bytes
 38495 ;; Hardware stack levels used:    1
 38496 ;; Hardware stack levels required when called:    3
 38497 ;; This function calls:
 38498 ;;		Nothing
 38499 ;; This function is called by:
 38500 ;;		_TMR3_Initialize
 38501 ;;		_TMR3_CallBack
 38502 ;; This function uses a reentrant model
 38503 ;;
 38504                           
 38505                           	psect	text174
 38506  01DBD4                     __ptext174:
 38507                           	opt callstack 0
 38508  01DBD4                     _TMR3_DefaultInterruptHandler:
 38509                           	opt callstack 11
 38510                           
 38511                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38512                           
 38513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38514                           ;incstack = 0
 38515  01DBD4  0012               	return		;funcret
 38516  01DBD6                     __end_of_TMR3_DefaultInterruptHandler:
 38517                           	opt callstack 0
 38518                           
 38519 ;; *************** function _calc_bsoc *****************
 38520 ;; Defined at:
 38521 ;;		line 39 in file "bsoc.c"
 38522 ;; Parameters:    Size  Location     Type
 38523 ;;		None
 38524 ;; Auto vars:     Size  Location     Type
 38525 ;;  adj             4  [STACK] float 
 38526 ;;  log_ptr         2  [STACK] PTR unsigned char 
 38527 ;;		 -> port_data(512), 
 38528 ;; Return value:  Size  Location     Type
 38529 ;;                  1  [STACK] void 
 38530 ;; Registers used:
 38531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 38532 ;; Tracked objects:
 38533 ;;		On entry : 3F/0
 38534 ;;		On exit  : 6/2
 38535 ;;		Unchanged: 0/0
 38536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38541 ;;Total ram usage:        0 bytes
 38542 ;; Hardware stack levels used:    1
 38543 ;; Hardware stack levels required when called:   12
 38544 ;; This function calls:
 38545 ;;		_StartTimer
 38546 ;;		___asfladd
 38547 ;;		___fldiv
 38548 ;;		___flge
 38549 ;;		___flmul
 38550 ;;		___flneg
 38551 ;;		___fltol
 38552 ;;		_fabsf
 38553 ;;		_get_ac_charger_relay
 38554 ;;		_port_data_dma_ptr
 38555 ;;		_send_port_data_dma
 38556 ;;		_sprintf
 38557 ;;		_strlen
 38558 ;; This function is called by:
 38559 ;;		_init_bsoc
 38560 ;;		_TMR3_CallBack
 38561 ;; This function uses a reentrant model
 38562 ;;
 38563                           
 38564                           	psect	text175
 38565  014036                     __ptext175:
 38566                           	opt callstack 0
 38567  014036                     _calc_bsoc:
 38568                           	opt callstack 0
 38569                           
 38570                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38571  014036  0E06               	movlw	6
 38572  014038  26E1               	addwf	fsr1l,f,c
 38573  01403A  0E00               	movlw	0
 38574  01403C  22E2               	addwfc	fsr1h,f,c
 38575                           
 38576                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 38577                           
 38578                           ;incstack = 0
 38579  01403E  0E00               	movlw	0
 38580  014040  6E09               	movwf	(btemp+8)^0,c
 38581  014042  0E00               	movlw	0
 38582  014044  6E0A               	movwf	(btemp+9)^0,c
 38583  014046  0E80               	movlw	128
 38584  014048  6E0B               	movwf	(btemp+10)^0,c
 38585  01404A  0E3F               	movlw	63
 38586  01404C  6E0C               	movwf	(btemp+11)^0,c
 38587                           
 38588                           ;stkvar	_adj @ sp[(-6)+0]
 38589  01404E  0EFA               	movlw	-6
 38590  014050  0060  F027  FFE3   	movff	btemp+8,plusw1
 38591  014056  0EFB               	movlw	-5
 38592  014058  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38593  01405E  0EFC               	movlw	-4
 38594  014060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38595  014066  0EFD               	movlw	-3
 38596  014068  0060  F033  FFE3   	movff	btemp+11,plusw1
 38597  01406E  82BE               	bsf	190,1,c	;volatile
 38598                           
 38599                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 38600  014070  0E00               	movlw	0
 38601  014072  6EE6               	movwf	postinc1,c
 38602  014074  0E00               	movlw	0
 38603  014076  6EE6               	movwf	postinc1,c
 38604  014078  0E61               	movlw	97
 38605  01407A  6EE6               	movwf	postinc1,c
 38606  01407C  0E45               	movlw	69
 38607  01407E  6EE6               	movwf	postinc1,c
 38608  014080  EE22  F043         	lfsr	2,_C+68	;volatile
 38609  014084  006F FF7B FFE6     	movff	postinc2,postinc1
 38610  01408A  006F FF7B FFE6     	movff	postinc2,postinc1
 38611  014090  006F FF7B FFE6     	movff	postinc2,postinc1
 38612  014096  006F FF7B FFE6     	movff	postinc2,postinc1
 38613  01409C  EC45  F0AD         	call	___fldiv	;wreg free
 38614  0140A0  0060  F007  FFE6   	movff	btemp,postinc1
 38615  0140A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38616  0140AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38617  0140B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 38618  0140B8  0E8F               	movlw	low (_C+144)
 38619  0140BA  6EE6               	movwf	postinc1,c
 38620  0140BC  0E08               	movlw	high (_C+144)
 38621  0140BE  6EE6               	movwf	postinc1,c
 38622  0140C0  ECFF  F0E2         	call	___asfladd	;wreg free
 38623                           
 38624                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 38625  0140C4  EE22  F08F         	lfsr	2,_C+144	;volatile
 38626  0140C8  006F FF7B FFE6     	movff	postinc2,postinc1
 38627  0140CE  006F FF7B FFE6     	movff	postinc2,postinc1
 38628  0140D4  006F FF7B FFE6     	movff	postinc2,postinc1
 38629  0140DA  006F FF7B FFE6     	movff	postinc2,postinc1
 38630  0140E0  EE22  F08B         	lfsr	2,_C+140	;volatile
 38631  0140E4  006F FF7B FFE6     	movff	postinc2,postinc1
 38632  0140EA  006F FF7B FFE6     	movff	postinc2,postinc1
 38633  0140F0  006F FF7B FFE6     	movff	postinc2,postinc1
 38634  0140F6  006F FF7B FFE6     	movff	postinc2,postinc1
 38635  0140FC  EC07  F0D0         	call	___flge	;wreg free
 38636  014100  B001               	btfsc	btemp& (0+255),0,c
 38637  014102  D00E               	goto	l14337
 38638                           
 38639                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 38640  014104  EE22  F08B         	lfsr	2,_C+140	;volatile
 38641  014108  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
 38642  01410E  006F FF78  F890    	movff	postinc2,_C+145	;volatile
 38643  014114  006F FF78  F891    	movff	postinc2,_C+146	;volatile
 38644  01411A  006F FF74  F892    	movff	postdec2,_C+147	;volatile
 38645  014120                     l14337:
 38646                           
 38647                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 38648  014120  0ECD               	movlw	205
 38649  014122  6EE6               	movwf	postinc1,c
 38650  014124  0ECC               	movlw	204
 38651  014126  6EE6               	movwf	postinc1,c
 38652  014128  0ECC               	movlw	204
 38653  01412A  6EE6               	movwf	postinc1,c
 38654  01412C  0E3D               	movlw	61
 38655  01412E  6EE6               	movwf	postinc1,c
 38656  014130  EE22  F08F         	lfsr	2,_C+144	;volatile
 38657  014134  006F FF7B FFE6     	movff	postinc2,postinc1
 38658  01413A  006F FF7B FFE6     	movff	postinc2,postinc1
 38659  014140  006F FF7B FFE6     	movff	postinc2,postinc1
 38660  014146  006F FF7B FFE6     	movff	postinc2,postinc1
 38661  01414C  EC07  F0D0         	call	___flge	;wreg free
 38662  014150  B001               	btfsc	btemp& (0+255),0,c
 38663  014152  D010               	goto	l14341
 38664                           
 38665                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 38666  014154  0ECD               	movlw	205
 38667  014156  006F FFA0  F88F    	movff	wreg,_C+144	;volatile
 38668  01415C  0ECC               	movlw	204
 38669  01415E  006F FFA0  F890    	movff	wreg,_C+145	;volatile
 38670  014164  0ECC               	movlw	204
 38671  014166  006F FFA0  F891    	movff	wreg,_C+146	;volatile
 38672  01416C  0E3D               	movlw	61
 38673  01416E  006F FFA0  F892    	movff	wreg,_C+147	;volatile
 38674  014174                     l14341:
 38675                           
 38676                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 38677  014174  EE22  F043         	lfsr	2,_C+68	;volatile
 38678  014178  006F FF7B FFE6     	movff	postinc2,postinc1
 38679  01417E  006F FF7B FFE6     	movff	postinc2,postinc1
 38680  014184  006F FF7B FFE6     	movff	postinc2,postinc1
 38681  01418A  006F FF7B FFE6     	movff	postinc2,postinc1
 38682  014190  0E0A               	movlw	10
 38683  014192  6EE6               	movwf	postinc1,c
 38684  014194  0ED7               	movlw	215
 38685  014196  6EE6               	movwf	postinc1,c
 38686  014198  0E23               	movlw	35
 38687  01419A  6EE6               	movwf	postinc1,c
 38688  01419C  0E3C               	movlw	60
 38689  01419E  6EE6               	movwf	postinc1,c
 38690  0141A0  EC07  F0D0         	call	___flge	;wreg free
 38691  0141A4  B001               	btfsc	btemp& (0+255),0,c
 38692  0141A6  D01C               	goto	l14345
 38693                           
 38694                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 38695  0141A8  0062  F354  F009   	movff	_C+214,btemp+8	;volatile
 38696  0141AE  0062  F358  F00A   	movff	_C+215,btemp+9	;volatile
 38697  0141B4  0062  F35C  F00B   	movff	_C+216,btemp+10	;volatile
 38698  0141BA  0062  F360  F00C   	movff	_C+217,btemp+11	;volatile
 38699                           
 38700                           ;stkvar	_adj @ sp[(-6)+0]
 38701  0141C0  0EFA               	movlw	-6
 38702  0141C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 38703  0141C8  0EFB               	movlw	-5
 38704  0141CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38705  0141D0  0EFC               	movlw	-4
 38706  0141D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38707  0141D8  0EFD               	movlw	-3
 38708  0141DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 38709  0141E0                     l14345:
 38710                           
 38711                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 38712  0141E0  0E0A               	movlw	10
 38713  0141E2  6EE6               	movwf	postinc1,c
 38714  0141E4  0ED7               	movlw	215
 38715  0141E6  6EE6               	movwf	postinc1,c
 38716  0141E8  0E23               	movlw	35
 38717  0141EA  6EE6               	movwf	postinc1,c
 38718  0141EC  0E3C               	movlw	60
 38719  0141EE  6EE6               	movwf	postinc1,c
 38720  0141F0  EE22  F043         	lfsr	2,_C+68	;volatile
 38721  0141F4  006F FF7B FFE6     	movff	postinc2,postinc1
 38722  0141FA  006F FF7B FFE6     	movff	postinc2,postinc1
 38723  014200  006F FF7B FFE6     	movff	postinc2,postinc1
 38724  014206  006F FF7B FFE6     	movff	postinc2,postinc1
 38725  01420C  EC07  F0D0         	call	___flge	;wreg free
 38726  014210  B001               	btfsc	btemp& (0+255),0,c
 38727  014212  D01C               	goto	l14349
 38728                           
 38729                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 38730  014214  0062  F344  F009   	movff	_C+210,btemp+8	;volatile
 38731  01421A  0062  F348  F00A   	movff	_C+211,btemp+9	;volatile
 38732  014220  0062  F34C  F00B   	movff	_C+212,btemp+10	;volatile
 38733  014226  0062  F350  F00C   	movff	_C+213,btemp+11	;volatile
 38734                           
 38735                           ;stkvar	_adj @ sp[(-6)+0]
 38736  01422C  0EFA               	movlw	-6
 38737  01422E  0060  F027  FFE3   	movff	btemp+8,plusw1
 38738  014234  0EFB               	movlw	-5
 38739  014236  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38740  01423C  0EFC               	movlw	-4
 38741  01423E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38742  014244  0EFD               	movlw	-3
 38743  014246  0060  F033  FFE3   	movff	btemp+11,plusw1
 38744  01424C                     l14349:
 38745                           
 38746                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 38747  01424C  0E00               	movlw	0
 38748  01424E  6EE6               	movwf	postinc1,c
 38749  014250  0E00               	movlw	0
 38750  014252  6EE6               	movwf	postinc1,c
 38751  014254  0E61               	movlw	97
 38752  014256  6EE6               	movwf	postinc1,c
 38753  014258  0E45               	movlw	69
 38754  01425A  6EE6               	movwf	postinc1,c
 38755                           
 38756                           ;stkvar	_adj @ sp[(-10)+0]
 38757  01425C  0EF6               	movlw	-10
 38758  01425E  006F FF8F FFE6     	movff	plusw1,postinc1
 38759  014264  006F FF8F FFE6     	movff	plusw1,postinc1
 38760  01426A  006F FF8F FFE6     	movff	plusw1,postinc1
 38761  014270  006F FF8F FFE6     	movff	plusw1,postinc1
 38762  014276  EE22  F043         	lfsr	2,_C+68	;volatile
 38763  01427A  006F FF7B FFE6     	movff	postinc2,postinc1
 38764  014280  006F FF7B FFE6     	movff	postinc2,postinc1
 38765  014286  006F FF7B FFE6     	movff	postinc2,postinc1
 38766  01428C  006F FF7B FFE6     	movff	postinc2,postinc1
 38767  014292  EC52  F0A5         	call	___flmul	;wreg free
 38768  014296  0060  F007  FFE6   	movff	btemp,postinc1
 38769  01429C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38770  0142A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38771  0142A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 38772  0142AE  EC45  F0AD         	call	___fldiv	;wreg free
 38773  0142B2  0060  F007  FFE6   	movff	btemp,postinc1
 38774  0142B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38775  0142BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38776  0142C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 38777  0142CA  0E8F               	movlw	low (_C+144)
 38778  0142CC  6EE6               	movwf	postinc1,c
 38779  0142CE  0E08               	movlw	high (_C+144)
 38780  0142D0  6EE6               	movwf	postinc1,c
 38781  0142D2  ECFF  F0E2         	call	___asfladd	;wreg free
 38782                           
 38783                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 38784  0142D6  EE22  F08F         	lfsr	2,_C+144	;volatile
 38785  0142DA  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 38786  0142E0  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 38787  0142E6  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 38788  0142EC  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 38789                           
 38790                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 38791  0142F2  EE22  F09B         	lfsr	2,_C+156	;volatile
 38792  0142F6  006F FF7B FFE6     	movff	postinc2,postinc1
 38793  0142FC  006F FF7B FFE6     	movff	postinc2,postinc1
 38794  014302  006F FF7B FFE6     	movff	postinc2,postinc1
 38795  014308  006F FF7B FFE6     	movff	postinc2,postinc1
 38796  01430E  EE22  F08B         	lfsr	2,_C+140	;volatile
 38797  014312  006F FF7B FFE6     	movff	postinc2,postinc1
 38798  014318  006F FF7B FFE6     	movff	postinc2,postinc1
 38799  01431E  006F FF7B FFE6     	movff	postinc2,postinc1
 38800  014324  006F FF7B FFE6     	movff	postinc2,postinc1
 38801  01432A  EC07  F0D0         	call	___flge	;wreg free
 38802  01432E  B001               	btfsc	btemp& (0+255),0,c
 38803  014330  D00E               	goto	l14357
 38804                           
 38805                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 38806  014332  EE22  F08B         	lfsr	2,_C+140	;volatile
 38807  014336  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 38808  01433C  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 38809  014342  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 38810  014348  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 38811  01434E                     l14357:
 38812                           
 38813                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 38814  01434E  0ECD               	movlw	205
 38815  014350  6EE6               	movwf	postinc1,c
 38816  014352  0ECC               	movlw	204
 38817  014354  6EE6               	movwf	postinc1,c
 38818  014356  0ECC               	movlw	204
 38819  014358  6EE6               	movwf	postinc1,c
 38820  01435A  0E3D               	movlw	61
 38821  01435C  6EE6               	movwf	postinc1,c
 38822  01435E  EE22  F09B         	lfsr	2,_C+156	;volatile
 38823  014362  006F FF7B FFE6     	movff	postinc2,postinc1
 38824  014368  006F FF7B FFE6     	movff	postinc2,postinc1
 38825  01436E  006F FF7B FFE6     	movff	postinc2,postinc1
 38826  014374  006F FF7B FFE6     	movff	postinc2,postinc1
 38827  01437A  EC07  F0D0         	call	___flge	;wreg free
 38828  01437E  B001               	btfsc	btemp& (0+255),0,c
 38829  014380  D010               	goto	l14361
 38830                           
 38831                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 38832  014382  0ECD               	movlw	205
 38833  014384  006F FFA0  F89B    	movff	wreg,_C+156	;volatile
 38834  01438A  0ECC               	movlw	204
 38835  01438C  006F FFA0  F89C    	movff	wreg,_C+157	;volatile
 38836  014392  0ECC               	movlw	204
 38837  014394  006F FFA0  F89D    	movff	wreg,_C+158	;volatile
 38838  01439A  0E3D               	movlw	61
 38839  01439C  006F FFA0  F89E    	movff	wreg,_C+159	;volatile
 38840  0143A2                     l14361:
 38841                           
 38842                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 38843  0143A2  0E00               	movlw	0
 38844  0143A4  6EE6               	movwf	postinc1,c
 38845  0143A6  0E00               	movlw	0
 38846  0143A8  6EE6               	movwf	postinc1,c
 38847  0143AA  0E61               	movlw	97
 38848  0143AC  6EE6               	movwf	postinc1,c
 38849  0143AE  0E45               	movlw	69
 38850  0143B0  6EE6               	movwf	postinc1,c
 38851  0143B2  EE22  F047         	lfsr	2,_C+72	;volatile
 38852  0143B6  006F FF7B FFE6     	movff	postinc2,postinc1
 38853  0143BC  006F FF7B FFE6     	movff	postinc2,postinc1
 38854  0143C2  006F FF7B FFE6     	movff	postinc2,postinc1
 38855  0143C8  006F FF7B FFE6     	movff	postinc2,postinc1
 38856  0143CE  EC45  F0AD         	call	___fldiv	;wreg free
 38857  0143D2  0060  F007  FFE6   	movff	btemp,postinc1
 38858  0143D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38859  0143DE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38860  0143E4  0060  F013  FFE6   	movff	btemp+3,postinc1
 38861  0143EA  0E93               	movlw	low (_C+148)
 38862  0143EC  6EE6               	movwf	postinc1,c
 38863  0143EE  0E08               	movlw	high (_C+148)
 38864  0143F0  6EE6               	movwf	postinc1,c
 38865  0143F2  ECFF  F0E2         	call	___asfladd	;wreg free
 38866                           
 38867                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 38868  0143F6  0E00               	movlw	0
 38869  0143F8  6EE6               	movwf	postinc1,c
 38870  0143FA  0E00               	movlw	0
 38871  0143FC  6EE6               	movwf	postinc1,c
 38872  0143FE  0E61               	movlw	97
 38873  014400  6EE6               	movwf	postinc1,c
 38874  014402  0E45               	movlw	69
 38875  014404  6EE6               	movwf	postinc1,c
 38876  014406  EE22  F07B         	lfsr	2,_C+124	;volatile
 38877  01440A  006F FF7B FFE6     	movff	postinc2,postinc1
 38878  014410  006F FF7B FFE6     	movff	postinc2,postinc1
 38879  014416  006F FF7B FFE6     	movff	postinc2,postinc1
 38880  01441C  006F FF7B FFE6     	movff	postinc2,postinc1
 38881  014422  EC45  F0AD         	call	___fldiv	;wreg free
 38882  014426  0060  F007  FFE6   	movff	btemp,postinc1
 38883  01442C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38884  014432  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38885  014438  0060  F013  FFE6   	movff	btemp+3,postinc1
 38886  01443E  0EA7               	movlw	low (_C+168)
 38887  014440  6EE6               	movwf	postinc1,c
 38888  014442  0E08               	movlw	high (_C+168)
 38889  014444  6EE6               	movwf	postinc1,c
 38890  014446  ECFF  F0E2         	call	___asfladd	;wreg free
 38891                           
 38892                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 38893  01444A  0E00               	movlw	0
 38894  01444C  6EE6               	movwf	postinc1,c
 38895  01444E  0E00               	movlw	0
 38896  014450  6EE6               	movwf	postinc1,c
 38897  014452  0E61               	movlw	97
 38898  014454  6EE6               	movwf	postinc1,c
 38899  014456  0E45               	movlw	69
 38900  014458  6EE6               	movwf	postinc1,c
 38901  01445A  EE22  F077         	lfsr	2,_C+120	;volatile
 38902  01445E  006F FF7B FFE6     	movff	postinc2,postinc1
 38903  014464  006F FF7B FFE6     	movff	postinc2,postinc1
 38904  01446A  006F FF7B FFE6     	movff	postinc2,postinc1
 38905  014470  006F FF7B FFE6     	movff	postinc2,postinc1
 38906  014476  EC45  F0AD         	call	___fldiv	;wreg free
 38907  01447A  0060  F007  FFE6   	movff	btemp,postinc1
 38908  014480  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38909  014486  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38910  01448C  0060  F013  FFE6   	movff	btemp+3,postinc1
 38911  014492  0EAB               	movlw	low (_C+172)
 38912  014494  6EE6               	movwf	postinc1,c
 38913  014496  0E08               	movlw	high (_C+172)
 38914  014498  6EE6               	movwf	postinc1,c
 38915  01449A  ECFF  F0E2         	call	___asfladd	;wreg free
 38916                           
 38917                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 38918  01449E  0E00               	movlw	0
 38919  0144A0  6EE6               	movwf	postinc1,c
 38920  0144A2  0E00               	movlw	0
 38921  0144A4  6EE6               	movwf	postinc1,c
 38922  0144A6  0E61               	movlw	97
 38923  0144A8  6EE6               	movwf	postinc1,c
 38924  0144AA  0E45               	movlw	69
 38925  0144AC  6EE6               	movwf	postinc1,c
 38926  0144AE  EE22  F073         	lfsr	2,_C+116	;volatile
 38927  0144B2  006F FF7B FFE6     	movff	postinc2,postinc1
 38928  0144B8  006F FF7B FFE6     	movff	postinc2,postinc1
 38929  0144BE  006F FF7B FFE6     	movff	postinc2,postinc1
 38930  0144C4  006F FF7B FFE6     	movff	postinc2,postinc1
 38931  0144CA  EC45  F0AD         	call	___fldiv	;wreg free
 38932  0144CE  0060  F007  FFE6   	movff	btemp,postinc1
 38933  0144D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38934  0144DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38935  0144E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 38936  0144E6  0EAF               	movlw	low (_C+176)
 38937  0144E8  6EE6               	movwf	postinc1,c
 38938  0144EA  0E08               	movlw	high (_C+176)
 38939  0144EC  6EE6               	movwf	postinc1,c
 38940  0144EE  ECFF  F0E2         	call	___asfladd	;wreg free
 38941                           
 38942                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 38943  0144F2  EE22  F07F         	lfsr	2,_C+128	;volatile
 38944  0144F6  006F FF7B FFE6     	movff	postinc2,postinc1
 38945  0144FC  006F FF7B FFE6     	movff	postinc2,postinc1
 38946  014502  006F FF7B FFE6     	movff	postinc2,postinc1
 38947  014508  006F FF7B FFE6     	movff	postinc2,postinc1
 38948  01450E  0E00               	movlw	0
 38949  014510  6EE6               	movwf	postinc1,c
 38950  014512  0E00               	movlw	0
 38951  014514  6EE6               	movwf	postinc1,c
 38952  014516  0E00               	movlw	0
 38953  014518  6EE6               	movwf	postinc1,c
 38954  01451A  0E00               	movlw	0
 38955  01451C  6EE6               	movwf	postinc1,c
 38956  01451E  EC07  F0D0         	call	___flge	;wreg free
 38957  014522  B001               	btfsc	btemp& (0+255),0,c
 38958  014524  D02A               	goto	l14367
 38959                           
 38960                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 38961  014526  0E00               	movlw	0
 38962  014528  6EE6               	movwf	postinc1,c
 38963  01452A  0E00               	movlw	0
 38964  01452C  6EE6               	movwf	postinc1,c
 38965  01452E  0E61               	movlw	97
 38966  014530  6EE6               	movwf	postinc1,c
 38967  014532  0E45               	movlw	69
 38968  014534  6EE6               	movwf	postinc1,c
 38969  014536  EE22  F07F         	lfsr	2,_C+128	;volatile
 38970  01453A  006F FF7B FFE6     	movff	postinc2,postinc1
 38971  014540  006F FF7B FFE6     	movff	postinc2,postinc1
 38972  014546  006F FF7B FFE6     	movff	postinc2,postinc1
 38973  01454C  006F FF7B FFE6     	movff	postinc2,postinc1
 38974  014552  EC45  F0AD         	call	___fldiv	;wreg free
 38975  014556  0060  F007  FFE6   	movff	btemp,postinc1
 38976  01455C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38977  014562  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38978  014568  0060  F013  FFE6   	movff	btemp+3,postinc1
 38979  01456E  0E9F               	movlw	low (_C+160)
 38980  014570  6EE6               	movwf	postinc1,c
 38981  014572  0E08               	movlw	high (_C+160)
 38982  014574  6EE6               	movwf	postinc1,c
 38983  014576  ECFF  F0E2         	call	___asfladd	;wreg free
 38984  01457A                     l14367:
 38985                           
 38986                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 38987  01457A  EE22  F07F         	lfsr	2,_C+128	;volatile
 38988  01457E  0E03               	movlw	3
 38989  014580  AEDB               	btfss	plusw2,7,c
 38990  014582  D038               	goto	l14371
 38991                           
 38992                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 38993  014584  0E00               	movlw	0
 38994  014586  6EE6               	movwf	postinc1,c
 38995  014588  0E00               	movlw	0
 38996  01458A  6EE6               	movwf	postinc1,c
 38997  01458C  0E61               	movlw	97
 38998  01458E  6EE6               	movwf	postinc1,c
 38999  014590  0E45               	movlw	69
 39000  014592  6EE6               	movwf	postinc1,c
 39001  014594  EE22  F07F         	lfsr	2,_C+128	;volatile
 39002  014598  006F FF7B FFE6     	movff	postinc2,postinc1
 39003  01459E  006F FF7B FFE6     	movff	postinc2,postinc1
 39004  0145A4  006F FF7B FFE6     	movff	postinc2,postinc1
 39005  0145AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39006  0145B0  EC45  F0AD         	call	___fldiv	;wreg free
 39007  0145B4  0060  F007  FFE6   	movff	btemp,postinc1
 39008  0145BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39009  0145C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39010  0145C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 39011  0145CC  EC0F  F0DE         	call	_fabsf	;wreg free
 39012  0145D0  0060  F007  FFE6   	movff	btemp,postinc1
 39013  0145D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39014  0145DC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39015  0145E2  0060  F013  FFE6   	movff	btemp+3,postinc1
 39016  0145E8  0EA3               	movlw	low (_C+164)
 39017  0145EA  6EE6               	movwf	postinc1,c
 39018  0145EC  0E08               	movlw	high (_C+164)
 39019  0145EE  6EE6               	movwf	postinc1,c
 39020  0145F0  ECFF  F0E2         	call	___asfladd	;wreg free
 39021  0145F4                     l14371:
 39022                           
 39023                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 39024  0145F4  0E00               	movlw	0
 39025  0145F6  6EE6               	movwf	postinc1,c
 39026  0145F8  0E00               	movlw	0
 39027  0145FA  6EE6               	movwf	postinc1,c
 39028  0145FC  0EC8               	movlw	200
 39029  0145FE  6EE6               	movwf	postinc1,c
 39030  014600  0E42               	movlw	66
 39031  014602  6EE6               	movwf	postinc1,c
 39032  014604  EE22  F08B         	lfsr	2,_C+140	;volatile
 39033  014608  006F FF7B FFE6     	movff	postinc2,postinc1
 39034  01460E  006F FF7B FFE6     	movff	postinc2,postinc1
 39035  014614  006F FF7B FFE6     	movff	postinc2,postinc1
 39036  01461A  006F FF7B FFE6     	movff	postinc2,postinc1
 39037  014620  EE22  F09B         	lfsr	2,_C+156	;volatile
 39038  014624  006F FF7B FFE6     	movff	postinc2,postinc1
 39039  01462A  006F FF7B FFE6     	movff	postinc2,postinc1
 39040  014630  006F FF7B FFE6     	movff	postinc2,postinc1
 39041  014636  006F FF7B FFE6     	movff	postinc2,postinc1
 39042  01463C  EC45  F0AD         	call	___fldiv	;wreg free
 39043  014640  0060  F007  FFE6   	movff	btemp,postinc1
 39044  014646  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39045  01464C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39046  014652  0060  F013  FFE6   	movff	btemp+3,postinc1
 39047  014658  EC52  F0A5         	call	___flmul	;wreg free
 39048  01465C  0060  F007  FFE6   	movff	btemp,postinc1
 39049  014662  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39050  014668  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39051  01466E  0060  F013  FFE6   	movff	btemp+3,postinc1
 39052  014674  EC4E  F0CF         	call	___fltol	;wreg free
 39053  014678  0060  F004  F00B   	movff	btemp,btemp+10
 39054  01467E  0060  F008  F00C   	movff	btemp+1,btemp+11
 39055  014684  0E01               	movlw	1
 39056  014686  260B               	addwf	(btemp+10)^0,f,c
 39057  014688  0E00               	movlw	0
 39058  01468A  220C               	addwfc	(btemp+11)^0,f,c
 39059  01468C  0060  F02C  F8B5   	movff	btemp+10,_C+182	;volatile
 39060  014692  0060  F030  F8B6   	movff	btemp+11,_C+183	;volatile
 39061                           
 39062                           ;bsoc.c: 76:  if (C.soc > 100)
 39063  014698  EE22  F0B5         	lfsr	2,_C+182	;volatile
 39064  01469C  0E01               	movlw	1
 39065  01469E  50DB               	movf	plusw2,w,c
 39066  0146A0  E104               	bnz	u1375_20
 39067  0146A2  0E65               	movlw	101
 39068  0146A4  5CDE               	subwf	postinc2,w,c
 39069  0146A6  A0D8               	btfss	status,0,c
 39070  0146A8  D008               	goto	l14377
 39071  0146AA                     u1375_20:
 39072                           
 39073                           ;bsoc.c: 77:   C.soc = 100;
 39074  0146AA  0E64               	movlw	100
 39075  0146AC  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
 39076  0146B2  0E00               	movlw	0
 39077  0146B4  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
 39078  0146BA                     l14377:
 39079                           
 39080                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 39081  0146BA  EE22  F043         	lfsr	2,_C+68	;volatile
 39082  0146BE  0E03               	movlw	3
 39083  0146C0  AEDB               	btfss	plusw2,7,c
 39084  0146C2  D047               	goto	l2320
 39085                           
 39086                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 39087  0146C4  EE22  F043         	lfsr	2,_C+68	;volatile
 39088  0146C8  006F FF7B FFE6     	movff	postinc2,postinc1
 39089  0146CE  006F FF7B FFE6     	movff	postinc2,postinc1
 39090  0146D4  006F FF7B FFE6     	movff	postinc2,postinc1
 39091  0146DA  006F FF7B FFE6     	movff	postinc2,postinc1
 39092  0146E0  EE22  F09B         	lfsr	2,_C+156	;volatile
 39093  0146E4  006F FF7B FFE6     	movff	postinc2,postinc1
 39094  0146EA  006F FF7B FFE6     	movff	postinc2,postinc1
 39095  0146F0  006F FF7B FFE6     	movff	postinc2,postinc1
 39096  0146F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39097  0146FC  EC45  F0AD         	call	___fldiv	;wreg free
 39098  014700  0060  F007  FFE6   	movff	btemp,postinc1
 39099  014706  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39100  01470C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39101  014712  0060  F013  FFE6   	movff	btemp+3,postinc1
 39102  014718  ECDA  F0E6         	call	___flneg	;wreg free
 39103  01471C  0060  F007  FFE6   	movff	btemp,postinc1
 39104  014722  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39105  014728  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39106  01472E  0060  F013  FFE6   	movff	btemp+3,postinc1
 39107  014734  EC4E  F0CF         	call	___fltol	;wreg free
 39108  014738  0060  F004  F00B   	movff	btemp,btemp+10
 39109  01473E  0060  F008  F00C   	movff	btemp+1,btemp+11
 39110  014744  0060  F02C  F8B3   	movff	btemp+10,_C+180	;volatile
 39111  01474A  0060  F030  F8B4   	movff	btemp+11,_C+181	;volatile
 39112                           
 39113                           ;bsoc.c: 81:  } else {
 39114  014750  D008               	goto	l14381
 39115  014752                     l2320:
 39116                           
 39117                           ;bsoc.c: 82:   C.runtime = 99;
 39118  014752  0E63               	movlw	99
 39119  014754  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 39120  01475A  0E00               	movlw	0
 39121  01475C  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 39122  014762                     l14381:
 39123                           
 39124                           ;bsoc.c: 84:  if (C.runtime > 99)
 39125  014762  EE22  F0B3         	lfsr	2,_C+180	;volatile
 39126  014766  0E01               	movlw	1
 39127  014768  50DB               	movf	plusw2,w,c
 39128  01476A  E104               	bnz	u1377_20
 39129  01476C  0E64               	movlw	100
 39130  01476E  5CDE               	subwf	postinc2,w,c
 39131  014770  A0D8               	btfss	status,0,c
 39132  014772  D008               	goto	l14385
 39133  014774                     u1377_20:
 39134                           
 39135                           ;bsoc.c: 85:   C.runtime = 99;
 39136  014774  0E63               	movlw	99
 39137  014776  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 39138  01477C  0E00               	movlw	0
 39139  01477E  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 39140  014784                     l14385:
 39141                           
 39142                           ;bsoc.c: 87:  V.lowint_count++;
 39143  014784  0E01               	movlw	1
 39144  014786  0102               	movlb	2	; () banked
 39145  014788  27B4               	addwf	(_V+180)& (0+255),f,b	;volatile
 39146  01478A  0E00               	movlw	0
 39147  01478C  23B5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 39148  01478E  23B6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 39149  014790  23B7               	addwfc	(_V+183)& (0+255),f,b	;volatile
 39150                           
 39151                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 39152  014792  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 39153  014794  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 39154  014796  A4D8               	btfss	status,2,c
 39155  014798  D177               	goto	l14397
 39156                           
 39157                           ; BSR set to: 2
 39158  01479A  51AF               	movf	(_V+175)& (0+255),w,b	;volatile
 39159  01479C  B4D8               	btfsc	status,2,c
 39160  01479E  D174               	goto	l14397
 39161                           
 39162                           ; BSR set to: 2
 39163                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 39164  0147A0  ECA6  F0ED         	call	_port_data_dma_ptr	;wreg free
 39165                           
 39166                           ;stkvar	_log_ptr @ sp[(-6)+4]
 39167  0147A4  0EFF               	movlw	-1
 39168  0147A6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 39169  0147AC  0EFE               	movlw	-2
 39170  0147AE  0060  F007  FFE3   	movff	btemp,plusw1
 39171                           
 39172                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 39173  0147B4  EE22  F0D1         	lfsr	2,_C+210	;volatile
 39174  0147B8  006F FF7B FFE6     	movff	postinc2,postinc1
 39175  0147BE  006F FF7B FFE6     	movff	postinc2,postinc1
 39176  0147C4  006F FF7B FFE6     	movff	postinc2,postinc1
 39177  0147CA  006F FF7B FFE6     	movff	postinc2,postinc1
 39178  0147D0  EE22  F0D5         	lfsr	2,_C+214	;volatile
 39179  0147D4  006F FF7B FFE6     	movff	postinc2,postinc1
 39180  0147DA  006F FF7B FFE6     	movff	postinc2,postinc1
 39181  0147E0  006F FF7B FFE6     	movff	postinc2,postinc1
 39182  0147E6  006F FF7B FFE6     	movff	postinc2,postinc1
 39183  0147EC  EE22  F09B         	lfsr	2,_C+156	;volatile
 39184  0147F0  006F FF7B FFE6     	movff	postinc2,postinc1
 39185  0147F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39186  0147FC  006F FF7B FFE6     	movff	postinc2,postinc1
 39187  014802  006F FF7B FFE6     	movff	postinc2,postinc1
 39188  014808  EE22  F13E         	lfsr	2,_C+319	;volatile
 39189  01480C  006F FF7B FFE6     	movff	postinc2,postinc1
 39190  014812  006F FF7B FFE6     	movff	postinc2,postinc1
 39191  014818  006F FF7B FFE6     	movff	postinc2,postinc1
 39192  01481E  006F FF7B FFE6     	movff	postinc2,postinc1
 39193  014824  EE22  F13A         	lfsr	2,_C+315	;volatile
 39194  014828  006F FF7B FFE6     	movff	postinc2,postinc1
 39195  01482E  006F FF7B FFE6     	movff	postinc2,postinc1
 39196  014834  006F FF7B FFE6     	movff	postinc2,postinc1
 39197  01483A  006F FF7B FFE6     	movff	postinc2,postinc1
 39198  014840  EE22  F139         	lfsr	2,_C+314	;volatile
 39199  014844  50DF               	movf	indf2,w,c
 39200  014846  6EE6               	movwf	postinc1,c
 39201  014848  0E00               	movlw	0
 39202  01484A  6EE6               	movwf	postinc1,c
 39203  01484C  EC8A  F0ED         	call	_get_ac_charger_relay	;wreg free
 39204  014850  5001               	movf	btemp^0,w,c
 39205  014852  6EE6               	movwf	postinc1,c
 39206  014854  0E00               	movlw	0
 39207  014856  6EE6               	movwf	postinc1,c
 39208  014858  EE22  F067         	lfsr	2,_C+104	;volatile
 39209  01485C  006F FF7B FFE6     	movff	postinc2,postinc1
 39210  014862  006F FF7B FFE6     	movff	postinc2,postinc1
 39211  014868  006F FF7B FFE6     	movff	postinc2,postinc1
 39212  01486E  006F FF7B FFE6     	movff	postinc2,postinc1
 39213  014874  EE22  F087         	lfsr	2,_C+136	;volatile
 39214  014878  006F FF7B FFE6     	movff	postinc2,postinc1
 39215  01487E  006F FF7B FFE6     	movff	postinc2,postinc1
 39216  014884  006F FF7B FFE6     	movff	postinc2,postinc1
 39217  01488A  006F FF7B FFE6     	movff	postinc2,postinc1
 39218  014890  EE22  F0B3         	lfsr	2,_C+180	;volatile
 39219  014894  006F FF78  F00B    	movff	postinc2,btemp+10
 39220  01489A  006F FF74  F00C    	movff	postdec2,btemp+11
 39221  0148A0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 39222  0148A6  0060  F033  FFE6   	movff	btemp+11,postinc1
 39223  0148AC  EE22  F0B5         	lfsr	2,_C+182	;volatile
 39224  0148B0  006F FF78  F00B    	movff	postinc2,btemp+10
 39225  0148B6  006F FF74  F00C    	movff	postdec2,btemp+11
 39226  0148BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 39227  0148C2  0060  F033  FFE6   	movff	btemp+11,postinc1
 39228  0148C8  EE22  F093         	lfsr	2,_C+148	;volatile
 39229  0148CC  006F FF7B FFE6     	movff	postinc2,postinc1
 39230  0148D2  006F FF7B FFE6     	movff	postinc2,postinc1
 39231  0148D8  006F FF7B FFE6     	movff	postinc2,postinc1
 39232  0148DE  006F FF7B FFE6     	movff	postinc2,postinc1
 39233  0148E4  EE22  F08F         	lfsr	2,_C+144	;volatile
 39234  0148E8  006F FF7B FFE6     	movff	postinc2,postinc1
 39235  0148EE  006F FF7B FFE6     	movff	postinc2,postinc1
 39236  0148F4  006F FF7B FFE6     	movff	postinc2,postinc1
 39237  0148FA  006F FF7B FFE6     	movff	postinc2,postinc1
 39238  014900  EE22  F077         	lfsr	2,_C+120	;volatile
 39239  014904  006F FF7B FFE6     	movff	postinc2,postinc1
 39240  01490A  006F FF7B FFE6     	movff	postinc2,postinc1
 39241  014910  006F FF7B FFE6     	movff	postinc2,postinc1
 39242  014916  006F FF7B FFE6     	movff	postinc2,postinc1
 39243  01491C  EE22  F073         	lfsr	2,_C+116	;volatile
 39244  014920  006F FF7B FFE6     	movff	postinc2,postinc1
 39245  014926  006F FF7B FFE6     	movff	postinc2,postinc1
 39246  01492C  006F FF7B FFE6     	movff	postinc2,postinc1
 39247  014932  006F FF7B FFE6     	movff	postinc2,postinc1
 39248  014938  EE22  F07B         	lfsr	2,_C+124	;volatile
 39249  01493C  006F FF7B FFE6     	movff	postinc2,postinc1
 39250  014942  006F FF7B FFE6     	movff	postinc2,postinc1
 39251  014948  006F FF7B FFE6     	movff	postinc2,postinc1
 39252  01494E  006F FF7B FFE6     	movff	postinc2,postinc1
 39253  014954  EE22  F07F         	lfsr	2,_C+128	;volatile
 39254  014958  006F FF7B FFE6     	movff	postinc2,postinc1
 39255  01495E  006F FF7B FFE6     	movff	postinc2,postinc1
 39256  014964  006F FF7B FFE6     	movff	postinc2,postinc1
 39257  01496A  006F FF7B FFE6     	movff	postinc2,postinc1
 39258  014970  EE22  F047         	lfsr	2,_C+72	;volatile
 39259  014974  006F FF7B FFE6     	movff	postinc2,postinc1
 39260  01497A  006F FF7B FFE6     	movff	postinc2,postinc1
 39261  014980  006F FF7B FFE6     	movff	postinc2,postinc1
 39262  014986  006F FF7B FFE6     	movff	postinc2,postinc1
 39263  01498C  EE22  F043         	lfsr	2,_C+68	;volatile
 39264  014990  006F FF7B FFE6     	movff	postinc2,postinc1
 39265  014996  006F FF7B FFE6     	movff	postinc2,postinc1
 39266  01499C  006F FF7B FFE6     	movff	postinc2,postinc1
 39267  0149A2  006F FF7B FFE6     	movff	postinc2,postinc1
 39268  0149A8  EE22  F063         	lfsr	2,_C+100	;volatile
 39269  0149AC  006F FF7B FFE6     	movff	postinc2,postinc1
 39270  0149B2  006F FF7B FFE6     	movff	postinc2,postinc1
 39271  0149B8  006F FF7B FFE6     	movff	postinc2,postinc1
 39272  0149BE  006F FF7B FFE6     	movff	postinc2,postinc1
 39273  0149C4  EE22  F04B         	lfsr	2,_C+76	;volatile
 39274  0149C8  006F FF7B FFE6     	movff	postinc2,postinc1
 39275  0149CE  006F FF7B FFE6     	movff	postinc2,postinc1
 39276  0149D4  006F FF7B FFE6     	movff	postinc2,postinc1
 39277  0149DA  006F FF7B FFE6     	movff	postinc2,postinc1
 39278  0149E0  EE22  F04F         	lfsr	2,_C+80	;volatile
 39279  0149E4  006F FF7B FFE6     	movff	postinc2,postinc1
 39280  0149EA  006F FF7B FFE6     	movff	postinc2,postinc1
 39281  0149F0  006F FF7B FFE6     	movff	postinc2,postinc1
 39282  0149F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39283  0149FC  EE22  F053         	lfsr	2,_C+84	;volatile
 39284  014A00  006F FF7B FFE6     	movff	postinc2,postinc1
 39285  014A06  006F FF7B FFE6     	movff	postinc2,postinc1
 39286  014A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 39287  014A12  006F FF7B FFE6     	movff	postinc2,postinc1
 39288  014A18  0060  FA07  FFE6   	movff	_V+129,postinc1
 39289  014A1E  0060  FA0B  FFE6   	movff	_V+130,postinc1
 39290  014A24  0060  FA0F  FFE6   	movff	_V+131,postinc1
 39291  014A2A  0060  FA13  FFE6   	movff	_V+132,postinc1
 39292  014A30  0E32               	movlw	50
 39293  014A32  6EE6               	movwf	postinc1,c
 39294  014A34  0E00               	movlw	0
 39295  014A36  6EE6               	movwf	postinc1,c
 39296  014A38  0E69               	movlw	low STR_93
 39297  014A3A  6EE6               	movwf	postinc1,c
 39298  014A3C  0EFA               	movlw	high STR_93
 39299  014A3E  6EE6               	movwf	postinc1,c
 39300                           
 39301                           ;stkvar	_log_ptr @ sp[(-98)+4]
 39302  014A40  0EA2               	movlw	-94
 39303  014A42  006F FF8F FFE6     	movff	plusw1,postinc1
 39304  014A48  006F FF8F FFE6     	movff	plusw1,postinc1
 39305  014A4E  0E5E               	movlw	94
 39306  014A50  6EE6               	movwf	postinc1,c
 39307  014A52  EC68  F0D8         	call	_sprintf	;wreg free
 39308                           
 39309                           ; BSR set to: 0
 39310                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 39311  014A56  0E7D               	movlw	125
 39312  014A58  6EE6               	movwf	postinc1,c
 39313  014A5A  0E00               	movlw	0
 39314  014A5C  6EE6               	movwf	postinc1,c
 39315  014A5E  0E0A               	movlw	10
 39316  014A60  6EE6               	movwf	postinc1,c
 39317  014A62  EC33  F0E8         	call	_StartTimer	;wreg free
 39318                           
 39319                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 39320                           ;stkvar	_log_ptr @ sp[(-6)+4]
 39321  014A66  0EFE               	movlw	-2
 39322  014A68  006F FF8F FFE6     	movff	plusw1,postinc1
 39323  014A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 39324  014A74  ECB8  F0DF         	call	_strlen	;wreg free
 39325  014A78  0060  F007  FFE6   	movff	btemp,postinc1
 39326  014A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39327  014A84  EC17  F0E6         	call	_send_port_data_dma	;wreg free
 39328  014A88                     l14397:
 39329                           
 39330                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 39331  014A88  0E09               	movlw	9
 39332  014A8A  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 39333  014A8C  D001               	goto	l2324
 39334                           
 39335                           ;bsoc.c: 102:   log_update_wait = 0;
 39336  014A8E  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 39337  014A90                     l2324:
 39338                           
 39339                           ;bsoc.c: 104:  C.update = 0;
 39340  014A90  0E00               	movlw	0
 39341  014A92  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 39342                           
 39343                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 39344  014A98  92BE               	bcf	190,1,c	;volatile
 39345                           
 39346                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 39347  014A9A  0EFA               	movlw	250
 39348  014A9C  26E1               	addwf	fsr1l,f,c
 39349  014A9E  0EFF               	movlw	255
 39350  014AA0  22E2               	addwfc	fsr1h,f,c
 39351  014AA2  0012               	return		;funcret
 39352  014AA4                     __end_of_calc_bsoc:
 39353                           	opt callstack 0
 39354                           
 39355 ;; *************** function _send_port_data_dma *****************
 39356 ;; Defined at:
 39357 ;;		line 398 in file "eadog.c"
 39358 ;; Parameters:    Size  Location     Type
 39359 ;;  dsize           2  [STACK] unsigned short 
 39360 ;; Auto vars:     Size  Location     Type
 39361 ;;		None
 39362 ;; Return value:  Size  Location     Type
 39363 ;;                  1  [STACK] void 
 39364 ;; Registers used:
 39365 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 39366 ;; Tracked objects:
 39367 ;;		On entry : 0/0
 39368 ;;		On exit  : 3F/3B
 39369 ;;		Unchanged: 0/0
 39370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39375 ;;Total ram usage:        0 bytes
 39376 ;; Hardware stack levels used:    1
 39377 ;; Hardware stack levels required when called:    3
 39378 ;; This function calls:
 39379 ;;		Nothing
 39380 ;; This function is called by:
 39381 ;;		_calc_bsoc
 39382 ;; This function uses a reentrant model
 39383 ;;
 39384                           
 39385                           	psect	text176
 39386  01CC2E                     __ptext176:
 39387                           	opt callstack 0
 39388  01CC2E                     _send_port_data_dma:
 39389                           	opt callstack 10
 39390                           
 39391                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 39392                           ;stkvar	_dsize @ sp[(0)+-2]
 39393                           
 39394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39395                           ;incstack = 0
 39396  01CC2E  0EFE               	movlw	-2
 39397  01CC30  04E3               	decf	plusw1,w,c
 39398  01CC32  0EFF               	movlw	-1
 39399  01CC34  006F FF8C  F001    	movff	plusw1,btemp
 39400  01CC3A  0E02               	movlw	2
 39401  01CC3C  5A01               	subwfb	btemp^0,f,c
 39402  01CC3E  A0D8               	btfss	status,0,c
 39403  01CC40  D00C               	goto	l10971
 39404                           
 39405                           ;eadog.c: 401:   dsize = 512;
 39406  01CC42  0E00               	movlw	0
 39407  01CC44  6E0B               	movwf	(btemp+10)^0,c
 39408  01CC46  0E02               	movlw	2
 39409  01CC48  6E0C               	movwf	(btemp+11)^0,c
 39410                           
 39411                           ;stkvar	_dsize @ sp[(0)+-2]
 39412  01CC4A  0EFE               	movlw	-2
 39413  01CC4C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39414  01CC52  0EFF               	movlw	-1
 39415  01CC54  0060  F033  FFE3   	movff	btemp+11,plusw1
 39416  01CC5A                     l10971:
 39417                           
 39418                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 39419  01CC5A  013B               	movlb	59	; () banked
 39420  01CC5C  9FDC               	bcf	220,7,b	;volatile
 39421                           
 39422                           ; BSR set to: 59
 39423                           ;eadog.c: 404:  DMA2SSZ = dsize;
 39424                           ;stkvar	_dsize @ sp[(0)+-2]
 39425  01CC5E  0EFE               	movlw	-2
 39426  01CC60  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 39427  01CC66  0EFF               	movlw	-1
 39428  01CC68  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 39429                           
 39430                           ; BSR set to: 59
 39431                           ;eadog.c: 405:  DMA2DSZ = 1;
 39432  01CC6E  0E00               	movlw	0
 39433  01CC70  6FCF               	movwf	207,b	;volatile
 39434  01CC72  0E01               	movlw	1
 39435  01CC74  6FCE               	movwf	206,b	;volatile
 39436                           
 39437                           ; BSR set to: 59
 39438                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 39439  01CC76  8FDC               	bsf	220,7,b	;volatile
 39440                           
 39441                           ; BSR set to: 59
 39442                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 39443  01CC78  8DDC               	bsf	220,6,b	;volatile
 39444                           
 39445                           ; BSR set to: 59
 39446                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 39447  01CC7A  52E5               	movf	postdec1,f,c
 39448  01CC7C  52E5               	movf	postdec1,f,c
 39449  01CC7E  0012               	return		;funcret
 39450  01CC80                     __end_of_send_port_data_dma:
 39451                           	opt callstack 0
 39452                           
 39453 ;; *************** function _port_data_dma_ptr *****************
 39454 ;; Defined at:
 39455 ;;		line 413 in file "eadog.c"
 39456 ;; Parameters:    Size  Location     Type
 39457 ;;		None
 39458 ;; Auto vars:     Size  Location     Type
 39459 ;;		None
 39460 ;; Return value:  Size  Location     Type
 39461 ;;                  2  [STACK] PTR unsigned char 
 39462 ;; Registers used:
 39463 ;;		wreg, status,2, status,0, btemp, btemp+1
 39464 ;; Tracked objects:
 39465 ;;		On entry : 3F/2
 39466 ;;		On exit  : 0/0
 39467 ;;		Unchanged: 0/0
 39468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39473 ;;Total ram usage:        0 bytes
 39474 ;; Hardware stack levels used:    1
 39475 ;; Hardware stack levels required when called:    3
 39476 ;; This function calls:
 39477 ;;		Nothing
 39478 ;; This function is called by:
 39479 ;;		_calc_bsoc
 39480 ;; This function uses a reentrant model
 39481 ;;
 39482                           
 39483                           	psect	text177
 39484  01DB4C                     __ptext177:
 39485                           	opt callstack 0
 39486  01DB4C                     _port_data_dma_ptr:
 39487                           	opt callstack 10
 39488                           
 39489                           ;eadog.c: 415:  return port_data;
 39490                           
 39491                           ; BSR set to: 59
 39492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39493                           ;incstack = 0
 39494  01DB4C  0EFF               	movlw	low _port_data
 39495  01DB4E  6E01               	movwf	btemp^0,c
 39496  01DB50  0E05               	movlw	high _port_data
 39497  01DB52  6E02               	movwf	(btemp+1)^0,c
 39498                           
 39499                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39500  01DB54  0012               	return		;funcret
 39501  01DB56                     __end_of_port_data_dma_ptr:
 39502                           	opt callstack 0
 39503                           
 39504 ;; *************** function ___asfladd *****************
 39505 ;; Defined at:
 39506 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 39507 ;; Parameters:    Size  Location     Type
 39508 ;;  f1p             2  [STACK] PTR 
 39509 ;;		 -> C(323), 
 39510 ;;  f2              4  [STACK] PTR 
 39511 ;; Auto vars:     Size  Location     Type
 39512 ;;		None
 39513 ;; Return value:  Size  Location     Type
 39514 ;;                  4  [STACK] PTR 
 39515 ;; Registers used:
 39516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39517 ;; Tracked objects:
 39518 ;;		On entry : 0/0
 39519 ;;		On exit  : 0/0
 39520 ;;		Unchanged: 0/0
 39521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39526 ;;Total ram usage:        0 bytes
 39527 ;; Hardware stack levels used:    1
 39528 ;; Hardware stack levels required when called:    4
 39529 ;; This function calls:
 39530 ;;		___fladd
 39531 ;; This function is called by:
 39532 ;;		_calc_bsoc
 39533 ;; This function uses a reentrant model
 39534 ;;
 39535                           
 39536                           	psect	text178
 39537  01C5FE                     __ptext178:
 39538                           	opt callstack 0
 39539  01C5FE                     ___asfladd:
 39540                           	opt callstack 9
 39541                           
 39542                           ;	Return value of ___asfladd is never used
 39543                           ;stkvar	_f2 @ sp[(0)+-6]
 39544                           
 39545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39546                           ;incstack = 0
 39547  01C5FE  0EFA               	movlw	-6
 39548  01C600  006F FF8F FFE6     	movff	plusw1,postinc1
 39549  01C606  006F FF8F FFE6     	movff	plusw1,postinc1
 39550  01C60C  006F FF8F FFE6     	movff	plusw1,postinc1
 39551  01C612  006F FF8F FFE6     	movff	plusw1,postinc1
 39552                           
 39553                           ;stkvar	_f1p @ sp[(-4)+-2]
 39554  01C618  0EFA               	movlw	-6
 39555  01C61A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39556  01C620  0EFB               	movlw	-5
 39557  01C622  006F FF8F FFDA     	movff	plusw1,fsr2h
 39558  01C628  006F FF7B FFE6     	movff	postinc2,postinc1
 39559  01C62E  006F FF7B FFE6     	movff	postinc2,postinc1
 39560  01C634  006F FF7B FFE6     	movff	postinc2,postinc1
 39561  01C63A  006F FF7B FFE6     	movff	postinc2,postinc1
 39562  01C640  EC67  F0A9         	call	___fladd	;wreg free
 39563                           
 39564                           ;stkvar	_f1p @ sp[(0)+-2]
 39565  01C644  0EFE               	movlw	-2
 39566  01C646  006F FF8F FFD9     	movff	plusw1,fsr2l
 39567  01C64C  0EFF               	movlw	-1
 39568  01C64E  006F FF8F FFDA     	movff	plusw1,fsr2h
 39569  01C654  0060  F007  FFDE   	movff	btemp,postinc2
 39570  01C65A  0060  F00B  FFDE   	movff	btemp+1,postinc2
 39571  01C660  0060  F00F  FFDE   	movff	btemp+2,postinc2
 39572  01C666  0060  F013  FFDE   	movff	btemp+3,postinc2
 39573                           
 39574                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 39575  01C66C  0EFA               	movlw	250
 39576  01C66E  26E1               	addwf	fsr1l,f,c
 39577  01C670  0EFF               	movlw	255
 39578  01C672  22E2               	addwfc	fsr1h,f,c
 39579  01C674  0012               	return		;funcret
 39580  01C676                     __end_of___asfladd:
 39581                           	opt callstack 0
 39582                           
 39583 ;; *************** function _INT0_ISR *****************
 39584 ;; Defined at:
 39585 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 39586 ;; Parameters:    Size  Location     Type
 39587 ;;		None
 39588 ;; Auto vars:     Size  Location     Type
 39589 ;;		None
 39590 ;; Return value:  Size  Location     Type
 39591 ;;                  1    wreg      void 
 39592 ;; Registers used:
 39593 ;;		wreg, status,2, status,0, pclath, tosl
 39594 ;; Tracked objects:
 39595 ;;		On entry : 0/0
 39596 ;;		On exit  : 0/0
 39597 ;;		Unchanged: 0/0
 39598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39603 ;;Total ram usage:        0 bytes
 39604 ;; Hardware stack levels used:    1
 39605 ;; Hardware stack levels required when called:    2
 39606 ;; This function calls:
 39607 ;;		_INT0_CallBack
 39608 ;; This function is called by:
 39609 ;;		Interrupt level 2
 39610 ;; This function uses a non-reentrant model
 39611 ;;
 39612                           
 39613                           	psect	text179
 39614  01DB24                     __ptext179:
 39615                           	opt callstack 0
 39616  01DB24                     _INT0_ISR:
 39617                           	opt callstack 2
 39618                           
 39619                           ;incstack = 0
 39620  01DB24  EE14  F218         	lfsr	1,___inthi_sp
 39621                           
 39622                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 39623  01DB28  0139               	movlb	57	; () banked
 39624  01DB2A  91A1               	bcf	161,0,b	;volatile
 39625                           
 39626                           ; BSR set to: 57
 39627                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 39628  01DB2C  EC22  F0EC         	call	_INT0_CallBack	;wreg free
 39629  01DB30  0011               	retfie		f
 39630  01DB32                     __end_of_INT0_ISR:
 39631                           	opt callstack 0
 39632                           
 39633 ;; *************** function _INT0_CallBack *****************
 39634 ;; Defined at:
 39635 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 39636 ;; Parameters:    Size  Location     Type
 39637 ;;		None
 39638 ;; Auto vars:     Size  Location     Type
 39639 ;;		None
 39640 ;; Return value:  Size  Location     Type
 39641 ;;                  1  [STACK] void 
 39642 ;; Registers used:
 39643 ;;		wreg, status,2, status,0, pclath, tosl
 39644 ;; Tracked objects:
 39645 ;;		On entry : 3F/39
 39646 ;;		On exit  : 0/0
 39647 ;;		Unchanged: 0/0
 39648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39653 ;;Total ram usage:        0 bytes
 39654 ;; Hardware stack levels used:    1
 39655 ;; Hardware stack levels required when called:    1
 39656 ;; This function calls:
 39657 ;;		Absolute function
 39658 ;;		_INT0_DefaultInterruptHandler
 39659 ;; This function is called by:
 39660 ;;		_INT0_ISR
 39661 ;; This function uses a reentrant model
 39662 ;;
 39663                           
 39664                           	psect	text180
 39665  01D844                     __ptext180:
 39666                           	opt callstack 0
 39667  01D844                     _INT0_CallBack:
 39668                           	opt callstack 2
 39669                           
 39670                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 39671                           
 39672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39673                           ;incstack = 0
 39674  01D844  0100               	movlb	0	; () banked
 39675  01D846  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 39676  01D848  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39677  01D84A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39678  01D84C  B4D8               	btfsc	status,2,c
 39679  01D84E  0012               	return	
 39680                           
 39681                           ; BSR set to: 0
 39682                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 39683  01D850  D801               	call	u1098_48
 39684  01D852  0012               	return	
 39685  01D854                     u1098_48:
 39686  01D854  0005               	push	
 39687  01D856  6EFA               	movwf	pclath,c
 39688  01D858  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 39689  01D85A  6EFD               	movwf	tosl,c
 39690  01D85C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39691  01D85E  6EFE               	movwf	tosh,c
 39692  01D860  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39693  01D862  6EFF               	movwf	tosu,c
 39694  01D864  50FA               	movf	pclath,w,c
 39695  01D866  0012               	return		;indir
 39696  01D868                     __end_of_INT0_CallBack:
 39697                           	opt callstack 0
 39698                           
 39699 ;; *************** function _INT0_DefaultInterruptHandler *****************
 39700 ;; Defined at:
 39701 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 39702 ;; Parameters:    Size  Location     Type
 39703 ;;		None
 39704 ;; Auto vars:     Size  Location     Type
 39705 ;;		None
 39706 ;; Return value:  Size  Location     Type
 39707 ;;                  1  [STACK] void 
 39708 ;; Registers used:
 39709 ;;		None
 39710 ;; Tracked objects:
 39711 ;;		On entry : 3F/0
 39712 ;;		On exit  : 0/0
 39713 ;;		Unchanged: 0/0
 39714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39719 ;;Total ram usage:        0 bytes
 39720 ;; Hardware stack levels used:    1
 39721 ;; This function calls:
 39722 ;;		Nothing
 39723 ;; This function is called by:
 39724 ;;		_EXT_INT_Initialize
 39725 ;;		_INT0_CallBack
 39726 ;; This function uses a reentrant model
 39727 ;;
 39728                           
 39729                           	psect	text181
 39730  01DBD6                     __ptext181:
 39731                           	opt callstack 0
 39732  01DBD6                     _INT0_DefaultInterruptHandler:
 39733                           	opt callstack 2
 39734                           
 39735                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39736                           
 39737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39738                           ;incstack = 0
 39739  01DBD6  0012               	return		;funcret
 39740  01DBD8                     __end_of_INT0_DefaultInterruptHandler:
 39741                           	opt callstack 0
 39742                           
 39743 ;; *************** function _Default_ISR *****************
 39744 ;; Defined at:
 39745 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 39746 ;; Parameters:    Size  Location     Type
 39747 ;;		None
 39748 ;; Auto vars:     Size  Location     Type
 39749 ;;		None
 39750 ;; Return value:  Size  Location     Type
 39751 ;;                  1    wreg      void 
 39752 ;; Registers used:
 39753 ;;		None
 39754 ;; Tracked objects:
 39755 ;;		On entry : 0/0
 39756 ;;		On exit  : 0/0
 39757 ;;		Unchanged: 0/0
 39758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39763 ;;Total ram usage:        0 bytes
 39764 ;; Hardware stack levels used:    1
 39765 ;; This function calls:
 39766 ;;		Nothing
 39767 ;; This function is called by:
 39768 ;;		Interrupt level 2
 39769 ;; This function uses a non-reentrant model
 39770 ;;
 39771                           
 39772                           	psect	text182
 39773  01DBCC                     __ptext182:
 39774                           	opt callstack 0
 39775  01DBCC                     _Default_ISR:
 39776                           	opt callstack 4
 39777                           
 39778                           ;incstack = 0
 39779  01DBCC  EE14  F218         	lfsr	1,___inthi_sp
 39780  01DBD0  0011               	retfie		f
 39781  01DBD2                     __end_of_Default_ISR:
 39782                           	opt callstack 0
 39783                           
 39784 ;; *************** function _ADCC_ISR *****************
 39785 ;; Defined at:
 39786 ;;		line 314 in file "mcc_generated_files/adcc.c"
 39787 ;; Parameters:    Size  Location     Type
 39788 ;;		None
 39789 ;; Auto vars:     Size  Location     Type
 39790 ;;		None
 39791 ;; Return value:  Size  Location     Type
 39792 ;;                  1    wreg      void 
 39793 ;; Registers used:
 39794 ;;		wreg, status,2, status,0, pclath, tosl
 39795 ;; Tracked objects:
 39796 ;;		On entry : 0/0
 39797 ;;		On exit  : 0/0
 39798 ;;		Unchanged: 0/0
 39799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39804 ;;Total ram usage:        0 bytes
 39805 ;; Hardware stack levels used:    1
 39806 ;; Hardware stack levels required when called:    1
 39807 ;; This function calls:
 39808 ;;		Absolute function
 39809 ;;		_ADCC_DefaultInterruptHandler
 39810 ;;		_adc_int_handler
 39811 ;; This function is called by:
 39812 ;;		Interrupt level 2
 39813 ;; This function uses a non-reentrant model
 39814 ;;
 39815                           
 39816                           	psect	text183
 39817  01D4D8                     __ptext183:
 39818                           	opt callstack 0
 39819  01D4D8                     _ADCC_ISR:
 39820                           	opt callstack 3
 39821                           
 39822                           ;incstack = 0
 39823  01D4D8  EE14  F218         	lfsr	1,___inthi_sp
 39824                           
 39825                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 39826  01D4DC  0139               	movlb	57	; () banked
 39827  01D4DE  95A1               	bcf	161,2,b	;volatile
 39828                           
 39829                           ; BSR set to: 57
 39830                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 39831  01D4E0  0100               	movlb	0	; () banked
 39832  01D4E2  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 39833  01D4E4  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 39834  01D4E6  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 39835  01D4E8  B4D8               	btfsc	status,2,c
 39836  01D4EA  0011               	retfie		f
 39837                           
 39838                           ; BSR set to: 0
 39839                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 39840  01D4EC  D801               	call	i2u1165_48
 39841  01D4EE  0011               	retfie		f
 39842  01D4F0                     i2u1165_48:
 39843  01D4F0  0005               	push	
 39844  01D4F2  6EFA               	movwf	pclath,c
 39845  01D4F4  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 39846  01D4F6  6EFD               	movwf	tosl,c
 39847  01D4F8  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 39848  01D4FA  6EFE               	movwf	tosh,c
 39849  01D4FC  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 39850  01D4FE  6EFF               	movwf	tosu,c
 39851  01D500  50FA               	movf	pclath,w,c
 39852  01D502  0012               	return		;indir
 39853  01D504                     __end_of_ADCC_ISR:
 39854                           	opt callstack 0
 39855                           
 39856 ;; *************** function _adc_int_t_handler *****************
 39857 ;; Defined at:
 39858 ;;		line 181 in file "daq.c"
 39859 ;; Parameters:    Size  Location     Type
 39860 ;;		None
 39861 ;; Auto vars:     Size  Location     Type
 39862 ;;		None
 39863 ;; Return value:  Size  Location     Type
 39864 ;;                  1  [STACK] void 
 39865 ;; Registers used:
 39866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 39867 ;; Tracked objects:
 39868 ;;		On entry : 3F/0
 39869 ;;		On exit  : 0/0
 39870 ;;		Unchanged: 0/0
 39871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39876 ;;Total ram usage:        0 bytes
 39877 ;; Hardware stack levels used:    1
 39878 ;; Hardware stack levels required when called:    1
 39879 ;; This function calls:
 39880 ;;		_ADCC_DischargeSampleCapacitor
 39881 ;;		_ADCC_StartConversion
 39882 ;; This function is called by:
 39883 ;;		_start_adc_scan
 39884 ;;		_ADCC_ThresholdISR
 39885 ;; This function uses a reentrant model
 39886 ;;
 39887                           
 39888                           	psect	text184
 39889  01C482                     __ptext184:
 39890                           	opt callstack 0
 39891  01C482                     _adc_int_t_handler:
 39892                           	opt callstack 2
 39893                           
 39894                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 39895                           
 39896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39897                           ;incstack = 0
 39898  01C482  013E               	movlb	62	; () banked
 39899  01C484  51E6               	movf	230,w,b	;volatile
 39900  01C486  006F FB9C  F001    	movff	16103,btemp	;volatile
 39901  01C48C  6A02               	clrf	(btemp+1)^0,c
 39902  01C48E  0060  F004  F002   	movff	btemp,btemp+1
 39903  01C494  6A01               	clrf	btemp^0,c
 39904  01C496  2601               	addwf	btemp^0,f,c
 39905  01C498  0E00               	movlw	0
 39906  01C49A  2202               	addwfc	(btemp+1)^0,f,c
 39907  01C49C  0101               	movlb	1	; () banked
 39908  01C49E  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 39909  01C4A0  0D02               	mullw	2
 39910  01C4A2  0E07               	movlw	low _R
 39911  01C4A4  24F3               	addwf	243,w,c
 39912  01C4A6  6ED9               	movwf	fsr2l,c
 39913  01C4A8  0E01               	movlw	high _R
 39914  01C4AA  20F4               	addwfc	prodh,w,c
 39915  01C4AC  6EDA               	movwf	fsr2h,c
 39916  01C4AE  0060  F007  FFDE   	movff	btemp,postinc2
 39917  01C4B4  0060  F00B  FFDD   	movff	btemp+1,postdec2
 39918  01C4BA                     l12607:
 39919                           
 39920                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 39921  01C4BA  0101               	movlb	1	; () banked
 39922  01C4BC  2B39               	incf	(_R+50)& (0+255),f,b	;volatile
 39923  01C4BE  0E0D               	movlw	13
 39924  01C4C0  6539               	cpfsgt	(_R+50)& (0+255),b	;volatile
 39925  01C4C2  D003               	goto	l12613
 39926                           
 39927                           ; BSR set to: 1
 39928                           ;daq.c: 189:    R.done = 1;
 39929  01C4C4  0E01               	movlw	1
 39930  01C4C6  6F3C               	movwf	(_R+53)& (0+255),b	;volatile
 39931  01C4C8  0012               	return	
 39932  01C4CA                     l12613:
 39933                           
 39934                           ; BSR set to: 1
 39935                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 39936  01C4CA  0060  F4E4  F00C   	movff	_R+50,btemp+11	;volatile
 39937  01C4D0  EE20  F13A         	lfsr	2,_R+51	;volatile
 39938  01C4D4  006F FF78  F009    	movff	postinc2,btemp+8
 39939  01C4DA  006F FF74  F00A    	movff	postdec2,btemp+9
 39940  01C4E0  2A0C               	incf	(btemp+11)^0,f,c
 39941  01C4E2  D003               	goto	u1162_44
 39942  01C4E4                     u1162_45:
 39943  01C4E4  90D8               	bcf	status,0,c
 39944  01C4E6  320A               	rrcf	(btemp+9)^0,f,c
 39945  01C4E8  3209               	rrcf	(btemp+8)^0,f,c
 39946  01C4EA                     u1162_44:
 39947  01C4EA  2E0C               	decfsz	(btemp+11)^0,f,c
 39948  01C4EC  D7FB               	goto	u1162_45
 39949  01C4EE  A009               	btfss	(btemp+8)^0,0,c
 39950  01C4F0  D7E4               	goto	l12607
 39951                           
 39952                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 39953  01C4F2  ECC6  F0ED         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 39954                           
 39955                           ; BSR set to: 62
 39956                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 39957  01C4F6  0101               	movlb	1	; () banked
 39958  01C4F8  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 39959  01C4FA  0B0F               	andlw	15
 39960  01C4FC  6EE6               	movwf	postinc1,c
 39961  01C4FE  EC4B  F0ED         	call	_ADCC_StartConversion	;wreg free
 39962                           
 39963                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39964  01C502  0012               	return		;funcret
 39965  01C504                     __end_of_adc_int_t_handler:
 39966                           	opt callstack 0
 39967                           
 39968 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 39969 ;; Defined at:
 39970 ;;		line 339 in file "mcc_generated_files/adcc.c"
 39971 ;; Parameters:    Size  Location     Type
 39972 ;;		None
 39973 ;; Auto vars:     Size  Location     Type
 39974 ;;		None
 39975 ;; Return value:  Size  Location     Type
 39976 ;;                  1  [STACK] void 
 39977 ;; Registers used:
 39978 ;;		None
 39979 ;; Tracked objects:
 39980 ;;		On entry : 3F/0
 39981 ;;		On exit  : 0/0
 39982 ;;		Unchanged: 0/0
 39983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39988 ;;Total ram usage:        0 bytes
 39989 ;; Hardware stack levels used:    1
 39990 ;; This function calls:
 39991 ;;		Nothing
 39992 ;; This function is called by:
 39993 ;;		_ADCC_Initialize
 39994 ;;		_ADCC_ISR
 39995 ;;		_ADCC_ThresholdISR
 39996 ;; This function uses a reentrant model
 39997 ;;
 39998                           
 39999                           	psect	text185
 40000  01DBD8                     __ptext185:
 40001                           	opt callstack 0
 40002  01DBD8                     _ADCC_DefaultInterruptHandler:
 40003                           	opt callstack 3
 40004                           
 40005                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 40006                           
 40007                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40008                           ;incstack = 0
 40009  01DBD8  0012               	return		;funcret
 40010  01DBDA                     __end_of_ADCC_DefaultInterruptHandler:
 40011                           	opt callstack 0
 40012                           
 40013 ;; *************** function _adc_int_handler *****************
 40014 ;; Defined at:
 40015 ;;		line 171 in file "daq.c"
 40016 ;; Parameters:    Size  Location     Type
 40017 ;;		None
 40018 ;; Auto vars:     Size  Location     Type
 40019 ;;		None
 40020 ;; Return value:  Size  Location     Type
 40021 ;;                  1  [STACK] void 
 40022 ;; Registers used:
 40023 ;;		None
 40024 ;; Tracked objects:
 40025 ;;		On entry : 3F/0
 40026 ;;		On exit  : 0/0
 40027 ;;		Unchanged: 0/0
 40028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40033 ;;Total ram usage:        0 bytes
 40034 ;; Hardware stack levels used:    1
 40035 ;; This function calls:
 40036 ;;		Nothing
 40037 ;; This function is called by:
 40038 ;;		_start_adc_scan
 40039 ;;		_ADCC_ISR
 40040 ;; This function uses a reentrant model
 40041 ;;
 40042                           
 40043                           	psect	text186
 40044  01DBDA                     __ptext186:
 40045                           	opt callstack 0
 40046  01DBDA                     _adc_int_handler:
 40047                           	opt callstack 3
 40048                           
 40049                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40050                           
 40051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40052                           ;incstack = 0
 40053  01DBDA  0012               	return		;funcret
 40054  01DBDC                     __end_of_adc_int_handler:
 40055                           	opt callstack 0
 40056                           
 40057 ;; *************** function _ADCC_ThresholdISR *****************
 40058 ;; Defined at:
 40059 ;;		line 327 in file "mcc_generated_files/adcc.c"
 40060 ;; Parameters:    Size  Location     Type
 40061 ;;		None
 40062 ;; Auto vars:     Size  Location     Type
 40063 ;;		None
 40064 ;; Return value:  Size  Location     Type
 40065 ;;                  1    wreg      void 
 40066 ;; Registers used:
 40067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 40068 ;; Tracked objects:
 40069 ;;		On entry : 0/0
 40070 ;;		On exit  : 0/0
 40071 ;;		Unchanged: 0/0
 40072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40075 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40076 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40077 ;;Total ram usage:        5 bytes
 40078 ;; Hardware stack levels used:    1
 40079 ;; Hardware stack levels required when called:    2
 40080 ;; This function calls:
 40081 ;;		Absolute function
 40082 ;;		_ADCC_DefaultInterruptHandler
 40083 ;;		_adc_int_t_handler
 40084 ;; This function is called by:
 40085 ;;		Interrupt level 2
 40086 ;; This function uses a non-reentrant model
 40087 ;;
 40088                           
 40089                           	psect	text187
 40090  01C7B8                     __ptext187:
 40091                           	opt callstack 0
 40092  01C7B8                     _ADCC_ThresholdISR:
 40093                           	opt callstack 2
 40094                           
 40095                           ;incstack = 0
 40096  01C7B8  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 40097  01C7BE  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 40098  01C7C4  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 40099  01C7CA  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 40100  01C7D0  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 40101  01C7D6  EE14  F218         	lfsr	1,___inthi_sp
 40102                           
 40103                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 40104  01C7DA  0139               	movlb	57	; () banked
 40105  01C7DC  97A1               	bcf	161,3,b	;volatile
 40106                           
 40107                           ; BSR set to: 57
 40108                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 40109  01C7DE  0100               	movlb	0	; () banked
 40110  01C7E0  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 40111  01C7E2  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 40112  01C7E4  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 40113  01C7E6  B4D8               	btfsc	status,2,c
 40114  01C7E8  D00C               	goto	i2u1167_49
 40115                           
 40116                           ; BSR set to: 0
 40117                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 40118  01C7EA  D801               	call	i2u1167_48
 40119  01C7EC  D00A               	goto	i2u1167_49
 40120  01C7EE                     i2u1167_48:
 40121  01C7EE  0005               	push	
 40122  01C7F0  6EFA               	movwf	pclath,c
 40123  01C7F2  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 40124  01C7F4  6EFD               	movwf	tosl,c
 40125  01C7F6  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 40126  01C7F8  6EFE               	movwf	tosh,c
 40127  01C7FA  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 40128  01C7FC  6EFF               	movwf	tosu,c
 40129  01C7FE  50FA               	movf	pclath,w,c
 40130  01C800  0012               	return		;indir
 40131  01C802                     i2u1167_49:
 40132  01C802  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 40133  01C808  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 40134  01C80E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 40135  01C814  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 40136  01C81A  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 40137  01C820  0011               	retfie		f
 40138  01C822                     __end_of_ADCC_ThresholdISR:
 40139                           	opt callstack 0
 40140                           
 40141 ;; *************** function _UART1_rx_vect_isr *****************
 40142 ;; Defined at:
 40143 ;;		line 181 in file "mcc_generated_files/uart1.c"
 40144 ;; Parameters:    Size  Location     Type
 40145 ;;		None
 40146 ;; Auto vars:     Size  Location     Type
 40147 ;;		None
 40148 ;; Return value:  Size  Location     Type
 40149 ;;                  1    wreg      void 
 40150 ;; Registers used:
 40151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40152 ;; Tracked objects:
 40153 ;;		On entry : 0/0
 40154 ;;		On exit  : 0/0
 40155 ;;		Unchanged: 0/0
 40156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40161 ;;Total ram usage:        0 bytes
 40162 ;; Hardware stack levels used:    1
 40163 ;; Hardware stack levels required when called:    1
 40164 ;; This function calls:
 40165 ;;		Absolute function
 40166 ;;		_UART1_Receive_ISR
 40167 ;; This function is called by:
 40168 ;;		Interrupt level 2
 40169 ;; This function uses a non-reentrant model
 40170 ;;
 40171                           
 40172                           	psect	text188
 40173  01D73C                     __ptext188:
 40174                           	opt callstack 0
 40175  01D73C                     _UART1_rx_vect_isr:
 40176                           	opt callstack 3
 40177                           
 40178                           ;incstack = 0
 40179  01D73C  EE14  F218         	lfsr	1,___inthi_sp
 40180                           
 40181                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 40182  01D740  0100               	movlb	0	; () banked
 40183  01D742  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 40184  01D744  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 40185  01D746  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 40186  01D748  B4D8               	btfsc	status,2,c
 40187  01D74A  0011               	retfie		f
 40188                           
 40189                           ; BSR set to: 0
 40190                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 40191  01D74C  D801               	call	i2u1169_48
 40192  01D74E  0011               	retfie		f
 40193  01D750                     i2u1169_48:
 40194  01D750  0005               	push	
 40195  01D752  6EFA               	movwf	pclath,c
 40196  01D754  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 40197  01D756  6EFD               	movwf	tosl,c
 40198  01D758  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 40199  01D75A  6EFE               	movwf	tosh,c
 40200  01D75C  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 40201  01D75E  6EFF               	movwf	tosu,c
 40202  01D760  50FA               	movf	pclath,w,c
 40203  01D762  0012               	return		;indir
 40204  01D764                     __end_of_UART1_rx_vect_isr:
 40205                           	opt callstack 0
 40206                           
 40207 ;; *************** function _UART1_Receive_ISR *****************
 40208 ;; Defined at:
 40209 ;;		line 192 in file "mcc_generated_files/uart1.c"
 40210 ;; Parameters:    Size  Location     Type
 40211 ;;		None
 40212 ;; Auto vars:     Size  Location     Type
 40213 ;;		None
 40214 ;; Return value:  Size  Location     Type
 40215 ;;                  1  [STACK] void 
 40216 ;; Registers used:
 40217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40218 ;; Tracked objects:
 40219 ;;		On entry : 3F/0
 40220 ;;		On exit  : 3F/0
 40221 ;;		Unchanged: 0/0
 40222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40227 ;;Total ram usage:        0 bytes
 40228 ;; Hardware stack levels used:    1
 40229 ;; This function calls:
 40230 ;;		Nothing
 40231 ;; This function is called by:
 40232 ;;		_UART1_Initialize
 40233 ;;		_UART1_rx_vect_isr
 40234 ;; This function uses a reentrant model
 40235 ;;
 40236                           
 40237                           	psect	text189
 40238  01D9AA                     __ptext189:
 40239                           	opt callstack 0
 40240  01D9AA                     _UART1_Receive_ISR:
 40241                           	opt callstack 3
 40242                           
 40243                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 40244                           
 40245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40246                           ;incstack = 0
 40247  01D9AA  5047               	movf	_uart1RxHead^0,w,c
 40248  01D9AC  0F6C               	addlw	low _uart1RxBuffer
 40249  01D9AE  6ED9               	movwf	fsr2l,c
 40250  01D9B0  6ADA               	clrf	fsr2h,c
 40251  01D9B2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 40252  01D9B8  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 40253                           
 40254                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 40255  01D9BA  0E07               	movlw	7
 40256  01D9BC  6447               	cpfsgt	_uart1RxHead^0,c
 40257  01D9BE  D001               	goto	l11929
 40258                           
 40259                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 40260  01D9C0  6A47               	clrf	_uart1RxHead^0,c	;volatile
 40261  01D9C2                     l11929:
 40262                           
 40263                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 40264  01D9C2  0100               	movlb	0	; () banked
 40265  01D9C4  2BD3               	incf	_uart1RxCount& (0+255),f,b	;volatile
 40266                           
 40267                           ; BSR set to: 0
 40268                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 40269  01D9C6  0012               	return		;funcret
 40270  01D9C8                     __end_of_UART1_Receive_ISR:
 40271                           	opt callstack 0
 40272                           
 40273 ;; *************** function _UART2_tx_vect_isr *****************
 40274 ;; Defined at:
 40275 ;;		line 195 in file "mcc_generated_files/uart2.c"
 40276 ;; Parameters:    Size  Location     Type
 40277 ;;		None
 40278 ;; Auto vars:     Size  Location     Type
 40279 ;;		None
 40280 ;; Return value:  Size  Location     Type
 40281 ;;                  1    wreg      void 
 40282 ;; Registers used:
 40283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40284 ;; Tracked objects:
 40285 ;;		On entry : 0/0
 40286 ;;		On exit  : 0/0
 40287 ;;		Unchanged: 0/0
 40288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40293 ;;Total ram usage:        0 bytes
 40294 ;; Hardware stack levels used:    1
 40295 ;; Hardware stack levels required when called:    1
 40296 ;; This function calls:
 40297 ;;		Absolute function
 40298 ;;		_UART2_Transmit_ISR
 40299 ;; This function is called by:
 40300 ;;		Interrupt level 2
 40301 ;; This function uses a non-reentrant model
 40302 ;;
 40303                           
 40304                           	psect	text190
 40305  01D764                     __ptext190:
 40306                           	opt callstack 0
 40307  01D764                     _UART2_tx_vect_isr:
 40308                           	opt callstack 3
 40309                           
 40310                           ; BSR set to: 0
 40311                           ;incstack = 0
 40312  01D764  EE14  F218         	lfsr	1,___inthi_sp
 40313                           
 40314                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 40315  01D768  0100               	movlb	0	; () banked
 40316  01D76A  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 40317  01D76C  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 40318  01D76E  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 40319  01D770  B4D8               	btfsc	status,2,c
 40320  01D772  0011               	retfie		f
 40321                           
 40322                           ; BSR set to: 0
 40323                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 40324  01D774  D801               	call	i2u1171_48
 40325  01D776  0011               	retfie		f
 40326  01D778                     i2u1171_48:
 40327  01D778  0005               	push	
 40328  01D77A  6EFA               	movwf	pclath,c
 40329  01D77C  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 40330  01D77E  6EFD               	movwf	tosl,c
 40331  01D780  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 40332  01D782  6EFE               	movwf	tosh,c
 40333  01D784  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 40334  01D786  6EFF               	movwf	tosu,c
 40335  01D788  50FA               	movf	pclath,w,c
 40336  01D78A  0012               	return		;indir
 40337  01D78C                     __end_of_UART2_tx_vect_isr:
 40338                           	opt callstack 0
 40339                           
 40340 ;; *************** function _UART2_Transmit_ISR *****************
 40341 ;; Defined at:
 40342 ;;		line 213 in file "mcc_generated_files/uart2.c"
 40343 ;; Parameters:    Size  Location     Type
 40344 ;;		None
 40345 ;; Auto vars:     Size  Location     Type
 40346 ;;		None
 40347 ;; Return value:  Size  Location     Type
 40348 ;;                  1  [STACK] void 
 40349 ;; Registers used:
 40350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40351 ;; Tracked objects:
 40352 ;;		On entry : 3F/0
 40353 ;;		On exit  : 3B/39
 40354 ;;		Unchanged: 0/0
 40355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40360 ;;Total ram usage:        0 bytes
 40361 ;; Hardware stack levels used:    1
 40362 ;; This function calls:
 40363 ;;		Nothing
 40364 ;; This function is called by:
 40365 ;;		_UART2_Initialize
 40366 ;;		_UART2_tx_vect_isr
 40367 ;; This function uses a reentrant model
 40368 ;;
 40369                           
 40370                           	psect	text191
 40371  01D504                     __ptext191:
 40372                           	opt callstack 0
 40373  01D504                     _UART2_Transmit_ISR:
 40374                           	opt callstack 3
 40375                           
 40376                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 40377                           
 40378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40379                           ;incstack = 0
 40380  01D504  0E40               	movlw	64
 40381  01D506  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 40382  01D508  D010               	goto	l675
 40383                           
 40384                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 40385  01D50A  0EC0               	movlw	low _uart2TxBuffer
 40386  01D50C  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 40387  01D50E  6ED9               	movwf	fsr2l,c
 40388  01D510  6ADA               	clrf	fsr2h,c
 40389  01D512  0E02               	movlw	high _uart2TxBuffer
 40390  01D514  22DA               	addwfc	fsr2h,f,c
 40391  01D516  50DF               	movf	indf2,w,c
 40392  01D518  013D               	movlb	61	; () banked
 40393  01D51A  6FD2               	movwf	210,b	;volatile
 40394                           
 40395                           ; BSR set to: 61
 40396  01D51C  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 40397                           
 40398                           ; BSR set to: 61
 40399                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 40400  01D51E  0E3F               	movlw	63
 40401  01D520  6446               	cpfsgt	_uart2TxTail^0,c
 40402  01D522  D001               	goto	l11941
 40403                           
 40404                           ; BSR set to: 61
 40405                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 40406  01D524  6A46               	clrf	_uart2TxTail^0,c	;volatile
 40407  01D526                     l11941:
 40408                           
 40409                           ; BSR set to: 61
 40410                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 40411  01D526  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 40412                           
 40413                           ;mcc_generated_files/uart2.c: 224:     }
 40414  01D528  0012               	return	
 40415  01D52A                     l675:
 40416                           
 40417                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 40418  01D52A  0139               	movlb	57	; () banked
 40419  01D52C  9796               	bcf	150,3,b	;volatile
 40420                           
 40421                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 40422  01D52E  0012               	return		;funcret
 40423  01D530                     __end_of_UART2_Transmit_ISR:
 40424                           	opt callstack 0
 40425                           
 40426 ;; *************** function _UART2_rx_vect_isr *****************
 40427 ;; Defined at:
 40428 ;;		line 203 in file "mcc_generated_files/uart2.c"
 40429 ;; Parameters:    Size  Location     Type
 40430 ;;		None
 40431 ;; Auto vars:     Size  Location     Type
 40432 ;;		None
 40433 ;; Return value:  Size  Location     Type
 40434 ;;                  1    wreg      void 
 40435 ;; Registers used:
 40436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40437 ;; Tracked objects:
 40438 ;;		On entry : 0/0
 40439 ;;		On exit  : 0/0
 40440 ;;		Unchanged: 0/0
 40441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40446 ;;Total ram usage:        0 bytes
 40447 ;; Hardware stack levels used:    1
 40448 ;; Hardware stack levels required when called:    1
 40449 ;; This function calls:
 40450 ;;		Absolute function
 40451 ;;		_UART2_Receive_ISR
 40452 ;; This function is called by:
 40453 ;;		Interrupt level 2
 40454 ;; This function uses a non-reentrant model
 40455 ;;
 40456                           
 40457                           	psect	text192
 40458  01D78C                     __ptext192:
 40459                           	opt callstack 0
 40460  01D78C                     _UART2_rx_vect_isr:
 40461                           	opt callstack 3
 40462                           
 40463                           ;incstack = 0
 40464  01D78C  EE14  F218         	lfsr	1,___inthi_sp
 40465                           
 40466                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 40467  01D790  0100               	movlb	0	; () banked
 40468  01D792  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 40469  01D794  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 40470  01D796  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 40471  01D798  B4D8               	btfsc	status,2,c
 40472  01D79A  0011               	retfie		f
 40473                           
 40474                           ; BSR set to: 0
 40475                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 40476  01D79C  D801               	call	i2u1173_48
 40477  01D79E  0011               	retfie		f
 40478  01D7A0                     i2u1173_48:
 40479  01D7A0  0005               	push	
 40480  01D7A2  6EFA               	movwf	pclath,c
 40481  01D7A4  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 40482  01D7A6  6EFD               	movwf	tosl,c
 40483  01D7A8  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 40484  01D7AA  6EFE               	movwf	tosh,c
 40485  01D7AC  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 40486  01D7AE  6EFF               	movwf	tosu,c
 40487  01D7B0  50FA               	movf	pclath,w,c
 40488  01D7B2  0012               	return		;indir
 40489  01D7B4                     __end_of_UART2_rx_vect_isr:
 40490                           	opt callstack 0
 40491                           
 40492 ;; *************** function _UART2_Receive_ISR *****************
 40493 ;; Defined at:
 40494 ;;		line 233 in file "mcc_generated_files/uart2.c"
 40495 ;; Parameters:    Size  Location     Type
 40496 ;;		None
 40497 ;; Auto vars:     Size  Location     Type
 40498 ;;		None
 40499 ;; Return value:  Size  Location     Type
 40500 ;;                  1  [STACK] void 
 40501 ;; Registers used:
 40502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40503 ;; Tracked objects:
 40504 ;;		On entry : 3F/0
 40505 ;;		On exit  : 3F/0
 40506 ;;		Unchanged: 0/0
 40507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40512 ;;Total ram usage:        0 bytes
 40513 ;; Hardware stack levels used:    1
 40514 ;; This function calls:
 40515 ;;		Nothing
 40516 ;; This function is called by:
 40517 ;;		_UART2_Initialize
 40518 ;;		_UART2_rx_vect_isr
 40519 ;; This function uses a reentrant model
 40520 ;;
 40521                           
 40522                           	psect	text193
 40523  01D912                     __ptext193:
 40524                           	opt callstack 0
 40525  01D912                     _UART2_Receive_ISR:
 40526                           	opt callstack 3
 40527                           
 40528                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 40529                           
 40530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40531                           ;incstack = 0
 40532  01D912  0E00               	movlw	low _uart2RxBuffer
 40533  01D914  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 40534  01D916  6ED9               	movwf	fsr2l,c
 40535  01D918  6ADA               	clrf	fsr2h,c
 40536  01D91A  0E05               	movlw	high _uart2RxBuffer
 40537  01D91C  22DA               	addwfc	fsr2h,f,c
 40538  01D91E  006F F743 FFDF     	movff	15824,indf2	;volatile
 40539  01D924  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 40540                           
 40541                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 40542  01D926  2844               	incf	_uart2RxHead^0,w,c
 40543  01D928  B4D8               	btfsc	status,2,c
 40544                           
 40545                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 40546  01D92A  6A44               	clrf	_uart2RxHead^0,c	;volatile
 40547                           
 40548                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 40549  01D92C  0100               	movlb	0	; () banked
 40550  01D92E  2BD0               	incf	_uart2RxCount& (0+255),f,b	;volatile
 40551                           
 40552                           ; BSR set to: 0
 40553                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 40554  01D930  0012               	return		;funcret
 40555  01D932                     __end_of_UART2_Receive_ISR:
 40556                           	opt callstack 0
 40557                           
 40558 ;; *************** function _TMR6_ISR *****************
 40559 ;; Defined at:
 40560 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 40561 ;; Parameters:    Size  Location     Type
 40562 ;;		None
 40563 ;; Auto vars:     Size  Location     Type
 40564 ;;		None
 40565 ;; Return value:  Size  Location     Type
 40566 ;;                  1    wreg      void 
 40567 ;; Registers used:
 40568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 40569 ;; Tracked objects:
 40570 ;;		On entry : 0/0
 40571 ;;		On exit  : 0/0
 40572 ;;		Unchanged: 0/0
 40573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40578 ;;Total ram usage:        1 bytes
 40579 ;; Hardware stack levels used:    1
 40580 ;; Hardware stack levels required when called:    2
 40581 ;; This function calls:
 40582 ;;		_TMR6_CallBack
 40583 ;; This function is called by:
 40584 ;;		Interrupt level 2
 40585 ;; This function uses a non-reentrant model
 40586 ;;
 40587                           
 40588                           	psect	text194
 40589  01D9E4                     __ptext194:
 40590                           	opt callstack 0
 40591  01D9E4                     _TMR6_ISR:
 40592                           	opt callstack 2
 40593                           
 40594                           ; BSR set to: 0
 40595                           ;incstack = 0
 40596  01D9E4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 40597  01D9EA  EE14  F218         	lfsr	1,___inthi_sp
 40598                           
 40599                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 40600  01D9EE  0139               	movlb	57	; () banked
 40601  01D9F0  91A9               	bcf	169,0,b	;volatile
 40602                           
 40603                           ; BSR set to: 57
 40604                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 40605  01D9F2  EC34  F0EC         	call	_TMR6_CallBack	;wreg free
 40606  01D9F6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 40607  01D9FC  0011               	retfie		f
 40608  01D9FE                     __end_of_TMR6_ISR:
 40609                           	opt callstack 0
 40610                           
 40611 ;; *************** function _TMR6_CallBack *****************
 40612 ;; Defined at:
 40613 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 40614 ;; Parameters:    Size  Location     Type
 40615 ;;		None
 40616 ;; Auto vars:     Size  Location     Type
 40617 ;;		None
 40618 ;; Return value:  Size  Location     Type
 40619 ;;                  1  [STACK] void 
 40620 ;; Registers used:
 40621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 40622 ;; Tracked objects:
 40623 ;;		On entry : 3F/39
 40624 ;;		On exit  : 0/0
 40625 ;;		Unchanged: 0/0
 40626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40631 ;;Total ram usage:        0 bytes
 40632 ;; Hardware stack levels used:    1
 40633 ;; Hardware stack levels required when called:    1
 40634 ;; This function calls:
 40635 ;;		Absolute function
 40636 ;;		_TMR6_DefaultInterruptHandler
 40637 ;; This function is called by:
 40638 ;;		_TMR6_ISR
 40639 ;; This function uses a reentrant model
 40640 ;;
 40641                           
 40642                           	psect	text195
 40643  01D868                     __ptext195:
 40644                           	opt callstack 0
 40645  01D868                     _TMR6_CallBack:
 40646                           	opt callstack 2
 40647                           
 40648                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 40649                           
 40650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40651                           ;incstack = 0
 40652  01D868  0100               	movlb	0	; () banked
 40653  01D86A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 40654  01D86C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 40655  01D86E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 40656  01D870  B4D8               	btfsc	status,2,c
 40657  01D872  0012               	return	
 40658                           
 40659                           ; BSR set to: 0
 40660                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 40661  01D874  D801               	call	u1106_48
 40662  01D876  0012               	return	
 40663  01D878                     u1106_48:
 40664  01D878  0005               	push	
 40665  01D87A  6EFA               	movwf	pclath,c
 40666  01D87C  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 40667  01D87E  6EFD               	movwf	tosl,c
 40668  01D880  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 40669  01D882  6EFE               	movwf	tosh,c
 40670  01D884  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 40671  01D886  6EFF               	movwf	tosu,c
 40672  01D888  50FA               	movf	pclath,w,c
 40673  01D88A  0012               	return		;indir
 40674  01D88C                     __end_of_TMR6_CallBack:
 40675                           	opt callstack 0
 40676                           
 40677 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 40678 ;; Defined at:
 40679 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 40680 ;; Parameters:    Size  Location     Type
 40681 ;;		None
 40682 ;; Auto vars:     Size  Location     Type
 40683 ;;  i               1  [STACK] unsigned char 
 40684 ;; Return value:  Size  Location     Type
 40685 ;;                  1  [STACK] void 
 40686 ;; Registers used:
 40687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 40688 ;; Tracked objects:
 40689 ;;		On entry : 3F/0
 40690 ;;		On exit  : 0/0
 40691 ;;		Unchanged: 0/0
 40692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40697 ;;Total ram usage:        0 bytes
 40698 ;; Hardware stack levels used:    1
 40699 ;; This function calls:
 40700 ;;		Nothing
 40701 ;; This function is called by:
 40702 ;;		_TMR6_Initialize
 40703 ;;		_TMR6_CallBack
 40704 ;; This function uses a reentrant model
 40705 ;;
 40706                           
 40707                           	psect	text196
 40708  01CD1C                     __ptext196:
 40709                           	opt callstack 0
 40710  01CD1C                     _TMR6_DefaultInterruptHandler:
 40711                           	opt callstack 0
 40712                           
 40713                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40714  01CD1C  52E6               	movf	postinc1,f,c
 40715                           
 40716                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 40717                           ;stkvar	_i @ sp[(-1)+0]
 40718                           
 40719                           ;incstack = 0
 40720  01CD1E  0EFF               	movlw	-1
 40721  01CD20  6AE3               	clrf	plusw1,c
 40722  01CD22                     l11377:
 40723                           
 40724                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 40725                           ;stkvar	_i @ sp[(-1)+0]
 40726  01CD22  0EFF               	movlw	-1
 40727  01CD24  50E3               	movf	plusw1,w,c
 40728  01CD26  0D02               	mullw	2
 40729  01CD28  0ED7               	movlw	low _tickCount
 40730  01CD2A  24F3               	addwf	243,w,c
 40731  01CD2C  6ED9               	movwf	fsr2l,c
 40732  01CD2E  0E01               	movlw	high _tickCount
 40733  01CD30  20F4               	addwfc	prodh,w,c
 40734  01CD32  6EDA               	movwf	fsr2h,c
 40735  01CD34  50DE               	movf	postinc2,w,c
 40736  01CD36  10DE               	iorwf	postinc2,w,c
 40737  01CD38  B4D8               	btfsc	status,2,c
 40738  01CD3A  D00C               	goto	l11381
 40739                           
 40740                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 40741                           ;stkvar	_i @ sp[(-1)+0]
 40742  01CD3C  0EFF               	movlw	-1
 40743  01CD3E  50E3               	movf	plusw1,w,c
 40744  01CD40  0D02               	mullw	2
 40745  01CD42  0ED7               	movlw	low _tickCount
 40746  01CD44  24F3               	addwf	243,w,c
 40747  01CD46  6ED9               	movwf	fsr2l,c
 40748  01CD48  0E01               	movlw	high _tickCount
 40749  01CD4A  20F4               	addwfc	prodh,w,c
 40750  01CD4C  6EDA               	movwf	fsr2h,c
 40751  01CD4E  06DE               	decf	postinc2,f,c
 40752  01CD50  0E00               	movlw	0
 40753  01CD52  5ADD               	subwfb	postdec2,f,c
 40754  01CD54                     l11381:
 40755                           
 40756                           ;mcc_generated_files/tmr6.c: 207:  }
 40757                           ;stkvar	_i @ sp[(-1)+0]
 40758  01CD54  0EFF               	movlw	-1
 40759  01CD56  2AE3               	incf	plusw1,f,c
 40760                           
 40761                           ;stkvar	_i @ sp[(-1)+0]
 40762  01CD58  0EFF               	movlw	-1
 40763  01CD5A  006F FF8C  F001    	movff	plusw1,btemp
 40764  01CD60  0E0C               	movlw	12
 40765  01CD62  6401               	cpfsgt	btemp^0,c
 40766  01CD64  D7DE               	goto	l11377
 40767                           
 40768                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 40769  01CD66  52E5               	movf	postdec1,f,c
 40770  01CD68  0012               	return		;funcret
 40771  01CD6A                     __end_of_TMR6_DefaultInterruptHandler:
 40772                           	opt callstack 0
 40773                           
 40774 ;; *************** function _DMA1_DMASCNT_ISR *****************
 40775 ;; Defined at:
 40776 ;;		line 126 in file "mcc_generated_files/dma1.c"
 40777 ;; Parameters:    Size  Location     Type
 40778 ;;		None
 40779 ;; Auto vars:     Size  Location     Type
 40780 ;;		None
 40781 ;; Return value:  Size  Location     Type
 40782 ;;                  1    wreg      void 
 40783 ;; Registers used:
 40784 ;;		None
 40785 ;; Tracked objects:
 40786 ;;		On entry : 0/0
 40787 ;;		On exit  : 3F/0
 40788 ;;		Unchanged: 0/0
 40789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40794 ;;Total ram usage:        0 bytes
 40795 ;; Hardware stack levels used:    1
 40796 ;; This function calls:
 40797 ;;		Nothing
 40798 ;; This function is called by:
 40799 ;;		Interrupt level 2
 40800 ;; This function uses a non-reentrant model
 40801 ;;
 40802                           
 40803                           	psect	text197
 40804  01DB34                     __ptext197:
 40805                           	opt callstack 0
 40806  01DB34                     _DMA1_DMASCNT_ISR:
 40807                           	opt callstack 4
 40808                           
 40809                           ;incstack = 0
 40810  01DB34  EE14  F218         	lfsr	1,___inthi_sp
 40811                           
 40812                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 40813  01DB38  0139               	movlb	57	; () banked
 40814  01DB3A  91A2               	bcf	162,0,b	;volatile
 40815                           
 40816                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 40817  01DB3C  0100               	movlb	0	; () banked
 40818  01DB3E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 40819                           
 40820                           ; BSR set to: 0
 40821  01DB40  0011               	retfie		f
 40822  01DB42                     __end_of_DMA1_DMASCNT_ISR:
 40823                           	opt callstack 0
 40824                           
 40825 ;; *************** function _DMA1_DMADCNT_ISR *****************
 40826 ;; Defined at:
 40827 ;;		line 133 in file "mcc_generated_files/dma1.c"
 40828 ;; Parameters:    Size  Location     Type
 40829 ;;		None
 40830 ;; Auto vars:     Size  Location     Type
 40831 ;;		None
 40832 ;; Return value:  Size  Location     Type
 40833 ;;                  1    wreg      void 
 40834 ;; Registers used:
 40835 ;;		None
 40836 ;; Tracked objects:
 40837 ;;		On entry : 0/0
 40838 ;;		On exit  : 3F/39
 40839 ;;		Unchanged: 0/0
 40840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40845 ;;Total ram usage:        0 bytes
 40846 ;; Hardware stack levels used:    1
 40847 ;; This function calls:
 40848 ;;		Nothing
 40849 ;; This function is called by:
 40850 ;;		Interrupt level 2
 40851 ;; This function uses a non-reentrant model
 40852 ;;
 40853                           
 40854                           	psect	text198
 40855  01DB58                     __ptext198:
 40856                           	opt callstack 0
 40857  01DB58                     _DMA1_DMADCNT_ISR:
 40858                           	opt callstack 4
 40859                           
 40860                           ; BSR set to: 0
 40861                           ;incstack = 0
 40862  01DB58  EE14  F218         	lfsr	1,___inthi_sp
 40863                           
 40864                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 40865  01DB5C  0139               	movlb	57	; () banked
 40866  01DB5E  93A2               	bcf	162,1,b	;volatile
 40867                           
 40868                           ; BSR set to: 57
 40869  01DB60  0011               	retfie		f
 40870  01DB62                     __end_of_DMA1_DMADCNT_ISR:
 40871                           	opt callstack 0
 40872                           
 40873 ;; *************** function _DMA1_DMAA_ISR *****************
 40874 ;; Defined at:
 40875 ;;		line 143 in file "mcc_generated_files/dma1.c"
 40876 ;; Parameters:    Size  Location     Type
 40877 ;;		None
 40878 ;; Auto vars:     Size  Location     Type
 40879 ;;		None
 40880 ;; Return value:  Size  Location     Type
 40881 ;;                  1    wreg      void 
 40882 ;; Registers used:
 40883 ;;		None
 40884 ;; Tracked objects:
 40885 ;;		On entry : 0/0
 40886 ;;		On exit  : 3F/39
 40887 ;;		Unchanged: 0/0
 40888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40893 ;;Total ram usage:        0 bytes
 40894 ;; Hardware stack levels used:    1
 40895 ;; This function calls:
 40896 ;;		Nothing
 40897 ;; This function is called by:
 40898 ;;		Interrupt level 2
 40899 ;; This function uses a non-reentrant model
 40900 ;;
 40901                           
 40902                           	psect	text199
 40903  01DB64                     __ptext199:
 40904                           	opt callstack 0
 40905  01DB64                     _DMA1_DMAA_ISR:
 40906                           	opt callstack 4
 40907                           
 40908                           ; BSR set to: 57
 40909                           ;incstack = 0
 40910  01DB64  EE14  F218         	lfsr	1,___inthi_sp
 40911                           
 40912                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 40913  01DB68  0139               	movlb	57	; () banked
 40914  01DB6A  97A2               	bcf	162,3,b	;volatile
 40915                           
 40916                           ; BSR set to: 57
 40917  01DB6C  0011               	retfie		f
 40918  01DB6E                     __end_of_DMA1_DMAA_ISR:
 40919                           	opt callstack 0
 40920                           
 40921 ;; *************** function _DMA1_DMAOR_ISR *****************
 40922 ;; Defined at:
 40923 ;;		line 154 in file "mcc_generated_files/dma1.c"
 40924 ;; Parameters:    Size  Location     Type
 40925 ;;		None
 40926 ;; Auto vars:     Size  Location     Type
 40927 ;;		None
 40928 ;; Return value:  Size  Location     Type
 40929 ;;                  1    wreg      void 
 40930 ;; Registers used:
 40931 ;;		None
 40932 ;; Tracked objects:
 40933 ;;		On entry : 0/0
 40934 ;;		On exit  : 3F/39
 40935 ;;		Unchanged: 0/0
 40936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40941 ;;Total ram usage:        0 bytes
 40942 ;; Hardware stack levels used:    1
 40943 ;; This function calls:
 40944 ;;		Nothing
 40945 ;; This function is called by:
 40946 ;;		Interrupt level 2
 40947 ;; This function uses a non-reentrant model
 40948 ;;
 40949                           
 40950                           	psect	text200
 40951  01DB70                     __ptext200:
 40952                           	opt callstack 0
 40953  01DB70                     _DMA1_DMAOR_ISR:
 40954                           	opt callstack 4
 40955                           
 40956                           ; BSR set to: 57
 40957                           ;incstack = 0
 40958  01DB70  EE14  F218         	lfsr	1,___inthi_sp
 40959                           
 40960                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 40961  01DB74  0139               	movlb	57	; () banked
 40962  01DB76  95A2               	bcf	162,2,b	;volatile
 40963                           
 40964                           ; BSR set to: 57
 40965  01DB78  0011               	retfie		f
 40966  01DB7A                     __end_of_DMA1_DMAOR_ISR:
 40967                           	opt callstack 0
 40968                           
 40969                           ;
 40970                           ; Interrupt Vector Table @ 0x8
 40971                           ;
 40972                           
 40973                           	psect	ivt0x8
 40974  000008                     __pivt0x8:
 40975                           	opt callstack 0
 40976  000008                     ivt0x8_base:
 40977                           	opt callstack 0
 40978                           
 40979                           ; Vector 0 : SWINT
 40980  000008  76F3               	dw	_Default_ISR shr (0+2)
 40981                           
 40982                           ; Vector 1 : HLVD
 40983  00000A  76F3               	dw	_Default_ISR shr (0+2)
 40984                           
 40985                           ; Vector 2 : OSF
 40986  00000C  76F3               	dw	_Default_ISR shr (0+2)
 40987                           
 40988                           ; Vector 3 : CSW
 40989  00000E  76F3               	dw	_Default_ISR shr (0+2)
 40990                           
 40991                           ; Vector 4 : NVM
 40992  000010  76F3               	dw	_Default_ISR shr (0+2)
 40993                           
 40994                           ; Vector 5 : SCAN
 40995  000012  76F3               	dw	_Default_ISR shr (0+2)
 40996                           
 40997                           ; Vector 6 : CRC
 40998  000014  76F3               	dw	_Default_ISR shr (0+2)
 40999                           
 41000                           ; Vector 7 : IOC
 41001  000016  76F3               	dw	_Default_ISR shr (0+2)
 41002                           
 41003                           ; Vector 8 : INT0
 41004  000018  76C9               	dw	_INT0_ISR shr (0+2)
 41005                           
 41006                           ; Vector 9 : ZCD
 41007  00001A  76F3               	dw	_Default_ISR shr (0+2)
 41008                           
 41009                           ; Vector 10 : AD
 41010  00001C  7536               	dw	_ADCC_ISR shr (0+2)
 41011                           
 41012                           ; Vector 11 : ADT
 41013  00001E  71EE               	dw	_ADCC_ThresholdISR shr (0+2)
 41014                           
 41015                           ; Vector 12 : CMP1
 41016  000020  76F3               	dw	_Default_ISR shr (0+2)
 41017                           
 41018                           ; Vector 13 : SMT1
 41019  000022  76F3               	dw	_Default_ISR shr (0+2)
 41020                           
 41021                           ; Vector 14 : SMT1PRA
 41022  000024  76F3               	dw	_Default_ISR shr (0+2)
 41023                           
 41024                           ; Vector 15 : SMT1PRW
 41025  000026  76F3               	dw	_Default_ISR shr (0+2)
 41026                           
 41027                           ; Vector 16 : DMA1SCNT
 41028  000028  76CD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 41029                           
 41030                           ; Vector 17 : DMA1DCNT
 41031  00002A  76D6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 41032                           
 41033                           ; Vector 18 : DMA1OR
 41034  00002C  76DC               	dw	_DMA1_DMAOR_ISR shr (0+2)
 41035                           
 41036                           ; Vector 19 : DMA1A
 41037  00002E  76D9               	dw	_DMA1_DMAA_ISR shr (0+2)
 41038                           
 41039                           ; Vector 20 : SPI1RX
 41040  000030  76F3               	dw	_Default_ISR shr (0+2)
 41041                           
 41042                           ; Vector 21 : SPI1TX
 41043  000032  76F3               	dw	_Default_ISR shr (0+2)
 41044                           
 41045                           ; Vector 22 : SPI1
 41046  000034  76F3               	dw	_Default_ISR shr (0+2)
 41047                           
 41048                           ; Vector 23 : I2C1RX
 41049  000036  76F3               	dw	_Default_ISR shr (0+2)
 41050                           
 41051                           ; Vector 24 : I2C1TX
 41052  000038  76F3               	dw	_Default_ISR shr (0+2)
 41053                           
 41054                           ; Vector 25 : I2C1
 41055  00003A  76F3               	dw	_Default_ISR shr (0+2)
 41056                           
 41057                           ; Vector 26 : I2C1E
 41058  00003C  76F3               	dw	_Default_ISR shr (0+2)
 41059                           
 41060                           ; Vector 27 : U1RX
 41061  00003E  75CF               	dw	_UART1_rx_vect_isr shr (0+2)
 41062                           
 41063                           ; Vector 28 : U1TX
 41064  000040  76F3               	dw	_Default_ISR shr (0+2)
 41065                           
 41066                           ; Vector 29 : U1E
 41067  000042  76F3               	dw	_Default_ISR shr (0+2)
 41068                           
 41069                           ; Vector 30 : U1
 41070  000044  76F3               	dw	_Default_ISR shr (0+2)
 41071                           
 41072                           ; Vector 31 : TMR0
 41073  000046  76F3               	dw	_Default_ISR shr (0+2)
 41074                           
 41075                           ; Vector 32 : TMR1
 41076  000048  76F3               	dw	_Default_ISR shr (0+2)
 41077                           
 41078                           ; Vector 33 : TMR1G
 41079  00004A  76F3               	dw	_Default_ISR shr (0+2)
 41080                           
 41081                           ; Vector 34 : TMR2
 41082  00004C  76F3               	dw	_Default_ISR shr (0+2)
 41083                           
 41084                           ; Vector 35 : CCP1
 41085  00004E  76F3               	dw	_Default_ISR shr (0+2)
 41086                           
 41087                           ; Vector 36 : Undefined
 41088  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 41089                           
 41090                           ; Vector 37 : NCO1
 41091  000052  76F3               	dw	_Default_ISR shr (0+2)
 41092                           
 41093                           ; Vector 38 : CWG1
 41094  000054  76F3               	dw	_Default_ISR shr (0+2)
 41095                           
 41096                           ; Vector 39 : CLC1
 41097  000056  76F3               	dw	_Default_ISR shr (0+2)
 41098                           
 41099                           ; Vector 40 : INT1
 41100  000058  745A               	dw	_INT1_ISR shr (0+2)
 41101                           
 41102                           ; Vector 41 : CMP2
 41103  00005A  76F3               	dw	_Default_ISR shr (0+2)
 41104                           
 41105                           ; Vector 42 : DMA2SCNT
 41106  00005C  76F3               	dw	_Default_ISR shr (0+2)
 41107                           
 41108                           ; Vector 43 : DMA2DCNT
 41109  00005E  76F3               	dw	_Default_ISR shr (0+2)
 41110                           
 41111                           ; Vector 44 : DMA2OR
 41112  000060  76F3               	dw	_Default_ISR shr (0+2)
 41113                           
 41114                           ; Vector 45 : DMA2A
 41115  000062  76F3               	dw	_Default_ISR shr (0+2)
 41116                           
 41117                           ; Vector 46 : I2C2RX
 41118  000064  76F3               	dw	_Default_ISR shr (0+2)
 41119                           
 41120                           ; Vector 47 : I2C2TX
 41121  000066  76F3               	dw	_Default_ISR shr (0+2)
 41122                           
 41123                           ; Vector 48 : I2C2
 41124  000068  76F3               	dw	_Default_ISR shr (0+2)
 41125                           
 41126                           ; Vector 49 : I2C2E
 41127  00006A  76F3               	dw	_Default_ISR shr (0+2)
 41128                           
 41129                           ; Vector 50 : U2RX
 41130  00006C  75E3               	dw	_UART2_rx_vect_isr shr (0+2)
 41131                           
 41132                           ; Vector 51 : U2TX
 41133  00006E  75D9               	dw	_UART2_tx_vect_isr shr (0+2)
 41134                           
 41135                           ; Vector 52 : U2E
 41136  000070  76F3               	dw	_Default_ISR shr (0+2)
 41137                           
 41138                           ; Vector 53 : U2
 41139  000072  76F3               	dw	_Default_ISR shr (0+2)
 41140                           
 41141                           ; Vector 54 : TMR3
 41142  000074  685C               	dw	_TMR3_ISR shr (0+2)
 41143                           
 41144                           ; Vector 55 : TMR3G
 41145  000076  76F3               	dw	_Default_ISR shr (0+2)
 41146                           
 41147                           ; Vector 56 : TMR4
 41148  000078  76F3               	dw	_Default_ISR shr (0+2)
 41149                           
 41150                           ; Vector 57 : CCP2
 41151  00007A  76F3               	dw	_Default_ISR shr (0+2)
 41152                           
 41153                           ; Vector 58 : Undefined
 41154  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 41155                           
 41156                           ; Vector 59 : CWG2
 41157  00007E  76F3               	dw	_Default_ISR shr (0+2)
 41158                           
 41159                           ; Vector 60 : CLC2
 41160  000080  76F3               	dw	_Default_ISR shr (0+2)
 41161                           
 41162                           ; Vector 61 : INT2
 41163  000082  76F3               	dw	_Default_ISR shr (0+2)
 41164                           
 41165                           ; Vector 62 : Undefined
 41166  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 41167                           
 41168                           ; Vector 63 : Undefined
 41169  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 41170                           
 41171                           ; Vector 64 : Undefined
 41172  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 41173                           
 41174                           ; Vector 65 : Undefined
 41175  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 41176                           
 41177                           ; Vector 66 : Undefined
 41178  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 41179                           
 41180                           ; Vector 67 : Undefined
 41181  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 41182                           
 41183                           ; Vector 68 : Undefined
 41184  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 41185                           
 41186                           ; Vector 69 : Undefined
 41187  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 41188                           
 41189                           ; Vector 70 : TMR5
 41190  000094  6CEB               	dw	_TMR5_ISR shr (0+2)
 41191                           
 41192                           ; Vector 71 : TMR5G
 41193  000096  76F3               	dw	_Default_ISR shr (0+2)
 41194                           
 41195                           ; Vector 72 : TMR6
 41196  000098  7679               	dw	_TMR6_ISR shr (0+2)
 41197                           
 41198                           ; Vector 73 : CCP3
 41199  00009A  76F3               	dw	_Default_ISR shr (0+2)
 41200                           
 41201                           ; Vector 74 : CWG3
 41202  00009C  76F3               	dw	_Default_ISR shr (0+2)
 41203                           
 41204                           ; Vector 75 : CLC3
 41205  00009E  76F3               	dw	_Default_ISR shr (0+2)
 41206                           
 41207                           ; Vector 76 : Undefined
 41208  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 41209                           
 41210                           ; Vector 77 : Undefined
 41211  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 41212                           
 41213                           ; Vector 78 : Undefined
 41214  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 41215                           
 41216                           ; Vector 79 : Undefined
 41217  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 41218                           
 41219                           ; Vector 80 : CCP4
 41220  0000A8  76F3               	dw	_Default_ISR shr (0+2)
 41221                           
 41222                           ; Vector 81 : CLC4
 41223  0000AA  76F3               	dw	_Default_ISR shr (0+2)
 41224  0000AC                     ivt0x8_undefint:
 41225                           	opt callstack 0
 41226  0000AC  00FF               	reset	
 41227                           
 41228                           	psect	text201
 41229  000000                     __ptext201:
 41230                           	opt callstack 0
 41231                           
 41232                           	psect	rparam
 41233  0000                     
 41234                           	psect	temp
 41235  000001                     btemp:
 41236                           	opt callstack 0
 41237  000001                     	ds	32
 41238  0000                     wtemp0	set	btemp
 41239  0000                     wtemp1	set	btemp+2
 41240  0000                     wtemp2	set	btemp+4
 41241  0000                     wtemp3	set	btemp+6
 41242  0000                     wtemp4	set	btemp+8
 41243  0000                     wtemp5	set	btemp+10
 41244  0000                     wtemp8	set	btemp+1
 41245  0000                     ttemp0	set	btemp
 41246  0000                     ttemp1	set	btemp+3
 41247  0000                     ttemp2	set	btemp+6
 41248  0000                     ttemp3	set	btemp+9
 41249  0000                     ttemp5	set	btemp+1
 41250  0000                     ttemp6	set	btemp+4
 41251  0000                     ttemp7	set	btemp+8
 41252  0000                     ltemp0	set	btemp
 41253  0000                     ltemp1	set	btemp+4
 41254  0000                     ltemp2	set	btemp+8
 41255  0000                     lltemp0	set	btemp
 41256  0000                     lltemp1	set	btemp+8
 41257  0000                     lltemp2	set	btemp+16
 41258  0000                     lltemp3	set	btemp+24
 41259                           tosu	equ	0x3FFF
 41260                           tosh	equ	0x3FFE
 41261                           tosl	equ	0x3FFD
 41262                           stkptr	equ	0x3FFC
 41263                           pclatu	equ	0x3FFB
 41264                           pclath	equ	0x3FFA
 41265                           pcl	equ	0x3FF9
 41266                           tblptru	equ	0x3FF8
 41267                           tblptrh	equ	0x3FF7
 41268                           tblptrl	equ	0x3FF6
 41269                           tablat	equ	0x3FF5
 41270                           prodh	equ	0x3FF4
 41271                           prodl	equ	0x3FF3
 41272                           indf0	equ	0x3FEF
 41273                           postinc0	equ	0x3FEE
 41274                           postdec0	equ	0x3FED
 41275                           preinc0	equ	0x3FEC
 41276                           plusw0	equ	0x3FEB
 41277                           fsr0h	equ	0x3FEA
 41278                           fsr0l	equ	0x3FE9
 41279                           wreg	equ	0x3FE8
 41280                           indf1	equ	0x3FE7
 41281                           postinc1	equ	0x3FE6
 41282                           postdec1	equ	0x3FE5
 41283                           preinc1	equ	0x3FE4
 41284                           plusw1	equ	0x3FE3
 41285                           fsr1h	equ	0x3FE2
 41286                           fsr1l	equ	0x3FE1
 41287                           bsr	equ	0x3FE0
 41288                           indf2	equ	0x3FDF
 41289                           postinc2	equ	0x3FDE
 41290                           postdec2	equ	0x3FDD
 41291                           preinc2	equ	0x3FDC
 41292                           plusw2	equ	0x3FDB
 41293                           fsr2h	equ	0x3FDA
 41294                           fsr2l	equ	0x3FD9
 41295                           status	equ	0x3FD8


Data Sizes:
    Strings     1430
    Constant    492
    Data        1210
    BSS         1475
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     154
    BANK1           256      0     249
    BANK2           256      0     256
    BANK3           256      0     231
    BANK4           256      0     234
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    C.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), STR_92(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), 
		 -> STR_108(CODE[3]), STR_104(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), 
		 -> STR_108(CODE[3]), STR_104(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), 
		 -> STR_89(CODE[19]), STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), 
		 -> STR_89(CODE[19]), STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_99(CODE[4]), STR_98(CODE[4]), STR_95(CODE[4]), STR_94(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_99(CODE[4]), STR_98(CODE[4]), STR_95(CODE[4]), STR_94(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_73(CODE[3]), STR_72(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), 
		 -> STR_68(CODE[21]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), 
		 -> STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), 
		 -> STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7423_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 324
		 -> C(BIGRAM[323]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_75(CODE[9]), 
		 -> STR_74(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 324
		 -> C.hist(BIGRAM[109]), C(BIGRAM[323]), 

    R.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 168
		 -> R(BANK1[167]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 168
		 -> r_cal(BANK4[167]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_75(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_74(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[192]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    S3352tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  604967
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     562
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     182
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31461
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                  17    17      0  129346
                             _WaitMs
                            ___fldiv
                           ___xxtofl
                    _cal_current_10A
                   _cal_current_zero
                     _clear_adc_scan
                       _clear_switch
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _clear_switch                                         1     0      1      66
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (2) _cal_current_10A                                     13     0     13     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  250792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  125143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94854
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   94590
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31430
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31355
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31578
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30152
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35866
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35776
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35776
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___xxtofl
     _cal_current_10A
       _check_range
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _clear_switch
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     525      69       16.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      EA      13       91.4%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E7      11       90.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     58A      58        0.0%
DATA                 0      0     AAF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 22:18:30 2020

                     _SPI1_Exchange8bit D932                __end_of_set_display_info D9AA  
                                     _C 07FF                                       _D 0942  
                                     _H 00F1                                       _P 009E  
                                     _R 0107                                       _S 01AE  
                                     _T F94D                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler D672            __end_of_start_switch_handler D912  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data CB86                                      _bp FA55  
                __end_of_FVR_Initialize DBAC                          _check_day_time 96EE  
                           __CFG_LVP$ON 000000                                     l171 DA6A  
                                   l809 D940                                     l675 D52A  
                                   l942 C86E                                     _GIE 01FE97  
                                   _abs CED4                                     _pad AD9E  
                                   fsr0 003FE9                                     fsr2 003FD9  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize DA16  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D844  
                     _update_adc_result D1A6                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack D7D8  
                          __CFG_ZCD$OFF 000000                                    l1004 D120  
                                  l2001 C5FA                                    l2111 96E4  
                                  l2017 BB5E                                    l2042 C132  
                                  l1271 DA92                                    l2320 4752  
                                  l1192 D160                                    l2048 B93E  
                                  l2080 C6DC                                    l2209 CCCA  
                                  l1505 402C                                    l2241 B560  
                                  l1441 005E                                    l1282 9D58  
                                  l2250 AB6A                                    l2171 9884  
                       _timer3ReloadVal 00C4                                    l2324 4A90  
                                  l3300 52C4                                    l1284 9D5E  
                                  l1460 07B6                                    l2510 18FC  
                                  l2158 B2D8                                    l1470 0858  
                                  l1462 07BC                                    l2175 987C  
                                  l3231 5910                                    l1447 0298  
                                  l1480 0A5E                                    l2425 ADFA  
                                  l1481 0C88                                    l3402 88A2  
                                  l1730 C1C6                                    l3219 5A80  
                                  l3340 935E                                    l1804 D1FC  
                                  l2445 659E                                    l2525 1DAC  
                                  l1821 AFBE                                    l1813 9004  
                                  l1726 BE1A                                    l1814 9160  
                                  l2366 80F6                                    l1486 1252  
                                  l3264 5FFA                                    l2481 24CC  
                                  l1745 D268                                    l3371 CF14  
                                  l3363 9A1A                                    l2563 81E4  
                                  l1861 D9A6                                    l1598 CADC  
                  _ADCC_StartConversion DA96                                    l3471 AA42  
                                  l2584 783A                                    l1961 64BA  
                                  l2649 3478                                    l2941 B7C0  
                                  l2599 6DD0                                    l2952 A166  
                                  l2945 A092                                    l3753 C478  
                                  l3738 8F48                                    l3766 C3F4  
                                  l2979 A004                                    l9101 5B66  
                                  l9021 84B4                                    l9015 846E  
                                  l9121 5C44                                    l9033 8586  
                                  l9009 841A                                    l9115 5BFE  
                                  l9221 5FA6                                    l9141 5CD6  
                                  l9133 5CBC                                    l9109 5BBE  
                                  l9061 8BD8                                    l9053 8B50  
                                  l9215 5F76                                    l9151 5D66  
                                  l9127 5C82                                    l9119 5C14  
                                  l9209 5F3A                                    l9161 5DAE  
                                  l9251 4B3A                                    l8611 5324  
                                  l9227 5FCE                                    l9333 50B8  
                                  l9253 4B40                                    l9245 4AFA  
                                  l8621 537A                                    l9229 5FDE  
                                  l9181 5E50                                    l9069 8C84  
                                  l9413 A464                                    l9343 50FA  
                                  l9271 4C0E                                    l9263 4BC8  
                                  l9255 4B70                                    l8703 56A8  
                                  l8623 53AA                                    l9503 A050  
                                  l9175 5E34                                    l9167 5E02  
                                  l9159 5D9C                                    l9095 5B20  
                                  l9407 A44E                                    l9353 5144  
                                  l9281 4C60                                    l9273 4C3E  
                                  l8641 5454                                    l8617 5364  
                                  l9521 A164                                    l9513 A12E  
                                  l9185 5E76                                    l9169 5E06  
                                  l9089 5AE0                                    l9441 A55E  
                                  l9433 A52A                                    l9371 5204  
                                  l9339 50D4                                    l8811 5A20  
                                  l8731 5790                                    l8707 56D8  
                                  l8635 5414                                    l9195 5EC0  
                                  l9099 5B36                                    l9419 A484  
                                  l9611 A7A0                                    l9603 A6F4  
                                  l9357 514A                                    l9269 4C08  
                                  l8813 5A30                                    l8725 5774  
                                  l8653 54BC                                    l8645 546A  
                                  l8629 53E2                                    l9509 A0E0  
                                  l9461 ACD0                                    l9453 ACA6  
                                  l9367 51BE                                    l8807 5A08  
                                  l8727 5786                                    l8735 57C2  
                                  l8647 549A                                    l9199 5EC6  
                                  l9471 AD50                                    l9385 5272  
                                  l9377 522E                                    l9457 ACB8  
                                  l9529 CDD2                                    l8913 99BC  
                                  l9387 528C                                    l8819 5A60  
                                  l8771 5950                                    l8747 589A  
                                  l8683 55FA                                    l9627 CC1E  
                                  l9491 B78A                                    l9563 9F9C  
                                  l9555 9F70                                    l9539 9EEE  
                                  l8781 5978                                    l8765 5932  
                                  l8757 58F4                                    l8749 58C0  
                                  l8693 566C                                    l9565 9FB2  
                                  l9557 9F8C                                    l8909 99B8  
                                  l8767 5944                                    l9479 AD84  
                                  l9495 B7BE                                    l9487 B748  
                                  l8919 9A12                                    l8951 7264  
                                  l9591 9CCA                                    l8785 597E  
                                  l8697 568C                                    l8937 C468  
                                  l8699 569E                                    l8971 741A  
                                  l9579 9BF8                                    l8797 59DC  
                                  l8965 7382                                    l8895 CF04  
                                  l8975 7488                                    l8967 73D2  
                                  STR_1 FE65                                    STR_2 FE11  
                                  l8993 C3E4                                    STR_3 FFD2  
                                  STR_4 FDA8                                    STR_5 FBDF  
                                  STR_6 FBDF                                    STR_7 FBDF  
                                  STR_8 FEB9                                    STR_9 FF22  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6100 D440  
                                  u6110 D442                                    u7000 84AE  
                                  u6210 5620                                    u7010 84E0  
                                  _T6PR 003F93                                    u6220 5640  
                                  u7100 8BA0                                    _PMD0 0039C0  
                                  u6221 563A                                    _PMD1 0039C1  
                                  u7030 85BE                                    u7110 8BD2  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u7120 8C04                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u6410 5956  
                                  u6330 57B8                                    u7050 8610  
                                  u8010 9D02                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u6500 59EC  
                                  u6260 56D0                                    u7300 5E2E  
                                  u7140 8CBC                                    u6430 5970  
                                  u6270 56F0                                    u6238 5642  
                                  u8030 A6EE                                    u6335 57A8  
                                  u7400 5F8A                                    u7160 8D0E  
                                  u7080 8B4A                                    u8040 A720  
                                  u6265 56C0                                    u6370 58E2  
                                  u7340 5EB8                                    u8060 A7D8  
                                  u6540 D410                                    u6470 59CC  
                                  u6710 9A0A                                    u6550 D412  
                                  u7600 5198                                    u8080 CBFA  
                                  u6720 9A0C                                    u7505 4DE2  
                                  u6705 99EC                                    u7610 51D2  
                                  u8090 CC1A                                    u9210 883C  
                                  u6650 CEE8                                    u7515 4EAA  
                                  u6475 59BC                                    u7620 5218  
                                  u7380 5F14                                    u9220 883E  
                                  u6660 993C                                    u9300 8EEE  
                                  u6900 C3A2                                    u7605 5188  
                                  u7525 5072                                    u7390 5F4E  
                                  u6830 7328                                    u6750 C426  
                                  u9310 8F1C                                    u6910 C3A4  
                                  u6815 7282                                    u7560 513C  
                                  u7800 B7BA                                    u6816 7288  
                                  u6760 C428                                    u9320 D892  
                                  u7385 5F04                                    u6665 9932  
                                  u6817 7296                                    u9305 8EE8  
                                  u7490 4C4E                                    u6930 D470  
                                  u6850 7400                                    u6835 731E  
                                  u9307 8EDA                                    u6940 D472  
                                  u7740 ACFC                                    u6780 71FC  
                                  u9260 8E54                                    u9317 8F0E  
                                  u9190 86E4                                    u7670 A4B0  
                                  u6790 7248                                    u6855 73F6  
                                  u6960 8414                                    u7760 AD70  
                                  u6880 CF98                                    u6785 71F2  
                                  u7690 A54A                                    u6890 CF9A  
                                  u9267 8E46                                    u6980 846A  
                                  u7860 CDCE                                    u7940 9FBA  
                                  u9710 92D2                                    u7870 9ECE  
                                  u6991 8474                                    u7960 9FE4  
                                  u7880 9EE2                                    u7890 9F1C  
                                  _PLLR 01CEE0                                    u7875 9EC4  
                                  u7971 9BB8                                    u9804 6050  
                                  u7980 9BF2                                    u9805 604A  
                                  u7990 9C24                                    u9750 B67A  
                                  u7895 9F12                                    u9824 6072  
                                  u9825 606C                                    u9755 B674  
                                  u9844 6258                                    u9845 6252  
                                  u9950 C82E                                    u9864 6326  
                                  u9784 6020                                    u9865 6320  
                                  u9785 601A                                    u9890 6350  
                                  u9884 6348                                    u9885 6342  
                                  u9958 C830                                    u9975 C87E  
                                  u9976 C880                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR D504  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0354  
                    __size_of_CRC_Start 0006                                    _cp_h FA65  
                                  _cp_l FA61                                    _atoi 8638  
                                  _ctoa C2F2                                    _main 0000  
                                  _dtoa 64C0                                    _nanf C9B6  
                                  _seed 01F1                                    _prec 003C  
                                  _nout 00C0                                    _spin F9DD  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 80FA  
                                  btemp 0001                                    _utoa 77F6  
                                  _xtoa 6D8C                  __end_of_check_adc_scan DB8C  
                         ___fpclassifyf 988E                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00C8               __end_of_SPI1_Exchange8bit D950  
             __size_of_clear_hid_pflags 0034                         _TMR3_Initialize CE8C  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr D73C                            ___param_bank 000000  
                __end_of_check_day_time 988E                      ?_UART1_rx_vect_isr 0021  
             __size_of_DATAEE_WriteByte 0068                        _update_hist_data C676  
                      __end_of_INT0_ISR DB32                        __end_of_INT1_ISR D1A6  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma BE22  
         __end_of_OSCILLATOR_Initialize DA70                                   l10223 8714  
                                 l10207 8652                                   l10233 87F6  
                                 l10225 872C                                   l10217 86E8  
                                 l10209 8674                                   l10243 8892  
                                 l10227 8750                                   l10229 878E  
                                 l10261 8E26                                   l12121 93B0  
                                 l10531 925C                                   l10259 8DBA  
                                 l10541 92BE                                   l10525 921A  
                                 l10517 91AE                                   l10621 630C  
                                 l10605 615C                                   l12205 7E3E  
                                 l12133 9466                                   l12141 9518  
                                 l10527 9228                                   l12231 7EE2  
                                 l12215 7E84                                   l12207 7E4E  
                                 l12135 949A                                   l10537 928A  
                                 l10529 923E                                   l10617 6270  
                                 l10609 623E                                   l14001 2608  
                                 l12225 7EBA                                   l12209 7E54  
                                 l12161 CBB6                                   l10539 92A8  
                                 l10635 6488                                   l10643 649A  
                                 l11531 A328                                   l12251 7F62  
                                 l12243 7F3C                                   l12235 7EEE  
                                 l12219 7E90                                   l11381 CD54  
                                 l10549 92DC                                   l10629 63EC  
                                 l10661 D5A2                                   l14021 2774  
                                 l11509 C10C                                   l10573 B688  
                                 l10581 B6DA                                   l12149 951C  
                                 l10807 97B8                                   l10559 933E  
                                 l14023 278A                                   l11535 A39E  
                                 l12175 C6B8                                   l11377 CD22  
                                 l11481 9596                                   l11473 956A  
                                 l12185 9B84                                   l11609 D212  
                                 l13321 BFB8                                   l13401 B5AC  
                                 l14105 2E6C                                   l12441 BA46  
                                 l10577 B6C6                                   l12273 80BC  
                                 l10819 982A                                   l11731 A5B4  
                                 l10595 6036                                   l13307 A958  
                                 l14115 2F1A                                   l14019 273A  
                                 l11547 CC90                                   l11651 D1C6  
                                 l12275 80E6                                   l12507 AAD4  
                                 l15003 127E                                   l12613 C4CA  
                                 l11741 A5EE                                   l11725 A590  
                                 l11485 95AA                                   l10589 6006  
                                 l13333 C060                                   l13421 C33C  
                                 l14125 303C                                   l14061 2AC6  
                                 l12437 BA08                                   l11557 B8B6  
                                 l10933 D4BC                                   l12517 AB44  
                                 PRLOCK 0039EF                                   l12607 C4BA  
                                 l11727 A5A0                                   l12535 D0DE  
                                 l13319 BF96                                   l14135 30F2  
                                 l14039 28EE                                   l10863 9E20  
                                 l11729 A5A6                                   l13329 C022  
                                 l13505 133E                                   l14081 2CD8  
                                 l14073 2C20                                   l14057 2A72  
                                 l14049 2986                                   l14217 BCF8  
                                 l13361 7CF6                                   l14241 BE26  
                                 l11569 B8EC                                   l11497 C0D6  
                                 l14305 B39A                                   l10971 CC5A  
                                 l11755 A6A0                                   l11747 A626  
                                 l11739 A5BC                                   l13419 C310  
                                 l13611 1888                                   l13603 1826  
                                 l14163 33A6                                   l14219 BD3A  
                                 l13355 7C8C                                   l14243 BE2E  
                                 l10867 9E4A                                   l12491 AA58  
                                 l11675 C5B8                                   l11941 D526  
                                 l14341 4174                                   l12485 6D7E  
                                 l13381 ADCA                                   l13453 65D8  
                                 l13445 658E                                   l13613 1894  
                                 l13517 1382                                   l13525 13D8  
                                 l14173 3404                                   l14149 326E  
                                 l14085 2D0C                                   l13349 7BCE  
                                 l14245 BE38                                   l14253 BE4E  
                                 l11773 B51A                                   l13391 AE40  
                                 l13535 147C                                   l13543 14EA  
                                 l14247 BE46                                   l14255 BE7A  
                                 l10879 D272                                   l10991 C53C  
                                 l11767 B4D4                                   l11863 B95A  
                                 l11687 C5D0                                   l11695 ABD0  
                                 l11929 D9C2                                   l14361 43A2  
                                 l14345 41E0                                   l14337 4120  
                                 l13385 ADF2                                   l13457 65F6  
                                 l13633 1982                                   l13553 158E  
                                 l13561 15BC                                   l13537 14A8  
                                 l14169 3400                                   l13369 7DA4  
                                 l14505 35B2                                   l14371 45F4  
                                 l13395 AE8A                                   l13387 AE04  
                                 l13491 68F6                                   l13467 6808  
                                 l13707 1FB6                                   l13715 2022  
                                 l13723 2134                                   l13539 14BE  
                                 l14179 3424                                   l11867 B9D6  
                                 l11699 AC32                                   l14381 4762  
                                 l14357 434E                                   l14349 424C  
                                 l13629 194A                                   l13573 1698  
                                 l14197 BF22                                   l14277 AED6  
                                 l14621 3F82                                   l14367 457A  
                                 l11967 D108                                   l13487 68BA  
                                 l13751 2282                                   l13735 21CC  
                                 l13671 1DA4                                   l13663 1CDA  
                                 l13639 1A0C                                   l13591 17E6  
                                 l13575 1702                                   l13831 8286  
                                 l13823 821A                                   l13807 8166  
                                 l13911 6E36                                   l14543 383A  
                                 l14711 0040                                   l14385 4784  
                                 l14377 46BA                                   l11985 D148  
                                 l13761 2324                                   l13673 1DC6  
                                 l13649 1BB8                                   l13569 1628  
                                 l13841 833C                                   l13905 6DFA  
                                 l14545 38E2                                   l14713 0048  
                                 l13771 2374                                   l13595 180E  
                                 l13579 1764                                   l13827 8256  
                                 l14299 B2F4                                   l14563 3988  
                                 l14397 4A88                                   l13749 2268  
                                 l13597 1820                                   l13845 8378  
                                 l13837 8310                                   l14549 38F0  
                                 l14493 353A                                   l14717 0066  
                                 l13687 1EC4                                   l13935 6F8C  
                                 l13919 6E96                                   l13943 7012  
                                 l14663 90FC                                   l14583 3A9E  
                                 l14567 399C                                   l14911 096A  
                                 l14831 0542                                   l14719 0078  
                                 l14649 8FD4                                   l14497 3550  
                                 l13787 242C                                   l13699 1F4C  
                                 l13867 7886                                   l13859 782A  
                                 l14923 0EC6                                   l14843 061C  
                                 l13877 7A7C                                   l14861 07AC  
                                 l13959 70FC                                   l14927 0F28  
                                 l14783 02B2                                   l14953 1128  
                                 l14937 10AA                                   l14881 0822  
                                 l14777 0270                                   l13899 6DC0  
                                 l14939 10D6                                   l14867 07C0  
                                 l13997 25B8                                   l14981 11CC  
                                 l14965 117C                                   l14869 07EE  
                                 l13999 25F2                                   l14983 11E4  
                                 l14975 11BA                                   l14993 1228  
                                 l14889 0848                                   l14899 086A  
                                 l14989 1202                         __end_of___aodiv 8638  
                          _Volts_to_SOC B948                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 5A8A  
                                 _ADCLK 003EFF                         __end_of___aomod 8D32  
                                 _ADPCH 003EF1                         __end_of___fldiv 6004  
                                 _ADREF 003EFD                         __end_of___awdiv A578  
                       __end_of___flneg CDFC                                   STR_10 FD93  
                                 STR_11 FB39                                   STR_12 FC0A  
                                 STR_20 FB05                                   STR_13 FCE6  
                                 STR_21 FB1F                                   STR_22 FF94  
                                 STR_30 FC62                                   STR_14 FBDE  
                                 STR_15 FDBD                                   STR_31 FD28  
                                 STR_24 FF83                                   STR_16 FDD2  
                                 STR_32 FCFC                                   STR_40 FB6B  
                                 STR_17 FEE3                                   STR_33 FD12  
                                 STR_25 FCD0                                   STR_41 FB99  
                         __CFG_WDTE$OFF 000000                                   STR_50 FEA4  
                                 STR_18 FE8F                                   STR_26 FCBA  
                                 STR_34 FC20                                   STR_42 FBB0  
                                 STR_51 FD54                                   STR_43 FD3E  
                                 STR_27 FCA4                                   STR_35 FC36  
                                 STR_19 FBF4                                   STR_44 FD3E  
                                 STR_52 FF0D                                   STR_60 FE50  
                                 STR_28 FC8E                                   STR_36 FC4C  
                       __end_of___awmod AD9E                                   STR_61 FDE7  
                                 STR_53 FE7A                                   STR_45 FD3E  
                                 STR_29 FC78                                   STR_37 FB82  
                                 STR_70 FD7E                                   STR_62 FF71  
                                 STR_46 FE7A                                   STR_54 FD7E  
                                 STR_38 FBC7                                   STR_63 FEA4  
                                 STR_71 FECE                                   STR_55 FE3B  
                                 STR_47 FDFC                                   STR_39 FAE8  
                                 STR_64 FD54                                   STR_56 FE7A  
                                 STR_72 FFFC                                   STR_80 FFA4  
                                 STR_48 FDE7                                   _ADRPT 003EEC  
                                 STR_57 FD7E                                   STR_81 FFA4  
                                 STR_65 FF0D                                   STR_73 FFF9  
                                 STR_49 FF37                                   STR_66 FE7A  
                                 STR_82 FFA4                                   STR_74 FFB3  
                                 STR_58 FEF8                                   STR_59 FE7A  
                                 STR_75 FFC9                                   STR_67 FD69  
                                 STR_83 FB53                                   STR_92 FAE7  
                                 STR_76 FF4B                                   STR_68 FE26  
                                 STR_77 FF4B                                   STR_69 FE7A  
                                 STR_85 FF5E                                   STR_93 FA69  
                                 STR_94 FFD7                                   STR_78 FFBF  
                                 STR_79 FFBF                                   STR_95 FFDF  
                       __end_of___flmul 52CE                                   STR_98 FFDB  
                                 STR_99 FFE3                         __end_of___flsub CF60  
                       __end_of___fltol A00E                                   u10210 C538  
                                 u10240 C898                                   u10144 9DCC  
                                 u10160 DAD4                                   u10145 9DC6  
                                 u11201 CB90                                   u10315 DAC2  
                                 u10420 C0D2                                   u10316 DAC4  
                                 u10325 DAB2                                   u10510 B8E6  
                                 u10326 DAB4                                   u10095 CFD4  
                                 u12200 B626                                   u10440 C106  
                                 u10265 C8CC                                   u10266 C8CE  
                                 u10258 C89A                                   u12050 A94C  
                       __end_of___lodiv 9D2A                                   u12300 6574  
                                 u13020 839E                                   u13100 7AEC  
                                 u11261 C6AC                                   u10390 9548  
                                 u10630 D8DC                                   u12070 A9C8  
                                 u12150 7E18                                   u11190 9518  
                                 u12207 B618                                   u11271 C6CE  
                                 u12080 BFE6                                   u12320 65C4  
                                 u13040 7810                                   u13200 6F44  
                                 u13120 6DA6                                   u12330 681C  
                                 u12250 64F0                                   u14010 914C  
                                 u10490 B8B2                                   u10730 B4C0  
                                 _U1P1H 003DED                                   u10636 D8DE  
                                 u12260 64F2                                   u12500 1538  
                                 u13220 700E                                   u14020 914E  
                                 u10484 CCBE                                   u14100 064A  
                                 _U1P2H 003DEF                                   u12341 684C  
                                 u10485 CCBA                                   u12350 6862  
                                 u12510 153A                                   u12430 136C  
                                 u13230 702E                                   u13150 6E8E  
                                 u14110 0774                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u12087 BFD8  
                                 u12351 6860                                   u13071 7ABE  
                                 _T3CLK 003FA9                                   u12360 6876  
                                 u12280 6562                                   u13080 7AD4  
                                 u13160 6EE2                                   u13320 2650  
                                 u10808 B54E                                   u10760 B506  
                                 u14120 0776                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u13081 7AD2  
                                 u13241 705E                                   u13225 6FF0  
                                 u12370 687A                                   u12610 1858  
                                 u13090 7AE8                                   u13250 7074  
                                 u13170 6EE4                                   u13330 2652  
                                 _U1P3L 003DF0                                   u13251 7072  
                                 u12460 1426                                   u13260 7088  
                                 u13500 2DC8                                   u13340 2678  
                                 u10748 B4C2                                   u12390 6890  
                                 u12550 17A0                                   u12470 1428  
                                 u13270 708C                                   u13190 6F42  
                                 u10790 B54C                                   _U2P1L 003DD4  
                                 u12720 1CAA                                   u13440 29DA  
                                 u13600 BF02                                   u14240 1118  
                                 u14080 03CC                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u12650 18DA  
                                 u13370 27D2                                   u10778 B508  
                                 u14250 1132                                   _U2P3L 003DD8  
                                 u12900 2400                                   u12820 2176  
                                 u12580 17F4                                   u13460 2B4E  
                                 u13380 27D4                                   u14260 1144  
                                 u12910 2402                                   u13390 27FA  
                                 u14246 111A                                   _T5CLK 003F9D  
                                 u13560 3146                                   u14256 1134  
                       __end_of___lomod A7FA                                   u13490 2DC6  
                                 u14266 1146                                   u13580 32F6  
                                 _T2HLT 003FAD                                   u12880 234A  
                                 u13920 3BE4                                   _T5CON 003F9A  
                                 u13930 3C0E                                   u12980 827C  
                                 u13860 36F8                                   u13925 3BD6  
                                 u12990 82C2                                   u13870 3722  
                                 u13935 3C00                                   _T6CON 003F94  
                                 u13865 36EA                                   u13875 3714  
                                 u12997 82B4                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result D1E0                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR DBCC  
                   __size_of_CRC_IsBusy 0010                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 3482       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR A2D2                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero C0AA                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR B48E                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR D9FE                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                         _DATAEE_ReadByte D38A  
                                 _fabsf BC1E                    __end_of_clear_switch CCCE  
                                 _flags 003E                    __size_of_check_range 0080  
             __size_of_CRC_ReverseValue 00CE                                   _r_cal 0400  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay DB22  
                                 _fputc A928              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha CFA4                                   _fputs C012  
                       __end_of_isdigit D47C                         __end_of_ivln2_h FA61  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand D286  
                                 _width 003A                                   _putch D9C8  
          __end_of_set_ac_charger_relay DAF8                         __end_of_islower D41C  
                       __end_of_isspace CC2E                _INT1_SetInterruptHandler D69A  
                       __end_of_set_dac BB70                         __end_of_isupper D44C  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw0 003FEB                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler D622  
           _UART1_SetRxInterruptHandler D5FA                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf B1DA                         __end_of_tolower C482  
                       __end_of_strncmp 8F52                         __end_of_toupper C3FE  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr D764  
              __size_of_SPI1_Initialize 0016                 __end_of_update_cal_data CBDC  
                       _TMR5_Initialize CE44                   __end_of_ringBufS_init D582  
                       __initialization AFC2                       _UART2_rx_vect_isr D78C  
                          __end_of_cp_h FA69                            __end_of_cp_l FA65  
                          __end_of_atoi 88AC                            __end_of_ctoa C37A  
                          __end_of_main 1292                            __end_of_dtoa 6940  
                          __end_of_nanf CA18                            __end_of_spin FA55  
                          __end_of_stoa 83B8                            __end_of_utoa 7B36  
                          __end_of_xtoa 7146                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize DA2E  
              __size_of_cal_current_10A 00BE                   __end_of_send_lcd_data D7D8  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button D0E6  
                     __end_of_CRC_Start DBB2                _TMR5_SetInterruptHandler D64A  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr DB4C  
                    esr_check@esr_state 00CA                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize D530  
                       _PWM8_Initialize DA44                        _UART1_Initialize CDFC  
                     _UART2_tx_vect_isr D764                      _UART2_Transmit_ISR D504  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan C8F0  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_102 FFEA                                  STR_111 FFED  
                                STR_104 FFEA                                  STR_113 FFED  
                                STR_121 FFF6                                  STR_106 FFF0  
                                STR_123 FFF6                                  STR_108 FFF0  
                                STR_116 FFF3                                  STR_125 FFE7  
                                STR_118 FFF3                                  STR_127 FFE7  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue CFA4  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1021 B43E                                  _RB6PPS 003A0E  
                                i1l1209 A23A                    _start_switch_handler D8F2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize CED4                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright DB06  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                _NVMDAT 0039E3                    __size_of_hid_display 0122  
                                u992_25 DAF2                                  u992_26 DAF4  
                      __end_of___xxtofl 9368   __end_of_ADCC_DischargeSampleCapacitor DB94  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor DB8C  
              __end_of_send_lcd_cmd_dma D96E                         _TMR3_WriteTimer D126  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr D7B4  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize DB42  
                      _UART2_Initialize CA18                                  _WaitMs D250  
                       _conv_raw_result 6004                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge A00E  
                                ___fleq B706                       _ADCC_ThresholdISR C7B8  
                        __CFG_STVREN$ON 000000                                  _crcObj 00D5  
                        _ringBufS_flush C13C                                  _efgtoa 1292  
                                _floorf 7146                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00CE                       dac_spi_control@S2 00CD  
                     dac_spi_control@SB 00CB                       dac_spi_control@SC 00CC  
                    ?_ADCC_ThresholdISR 0021                                  _memset 7B36  
                  __size_of_help_button 0038                                  clear_0 B056  
                                clear_1 B06A                                  clear_2 B07C  
                                clear_3 B088                                  clear_4 B094  
                                clear_5 B0A0                                  clear_6 B0AC  
                                clear_7 B0B8               __end_of_port_data_dma_ptr DB56  
                __size_of_read_cal_data 01CA                                  _printf C954  
                    _eaDogM_WriteString BECA                 __end_of_DATAEE_ReadByte D3BC  
                                _strcpy B564                               ?_ADCC_ISR 0021  
                                _strlen BF70                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize C74E  
                        _PMD_Initialize DA70              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr D78C                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan C954                            __mediumconst F87C  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay CB2C  
                      __end_of_spinners B3AA                        __end_of_vfprintf BD78  
                            _StartTimer D066                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize CE8C  
                     _SYSTEM_Initialize CCCE                              __accesstop 0060  
               __end_of__initialization B0CA                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help DBA4  
                  __end_of_display_info DB9C               __end_of_CLKREF_Initialize DB4C  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer D0E6                   _set_temp_display_help DAD8  
                      _clear_hid_pflags D322                   __end_of_TMR3_CallBack D844  
             __end_of_ADCC_ThresholdISR C822                      __size_of_calc_bsoc 0A6E  
                __end_of_ringBufS_flush C1CE                          __pcstackCOMRAM 0021  
                            ___inthi_sp 1218                              ___intlo_sp 190C  
                          __pidataBANK0 DB7A                            __pidataBANK1 BB70  
                          __pidataBANK2 B7CA             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf BCCC                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                      _DATAEE_WriteByte C822                          ivt0x8_undefint 00AC  
                         __end_of_fputc AA4C                           __end_of_fputs C0AA  
                  _get_ac_charger_relay DB14                           __end_of_srand D2BA  
                 __end_of_TMR5_CallBack D820                           __end_of_putch D9E2  
                  _set_ac_charger_relay DAE8                 __end_of_PWM8_Initialize DA5A  
               __end_of_TMR6_Initialize D55A                       _adc_int_t_handler C482  
                __end_of_PMD_Initialize DA84                              __end_of_bp FA5D  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack D88C  
                 __size_of_clear_switch 004E             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR DB64                   TMR3_ISR@CountCallBack 00C2  
                        _clear_adc_scan DBB2                      __size_of_hid_input 00D6  
                    __end_of_CRC_IsBusy DAD8                  __size_of_mode_lamp_dim 0018  
                      _CRC_ReverseValue B638                _UART2_RxInterruptHandler 00B7  
             __end_of_SYSTEM_Initialize CD1C                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer D166  
                            __pbssBANK0 0060                              __pbssBANK1 01AE  
                            __pbssBANK2 02C0                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
              __end_of_update_hist_data C6E4                              _check_help 8F52  
                         _read_cal_data 9368                 __end_of_conv_raw_result 64C0  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 00BD  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone D5AA                        _DMA1_DMADCNT_ISR DB58  
                       _convert_dac_raw AB6E                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma D3BC  
                 __end_of_wait_lcd_done D8AE                __end_of_cal_current_zero C13C  
      __end_of_TMR3_SetInterruptHandler D69A                            _clear_switch CC80  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler D64A  
                            ??_TMR3_ISR 00D8                 __end_of_ADCC_Initialize C7B8  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler C504  
                            ??_TMR6_ISR 0026                       __end_of___asfladd C676  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler D712   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler D6EA                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                               _CRCACCH 003963                                 _CRCACCL 003962  
                               _CRCDATH 003961                                 _CRCDATL 003960  
                     _UART1_Receive_ISR D9AA                                 _CRCCON0 003968  
                               _CRCCON1 003969                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan DBB8  
                               u1000_20 9744                                 u1100_28 D7E8  
                               u1030_20 D220                                 u1030_26 D222  
                               u1023_20 DB1E                                 _CRCXORH 003967  
                               _CRCXORL 003966                                 u1106_48 D878  
                               u1109_28 D80C                                 u1070_24 A696  
                               u1070_25 A692                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR DB34                                 u1064_28 A596  
                               _U1ERRIE 003DFA                                 u1066_20 A5B0  
                               u1066_21 A5AA                      __size_of_set_vterm 001E  
                               u1162_44 C4EA                                 u1162_45 C4E4  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1098_48 D854  
                               u1375_20 46AA                                 u1382_28 D830  
                               u1377_20 4774                       _CRC_8BitDataWrite DA84  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control C584  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _NVMADRH 0039E1                                 _NVMADRL 0039E0  
                     __end_of_calc_bsoc 4AA4                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _NVMCON2 0039E6  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch D4AA  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer D126  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one DAC8              __end_of_set_load_relay_two DAB8  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 9A24                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim D9FE                                 __Lparam 0000  
              __end_of_UART1_Initialize CE44                       __end_of_hid_input B564  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 83B8  
                               ___fladd 52CE                                 ___aomod 8AF2  
                               ___fldiv 5A8A                                 ___awdiv A42A  
                               ___flneg CDB4                                 ___awmod AC86  
                               ___flmul 4AA4                                 ___flsub CF1A  
                               ___fltol 9E9C                                 ___lodiv 9BAA  
                               ___lomod A6BA               __end_of_UART1_Receive_ISR D9C8  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display B2C4                                 __pcinit AFC2  
              __end_of_mode_lamp_bright DB14                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand DAF8  
                               __ramtop 2000               __end_of_CRC_8BitDataWrite DA96  
                               __ptext0 0000                                 __ptext1 C676  
                               __ptext2 CB86                                 __ptext3 CA78  
                               __ptext4 D8F2                                 __ptext5 D286  
                               __ptext6 D2BA                                 __ptext7 D2EE  
                               __ptext8 AB6E                                 __ptext9 BABA  
                     __end_of_esr_check 80FA                       _UART2_Receive_ISR D912  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize DA5A                            __size_of_abs 0046  
                               us706999 8622                                 us802999 9D14  
                          __size_of_pad 0114                                 us717999 8D20  
                     __end_of_init_bsoc 8AF2                                 _isalpha CF60  
                               us807999 A7EA                                 _isdigit D44C  
                               _ivln2_h FA5D                               _T3CONbits 003FA6  
                               _mode_sw 00CF                       __end_of_lp_filter 96EE  
                               _islower D3EC                                 _isspace CBDC  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac BABA                __end_of_UART2_Initialize CA78  
                               _isupper D41C                               _CRC_Start DBAC  
            __size_of_SYSTEM_Initialize 004E                                 _sprintf B0D0  
                               _tolower C3FE                   __size_of_display_help 0008  
                               _utctime 0096                 __end_of_convert_dac_raw AC86  
                 __size_of_display_info 0008                                 _strncmp 8D32  
                               _toupper C37A                    end_of_initialization B0CA  
             __size_of_convert_adc_data 00B8                               _SCANHADRH 00397A  
                             _SCANHADRL 003979                               _SCANHADRU 00397B  
                             _SCANLADRH 003977                               _SCANLADRL 003976  
                    _check_enter_button D0A6                               _SCANLADRU 003978  
                     __end_of_set_dac_a D322                       __end_of_set_dac_b D2EE  
                             i1u1403_20 A230     __end_of_UART2_SetRxInterruptHandler D5FA  
           _UART2_SetRxInterruptHandler D5D2                               i2u1171_48 D778  
                             i2u1173_48 D7A0                               i2u1165_48 D4F0  
               check_day_time@day_delay 0041                               i2u1167_48 C7EE  
                             i2u1167_49 C802                               i2u1169_48 D750  
                     __end_of_set_vterm D98C                       __end_of_vfpfcnvrt 3482  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd DBC4  
             __end_of_UART2_Receive_ISR D932                          wdtdelay@dcount 009A  
               __end_of_dac_spi_control C5FE             __size_of_current_sensor_cal 0BB4  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc DBCA                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler D672                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler D622                            _display_help DB9C  
                 _TMR5_InterruptHandler 00A5                            _display_info DB94  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags D356  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler D73A  
           _ADCC_SetADIInterruptHandler D712                              _update_lcd AEB2  
                       _calc_model_data 6940                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc CA78  
              __end_of_DATAEE_WriteByte C88A                         _DMA1_Initialize C6E4  
                   __end_of_check_range C584                              _start_bsoc D8D0  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize DA2E  
                 __end_of_get_vterm_ptr D4AA                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                __end_of_CRC_ReverseValue B706  
                        __end_of_WaitMs D286            __end_of_INTERRUPT_Initialize C8F0  
                            _vterm_dump A7FA                          __end_of___flge A170  
                        __end_of___fleq B7CA                         _cal_current_10A B88A  
  __end_of_INT0_DefaultInterruptHandler DBD8   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler DBD6              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize CB2C                           __pidataBIGRAM 74B2  
                        __end_of_efgtoa 24D6              __size_of_CRC_8BitDataWrite 0012  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 74B2             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 7E22  
                        __end_of_printf C9B6                __end_of_DMA1_DMADCNT_ISR DB62  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack D868  
                        __end_of_strcpy B638                          __end_of_strlen C012  
                   start_initialization AFC2                 __size_of_write_cal_data 0158  
  __end_of_TMR5_DefaultInterruptHandler D250   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler D218         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs CF1A                   __end_of_INT1_CallBack D7FC  
             __size_of_set_display_info 001E                             __end_of_pad AEB2  
                  __size_of_Default_ISR 0006                 __size_of_CRC_Initialize 0092  
                  __end_of_send_lcd_cmd D066                          _switch_handler A578  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 9A24  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR DB42  
                         _uart2TxBuffer 02C0                          _DMA1_DMAOR_ISR DB70  
                   __end_of_hid_display AB6E              __end_of_send_port_data_dma CC80  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6         __end_of_CRC_CalculatedResultGet 9E9C  
                             _TimerDone D582                           _ringBufS_init D55A  
                           __pdataBANK0 00F1                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize D38A  
              __size_of_update_cal_data 0056                 __end_of_calc_model_data 6D8C  
                         _send_lcd_data D7B4                     __end_of_help_button D218  
       __end_of_eaDogM_WriteStringAtPos BECA                     __end_of_BVSOC_TABLE F94D  
                             ___asfladd C5FE                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 0942                 __end_of_DMA1_Initialize C74E  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 003A  
                           _check_range C504        __end_of_INT0_SetInterruptHandler D6EA  
                         __pcstackBANK0 00D8                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler A6BA  
                           _CRCCON0bits 003968                             _CRCCON1bits 003969  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize DA44  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T F9DD                        _convert_adc_data BA02  
                             _calc_bsoc 4036               __size_of_ringBufS_put_dma 00AA  
                          _init_display B1DA                  __end_of_DMA1_DMAOR_ISR DB7A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_cal_current_10A B948                 __end_of_DMA2_Initialize CB86  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize C1CE  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set DBBE  
                         __pmediumconst F87C                               __ptext100 8638  
                             __ptext101 CBDC                               __ptext110 D582  
                             __ptext102 D44C                               __ptext111 D066  
                             __ptext103 D96E                               __ptext200 DB70  
                             __ptext120 9164                               __ptext112 DB94  
                             __ptext104 DAD8                               __ptext201 0000  
                             __ptext121 5A8A                               __ptext113 DB9C  
                             __ptext105 D98C                               __ptext130 CCCE  
                             __ptext122 A00E                               __ptext114 D0A6  
                             __ptext106 D9FE                               __ptext131 CA18  
                             __ptext123 6940                               __ptext115 9A24  
                             __ptext107 DB06                               __ptext140 CE8C  
                             __ptext132 D5AA                               __ptext124 DBC4  
                             __ptext116 BC1E                               __ptext108 CFA4  
                             __ptext141 D672                               __ptext133 D5D2  
                             __ptext125 D8D0                               __ptext117 6004  
                             __ptext109 D1E0                               __ptext150 D356  
                             __ptext142 DA16                               __ptext134 CDFC  
                             __ptext126 9532                               __ptext118 C9B6  
                             __ptext151 D69A                               __ptext143 DA2E  
                             __ptext135 D5FA                               __ptext127 CF1A  
                             __ptext119 D8AE                               __ptext160 D168  
                             __ptext152 D6C2                               __ptext144 DA44  
                             __ptext136 D530                               __ptext128 52CE  
                             __ptext161 D7D8                               __ptext153 CB2C  
                             __ptext145 DA70                               __ptext137 D622  
                             __ptext129 4AA4                               __ptext170 DB14  
                             __ptext162 DBD2                               __ptext154 C6E4  
                             __ptext146 C1CE                               __ptext138 CE44  
                             __ptext171 A170                               __ptext163 A578  
                             __ptext155 C260                               __ptext147 DA5A  
                             __ptext139 D64A                               __ptext180 D844  
                             __ptext172 D126                               __ptext164 B3AC  
                             __ptext156 DB42                               __ptext148 C88A  
                             __ptext181 DBD6                               __ptext173 D820  
                             __ptext165 D0E6                               __ptext157 C74E  
                             __ptext149 DBA4                               __ptext190 D764  
                             __ptext182 DBCC                               __ptext174 DBD4  
                             __ptext166 D7FC                               __ptext158 D6EA  
                             __ptext191 D504                               __ptext183 D4D8  
                             __ptext175 4036                               __ptext167 D218  
                             __ptext159 D712                               __ptext192 D78C  
                             __ptext184 C482                               __ptext176 CC2E  
                             __ptext168 96EE                               __ptext193 D912  
                             __ptext185 DBD8                               __ptext177 DB4C  
                             __ptext169 DAE8                               __ptext194 D9E4  
                             __ptext186 DBDA                               __ptext178 C5FE  
                             __ptext195 D868                               __ptext187 C7B8  
                             __ptext179 DB24                               __ptext196 CD1C  
                             __ptext188 D73C                               __ptext197 DB34  
                             __ptext189 D9AA                               __ptext198 DB58  
                             __ptext199 DB64                               _hid_input B48E  
                    __end_of_StartTimer D0A6                      _set_load_relay_one DAB8  
                    _set_load_relay_two DAA8                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR D4D8                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7E22  
               __size_of_get_raw_result 0022                          __size_of_fabsf 00AE  
                             _init_bsoc 88AC                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                __size_of_DATAEE_ReadByte 0032  
                             _lp_filter 9532                             _hid_display AA4C  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize C88A                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR DB24                                _INT1_ISR D168  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _SCANCON0 00397C  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _SCANTRIG 00397D                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01D7                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a D2EE  
                             _set_dac_b D2BA                               _ring_buf1 03A4  
                             _ring_buf2 04A7                                _PIR0bits 0039A0  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack D820  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm D96E  
                   __size_of_update_lcd 0110                             _help_button D1E0  
                              _TMR3_ISR A170                             _BVSOC_TABLE F87D  
                              _TMR5_ISR B3AC                                _TMR6_ISR D9E4  
                             _port_data 05FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 24D6                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack D7FC  
                            _ADCON0bits 003EF8                      __end_of_check_help 9164  
                             _start_lcd DBBE                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack D868  
                        _write_cal_data A2D2                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc DBC4  
                      _set_display_info D98C                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                          _CRC_Initialize C260  
                           _INTCON0bits 003FD2                               copy_data0 AFD6  
                             copy_data1 AFFC                               copy_data2 B01E  
                             copy_data3 B040        __size_of_CRC_CalculatedResultGet 0172  
              _INT0_SetInterruptHandler D6C2                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler D5D2             _UART2_SetTxInterruptHandler D5AA  
                          _uart1RxCount 00D3                            _uart2RxCount 00D0  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 4036  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done D88C  
                          _send_lcd_cmd D026                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler DBDA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch D4D6                 __size_of_check_day_time 01A0  
                __end_of_write_cal_data A42A                   __end_of_DMA1_DMAA_ISR DB6E  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 9164  
                __end_of_CRC_Initialize C2F2                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand DB06                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 C584                                __ptext11 9368  
                              __ptext20 88AC                                __ptext12 D38A  
                              __ptext21 B948                                __ptext13 D3BC  
                              __ptext30 3482                                __ptext22 AA4C  
                              __ptext14 B1DA                                __ptext31 A2D2  
                              __ptext23 B48E                                __ptext15 D7B4  
                              __ptext40 DB8C                                __ptext32 C822  
                              __ptext24 7E22                                __ptext16 CFE6  
                              __ptext41 B2C4                                __ptext33 DBAC  
                              __ptext25 D1A6                                __ptext17 D026  
                              __ptext50 8F52                                __ptext42 D4AA  
                              __ptext34 DAC8                                __ptext26 DB84  
                              __ptext18 D932                                __ptext51 A7FA  
                              __ptext43 CC80                                __ptext35 9D2A  
                              __ptext27 DAA8                                __ptext19 D55A  
                              __ptext60 CD6A                                __ptext52 B0D0  
                              __ptext44 DBB2                                __ptext36 B638  
                              __ptext28 DAB8                                __ptext61 BECA  
                              __ptext53 D47C                                __ptext45 C0AA  
                              __ptext37 DA84                                __ptext29 DAF8  
                              __ptext70 C37A                                __ptext62 DBB8  
                              __ptext54 D250                                __ptext46 B88A  
                              __ptext38 C8F0                                __ptext71 D3EC  
                              __ptext63 DBBE                                __ptext55 AEB2  
                              __ptext47 C504                                __ptext39 DA96  
                              __ptext80 D41C                                __ptext72 CF60  
                              __ptext64 C13C                                __ptext56 BE22  
                              __ptext48 BA02                                __ptext81 B564  
                              __ptext73 77F6                                __ptext65 7B36  
                              __ptext57 D950                                __ptext49 D322  
                              __ptext90 CED4                                __ptext82 7146  
                              __ptext74 A6BA                                __ptext66 C954  
                              __ptext58 D88C                                __ptext91 8AF2  
                              __ptext83 988E                                __ptext75 9BAA  
                              __ptext67 BCCC                                __ptext59 CAD2  
                              __ptext92 83B8                                __ptext84 9E9C  
                              __ptext76 8D32                                __ptext68 24D6  
                              __ptext93 C2F2                                __ptext85 CDB4  
                              __ptext77 80FA                                __ptext69 6D8C  
                              __ptext94 AD9E                                __ptext86 B706  
                              __ptext78 1292                                __ptext95 BF70  
                              __ptext87 AC86                                __ptext79 C3FE  
                              __ptext96 C012                                __ptext88 A42A  
                              __ptext97 A928                                __ptext89 64C0  
                              __ptext98 D9C8                                __ptext99 BD78  
                      __size_of_isupper 0030                   __end_of_read_cal_data 9532  
                              us1224999 64DA                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1305999 785C  
                              us1314999 6E0C                                us1293999 810C  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma BD78                    __end_of_Volts_to_SOC BA02  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 1292                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                            _CRC_IsBusy DAC8                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma D3EC  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00AE                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion DAA8  
                              _spi_link 0060                                _wdtdelay CAD2  
            __end_of_UART2_Transmit_ISR D530                                _spinners B2C4  
                              _vfprintf BCCC                __end_of_convert_adc_data BABA  
             __size_of_update_hist_data 006E              __end_of_PWM8_LoadDutyValue CFE6  
  __end_of_TMR3_DefaultInterruptHandler DBD6   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler DBD4    __end_of_INT1_DefaultInterruptHandler DBD4  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler DBD2  
                    _send_port_data_dma CC2E                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00D4  
                        _get_raw_result D8AE                             _NVMCON1bits 0039E5  
                           _uart2TxHead 00D2                             _uart2RxTail 00D1  
                             spinners@s 0074                             _uart2TxTail 0046  
             __size_of_cal_current_zero 0092                            _wait_lcd_set DBB8  
                    _EXT_INT_Initialize D356    __end_of_TMR6_DefaultInterruptHandler CD6A  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler CD1C  
                     _send_lcd_data_dma CD6A    __end_of_ADCC_DefaultInterruptHandler DBDA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler DBD8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long CFE6          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help DAE8                   __end_of_calc_ror_data 9BAA  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString BF70  
                 __end_of_mode_lamp_dim DA16                 __end_of_adc_int_handler DBDC  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd AFC2  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc CAD2  
                    __end_of_start_bsoc D8F2                          _FVR_Initialize DBA4  
                __end_of_get_raw_result D8D0                        _send_lcd_cmd_dma D950  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00C6  
      __end_of_INT1_SetInterruptHandler D6C2               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma CDB4  
                      ??_DMA1_DMAOR_ISR 0027                 _CRC_CalculatedResultGet 9D2A  
             __end_of_send_lcd_cmd_long D026                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR DBD2          __end_of_PIN_MANAGER_Initialize C260  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump A928  
               _eaDogM_WriteStringAtPos BE22                           _get_vterm_ptr D47C  
                        _check_adc_scan DB84               __size_of_UART2_Initialize 0060  
